<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Security.Cryptography.Pkcs</name>
  </assembly>
  <members>
    <member name="T:System.Security.Cryptography.CryptographicAttributeObject">
      <summary vsli:raw="Contains a type and a collection of values associated with that type.">형식과 해당 형식과 관련된 값의 컬렉션이 들어 있습니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObject.#ctor(System.Security.Cryptography.Oid)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObject&quot; /&gt; class using an attribute represented by the specified &lt;see cref=&quot;T:System.Security.Cryptography.Oid&quot; /&gt; object.">지정된 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 개체가 나타내는 특성을 사용하여 <see cref="T:System.Security.Cryptography.Oid" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="oid" vsli:raw="The attribute to store in this &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObject&quot; /&gt; object.">이 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 개체에 저장할 특성입니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObject.#ctor(System.Security.Cryptography.Oid,System.Security.Cryptography.AsnEncodedDataCollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObject&quot; /&gt; class using an attribute represented by the specified &lt;see cref=&quot;T:System.Security.Cryptography.Oid&quot; /&gt; object and the set of values associated with that attribute represented by the specified &lt;see cref=&quot;T:System.Security.Cryptography.AsnEncodedDataCollection&quot; /&gt; collection.">지정된 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 개체에서 나타내는 특성과 지정된 <see cref="T:System.Security.Cryptography.Oid" /> 컬렉션에서 나타내는 해당 특성의 관련 값 집합을 사용하여 <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="oid" vsli:raw="The attribute to store in this &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObject&quot; /&gt; object.">이 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 개체에 저장할 특성입니다.</param>
      <param name="values" vsli:raw="The set of values associated with the attribute represented by the &lt;paramref name=&quot;oid&quot; /&gt; parameter.">
        <paramref name="oid" /> 매개 변수로 나타내는 특성과 관련된 값 집합입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The collection contains duplicate items.">컬렉션에 중복되는 항목이 들어 있습니다.</exception>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObject.Oid">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Security.Cryptography.Oid&quot; /&gt; object that specifies the object identifier for the attribute.">특성에 대한 개체 식별자를 지정하는 <see cref="T:System.Security.Cryptography.Oid" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="The object identifier for the attribute.">특성에 대한 개체 식별자입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObject.Values">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Security.Cryptography.AsnEncodedDataCollection&quot; /&gt; collection that contains the set of values that are associated with the attribute.">특성과 관련된 값 집합이 포함된 <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="The set of values that is associated with the attribute.">특성과 관련된 값 집합입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.CryptographicAttributeObjectCollection">
      <summary vsli:raw="Contains a set of &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObject&quot; /&gt; objects.">
        <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 개체의 집합을 포함합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObjectCollection&quot; /&gt; class.">
        <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.#ctor(System.Security.Cryptography.CryptographicAttributeObject)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObjectCollection&quot; /&gt; class, adding a specified &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObject&quot; /&gt; to the collection.">지정된 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" />를 컬렉션에 추가하여 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="attribute" vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObject&quot; /&gt; object that is added to the collection.">컬렉션에 추가되는 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 개체입니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.Add(System.Security.Cryptography.AsnEncodedData)">
      <summary vsli:raw="Adds the specified &lt;see cref=&quot;T:System.Security.Cryptography.AsnEncodedData&quot; /&gt; object to the collection.">지정된 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 개체를 컬렉션에 추가합니다.</summary>
      <param name="asnEncodedData" vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.AsnEncodedData&quot; /&gt; object to add to the collection.">컬렉션에 추가할 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the method returns the zero-based index of the added item; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">메서드가 추가된 항목의 인덱스(0부터 시작)를 반환하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asnEncodedData&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asnEncodedData" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="A cryptographic operation could not be completed.">암호화 작업을 완료할 수 없는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.Add(System.Security.Cryptography.CryptographicAttributeObject)">
      <summary vsli:raw="Adds the specified &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObject&quot; /&gt; object to the collection.">지정된 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 개체를 컬렉션에 추가합니다.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObject&quot; /&gt; object to add to the collection.">컬렉션에 추가할 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the method returns the zero-based index of the added item; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">메서드가 추가된 항목의 인덱스(0부터 시작)를 반환하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asnEncodedData&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asnEncodedData" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="A cryptographic operation could not be completed.">암호화 작업을 완료할 수 없는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The specified item already exists in the collection.">지정된 항목이 이미 컬렉션에 있는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.CopyTo(System.Security.Cryptography.CryptographicAttributeObject[],System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObjectCollection&quot; /&gt; collection to an array of &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObject&quot; /&gt; objects.">
        <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 컬렉션을 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 개체 배열에 복사합니다.</summary>
      <param name="array" vsli:raw="An array of &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObject&quot; /&gt; objects that the collection is copied to.">컬렉션이 복사되는 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 개체 배열입니다.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; to which the collection is to be copied.">컬렉션이 복사되는 <paramref name="array" />의 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="One of the arguments provided to a method was not valid.">메서드에 제공된 인수 중 하나가 잘못된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;see langword=&quot;null&quot; /&gt; was passed to a method that does not accept it as a valid argument.">
        <see langword="null" />을 유효한 인수로 받아들이지 않는 메서드에 null이 전달된 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value of an argument was outside the allowable range of values as defined by the called method.">인수 값이 호출된 메서드로 정의한 허용 값 범위를 벗어난 경우</exception>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectCollection.Count">
      <summary vsli:raw="Gets the number of items in the collection.">컬렉션의 항목 수를 가져옵니다.</summary>
      <returns vsli:raw="The number of items in the collection.">컬렉션의 항목 수입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.GetEnumerator">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObjectEnumerator&quot; /&gt; object for the collection.">컬렉션에 대한 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectEnumerator" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the method returns a &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObjectEnumerator&quot; /&gt; object that can be used to enumerate the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">메서드가 컬렉션을 열거하는 데 사용할 수 있는 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectEnumerator" /> 개체를 반환하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectCollection.IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to the collection is synchronized, or thread safe.">해당 컬렉션에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the collection is thread safe; otherwise &lt;see langword=&quot;false&quot; /&gt;.">컬렉션에 대한 액세스가 스레드로부터 안전하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObject&quot; /&gt; object at the specified index in the collection.">컬렉션의 지정된 인덱스에 해당하는 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 개체를 가져옵니다.</summary>
      <param name="index" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value that represents the zero-based index of the &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObject&quot; /&gt; object to retrieve.">검색할 <see cref="T:System.Int32" /> 개체의 인덱스(0부터 시작)를 나타내는 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 값입니다.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObject&quot; /&gt; object at the specified index.">지정된 인덱스의 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.Remove(System.Security.Cryptography.CryptographicAttributeObject)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObject&quot; /&gt; object from the collection.">컬렉션에서 지정된 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 개체를 제거합니다.</summary>
      <param name="attribute" vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObject&quot; /&gt; object to remove from the collection.">컬렉션에서 제거할 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;attribute&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="attribute" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectCollection.SyncRoot">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Object&quot; /&gt; object used to synchronize access to the collection.">컬렉션에 대한 액세스를 동기화하는 데 사용되는 <see cref="T:System.Object" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; object used to synchronize access to the &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObjectCollection&quot; /&gt; collection.">
        <see cref="T:System.Object" /> 개체에 대 한 액세스를 동기화 하는 데는 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 컬렉션입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of this &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObjectCollection&quot; /&gt; collection to an &lt;see cref=&quot;T:System.Array&quot; /&gt; array, starting at a particular index.">특정 인덱스부터 이 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 컬렉션의 요소를 <see cref="T:System.Array" /> 배열에 복사합니다.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; array that is the destination of the elements copied from this &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObjectCollection&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; array must have zero-based indexing.">이 <see cref="T:System.Array" />에서 복사한 요소의 대상인 1차원 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 배열입니다. <see cref="T:System.Array" /> 배열의 인덱스는 0부터 시작해야 합니다.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">
        <paramref name="array" />에서 복사가 시작되는 0부터 시작하는 인덱스입니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObjectCollection&quot; /&gt; collection.">
        <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 컬렉션을 반복하는 열거자를 반환합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object that can be used to iterate through the &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObjectCollection&quot; /&gt; collection.">
        <see cref="T:System.Collections.IEnumerator" /> 컬렉션을 반복하는 데 사용할 수 있는 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.CryptographicAttributeObjectEnumerator">
      <summary vsli:raw="Provides enumeration functionality for the &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObjectCollection&quot; /&gt; collection. This class cannot be inherited.">
        <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 컬렉션의 열거 기능을 제공합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectEnumerator.Current">
      <summary vsli:raw="Gets the current &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObject&quot; /&gt; object from the &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObjectCollection&quot; /&gt; collection.">
        <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 컬렉션에서 현재 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObject&quot; /&gt; object that represents the current cryptographic attribute in the &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObjectCollection&quot; /&gt; collection.">
        <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 컬렉션의 현재 암호화 특성을 나타내는 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectEnumerator.MoveNext">
      <summary vsli:raw="Advances the enumeration to the next &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObject&quot; /&gt; object in the &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObjectCollection&quot; /&gt; collection.">열거형을 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 컬렉션의 다음 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 개체로 이동합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the enumeration successfully moved to the next &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObject&quot; /&gt; object; &lt;see langword=&quot;false&quot; /&gt; if the enumerator is at the end of the enumeration.">열거형을 다음 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 개체로 이동하면 <see langword="true" />이고, 열거자가 열거형의 끝에 있으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectEnumerator.Reset">
      <summary vsli:raw="Resets the enumeration to the first &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObject&quot; /&gt; object in the &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObjectCollection&quot; /&gt; collection.">열거형을 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 컬렉션의 첫 번째 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 개체로 다시 설정합니다.</summary>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectEnumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="Gets the current &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObject&quot; /&gt; object from the &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObjectCollection&quot; /&gt; collection.">
        <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 컬렉션에서 현재 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObject&quot; /&gt; object that represents the current cryptographic attribute in the &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObjectCollection&quot; /&gt; collection.">
        <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 컬렉션의 현재 암호화 특성을 나타내는 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier&quot; /&gt; class defines the algorithm used for a cryptographic operation.">
        <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> 클래스는 암호화 작업에 사용되는 알고리즘을 정의합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor&quot; /&gt; constructor creates an instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier&quot; /&gt; class by using a set of default parameters.">
        <see cref="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor" /> 생성자는 기본 매개 변수 집합을 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> 클래스의 인스턴스를 만듭니다.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="A cryptographic operation could not be completed.">암호화 작업을 완료할 수 없는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor(System.Security.Cryptography.Oid)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor(System.Security.Cryptography.Oid)&quot; /&gt; constructor creates an instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier&quot; /&gt; class with the specified algorithm identifier.">
        <see cref="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor(System.Security.Cryptography.Oid)" /> 생성자는 지정된 알고리즘 식별자를 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> 클래스의 인스턴스를 만듭니다.</summary>
      <param name="oid" vsli:raw="An object identifier for the algorithm.">알고리즘에 대한 개체 식별자입니다.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="A cryptographic operation could not be completed.">암호화 작업을 완료할 수 없는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor(System.Security.Cryptography.Oid,System.Int32)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor(System.Security.Cryptography.Oid,System.Int32)&quot; /&gt; constructor creates an instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier&quot; /&gt; class with the specified algorithm identifier and key length.">
        <see cref="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor(System.Security.Cryptography.Oid,System.Int32)" /> 생성자는 지정된 알고리즘 식별자와 키 길이를 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> 클래스의 인스턴스를 만듭니다.</summary>
      <param name="oid" vsli:raw="An object identifier for the algorithm.">알고리즘에 대한 개체 식별자입니다.</param>
      <param name="keyLength" vsli:raw="The length, in bits, of the key.">키의 길이(비트 단위)입니다.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="A cryptographic operation could not be completed.">암호화 작업을 완료할 수 없는 경우</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.KeyLength">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.KeyLength&quot; /&gt; property sets or retrieves the key length, in bits. This property is not used for algorithms that use a fixed key length.">
        <see cref="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.KeyLength" /> 속성은 키 길이(비트 단위)를 설정하거나 검색합니다. 고정된 키 길이를 사용하는 알고리즘에서는 이 속성이 사용되지 않습니다.</summary>
      <returns vsli:raw="An int value that represents the key length, in bits.">키 길이(비트 단위)를 나타내는 int 값입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.Oid">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.Oid&quot; /&gt; property sets or retrieves the &lt;see cref=&quot;T:System.Security.Cryptography.Oid&quot; /&gt; object that specifies the object identifier for the algorithm.">
        <see cref="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.Oid" /> 속성은 알고리즘에 대한 개체 식별자를 지정하는 <see cref="T:System.Security.Cryptography.Oid" /> 개체를 설정하거나 검색합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Security.Cryptography.Oid&quot; /&gt; object that represents the algorithm.">
        <see cref="T:System.Security.Cryptography.Oid" /> 알고리즘을 나타내는 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.Parameters">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.Parameters&quot; /&gt; property sets or retrieves any parameters required by the algorithm.">
        <see cref="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.Parameters" /> 속성은 알고리즘에 필요한 모든 매개 변수를 설정하거나 검색합니다.</summary>
      <returns vsli:raw="An array of byte values that specifies any parameters required by the algorithm.">알고리즘에 필요한 모든 매개 변수를 지정하는 바이트 값 배열입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.CmsRecipient">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipient&quot; /&gt; class defines the recipient of a CMS/PKCS #7 message.">
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 클래스는 CMS/PKCS #7 메시지의 수신자를 정의합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipient.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipient&quot; /&gt; class with a specified certificate and recipient identifier type, using the default encryption mode for the public key algorithm.">공개 키 알고리즘에 대해 기본 암호화 모드를 사용하여 지정된 인증서와 수신자 식별자 유형으로 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="recipientIdentifierType" vsli:raw="The scheme to use for identifying which recipient certificate was used.">사용된 수신자 인증서를 식별하는 데 사용할 체계입니다.</param>
      <param name="certificate" vsli:raw="The certificate to use when encrypting for this recipient.">이 수신자에게 맞게 암호화할 때 사용할 인증서입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;certificate&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="certificate" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The &lt;paramref name=&quot;recipientIdentifierType&quot; /&gt; value is not supported.">
        <paramref name="recipientIdentifierType" /> 값은 지원되지 않습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipient.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.RSAEncryptionPadding)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipient&quot; /&gt; class with a specified RSA certificate, RSA encryption padding, and subject identifier.">지정된 RSA 인증서, RSA 암호화 패딩 및 주제 식별자를 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="recipientIdentifierType" vsli:raw="The scheme to use for identifying which recipient certificate was used.">사용된 수신자 인증서를 식별하는 데 사용할 체계입니다.</param>
      <param name="certificate" vsli:raw="The certificate to use when encrypting for this recipient.">이 수신자에게 맞게 암호화할 때 사용할 인증서입니다.</param>
      <param name="rsaEncryptionPadding" vsli:raw="The RSA padding mode to use when encrypting for this recipient.">이 수신자에 맞게 암호화할 때 사용할 RSA 패딩 모드입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;certificate&quot; /&gt; or &lt;paramref name=&quot;rsaEncryptionPadding&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="certificate" /> 또는 <paramref name="rsaEncryptionPadding" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The &lt;paramref name=&quot;certificate&quot; /&gt; parameter public key is not recognized as an RSA public key.">
        <paramref name="certificate" /> 매개 변수 공개 키가 RSA 공개 키로 인식되지 않습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipient.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipient&quot; /&gt; class with a specified certificate, using the default encryption mode for the public key algorithm and an &lt;see cref=&quot;F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.IssuerAndSerialNumber&quot; /&gt; subject identifier.">공개 키 알고리즘과 <see cref="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.IssuerAndSerialNumber" /> 주체 식별자에 대해 기본 암호화 모드를 사용하여 지정된 인증서로 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="certificate" vsli:raw="The certificate to use when encrypting for this recipient.">이 수신자에게 맞게 암호화할 때 사용할 인증서입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;certificate&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="certificate" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipient.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.RSAEncryptionPadding)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipient&quot; /&gt; class with a specified RSA certificate and RSA encryption padding, using an &lt;see cref=&quot;F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.IssuerAndSerialNumber&quot; /&gt; subject identifier.">
        <see cref="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.IssuerAndSerialNumber" /> 주제 식별자를 사용하여 지정된 RSA 인증서와 RSA 암호화 패딩으로 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="certificate" vsli:raw="The certificate to use when encrypting for this recipient.">이 수신자에게 맞게 암호화할 때 사용할 인증서입니다.</param>
      <param name="rsaEncryptionPadding" vsli:raw="The RSA padding mode to use when encrypting for this recipient.">이 수신자에 맞게 암호화할 때 사용할 RSA 패딩 모드입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;certificate&quot; /&gt; or &lt;paramref name=&quot;rsaEncryptionPadding&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="certificate" /> 또는 <paramref name="rsaEncryptionPadding" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The &lt;paramref name=&quot;certificate&quot; /&gt; parameter public key is not recognized as an RSA public key.&#xA;&#xA;-or-&#xA;&#xA;The &lt;paramref name=&quot;recipientIdentifierType&quot; /&gt; value is not supported.">
        <paramref name="certificate" /> 매개 변수 공개 키가 RSA 공개 키로 인식되지 않습니다.
또는
<paramref name="recipientIdentifierType" /> 값은 지원되지 않습니다.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipient.Certificate">
      <summary vsli:raw="Gets the certificate to use when encrypting for this recipient.">이 수신자에 맞게 암호화할 때 사용할 인증서를 가져옵니다.</summary>
      <returns vsli:raw="The certificate to use when encrypting for this recipient.">이 수신자에게 맞게 암호화할 때 사용할 인증서입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipient.RecipientIdentifierType">
      <summary vsli:raw="Gets the scheme to use for identifying which recipient certificate was used.">사용된 수신자 인증서를 식별하는 데 사용할 체계를 가져옵니다.</summary>
      <returns vsli:raw="The scheme to use for identifying which recipient certificate was used.">사용된 수신자 인증서를 식별하는 데 사용할 체계입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipient.RSAEncryptionPadding">
      <summary vsli:raw="Gets the RSA encryption padding to use when encrypting for this recipient.">이 수신자에 맞게 암호화할 때 사용할 RSA 암호화 패딩을 가져옵니다.</summary>
      <returns vsli:raw="The RSA encryption padding to use when encrypting for this recipient.">이 수신자에 대해 암호화할 때 사용할 RSA 암호화 패딩입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; class represents a set of &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipient&quot; /&gt; objects. &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; implements the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; interface.">
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 클래스는 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 개체 집합을 나타냅니다. <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" />는 <see cref="T:System.Collections.ICollection" /> 인터페이스를 구현합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor&quot; /&gt; constructor creates an instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; class.">
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor" /> 생성자는 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 클래스의 인스턴스를 만듭니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor(System.Security.Cryptography.Pkcs.CmsRecipient)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor(System.Security.Cryptography.Pkcs.CmsRecipient)&quot; /&gt; constructor creates an instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; class and adds the specified recipient.">
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor(System.Security.Cryptography.Pkcs.CmsRecipient)" /> 생성자는 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 클래스의 인스턴스를 만들고 지정된 수신자를 추가합니다.</summary>
      <param name="recipient" vsli:raw="An instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipient&quot; /&gt; class that represents the specified CMS/PKCS #7 recipient.">지정된 CMS/PKCS #7 수신자를 나타내는 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 클래스의 인스턴스입니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)&quot; /&gt; constructor creates an instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; class and adds recipients based on the specified subject identifier and set of certificates that identify the recipients.">
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)" /> 생성자는 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 클래스의 인스턴스를 만들고 수신자를 식별하는 인증서 집합과 지정된 주체 식별자를 기준으로 수신자를 추가합니다.</summary>
      <param name="recipientIdentifierType" vsli:raw="A member of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SubjectIdentifierType&quot; /&gt; enumeration that specifies the type of subject identifier.">주체 식별자의 형식을 지정하는 <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> 열거형의 멤버입니다.</param>
      <param name="certificates" vsli:raw="An &lt;see cref=&quot;T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection&quot; /&gt; collection that contains the certificates that identify the recipients.">수신자를 식별하는 인증서가 포함된 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> 컬렉션입니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Add(System.Security.Cryptography.Pkcs.CmsRecipient)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Add(System.Security.Cryptography.Pkcs.CmsRecipient)&quot; /&gt; method adds a recipient to the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; collection.">
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Add(System.Security.Cryptography.Pkcs.CmsRecipient)" /> 메서드는 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 컬렉션에 수신자를 추가합니다.</summary>
      <param name="recipient" vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipient&quot; /&gt; object that represents the recipient to add to the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; collection.">
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 컬렉션에 추가할 수신자를 나타내는 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 개체입니다.</param>
      <returns vsli:raw="If the method succeeds, the method returns an &lt;see cref=&quot;T:System.Int32&quot; /&gt; value that represents the zero-based position where the recipient is to be inserted.  &#xA;  &#xA; If the method fails, it throws an exception.">메서드가 성공하면 이 메서드는 수신자의 삽입 위치(0부터 시작)를 나타내는 <see cref="T:System.Int32" /> 값을 반환합니다.  
메서드가 실패하면 예외가 throw됩니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;recipient&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="recipient" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.CopyTo(System.Array,System.Int32)&quot; /&gt; method copies the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; collection to an array.">
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.CopyTo(System.Array,System.Int32)" /> 메서드는 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 컬렉션을 배열에 복사합니다.</summary>
      <param name="array" vsli:raw="An &lt;see cref=&quot;T:System.Array&quot; /&gt; object to which the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; collection is to be copied.">
        <see cref="T:System.Array" /> 컬렉션이 복사되는 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 개체입니다.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; where the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; collection is copied.">
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 컬렉션이 복사되는 <paramref name="array" />의 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is not large enough to hold the specified elements.  &#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;array&quot; /&gt; does not contain the proper number of dimensions.">
        <paramref name="array" />가 지정된 요소를 보유할 수 있을 정도로 크지 않은 경우  

또는 

<paramref name="array" />의 차수가 적합하지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is outside the range of elements in &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="index" />가 <paramref name="array" />의 요소 범위를 벗어난 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.CopyTo(System.Security.Cryptography.Pkcs.CmsRecipient[],System.Int32)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.CopyTo(System.Security.Cryptography.Pkcs.CmsRecipient[],System.Int32)&quot; /&gt; method copies the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; collection to a &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipient&quot; /&gt; array.">
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.CopyTo(System.Security.Cryptography.Pkcs.CmsRecipient[],System.Int32)" /> 메서드는 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 컬렉션을 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 배열에 복사합니다.</summary>
      <param name="array" vsli:raw="An array of &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipient&quot; /&gt; objects where the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; collection is to be copied.">
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 컬렉션이 복사되는 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 개체의 배열입니다.</param>
      <param name="index" vsli:raw="The zero-based index for the array of &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipient&quot; /&gt; objects in &lt;paramref name=&quot;array&quot; /&gt; to which the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; collection is copied.">
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 컬렉션이 복사되는 <paramref name="array" />에 포함된 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 개체의 배열에 대한 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is not large enough to hold the specified elements.  &#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;array&quot; /&gt; does not contain the proper number of dimensions.">
        <paramref name="array" />가 지정된 요소를 보유할 수 있을 정도로 크지 않은 경우  

또는 

<paramref name="array" />의 차수가 적합하지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" />가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is outside the range of elements in &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="index" />가 <paramref name="array" />의 요소 범위를 벗어난 경우</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Count">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Count&quot; /&gt; property retrieves the number of items in the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; collection.">
        <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Count" /> 속성은 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 컬렉션의 항목 수를 검색합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value that represents the number of items in the collection.">컬렉션의 항목 수를 나타내는 <see cref="T:System.Int32" /> 값입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.GetEnumerator">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.GetEnumerator&quot; /&gt; method returns a &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator&quot; /&gt; object for the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; collection.">
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.GetEnumerator" /> 메서드는 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" /> 컬렉션에 대한 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 개체를 반환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator&quot; /&gt; object that can be used to enumerate the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; collection.">
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" /> 컬렉션을 열거하는 데 사용할 수 있는 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.IsSynchronized">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.IsSynchronized&quot; /&gt; property retrieves whether access to the collection is synchronized, or thread safe. This property always returns &lt;see langword=&quot;false&quot; /&gt;, which means that the collection is not thread safe.">
        <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.IsSynchronized" /> 속성은 컬렉션에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지 여부를 검색합니다. 이 속성은 항상 컬렉션이 스레드로부터 안전하지 않음을 나타내는 <see langword="false" />를 반환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value of &lt;see langword=&quot;false&quot; /&gt;, which means that the collection is not thread safe.">컬렉션이 스레드로부터 안전하지 않음을 나타내는 <see langword="false" />의 <see cref="T:System.Boolean" /> 값입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Item(System.Int32)">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Item(System.Int32)&quot; /&gt; property retrieves the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipient&quot; /&gt; object at the specified index in the collection.">
        <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Item(System.Int32)" /> 속성은 컬렉션의 지정된 인덱스에 있는 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 개체를 검색합니다.</summary>
      <param name="index" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value that represents the index in the collection. The index is zero based.">컬렉션의 인덱스를 나타내는 <see cref="T:System.Int32" /> 값입니다. 인덱스는 0부터 시작합니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipient&quot; /&gt; object at the specified index.">지정된 인덱스의 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 개체입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value of an argument was outside the allowable range of values as defined by the called method.">인수 값이 호출된 메서드로 정의한 허용 값 범위를 벗어난 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Remove(System.Security.Cryptography.Pkcs.CmsRecipient)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Remove(System.Security.Cryptography.Pkcs.CmsRecipient)&quot; /&gt; method removes a recipient from the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; collection.">
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Remove(System.Security.Cryptography.Pkcs.CmsRecipient)" /> 메서드는 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 컬렉션에서 수신자를 제거합니다.</summary>
      <param name="recipient" vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipient&quot; /&gt; object that represents the recipient to remove from the collection.">컬렉션에서 제거할 수신자를 나타내는 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;recipient&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="recipient" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.SyncRoot">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.SyncRoot&quot; /&gt; property retrieves an &lt;see cref=&quot;T:System.Object&quot; /&gt; object used to synchronize access to the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; collection.">
        <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.SyncRoot" /> 속성은 <see cref="T:System.Object" /> 컬렉션에 대한 액세스를 동기화하는 데 사용되는 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 개체를 검색합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; object that is used to synchronize access to the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; collection.">
        <see cref="T:System.Object" /> 컬렉션에 대한 액세스를 동기화하는 데 사용되는 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.System#Collections#IEnumerable#GetEnumerator&quot; /&gt; method returns a &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator&quot; /&gt; object for the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; collection.">
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.System#Collections#IEnumerable#GetEnumerator" /> 메서드는 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" /> 컬렉션에 대한 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 개체를 반환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator&quot; /&gt; object that can be used to enumerate the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; collection.">
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" /> 컬렉션을 열거하는 데 사용할 수 있는 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator&quot; /&gt; class provides enumeration functionality for the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; collection. &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator&quot; /&gt; implements the &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; interface.">
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" /> 클래스는 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 컬렉션에 대한 열거형 기능을 제공합니다. <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" />는 <see cref="T:System.Collections.IEnumerator" /> 인터페이스를 구현합니다.</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.Current">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.Current&quot; /&gt; property retrieves the current &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipient&quot; /&gt; object from the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; collection.">
        <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.Current" /> 속성은 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 컬렉션에서 현재 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 개체를 검색합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipient&quot; /&gt; object that represents the current recipient in the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; collection.">
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 컬렉션에서 현재 수신자를 나타내는 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.MoveNext">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.MoveNext&quot; /&gt; method advances the enumeration to the next &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipient&quot; /&gt; object in the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; collection.">
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.MoveNext" /> 메서드는 열거형을 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 컬렉션의 다음 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 개체로 이동합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the enumeration successfully moved to the next &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipient&quot; /&gt; object; &lt;see langword=&quot;false&quot; /&gt; if the enumeration moved past the last item in the enumeration.">열거형을 다음 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 개체로 이동했으면 <see langword="true" />이고, 열거형의 마지막 항목을 지났으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.Reset">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.Reset&quot; /&gt; method resets the enumeration to the first &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipient&quot; /&gt; object in the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; collection.">
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.Reset" /> 메서드는 열거형을 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 컬렉션의 첫 번째 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 개체로 다시 설정합니다.</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.System#Collections#IEnumerator#Current&quot; /&gt; property retrieves the current &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipient&quot; /&gt; object from the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; collection.">
        <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.System#Collections#IEnumerator#Current" /> 속성은 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 컬렉션에서 현재 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 개체를 검색합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipient&quot; /&gt; object that represents the current recipient in the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipientCollection&quot; /&gt; collection.">
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 컬렉션에서 현재 수신자를 나타내는 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.CmsSigner">
      <summary vsli:raw="Represents a potential signer for a CMS/PKCS#7 signed message.">CMS/PKCS#7 서명된 메시지의 잠재적 서명자를 나타냅니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsSigner&quot; /&gt; class with default values.">기본값을 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.CspParameters)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsSigner&quot; /&gt; class from a persisted key.">지속 키에서 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="parameters" vsli:raw="The CSP parameters to describe which signing key to use.">사용할 서명 키를 설명하는 CSP 매개 변수입니다.</param>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases.">.NET Core만 해당: 이 멤버는 지원되지 않습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsSigner&quot; /&gt; class with a specified subject identifier type.">지정된 주체 식별자 유형을 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="signerIdentifierType" vsli:raw="The scheme to use for identifying which signing certificate was used.">사용된 서명 인증서를 식별하는 데 사용하는 체계입니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsSigner&quot; /&gt; class with a specified signer certificate and subject identifier type.">지정된 서명자 인증서 및 주제 식별자 유형을 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="signerIdentifierType" vsli:raw="The scheme to use for identifying which signing certificate was used.">사용된 서명 인증서를 식별하는 데 사용하는 체계입니다.</param>
      <param name="certificate" vsli:raw="The certificate whose private key will be used to sign a message.">메시지에 서명하는 데 사용할 프라이빗 키가 있는 인증서입니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.AsymmetricAlgorithm)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsSigner&quot; /&gt; class with a specified signer certificate, subject identifier type, and private key object.">지정된 서명자 인증서, 주제 식별자 유형 및 프라이빗 키 개체를 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="signerIdentifierType" vsli:raw="One of the enumeration values that specifies the scheme to use for identifying which signing certificate was used.">사용된 서명 인증서를 식별하는 데 사용할 체계를 지정하는 열거형 값 중 하나입니다.</param>
      <param name="certificate" vsli:raw="The certificate whose private key will be used to sign a message.">메시지에 서명하는 데 사용할 프라이빗 키가 있는 인증서입니다.</param>
      <param name="privateKey" vsli:raw="The private key object to use when signing the message.">메시지에 서명할 때 사용할 프라이빗 키 개체입니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsSigner&quot; /&gt; class with a specified signer certificate.">지정된 서명자 인증서가 있는 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="certificate" vsli:raw="The certificate whose private key will be used to sign a message.">메시지에 서명하는 데 사용할 프라이빗 키가 있는 인증서입니다.</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.Certificate">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.CmsSigner.Certificate&quot; /&gt; property sets or retrieves the &lt;see cref=&quot;T:System.Security.Cryptography.X509Certificates.X509Certificate2&quot; /&gt; object that represents the signing certificate.">
        <see cref="P:System.Security.Cryptography.Pkcs.CmsSigner.Certificate" /> 속성은 서명 인증서를 나타내는 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 개체를 설정하거나 검색합니다.</summary>
      <returns vsli:raw="An  &lt;see cref=&quot;T:System.Security.Cryptography.X509Certificates.X509Certificate2&quot; /&gt; object that represents the signing certificate.">
        <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 서명 인증서를 나타내는 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.Certificates">
      <summary vsli:raw="Gets a collection of certificates which are considered with &lt;see cref=&quot;F:System.Security.Cryptography.X509Certificates.X509IncludeOption.WholeChain&quot; /&gt; and &lt;see cref=&quot;F:System.Security.Cryptography.X509Certificates.X509IncludeOption.ExcludeRoot&quot; /&gt;.">
        <see cref="F:System.Security.Cryptography.X509Certificates.X509IncludeOption.WholeChain" /> 및<see cref="F:System.Security.Cryptography.X509Certificates.X509IncludeOption.ExcludeRoot" />로 간주되는 인증서의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A collection of certificates which are considered with &lt;see cref=&quot;F:System.Security.Cryptography.X509Certificates.X509IncludeOption.WholeChain&quot; /&gt; and &lt;see cref=&quot;F:System.Security.Cryptography.X509Certificates.X509IncludeOption.ExcludeRoot&quot; /&gt;.">
        <see cref="F:System.Security.Cryptography.X509Certificates.X509IncludeOption.WholeChain" /> 및<see cref="F:System.Security.Cryptography.X509Certificates.X509IncludeOption.ExcludeRoot" />로 간주 되는 인증서 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.DigestAlgorithm">
      <summary vsli:raw="Gets or sets the algorithm identifier for the hash algorithm to use with the signature.">시그니처와 함께 사용할 해시 알고리즘의 알고리즘 식별자를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The algorithm identifier for the hash algorithm to use with the signature.">서명과 함께 사용할 해시 알고리즘의 알고리즘 식별자입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.IncludeOption">
      <summary vsli:raw="Gets or sets the option indicating how much of a the signer certificate's certificate chain should be embedded in the signed message.">서명된 메시지에 포함되어야 하는 서명자 인증서의 인증서 체인 크기를 나타내는 옵션을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="One of the enumeration values that indicates how much of a the signer certificate's certificate chain should be embedded in the signed message.">서명 된 메시지에 포함 되어야 하는 서명자 인증서의 인증서 체인 크기를 나타내는 열거형 값 중 하나입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="One of the arguments provided to a method was not valid.">메서드에 제공된 인수 중 하나가 잘못된 경우</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.PrivateKey">
      <summary vsli:raw="Gets or sets the private key object to use during signing.">서명하는 동안 사용할 프라이빗 키 개체를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The private key to use during signing, or &lt;see langword=&quot;null&quot; /&gt; to use the private key associated with the &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.CmsSigner.Certificate&quot; /&gt; property.">서명 하는 동안 사용할 개인 키 이거나 <see langword="null" /> , <see cref="P:System.Security.Cryptography.Pkcs.CmsSigner.Certificate" /> 속성과 연결 된 개인 키를 사용 하는 경우입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.SignedAttributes">
      <summary vsli:raw="Gets a collections of attributes to associate with this signature that are also protected by the signature.">이 시그니처와 연결하고, 시그니처로도 보호되는 특성의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A collections of attributes to associate with this signature that are also protected by the signature.">서명으로도 보호 되는이 시그니처와 연결할 특성의 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.SignerIdentifierType">
      <summary vsli:raw="Gets the scheme to use for identifying which signing certificate was used.">사용된 서명 인증서를 식별하는 데 사용하는 체계를 가져옵니다.</summary>
      <returns vsli:raw="The scheme to use for identifying which recipient certificate was used.">사용된 수신자 인증서를 식별하는 데 사용할 체계입니다.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="One of the arguments provided to a method was not valid.">메서드에 제공된 인수 중 하나가 잘못된 경우</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.UnsignedAttributes">
      <summary vsli:raw="Gets a collections of attributes to associate with this signature that are not protected by the signature.">이 시그니처와 연결하지만, 시그니처로 보호되지 않는 특성의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A collections of attributes to associate with this signature that are not protected by the signature.">서명으로 보호 되지 않는이 시그니처와 연결할 특성의 컬렉션입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.ContentInfo">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.ContentInfo&quot; /&gt; class represents the CMS/PKCS #7 ContentInfo data structure as defined in the CMS/PKCS #7 standards document. This data structure is the basis for all CMS/PKCS #7 messages.">
        <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 클래스는 CMS/PKCS #7 표준 문서에 정의된 대로 CMS/PKCS #7 ContentInfo 데이터 구조체를 나타냅니다. 이 데이터 구조체는 모든 CMS/PKCS #7 메시지의 기초로 사용됩니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.ContentInfo.#ctor(System.Byte[])">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.ContentInfo.#ctor(System.Byte[])&quot; /&gt; constructor  creates an instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.ContentInfo&quot; /&gt; class by using an array of byte values as the data and a default &lt;paramref name=&quot;object identifier&quot; /&gt; (OID) that represents the content type.">
        <see cref="M:System.Security.Cryptography.Pkcs.ContentInfo.#ctor(System.Byte[])" /> 생성자는 바이트 배열 값을 콘텐츠 형식을 나타내는 기본 <paramref name="object identifier" />(OID)와 데이터로 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 클래스의 인스턴스를 만듭니다.</summary>
      <param name="content" vsli:raw="An array of byte values that represents the data from which to create the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.ContentInfo&quot; /&gt; object.">
        <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 개체를 만드는 데 사용되는 데이터를 나타내는 바이트 값 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="A null reference  was passed to a method that does not accept it as a valid argument.">null 참조를 유효한 인수로 사용하지 않는 메서드에 해당 참조가 전달되었습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.ContentInfo.#ctor(System.Security.Cryptography.Oid,System.Byte[])">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.ContentInfo.#ctor(System.Security.Cryptography.Oid,System.Byte[])&quot; /&gt; constructor  creates an instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.ContentInfo&quot; /&gt; class by using the specified content type and an array of byte values as the data.">
        <see cref="M:System.Security.Cryptography.Pkcs.ContentInfo.#ctor(System.Security.Cryptography.Oid,System.Byte[])" /> 생성자는 지정된 콘텐츠 형식과 바이트 값 배열을 데이터로 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 클래스의 인스턴스를 만듭니다.</summary>
      <param name="contentType" vsli:raw="An &lt;see cref=&quot;T:System.Security.Cryptography.Oid&quot; /&gt; object that contains an &lt;c&gt;object identifier&lt;/c&gt; (OID) that specifies the content type of the content. This can be data, digestedData, encryptedData, envelopedData, hashedData, signedAndEnvelopedData, or signedData.  For more information, see  Remarks.">콘텐츠의 콘텐츠 형식을 지정하는 <c>개체 식별자</c>(OID)가 포함된 <see cref="T:System.Security.Cryptography.Oid" /> 개체입니다. 이 개체는 data, digestedData, encryptedData, envelopedData, hashedData, signedAndEnvelopedData 또는 signedData일 수 있습니다.  자세한 내용은 설명을 참조하세요.</param>
      <param name="content" vsli:raw="An array of byte values that represents the data from which to create the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.ContentInfo&quot; /&gt; object.">
        <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 개체를 만드는 데 사용되는 데이터를 나타내는 바이트 값 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="A null reference  was passed to a method that does not accept it as a valid argument.">null 참조를 유효한 인수로 사용하지 않는 메서드에 해당 참조가 전달되었습니다.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.ContentInfo.Content">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.ContentInfo.Content&quot; /&gt; property  retrieves the content of the CMS/PKCS #7 message.">
        <see cref="P:System.Security.Cryptography.Pkcs.ContentInfo.Content" /> 속성은 CMS/PKCS #7 메시지의 콘텐츠를 검색합니다.</summary>
      <returns vsli:raw="An array of byte values that represents the content data.">콘텐츠 데이터를 나타내는 바이트 값 배열입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.ContentInfo.ContentType">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.ContentInfo.ContentType&quot; /&gt; property  retrieves the &lt;see cref=&quot;T:System.Security.Cryptography.Oid&quot; /&gt; object that contains the &lt;paramref name=&quot;object identifier&quot; /&gt; (OID)  of the content type of the inner content of the CMS/PKCS #7 message.">
        <see cref="P:System.Security.Cryptography.Pkcs.ContentInfo.ContentType" /> 속성은 CMS/PKCS #7 메시지의 내부 콘텐츠에 대한 콘텐츠 형식의 <paramref name="object identifier" />(OID)가 포함된 <see cref="T:System.Security.Cryptography.Oid" /> 개체를 검색합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Security.Cryptography.Oid&quot; /&gt; object that contains the OID value that represents the content type.">
        <see cref="T:System.Security.Cryptography.Oid" /> 콘텐츠 형식을 나타내는 OID 값이 들어 있는 개체입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.ContentInfo.GetContentType(System.Byte[])">
      <summary vsli:raw="Retrieves the outer content type of an encoded CMS ContentInfo message.">
        <see cref="M:System.Security.Cryptography.Pkcs.ContentInfo.GetContentType(System.Byte[])" /> 정적 메서드는 바이트 값 배열로 나타내는 인코딩된 <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 메시지의 외부 콘텐츠 형식을 검색합니다.</summary>
      <param name="encodedMessage" vsli:raw="An array of byte values that represents the encoded CMS ContentInfo message from which to retrieve the outer content type.">외부 콘텐츠 형식을 검색할 인코딩된 <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 메시지를 나타내는 바이트 값 배열입니다.</param>
      <returns vsli:raw="The outer content type of the specified encoded CMS ContentInfo message.">메서드가 성공하면 지정한 인코딩된 <see cref="T:System.Security.Cryptography.Oid" /> 메시지의 외부 콘텐츠 형식이 포함된 <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 개체가 반환됩니다.  
메서드가 실패하면 예외가 throw됩니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;encodedMessage&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">null 참조를 유효한 인수로 사용하지 않는 메서드에 해당 참조가 전달되었습니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="&lt;paramref name=&quot;encodedMessage&quot; /&gt; cannot be decoded as a valid CMS ContentInfo value.">암호화 작업 동안 오류가 발생한 경우</exception>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.EnvelopedCms">
      <summary vsli:raw="Represents a CMS/PKCS#7 structure for enveloped data.">엔벌로프된 데이터에 대한 CMS/PKCS#7 구조체를 나타냅니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.EnvelopedCms&quot; /&gt; class with default values.">기본값을 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.EnvelopedCms" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.EnvelopedCms&quot; /&gt; class with specified content information.">지정된 콘텐츠 정보를 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.EnvelopedCms" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="contentInfo" vsli:raw="The message content to encrypt.">암호화할 메시지 콘텐츠입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;contentInfo&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="contentInfo" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Security.Cryptography.Pkcs.AlgorithmIdentifier)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.EnvelopedCms&quot; /&gt; class with a specified symmetric encryption algorithm and content information.">지정된 대칭 암호화 알고리즘 및 콘텐츠 정보를 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.EnvelopedCms" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="contentInfo" vsli:raw="The message content to encrypt.">암호화할 메시지 콘텐츠입니다.</param>
      <param name="encryptionAlgorithm" vsli:raw="The identifier for the symmetric encryption algorithm to use when encrypting the message content.">메시지 콘텐츠를 암호화할 때 사용할 대칭 암호화 알고리즘의 식별자입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;contentInfo&quot; /&gt; or &lt;paramref name=&quot;encryptionAlgorithm&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="contentInfo" /> 또는 <paramref name="encryptionAlgorithm" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.Certificates">
      <summary vsli:raw="Gets the collection of certificates associated with the enveloped CMS/PKCS#7 message.">엔벌로프된 CMS/PKCS#7 메시지와 관련된 인증서 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="The collection of certificates associated with the enveloped CMS/PKCS#7 message.">엔벌로프된 CMS/PKCS # 7 메시지와 연결 된 인증서의 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.ContentEncryptionAlgorithm">
      <summary vsli:raw="Gets the identifier of the symmetric encryption algorithm associated with this message.">이 메시지와 연결된 대칭 암호화 알고리즘의 식별자를 가져옵니다.</summary>
      <returns vsli:raw="The identifier of the symmetric encryption algorithm associated with this message.">이 메시지와 연결 된 대칭 암호화 알고리즘의 식별자입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.ContentInfo">
      <summary vsli:raw="Gets the content information for the enveloped CMS/PKCS#7 message.">엔벌로프된 CMS/PKCS#7 메시지에 대한 콘텐츠 정보를 가져옵니다.</summary>
      <returns vsli:raw="The content information for the enveloped CMS/PKCS#7 message.">엔벌로프된 CMS/PKCS # 7 메시지에 대 한 콘텐츠 정보입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decode(System.Byte[])">
      <summary vsli:raw="Decodes an array of bytes as a CMS/PKCS#7 EnvelopedData message.">바이트 배열을 CMS/PKCS#7 EnvelopedData 메시지로 디코딩합니다.</summary>
      <param name="encodedMessage" vsli:raw="The byte array containing the sequence of bytes to decode.">디코딩할 바이트 시퀀스를 포함하는 바이트 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;encodedMessage&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="encodedMessage" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The &lt;paramref name=&quot;encodedMessage&quot; /&gt; parameter was not successfully decoded.">
        <paramref name="encodedMessage" /> 매개 변수가 디코딩되지 않았습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt">
      <summary vsli:raw="Decrypts the contents of the decoded enveloped CMS/PKCS#7 message via any available recipient by searching certificate stores for a matching certificate and key.">인증서 저장소에서 일치하는 인증서 및 키를 검색하여 사용 가능한 모든 받는 사람을 통해 디코딩되고 엔벌로프된 CMS/PKCS#7 메시지의 콘텐츠를 해독합니다.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="A cryptographic operation could not be completed.">암호화 작업을 완료할 수 없는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A method call was invalid for the object's current state.">개체의 현재 상태에서 메서드 호출을 사용할 수 없는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo)">
      <summary vsli:raw="Decrypts the contents of the decoded enveloped CMS/PKCS#7 message via a specified recipient info by searching certificate stores for a matching certificate and key.">인증서 저장소에서 일치하는 인증서 및 키를 검색하여 지정된 받는 사람을 통해 디코딩되고 엔벌로프된 CMS/PKCS#7 메시지의 콘텐츠를 해독합니다.</summary>
      <param name="recipientInfo" vsli:raw="The recipient info to use for decryption.">암호 해독에 사용할 받는 사람 정보입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;recipientInfo&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="recipientInfo" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="A cryptographic operation could not be completed.">암호화 작업을 완료할 수 없는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A method call was invalid for the object's current state.">개체의 현재 상태에서 메서드 호출을 사용할 수 없는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo,System.Security.Cryptography.AsymmetricAlgorithm)">
      <summary vsli:raw="Decrypts the contents of the decoded enveloped CMS/PKCS#7 message via a specified recipient info with a specified private key.">지정된 프라이빗 키를 사용하여 지정된 수신자 정보를 통해 디코딩되고 엔벌로프된 CMS/PKCS#7 메시지의 콘텐츠를 해독합니다.</summary>
      <param name="recipientInfo" vsli:raw="The recipient info to use for decryption.">암호 해독에 사용할 받는 사람 정보입니다.</param>
      <param name="privateKey" vsli:raw="The private key to use to decrypt the recipient-specific information.">받는 사람 관련 정보를 해독하는 데 사용할 프라이빗 키입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;recipientInfo&quot; /&gt; or &lt;paramref name=&quot;privateKey&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="recipientInfo" /> 또는 <paramref name="privateKey" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="A cryptographic operation could not be completed.">암호화 작업을 완료할 수 없는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A method call was invalid for the object's current state.">개체의 현재 상태에서 메서드 호출을 사용할 수 없는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary vsli:raw="Decrypts the contents of the decoded enveloped CMS/PKCS#7 message via a specified recipient info by searching certificate stores and a provided collection for a matching certificate and key.">인증서 저장소와 제공된 컬렉션에서 일치하는 인증서 및 키를 검색하여 지정된 받는 사람을 통해 디코딩되고 엔벌로프된 CMS/PKCS#7 메시지의 콘텐츠를 해독합니다.</summary>
      <param name="recipientInfo" vsli:raw="The recipient info to use for decryption.">암호 해독에 사용할 받는 사람 정보입니다.</param>
      <param name="extraStore" vsli:raw="A collection of certificates to use in addition to the certificate stores for finding a recipient certificate and private key.">받는 사람 인증서와 프라이빗 키를 찾기 위해 인증서 저장소와 함께 사용할 인증서 컬렉션입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;recipientInfo&quot; /&gt; or &lt;paramref name=&quot;extraStore&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="recipientInfo" /> 또는 <paramref name="extraStore" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="A cryptographic operation could not be completed.">암호화 작업을 완료할 수 없는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A method call was invalid for the object's current state.">개체의 현재 상태에서 메서드 호출을 사용할 수 없는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary vsli:raw="Decrypts the contents of the decoded enveloped CMS/PKCS#7 message via any available recipient info by searching certificate stores and a provided collection for a matching certificate and key.">인증서 저장소와 제공된 컬렉션에서 일치하는 인증서 및 키를 검색하여 사용 가능한 모든 받는 사람을 통해 디코딩되고 엔벌로프된 CMS/PKCS#7 메시지의 콘텐츠를 해독합니다.</summary>
      <param name="extraStore" vsli:raw="A collection of certificates to use in addition to the certificate stores for finding a recipient certificate and private key.">받는 사람 인증서와 프라이빗 키를 찾기 위해 인증서 저장소와 함께 사용할 인증서 컬렉션입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;extraStore&quot; /&gt; parameter was &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="extraStore" /> 매개 변수가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="A cryptographic operation could not be completed.">암호화 작업을 완료할 수 없는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A method call was invalid for the object's current state.">개체의 현재 상태에서 메서드 호출을 사용할 수 없는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Encode">
      <summary vsli:raw="Encodes the contents of the enveloped CMS/PKCS#7 message and returns it as a byte array.">엔벌로프된 CMS/PKCS#7 메시지의 콘텐츠를 인코딩하여 바이트 배열로 반환합니다.</summary>
      <returns vsli:raw="A byte array representing the encoded form of the CMS/PKCS#7 message.">CMS/PKCS#7 메시지의 인코딩된 형식을 나타내는 바이트 배열입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A method call was invalid for the object's current state.">개체의 현재 상태에서 메서드 호출을 사용할 수 없는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Encrypt(System.Security.Cryptography.Pkcs.CmsRecipient)">
      <summary vsli:raw="Encrypts the contents of the CMS/PKCS#7 message for a single specified recipient.">지정된 단일 받는 사람에 대해 CMS/PKCS#7 메시지의 콘텐츠를 암호화합니다.</summary>
      <param name="recipient" vsli:raw="The recipient information describing the single recipient of this message.">이 메시지의 단일 수신자를 설명하는 받는 사람 정보입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;recipient&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="recipient" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="A cryptographic operation could not be completed.">암호화 작업을 완료할 수 없는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Encrypt(System.Security.Cryptography.Pkcs.CmsRecipientCollection)">
      <summary vsli:raw="Encrypts the contents of the CMS/PKCS#7 message for one or more recipients.">한 명 이상의 받는 사람에 대해 CMS/PKCS#7 메시지의 콘텐츠를 암호화합니다.</summary>
      <param name="recipients" vsli:raw="A collection describing the recipients for the message.">메시지의 받는 사람을 설명하는 컬렉션입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;recipients&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="recipients" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="A cryptographic operation could not be completed.">암호화 작업을 완료할 수 없는 경우</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.RecipientInfos">
      <summary vsli:raw="Gets a collection that represents the recipients list for a decoded message. The default value is an empty collection.">디코딩된 메시지의 받는 사람 목록을 나타내는 컬렉션을 가져옵니다. 기본값은 빈 컬렉션입니다.</summary>
      <returns vsli:raw="A collection that represents the recipients list for a decoded message. The default value is an empty collection.">디코딩된 메시지의 받는 사람 목록을 나타내는 컬렉션입니다. 기본값은 빈 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.UnprotectedAttributes">
      <summary vsli:raw="Gets the collection of unprotected (unencrypted) attributes associated with the enveloped CMS/PKCS#7 message.">엔벌로프된 CMS/PKCS#7 메시지와 관련된 보호(암호화)되지 않은 특성 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="The collection of unprotected (unencrypted) attributes associated with the enveloped CMS/PKCS#7 message.">엔벌로프된 CMS/PKCS # 7 메시지와 연결 된 보호 되지 않는 (암호화 되지 않은) 특성의 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.Version">
      <summary vsli:raw="Gets the version of the decoded enveloped CMS/PKCS#7 message.">디코딩되고 엔벌로프된 CMS/PKCS#7 메시지의 버전을 가져옵니다.</summary>
      <returns vsli:raw="The version of the decoded enveloped CMS/PKCS#7 message.">디코딩된 엔벌로프된 CMS/PKCS # 7 메시지의 버전입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo&quot; /&gt; class defines key agreement recipient information. Key agreement algorithms typically use the Diffie-Hellman key agreement algorithm, in which the two parties that establish a shared cryptographic key both take part in its generation and, by definition, agree on that key. This is in contrast to key transport algorithms, in which one party generates the key unilaterally and sends, or transports it, to the other party.">
        <see cref="T:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo" /> 클래스는 키 계약 수신자에 대한 정보를 정의합니다. 키 계약 알고리즘에는 일반적으로 Diffie-Hellman 키 계약 알고리즘이 사용됩니다. 이 알고리즘에서는 공유 암호화 키를 설정하는 두 당사자가 모두 키 생성에 참여하고 해당 키에 대해 합의해야 합니다. 이 알고리즘은 한쪽 관련자가 일방적으로 키를 생성하고 이를 다른 관련자에게 보내는 키 전송 알고리즘과 반대입니다.</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Date">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Date&quot; /&gt; property retrieves the date and time of the start of the key agreement protocol by the originator.">
        <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Date" /> 속성은 발신자에 따른 키 계약 프로토콜의 시작 날짜와 시간을 검색합니다.</summary>
      <returns vsli:raw="The date and time of the start of the key agreement protocol by the originator.">발신자에 따른 키 계약 프로토콜의 시작 날짜와 시간입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The recipient identifier type is not a subject key identifier.">받는 사람 식별자 형식은 주체 키 식별자가 아닙니다.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.EncryptedKey">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.EncryptedKey&quot; /&gt; property retrieves the encrypted recipient keying material.">
        <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.EncryptedKey" /> 속성은 암호화된 수신자 키 재료를 검색합니다.</summary>
      <returns vsli:raw="An array of byte values that contain the encrypted recipient keying material.">암호화된 수신자 키 재료가 포함된 바이트 값의 배열입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.KeyEncryptionAlgorithm">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.KeyEncryptionAlgorithm&quot; /&gt; property retrieves the algorithm used to perform the key agreement.">
        <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.KeyEncryptionAlgorithm" /> 속성은 키 계약을 수행하는 데 사용되는 알고리즘을 검색합니다.</summary>
      <returns vsli:raw="The value of the algorithm used to perform the key agreement.">키 계약을 수행하는 데 사용되는 알고리즘의 값입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OriginatorIdentifierOrKey">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OriginatorIdentifierOrKey&quot; /&gt; property retrieves information about the originator of the key agreement for key agreement algorithms that warrant it.">
        <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OriginatorIdentifierOrKey" /> 속성은 이를 보증하는 키 계약 알고리즘에 대한 키 계약 발신자와 관련된 정보를 검색합니다.</summary>
      <returns vsli:raw="An object that contains information about the originator of the key agreement.">키 계약 발신자에 대한 정보가 포함된 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OtherKeyAttribute">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OtherKeyAttribute&quot; /&gt; property retrieves attributes of the keying material.">
        <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OtherKeyAttribute" /> 속성은 키 재료의 특성을 검색합니다.</summary>
      <returns vsli:raw="The attributes of the keying material.">키 재료의 특성입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The recipient identifier type is not a subject key identifier.">받는 사람 식별자 형식은 주체 키 식별자가 아닙니다.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.RecipientIdentifier">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.RecipientIdentifier&quot; /&gt; property retrieves the identifier of the recipient.">
        <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.RecipientIdentifier" /> 속성은 수신자의 식별자를 검색합니다.</summary>
      <returns vsli:raw="The identifier of the recipient.">받는 사람의 식별자입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Version">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Version&quot; /&gt; property retrieves the version of the key agreement recipient. This is automatically set for  objects in this class, and the value  implies that the recipient is taking part in a key agreement algorithm.">
        <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Version" /> 속성은 키 계약 수신자의 버전을 검색합니다. 이 버전은 이 클래스에서 개체에 대해 자동으로 설정됩니다. 이 값은 수신자가 키 계약 알고리즘에 참여하고 있음을 의미합니다.</summary>
      <returns vsli:raw="The version of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo&quot; /&gt; object.">
        <see cref="T:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo" /> 개체의 버전입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo&quot; /&gt; class defines key transport recipient information.        Key transport algorithms typically use the RSA algorithm, in which  an originator establishes a shared cryptographic key with a recipient by generating that key and  then transporting it to the recipient. This is in contrast to key agreement algorithms, in which the two parties that will be using a cryptographic key both take part in its generation, thereby mutually agreeing to that key.">
        <see cref="T:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo" /> 클래스는 키 전송 수신자에 대한 정보를 정의합니다.        키 전송 알고리즘에는 일반적으로 RSA 알고리즘이 사용됩니다. 이 알고리즘에서는 송신자가 공유 암호화 키를 생성하고 수신자에게 전송하여 수신자와의 공유 암호화 키를 설정합니다. 이 알고리즘은 암호화 키를 사용할 두 당사자가 모두 키 생성에 참여하여 해당 키에 대해 서로 합의해야 하는 키 규약 알고리즘과 반대입니다.</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.EncryptedKey">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.EncryptedKey&quot; /&gt; property retrieves the encrypted key for this key transport recipient.">
        <see cref="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.EncryptedKey" /> 속성은 이 키의 전송 수신자에 대한 암호화된 키를 검색합니다.</summary>
      <returns vsli:raw="An array of byte values that represents the encrypted key.">암호화된 키를 나타내는 바이트 값의 배열입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.KeyEncryptionAlgorithm">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.KeyEncryptionAlgorithm&quot; /&gt; property retrieves the key encryption algorithm used to encrypt the content encryption key.">
        <see cref="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.KeyEncryptionAlgorithm" /> 속성은 내용 암호화 키를 암호화하는 데 사용되는 키 암호화 알고리즘을 검색합니다.</summary>
      <returns vsli:raw="An  &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier&quot; /&gt; object that stores the key encryption algorithm identifier.">
        <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> 키 암호화 알고리즘 식별자를 저장 하는 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.RecipientIdentifier">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.RecipientIdentifier&quot; /&gt; property retrieves the subject identifier associated with the encrypted content.">
        <see cref="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.RecipientIdentifier" /> 속성은 암호화된 내용과 관련된 주체 식별자를 검색합니다.</summary>
      <returns vsli:raw="A   &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SubjectIdentifier&quot; /&gt; object that  stores the identifier of the recipient taking part in the key transport.">
        <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifier" /> 키 전송과에서 관련 된 수신자의 식별자를 저장 하는 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.Version">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.Version&quot; /&gt; property retrieves the version of the key transport recipient. The version of the key transport recipient is automatically set for  objects in this class, and the value  implies that the recipient is taking part in a key transport algorithm.">
        <see cref="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.Version" /> 속성은 키 전송 수신자의 버전을 검색합니다. 키 전송 수신자의 버전은 이 클래스의 개체에 대해 자동으로 설정됩니다. 이 값은 수신자가 키 전송 알고리즘에 참여하고 있음을 의미합니다.</summary>
      <returns vsli:raw="An int value that represents the version of the key transport &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfo&quot; /&gt; object.">키 전송 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 개체의 버전을 나타내는 int 값입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12Builder">
      <summary vsli:raw="Enables the creation of PKCS#12 PFX data values. This class cannot be inherited.">PKCS#12 PFX 데이터 값을 만들 수 있습니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.#ctor">
      <summary vsli:raw="Initializes a new value of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs12Builder&quot; /&gt; class.">
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12Builder" /> 클래스의 새 값을 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsEncrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents,System.Byte[],System.Security.Cryptography.PbeParameters)">
      <summary vsli:raw="Add contents to the PFX in an bundle encrypted with a byte-based password from a byte array.">바이트 배열에서 바이트 기반 암호를 사용하여 암호화된 번들의 PFX에 콘텐츠를 추가합니다.</summary>
      <param name="safeContents" vsli:raw="The contents to add to the PFX.">PFX에 추가할 콘텐츠입니다.</param>
      <param name="passwordBytes" vsli:raw="The byte array to use as a password when encrypting the contents.">콘텐츠를 암호화할 때 암호로 사용할 바이트 배열입니다.</param>
      <param name="pbeParameters" vsli:raw="The password-based encryption (PBE) parameters to use when encrypting the contents.">콘텐츠를 암호화할 때 사용할 PBE(암호 기반 암호화) 매개 변수입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;safeContents&quot; /&gt; or &lt;paramref name=&quot;pbeParameters&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="safeContents" /> 또는 <paramref name="pbeParameters" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;safeContents&quot; /&gt; parameter value is already encrypted.">
        <paramref name="safeContents" /> 매개 변수 값이 이미 암호화되어 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The PFX is already sealed (&lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;).">PFX가 이미 봉인되어 있습니다(<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" />는 <see langword="true" />임).</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="&lt;paramref name=&quot;pbeParameters&quot; /&gt; indicates that &lt;see cref=&quot;F:System.Security.Cryptography.PbeEncryptionAlgorithm.TripleDes3KeyPkcs12&quot; /&gt; should be used, which requires &lt;see cref=&quot;T:System.Char&quot; /&gt;-based passwords.">
        <paramref name="pbeParameters" />는 <see cref="T:System.Char" /> 기반 암호가 필요한 <see cref="F:System.Security.Cryptography.PbeEncryptionAlgorithm.TripleDes3KeyPkcs12" />를 사용해야 함을 나타냅니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsEncrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents,System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)">
      <summary vsli:raw="Add contents to the PFX in an bundle encrypted with a byte-based password from a span.">범위에서 바이트 기반 암호를 사용하여 암호화된 번들의 PFX에 콘텐츠를 추가합니다.</summary>
      <param name="safeContents" vsli:raw="The contents to add to the PFX.">PFX에 추가할 콘텐츠입니다.</param>
      <param name="passwordBytes" vsli:raw="The byte span to use as a password when encrypting the contents.">콘텐츠를 암호화할 때 암호로 사용할 바이트 범위입니다.</param>
      <param name="pbeParameters" vsli:raw="The password-based encryption (PBE) parameters to use when encrypting the contents.">콘텐츠를 암호화할 때 사용할 PBE(암호 기반 암호화) 매개 변수입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;safeContents&quot; /&gt; or &lt;paramref name=&quot;pbeParameters&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="safeContents" /> 또는 <paramref name="pbeParameters" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;safeContents&quot; /&gt; parameter value is already encrypted.">
        <paramref name="safeContents" /> 매개 변수 값이 이미 암호화되어 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The PFX is already sealed (&lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;).">PFX가 이미 봉인되어 있습니다(<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" />는 <see langword="true" />임).</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="&lt;paramref name=&quot;pbeParameters&quot; /&gt; indicates that &lt;see cref=&quot;F:System.Security.Cryptography.PbeEncryptionAlgorithm.TripleDes3KeyPkcs12&quot; /&gt; should be used, which requires &lt;see cref=&quot;T:System.Char&quot; /&gt;-based passwords.">
        <paramref name="pbeParameters" />는 <see cref="T:System.Char" /> 기반 암호가 필요한 <see cref="F:System.Security.Cryptography.PbeEncryptionAlgorithm.TripleDes3KeyPkcs12" />를 사용해야 함을 나타냅니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsEncrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents,System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)">
      <summary vsli:raw="Add contents to the PFX in an bundle encrypted with a char-based password from a span.">범위에서 문자 기반 암호를 사용하여 암호화된 번들의 PFX에 콘텐츠를 추가합니다.</summary>
      <param name="safeContents" vsli:raw="The contents to add to the PFX.">PFX에 추가할 콘텐츠입니다.</param>
      <param name="password" vsli:raw="The span to use as a password when encrypting the contents.">콘텐츠를 암호화할 때 암호로 사용할 범위입니다.</param>
      <param name="pbeParameters" vsli:raw="The password-based encryption (PBE) parameters to use when encrypting the contents.">콘텐츠를 암호화할 때 사용할 PBE(암호 기반 암호화) 매개 변수입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;safeContents&quot; /&gt; or &lt;paramref name=&quot;pbeParameters&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="safeContents" /> 또는 <paramref name="pbeParameters" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;safeContents&quot; /&gt; parameter value is already encrypted.">
        <paramref name="safeContents" /> 매개 변수 값이 이미 암호화되어 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The PFX is already sealed (&lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;).">PFX가 이미 봉인되어 있습니다(<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" />는 <see langword="true" />임).</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsEncrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents,System.String,System.Security.Cryptography.PbeParameters)">
      <summary vsli:raw="Add contents to the PFX in an bundle encrypted with a char-based password from a string.">문자열에서 문자 기반 암호를 사용하여 암호화된 번들의 PFX에 콘텐츠를 추가합니다.</summary>
      <param name="safeContents" vsli:raw="The contents to add to the PFX.">PFX에 추가할 콘텐츠입니다.</param>
      <param name="password" vsli:raw="The string to use as a password when encrypting the contents.">콘텐츠를 암호화할 때 암호로 사용할 문자열입니다.</param>
      <param name="pbeParameters" vsli:raw="The password-based encryption (PBE) parameters to use when encrypting the contents.">콘텐츠를 암호화할 때 사용할 PBE(암호 기반 암호화) 매개 변수입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;safeContents&quot; /&gt; or &lt;paramref name=&quot;pbeParameters&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="safeContents" /> 또는 <paramref name="pbeParameters" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;safeContents&quot; /&gt; parameter value is already encrypted.">
        <paramref name="safeContents" /> 매개 변수 값이 이미 암호화되어 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The PFX is already sealed (&lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;).">PFX가 이미 봉인되어 있습니다(<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" />는 <see langword="true" />임).</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsUnencrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents)">
      <summary vsli:raw="Add contents to the PFX without encrypting them.">암호화하지 않고 PFX에 콘텐츠를 추가합니다.</summary>
      <param name="safeContents" vsli:raw="The contents to add to the PFX.">PFX에 추가할 콘텐츠입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;safeContents&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="safeContents" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The PFX is already sealed (&lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;).">PFX가 이미 봉인되어 있습니다(<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" />는 <see langword="true" />임).</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.Encode">
      <summary vsli:raw="Encodes the contents of a sealed PFX and returns it as a byte array.">봉인된 PFX의 콘텐츠를 인코딩하고 바이트 배열로 반환합니다.</summary>
      <returns vsli:raw="A byte array representing the encoded form of the PFX.">PFX의 인코딩된 형식을 나타내는 바이트 배열입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The PFX is not sealed (&lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;).">PFX가 봉인되어 있지 않습니다(<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" />가 <see langword="false" />임).</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed">
      <summary vsli:raw="Gets a value that indicates whether the PFX data has been sealed.">PFX 데이터가 봉인되었는지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="A value that indicates whether the PFX data has been sealed.">PFX 데이터가 봉인 되었는지 여부를 나타내는 값입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.SealWithMac(System.ReadOnlySpan{System.Char},System.Security.Cryptography.HashAlgorithmName,System.Int32)">
      <summary vsli:raw="Seals the PFX against further changes by applying a password-based Message Authentication Code (MAC) over the contents with a password from a span.">범위에 있는 암호를 사용하여 콘텐츠에 대해 암호 기반 MAC(메시지 인증 코드)를 적용하여 PFX를 추가 변경 내용으로부터 봉인합니다.</summary>
      <param name="password" vsli:raw="The password to use as a key for computing the MAC.">MAC를 컴퓨팅하기 위한 키로 사용할 암호입니다.</param>
      <param name="hashAlgorithm" vsli:raw="The hash algorithm to use when computing the MAC.">MAC를 컴퓨팅할 때 사용할 해시 알고리즘입니다.</param>
      <param name="iterationCount" vsli:raw="The iteration count for the Key Derivation Function (KDF) used in computing the MAC.">MAC를 컴퓨팅하는 데 사용하는 KDF(키 파생 함수)의 반복 횟수입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;iterationCount&quot; /&gt; parameter is less than or equal to 0.">
        <paramref name="iterationCount" /> 매개 변수가 0보다 작거나 같습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The PFX is already sealed (&lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;).">PFX가 이미 봉인되어 있습니다(<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" />는 <see langword="true" />임).</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.SealWithMac(System.String,System.Security.Cryptography.HashAlgorithmName,System.Int32)">
      <summary vsli:raw="Seals the PFX against further changes by applying a password-based Message Authentication Code (MAC) over the contents with a password from a string.">문자열의 암호를 사용하여 콘텐츠에 대해 암호 기반 MAC(메시지 인증 코드)를 적용하여 PFX를 추가 변경 내용으로부터 봉인합니다.</summary>
      <param name="password" vsli:raw="The password to use as a key for computing the MAC.">MAC를 컴퓨팅하기 위한 키로 사용할 암호입니다.</param>
      <param name="hashAlgorithm" vsli:raw="The hash algorithm to use when computing the MAC.">MAC를 컴퓨팅할 때 사용할 해시 알고리즘입니다.</param>
      <param name="iterationCount" vsli:raw="The iteration count for the Key Derivation Function (KDF) used in computing the MAC.">MAC를 컴퓨팅하는 데 사용하는 KDF(키 파생 함수)의 반복 횟수입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;iterationCount&quot; /&gt; parameter is less than or equal to 0.">
        <paramref name="iterationCount" /> 매개 변수가 0보다 작거나 같습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The PFX is already sealed (&lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;).">PFX가 이미 봉인되어 있습니다(<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" />는 <see langword="true" />임).</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.SealWithoutIntegrity">
      <summary vsli:raw="Seals the PFX from further changes without applying tamper-protection.">변조 방지를 적용하지 않고 추가 변경 내용으로부터 PFX를 봉인합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The PFX is already sealed (&lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;).">PFX가 이미 봉인되어 있습니다(<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" />는 <see langword="true" />임).</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary vsli:raw="Attempts to encode the contents of a sealed PFX into a provided buffer.">봉인된 PFX의 콘텐츠를 제공된 버퍼로 인코딩하려고 시도합니다.</summary>
      <param name="destination" vsli:raw="The byte span to receive the PKCS#12 PFX data.">PKCS#12 PFX 데이터를 받을 바이트 범위입니다.</param>
      <param name="bytesWritten" vsli:raw="When this method returns, contains a value that indicates the number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;. This parameter is treated as uninitialized.">이 메서드가 반환될 때 <paramref name="destination" />에 쓴 바이트 수를 나타내는 값을 포함합니다. 이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt; is big enough to receive the output; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="destination" />이 출력을 받을 충분한 크기이면 <see langword="true" />, 아니면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The PFX is not sealed (&lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;).">PFX가 봉인되어 있지 않습니다(<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" />가 <see langword="false" />임).</exception>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12CertBag">
      <summary vsli:raw="Represents the PKCS#12 CertBag. This class cannot be inherited.">PKCS#12 CertBag를 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12CertBag.#ctor(System.Security.Cryptography.Oid,System.ReadOnlyMemory{System.Byte})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs12CertBag&quot; /&gt; class using the specified certificate type and encoding.">지정된 인증서 형식 및 인코딩을 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12CertBag" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="certificateType" vsli:raw="The Object Identifier (OID) for the certificate type.">인증서 형식의 OID(개체 식별자)입니다.</param>
      <param name="encodedCertificate" vsli:raw="The encoded certificate value.">인코딩된 인증서 값입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;certificateType&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="certificateType" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The &lt;paramref name=&quot;encodedCertificate&quot; /&gt; parameter does not represent a single ASN.1 BER-encoded value.">
        <paramref name="encodedCertificate" /> 매개 변수가 단일 ASN.1 BER로 인코딩된 값을 나타내지 않는 경우</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12CertBag.EncodedCertificate">
      <summary vsli:raw="Gets the uninterpreted certificate contents of the CertSafeBag.">CertSafeBag의 해석되지 않은 인증서 콘텐츠를 가져옵니다.</summary>
      <returns vsli:raw="The uninterpreted certificate contents of the CertSafeBag.">CertSafeBag의 해석 되지 않은 인증서 내용입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12CertBag.GetCertificate">
      <summary vsli:raw="Gets the contents of the CertBag interpreted as an X.509 public key certificate.">X.509 퍼블릭 키 인증서로 해석된 CertBag 콘텐츠를 가져옵니다.</summary>
      <returns vsli:raw="A certificate decoded from the contents of the CertBag.">CertBag의 콘텐츠에서 디코딩된 인증서입니다.</returns>
      <exception cref="">콘텐츠 형식이 x.509 퍼블릭 키 인증서 콘텐츠 형식이 아닙니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The contents were not valid for the X.509 certificate content type.">X.509 인증서 콘텐츠 형식의 콘텐츠가 유효하지 않습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12CertBag.GetCertificateType">
      <summary vsli:raw="Gets the Object Identifier (OID) which identifies the content type of the encoded certificte value.">인코딩된 인증서 값의 데이터 형식을 식별하는 OID(개체 식별자)를 가져옵니다.</summary>
      <returns vsli:raw="The Object Identifier (OID) which identifies the content type of the encoded certificate value.">인코딩된 인증서 값의 데이터 형식을 식별하는 OID(개체 식별자)입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12CertBag.IsX509Certificate">
      <summary vsli:raw="Gets a value indicating whether the content type of the encoded certificate value is the X.509 public key certificate content type.">인코딩된 인증서 값의 콘텐츠 형식이 X.509 퍼블릭 키 인증서 콘텐츠 형식인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the content type is the X.509 public key certificate content type (1.2.840.113549.1.9.22.1); otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />콘텐츠 형식이 x.509 공개 키 인증서 콘텐츠 형식 (1.2.840.113549.1.9.22.1) 이면이 고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode">
      <summary vsli:raw="Represents the kind of encryption associated with a PKCS#12 SafeContents value.">PKCS#12 SafeContents 값과 연결된 암호화 종류를 나타냅니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.None">
      <summary vsli:raw="The SafeContents value is not encrypted.">SafeContents 값은 암호화되지 않습니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Password">
      <summary vsli:raw="The SafeContents value is encrypted with a password.">SafeContents 값은 암호로 암호화됩니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.PublicKey">
      <summary vsli:raw="The SafeContents value is encrypted using public key cryptography.">SafeContents 값은 퍼블릭 키 암호화를 사용하여 암호화됩니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Unknown">
      <summary vsli:raw="The kind of encryption applied to the SafeContents is unknown or could not be determined.">SafeContents에 적용된 암호화 종류를 알 수 없거나 확인할 수 없습니다.</summary>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12Info">
      <summary vsli:raw="Represents the data from PKCS#12 PFX contents. This class cannot be inherited.">PKCS#12 PFX 콘텐츠의 데이터를 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe">
      <summary vsli:raw="Gets a read-only collection of the SafeContents values present in the PFX AuthenticatedSafe.">PFX AuthenticatedSafe에 있는 SafeContents 값의 읽기 전용 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A read-only collection of the SafeContents values present in the PFX AuthenticatedSafe.">PFX AuthenticatedSafe에 있는 SafeContents 값의 읽기 전용 컬렉션입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Info.Decode(System.ReadOnlyMemory{System.Byte},System.Int32@,System.Boolean)">
      <summary vsli:raw="Reads the provided data as a PKCS#12 PFX and returns an object view of the contents.">제공된 데이터를 PKCS#12 PFX로 읽고 콘텐츠의 개체 보기를 반환합니다.</summary>
      <param name="encodedBytes" vsli:raw="The data to interpret as a PKCS#12 PFX.">PKCS#12 PFX로 해석할 데이터입니다.</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, contains a value that indicates the number of bytes from &lt;paramref name=&quot;encodedBytes&quot; /&gt; which were read by this method. This parameter is treated as uninitialized.">이 메서드가 반환될 때 이 메서드를 통해 읽은 <paramref name="encodedBytes" />의 바이트 수를 나타내는 값을 포함합니다. 이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="skipCopy" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to store &lt;paramref name=&quot;encodedBytes&quot; /&gt; without making a defensive copy; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">방어 복사본을 만들지 않고 <paramref name="encodedBytes" />를 저장하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</param>
      <returns vsli:raw="An object view of the PKCS#12 PFX decoded from the input.">입력에서 디코딩된 PKCS#12 PFX의 개체 보기입니다.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The contents of the &lt;paramref name=&quot;encodedBytes&quot; /&gt; parameter were not successfully decoded as a PKCS#12 PFX.">
        <paramref name="encodedBytes" /> 매개 변수의 콘텐츠가 PKCS#12 PFX로 디코딩되지 않았습니다.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12Info.IntegrityMode">
      <summary vsli:raw="Gets a value that indicates the type of tamper protection provided for the &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe&quot; /&gt; contents.">
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> 콘텐츠에 대해 제공된 변조 방지의 형식을 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="One of the enumeration members that indicates the type of tamper protection provided for the &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe&quot; /&gt; contents.">
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> 콘텐츠에 대해 제공 된 변조 방지의 유형을 나타내는 열거형 멤버 중 하나입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Info.VerifyMac(System.ReadOnlySpan{System.Char})">
      <summary vsli:raw="Attempts to verify the integrity of the &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe&quot; /&gt; contents with a password represented by a &lt;c&gt;System.ReadOnlySpan{System.Char}&lt;/c&gt;.">
        <see cref="System.ReadOnlySpan{System.Char}" />로 표시된 암호를 사용하여 <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> 콘텐츠의 무결성을 확인하려고 합니다.</summary>
      <param name="password" vsli:raw="The password to use to attempt to verify integrity.">무결성을 확인하는 데 사용할 암호입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the password successfully verifies the integrity of the &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe&quot; /&gt; contents; &lt;see langword=&quot;false&quot; /&gt; if the password is not correct or the contents have been altered.">암호를 통해 <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> 콘텐츠의 무결성을 확인하는 데 성공하면 <see langword="true" />이고, 암호가 올바르지 않거나 콘텐츠가 변경된 경우 <see langword="false" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs12Info.IntegrityMode&quot; /&gt; value is not &lt;see cref=&quot;F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.Password&quot; /&gt;.">
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.IntegrityMode" /> 값이 <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.Password" />가 아닙니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The hash algorithm option specified by the PKCS#12 PFX contents could not be identified or is not supported by this platform.">PKCS#12 PFX 콘텐츠로 지정된 해시 알고리즘 옵션을 식별할 수 없거나 이 플랫폼에서 지원하지 않습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Info.VerifyMac(System.String)">
      <summary vsli:raw="Attempts to verify the integrity of the &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe&quot; /&gt; contents with a password represented by a &lt;see cref=&quot;T:System.String&quot; /&gt;.">
        <see cref="T:System.String" />로 표시된 암호를 사용하여 <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> 콘텐츠의 무결성을 확인하려고 합니다.</summary>
      <param name="password" vsli:raw="The password to use to attempt to verify integrity.">무결성을 확인하는 데 사용할 암호입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the password successfully verifies the integrity of the &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe&quot; /&gt; contents; &lt;see langword=&quot;false&quot; /&gt; if the password is not correct or the contents have been altered.">암호를 통해 <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> 콘텐츠의 무결성을 확인하는 데 성공하면 <see langword="true" />이고, 암호가 올바르지 않거나 콘텐츠가 변경된 경우 <see langword="false" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs12Info.IntegrityMode&quot; /&gt; value is not &lt;see cref=&quot;F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.Password&quot; /&gt;.">
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.IntegrityMode" /> 값이 <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.Password" />가 아닙니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The hash algorithm option specified by the PKCS#12 PFX contents could not be identified or is not supported by this platform.">PKCS#12 PFX 콘텐츠로 지정된 해시 알고리즘 옵션을 식별할 수 없거나 이 플랫폼에서 지원하지 않습니다.</exception>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode">
      <summary vsli:raw="Represents the type of anti-tampering applied to a PKCS#12 PFX value.">PKCS#12 PFX 값에 적용되는 변조 방지의 유형을 나타냅니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.None">
      <summary vsli:raw="The PKCS#12 PFX value is not protected from tampering.">PKCS#12 PFX 값에는 변조 방지가 적용되지 않습니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.Password">
      <summary vsli:raw="The PKCS#12 PFX value is protected from tampering with a Message Authentication Code (MAC) keyed with a password.">PKCS#12 PFX 값에는 암호로 키가 지정된 MAC(메시지 인증 코드)로 변조 방지가 적용됩니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.PublicKey">
      <summary vsli:raw="The PKCS#12 PFX value is protected from tampering with a digital signature using public key cryptography.">PKCS#12 PFX 값에는 퍼블릭 키 암호화를 사용하는 디지털 시그니처로 변조 방지가 적용됩니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.Unknown">
      <summary vsli:raw="The type of anti-tampering applied to the PKCS#12 PFX is unknown or could not be determined.">PKCS#12 PFX에 적용되는 변조 방지의 유형을 알 수 없거나 확인할 수 없습니다.</summary>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12KeyBag">
      <summary vsli:raw="Represents the KeyBag from PKCS#12, a container whose contents are a PKCS#8 PrivateKeyInfo. This class cannot be inherited.">PKCS#8 PrivateKeyInfo를 콘텐츠로 포함하는 컨테이너인 PKCS#12의 KeyBag을 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12KeyBag.#ctor(System.ReadOnlyMemory{System.Byte},System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs12KeyBag&quot; /&gt; from an existing encoded PKCS#8 PrivateKeyInfo value.">인코딩된 기존 PKCS#8 PrivateKeyInfo 값에서 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12KeyBag" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="pkcs8PrivateKey" vsli:raw="A BER-encoded PKCS#8 PrivateKeyInfo value.">BER 인코딩된 PKCS#8 PrivateKeyInfo 값입니다.</param>
      <param name="skipCopy" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to store &lt;paramref name=&quot;pkcs8PrivateKey&quot; /&gt; without making a defensive copy; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">방어 복사본을 만들지 않고 <paramref name="pkcs8PrivateKey" />를 저장하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The &lt;paramref name=&quot;pkcs8privateKey&quot; /&gt; parameter does not represent a single ASN.1 BER-encoded value.">
        <paramref name="pkcs8privateKey" /> 매개 변수가 단일 ASN.1 BER로 인코딩된 값을 나타내지 않는 경우</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12KeyBag.Pkcs8PrivateKey">
      <summary vsli:raw="Gets a memory value containing the PKCS#8 PrivateKeyInfo value transported by this bag.">이 모음을 통해 전송된 PKCS#8 PrivateKeyInfo 값을 포함하는 메모리 값을 가져옵니다.</summary>
      <returns vsli:raw="A memory value containing the PKCS#8 PrivateKeyInfo value transported by this bag.">이 모음에서 전송한 PKCS # 8 PrivateKeyInfo 값을 포함 하는 메모리 값입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12SafeBag">
      <summary vsli:raw="Defines the core behavior of a SafeBag value from the PKCS#12 specification and provides a base for derived classes.">PKCS#12 사양에서 SafeBag 값의 핵심 동작을 정의하고 파생 클래스의 기본 클래스를 제공합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.#ctor(System.String,System.ReadOnlyMemory{System.Byte},System.Boolean)">
      <summary vsli:raw="Called from constructors in derived classes to initialize the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs12SafeBag&quot; /&gt; class.">
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12SafeBag" /> 클래스를 초기화하기 위해 파생 클래스의 생성자에서 호출됩니다.</summary>
      <param name="bagIdValue" vsli:raw="The Object Identifier (OID), in dotted decimal form, indicating the data type of this SafeBag.">이 SafeBag의 데이터 형식을 나타내는 점으로 구분된 10진수 형식의 OID(개체 식별자)입니다.</param>
      <param name="encodedBagValue" vsli:raw="The ASN.1 BER encoded value of the SafeBag contents.">SafeBag 콘텐츠의 ASN.1 BER로 인코딩된 값입니다.</param>
      <param name="skipCopy" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to store &lt;paramref name=&quot;encodedBagValue&quot; /&gt; without making a defensive copy; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">방어 복사본을 만들지 않고 <paramref name="encodedBagValue" />를 저장하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;bagIdValue&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt; or the empty string.">
        <paramref name="bagIdValue" /> 매개 변수가 <see langword="null" />이거나 빈 문자열인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The &lt;paramref name=&quot;encodedBagValue&quot; /&gt; parameter does not represent a single ASN.1 BER-encoded value.">
        <paramref name="encodedBagValue" /> 매개 변수가 단일 ASN.1 BER로 인코딩된 값을 나타내지 않는 경우</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.Attributes">
      <summary vsli:raw="Gets the modifiable collection of attributes to encode with the SafeBag value.">SafeBag 값으로 인코딩할 특성의 수정 가능한 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="The modifiable collection of attributes to encode with the SafeBag value.">SafeBag 값으로 인코딩할 수정할 수 있는 특성의 컬렉션입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.Encode">
      <summary vsli:raw="Encodes the SafeBag value and returns it as a byte array.">SafeBag 값을 인코딩하고 바이트 배열로 반환합니다.</summary>
      <returns vsli:raw="A byte array representing the encoded form of the SafeBag.">SafeBag의 인코딩된 형식을 나타내는 바이트 배열입니다.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The object identifier value passed to the constructor was invalid.">생성자에 전달된 개체 식별자 값이 잘못되었습니다.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.EncodedBagValue">
      <summary vsli:raw="Gets the ASN.1 BER encoding of the contents of this SafeBag.">이 SafeBag 콘텐츠의 ASN.1 BER 인코딩을 가져옵니다.</summary>
      <returns vsli:raw="The ASN.1 BER encoding of the contents of this SafeBag.">이 SafeBag의 콘텐츠를 asn.1로 인코딩한 것입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.GetBagId">
      <summary vsli:raw="Gets the Object Identifier (OID) identifying the content type of this SafeBag.">이 SafeBag의 콘텐츠 형식을 식별하는 OID(개체 식별자)를 가져옵니다.</summary>
      <returns vsli:raw="The Object Identifier (OID) identifying the content type of this SafeBag.">이 SafeBag의 콘텐츠 형식을 식별하는 OID(개체 식별자)입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary vsli:raw="Attempts to encode the SafeBag value into a provided buffer.">SafeBag 값을 제공된 버퍼로 인코딩하려고 시도합니다.</summary>
      <param name="destination" vsli:raw="The byte span to receive the encoded SafeBag value.">인코딩된 SafeBag 값을 받을 바이트 범위입니다.</param>
      <param name="bytesWritten" vsli:raw="When this method returns, contains a value that indicates the number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;. This parameter is treated as uninitialized.">이 메서드가 반환될 때 <paramref name="destination" />에 쓴 바이트 수를 나타내는 값을 포함합니다. 이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt; is big enough to receive the output; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="destination" />이 출력을 받을 충분한 크기이면 <see langword="true" />, 아니면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The object identifier value passed to the constructor was invalid.">생성자에 전달된 개체 식별자 값이 잘못되었습니다.</exception>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12SafeContents">
      <summary vsli:raw="Represents a PKCS#12 SafeContents value. This class cannot be inherited.">PKCS#12 SafeContents 값을 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs12SafeContents&quot; /&gt; class.">
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12SafeContents" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary vsli:raw="Adds a certificate to the SafeContents via a new &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs12CertBag&quot; /&gt; and returns the newly created bag instance.">새 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12CertBag" />를 통해 SafeContents에 인증서를 추가하고 새로 만든 모음 인스턴스를 반환합니다.</summary>
      <param name="certificate" vsli:raw="The certificate to add.">추가할 인증서입니다.</param>
      <returns vsli:raw="The bag instance which was added to the SafeContents.">SafeContents에 추가된 모음 인스턴스입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;certificate&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="certificate" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This instance is read-only.">인스턴스는 읽기 전용입니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The &lt;paramref name=&quot;certificate&quot; /&gt; parameter is in an invalid state.">
        <paramref name="certificate" /> 매개 변수의 상태가 잘못되었습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddKeyUnencrypted(System.Security.Cryptography.AsymmetricAlgorithm)">
      <summary vsli:raw="Adds an asymmetric private key to the SafeContents via a new &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs12KeyBag&quot; /&gt; and returns the newly created bag instance.">새 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12KeyBag" />를 통해 SafeContents에 비대칭 프라이빗 키를 추가하고 새로 만든 모음 인스턴스를 반환합니다.</summary>
      <param name="key" vsli:raw="The asymmetric private key to add.">추가할 비대칭 프라이빗 키입니다.</param>
      <returns vsli:raw="The bag instance which was added to the SafeContents.">SafeContents에 추가된 모음 인스턴스입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;key&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This instance is read-only.">인스턴스는 읽기 전용입니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The key export failed.">키를 내보내지 못했습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddNestedContents(System.Security.Cryptography.Pkcs.Pkcs12SafeContents)">
      <summary vsli:raw="Adds a nested SafeContents to the SafeContents via a new &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs12SafeContentsBag&quot; /&gt; and returns the newly created bag instance.">새 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12SafeContentsBag" />를 통해 SafeContents에 중첩된 SafeContents를 추가하고 새로 만든 모음 인스턴스를 반환합니다.</summary>
      <param name="safeContents" vsli:raw="The nested contents to add to the SafeContents.">SafeContents에 추가할 중첩된 콘텐츠입니다.</param>
      <returns vsli:raw="The bag instance which was added to the SafeContents.">SafeContents에 추가된 모음 인스턴스입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;safeContents&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="safeContents" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;safeContents&quot; /&gt; parameter is encrypted.">
        <paramref name="safeContents" /> 매개 변수가 암호화됩니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This instance is read-only.">인스턴스는 읽기 전용입니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddSafeBag(System.Security.Cryptography.Pkcs.Pkcs12SafeBag)">
      <summary vsli:raw="Adds a SafeBag to the SafeContents.">SafeContents에 SafeBag를 추가합니다.</summary>
      <param name="safeBag" vsli:raw="The SafeBag value to add.">추가할 SafeBag 값입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;safeBag&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="safeBag" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This instance is read-only.">인스턴스는 읽기 전용입니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddSecret(System.Security.Cryptography.Oid,System.ReadOnlyMemory{System.Byte})">
      <summary vsli:raw="Adds an ASN.1 BER-encoded value with a specified type identifier to the SafeContents via a new &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs12SecretBag&quot; /&gt; and returns the newly created bag instance.">새로운 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12SecretBag" />를 통해 지정된 형식 식별자를 사용하는 ASN.1 BER로 인코딩된 값을 SafeContents에 추가하고 새로 만든 모음 인스턴스를 반환합니다.</summary>
      <param name="secretType" vsli:raw="The Object Identifier (OID) which identifies the data type of the secret value.">비밀 값의 데이터 형식을 식별하는 OID(개체 식별자)입니다.</param>
      <param name="secretValue" vsli:raw="The BER-encoded value representing the secret to add.">추가할 비밀을 나타내는 BER로 인코딩된 값입니다.</param>
      <returns vsli:raw="The bag instance which was added to the SafeContents.">SafeContents에 추가된 모음 인스턴스입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;secretType&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="secretType" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This instance is read-only.">인스턴스는 읽기 전용입니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The &lt;paramref name=&quot;secretValue&quot; /&gt; parameter does not represent a single ASN.1 BER-encoded value.">
        <paramref name="secretValue" /> 매개 변수가 단일 ASN.1 BER로 인코딩된 값을 나타내지 않는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddShroudedKey(System.Security.Cryptography.AsymmetricAlgorithm,System.Byte[],System.Security.Cryptography.PbeParameters)">
      <summary vsli:raw="Adds an encrypted asymmetric private key to the SafeContents via a new &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag&quot; /&gt; from a byte-based password in an array and returns the newly created bag instance.">배열의 바이트 기반 암호에서 새 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag" />를 통해 SafeContents에 비대칭 프라이빗 키를 추가하고 새로 만든 모음 인스턴스를 반환합니다.</summary>
      <param name="key" vsli:raw="The asymmetric private key to add.">추가할 비대칭 프라이빗 키입니다.</param>
      <param name="passwordBytes" vsli:raw="The bytes to use as a password when encrypting the key material.">키 자료를 암호화할 때 암호로 사용할 바이트입니다.</param>
      <param name="pbeParameters" vsli:raw="The password-based encryption (PBE) parameters to use when encrypting the key material.">키 자료를 암호화할 때 사용할 PBE(암호 기반 암호화) 매개 변수입니다.</param>
      <returns vsli:raw="The bag instance which was added to the SafeContents.">SafeContents에 추가된 모음 인스턴스입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;key&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This instance is read-only.">인스턴스는 읽기 전용입니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The key export failed.">키를 내보내지 못했습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddShroudedKey(System.Security.Cryptography.AsymmetricAlgorithm,System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)">
      <summary vsli:raw="Adds an encrypted asymmetric private key to the SafeContents via a new &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag&quot; /&gt; from a byte-based password in a span and returns the newly created bag instance.">범위의 바이트 기반 암호에서 새 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag" />를 통해 SafeContents에 비대칭 프라이빗 키를 추가하고 새로 만든 모음 인스턴스를 반환합니다.</summary>
      <param name="key" vsli:raw="The asymmetric private key to add.">추가할 비대칭 프라이빗 키입니다.</param>
      <param name="passwordBytes" vsli:raw="The bytes to use as a password when encrypting the key material.">키 자료를 암호화할 때 암호로 사용할 바이트입니다.</param>
      <param name="pbeParameters" vsli:raw="The password-based encryption (PBE) parameters to use when encrypting the key material.">키 자료를 암호화할 때 사용할 PBE(암호 기반 암호화) 매개 변수입니다.</param>
      <returns vsli:raw="The bag instance which was added to the SafeContents.">SafeContents에 추가된 모음 인스턴스입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;key&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This instance is read-only.">인스턴스는 읽기 전용입니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The key export failed.">키를 내보내지 못했습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddShroudedKey(System.Security.Cryptography.AsymmetricAlgorithm,System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)">
      <summary vsli:raw="Adds an encrypted asymmetric private key to the SafeContents via a new &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag&quot; /&gt; from a character-based password in a span and returns the newly created bag instance.">범위의 문자 기반 암호에서 새 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag" />를 통해 SafeContents에 비대칭 프라이빗 키를 추가하고 새로 만든 모음 인스턴스를 반환합니다.</summary>
      <param name="key" vsli:raw="The asymmetric private key to add.">추가할 비대칭 프라이빗 키입니다.</param>
      <param name="password" vsli:raw="The password to use when encrypting the key material.">키 자료를 암호화할 때 사용할 암호입니다.</param>
      <param name="pbeParameters" vsli:raw="The password-based encryption (PBE) parameters to use when encrypting the key material.">키 자료를 암호화할 때 사용할 PBE(암호 기반 암호화) 매개 변수입니다.</param>
      <returns vsli:raw="The bag instance which was added to the SafeContents.">SafeContents에 추가된 모음 인스턴스입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;key&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This instance is read-only.">인스턴스는 읽기 전용입니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The key export failed.">키를 내보내지 못했습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddShroudedKey(System.Security.Cryptography.AsymmetricAlgorithm,System.String,System.Security.Cryptography.PbeParameters)">
      <summary vsli:raw="Adds an encrypted asymmetric private key to the SafeContents via a new &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag&quot; /&gt; from a character-based password in a string and returns the newly created bag instance.">문자열의 문자 기반 암호에서 새 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag" />를 통해 SafeContents에 비대칭 프라이빗 키를 추가하고 새로 만든 모음 인스턴스를 반환합니다.</summary>
      <param name="key" vsli:raw="The asymmetric private key to add.">추가할 비대칭 프라이빗 키입니다.</param>
      <param name="password" vsli:raw="The password to use when encrypting the key material.">키 자료를 암호화할 때 사용할 암호입니다.</param>
      <param name="pbeParameters" vsli:raw="The password-based encryption (PBE) parameters to use when encrypting the key material.">키 자료를 암호화할 때 사용할 PBE(암호 기반 암호화) 매개 변수입니다.</param>
      <returns vsli:raw="The bag instance which was added to the SafeContents.">SafeContents에 추가된 모음 인스턴스입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;key&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This instance is read-only.">인스턴스는 읽기 전용입니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The key export failed.">키를 내보내지 못했습니다.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.ConfidentialityMode">
      <summary vsli:raw="Gets a value that indicates the type of encryption applied to the contents.">콘텐츠에 적용되는 암호화 형식을 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="One of the enumeration values that indicates the type of encryption applied to the contents. The default value is &lt;see cref=&quot;F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.None&quot; /&gt;.">내용에 적용 되는 암호화 유형을 나타내는 열거형 값 중 하나입니다. 기본값은 <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.None" />입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.Decrypt(System.Byte[])">
      <summary vsli:raw="Decrypts the contents of this SafeContents value using a byte-based password from an array.">배열의 바이트 기반 암호를 사용하여 이 SafeContents 값의 콘텐츠를 해독합니다.</summary>
      <param name="passwordBytes" vsli:raw="The bytes to use as a password for decrypting the encrypted contents.">암호화된 콘텐츠의 암호를 해독하기 위해 암호로 사용할 바이트입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.ConfidentialityMode&quot; /&gt; property is not &lt;see cref=&quot;F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Password&quot; /&gt;.">
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.ConfidentialityMode" /> 속성이 <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Password" />이 아닌 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The password is incorrect.&#xA;&#xA;-or-&#xA;&#xA;The contents were not successfully decrypted.">암호가 잘못되었습니다.
또는
콘텐츠의 암호를 해독하지 못했습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.Decrypt(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Decrypts the contents of this SafeContents value using a byte-based password from a span.">범위에서 바이트 기반 암호를 사용하여 이 SafeContents 값의 콘텐츠를 해독합니다.</summary>
      <param name="passwordBytes" vsli:raw="The bytes to use as a password for decrypting the encrypted contents.">암호화된 콘텐츠의 암호를 해독하기 위해 암호로 사용할 바이트입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.ConfidentialityMode&quot; /&gt; property is not &lt;see cref=&quot;F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Password&quot; /&gt;.">
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.ConfidentialityMode" /> 속성이 <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Password" />이 아닌 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The password is incorrect.&#xA;&#xA;-or-&#xA;&#xA;The contents were not successfully decrypted.">암호가 잘못되었습니다.
또는
콘텐츠의 암호를 해독하지 못했습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.Decrypt(System.ReadOnlySpan{System.Char})">
      <summary vsli:raw="Decrypts the contents of this SafeContents value using a character-based password from a span.">범위에서 문자 기반 암호를 사용하여 이 SafeContents 값의 콘텐츠를 해독합니다.</summary>
      <param name="password" vsli:raw="The password to use for decrypting the encrypted contents.">암호화된 콘텐츠의 암호를 해독하는 데 사용할 암호입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.ConfidentialityMode&quot; /&gt; property is not &lt;see cref=&quot;F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Password&quot; /&gt;.">
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.ConfidentialityMode" /> 속성이 <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Password" />이 아닌 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The password is incorrect.&#xA;&#xA;-or-&#xA;&#xA;The contents were not successfully decrypted.">암호가 잘못되었습니다.
또는
콘텐츠의 암호를 해독하지 못했습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.Decrypt(System.String)">
      <summary vsli:raw="Decrypts the contents of this SafeContents value using a character-based password from a string.">문자열에서 문자 기반 암호를 사용하여 이 SafeContents 값의 콘텐츠를 해독합니다.</summary>
      <param name="password" vsli:raw="The password to use for decrypting the encrypted contents.">암호화된 콘텐츠의 암호를 해독하는 데 사용할 암호입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.ConfidentialityMode&quot; /&gt; property is not &lt;see cref=&quot;F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Password&quot; /&gt;.">
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.ConfidentialityMode" /> 속성이 <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Password" />이 아닌 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The password is incorrect.&#xA;&#xA;-or-&#xA;&#xA;The contents were not successfully decrypted.">암호가 잘못되었습니다.
또는
콘텐츠의 암호를 해독하지 못했습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.GetBags">
      <summary vsli:raw="Gets an enumerable representation of the SafeBag values contained within the SafeContents.">SafeContents 내에 포함된 SafeBag 값의 열거 가능 표현을 가져옵니다.</summary>
      <returns vsli:raw="An enumerable representation of the SafeBag values contained within the SafeContents.">SafeContents 내에 포함된 SafeBag 값의 열거 가능 표현입니다.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The contents are encrypted.">콘텐츠가 암호화됩니다.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether this instance in a read-only state.">이 인스턴스가 읽기 전용 상태인지 아닌지를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this value is in a read-only state; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />이 값이 읽기 전용 상태 이면이 고, 그렇지 않으면입니다. 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12SafeContentsBag">
      <summary vsli:raw="Represents the SafeContentsBag from PKCS#12, a container whose contents are a PKCS#12 SafeContents value. This class cannot be inherited.">PKCS#12 SafeContents 값이 콘텐츠로 포함되어 있는 컨테이너인 PKCS#12의 SafeContentsBag을 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContentsBag.SafeContents">
      <summary vsli:raw="Gets the SafeContents value contained within this bag.">이 모음 내에 포함된 SafeContents 값을 가져옵니다.</summary>
      <returns vsli:raw="The SafeContents value contained within this bag.">이 모음 내에 포함 된 SafeContents 값입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12SecretBag">
      <summary vsli:raw="Represents the SecretBag from PKCS#12, a container whose contents are arbitrary data with a type identifier. This class cannot be inherited.">형식 식별자가 있는 임의 데이터를 콘텐츠로 갖고 있는 컨테이너인 PKCS#12의 SecretBag를 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SecretBag.GetSecretType">
      <summary vsli:raw="Gets the Object Identifier (OID) which identifies the data type of the secret value.">비밀 값의 데이터 형식을 식별하는 OID(개체 식별자)를 가져옵니다.</summary>
      <returns vsli:raw="The Object Identifier (OID) which identifies the data type of the secret value.">비밀 값의 데이터 형식을 식별하는 OID(개체 식별자)입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12SecretBag.SecretValue">
      <summary vsli:raw="Gets a memory value containing the BER-encoded contents of the bag.">모음의 BER 인코딩된 콘텐츠를 포함하는 메모리 값을 가져옵니다.</summary>
      <returns vsli:raw="A memory value containing the BER-encoded contents of the bag.">모음의 BER 인코딩된 콘텐츠를 포함 하는 메모리 값입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag">
      <summary vsli:raw="Represents the ShroudedKeyBag from PKCS#12, a container whose contents are a PKCS#8 EncryptedPrivateKeyInfo. This class cannot be inherited.">PKCS#8 EncryptedPrivateKeyInfo를 콘텐츠로 포함하는 컨테이너인 PKCS#12의 ShroudedKeyBag을 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag.#ctor(System.ReadOnlyMemory{System.Byte},System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag&quot; /&gt; from an existing encoded PKCS#8 EncryptedPrivateKeyInfo value.">인코딩된 기존 PKCS#8 EncryptedPrivateKeyInfo 값에서 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="encryptedPkcs8PrivateKey" vsli:raw="A BER-encoded PKCS#8 EncryptedPrivateKeyInfo value.">BER 인코딩된 PKCS#8 EncryptedPrivateKeyInfo 값입니다.</param>
      <param name="skipCopy" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to store &lt;paramref name=&quot;encryptedPkcs8PrivateKey&quot; /&gt; without making a defensive copy; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">방어 복사본을 만들지 않고 <paramref name="encryptedPkcs8PrivateKey" />를 저장하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The &lt;paramref name=&quot;encryptedPkcs8privateKey&quot; /&gt; parameter does not represent a single ASN.1 BER-encoded value.">
        <paramref name="encryptedPkcs8privateKey" /> 매개 변수가 단일 ASN.1 BER로 인코딩된 값을 나타내지 않는 경우</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag.EncryptedPkcs8PrivateKey">
      <summary vsli:raw="Gets a memory value containing the PKCS#8 EncryptedPrivateKeyInfo value transported by this bag.">이 모음을 통해 전송된 PKCS#8 EncryptedPrivateKeyInfo 값을 포함하는 메모리 값을 가져옵니다.</summary>
      <returns vsli:raw="A memory value containing the PKCS#8 EncryptedPrivateKeyInfo value transported by this bag.">이 모음에서 전송한 PKCS # 8 EncryptedPrivateKeyInfo 값을 포함 하는 메모리 값입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo">
      <summary vsli:raw="Enables the inspection of and creation of PKCS#8 PrivateKeyInfo and EncryptedPrivateKeyInfo values. This class cannot be inherited.">PKCS # 8 PrivateKeyInfo 및 EncryptedPrivateKeyInfo 값의 검사 및 생성을 사용하도록 설정합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.#ctor(System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.ReadOnlyMemory{System.Byte},System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo&quot; /&gt; class.">
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="algorithmId" vsli:raw="The Object Identifier (OID) identifying the asymmetric algorithm this key is for.">이 키를 사용할 비대칭 알고리즘을 식별하는 OID(개체 식별자)입니다.</param>
      <param name="algorithmParameters" vsli:raw="The BER-encoded algorithm parameters associated with this key, or &lt;see langword=&quot;null&quot; /&gt; to omit algorithm parameters when encoding.">이 키와 연결된 BER 인코딩된 알고리즘 매개 변수입니다. 또는 인코딩할 때 알고리즘 매개 변수를 생략하려면 <see langword="null" />입니다.</param>
      <param name="privateKey" vsli:raw="The algorithm-specific encoded private key.">알고리즘별로 인코딩된 프라이빗 키입니다.</param>
      <param name="skipCopies" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to store &lt;paramref name=&quot;algorithmParameters&quot; /&gt; and &lt;paramref name=&quot;privateKey&quot; /&gt; without making a defensive copy; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">방어 복사본을 만들지 않고 <paramref name="algorithmParameters" /> 및 <paramref name="privateKey" />를 저장하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;algorithmId&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="algorithmId" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The &lt;paramref name=&quot;algorithmParameters&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, empty, or a single BER-encoded value.">
        <paramref name="algorithmParameters" /> 매개 변수가 <see langword="null" />이 아니거나, 비어 있거나, 단일 BER 인코딩된 값입니다.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.AlgorithmId">
      <summary vsli:raw="Gets the Object Identifier (OID) value identifying the algorithm this key is for.">이 키를 사용할 알고리즘을 식별하는 OID(개체 식별자) 값을 가져옵니다.</summary>
      <returns vsli:raw="The Object Identifier (OID) value identifying the algorithm this key is for.">이 키가 있는 알고리즘을 식별 하는 OID (개체 식별자) 값입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.AlgorithmParameters">
      <summary vsli:raw="Gets a memory value containing the BER-encoded algorithm parameters associated with this key.">이 키와 연결된 BER 인코딩된 알고리즘 매개 변수를 포함하는 메모리 값을 가져옵니다.</summary>
      <returns vsli:raw="A memory value containing the BER-encoded algorithm parameters associated with this key, or &lt;see langword=&quot;null&quot; /&gt; if no parameters were present.">이 키 <see langword="null" /> 와 연결 된 BER 인코딩된 알고리즘 매개 변수를 포함 하는 메모리 값입니다. 매개 변수가 없는 경우입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Attributes">
      <summary vsli:raw="Gets the modifiable collection of attributes for this private key.">이 프라이빗 키의 수정 가능한 특성 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="The modifiable collection of attributes to encode with the private key.">개인 키를 사용 하 여 인코딩할 수정할 수 있는 특성의 컬렉션입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Create(System.Security.Cryptography.AsymmetricAlgorithm)">
      <summary vsli:raw="Exports a specified key as a PKCS#8 PrivateKeyInfo and returns its decoded interpretation.">지정된 키를 PKCS#8 PrivateKeyInfo로 내보내고 디코딩된 해석을 반환합니다.</summary>
      <param name="privateKey" vsli:raw="The private key to represent in a PKCS#8 PrivateKeyInfo.">PKCS#8 PrivateKeyInfo에 표시할 프라이빗 키입니다.</param>
      <returns vsli:raw="The decoded interpretation of the exported PKCS#8 PrivateKeyInfo.">내보낸 PKCS#8 PrivateKeyInfo의 디코딩된 해석입니다.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;privateKey&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="privateKey" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Decode(System.ReadOnlyMemory{System.Byte},System.Int32@,System.Boolean)">
      <summary vsli:raw="Reads the provided data as a PKCS#8 PrivateKeyInfo and returns an object view of the contents.">제공된 데이터를 PKCS#8 PrivateKeyInfo로 읽고 콘텐츠의 개체 보기를 반환합니다.</summary>
      <param name="source" vsli:raw="The data to interpret as a PKCS#8 PrivateKeyInfo value.">PKCS#8 PrivateKeyInfo 값으로 해석할 데이터입니다.</param>
      <param name="bytesRead" vsli:raw="When this method returns, contains a value that indicates the number of bytes read from &lt;paramref name=&quot;source&quot; /&gt;. This parameter is treated as uninitialized.">이 메서드가 반환될 때 <paramref name="source" />에서 읽은 바이트 수를 나타내는 값을 포함합니다. 이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="skipCopy" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to store &lt;paramref name=&quot;source&quot; /&gt; without making a defensive copy; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">방어 복사본을 만들지 않고 <paramref name="source" />를 저장하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</param>
      <returns vsli:raw="An object view of the contents decoded as a PKCS#8 PrivateKeyInfo.">PKCS#8 PrivateKeyInfo로 디코딩된 콘텐츠의 개체 보기입니다.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The contents of the &lt;paramref name=&quot;source&quot; /&gt; parameter were not successfully decoded as a PKCS#8 PrivateKeyInfo.">
        <paramref name="source" /> 매개 변수의 콘텐츠가 PKCS#8 PrivateKeyInfo로 성공적으로 디코딩되지 않았습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.DecryptAndDecode(System.ReadOnlySpan{System.Byte},System.ReadOnlyMemory{System.Byte},System.Int32@)">
      <summary vsli:raw="Decrypts the provided data using the provided byte-based password and decodes the output into an object view of the PKCS#8 PrivateKeyInfo.">제공된 바이트 기반 암호를 사용하여 제공된 데이터의 암호를 해독하고 출력을 PKCS#8 PrivateKeyInfo의 개체 보기로 디코딩합니다.</summary>
      <param name="passwordBytes" vsli:raw="The bytes to use as a password when decrypting the key material.">키 자료를 해독할 때 암호로 사용할 바이트입니다.</param>
      <param name="source" vsli:raw="The data to read as a PKCS#8 EncryptedPrivateKeyInfo structure in the ASN.1-BER encoding.">ASN.1-BER 인코딩에 있는 PKCS#8 EncryptedPrivateKeyInfo 구조체로 읽을 데이터입니다.</param>
      <param name="bytesRead" vsli:raw="When this method returns, contains a value that indicates the number of bytes read from &lt;paramref name=&quot;source&quot; /&gt;. This parameter is treated as uninitialized.">이 메서드가 반환될 때 <paramref name="source" />에서 읽은 바이트 수를 나타내는 값을 포함합니다. 이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <returns vsli:raw="An object view of the contents decrypted decoded as a PKCS#8 PrivateKeyInfo.">PKCS#8 PrivateKeyInfo로 디코딩된 암호 해독된 콘텐츠의 개체 보기입니다.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The password is incorrect.&#xA;&#xA;-or-&#xA;&#xA;The contents of &lt;paramref name=&quot;source&quot; /&gt; indicate the Key Derivation Function (KDF) to apply is the legacy PKCS#12 KDF, which requires &lt;see cref=&quot;T:System.Char&quot; /&gt;-based passwords.&#xA;&#xA;-or-&#xA;&#xA;The contents of &lt;paramref name=&quot;source&quot; /&gt; do not represent an ASN.1-BER-encoded PKCS#8 EncryptedPrivateKeyInfo structure.">암호가 잘못되었습니다.
또는
<paramref name="source" />의 콘텐츠에서는 적용할 KDF(키 파생 함수)가 <see cref="T:System.Char" /> 기반 암호가 필요한 레거시 PKCS#12 KDF임을 나타냅니다.
또는
<paramref name="source" />의 콘텐츠에서 ASN.1-BER-encoded PKCS#8 EncryptedPrivateKeyInfo 구조체를 나타내지 않습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.DecryptAndDecode(System.ReadOnlySpan{System.Char},System.ReadOnlyMemory{System.Byte},System.Int32@)">
      <summary vsli:raw="Decrypts the provided data using the provided character-based password and decodes the output into an object view of the PKCS#8 PrivateKeyInfo.">제공된 문자 기반 암호를 사용하여 제공된 데이터의 암호를 해독하고 출력을 PKCS#8 PrivateKeyInfo의 개체 보기로 디코딩합니다.</summary>
      <param name="password" vsli:raw="The password to use when decrypting the key material.">키 자료를 암호 해독할 때 사용할 암호입니다.</param>
      <param name="source" vsli:raw="The bytes of a PKCS#8 EncryptedPrivateKeyInfo structure in the ASN.1-BER encoding.">ASN.1-BER 인코딩에 있는 PKCS#8 EncryptedPrivateKeyInfo 구조체의 바이트입니다.</param>
      <param name="bytesRead" vsli:raw="When this method returns, contains a value that indicates the number of bytes read from &lt;paramref name=&quot;source&quot; /&gt;. This parameter is treated as uninitialized.">이 메서드가 반환될 때 <paramref name="source" />에서 읽은 바이트 수를 나타내는 값을 포함합니다. 이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <returns vsli:raw="An object view of the contents decrypted decoded as a PKCS#8 PrivateKeyInfo.">PKCS#8 PrivateKeyInfo로 디코딩된 암호 해독된 콘텐츠의 개체 보기입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encode">
      <summary vsli:raw="Encodes the property data of this instance as a PKCS#8 PrivateKeyInfo and returns the encoding as a byte array.">이 인스턴스의 속성 데이터를 PKCS#8 PrivateKeyInfo로 인코딩하고 인코딩을 바이트 배열로 반환합니다.</summary>
      <returns vsli:raw="A byte array representing the encoded form of the PKCS#8 PrivateKeyInfo.">PKCS#8 PrivateKeyInfo의 인코딩된 형식을 나타내는 바이트 배열입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encrypt(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)">
      <summary vsli:raw="Produces a PKCS#8 EncryptedPrivateKeyInfo from the property contents of this object after encrypting with the specified byte-based password and encryption parameters.">지정된 바이트 기반 암호 및 암호화 매개 변수를 사용하여 암호화한 후 이 개체의 속성 콘텐츠에서 PKCS#8 EncryptedPrivateKeyInfo를 생성합니다.</summary>
      <param name="passwordBytes" vsli:raw="The bytes to use as a password when encrypting the key material.">키 자료를 암호화할 때 암호로 사용할 바이트입니다.</param>
      <param name="pbeParameters" vsli:raw="The password-based encryption (PBE) parameters to use when encrypting the key material.">키 자료를 암호화할 때 사용할 PBE(암호 기반 암호화) 매개 변수입니다.</param>
      <returns vsli:raw="A byte array containing the encoded form of the PKCS#8 EncryptedPrivateKeyInfo.">PKCS#8 EncryptedPrivateKeyInfo의 인코딩된 형식을 포함하는 바이트 배열입니다.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="&lt;paramref name=&quot;pbeParameters&quot; /&gt; indicates that &lt;see cref=&quot;F:System.Security.Cryptography.PbeEncryptionAlgorithm.TripleDes3KeyPkcs12&quot; /&gt; should be used, which requires &lt;see cref=&quot;T:System.Char&quot; /&gt;-based passwords.">
        <paramref name="pbeParameters" />는 <see cref="T:System.Char" /> 기반 암호가 필요한 <see cref="F:System.Security.Cryptography.PbeEncryptionAlgorithm.TripleDes3KeyPkcs12" />를 사용해야 함을 나타냅니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encrypt(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)">
      <summary vsli:raw="Produces a PKCS#8 EncryptedPrivateKeyInfo from the property contents of this object after encrypting with the specified character-based password and encryption parameters.">지정된 문자 기반 암호 및 암호화 매개 변수를 사용하여 암호화한 후 이 개체의 속성 콘텐츠에서 PKCS#8 EncryptedPrivateKeyInfo를 생성합니다.</summary>
      <param name="password" vsli:raw="The password to use when encrypting the key material.">키 자료를 암호화할 때 사용할 암호입니다.</param>
      <param name="pbeParameters" vsli:raw="The password-based encryption (PBE) parameters to use when encrypting the key material.">키 자료를 암호화할 때 사용할 PBE(암호 기반 암호화) 매개 변수입니다.</param>
      <returns vsli:raw="A byte array containing the encoded form of the PKCS#8 EncryptedPrivateKeyInfo.">PKCS#8 EncryptedPrivateKeyInfo의 인코딩된 형식을 포함하는 바이트 배열입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.PrivateKeyBytes">
      <summary vsli:raw="Gets a memory value that represents the algorithm-specific encoded private key.">알고리즘별로 인코딩된 프라이빗 키를 나타내는 메모리 값을 가져옵니다.</summary>
      <returns vsli:raw="A memory value that represents the algorithm-specific encoded private key.">알고리즘과 인코딩된 개인 키를 나타내는 메모리 값입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary vsli:raw="Attempts to encode the property data of this instance as a PKCS#8 PrivateKeyInfo, writing the results into a provided buffer.">이 인스턴스의 속성 데이터를 PKCS#8 PrivateKeyInfo로 인코딩하고 그 결과를 제공된 버퍼에 씁니다.</summary>
      <param name="destination" vsli:raw="The byte span to receive the PKCS#8 PrivateKeyInfo data.">PKCS # 8 PrivateKeyInfo 데이터를 받을 바이트 범위입니다.</param>
      <param name="bytesWritten" vsli:raw="When this method returns, contains a value that indicates the number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;. This parameter is treated as uninitialized.">이 메서드가 반환될 때 <paramref name="destination" />에 쓴 바이트 수를 나타내는 값을 포함합니다. 이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt; is big enough to receive the output; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="destination" />이 출력을 받을 충분한 크기이면 <see langword="true" />, 아니면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncrypt(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)">
      <summary vsli:raw="Attempts to produce a PKCS#8 EncryptedPrivateKeyInfo from the property contents of this object after encrypting with the specified byte-based password and encryption parameters, writing the results into a provided buffer.">지정된 바이트 기반 암호 및 암호화 매개 변수를 사용하여 암호화한 후 이 개체의 속성 콘텐츠에서 PKCS#8 EncryptedPrivateKeyInfo를 생성하고, 결과를 제공된 버퍼에 씁니다.</summary>
      <param name="passwordBytes" vsli:raw="The bytes to use as a password when encrypting the key material.">키 자료를 암호화할 때 암호로 사용할 바이트입니다.</param>
      <param name="pbeParameters" vsli:raw="The password-based encryption (PBE) parameters to use when encrypting the key material.">키 자료를 암호화할 때 사용할 PBE(암호 기반 암호화) 매개 변수입니다.</param>
      <param name="destination" vsli:raw="The byte span to receive the PKCS#8 EncryptedPrivateKeyInfo data.">PKCS#8 EncryptedPrivateKeyInfo 데이터를 받을 바이트 범위입니다.</param>
      <param name="bytesWritten" vsli:raw="When this method returns, contains a value that indicates the number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;. This parameter is treated as uninitialized.">이 메서드가 반환될 때 <paramref name="destination" />에 쓴 바이트 수를 나타내는 값을 포함합니다. 이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt; is big enough to receive the output; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="destination" />이 출력을 받을 충분한 크기이면 <see langword="true" />, 아니면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncrypt(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)">
      <summary vsli:raw="Attempts to produce a PKCS#8 EncryptedPrivateKeyInfo from the property contents of this object after encrypting with the specified character-based password and encryption parameters, writing the result into a provided buffer.">지정된 문자 기반 암호 및 암호화 매개 변수를 사용하여 암호화한 후 이 개체의 속성 콘텐츠에서 PKCS#8 EncryptedPrivateKeyInfo를 생성하고, 결과를 제공된 버퍼에 씁니다.</summary>
      <param name="password" vsli:raw="The password to use when encrypting the key material.">키 자료를 암호화할 때 사용할 암호입니다.</param>
      <param name="pbeParameters" vsli:raw="The password-based encryption (PBE) parameters to use when encrypting the key material.">키 자료를 암호화할 때 사용할 PBE(암호 기반 암호화) 매개 변수입니다.</param>
      <param name="destination" vsli:raw="The byte span to receive the PKCS#8 EncryptedPrivateKeyInfo data.">PKCS#8 EncryptedPrivateKeyInfo 데이터를 받을 바이트 범위입니다.</param>
      <param name="bytesWritten" vsli:raw="When this method returns, contains a value that indicates the number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;. This parameter is treated as uninitialized.">이 메서드가 반환될 때 <paramref name="destination" />에 쓴 바이트 수를 나타내는 값을 포함합니다. 이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt; is big enough to receive the output; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="destination" />이 출력을 받을 충분한 크기이면 <see langword="true" />, 아니면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject">
      <summary vsli:raw="Represents an attribute used for CMS/PKCS #7 and PKCS #9 operations.">CMS/PKCS #7 및 PKCS #9 작업에 사용되는 특성을 나타냅니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject&quot; /&gt; class.">
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.#ctor(System.Security.Cryptography.AsnEncodedData)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject&quot; /&gt; class using a specified &lt;see cref=&quot;T:System.Security.Cryptography.AsnEncodedData&quot; /&gt; object as its attribute type and value.">지정된 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> 개체를 해당 특성 형식과 값으로 사용하여 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="asnEncodedData" vsli:raw="An object that contains the PKCS #9 attribute type and value to use.">사용할 PKCS #9 특성 형식과 값이 포함된 개체입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The length of the &lt;paramref name=&quot;Value&quot; /&gt; member of the &lt;paramref name=&quot;Oid&quot; /&gt; member of &lt;paramref name=&quot;asnEncodedData&quot; /&gt; is zero.">
        <paramref name="Value" />의 <paramref name="Oid" /> 멤버의 <paramref name="asnEncodedData" />  멤버 길이는 0입니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;Oid&quot; /&gt; member of &lt;paramref name=&quot;asnEncodedData&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;Value&quot; /&gt; member of the &lt;paramref name=&quot;Oid&quot; /&gt; member of &lt;paramref name=&quot;asnEncodedData&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="Oid" />의 <paramref name="asnEncodedData" /> 멤버는 <see langword="null" />입니다.  
또는 
이 <paramref name="Value" /> 멤버의 <paramref name="Oid" />인 경우 <paramref name="asnEncodedData" />의 멤버는 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.#ctor(System.Security.Cryptography.Oid,System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject&quot; /&gt; class using a specified &lt;see cref=&quot;T:System.Security.Cryptography.Oid&quot; /&gt; object as the attribute type and a specified ASN.1 encoded data as the attribute value.">지정된 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> 개체를 특성 형식으로 사용하고 지정된 ASN.1 인코딩 데이터를 특성 값으로 사용하여 <see cref="T:System.Security.Cryptography.Oid" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="oid" vsli:raw="An object that represents the PKCS #9 attribute type.">PKCS #9 특성 형식을 나타내는 개체입니다.</param>
      <param name="encodedData" vsli:raw="An array of byte values that represents the PKCS #9 attribute value.">PKCS #9 특성 값을 나타내는 바이트 값의 배열입니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.#ctor(System.String,System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject&quot; /&gt; class using a specified string representation of an object identifier (OID) as the attribute type and a specified ASN.1 encoded data as the attribute value.">OID(개체 식별자)에 대한 지정된 문자열 표현을 특성 형식으로 사용하고 지정된 ASN.1 인코딩 데이터를 특성 값으로 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="oid" vsli:raw="The string representation of an OID that represents the PKCS #9 attribute type.">PKCS #9 특성 형식을 나타내는 OID의 문자열 표현입니다.</param>
      <param name="encodedData" vsli:raw="An array of byte values that contains the PKCS #9 attribute value.">PKCS #9 특성 값이 포함된 바이트 값의 배열입니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary vsli:raw="Copies a PKCS #9 attribute type and value for this &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject&quot; /&gt; from the specified &lt;see cref=&quot;T:System.Security.Cryptography.AsnEncodedData&quot; /&gt; object.">지정된 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> 개체에서 이 <see cref="T:System.Security.Cryptography.AsnEncodedData" />에 대한 PKCS #9 특성 형식과 값을 복사합니다.</summary>
      <param name="asnEncodedData" vsli:raw="An object that contains the PKCS #9 attribute type and value to use.">사용할 PKCS #9 특성 형식과 값이 포함된 개체입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;asnEncodeData&quot; /&gt; does not represent a compatible attribute type.">
        <paramref name="asnEncodeData" />는 호환되는 특성 형식을 나타내지는 않습니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;asnEncodedData&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="asnEncodedData" />가 <see langword="null" />입니다.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.Oid">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Security.Cryptography.Oid&quot; /&gt; object that represents the type of attribute associated with this &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject&quot; /&gt; object.">이 <see cref="T:System.Security.Cryptography.Oid" /> 개체와 관련된 특성의 형식을 나타내는 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="An object that represents the type of attribute associated with this &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject&quot; /&gt; object.">이 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> 개체와 관련된 특성의 형식을 나타내는 개체입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9ContentType">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs9ContentType&quot; /&gt; class defines the type of the content of a CMS/PKCS #7 message.">
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9ContentType" /> 클래스는 CMS/PKCS #7 메시지의 내용 형식을 정의합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9ContentType.#ctor">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.Pkcs9ContentType.#ctor&quot; /&gt; constructor creates an instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs9ContentType&quot; /&gt; class.">
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9ContentType.#ctor" /> 생성자는 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9ContentType" /> 클래스의 인스턴스를 만듭니다.</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9ContentType.ContentType">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs9ContentType.ContentType&quot; /&gt; property gets an &lt;see cref=&quot;T:System.Security.Cryptography.Oid&quot; /&gt; object that contains the content type.">
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs9ContentType.ContentType" /> 속성은 내용 형식이 들어 있는 <see cref="T:System.Security.Cryptography.Oid" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="An  &lt;see cref=&quot;T:System.Security.Cryptography.Oid&quot; /&gt; object that contains the content type.">내용 형식이 들어 있는 <see cref="T:System.Security.Cryptography.Oid" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9ContentType.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary vsli:raw="Copies information from an &lt;see cref=&quot;T:System.Security.Cryptography.AsnEncodedData&quot; /&gt; object.">
        <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 개체에서 정보를 복사합니다.</summary>
      <param name="asnEncodedData" vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.AsnEncodedData&quot; /&gt; object from which to copy information.">정보를 복사할 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 개체입니다.</param>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription&quot; /&gt; class defines the description of the content of a CMS/PKCS #7 message.">
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription" /> 클래스는 CMS/PKCS #7 메시지의 내용에 대한 설명을 정의합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor&quot; /&gt; constructor creates an instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription&quot; /&gt; class.">
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor" /> 생성자는 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription" /> 클래스의 인스턴스를 만듭니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor(System.Byte[])">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor(System.Byte[])&quot; /&gt; constructor creates an instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription&quot; /&gt; class by using the specified array of byte values as the encoded description of the content of a CMS/PKCS #7 message.">
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor(System.Byte[])" /> 생성자는 지정된 바이트 값의 배열을 CMS/PKCS #7 메시지의 내용에 대한 인코딩된 설명으로 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription" /> 클래스의 인스턴스를 만듭니다.</summary>
      <param name="encodedDocumentDescription" vsli:raw="An array of byte values that specifies the encoded description of the CMS/PKCS #7 message.">CMS/PKCS #7 메시지에 대한 인코딩된 설명을 지정하는 바이트 값의 배열입니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor(System.String)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor(System.String)&quot; /&gt; constructor creates an instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription&quot; /&gt; class by using the specified description of the content of a CMS/PKCS #7 message.">
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor(System.String)" /> 생성자는 CMS/PKCS #7 메시지의 내용에 대한 지정된 설명을 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription" /> 클래스의 인스턴스를 만듭니다.</summary>
      <param name="documentDescription" vsli:raw="An instance of the &lt;see cref=&quot;T:System.String&quot; /&gt; class that specifies the description for the CMS/PKCS #7 message.">CMS/PKCS #7 메시지에 대한 설명을 지정하는 <see cref="T:System.String" /> 클래스의 인스턴스입니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary vsli:raw="Copies information from an &lt;see cref=&quot;T:System.Security.Cryptography.AsnEncodedData&quot; /&gt; object.">
        <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 개체에서 정보를 복사합니다.</summary>
      <param name="asnEncodedData" vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.AsnEncodedData&quot; /&gt; object from which to copy information.">정보를 복사할 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 개체입니다.</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.DocumentDescription">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.DocumentDescription&quot; /&gt; property retrieves the document description.">
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.DocumentDescription" /> 속성은 문서 설명을 검색합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; object that contains the document description.">문서 설명이 들어 있는 <see cref="T:System.String" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName&quot; /&gt; class defines the name of a CMS/PKCS #7 message.">
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName" /> 클래스는 CMS/PKCS #7 메시지의 이름을 정의합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor&quot; /&gt; constructor creates an instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName&quot; /&gt; class.">
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor" /> 생성자는 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName" /> 클래스의 인스턴스를 만듭니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor(System.Byte[])">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor(System.Byte[])&quot; /&gt; constructor creates an instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName&quot; /&gt; class by using the specified array of byte values as the encoded name of the content of a CMS/PKCS #7 message.">
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor(System.Byte[])" /> 생성자는 지정된 바이트 값의 배열을 CMS/PKCS #7 메시지의 내용에 대한 인코딩된 이름으로 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName" /> 클래스의 인스턴스를 만듭니다.</summary>
      <param name="encodedDocumentName" vsli:raw="An array of byte values that specifies the encoded name of the CMS/PKCS #7 message.">CMS/PKCS #7 메시지에 대한 인코딩된 이름을 지정하는 바이트 값의 배열입니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor(System.String)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor(System.String)&quot; /&gt; constructor creates an instance of the  &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName&quot; /&gt; class by using the specified name for the CMS/PKCS #7 message.">
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor(System.String)" /> 생성자는 CMS/PKCS #7 메시지에 대한 지정된 이름을 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName" /> 클래스의 인스턴스를 만듭니다.</summary>
      <param name="documentName" vsli:raw="A  &lt;see cref=&quot;T:System.String&quot; /&gt; object that specifies the name for the CMS/PKCS #7 message.">CMS/PKCS #7 메시지에 대한 이름을 지정하는 <see cref="T:System.String" /> 개체입니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary vsli:raw="Copies information from an &lt;see cref=&quot;T:System.Security.Cryptography.AsnEncodedData&quot; /&gt; object.">
        <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 개체에서 정보를 복사합니다.</summary>
      <param name="asnEncodedData" vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.AsnEncodedData&quot; /&gt; object from which to copy information.">정보를 복사할 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 개체입니다.</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.DocumentName">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.DocumentName&quot; /&gt; property retrieves the document name.">
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.DocumentName" /> 속성은 문서 이름을 검색합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; object that contains the document name.">문서 이름이 들어 있는 <see cref="T:System.String" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId">
      <summary vsli:raw="Represents the LocalKeyId attribute from PKCS#9.">PKCS#9의 LocalKeyId 특성을 나타냅니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId&quot; /&gt; class with an empty key identifier value.">빈 키 식별자 값을 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId.#ctor(System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId&quot; /&gt; class with a key identifier specified by a byte array.">바이트 배열에 지정된 키 식별자를 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="keyId" vsli:raw="A byte array containing the key identifier.">키 식별자를 포함하는 바이트 배열입니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId.#ctor(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId&quot; /&gt; class with a key identifier specified by a byte span.">바이트 범위에 지정된 키 식별자를 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="keyId" vsli:raw="A byte array containing the key identifier.">키 식별자를 포함하는 바이트 배열입니다.</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId.KeyId">
      <summary vsli:raw="Gets a memory value containing the key identifier from this attribute.">이 특성에서 키 식별자를 포함하는 메모리 값을 가져옵니다.</summary>
      <returns vsli:raw="A memory value containing the key identifier from this attribute.">이 특성의 키 식별자를 포함 하는 메모리 값입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest&quot; /&gt; class defines the message digest of a CMS/PKCS #7 message.">
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest" /> 클래스는 CMS/PKCS #7 메시지의 메시지 다이제스트를 정의합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest.#ctor">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest.#ctor&quot; /&gt; constructor creates an instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest&quot; /&gt; class.">
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest.#ctor" /> 생성자는 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest" /> 클래스의 인스턴스를 만듭니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary vsli:raw="Copies information from an &lt;see cref=&quot;T:System.Security.Cryptography.AsnEncodedData&quot; /&gt; object.">
        <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 개체에서 정보를 복사합니다.</summary>
      <param name="asnEncodedData" vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.AsnEncodedData&quot; /&gt; object from which to copy information.">정보를 복사할 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 개체입니다.</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest.MessageDigest">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest.MessageDigest&quot; /&gt; property retrieves the message digest.">
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest.MessageDigest" /> 속성은 메시지 다이제스트를 검색합니다.</summary>
      <returns vsli:raw="An array of byte values that contains the message digest.">메시지 다이제스트가 포함된 바이트 값의 배열입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime">
      <summary vsli:raw="Defines the signing date and time of a signature. A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime&quot; /&gt; object can be used as an authenticated attribute of a &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsSigner&quot; /&gt; object when an authenticated date and time are to accompany a digital signature.">
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime" /> 클래스는 서명의 서명 날짜와 시간을 정의합니다. 인증된 날짜와 시간을 디지털 서명과 함께 사용하는 경우 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime" /> 개체를 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 개체의 인증된 특성으로 사용할 수 있습니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor&quot; /&gt; constructor creates an instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime&quot; /&gt; class.">
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor" /> 생성자는 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime" /> 클래스의 인스턴스를 만듭니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor(System.Byte[])">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor(System.Byte[])&quot; /&gt; constructor creates an instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime&quot; /&gt; class by using the specified array of byte values as the encoded signing date and time of the content of a CMS/PKCS #7 message.">
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor(System.Byte[])" /> 생성자는 지정된 바이트 값 배열을 CMS/PKCS #7 메시지의 콘텐츠에 대한 인코딩된 서명 날짜와 시간으로 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime" /> 클래스의 인스턴스를 만듭니다.</summary>
      <param name="encodedSigningTime" vsli:raw="An array of byte values that specifies the encoded signing date and time of the CMS/PKCS #7 message.">CMS/PKCS #7 메시지의 인코딩된 서명 날짜와 시간을 지정하는 바이트 값 배열입니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor(System.DateTime)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor(System.DateTime)&quot; /&gt; constructor creates an instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime&quot; /&gt; class by using the specified signing date and time.">
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor(System.DateTime)" /> 생성자는 지정된 서명 날짜와 시간을 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime" /> 클래스의 인스턴스를 만듭니다.</summary>
      <param name="signingTime" vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; structure that represents the signing date and time of the signature.">서명의 서명 날짜와 시간을 나타내는 <see cref="T:System.DateTime" /> 구조체입니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary vsli:raw="Copies information from a &lt;see cref=&quot;T:System.Security.Cryptography.AsnEncodedData&quot; /&gt; object.">
        <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 개체의 정보를 복사합니다.</summary>
      <param name="asnEncodedData" vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.AsnEncodedData&quot; /&gt; object from which to copy information.">정보를 복사할 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 개체입니다.</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.SigningTime">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.SigningTime&quot; /&gt; property retrieves a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; structure that represents the date and time that the message was signed.">
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.SigningTime" /> 속성은 메시지를 서명한 날짜와 시간을 나타내는 <see cref="T:System.DateTime" /> 구조체를 검색합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.DateTime&quot; /&gt; structure that contains the date and time the document was signed.">문서를 서명한 날짜와 시간이 들어 있는 <see cref="T:System.DateTime" /> 구조체입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.PublicKeyInfo">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.PublicKeyInfo&quot; /&gt; class represents information associated with a public key.">
        <see cref="T:System.Security.Cryptography.Pkcs.PublicKeyInfo" /> 클래스는 공개 키와 관련된 정보를 나타냅니다.</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.PublicKeyInfo.Algorithm">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.PublicKeyInfo.Algorithm&quot; /&gt; property retrieves the algorithm identifier associated with the public key.">
        <see cref="P:System.Security.Cryptography.Pkcs.PublicKeyInfo.Algorithm" /> 속성은 공개 키와 관련된 알고리즘 식별자를 검색합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier&quot; /&gt; object that represents the algorithm.">
        <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> 알고리즘을 나타내는 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.PublicKeyInfo.KeyValue">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.PublicKeyInfo.KeyValue&quot; /&gt; property retrieves the value of the encoded public component of the public key pair.">
        <see cref="P:System.Security.Cryptography.Pkcs.PublicKeyInfo.KeyValue" /> 속성은 공개 키 쌍의 인코딩된 공개 구성 요소에 대한 값을 검색합니다.</summary>
      <returns vsli:raw="An array of byte values  that represents the encoded public component of the public key pair.">공개 키 쌍의 인코딩된 공개 구성 요소를 나타내는 바이트 값의 배열입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.RecipientInfo">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfo&quot; /&gt; class represents information about a CMS/PKCS #7 message recipient. The &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfo&quot; /&gt; class is an abstract class inherited by the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo&quot; /&gt; and &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo&quot; /&gt; classes.">
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 클래스는 CMS/PKCS #7 메시지 수신자에 대한 정보를 나타냅니다. <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 클래스는 <see cref="T:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo" /> 및 <see cref="T:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo" /> 클래스에 상속되는 추상 클래스입니다.</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfo.EncryptedKey">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.RecipientInfo.EncryptedKey&quot; /&gt; abstract property retrieves the encrypted recipient keying material.">
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfo.EncryptedKey" /> 추상 속성은 암호화된 수신자 키 재료를 검색합니다.</summary>
      <returns vsli:raw="An array of byte values that contain the encrypted recipient keying material.">암호화된 수신자 키 재료가 포함된 바이트 값의 배열입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfo.KeyEncryptionAlgorithm">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.RecipientInfo.KeyEncryptionAlgorithm&quot; /&gt; abstract property retrieves the algorithm used to perform the key establishment.">
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfo.KeyEncryptionAlgorithm" /> 추상 속성은 키 설정을 수행하는 데 사용된 알고리즘을 검색합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier&quot; /&gt; object that contains the value of the algorithm used to establish the key between the originator and recipient of the CMS/PKCS #7 message.">CMS/PKCS #7 메시지의 발신자와 수신자 사이에 키를 설정하는 데 사용된 알고리즘의 값이 들어 있는 <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfo.RecipientIdentifier">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.RecipientInfo.RecipientIdentifier&quot; /&gt; abstract property retrieves the identifier of the recipient.">
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfo.RecipientIdentifier" /> 추상 속성은 수신자의 식별자를 검색합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SubjectIdentifier&quot; /&gt; object that contains the identifier of the recipient.">수신자의 식별자가 포함된 <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifier" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfo.Type">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.RecipientInfo.Type&quot; /&gt; property retrieves the type of the recipient. The type of the recipient determines which of two major protocols is used to establish a key between the originator and the recipient of a CMS/PKCS #7 message.">
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfo.Type" /> 속성은 수신자의 형식을 검색합니다. 수신자 형식은 CMS/PKCS #7 메시지의 발신자와 수신자 사이에 키를 설정하는 데 사용되는 두 가지 주요 프로토콜을 결정합니다.</summary>
      <returns vsli:raw="A value of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoType&quot; /&gt; enumeration that defines the type of the recipient.">수신자 형식을 정의하는 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoType" /> 열거형의 값입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfo.Version">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.RecipientInfo.Version&quot; /&gt; abstract property retrieves the version of the recipient information. Derived classes automatically set this property for their objects, and the value indicates whether it is using PKCS #7 or Cryptographic Message Syntax (CMS) to protect messages. The version also implies whether the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfo&quot; /&gt; object establishes a cryptographic key by a key agreement algorithm or a key transport algorithm.">
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfo.Version" /> 추상 속성은 수신자 정보의 버전을 검색합니다. 파생된 클래스에서는 해당 개체에 대해 이 속성을 자동으로 설정합니다. 이 값은 메시지를 보호하기 위해 PKCS #7을 사용하는지 CMS(암호화 메시지 구문)를 사용하는지 나타냅니다. 또한 버전은 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 개체에서 암호화 키를 설정하는 데 키 계약 알고리즘을 사용하는지 키 전송 알고리즘을 사용하는지 여부도 나타냅니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value that represents the version of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfo&quot; /&gt; object.">
        <see cref="T:System.Int32" /> 개체의 버전을 나타내는 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 값입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoCollection&quot; /&gt; class represents a collection of &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfo&quot; /&gt; objects. &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoCollection&quot; /&gt; implements the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; interface.">
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 클래스는 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 개체의 컬렉션을 나타냅니다. <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" />는 <see cref="T:System.Collections.ICollection" /> 인터페이스를 구현합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Array,System.Int32)&quot; /&gt; method copies the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoCollection&quot; /&gt; collection to an array.">
        <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Array,System.Int32)" /> 메서드는 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 컬렉션을 배열에 복사합니다.</summary>
      <param name="array" vsli:raw="An &lt;see cref=&quot;T:System.Array&quot; /&gt; object to which  the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoCollection&quot; /&gt; collection is to be copied.">
        <see cref="T:System.Array" /> 컬렉션이 복사되는 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 개체입니다.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; where the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoCollection&quot; /&gt; collection is copied.">
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 컬렉션이 복사되는 <paramref name="array" />의 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="One of the arguments provided to a method was not valid.">메서드에 제공된 인수 중 하나가 잘못된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="A null reference was passed to a method that does not accept it as a valid argument.">null 참조를 유효한 인수로 사용하지 않는 메서드에 null 참조가 전달된 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value of an argument was outside the allowable range of values as defined by the called method.">인수 값이 호출된 메서드로 정의한 허용 값 범위를 벗어난 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.RecipientInfo[],System.Int32)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.RecipientInfo[],System.Int32)&quot; /&gt; method copies the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoCollection&quot; /&gt; collection to a &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfo&quot; /&gt; array.">
        <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.RecipientInfo[],System.Int32)" /> 메서드는 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 컬렉션을 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 배열에 복사합니다.</summary>
      <param name="array" vsli:raw="An array of &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfo&quot; /&gt; objects where the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoCollection&quot; /&gt; collection is to be copied.">
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 컬렉션이 복사되는 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 개체의 배열입니다.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; where the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoCollection&quot; /&gt; collection is copied.">
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 컬렉션이 복사되는 <paramref name="array" />의 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="One of the arguments provided to a method was not valid.">메서드에 제공된 인수 중 하나가 잘못된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="A null reference was passed to a method that does not accept it as a valid argument.">null 참조를 유효한 인수로 사용하지 않는 메서드에 null 참조가 전달된 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value of an argument was outside the allowable range of values as defined by the called method.">인수 값이 호출된 메서드로 정의한 허용 값 범위를 벗어난 경우</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.Count">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.Count&quot; /&gt; property retrieves the number of items in the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoCollection&quot; /&gt; collection.">
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.Count" /> 속성은 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 컬렉션의 항목 수를 검색합니다.</summary>
      <returns vsli:raw="An int value that represents the number of items in the collection.">컬렉션의 항목 수를 나타내는 int 값입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.GetEnumerator">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.GetEnumerator&quot; /&gt; method returns a &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator&quot; /&gt; object for the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoCollection&quot; /&gt; collection.">
        <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.GetEnumerator" /> 메서드는 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" /> 컬렉션에 대한 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 개체를 반환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator&quot; /&gt; object that can be used to enumerate the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoCollection&quot; /&gt; collection.">
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" /> 컬렉션을 열거하는 데 사용할 수 있는 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.IsSynchronized">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.IsSynchronized&quot; /&gt; property retrieves whether access to the collection is synchronized, or thread safe. This property always returns &lt;see langword=&quot;false&quot; /&gt;, which means the collection is not thread safe.">
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.IsSynchronized" /> 속성은 컬렉션에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지 여부를 검색합니다. 이 속성은 항상 <see langword="false" />를 반환합니다. 이는 컬렉션이 스레드로부터 안전하게 보호되지 않음을 의미합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value of &lt;see langword=&quot;false&quot; /&gt;, which means the collection is not thread safe.">
        <see cref="T:System.Boolean" /> 값입니다. 이 값은 컬렉션이 스레드로부터 안전하게 보호되지 않음을 의미하는 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.Item(System.Int32)">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.Item(System.Int32)&quot; /&gt; property retrieves the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfo&quot; /&gt; object at the specified index in the collection.">
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.Item(System.Int32)" /> 속성은 컬렉션의 지정된 인덱스에 있는 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 개체를 검색합니다.</summary>
      <param name="index" vsli:raw="An int value that represents the index in the collection. The index is zero based.">컬렉션의 인덱스를 나타내는 int 값입니다. 인덱스는 0부터 시작합니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfo&quot; /&gt; object at the specified index.">지정된 인덱스의 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 개체입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value of an argument was outside the allowable range of values as defined by the called method.">인수 값이 호출된 메서드로 정의한 허용 값 범위를 벗어난 경우</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.SyncRoot">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.SyncRoot&quot; /&gt; property retrieves an &lt;see cref=&quot;T:System.Object&quot; /&gt; object used to synchronize access to the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoCollection&quot; /&gt; collection.">
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.SyncRoot" /> 속성은 <see cref="T:System.Object" /> 컬렉션에 대한 액세스를 동기화하는 데 사용되는 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 개체를 검색합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; object used to synchronize access to the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoCollection&quot; /&gt; collection.">
        <see cref="T:System.Object" /> 개체에 대 한 액세스를 동기화 하는 데는 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 컬렉션입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.System#Collections#IEnumerable#GetEnumerator&quot; /&gt; method returns a &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator&quot; /&gt; object for the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoCollection&quot; /&gt; collection.">
        <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.System#Collections#IEnumerable#GetEnumerator" /> 메서드는 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" /> 컬렉션에 대한 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 개체를 반환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator&quot; /&gt; object that can be used to enumerate the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoCollection&quot; /&gt; collection.">
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" /> 컬렉션을 열거하는 데 사용할 수 있는 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator&quot; /&gt; class provides enumeration functionality for the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoCollection&quot; /&gt; collection. &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator&quot; /&gt; implements the &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; interface.">
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" /> 클래스는 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 컬렉션에 대한 열거형 기능을 제공합니다. <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" />는 <see cref="T:System.Collections.IEnumerator" /> 인터페이스를 구현합니다.</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.Current">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.Current&quot; /&gt; property retrieves the current &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfo&quot; /&gt; object from the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoCollection&quot; /&gt; collection.">
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.Current" /> 속성은 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 컬렉션에서 현재 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 개체를 검색합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfo&quot; /&gt; object that represents the current recipient information structure in the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoCollection&quot; /&gt; collection.">
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 컬렉션에서 현재 수신자 정보 구조를 나타내는 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.MoveNext">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.MoveNext&quot; /&gt; method advances the enumeration to the next &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfo&quot; /&gt; object in the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoCollection&quot; /&gt; collection.">
        <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.MoveNext" /> 메서드는 열거형을 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 컬렉션의 다음 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 개체로 이동합니다.</summary>
      <returns vsli:raw="This method returns a bool that specifies whether the enumeration successfully advanced. If the enumeration successfully moved to the next &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfo&quot; /&gt; object, the method returns &lt;see langword=&quot;true&quot; /&gt;. If the enumeration moved past the last item in the enumeration, it returns &lt;see langword=&quot;false&quot; /&gt;.">이 메서드는 열거형이 성공적으로 이동되었는지 여부를 나타내는 부울 값을 반환합니다. 열거형이 다음 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 개체에 성공적으로 전달되면 이 메서드는 <see langword="true" />를 반환합니다. 열거형이 열거형의 마지막 항목을 지나 이동하면 이 메서드는 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.Reset">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.Reset&quot; /&gt; method resets the enumeration to the first &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfo&quot; /&gt; object in the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoCollection&quot; /&gt; collection.">
        <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.Reset" /> 메서드는 열거형을 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 컬렉션의 첫 번째 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 개체로 다시 설정합니다.</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.System#Collections#IEnumerator#Current&quot; /&gt; property retrieves the current &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfo&quot; /&gt; object from the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoCollection&quot; /&gt; collection.">
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.System#Collections#IEnumerator#Current" /> 속성은 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 컬렉션에서 현재 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 개체를 검색합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfo&quot; /&gt; object that represents the current recipient information structure in the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoCollection&quot; /&gt; collection.">
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 컬렉션에서 현재 수신자 정보 구조를 나타내는 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.RecipientInfoType">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.RecipientInfoType&quot; /&gt; enumeration defines the types of recipient information.">
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoType" /> 열거형은 수신자 정보 형식을 정의합니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.RecipientInfoType.KeyAgreement">
      <summary vsli:raw="Key agreement recipient information.">키 동의 수신자 정보입니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.RecipientInfoType.KeyTransport">
      <summary vsli:raw="Key transport recipient information.">키 전송 수신자 정보입니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.RecipientInfoType.Unknown">
      <summary vsli:raw="The recipient information type is unknown.">수신자 정보 형식을 알 수 없습니다.</summary>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.CreateFromData(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Boolean,System.Security.Cryptography.X509Certificates.X509ExtensionCollection)">
      <param name="data" vsli:raw="The data to timestamp, which will be hashed by this method." />
      <param name="hashAlgorithm" vsli:raw="The hash algorithm to use with this timestamp request." />
      <param name="requestedPolicyId" vsli:raw="The Object Identifier (OID) for a timestamp policy the Timestamp Authority (TSA) should use, or &lt;see langword=&quot;null&quot; /&gt; to express no preference." />
      <param name="nonce" vsli:raw="An optional nonce (number used once) to uniquely identify this request to pair it with the response. The value is interpreted as an unsigned big-endian integer and may be normalized to the encoding format." />
      <param name="requestSignerCertificates" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the Timestamp Authority (TSA) must include the signing certificate in the issued timestamp token; otherwise, &lt;see langword=&quot;false&quot; /&gt;." />
      <param name="extensions" vsli:raw="An optional collection of extensions to include in the request." />
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.CreateFromHash(System.ReadOnlyMemory{System.Byte},System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Boolean,System.Security.Cryptography.X509Certificates.X509ExtensionCollection)">
      <param name="hash" vsli:raw="The pre-computed hash value to be timestamped." />
      <param name="hashAlgorithm" vsli:raw="The hash algorithm used to produce &lt;paramref name=&quot;hash&quot; /&gt;." />
      <param name="requestedPolicyId" vsli:raw="The Object Identifier (OID) for the timestamp policy that the Timestamp Authority (TSA) should use, or &lt;see langword=&quot;null&quot; /&gt; to express no preference." />
      <param name="nonce" vsli:raw="An optional value used to uniquely match a request to a response, or &lt;see langword=&quot;null&quot; /&gt; to not include a nonce in the request." />
      <param name="requestSignerCertificates" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the Timestamp Authority (TSA) must include the signing certificate in the issued timestamp token; otherwise, &lt;see langword=&quot;false&quot; /&gt;." />
      <param name="extensions" vsli:raw="An optional collection of extensions to include in the request." />
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.CreateFromHash(System.ReadOnlyMemory{System.Byte},System.Security.Cryptography.Oid,System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Boolean,System.Security.Cryptography.X509Certificates.X509ExtensionCollection)">
      <summary vsli:raw="Create a timestamp request using a pre-computed hash value and the Object Identifier for the hash algorithm.">미리 계산된 해시 값을 사용하여 타임스탬프 요청을 만듭니다.</summary>
      <param name="hash" vsli:raw="The pre-computed hash value to be timestamped.">타임스탬프가 적용될 미리 계산된 해시 값입니다.</param>
      <param name="hashAlgorithmId" vsli:raw="The Object Identifier (OID) for the hash algorithm that produced &lt;paramref name=&quot;hash&quot; /&gt;.">
        <paramref name="hash" />를 생성한 해시 알고리즘의 OID(개체 식별자)입니다.</param>
      <param name="requestedPolicyId" vsli:raw="The Object Identifier (OID) for a timestamp policy the Timestamp Authority (TSA) should use, or &lt;see langword=&quot;null&quot; /&gt; to express no preference.">TSA(타임스탬프 기관)에서 사용해야 하는 타임스탬프 정책의 OID(개체 식별자)입니다. 또는 기본 설정을 표시하지 않으려면 <see langword="null" />입니다.</param>
      <param name="nonce" vsli:raw="An optional nonce (number used once) to uniquely identify this request to pair it with the response. The value is interpreted as an unsigned big-endian integer and may be normalized to the encoding format.">요청을 응답과 연결하기 위해 해당 요청을 고유하게 식별하는 선택적 nonce(한 번 사용되는 숫자)입니다. 값은 부호 없는 big-endian 정수로 해석되며 인코딩 형식으로 정규화될 수 있습니다.</param>
      <param name="requestSignerCertificates" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the Timestamp Authority (TSA) must include the signing certificate in the issued timestamp token; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">TSA(타임스탬프 기관)에서 발급한 타임스탬프 토큰에 서명 인증서가 포함되어야 함을 나타내려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="extensions" vsli:raw="An optional collection of extensions to include in the request.">요청으로 제공되는 RFC3161 확장입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest&quot; /&gt; representing the chosen values.">선택한 값을 나타내는 <see cref="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest" />입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.CreateFromSignerInfo(System.Security.Cryptography.Pkcs.SignerInfo,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Boolean,System.Security.Cryptography.X509Certificates.X509ExtensionCollection)">
      <param name="signerInfo" vsli:raw="The CMS signer information to build a timestamp request for." />
      <param name="hashAlgorithm" vsli:raw="The hash algorithm to use with this timestamp request." />
      <param name="requestedPolicyId" vsli:raw="The Object Identifier (OID) for the timestamp policy that the Timestamp Authority (TSA) should use, or &lt;see langword=&quot;null&quot; /&gt; to express no preference." />
      <param name="nonce" vsli:raw="An optional nonce (number used once) to uniquely identify this request to pair it with the response. The value is interpreted as an unsigned big-endian integer and may be normalized to the encoding format." />
      <param name="requestSignerCertificates" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the Timestamp Authority (TSA) must include the signing certificate in the issued timestamp token; otherwise, &lt;see langword=&quot;false&quot; /&gt;." />
      <param name="extensions" vsli:raw="An optional collection of extensions to include in the request." />
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.Encode" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.GetExtensions" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.GetMessageHash" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.GetNonce" />
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.HasExtensions" />
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.HashAlgorithmId" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.ProcessResponse(System.ReadOnlyMemory{System.Byte},System.Int32@)">
      <param name="responseBytes" vsli:raw="The DER encoded timestamp response." />
      <param name="bytesConsumed" vsli:raw="When this method returns, the number of bytes that were read from &lt;paramref name=&quot;responseBytes&quot; /&gt;. This parameter is treated as uninitialized." />
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.RequestedPolicyId" />
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.RequestSignerCertificate" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.TryDecode(System.ReadOnlyMemory{System.Byte},System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest@,System.Int32@)">
      <param name="encodedBytes" vsli:raw="The buffer containing a DER-encoded timestamp request." />
      <param name="request" vsli:raw="When this method returns, the successfully decoded timestamp request if decoding succeeded, or &lt;see langword=&quot;null&quot; /&gt; if decoding failed. This parameter is treated as uninitialized." />
      <param name="bytesConsumed" vsli:raw="When this method returns, the number of bytes that were read from &lt;paramref name=&quot;encodedBytes&quot; /&gt;. This parameter is treated as uninitialized." />
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.TryEncode(System.Span{System.Byte},System.Int32@)">
      <param name="destination" vsli:raw="The buffer to receive the encoded request." />
      <param name="bytesWritten" vsli:raw="When this method returns, the total number of bytes written into &lt;paramref name=&quot;destination&quot; /&gt;. This parameter is treated as uninitialized." />
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.Version" />
    <member name="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.AsSignedCms">
      <summary vsli:raw="Gets a Signed Cryptographic Message Syntax (CMS) representation of the RFC3161 time-stamp token.">RFC3161 타임스탬프 토큰의 서명된 CMS(암호화 메시지 구문) 표현을 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignedCms&quot; /&gt; representation of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken&quot; /&gt;.">
        <see cref="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken" />의 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 표현입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.TokenInfo" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.TryDecode(System.ReadOnlyMemory{System.Byte},System.Security.Cryptography.Pkcs.Rfc3161TimestampToken@,System.Int32@)">
      <param name="encodedBytes" vsli:raw="The buffer containing a DER-encoded time-stamp token." />
      <param name="token" vsli:raw="When this method returns, the successfully decoded time-stamp token if decoding succeeded, or &lt;see langword=&quot;null&quot; /&gt; if decoding failed. This parameter is treated as uninitialized." />
      <param name="bytesConsumed" vsli:raw="When this method returns, the number of bytes that were read from &lt;paramref name=&quot;encodedBytes&quot; /&gt;. This parameter is treated as uninitialized." />
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.VerifySignatureForData(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.X509Certificates.X509Certificate2@,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <param name="data" vsli:raw="The data to verify against this time-stamp token." />
      <param name="signerCertificate" vsli:raw="When this method returns, the certificate from the Timestamp Authority (TSA) which signed this token, or &lt;see langword=&quot;null&quot; /&gt; if a signer certificate cannot be determined. This parameter is treated as uninitialized." />
      <param name="extraCandidates" vsli:raw="An optional collection of certificates to consider as the Timestamp Authority (TSA) certificates, in addition to any certificates that may be included within the token." />
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.VerifySignatureForHash(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.X509Certificates.X509Certificate2@,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <param name="hash" vsli:raw="The cryptographic hash to verify against this time-stamp token." />
      <param name="hashAlgorithm" vsli:raw="The algorithm which produced &lt;paramref name=&quot;hash&quot; /&gt;." />
      <param name="signerCertificate" vsli:raw="When this method returns, the certificate from the Timestamp Authority (TSA) which signed this token, or &lt;see langword=&quot;null&quot; /&gt; if a signer certificate cannot be determined. This parameter is treated as uninitialized." />
      <param name="extraCandidates" vsli:raw="An optional collection of certificates to consider as the Timestamp Authority (TSA) certificates, in addition to any certificates that may be included within the token." />
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.VerifySignatureForHash(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.Oid,System.Security.Cryptography.X509Certificates.X509Certificate2@,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <param name="hash" vsli:raw="The cryptographic hash to verify against this time-stamp token." />
      <param name="hashAlgorithmId" vsli:raw="The OID of the hash algorithm." />
      <param name="signerCertificate" vsli:raw="When this method returns, the certificate from the Timestamp Authority (TSA) which signed this token, or &lt;see langword=&quot;null&quot; /&gt; if a signer certificate cannot be determined. This parameter is treated as uninitialized." />
      <param name="extraCandidates" vsli:raw="An optional collection of certificates to consider as the Timestamp Authority (TSA) certificates, in addition to any certificates that may be included within the token." />
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.VerifySignatureForSignerInfo(System.Security.Cryptography.Pkcs.SignerInfo,System.Security.Cryptography.X509Certificates.X509Certificate2@,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <param name="signerInfo" vsli:raw="The CMS signer information to verify the timestamp was built for." />
      <param name="signerCertificate" vsli:raw="When this method returns, the certificate from the Timestamp Authority (TSA) that signed this token, or &lt;see langword=&quot;null&quot; /&gt; if a signer certificate cannot be determined. This parameter is treated as uninitialized." />
      <param name="extraCandidates" vsli:raw="An optional collection of certificates to consider as the Timestamp Authority (TSA) certificates, in addition to any certificates that may be included within the token." />
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.#ctor(System.Security.Cryptography.Oid,System.Security.Cryptography.Oid,System.ReadOnlyMemory{System.Byte},System.ReadOnlyMemory{System.Byte},System.DateTimeOffset,System.Nullable{System.Int64},System.Boolean,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Security.Cryptography.X509Certificates.X509ExtensionCollection)">
      <param name="policyId" vsli:raw="An OID representing the TSA's policy under which the response was produced." />
      <param name="hashAlgorithmId" vsli:raw="A hash algorithm OID of the data to be timestamped." />
      <param name="messageHash" vsli:raw="A hash value of the data to be timestamped." />
      <param name="serialNumber" vsli:raw="An integer assigned by the TSA to the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo&quot; /&gt;." />
      <param name="timestamp" vsli:raw="The timestamp encoded in the token." />
      <param name="accuracyInMicroseconds" vsli:raw="The accuracy with which &lt;paramref name=&quot;timestamp&quot; /&gt; is compared. Also see &lt;paramref name=&quot;isOrdering&quot; /&gt;." />
      <param name="isOrdering" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to ensure that every timestamp token from the same TSA can always be ordered based on the &lt;paramref name=&quot;timestamp&quot; /&gt;, regardless of the accuracy; &lt;see langword=&quot;false&quot; /&gt; to make &lt;paramref name=&quot;timestamp&quot; /&gt; indicate when token has been created by the TSA." />
      <param name="nonce" vsli:raw="The nonce associated with this timestamp token. Using a nonce always allows to detect replays, and hence its use is recommended." />
      <param name="timestampAuthorityName" vsli:raw="The hint in the TSA name identification. The actual identification of the entity that signed the response will always occur through the use of the certificate identifier." />
      <param name="extensions" vsli:raw="The extension values associated with the timestamp." />
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.AccuracyInMicroseconds" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.Encode" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.GetExtensions" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.GetMessageHash" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.GetNonce" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.GetSerialNumber" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.GetTimestampAuthorityName" />
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.HasExtensions" />
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.HashAlgorithmId" />
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.IsOrdering" />
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.PolicyId" />
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.Timestamp" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.TryDecode(System.ReadOnlyMemory{System.Byte},System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo@,System.Int32@)">
      <param name="encodedBytes" vsli:raw="The input or source buffer." />
      <param name="timestampTokenInfo" vsli:raw="When this method returns &lt;see langword=&quot;true&quot; /&gt;, the decoded data. When this method returns &lt;see langword=&quot;false&quot; /&gt;, the value is &lt;see langword=&quot;null&quot; /&gt;, meaning the data could not be decoded." />
      <param name="bytesConsumed" vsli:raw="The number of bytes used for decoding." />
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.TryEncode(System.Span{System.Byte},System.Int32@)">
      <param name="destination" vsli:raw="The destination buffer." />
      <param name="bytesWritten" vsli:raw="When this method returns &lt;see langword=&quot;true&quot; /&gt;, contains the bytes written to the &lt;paramref name=&quot;destination&quot; /&gt; buffer." />
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.Version" />
    <member name="T:System.Security.Cryptography.Pkcs.SignedCms">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignedCms&quot; /&gt; class enables signing and verifying of CMS/PKCS #7 messages.">
        <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 클래스를 사용하면 CMS/PKCS #7 메시지에 서명하고 확인할 수 있습니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignedCms.#ctor&quot; /&gt; constructor creates an instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignedCms&quot; /&gt; class.">
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor" /> 생성자는 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 클래스의 인스턴스를 만듭니다.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="A null reference was passed to a method that does not accept it as a valid argument.">null 참조를 유효한 인수로 사용하지 않는 메서드에 null 참조가 전달된 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)&quot; /&gt; constructor creates an instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignedCms&quot; /&gt; class by using the specified content information as the inner content.">
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)" /> 생성자는 지정된 콘텐츠 정보를 내부 콘텐츠로 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 클래스의 인스턴스를 만듭니다.</summary>
      <param name="contentInfo" vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.ContentInfo&quot; /&gt; object that specifies the content information as the inner content of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignedCms&quot; /&gt; message.">콘텐츠 정보를 <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 메시지의 내부 콘텐츠로 지정하는 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="A null reference was passed to a method that does not accept it as a valid argument.">null 참조를 유효한 인수로 사용하지 않는 메서드에 null 참조가 전달된 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)&quot; /&gt; constructor creates an instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignedCms&quot; /&gt; class by using the specified content information as the inner content and by using the detached state.">
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)" /> 생성자는 지정된 콘텐츠 정보를 내부 콘텐츠로 사용하고 분리 상태를 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 클래스의 인스턴스를 만듭니다.</summary>
      <param name="contentInfo" vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.ContentInfo&quot; /&gt; object that specifies the content information as the inner content of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignedCms&quot; /&gt; message.">콘텐츠 정보를 <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 메시지의 내부 콘텐츠로 지정하는 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 개체입니다.</param>
      <param name="detached" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignedCms&quot; /&gt; object is for a detached signature. If &lt;paramref name=&quot;detached&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, the signature is detached. If &lt;paramref name=&quot;detached&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;, the signature is not detached.">
        <see cref="T:System.Boolean" /> 개체가 분리된 서명에 사용되는지 여부를 지정하는 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 값입니다. <paramref name="detached" />가 <see langword="true" />이면 서명이 분리되며, <paramref name="detached" />가 <see langword="false" />이면 서명이 분리되지 않습니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="A null reference was passed to a method that does not accept it as a valid argument.">null 참조를 유효한 인수로 사용하지 않는 메서드에 null 참조가 전달된 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)&quot; /&gt; constructor creates an instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignedCms&quot; /&gt; class by using the specified subject identifier type as the default subject identifier type for signers.">
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)" /> 생성자는 지정된 주체 식별자 형식을 서명자의 기본 주체 식별자 형식으로 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 클래스의 인스턴스를 만듭니다.</summary>
      <param name="signerIdentifierType" vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SubjectIdentifierType&quot; /&gt; member that specifies the default subject identifier type for signers.">서명자의 기본 주체 식별자 형식을 지정하는 <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> 멤버입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="A null reference was passed to a method that does not accept it as a valid argument.">null 참조를 유효한 인수로 사용하지 않는 메서드에 null 참조가 전달된 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)&quot; /&gt; constructor creates an instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignedCms&quot; /&gt; class by using the specified subject identifier type as the default subject identifier type for signers and content information as the inner content.">
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)" /> 생성자는 지정된 주체 식별자 형식을 서명자의 기본 주체 식별자 형식으로 사용하고 콘텐츠 정보를 내부 콘텐츠로 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 클래스의 인스턴스를 만듭니다.</summary>
      <param name="signerIdentifierType" vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SubjectIdentifierType&quot; /&gt; member that specifies the default subject identifier type for signers.">서명자의 기본 주체 식별자 형식을 지정하는 <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> 멤버입니다.</param>
      <param name="contentInfo" vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.ContentInfo&quot; /&gt; object that specifies the content information as the inner content of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignedCms&quot; /&gt; message.">콘텐츠 정보를 <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 메시지의 내부 콘텐츠로 지정하는 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="A null reference was passed to a method that does not accept it as a valid argument.">null 참조를 유효한 인수로 사용하지 않는 메서드에 null 참조가 전달된 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)&quot; /&gt; constructor creates an instance of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignedCms&quot; /&gt; class by using the specified subject identifier type as the default subject identifier type for signers, the content information as the inner content, and by using the detached state.">
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)" /> 생성자는 지정된 주체 식별자 형식을 서명자의 기본 주체 식별자 형식으로 사용하고 콘텐츠 정보를 내부 콘텐츠로 사용하며 분리 상태를 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 클래스의 인스턴스를 만듭니다.</summary>
      <param name="signerIdentifierType" vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SubjectIdentifierType&quot; /&gt; member that specifies the default subject identifier type for signers.">서명자의 기본 주체 식별자 형식을 지정하는 <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> 멤버입니다.</param>
      <param name="contentInfo" vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.ContentInfo&quot; /&gt; object that specifies the content information as the inner content of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignedCms&quot; /&gt; message.">콘텐츠 정보를 <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 메시지의 내부 콘텐츠로 지정하는 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 개체입니다.</param>
      <param name="detached" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignedCms&quot; /&gt; object is for a detached signature. If &lt;paramref name=&quot;detached&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, the signature is detached. If detached is &lt;see langword=&quot;false&quot; /&gt;, the signature is not detached.">
        <see cref="T:System.Boolean" /> 개체가 분리된 서명에 사용되는지 여부를 지정하는 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 값입니다. <paramref name="detached" />가 <see langword="true" />이면 서명이 분리되며, detached가 <see langword="false" />이면 서명이 분리되지 않습니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="A null reference was passed to a method that does not accept it as a valid argument.">null 참조를 유효한 인수로 사용하지 않는 메서드에 null 참조가 전달된 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.AddCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary vsli:raw="Adds a certificate to the collection of certificates for the encoded CMS/PKCS #7 message.">인코딩된 CMS/PKCS #7 메시지의 인증서 컬렉션에 인증서를 추가합니다.</summary>
      <param name="certificate" vsli:raw="The certificate to add to the collection.">컬렉션에 추가할 인증서입니다.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The certificate already exists in the collection.">인증서가 이미 컬렉션에 있습니다.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignedCms.Certificates">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SignedCms.Certificates&quot; /&gt; property retrieves the certificates associated with the encoded CMS/PKCS #7 message.">
        <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.Certificates" /> 속성은 인코딩된 CMS/PKCS #7 메시지와 관련된 인증서를 검색합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection&quot; /&gt; collection that represents the set of certificates for the encoded CMS/PKCS #7 message.">인코딩된 CMS/PKCS #7 메시지의 인증서 집합을 나타내는 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> 컬렉션입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash&quot; /&gt; method verifies the data integrity of the CMS/PKCS #7 message. &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash&quot; /&gt; is a specialized method used in specific security infrastructure applications that only wish to check the hash of the CMS message, rather than perform a full digital signature verification. &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash&quot; /&gt; does not authenticate the author nor sender of the message because this method does not involve verifying a digital signature. For general-purpose checking of the integrity and authenticity of a CMS/PKCS #7 message, use the &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)&quot; /&gt; methods.">
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash" /> 메서드는 CMS/PKCS #7 메시지의 데이터 무결성을 확인합니다. <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash" />는 전체 디지털 서명 확인을 수행하지 않고, CMS 메시지의 해시만 검사하려는 특정 보안 인프라 애플리케이션에 사용되는 특수화된 메서드입니다. <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash" />는 메시지의 작성자나 송신자를 인증하지 않습니다. 이 메서드는 디지털 서명 확인 작업과 관련되지 않기 때문입니다. CMS/PKCS #7 메시지의 무결성과 인증을 검사하는 일반적인 목적으로는 <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)" /> 또는 <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" /> 메서드를 사용합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A method call was invalid for the object's current state.">개체의 현재 상태에서 메서드 호출을 사용할 수 없는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)&quot; /&gt; method verifies the digital signatures on the signed CMS/PKCS #7 message and, optionally, validates the signers' certificates.">
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)" /> 메서드는 서명된 CMS/PKCS #7 메시지에서 디지털 서명의 안정성을 확인하며 필요에 따라 서명자 인증서의 유효성을 검사합니다.</summary>
      <param name="verifySignatureOnly" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether only the digital signatures are verified without the signers' certificates being validated.  &#xA;  &#xA; If &lt;paramref name=&quot;verifySignatureOnly&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, only the digital signatures are verified. If it is &lt;see langword=&quot;false&quot; /&gt;, the digital signatures are verified, the signers' certificates are validated, and the purposes of the certificates are validated. The purposes of a certificate are considered valid if the certificate has no key usage or if the key usage supports digital signatures or nonrepudiation.">서명자 인증서의 유효성은 검사하지 않고 디지털 서명의 안정성만 확인할 것인지 여부를 지정하는 <see cref="T:System.Boolean" /> 값입니다.  
<paramref name="verifySignatureOnly" />가 <see langword="true" />이면 디지털 서명의 안정성만 확인합니다. <see langword="false" />이면 디지털 서명의 안정성을 확인하고 서명자 인증서의 유효성을 검사한 다음 인증서 용도의 유효성을 검사합니다. 인증서에 키 용도가 없거나 키 용도가 디지털 서명 또는 거부 불가능을 지원하는 경우 인증서 용도가 유효한 것으로 간주됩니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="A null reference was passed to a method that does not accept it as a valid argument.">null 참조를 유효한 인수로 사용하지 않는 메서드에 null 참조가 전달된 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="A cryptographic operation could not be completed.">암호화 작업을 완료할 수 없는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A method call was invalid for the object's current state.">개체의 현재 상태에서 메서드 호출을 사용할 수 없는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)&quot; /&gt; method verifies the digital signatures on the signed CMS/PKCS #7 message by using the specified collection of certificates and, optionally, validates the signers' certificates.">
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" /> 메서드는 지정된 인증서 컬렉션을 사용하여 서명된 CMS/PKCS #7 메시지에서 디지털 서명의 안정성을 확인하고 필요에 따라 서명자 인증서의 유효성을 검사합니다.</summary>
      <param name="extraStore" vsli:raw="An &lt;see cref=&quot;T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection&quot; /&gt; object that can be used to validate the certificate chain. If no additional certificates are to be used to validate the certificate chain, use &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)&quot; /&gt; instead of &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)&quot; /&gt;.">인증서 체인의 유효성을 검사하는 데 사용할 수 있는 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> 개체입니다. 인증서 체인의 유효성을 검사하기 위해 추가 인증서를 사용해야 하는 경우 <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)" />를 <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" /> 대신 사용합니다.</param>
      <param name="verifySignatureOnly" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether only the digital signatures are verified without the signers' certificates being validated.  &#xA;  &#xA; If &lt;paramref name=&quot;verifySignatureOnly&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, only the digital signatures are verified. If it is &lt;see langword=&quot;false&quot; /&gt;, the digital signatures are verified, the signers' certificates are validated, and the purposes of the certificates are validated. The purposes of a certificate are considered valid if the certificate has no key usage or if the key usage supports digital signatures or nonrepudiation.">서명자 인증서의 유효성은 검사하지 않고 디지털 서명의 안정성만 확인할 것인지 여부를 지정하는 <see cref="T:System.Boolean" /> 값입니다.  
<paramref name="verifySignatureOnly" />가 <see langword="true" />이면 디지털 서명의 안정성만 확인합니다. <see langword="false" />이면 디지털 서명의 안정성을 확인하고 서명자 인증서의 유효성을 검사한 다음 인증서 용도의 유효성을 검사합니다. 인증서에 키 용도가 없거나 키 용도가 디지털 서명 또는 거부 불가능을 지원하는 경우 인증서 용도가 유효한 것으로 간주됩니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="A null reference was passed to a method that does not accept it as a valid argument.">null 참조를 유효한 인수로 사용하지 않는 메서드에 null 참조가 전달된 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="A cryptographic operation could not be completed.">암호화 작업을 완료할 수 없는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A method call was invalid for the object's current state.">개체의 현재 상태에서 메서드 호출을 사용할 수 없는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature">
      <summary vsli:raw="Creates a signature and adds the signature to the CMS/PKCS #7 message.">서명을 만들고 이 서명을 CMS/PKCS #7 메시지에 추가합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw=".NET Framework (all versions) and .NET Core 3.0 and later: The recipient certificate is not specified.">.NET Framework(모든 버전) 및 .NET Core 3.0 이상: 받는 사람 인증서가 지정되지 않았습니다.</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core version 2.2 and earlier: No signer certificate was provided.">.NET Core 버전 2.2 및 이전 버전: 서명자 인증서가 제공되지 않았습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner)">
      <summary vsli:raw="Creates a signature using the specified signer and adds the signature to the CMS/PKCS #7 message.">
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner)" /> 메서드는 지정된 서명자를 사용하여 서명을 만들고 이 서명을 CMS/PKCS #7 메시지에 추가합니다.</summary>
      <param name="signer" vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsSigner&quot; /&gt; object that represents the signer.">서명자를 나타내는 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="A null reference was passed to a method that does not accept it as a valid argument.">null 참조를 유효한 인수로 사용하지 않는 메서드에 null 참조가 전달된 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="A cryptographic operation could not be completed.">암호화 작업을 완료할 수 없는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner,System.Boolean)">
      <summary vsli:raw="Creates a signature using the specified signer and adds the signature to the CMS/PKCS #7 message.">지정된 서명자를 사용하여 서명을 만들고 이 서명을 CMS/PKCS #7 메시지에 추가합니다.</summary>
      <param name="signer" vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsSigner&quot; /&gt; object that represents the signer.">서명자를 나타내는 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 개체입니다.</param>
      <param name="silent" vsli:raw=".NET Core and .NET 5+ only: &lt;see langword=&quot;true&quot; /&gt; to request opening keys with PIN prompts disabled, where supported; otherwise, &lt;see langword=&quot;false&quot; /&gt;. In .NET Framework, this parameter is not used and a PIN prompt is always shown, if required.">이 매개 변수는 사용되지 않습니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;signer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="signer" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="A cryptographic operation could not be completed.">암호화 작업을 완료할 수 없는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw=".NET Framework only: A signing certificate is not specified.">.NET Framework만 해당: 서명 인증서가 지정되지 않았습니다.</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: A signing certificate is not specified.">.NET Core만 해당: 서명 인증서가 지정되지 않았습니다.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo&quot; /&gt; property retrieves the inner contents of the encoded CMS/PKCS #7 message.">
        <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo" /> 속성은 인코딩된 CMS/PKCS #7 메시지의 내부 콘텐츠를 검색합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.ContentInfo&quot; /&gt; object that represents the contents of the encoded CMS/PKCS #7 message.">인코딩된 CMS/PKCS #7 메시지의 콘텐츠를 나타내는 <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])">
      <summary vsli:raw="Decodes an encoded &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignedCms&quot; /&gt; message.">
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])" /> 메서드는 인코딩된 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 메시지를 디코딩합니다. 디코딩이 성공적으로 완료되면 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 개체의 속성에서 디코딩된 정보를 검색할 수 있습니다.</summary>
      <param name="encodedMessage" vsli:raw="An array of byte values that represents the encoded CMS/PKCS#7 message to be decoded.">디코딩할 인코딩된 CMS/PKCS #7 메시지를 나타내는 바이트 값의 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;encodedMessage&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">null 참조를 유효한 인수로 사용하지 않는 메서드에 null 참조가 전달된 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="&lt;paramref name=&quot;encodedMessage&quot; /&gt; could not be decoded successfully.">암호화 작업을 완료할 수 없는 경우</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignedCms.Detached">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SignedCms.Detached&quot; /&gt; property retrieves whether the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignedCms&quot; /&gt; object is for a detached signature.">
        <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.Detached" /> 속성은 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 개체가 분리된 서명에 사용되는지 여부를 검색합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignedCms&quot; /&gt; object is for a detached signature. If this property is &lt;see langword=&quot;true&quot; /&gt;, the signature is detached. If this property is &lt;see langword=&quot;false&quot; /&gt;, the signature is not detached.">
        <see cref="T:System.Boolean" /> 개체가 분리된 서명에 사용되는지 여부를 지정하는 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 값입니다. 이 속성이 <see langword="true" />이면 서명이 분리되며, 이 속성이 <see langword="false" />이면 서명이 분리되지 않습니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.Encode">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignedCms.Encode&quot; /&gt; method encodes the information in the object into a CMS/PKCS #7 message.">
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.Encode" /> 메서드는 개체의 정보를 CMS/PKCS #7 메시지로 인코딩합니다.</summary>
      <returns vsli:raw="An array of byte values that represents the encoded message. The encoded message can be decoded by the &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])&quot; /&gt; method.">인코딩된 메시지를 나타내는 바이트 값의 배열입니다. 인코딩된 메시지는 <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])" /> 메서드를 사용하여 디코딩할 수 있습니다.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="A cryptographic operation could not be completed.">암호화 작업을 완료할 수 없는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A method call was invalid for the object's current state.">개체의 현재 상태에서 메서드 호출을 사용할 수 없는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.RemoveCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary vsli:raw="Removes the specified certificate from the collection of certificates for the encoded CMS/PKCS #7 message.">인코딩된 CMS/PKCS #7 메시지의 인증서 컬렉션에서 지정된 인증서를 제거합니다.</summary>
      <param name="certificate" vsli:raw="The certificate to remove from the collection.">컬렉션에서 제거할 인증서입니다.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The certificate was not found.">인증서를 찾을 수 없습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Int32)">
      <summary vsli:raw="Removes the signature at the specified index of the &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos&quot; /&gt; collection.">
        <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos" /> 컬렉션의 지정한 인덱스에 있는 서명을 제거합니다.</summary>
      <param name="index" vsli:raw="The zero-based index of the signature to remove.">제거할 서명의 0부터 시작하는 인덱스입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A CMS/PKCS #7 message is not signed, and &lt;paramref name=&quot;index&quot; /&gt; is invalid.">A CMS/PKCS #7 메시지가 서명되지 않았고 <paramref name="index" />가 잘못되었습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is greater than the signature count minus 1.">
        <paramref name="index" />가 0보다 작은 경우  
또는 
 <paramref name="index" />는 서명 개수 - 1보다 큽니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The signature could not be removed.  &#xA;  &#xA; -or-  &#xA;  &#xA; An internal cryptographic error occurred.">서명을 제거할 수 없습니다.  
 또는  
 내부 암호화 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Security.Cryptography.Pkcs.SignerInfo)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Security.Cryptography.Pkcs.SignerInfo)&quot; /&gt; method removes the signature for the specified &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfo&quot; /&gt; object.">
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Security.Cryptography.Pkcs.SignerInfo)" /> 메서드는 지정된 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 개체에 대한 서명을 제거합니다.</summary>
      <param name="signerInfo" vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfo&quot; /&gt; object that represents the countersignature being removed.">제거할 연대 서명을 나타내는 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="A null reference was passed to a method that does not accept it as a valid argument.">null 참조를 유효한 인수로 사용하지 않는 메서드에 null 참조가 전달된 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value of an argument was outside the allowable range of values as defined by the called method.">인수 값이 호출된 메서드로 정의한 허용 값 범위를 벗어난 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="A cryptographic operation could not be completed.">암호화 작업을 완료할 수 없는 경우</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos&quot; /&gt; property retrieves the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoCollection&quot; /&gt; collection associated with the CMS/PKCS #7 message.">
        <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos" /> 속성은 CMS/PKCS #7 메시지와 관련된 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 컬렉션을 검색합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoCollection&quot; /&gt; object that represents the signer information for the CMS/PKCS #7 message.">CMS/PKCS #7 메시지의 서명자 정보를 나타내는 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignedCms.Version">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SignedCms.Version&quot; /&gt; property retrieves the version of the CMS/PKCS #7 message.">
        <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.Version" /> 속성은 CMS/PKCS #7 메시지의 버전을 검색합니다.</summary>
      <returns vsli:raw="An int value that represents the CMS/PKCS #7 message version.">CMS/PKCS #7 메시지의 버전을 나타내는 int 값입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SignerInfo">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfo&quot; /&gt; class represents a signer associated with a &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignedCms&quot; /&gt; object that represents a CMS/PKCS #7 message.">
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 클래스는 CMS/PKCS #7 메시지를 나타내는 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 개체와 관련된 서명자를 나타냅니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.AddUnsignedAttribute(System.Security.Cryptography.AsnEncodedData)">
      <summary vsli:raw="Adds the specified attribute to the current document.">지정된 특성을 현재 문서에 추가합니다.</summary>
      <param name="asnEncodedData">문서에 추가할 ASN.1 인코딩된 특성입니다.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="Cannot find the original signer.&#xA;        &#xA; -or-&#xA;&#xA;ASN1 corrupted data.">원래 서명자를 찾을 수 없습니다.
 또는
ASN1 손상된 데이터입니다.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.Certificate">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SignerInfo.Certificate&quot; /&gt; property retrieves the signing certificate associated with the signer information.">
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.Certificate" /> 속성은 서명자 정보와 관련된 서명 인증서를 검색합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Security.Cryptography.X509Certificates.X509Certificate2&quot; /&gt; object that represents the signing certificate.">서명 인증서를 나타내는 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash&quot; /&gt; method verifies the data integrity of the CMS/PKCS #7 message signer information. &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash&quot; /&gt; is a specialized method used in specific security infrastructure applications in which the subject uses the HashOnly member of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SubjectIdentifierType&quot; /&gt; enumeration when setting up a &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsSigner&quot; /&gt; object. &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash&quot; /&gt; does not authenticate the signer information because this method does not involve verifying a digital signature. For general-purpose checking of the integrity and authenticity of CMS/PKCS #7 message signer information and countersignatures, use the &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)&quot; /&gt; or &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)&quot; /&gt; methods.">
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash" /> 메서드는 CMS/PKCS #7 메시지 서명자 정보의 데이터 무결성을 확인합니다. <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash" />는 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 개체를 설정할 때 주체가 <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> 열거형의 HashOnly 멤버를 사용하는 특정 보안 인프라 애플리케이션에서 사용되는 특수 메서드입니다. <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash" />는 서명자 정보를 인증하지 않습니다. 이 메서드는 디지털 서명 확인 작업과 관련되지 않기 때문입니다. CMS/PKCS #7 메시지 서명자 정보와 연대 서명의 무결성과 인증을 검사하는 일반적인 목적으로는 <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)" /> 또는 <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" /> 메서드를 사용합니다.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="A cryptographic operation could not be completed.">암호화 작업을 완료할 수 없는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)&quot; /&gt; method verifies the digital signature of the message and, optionally, validates the certificate.">
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)" /> 메서드는 메시지의 디지털 서명 안정성을 확인하고 선택에 따라 인증서의 유효성을 검사합니다.</summary>
      <param name="verifySignatureOnly" vsli:raw="A bool value that specifies whether only the digital signature is verified. If &lt;paramref name=&quot;verifySignatureOnly&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, only the signature is verified. If &lt;paramref name=&quot;verifySignatureOnly&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;, the digital signature is verified, the certificate chain is validated, and the purposes of the certificates are validated. The purposes of the certificate are considered valid if the certificate has no key usage or if the key usage supports digital signature or nonrepudiation.">디지털 서명의 안정성만 확인할지 지정하는 부울 값입니다. <paramref name="verifySignatureOnly" />가 <see langword="true" />이면 서명의 안정성만 확인합니다. <paramref name="verifySignatureOnly" />가 <see langword="false" />이면 디지털 서명의 안정성을 확인하고 인증서 체인의 유효성을 검사한 다음 인증서 용도의 유효성을 검사합니다. 인증서에 키 용도가 없거나 키 용도가 디지털 서명 또는 거부 불가능을 지원하는 경우 인증서 용도가 유효한 것으로 간주됩니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="A null reference was passed to a method that does not accept it as a valid argument.">null 참조를 유효한 인수로 사용하지 않는 메서드에 null 참조가 전달된 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="A cryptographic operation could not be completed.">암호화 작업을 완료할 수 없는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A method call was invalid for the object's current state.">개체의 현재 상태에서 메서드 호출을 사용할 수 없는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)&quot; /&gt; method verifies the digital signature of the message by using the specified collection of certificates and, optionally, validates the certificate.">
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" /> 메서드는 지정된 인증서 컬렉션을 사용하여 메시지의 디지털 서명의 안정성을 확인하고 선택에 따라 인증서의 유효성을 검사합니다.</summary>
      <param name="extraStore" vsli:raw="An &lt;see cref=&quot;T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection&quot; /&gt; object that can be used to validate the chain. If no additional certificates are to be used to validate the chain, use &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)&quot; /&gt; instead of &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)&quot; /&gt;.">체인의 유효성을 검사하는 데 사용할 수 있는 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> 개체입니다. 체인의 유효성을 검사하기 위해 추가 인증서를 사용해야 하는 경우 <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)" />를 <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" /> 대신 사용합니다.</param>
      <param name="verifySignatureOnly" vsli:raw="A bool value that specifies whether only the digital signature is verified. If &lt;paramref name=&quot;verifySignatureOnly&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, only the signature is verified. If &lt;paramref name=&quot;verifySignatureOnly&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;, the digital signature is verified, the certificate chain is validated, and the purposes of the certificates are validated. The purposes of the certificate are considered valid if the certificate has no key usage or if the key usage supports digital signature or nonrepudiation.">디지털 서명의 안정성만 확인할지 지정하는 부울 값입니다. <paramref name="verifySignatureOnly" />가 <see langword="true" />이면 서명의 안정성만 확인합니다. <paramref name="verifySignatureOnly" />가 <see langword="false" />이면 디지털 서명의 안정성을 확인하고 인증서 체인의 유효성을 검사한 다음 인증서 용도의 유효성을 검사합니다. 인증서에 키 용도가 없거나 키 용도가 디지털 서명 또는 거부 불가능을 지원하는 경우 인증서 용도가 유효한 것으로 간주됩니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="A null reference was passed to a method that does not accept it as a valid argument.">null 참조를 유효한 인수로 사용하지 않는 메서드에 null 참조가 전달된 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="A cryptographic operation could not be completed.">암호화 작업을 완료할 수 없는 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A method call was invalid for the object's current state.">개체의 현재 상태에서 메서드 호출을 사용할 수 없는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature&quot; /&gt; method prompts the user to select a signing certificate, creates a countersignature, and adds the signature to the CMS/PKCS #7 message. Countersignatures are restricted to one level.">
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature" /> 메서드는 서명 인증서를 선택하고 연대 서명을 만든 다음 이 서명을 CMS/PKCS #7 메시지에 추가하도록 관련 메시지를 사용자에게 표시합니다. 연대 서명은 한 수준으로 제한됩니다.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="A null reference was passed to a method that does not accept it as a valid argument.">null 참조를 유효한 인수로 사용하지 않는 메서드에 null 참조가 전달된 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="A cryptographic operation could not be completed.">암호화 작업을 완료할 수 없는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)&quot; /&gt; method creates a countersignature by using the specified signer and adds the signature to the CMS/PKCS #7 message. Countersignatures are restricted to one level.">
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)" /> 메서드는 지정된 서명자를 사용하여 연대 서명을 만들고 이 서명을 CMS/PKCS #7 메시지에 추가합니다. 연대 서명은 한 수준으로 제한됩니다.</summary>
      <param name="signer" vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsSigner&quot; /&gt; object that represents the counter signer.">연대 서명자를 나타내는 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="A null reference was passed to a method that does not accept it as a valid argument.">null 참조를 유효한 인수로 사용하지 않는 메서드에 null 참조가 전달된 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="A cryptographic operation could not be completed.">암호화 작업을 완료할 수 없는 경우</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos&quot; /&gt; property retrieves the set of counter signers associated with the signer information.">
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos" /> 속성은 서명자 정보와 관련된 연대 서명자 집합을 검색합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoCollection&quot; /&gt; collection that represents the counter signers for the signer information. If there are no counter signers, the property is an empty collection.">서명자 정보에 대한 연대 서명자를 나타내는 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 컬렉션입니다. 연대 서명자가 없으면 이 속성은 빈 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm&quot; /&gt; property retrieves the &lt;see cref=&quot;T:System.Security.Cryptography.Oid&quot; /&gt; object that represents the hash algorithm used in the computation of the signatures.">
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm" /> 속성은 서명 계산에 사용되는 해시 알고리즘을 나타내는 <see cref="T:System.Security.Cryptography.Oid" /> 개체를 검색합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Security.Cryptography.Oid&quot; /&gt; object that represents the hash algorithm used with the signature.">서명에 사용되는 해시 알고리즘을 나타내는 <see cref="T:System.Security.Cryptography.Oid" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.GetSignature">
      <summary vsli:raw="Retrieves the signature for the current &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfo&quot; /&gt; object.">현재 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 개체의 서명을 검색합니다.</summary>
      <returns vsli:raw="The signature for the current &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfo&quot; /&gt; object.">현재 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 개체의 서명입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Int32)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Int32)&quot; /&gt; method removes the countersignature at the specified index of the &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos&quot; /&gt; collection.">
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Int32)" /> 메서드는 <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos" /> 컬렉션의 지정된 인덱스에서 연대 서명을 제거합니다.</summary>
      <param name="index" vsli:raw="The zero-based index of the countersignature to remove.">제거할 연대 서명의 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="A cryptographic operation could not be completed.">암호화 작업을 완료할 수 없는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)&quot; /&gt; method removes the countersignature for the specified &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfo&quot; /&gt; object.">
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)" /> 메서드는 지정된 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 개체에 대한 연대 서명을 제거합니다.</summary>
      <param name="counterSignerInfo" vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfo&quot; /&gt; object that represents the countersignature being removed.">제거할 연대 서명을 나타내는 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="A null reference was passed to a method that does not accept it as a valid argument.">null 참조를 유효한 인수로 사용하지 않는 메서드에 null 참조가 전달된 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value of an argument was outside the allowable range of values as defined by the called method.">인수 값이 호출된 메서드로 정의한 허용 값 범위를 벗어난 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="A cryptographic operation could not be completed.">암호화 작업을 완료할 수 없는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveUnsignedAttribute(System.Security.Cryptography.AsnEncodedData)">
      <summary vsli:raw="Removes the specified attribute from the current document.">현재 문서에서 지정된 특성을 제거합니다.</summary>
      <param name="asnEncodedData">문서에서 제거할 ASN.1 인코딩된 특성입니다.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="Cannot find the original signer.&#xA;&#xA; -or-&#xA;&#xA;Attribute not found.&#xA;&#xA; -or-&#xA; &#xA;ASN1 corrupted data.">원래 서명자를 찾을 수 없습니다.
 또는
특성을 찾을 수 없습니다.
 또는
ASN1 손상된 데이터입니다.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.SignatureAlgorithm">
      <summary vsli:raw="Gets the identifier for the signature algorithm used by the current &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfo&quot; /&gt; object.">현재 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 개체에서 사용되는 서명 알고리즘의 식별자를 가져옵니다.</summary>
      <returns vsli:raw="The identifier for the signature algorithm used by the current &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfo&quot; /&gt; object.">현재 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 개체에서 사용되는 서명 알고리즘의 식별자입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes&quot; /&gt; property retrieves the &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObjectCollection&quot; /&gt; collection of signed attributes that is associated with the signer information. Signed attributes are signed along with the rest of the message content.">
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes" /> 속성은 서명자 정보와 관련된 서명된 특성의 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 컬렉션을 검색합니다. 서명된 특성은 메시지의 나머지 내용과 함께 서명됩니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObjectCollection&quot; /&gt; collection that represents the signed attributes. If there are no signed attributes, the property is an empty collection.">서명된 특성을 나타내는 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 컬렉션입니다. 서명된 특성이 없으면 속성 값은 빈 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier&quot; /&gt; property retrieves the certificate identifier of the signer associated with the signer information.">
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier" /> 속성은 서명자 정보와 관련된 서명자의 인증서 식별자를 검색합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SubjectIdentifier&quot; /&gt; object that uniquely identifies the certificate associated with the signer information.">서명자 정보와 관련된 인증서를 고유하게 식별하는 <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifier" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes&quot; /&gt; property retrieves the &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObjectCollection&quot; /&gt; collection of unsigned attributes that is associated with the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfo&quot; /&gt; content. Unsigned attributes can be modified without invalidating the signature.">
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes" /> 속성은 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 내용과 관련된 서명되지 않은 특성의 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 컬렉션을 검색합니다. 서명되지 않은 특성은 서명을 무효화하지 않고도 수정할 수 있습니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.CryptographicAttributeObjectCollection&quot; /&gt; collection that represents the unsigned attributes. If there are no unsigned attributes, the property is an empty collection.">서명되지 않은 특성을 나타내는 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 컬렉션입니다. 서명되지 않은 특성이 없으면 해당 속성은 빈 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.Version">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SignerInfo.Version&quot; /&gt; property retrieves the signer information version.">
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.Version" /> 속성은 서명자 정보 버전을 검색합니다.</summary>
      <returns vsli:raw="An int value that specifies the signer information version.">서명자 정보 버전을 지정하는 int 값입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SignerInfoCollection">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoCollection&quot; /&gt; class represents a collection of &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfo&quot; /&gt; objects. &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoCollection&quot; /&gt; implements the &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; interface.">
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 클래스는 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 개체의 컬렉션을 나타냅니다. <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" />는 <see cref="T:System.Collections.ICollection" /> 인터페이스를 구현합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignerInfoCollection.CopyTo(System.Array,System.Int32)&quot; /&gt; method copies the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoCollection&quot; /&gt; collection to an array.">
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.CopyTo(System.Array,System.Int32)" /> 메서드는 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 컬렉션을 배열에 복사합니다.</summary>
      <param name="array" vsli:raw="An &lt;see cref=&quot;T:System.Array&quot; /&gt; object to which the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoCollection&quot; /&gt; collection is to be copied.">
        <see cref="T:System.Array" /> 컬렉션이 복사되는 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 개체입니다.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; where the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoCollection&quot; /&gt; collection is copied.">
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 컬렉션이 복사되는 <paramref name="array" />의 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="One of the arguments provided to a method was not valid.">메서드에 제공된 인수 중 하나가 잘못된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="A null reference was passed to a method that does not accept it as a valid argument.">null 참조를 유효한 인수로 사용하지 않는 메서드에 null 참조가 전달된 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value of an argument was outside the allowable range of values as defined by the called method.">인수 값이 호출된 메서드로 정의한 허용 값 범위를 벗어난 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.SignerInfo[],System.Int32)">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignerInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.SignerInfo[],System.Int32)&quot; /&gt; method copies the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoCollection&quot; /&gt; collection to a &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfo&quot; /&gt; array.">
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.SignerInfo[],System.Int32)" /> 메서드는 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 컬렉션을 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 배열에 복사합니다.</summary>
      <param name="array" vsli:raw="An array of &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfo&quot; /&gt; objects where the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoCollection&quot; /&gt; collection is to be copied.">
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 컬렉션이 복사되는 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 개체의 배열입니다.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; where the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoCollection&quot; /&gt; collection is copied.">
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 컬렉션이 복사되는 <paramref name="array" />의 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="One of the arguments provided to a method was not valid.">메서드에 제공된 인수 중 하나가 잘못된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="A null reference was passed to a method that does not accept it as a valid argument.">null 참조를 유효한 인수로 사용하지 않는 메서드에 null 참조가 전달된 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value of an argument was outside the allowable range of values as defined by the called method.">인수 값이 호출된 메서드로 정의한 허용 값 범위를 벗어난 경우</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.Count">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SignerInfoCollection.Count&quot; /&gt; property retrieves the number of items in the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoCollection&quot; /&gt; collection.">
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.Count" /> 속성은 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 컬렉션의 항목 수를 검색합니다.</summary>
      <returns vsli:raw="An int value that represents the number of items in the collection.">컬렉션의 항목 수를 나타내는 int 값입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.GetEnumerator">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignerInfoCollection.GetEnumerator&quot; /&gt; method returns a &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator&quot; /&gt; object for the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoCollection&quot; /&gt; collection.">
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.GetEnumerator" /> 메서드는 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" /> 컬렉션에 대한 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 개체를 반환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator&quot; /&gt; object that can be used to enumerate the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoCollection&quot; /&gt; collection.">
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" /> 컬렉션을 열거하는 데 사용할 수 있는 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.IsSynchronized">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SignerInfoCollection.IsSynchronized&quot; /&gt; property retrieves whether access to the collection is synchronized, or thread safe. This property always returns &lt;see langword=&quot;false&quot; /&gt;, which means the collection is not thread safe.">
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.IsSynchronized" /> 속성은 컬렉션에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지 여부를 검색합니다. 이 속성은 항상 <see langword="false" />를 반환합니다. 이는 컬렉션이 스레드로부터 안전하게 보호되지 않음을 의미합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value of &lt;see langword=&quot;false&quot; /&gt;, which means the collection is not thread safe.">
        <see cref="T:System.Boolean" /> 값입니다. 이 값은 컬렉션이 스레드로부터 안전하게 보호되지 않음을 의미하는 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.Item(System.Int32)">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SignerInfoCollection.Item(System.Int32)&quot; /&gt; property retrieves the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfo&quot; /&gt; object at the specified index in the collection.">
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.Item(System.Int32)" /> 속성은 컬렉션의 지정된 인덱스에 있는 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 개체를 검색합니다.</summary>
      <param name="index" vsli:raw="An int value that represents the index in the collection. The index is zero based.">컬렉션의 인덱스를 나타내는 int 값입니다. 인덱스는 0부터 시작합니다.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfo&quot; /&gt; object  at the specified index.">
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 지정 된 인덱스에 있는 개체입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value of an argument was outside the allowable range of values as defined by the called method.">인수 값이 호출된 메서드로 정의한 허용 값 범위를 벗어난 경우</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.SyncRoot">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SignerInfoCollection.SyncRoot&quot; /&gt; property retrieves an &lt;see cref=&quot;T:System.Object&quot; /&gt; object is used to synchronize access to the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoCollection&quot; /&gt; collection.">
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.SyncRoot" /> 속성은 <see cref="T:System.Object" /> 컬렉션에 대한 액세스를 동기화하는 데 사용되는 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 개체를 검색합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; object is used to synchronize access to the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoCollection&quot; /&gt; collection.">
        <see cref="T:System.Object" /> 개체는 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 컬렉션에 대한 액세스를 동기화하는 데 사용됩니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignerInfoCollection.System#Collections#IEnumerable#GetEnumerator&quot; /&gt; method returns a &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator&quot; /&gt; object for the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoCollection&quot; /&gt; collection.">
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.System#Collections#IEnumerable#GetEnumerator" /> 메서드는 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" /> 컬렉션에 대한 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 개체를 반환합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator&quot; /&gt; object that can be used to enumerate the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoCollection&quot; /&gt; collection.">
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" /> 컬렉션을 열거하는 데 사용할 수 있는 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator&quot; /&gt; class provides enumeration functionality for the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoCollection&quot; /&gt; collection. &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator&quot; /&gt; implements the &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; interface.">
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" /> 클래스는 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 컬렉션에 대한 열거형 기능을 제공합니다. <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" />는 <see cref="T:System.Collections.IEnumerator" /> 인터페이스를 구현합니다.</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.Current">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.Current&quot; /&gt; property retrieves the current &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfo&quot; /&gt; object from the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoCollection&quot; /&gt; collection.">
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.Current" /> 속성은 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 컬렉션에서 현재 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 개체를 검색합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfo&quot; /&gt; object that represents the current signer information structure in the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoCollection&quot; /&gt; collection.">
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 컬렉션에서 현재 서명자 정보 구조를 나타내는 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.MoveNext">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.MoveNext&quot; /&gt; method advances the enumeration to the next   &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfo&quot; /&gt; object in the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoCollection&quot; /&gt; collection.">
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.MoveNext" /> 메서드는 열거형을 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 컬렉션의 다음 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 개체로 이동합니다.</summary>
      <returns vsli:raw="This method returns a bool value that specifies whether the enumeration successfully advanced. If the enumeration successfully moved to the next &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfo&quot; /&gt; object, the method returns &lt;see langword=&quot;true&quot; /&gt;. If the enumeration moved past the last item in the enumeration, it returns &lt;see langword=&quot;false&quot; /&gt;.">이 메서드는 열거형이 성공적으로 이동되었는지 여부를 나타내는 부울 값을 반환합니다. 열거형이 다음 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 개체에 성공적으로 전달되면 이 메서드는 <see langword="true" />를 반환합니다. 열거형이 열거형의 마지막 항목을 지나 이동하면 이 메서드는 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.Reset">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.Reset&quot; /&gt; method resets the enumeration to the first &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfo&quot; /&gt; object in the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoCollection&quot; /&gt; collection.">
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.Reset" /> 메서드는 열거형을 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 컬렉션의 첫 번째 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 개체로 다시 설정합니다.</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.System#Collections#IEnumerator#Current&quot; /&gt; property retrieves the current &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfo&quot; /&gt; object from the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoCollection&quot; /&gt; collection.">
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.System#Collections#IEnumerator#Current" /> 속성은 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 컬렉션에서 현재 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 개체를 검색합니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfo&quot; /&gt; object that represents the current signer information structure in the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SignerInfoCollection&quot; /&gt; collection.">
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 컬렉션에서 현재 서명자 정보 구조를 나타내는 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SubjectIdentifier">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SubjectIdentifier&quot; /&gt; class defines the type of the identifier of a subject, such as a &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsSigner&quot; /&gt; or a &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipient&quot; /&gt;.  The subject can be identified by the certificate issuer and serial number or the subject key.">
        <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifier" /> 클래스는 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" />나 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 같은 주체의 식별자 형식을 정의합니다.  주체는 인증서 발급자와 일련 번호 또는 주체 키를 사용하여 식별할 수 있습니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SubjectIdentifier.MatchesCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary vsli:raw="Verifies if the specified certificate's subject identifier matches current subject identifier instance.">지정된 인증서의 주체 식별자가 현재 주체 식별자 인스턴스와 일치하는지 확인합니다.</summary>
      <param name="certificate" vsli:raw="The certificate to match with the current subject identifier instance.">현재 주체 식별자 인스턴스와 일치하는 인증서입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified certificate's identifier matches the current subject identifier instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 인증서의 식별자가 현재 주체 식별자 인스턴스와 일치하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="Invalid subject identifier type.">잘못된 주체 식별자 형식입니다.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type&quot; /&gt; property retrieves the type of subject identifier. The subject can be identified by the certificate issuer and serial number or the subject key.">
        <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type" /> 속성은 주체 식별자의 형식을 검색합니다. 주체는 인증서 발급자와 일련 번호 또는 주체 키를 사용하여 식별할 수 있습니다.</summary>
      <returns vsli:raw="A member of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SubjectIdentifierType&quot; /&gt; enumeration that identifies the type of subject.">멤버는 <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> 주체의 형식을 식별 하는 열거형입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Value">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Value&quot; /&gt; property retrieves the value of the subject identifier. Use the &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type&quot; /&gt; property to determine the type of subject identifier, and use the &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Value&quot; /&gt; property to retrieve the corresponding value.">
        <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Value" /> 속성은 주체 식별자의 값을 검색합니다. <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type" /> 속성을 사용하면 주체 식별자의 형식을 확인할 수 있고, <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Value" /> 속성을 사용하면 상응하는 값을 검색할 수 있습니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; object that represents the value of the subject identifier. This &lt;see cref=&quot;T:System.Object&quot; /&gt; can be one of the following objects as determined by the &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type&quot; /&gt; property.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt;&lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type&quot; /&gt; property&lt;/term&gt;&lt;description&gt; Object&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; IssuerAndSerialNumber&lt;/term&gt;&lt;description&gt;&lt;see cref=&quot;T:System.Security.Cryptography.Xml.X509IssuerSerial&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; SubjectKeyIdentifier&lt;/term&gt;&lt;description&gt;&lt;see cref=&quot;T:System.String&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">주체 식별자의 값을 나타내는 <see cref="T:System.Object" /> 개체입니다. 이 <see cref="T:System.Object" />는 <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type" /> 속성으로 확인한 다음과 같은 개체 중 하나가 될 수 있습니다.  
 <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type" /> 속성 
  개체 
  IssuerAndSerialNumber 
 <see cref="T:System.Security.Cryptography.Xml.X509IssuerSerial" /> SubjectKeyIdentifier 
 <see cref="T:System.String" /></returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey&quot; /&gt; class defines the type of the identifier of a subject, such as a &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsSigner&quot; /&gt; or a &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.CmsRecipient&quot; /&gt;.  The subject can be identified by the certificate issuer and serial number, the hash of the subject key, or the subject key.">
        <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey" /> 클래스는 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" />나 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 같은 주체의 식별자 형식을 정의합니다.  주체는 인증서 발급자와 일련 번호, 주체 키의 해시 또는 주체 키를 사용하여 식별할 수 있습니다.</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type&quot; /&gt; property retrieves the type of subject identifier or key. The subject can be identified by the certificate issuer and serial number, the hash of the subject key, or the subject key.">
        <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type" /> 속성은 키나 주체 식별자의 형식을 검색합니다. 주체는 인증서 발급자와 일련 번호, 주체 키의 해시 또는 주체 키를 사용하여 식별할 수 있습니다.</summary>
      <returns vsli:raw="A member of the &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType&quot; /&gt; enumeration that specifies the type of subject identifier.">주체 식별자의 형식을 지정하는 <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType" /> 열거형의 멤버입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Value">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Value&quot; /&gt; property retrieves the value of the subject identifier or  key. Use the &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type&quot; /&gt; property to determine the type of subject identifier or key, and use the &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Value&quot; /&gt; property to retrieve the corresponding value.">
        <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Value" /> 속성은 키나 주체 식별자의 값을 검색합니다. <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type" /> 속성을 사용하면 키나 주체 식별자의 형식을 확인할 수 있고, <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Value" /> 속성을 사용하면 상응하는 값을 검색할 수 있습니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; object that represents the value of the subject identifier or key. This &lt;see cref=&quot;T:System.Object&quot; /&gt; can be one of the following objects as determined by the &lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type&quot; /&gt; property.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt;&lt;see cref=&quot;P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type&quot; /&gt; property&lt;/term&gt;&lt;description&gt; Object&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; IssuerAndSerialNumber&lt;/term&gt;&lt;description&gt;&lt;see cref=&quot;T:System.Security.Cryptography.Xml.X509IssuerSerial&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; SubjectKeyIdentifier&lt;/term&gt;&lt;description&gt;&lt;see cref=&quot;T:System.String&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; PublicKeyInfo&lt;/term&gt;&lt;description&gt;&lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.PublicKeyInfo&quot; /&gt;&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">키나 주체 식별자의 값을 나타내는 <see cref="T:System.Object" /> 개체입니다. 이 <see cref="T:System.Object" />는 <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type" /> 속성으로 확인한 다음과 같은 개체 중 하나가 될 수 있습니다.  
 <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type" /> 속성 
  개체 
  IssuerAndSerialNumber 
 <see cref="T:System.Security.Cryptography.Xml.X509IssuerSerial" /> SubjectKeyIdentifier 
 <see cref="T:System.String" /> PublicKeyInfo 
 <see cref="T:System.Security.Cryptography.Pkcs.PublicKeyInfo" /></returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType&quot; /&gt; enumeration defines how a subject is identified.">
        <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType" /> 열거형은 주체를 식별하는 방법을 정의합니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType.IssuerAndSerialNumber">
      <summary vsli:raw="The subject is identified by the certificate issuer and serial number.">인증서 발급자와 일련 번호를 사용하여 주체를 식별합니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType.PublicKeyInfo">
      <summary vsli:raw="The subject is identified by the public key.">공개 키로 주체를 식별합니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType.SubjectKeyIdentifier">
      <summary vsli:raw="The subject is identified by the hash of the subject key.">주체 키의 해시로 주체를 식별합니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType.Unknown">
      <summary vsli:raw="The type is unknown.">형식을 알 수 없습니다.</summary>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Pkcs.SubjectIdentifierType&quot; /&gt; enumeration defines the type of subject identifier.">
        <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> 열거형은 주체 식별자의 형식을 정의합니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.IssuerAndSerialNumber">
      <summary vsli:raw="The subject is identified by the certificate issuer and serial number.">인증서 발급자와 일련 번호를 사용하여 주체를 식별합니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.NoSignature">
      <summary vsli:raw="The subject is identified as taking part in an integrity check operation that uses only a hashing algorithm.">해시 알고리즘만 사용하는 무결성 검사 작업과 관련하여 주체를 식별합니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.SubjectKeyIdentifier">
      <summary vsli:raw="The subject is identified by the hash of the subject's public key. The hash algorithm used is determined by the signature algorithm suite in the subject's certificate.">주체 공개 키의 해시를 사용하여 주체를 식별합니다. 사용되는 해시 알고리즘은 주체 인증서의 서명 알고리즘 집합을 통해 결정됩니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.Unknown">
      <summary vsli:raw="The type of subject identifier is unknown.">주체 식별자의 형식을 알 수 없습니다.</summary>
    </member>
    <member name="T:System.Security.Cryptography.Xml.X509IssuerSerial">
      <summary vsli:raw="Represents the &amp;lt;&lt;see langword=&quot;X509IssuerSerial&quot; /&gt;&amp;gt; element of an XML digital signature.">XML 디지털 서명의 &lt;<see langword="X509IssuerSerial" />&gt; 요소를 나타냅니다.</summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.X509IssuerSerial.IssuerName">
      <summary vsli:raw="Gets or sets an X.509 certificate issuer's distinguished name.">X.509 인증서 발급자의 고유 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An X.509 certificate issuer's distinguished name.">X.509 인증서 발급자의 고유 이름입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.X509IssuerSerial.SerialNumber">
      <summary vsli:raw="Gets or sets an X.509 certificate issuer's serial number.">X.509 인증서 발급자의 일련 번호를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An X.509 certificate issuer's serial number.">X.509 인증서 발급자의 일련 번호입니다.</returns>
    </member>
  </members>
</doc>