<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Security.Permissions</name>
  </assembly>
  <members>
    <member name="T:System.ApplicationIdentity">
      <summary>提供唯一識別由資訊清單啟動的應用程式的能力。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.ApplicationIdentity.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.ApplicationIdentity" /> 類別的新執行個體。</summary>
      <param name="applicationIdentityFullName">應用程式的完整名稱。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="applicationIdentityFullName" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.ApplicationIdentity.CodeBase">
      <summary>取得部署資訊清單 URL 的位置。</summary>
      <returns>部署資訊清單的 URL。</returns>
    </member>
    <member name="P:System.ApplicationIdentity.FullName">
      <summary>取得應用程式的完整名稱。</summary>
      <returns>應用程式的完整名稱，也稱為顯示名稱。</returns>
    </member>
    <member name="M:System.ApplicationIdentity.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>將序列化目標物件所需要的資料填入 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 物件中。</summary>
      <param name="info">要以資料填入的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">序列化的 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 結構。</param>
    </member>
    <member name="M:System.ApplicationIdentity.ToString">
      <summary>傳回資訊清單啟動的應用程式完整名稱。</summary>
      <returns>資訊清單啟動的應用程式完整名稱。</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationPermission">
      <summary>提供允許方法或類別存取組態檔的使用權限結構。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>初始化 <see cref="T:System.Configuration.ConfigurationPermission" /> 類別的新執行個體。</summary>
      <param name="state">要授與的使用權限層級。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> 的值既不是 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> 也不是 <see cref="F:System.Security.Permissions.PermissionState.None" />。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.Copy">
      <summary>傳回具相同使用權限層級的新 <see cref="T:System.Configuration.ConfigurationPermission" /> 物件。</summary>
      <returns>具有相同使用權限層級的新 <see cref="T:System.Configuration.ConfigurationPermission" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.FromXml(System.Security.SecurityElement)">
      <summary>從 XML 讀取使用權限狀態值。</summary>
      <param name="securityElement">從中讀取使用權限狀態的組態項目。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">特定 <paramref name="securityElement" /> 的 <see langword="unrestricted" /> 屬性既不是 <see langword="true" /> 也不是 <see langword="false" />。
-或-
特定 <paramref name="securityElement" /> 的 <see cref="P:System.Security.SecurityElement.Tag" /> 不等於 "IPermission"。
-或-
指定 <paramref name="securityElement " /> 的 <see langword="class" /> 屬性為 <see langword="null" /> 或不是 <see cref="T:System.Configuration.ConfigurationPermission" /> 的類型名稱。
-或-
特定 <paramref name="securityElement" /> 的 <see langword="version" /> 屬性不等於 1。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.Intersect(System.Security.IPermission)">
      <summary>傳回 <see cref="T:System.Configuration.ConfigurationPermission" /> 物件和實作 <see cref="T:System.Security.IPermission" /> 介面之特定物件之間的邏輯交集。</summary>
      <param name="target">物件，包含用來執行交集的使用權限。</param>
      <returns>
        <see cref="T:System.Configuration.ConfigurationPermission" /> 和實作 <see cref="T:System.Security.IPermission" /> 之特定物件之間的邏輯交集。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 的型別不是 <see cref="T:System.Configuration.ConfigurationPermission" />。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>將 <see cref="T:System.Configuration.ConfigurationPermission" /> 物件和實作 <see cref="T:System.Security.IPermission" /> 介面的物件比較。</summary>
      <param name="target">要相比較的物件。</param>
      <returns>如果使用權限狀態相等，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 的型別不是 <see cref="T:System.Configuration.ConfigurationPermission" />。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.IsUnrestricted">
      <summary>指出 <see cref="T:System.Configuration.ConfigurationPermission" /> 物件的使用權限狀態是否為 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> 列舉型別的 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</summary>
      <returns>如果 <see cref="T:System.Configuration.ConfigurationPermission" /> 的使用權限狀態是 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> 的 <see cref="T:System.Security.Permissions.PermissionState" /> 值，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.ToXml">
      <summary>傳回 <see cref="T:System.Security.SecurityElement" /> 物件，其屬性值根據目前 <see cref="T:System.Configuration.ConfigurationPermission" /> 物件。</summary>
      <returns>
        <see cref="T:System.Security.SecurityElement" />，其屬性值根據目前 <see cref="T:System.Configuration.ConfigurationPermission" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.Union(System.Security.IPermission)">
      <summary>傳回 <see cref="T:System.Configuration.ConfigurationPermission" /> 物件和實作 <see cref="T:System.Security.IPermission" /> 介面之物件的邏輯聯集。</summary>
      <param name="target">用於執行聯集作業的物件。</param>
      <returns>
        <see cref="T:System.Configuration.ConfigurationPermission" /> 和實作 <see cref="T:System.Security.IPermission" /> 之物件的邏輯聯集。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 的型別不是 <see cref="T:System.Configuration.ConfigurationPermission" />。</exception>
    </member>
    <member name="T:System.Configuration.ConfigurationPermissionAttribute">
      <summary>建立會授與或拒絕組態檔存取區段之標記目標使用權限的 <see cref="T:System.Configuration.ConfigurationPermission" /> 物件。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>初始化 <see cref="T:System.Configuration.ConfigurationPermissionAttribute" /> 類別的新執行個體。</summary>
      <param name="action">由 <see cref="T:System.Security.Permissions.SecurityAction" /> 的列舉型別 (Enumeration) 成員所表示的安全性動作。 判斷屬性 (Attribute) 的使用權限狀態。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationPermissionAttribute.CreatePermission">
      <summary>建立並傳回實作 <see cref="T:System.Security.IPermission" /> 介面的物件。</summary>
      <returns>實作 <see cref="T:System.Security.IPermission" /> 的物件。</returns>
    </member>
    <member name="T:System.Data.Common.DBDataPermission">
      <summary>使 .NET Framework 資料提供者 (Data Provider) 可以確保使用者具有足夠的安全性等級來存取資料。</summary>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.#ctor">
      <summary>初始化 <see langword="DBDataPermission" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermission)">
      <summary>使用現有的 <see langword="DBDataPermission" />，初始化 <see langword="DBDataPermission" /> 類別的新執行個體。</summary>
      <param name="permission">現有的 <see langword="DBDataPermission" />，用來建立新的 <see langword="DBDataPermission" />。</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermissionAttribute)">
      <summary>使用指定的 <see langword="DBDataPermission" />，初始化 <see langword="DBDataPermissionAttribute" /> 類別的新執行個體。</summary>
      <param name="permissionAttribute">與自訂安全性屬性相關聯的安全性動作。</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>使用指定的 <see cref="T:System.Security.Permissions.PermissionState" /> 值，初始化 <see langword="DBDataPermission" /> 類別的新執行個體。</summary>
      <param name="state">其中一個 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)">
      <summary>使用指定的 <see cref="T:System.Security.Permissions.PermissionState" /> 值及指出是否允許空白密碼的值，初始化 <see langword="DBDataPermission" /> 類別的新執行個體。</summary>
      <param name="state">其中一個 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</param>
      <param name="allowBlankPassword">
        <see langword="true" /> 表示允許空白密碼；否則為 <see langword="false" />。</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
      <summary>將指定之連接字串 (Connection String) 的存取加入現有的 <see langword="DBDataPermission" /> 狀態。</summary>
      <param name="connectionString">允許的連接字串。</param>
      <param name="restrictions">字串，識別允許或不允許的連接字串參數。</param>
      <param name="behavior">其中一個 <see cref="T:System.Data.KeyRestrictionBehavior" /> 屬性。</param>
    </member>
    <member name="P:System.Data.Common.DBDataPermission.AllowBlankPassword">
      <summary>取得值，指出是否允許空白密碼。</summary>
      <returns>如果允許空白密碼則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.Clear">
      <summary>移除先前使用 <see cref="M:System.Data.Common.DBDataPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)" /> 方法加入的所有使用權限。</summary>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.Copy">
      <summary>建立並傳回目前使用權限物件的相同複本。</summary>
      <returns>目前權限物件的複本。</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.CreateInstance">
      <summary>建立 <see langword="DBDataPermission" /> 類別的新執行個體。</summary>
      <returns>新的 <see langword="DBDataPermission" /> 物件。</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.FromXml(System.Security.SecurityElement)">
      <summary>透過 XML 編碼，重新建構具有指定狀態的安全性物件。</summary>
      <param name="securityElement">用來重新建構安全性物件的 XML 編碼方式。</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.Intersect(System.Security.IPermission)">
      <summary>傳回代表目前使用權限物件和指定使用權限物件之交集的新使用權限物件。</summary>
      <param name="target">與目前使用權限物件交集的使用權限物件。 它必須與目前的使用權限物件為相同的型別。</param>
      <returns>表示目前使用權限物件和指定使用權限物件交集的新使用權限物件。 如果交集是空的，則這個新的使用權限物件是 Null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 參數不是 Null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)，而且不是和目前使用權限物件相同類別的執行個體。</exception>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>傳回值，指出目前的使用權限物件是否為指定使用權限物件的子集。</summary>
      <param name="target">將測試子集關聯性 (Relationship) 的使用權限物件。 這個物件必須與目前的使用權限物件為相同的型別。</param>
      <returns>如果目前的使用權限物件是指定之使用權限物件的子集則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 參數是一個物件，沒有與目前使用權限物件相同的型別。</exception>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.IsUnrestricted">
      <summary>傳回值，指出使用權限是否可以表示為不暸解使用權限語意 (Semantics) 而不受限制。</summary>
      <returns>如果使用權限可以表示為不受限制，則為 <see langword="true" />。</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.ToXml">
      <summary>建立安全物件及其目前狀態的 XML 編碼方式。</summary>
      <returns>安全物件的 XML 編碼方式，包含所有狀態資訊。</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.Union(System.Security.IPermission)">
      <summary>傳回新的使用權限物件，這個物件是目前和指定使用權限物件的聯集。</summary>
      <param name="target">與目前使用權限物件結合的使用權限物件。 它必須與目前的使用權限物件為相同的型別。</param>
      <returns>新使用權限物件，表示目前使用權限物件和指定使用權限物件的聯集。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 物件與目前使用權限物件的型別不同。</exception>
    </member>
    <member name="T:System.Data.Common.DBDataPermissionAttribute">
      <summary>使安全性動作與自訂安全性屬性產生關聯。</summary>
    </member>
    <member name="M:System.Data.Common.DBDataPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>初始化 <see cref="T:System.Data.Common.DBDataPermissionAttribute" /> 的新執行個體。</summary>
      <param name="action">其中一個安全性動作值，表示可以使用宣告式安全性執行的動作。</param>
    </member>
    <member name="P:System.Data.Common.DBDataPermissionAttribute.AllowBlankPassword">
      <summary>取得或設定值，指出是否允許空白密碼。</summary>
      <returns>如果允許空白密碼則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.Common.DBDataPermissionAttribute.ConnectionString">
      <summary>取得或設定允許的連接字串。</summary>
      <returns>允許的連接字串。</returns>
    </member>
    <member name="P:System.Data.Common.DBDataPermissionAttribute.KeyRestrictionBehavior">
      <summary>識別由 <see cref="P:System.Data.Common.DBDataPermissionAttribute.KeyRestrictions" /> 屬性識別的連接字串參數清單是否為允許的唯一連接字串參數。</summary>
      <returns>其中一個 <see cref="T:System.Data.KeyRestrictionBehavior" /> 值。</returns>
    </member>
    <member name="P:System.Data.Common.DBDataPermissionAttribute.KeyRestrictions">
      <summary>取得或設定允許或不允許的連接字串參數。</summary>
      <returns>一個或多個允許或不允許的連接字串參數。</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermissionAttribute.ShouldSerializeConnectionString">
      <summary>識別屬性是否應序列化連接字串。</summary>
      <returns>如果屬性應序列化連接字串，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermissionAttribute.ShouldSerializeKeyRestrictions">
      <summary>識別屬性是否應序列化索引鍵限制集。</summary>
      <returns>如果屬性應序列化索引鍵限制集合則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Data.Odbc.OdbcPermission">
      <summary>啟用 .NET Framework Data Provider for ODBC，以協助確保使用者具有的安全性層級足以存取 ODBC 資料來源。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermission.#ctor">
      <summary>初始化 <see cref="T:System.Data.Odbc.OdbcPermission" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>使用其中一個 <see cref="T:System.Security.Permissions.PermissionState" />值，初始化 <see cref="T:System.Data.Odbc.OdbcPermission" /> 類別的新執行個體。</summary>
      <param name="state">其中一個 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)">
      <summary>初始化 <see cref="T:System.Data.Odbc.OdbcPermission" /> 類別的新執行個體。</summary>
      <param name="state">其中一個 <see langword="System.Security.Permissions.PermissionState" /> 值。</param>
      <param name="allowBlankPassword">指出是否允許空白密碼。</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
      <summary>將指定連接字串的存取加入現有的使用權限狀態。</summary>
      <param name="connectionString">允許的連接字串。</param>
      <param name="restrictions">字串，識別允許或不允許的連接字串參數。</param>
      <param name="behavior">其中一個 <see cref="T:System.Data.KeyRestrictionBehavior" /> 值。</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermission.Copy">
      <summary>傳回 <see cref="T:System.Data.Odbc.OdbcPermission" /> 做為 <see cref="T:System.Security.IPermission" />。</summary>
      <returns>目前權限物件的複本。</returns>
    </member>
    <member name="T:System.Data.Odbc.OdbcPermissionAttribute">
      <summary>使安全性動作與自訂安全性屬性產生關聯。</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>使用其中一個 <see cref="T:System.Security.Permissions.SecurityAction" />值，初始化 <see cref="T:System.Data.Odbc.OdbcPermissionAttribute" /> 類別的新執行個體。</summary>
      <param name="action">其中一個 <see cref="T:System.Security.Permissions.SecurityAction" /> 值表示動作可以使用宣告式安全性來執行。</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermissionAttribute.CreatePermission">
      <summary>傳回 <see cref="T:System.Data.Odbc.OdbcPermission" /> 物件，這個物件是根據屬性 (Attribute) 的屬性 (Property) 所設定。</summary>
      <returns>
        <see cref="T:System.Data.Odbc.OdbcPermission" /> 物件。</returns>
    </member>
    <member name="T:System.Data.OleDb.OleDbPermission">
      <summary>可以讓 .NET Framework Data Provider for OLE DB 協助確保使用者是否有足夠的安全性層級可以存取 OLE DB 資料來源。</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermission.#ctor">
      <summary>初始化 <see cref="T:System.Data.OleDb.OleDbPermission" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>初始化 <see cref="T:System.Data.OleDb.OleDbPermission" /> 類別的新執行個體。</summary>
      <param name="state">其中一個 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)">
      <summary>初始化 <see cref="T:System.Data.OleDb.OleDbPermission" /> 類別的新執行個體。</summary>
      <param name="state">其中一個 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</param>
      <param name="allowBlankPassword">指出是否允許空白密碼。</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermission.Copy">
      <summary>傳回 <see cref="T:System.Data.OleDb.OleDbPermission" /> 做為 <see cref="T:System.Security.IPermission" />。</summary>
      <returns>目前權限物件的複本。</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbPermission.Provider">
      <summary>這個屬性已標記為過時。 設定這個屬性不會有任何作用。</summary>
      <returns>這個屬性已標記為過時。 設定這個屬性不會有任何作用。</returns>
    </member>
    <member name="T:System.Data.OleDb.OleDbPermissionAttribute">
      <summary>使安全性動作與自訂安全性屬性產生關聯。</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>初始化 <see cref="T:System.Data.OleDb.OleDbPermissionAttribute" /> 類別的新執行個體。</summary>
      <param name="action">其中一個 <see cref="T:System.Security.Permissions.SecurityAction" /> 值表示動作可以使用宣告式安全性來執行。</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermissionAttribute.CreatePermission">
      <summary>傳回 <see cref="T:System.Data.OleDb.OleDbPermission" /> 物件，這個物件是根據屬性 (Attribute) 的屬性 (Property) 所設定。</summary>
      <returns>
        <see cref="T:System.Data.OleDb.OleDbPermission" /> 物件。</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbPermissionAttribute.Provider">
      <summary>取得或設定含有所支援提供者清單的逗號分隔字串。</summary>
      <returns>提供者的逗號分隔字串清單，由安全性原則所允許。</returns>
    </member>
    <member name="T:System.Data.OracleClient.OraclePermission">
      <summary>使 .NET Framework Data Provider for Oracle 可以確保使用者具有足夠的安全性等級來存取 Oracle 資料。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>使用其中一個 <see cref="T:System.Security.Permissions.PermissionState" />值，初始化 <see cref="T:System.Data.OracleClient.OraclePermission" /> 類別的新執行個體。</summary>
      <param name="state">其中一個 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</param>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
      <summary>建立新權限集。</summary>
      <param name="connectionString">連接字串。</param>
      <param name="restrictions">索引鍵限制。</param>
      <param name="behavior">其中一個 <see cref="T:System.Data.KeyRestrictionBehavior" /> 列舉型別 (Enumeration)。</param>
    </member>
    <member name="P:System.Data.OracleClient.OraclePermission.AllowBlankPassword">
      <summary>取得值，指出是否允許空白密碼。</summary>
      <returns>如果允許空白密碼，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.Copy">
      <summary>由衍生類別實作時，建立並傳回目前權限物件的相同複本。</summary>
      <returns>目前權限物件的複本。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.FromXml(System.Security.SecurityElement)">
      <summary>在衍生類別中覆寫時，使用 XML 編碼方式重建具有指定狀態的安全性物件。</summary>
      <param name="securityElement">
        <see cref="T:System.Security.SecurityElement" /> 運算式。</param>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.Intersect(System.Security.IPermission)">
      <summary>當由衍生類別實作時，建立並傳回目前使用權限和指定使用權限交集的使用權限。</summary>
      <param name="target">要與目前權限產生交集的權限。 必須與目前權限屬於相同的類型。</param>
      <returns>新使用權限，表示目前使用權限和指定使用權限的交集。 如果交集是空的，這個新權限就是 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.IsSubsetOf(System.Security.IPermission)">
      <summary>當由衍生類別實作時，決定目前使用權限是否為指定使用權限的子集。</summary>
      <param name="target">要測試子集關聯性的權限。 這個權限必須與目前權限屬於相同的類型。</param>
      <returns>如果目前權限是指定權限的子集，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.IsUnrestricted">
      <summary>傳回值，指出使用權限是否可以表示為不暸解使用權限語意 (Semantics) 而不受限制。</summary>
      <returns>如果使用權限可以表示為不受限制，則為 <see langword="true" />。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.ToXml">
      <summary>建立安全物件及其目前狀態的 XML 編碼方式。</summary>
      <returns>安全物件的 XML 編碼方式，包含所有狀態資訊。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.Union(System.Security.IPermission)">
      <summary>建立目前權限與指定權限聯集的權限。</summary>
      <param name="target">要與目前權限結合的權限， 必須與目前權限屬於相同的類型。</param>
      <returns>代表目前權限與指定權限聯集的新權限。</returns>
    </member>
    <member name="T:System.Data.OracleClient.OraclePermissionAttribute">
      <summary>使安全性動作與自訂安全性屬性產生關聯。</summary>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>初始化 <see cref="T:System.Data.OracleClient.OraclePermissionAttribute" /> 類別的新執行個體。</summary>
      <param name="action">其中一個 <see cref="T:System.Security.Permissions.SecurityAction" /> 值表示動作可以使用宣告式安全性來執行。</param>
    </member>
    <member name="P:System.Data.OracleClient.OraclePermissionAttribute.AllowBlankPassword">
      <summary>取得或設定值，指出是否允許空白密碼。</summary>
      <returns>如果允許空白密碼，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OraclePermissionAttribute.ConnectionString">
      <summary>取得或設定允許的連接字串。</summary>
      <returns>允許的連接字串。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermissionAttribute.CreatePermission">
      <summary>傳回 <see cref="T:System.Data.OracleClient.OraclePermission" /> 物件，這個物件是根據屬性 (Attribute) 的屬性 (Property) 所設定。</summary>
      <returns>
        <see cref="T:System.Data.OracleClient.OraclePermission" /> 物件。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OraclePermissionAttribute.KeyRestrictionBehavior">
      <summary>識別由 <see cref="P:System.Data.OracleClient.OraclePermissionAttribute.KeyRestrictions" /> 屬性識別的連接字串參數清單是否為允許的唯一連接字串參數。</summary>
      <returns>其中一個 <see cref="P:System.Data.OracleClient.OraclePermissionAttribute.KeyRestrictionBehavior" /> 值。</returns>
    </member>
    <member name="P:System.Data.OracleClient.OraclePermissionAttribute.KeyRestrictions">
      <summary>取得或設定允許或不允許的連接字串參數。</summary>
      <returns>一個或多個允許或不允許的連接字串參數。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermissionAttribute.ShouldSerializeConnectionString">
      <summary>識別屬性是否應序列化連接字串。</summary>
      <returns>如果屬性應序列化連接字串，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermissionAttribute.ShouldSerializeKeyRestrictions">
      <summary>識別屬性是否應序列化索引鍵限制集。</summary>
      <returns>如果屬性應序列化索引鍵限制集，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlClientPermission">
      <summary>使 .NET Framework Data Provider for SQL Server 可以協助確保使用者具有足夠的安全性等級來存取資料來源。</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermission.#ctor">
      <summary>初始化 <see cref="T:System.Data.SqlClient.SqlClientPermission" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>初始化 <see cref="T:System.Data.SqlClient.SqlClientPermission" /> 類別的新執行個體。</summary>
      <param name="state">其中一個 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)">
      <summary>初始化 <see cref="T:System.Data.SqlClient.SqlClientPermission" /> 類別的新執行個體。</summary>
      <param name="state">其中一個 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</param>
      <param name="allowBlankPassword">指出是否允許空白密碼。</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
      <summary>將新連接字串和一組限制關鍵字加入至 <see cref="T:System.Data.SqlClient.SqlClientPermission" /> 物件。</summary>
      <param name="connectionString">連接字串。</param>
      <param name="restrictions">索引鍵限制。</param>
      <param name="behavior">其中一個 <see cref="T:System.Data.KeyRestrictionBehavior" /> 列舉型別 (Enumeration)。</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermission.Copy">
      <summary>傳回 <see cref="T:System.Data.SqlClient.SqlClientPermission" /> 做為 <see cref="T:System.Security.IPermission" />。</summary>
      <returns>目前權限物件的複本。</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlClientPermissionAttribute">
      <summary>使安全性動作與自訂安全性屬性產生關聯。</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>初始化 <see cref="T:System.Data.SqlClient.SqlClientPermissionAttribute" /> 類別的新執行個體。</summary>
      <param name="action">其中一個 <see cref="T:System.Security.Permissions.SecurityAction" /> 值表示動作可以使用宣告式安全性來執行。</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermissionAttribute.CreatePermission">
      <summary>傳回根據屬性 (Attribute) 之屬性 (Property) 所設定的 <see cref="T:System.Data.SqlClient.SqlClientPermission" /> 物件。</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlClientPermission" /> 物件。</returns>
    </member>
    <member name="T:System.Diagnostics.EventLogPermission">
      <summary>控制事件記錄的程式碼存取使用權限。</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogPermission.#ctor">
      <summary>初始化 <see cref="T:System.Diagnostics.EventLogPermission" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogPermission.#ctor(System.Diagnostics.EventLogPermissionAccess,System.String)">
      <summary>使用指定的存取層級和要使用的電腦名稱，初始化 <see cref="T:System.Diagnostics.EventLogPermission" /> 類別的新執行個體。</summary>
      <param name="permissionAccess">其中一個列舉值，這個值指定存取層級。</param>
      <param name="machineName">用來讀取或寫入事件的電腦名稱。</param>
    </member>
    <member name="M:System.Diagnostics.EventLogPermission.#ctor(System.Diagnostics.EventLogPermissionEntry[])">
      <summary>使用指定的使用權限項目，初始化 <see cref="T:System.Diagnostics.EventLogPermission" /> 類別的新執行個體。</summary>
      <param name="permissionAccessEntries">表示權限項目的物件陣列。 <see cref="P:System.Diagnostics.EventLogPermission.PermissionEntries" /> 屬性設為這個值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="permissionAccessEntries" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>使用指定的使用權限狀態，初始化 <see cref="T:System.Diagnostics.EventLogPermission" /> 類別的新執行個體。</summary>
      <param name="state">其中一個列舉值，這個值指定使用權限狀態 (對資源有完整存取權或沒有存取權)。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> 參數不是有效的 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</exception>
    </member>
    <member name="P:System.Diagnostics.EventLogPermission.PermissionEntries">
      <summary>取得這個使用權限要求的使用權限項目的集合。</summary>
      <returns>集合，其中包含這個使用權限要求的使用權限項目。</returns>
    </member>
    <member name="T:System.Diagnostics.EventLogPermissionAccess">
      <summary>定義 <see cref="T:System.Diagnostics.EventLog" /> 使用權限類別所使用的存取等級。</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogPermissionAccess.Administer">
      <summary>
        <see cref="T:System.Diagnostics.EventLog" /> 可以建立事件來源、讀取現有的記錄檔、刪除事件來源或記錄檔、回應項目、清除事件記錄檔、接聽事件和存取所有事件記錄檔的集合。</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogPermissionAccess.Audit">
      <summary>
        <see cref="T:System.Diagnostics.EventLog" /> 可以讀取現有的記錄檔、刪除事件來源或記錄檔、回應項目、清除事件記錄檔、接聽事件和存取所有事件記錄檔的集合。 <see langword="Note" />：這個成員已經過時，請改用 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" />。</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogPermissionAccess.Browse">
      <summary>
        <see cref="T:System.Diagnostics.EventLog" /> 可以讀取現有的記錄檔。 <see langword="Note" />：這個成員已經過時，請改用 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" />。</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogPermissionAccess.Instrument">
      <summary>
        <see cref="T:System.Diagnostics.EventLog" /> 可以讀取或寫入現有記錄檔，以及建立事件來源和記錄檔。 <see langword="Note" />：這個成員已經過時，請改用 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" />。</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogPermissionAccess.None">
      <summary>
        <see cref="T:System.Diagnostics.EventLog" /> 沒有使用權限。</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogPermissionAccess.Write">
      <summary>
        <see cref="T:System.Diagnostics.EventLog" /> 可以寫入現有記錄檔檔，以及建立事件來源和記錄檔。</summary>
    </member>
    <member name="T:System.Diagnostics.EventLogPermissionAttribute">
      <summary>允許事件記錄的宣告式使用權限檢查。</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>初始化 <see cref="T:System.Diagnostics.EventLogPermissionAttribute" /> 類別的新執行個體。</summary>
      <param name="action">其中一個 <see cref="T:System.Security.Permissions.SecurityAction" /> 值。</param>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionAttribute.CreatePermission">
      <summary>根據 <see cref="P:System.Diagnostics.EventLogPermissionAttribute.MachineName" /> 屬性 (Property) 與由屬性 (Attribute) 上的 <see cref="P:System.Diagnostics.EventLogPermissionAttribute.PermissionAccess" /> 屬性 (Property) 所設定的要求存取層級，來建立使用權限。</summary>
      <returns>
        <see cref="T:System.Security.IPermission" />，表示建立的使用權限。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogPermissionAttribute.MachineName">
      <summary>取得或設定可能讀取事件的電腦名稱。</summary>
      <returns>可能讀取事件的電腦名稱。 預設值為 "."。</returns>
      <exception cref="T:System.ArgumentException">電腦名稱無效。</exception>
    </member>
    <member name="P:System.Diagnostics.EventLogPermissionAttribute.PermissionAccess">
      <summary>取得或設定用於使用權限要求的存取等級。</summary>
      <returns>
        <see cref="T:System.Diagnostics.EventLogPermissionAccess" /> 值的位元組合。 預設為 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" />。</returns>
    </member>
    <member name="T:System.Diagnostics.EventLogPermissionEntry">
      <summary>定義程式碼存取安全性權限的最小單位，是設定給 <see cref="T:System.Diagnostics.EventLog" />。</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntry.#ctor(System.Diagnostics.EventLogPermissionAccess,System.String)">
      <summary>初始化 <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> 類別的新執行個體。</summary>
      <param name="permissionAccess">
        <see cref="T:System.Diagnostics.EventLogPermissionAccess" /> 值的位元組合。 <see cref="P:System.Diagnostics.EventLogPermissionEntry.PermissionAccess" /> 屬性設為這個值。</param>
      <param name="machineName">用來讀取或寫入事件的電腦名稱。 <see cref="P:System.Diagnostics.EventLogPermissionEntry.MachineName" /> 屬性設為這個值。</param>
      <exception cref="T:System.ArgumentException">電腦名稱無效。</exception>
    </member>
    <member name="P:System.Diagnostics.EventLogPermissionEntry.MachineName">
      <summary>取得要讀取或寫入事件的電腦名稱。</summary>
      <returns>用來讀取或寫入事件的電腦名稱。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogPermissionEntry.PermissionAccess">
      <summary>取得用於使用權限要求的使用權限存取等級。</summary>
      <returns>
        <see cref="T:System.Diagnostics.EventLogPermissionAccess" /> 值的位元組合。</returns>
    </member>
    <member name="T:System.Diagnostics.EventLogPermissionEntryCollection">
      <summary>包含 <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> 物件的強類型集合。</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.Add(System.Diagnostics.EventLogPermissionEntry)">
      <summary>將指定的 <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> 加入這個集合。</summary>
      <param name="value">要加入的 <see cref="T:System.Diagnostics.EventLogPermissionEntry" />。</param>
      <returns>已加入之 <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> 的以零起始索引。</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.AddRange(System.Diagnostics.EventLogPermissionEntry[])">
      <summary>附加一組指定的使用權限項目至這個集合。</summary>
      <param name="value">型別 <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> 物件的陣列，含有要加入的使用權限項目。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.AddRange(System.Diagnostics.EventLogPermissionEntryCollection)">
      <summary>附加一組指定的使用權限項目至這個集合。</summary>
      <param name="value">
        <see cref="T:System.Diagnostics.EventLogPermissionEntryCollection" />，包含要加入的使用權限項目。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.Contains(System.Diagnostics.EventLogPermissionEntry)">
      <summary>判斷這個集合是否含有指定的 <see cref="T:System.Diagnostics.EventLogPermissionEntry" />。</summary>
      <param name="value">要尋找的 <see cref="T:System.Diagnostics.EventLogPermissionEntry" />。</param>
      <returns>如果指定的 <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> 屬於這個集合，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.CopyTo(System.Diagnostics.EventLogPermissionEntry[],System.Int32)">
      <summary>從陣列的特定索引開始，將使用權限項目從這個集合複製至陣列。</summary>
      <param name="array">型別 <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> 的陣列，接收這個集合的使用權限項目。</param>
      <param name="index">以零起始的索引，要開始複製使用權限項目的所在位置。</param>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.IndexOf(System.Diagnostics.EventLogPermissionEntry)">
      <summary>判斷在這個集合中的指定使用權限項目索引。</summary>
      <param name="value">要搜尋的使用權限項目。</param>
      <returns>指定使用權限項目的以零起始索引，或 -1 (如果在集合中找不到使用權限項目)。</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.Insert(System.Int32,System.Diagnostics.EventLogPermissionEntry)">
      <summary>將使用權限項目插入至這個集合的指定索引。</summary>
      <param name="index">集合的以零起始索引，要插入使用權限項目的所在位置。</param>
      <param name="value">要插入至這個集合的使用權限項目。</param>
    </member>
    <member name="P:System.Diagnostics.EventLogPermissionEntryCollection.Item(System.Int32)">
      <summary>取得或設定位在指定索引的物件。</summary>
      <param name="index">集合中之以零起始的索引。</param>
      <returns>在指定索引處的 <see cref="T:System.Diagnostics.EventLogPermissionEntry" />。</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.OnClear">
      <summary>清除集合的內容之後，執行額外的自訂處理程序。</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.OnInsert(System.Int32,System.Object)">
      <summary>執行其他自訂處理序後，再將新的使用權限項目加入集合中。</summary>
      <param name="index">插入 <paramref name="value" /> 處之以零起始的索引。</param>
      <param name="value">在 <paramref name="index" /> 中權限項目的新值。</param>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.OnRemove(System.Int32,System.Object)">
      <summary>從集合中移除新的使用權限項目時，執行其他自訂處理序。</summary>
      <param name="index">可以找到 <paramref name="value" /> 處之以零起始的索引。</param>
      <param name="value">要從 <paramref name="index" /> 中移除的使用權限項目。</param>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)">
      <summary>先執行其他自訂處理序後，再設定集合中的值。</summary>
      <param name="index">可以找到 <paramref name="oldValue" /> 處之以零起始的索引。</param>
      <param name="oldValue">以 <paramref name="newValue" /> 取代的值。</param>
      <param name="newValue">在 <paramref name="index" /> 中權限項目的新值。</param>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.Remove(System.Diagnostics.EventLogPermissionEntry)">
      <summary>從這個集合移除指定的使用權限項目。</summary>
      <param name="value">要移除的使用權限項目。</param>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterPermission">
      <summary>允許控制 <see cref="T:System.Diagnostics.PerformanceCounter" /> 的程式碼存取使用權限。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermission.#ctor">
      <summary>初始化 <see cref="T:System.Diagnostics.PerformanceCounterPermission" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermission.#ctor(System.Diagnostics.PerformanceCounterPermissionAccess,System.String,System.String)">
      <summary>使用指定的存取等級、要使用的電腦名稱，以及與效能計數器關聯的分類，初始化 <see cref="T:System.Diagnostics.PerformanceCounterPermission" /> 類別的新執行個體。</summary>
      <param name="permissionAccess">其中一個 <see cref="T:System.Diagnostics.PerformanceCounterPermissionAccess" /> 值。</param>
      <param name="machineName">伺服器，效能計數器和其相關的分類所在處。</param>
      <param name="categoryName">與效能計數器相關的效能計數器分類 (效能物件) 名稱。</param>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermission.#ctor(System.Diagnostics.PerformanceCounterPermissionEntry[])">
      <summary>使用指定的使用權限存取等級項目，初始化 <see cref="T:System.Diagnostics.PerformanceCounterPermission" /> 類別的新執行個體。</summary>
      <param name="permissionAccessEntries">
        <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> 物件的陣列。 <see cref="P:System.Diagnostics.PerformanceCounterPermission.PermissionEntries" /> 屬性設為這個值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="permissionAccessEntries" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>使用指定的使用權限狀態，初始化 <see cref="T:System.Diagnostics.PerformanceCounterPermission" /> 類別的新執行個體。</summary>
      <param name="state">其中一個 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> 參數不是有效的 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermission.PermissionEntries">
      <summary>取得這個使用權限要求的使用權限項目的集合。</summary>
      <returns>
        <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntryCollection" />，含有這個使用權限要求的使用權限項目。</returns>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterPermissionAccess">
      <summary>定義 <see cref="T:System.Diagnostics.PerformanceCounter" /> 使用權限類別所使用的存取等級。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceCounter" /> 可以讀取、寫入和建立分類。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterPermissionAccess.Browse">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceCounter" /> 可以讀取分類。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterPermissionAccess.Instrument">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceCounter" /> 可以讀取和寫入分類。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterPermissionAccess.None">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceCounter" /> 沒有使用權限。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceCounter" /> 可以讀取分類。</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceCounter" /> 可以寫入分類。</summary>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterPermissionAttribute">
      <summary>允許宣告式效能計數器使用權限檢查。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>初始化 <see cref="T:System.Diagnostics.PerformanceCounterPermissionAttribute" /> 類別的新執行個體。</summary>
      <param name="action">其中一個 <see cref="T:System.Security.Permissions.SecurityAction" /> 值。</param>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermissionAttribute.CategoryName">
      <summary>取得或設定效能計數器分類的名稱。</summary>
      <returns>效能計數器分類 (效能物件) 的名稱。</returns>
      <exception cref="T:System.ArgumentNullException">值為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionAttribute.CreatePermission">
      <summary>根據所要求的存取層級建立使用權限，該層級透過屬性 (Attribute) 上的 <see cref="P:System.Diagnostics.PerformanceCounterPermissionAttribute.PermissionAccess" /> 屬性 (Property) 來設定。</summary>
      <returns>
        <see cref="T:System.Security.IPermission" />，表示建立的使用權限。</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermissionAttribute.MachineName">
      <summary>取得或設定效能計數器的電腦名稱。</summary>
      <returns>效能計數器的分類所駐留的伺服器。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Diagnostics.PerformanceCounterPermissionAttribute.MachineName" /> 格式無效。</exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermissionAttribute.PermissionAccess">
      <summary>取得或設定用於使用權限要求的存取等級。</summary>
      <returns>
        <see cref="T:System.Diagnostics.PerformanceCounterPermissionAccess" /> 值的位元組合。 預設為 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" />。</returns>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterPermissionEntry">
      <summary>定義設定給 <see cref="T:System.Diagnostics.PerformanceCounter" /> 之程式碼存取安全性權限的最小單位。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntry.#ctor(System.Diagnostics.PerformanceCounterPermissionAccess,System.String,System.String)">
      <summary>初始化 <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> 類別的新執行個體。</summary>
      <param name="permissionAccess">
        <see cref="T:System.Diagnostics.PerformanceCounterPermissionAccess" /> 值的位元組合。 <see cref="P:System.Diagnostics.PerformanceCounterPermissionEntry.PermissionAccess" /> 屬性設為這個值。</param>
      <param name="machineName">效能計數器的分類所駐留的伺服器。</param>
      <param name="categoryName">與這個效能計數器相關的效能計數器分類 (效能物件) 名稱。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" /> 為 <see langword="null" />。  
-或- 
 <paramref name="machineName" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="permissionAccess" /> 不是有效的 <see cref="T:System.Diagnostics.PerformanceCounterPermissionAccess" /> 值。  
-或- 
 <paramref name="machineName" /> 不是有效的電腦名稱。</exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermissionEntry.CategoryName">
      <summary>取得效能計數器分類 (效能物件) 的名稱。</summary>
      <returns>效能計數器分類 (效能物件) 的名稱。</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermissionEntry.MachineName">
      <summary>取得效能計數器的分類所駐留的伺服器名稱。</summary>
      <returns>分類所駐留的伺服器名稱。</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermissionEntry.PermissionAccess">
      <summary>取得項目的使用權限存取等級。</summary>
      <returns>
        <see cref="T:System.Diagnostics.PerformanceCounterPermissionAccess" /> 值的位元組合。</returns>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterPermissionEntryCollection">
      <summary>包含 <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> 物件的強型別集合。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Add(System.Diagnostics.PerformanceCounterPermissionEntry)">
      <summary>將指定的 <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> 加入這個集合。</summary>
      <param name="value">要加入的 <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> 物件。</param>
      <returns>所加入 <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> 物件之以零起始的索引。</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.AddRange(System.Diagnostics.PerformanceCounterPermissionEntry[])">
      <summary>附加一組指定的使用權限項目至這個集合。</summary>
      <param name="value">型別 <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> 物件的陣列，含有要加入的使用權限項目。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.AddRange(System.Diagnostics.PerformanceCounterPermissionEntryCollection)">
      <summary>附加一組指定的使用權限項目至這個集合。</summary>
      <param name="value">
        <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntryCollection" />，包含要加入的使用權限項目。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Contains(System.Diagnostics.PerformanceCounterPermissionEntry)">
      <summary>判斷這個集合是否含有指定的 <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> 物件。</summary>
      <param name="value">所要尋找的 <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> 物件。</param>
      <returns>如果指定的 <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> 物件屬於這個集合，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.CopyTo(System.Diagnostics.PerformanceCounterPermissionEntry[],System.Int32)">
      <summary>從陣列的特定索引開始，將使用權限項目從這個集合複製至陣列。</summary>
      <param name="array">型別 <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> 的陣列，接收這個集合的使用權限項目。</param>
      <param name="index">以零起始的索引，要開始複製使用權限項目的所在位置。</param>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.IndexOf(System.Diagnostics.PerformanceCounterPermissionEntry)">
      <summary>判斷在這個集合中的指定使用權限項目索引。</summary>
      <param name="value">用來搜尋的使用權限項目。</param>
      <returns>指定使用權限項目的以零起始索引，或 -1 (如果在集合中找不到使用權限項目)。</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Insert(System.Int32,System.Diagnostics.PerformanceCounterPermissionEntry)">
      <summary>將使用權限項目插入至這個集合的指定索引。</summary>
      <param name="index">集合的以零起始索引，要插入使用權限項目的所在位置。</param>
      <param name="value">要插入至這個集合的使用權限項目。</param>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Item(System.Int32)">
      <summary>取得或設定位在指定索引的物件。</summary>
      <param name="index">集合中之以零起始的索引。</param>
      <returns>
        <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> 物件，位在指定的索引。</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.OnClear">
      <summary>清除集合的內容之後，執行額外的自訂處理程序。</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.OnInsert(System.Int32,System.Object)">
      <summary>執行其他自訂處理序後，再將新的使用權限項目加入集合中。</summary>
      <param name="index">插入 <paramref name="value" /> 處之以零起始的索引。</param>
      <param name="value">在 <paramref name="index" /> 中權限項目的新值。</param>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.OnRemove(System.Int32,System.Object)">
      <summary>從集合中移除新的使用權限項目時，執行其他自訂處理序。</summary>
      <param name="index">可以找到 <paramref name="value" /> 處之以零起始的索引。</param>
      <param name="value">要從 <paramref name="index" /> 中移除的使用權限項目。</param>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)">
      <summary>先執行其他自訂處理序後，再設定集合中的值。</summary>
      <param name="index">可以找到 <paramref name="oldValue" /> 處之以零起始的索引。</param>
      <param name="oldValue">以 <paramref name="newValue" /> 取代的值。</param>
      <param name="newValue">在 <paramref name="index" /> 中權限項目的新值。</param>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Remove(System.Diagnostics.PerformanceCounterPermissionEntry)">
      <summary>從這個集合移除指定的使用權限項目。</summary>
      <param name="value">要移除的使用權限項目。</param>
    </member>
    <member name="T:System.Drawing.Printing.PrintingPermission">
      <summary>控制印表機的存取。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.#ctor(System.Drawing.Printing.PrintingPermissionLevel)">
      <summary>使用指定的列印存取等級來初始化 <see cref="T:System.Drawing.Printing.PrintingPermission" /> 類別的新執行個體。</summary>
      <param name="printingLevel">其中一個 <see cref="T:System.Drawing.Printing.PrintingPermissionLevel" /> 值。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>依指定使用完全限制或不限制的存取，初始化 <see cref="T:System.Drawing.Printing.PrintingPermission" /> 類別的新執行個體。</summary>
      <param name="state">其中一個 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> 不是有效的 <see cref="T:System.Security.Permissions.PermissionState" />。</exception>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.Copy">
      <summary>建立並傳回目前使用權限物件的相同複本。</summary>
      <returns>目前權限物件的複本。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.FromXml(System.Security.SecurityElement)">
      <summary>透過 XML 編碼，重新建構具有指定狀態的安全性物件。</summary>
      <param name="element">用來重新建構安全性物件的 XML 編碼方式。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.Intersect(System.Security.IPermission)">
      <summary>建立並傳回目前使用權限物件和目標使用權限物件交集的使用權限。</summary>
      <param name="target">與目前使用權限物件相同型別的使用權限物件。</param>
      <returns>新使用權限物件，表示目前物件和指定目標的交集。 如果交集是空的，這個物件就是 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 是物件，這個物件不屬於與目前使用權限物件相同的類型。</exception>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>判斷目前使用權限物件是否為指定使用權限的子集。</summary>
      <param name="target">將測試子集關聯性 (Relationship) 的使用權限物件。 這個物件必須與目前的使用權限物件為相同的型別。</param>
      <returns>如果目前的使用權限物件是 <paramref name="target" /> 的子集，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 是物件，這個物件不屬於與目前使用權限物件相同的類型。</exception>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.IsUnrestricted">
      <summary>取得值，表示使用權限是否不受限制。</summary>
      <returns>如果使用權限不受限制，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintingPermission.Level">
      <summary>取得或設定列印存取的程式碼等級。</summary>
      <returns>其中一個 <see cref="T:System.Drawing.Printing.PrintingPermissionLevel" /> 值。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.ToXml">
      <summary>建立安全物件及其目前狀態的 XML 編碼方式。</summary>
      <returns>安全物件的 XML 編碼方式，包含所有狀態資訊。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.Union(System.Security.IPermission)">
      <summary>建立將使用權限物件和目標使用權限物件相結合的使用權限。</summary>
      <param name="target">與目前使用權限物件相同型別的使用權限物件。</param>
      <returns>新使用權限物件，表示目前使用權限物件和指定使用權限物件的聯集。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 是物件，這個物件不屬於與目前使用權限物件相同的類型。</exception>
    </member>
    <member name="T:System.Drawing.Printing.PrintingPermissionAttribute">
      <summary>允許宣告式列印使用權限檢查。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>初始化 <see cref="T:System.Drawing.Printing.PrintingPermissionAttribute" /> 類別的新執行個體。</summary>
      <param name="action">其中一個 <see cref="T:System.Security.Permissions.SecurityAction" /> 值。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermissionAttribute.CreatePermission">
      <summary>根據所要求的存取等級建立使用權限，該等級的設定是經由屬性 (Attribute) 上的 <see cref="P:System.Drawing.Printing.PrintingPermissionAttribute.Level" /> 屬性 (Property)。</summary>
      <returns>
        <see cref="T:System.Security.IPermission" />，表示建立的使用權限。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintingPermissionAttribute.Level">
      <summary>取得或設定所允許列印的類型。</summary>
      <returns>其中一個 <see cref="T:System.Drawing.Printing.PrintingPermissionLevel" /> 值。</returns>
      <exception cref="T:System.ArgumentException">該值不是其中一個 <see cref="T:System.Drawing.Printing.PrintingPermissionLevel" /> 值。</exception>
    </member>
    <member name="T:System.Drawing.Printing.PrintingPermissionLevel">
      <summary>指定程式碼允許進行的列印類型。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting">
      <summary>提供所有印表機的完整存取。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting">
      <summary>將列印以程式設計方式以及經由較小限制之對話方塊的安全列印提供給預設印表機。 <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" /> 是 <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" /> 的子集。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintingPermissionLevel.NoPrinting">
      <summary>防止印表機的存取。 <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.NoPrinting" /> 是 <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" /> 的子集。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting">
      <summary>只能透過受限制的對話方塊提供列印。 <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" /> 是 <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" /> 的子集。</summary>
    </member>
    <member name="T:System.Net.DnsPermission">
      <summary>控制存取網路上的網域名稱系統 (Domain Name System，DNS) 伺服器的權限。</summary>
    </member>
    <member name="M:System.Net.DnsPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>建立 <see cref="T:System.Net.DnsPermission" /> 類別的新執行個體，它會允許不受限制的 DNS 存取或不允許 DNS 存取。</summary>
      <param name="state">其中一個 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> 不是有效的 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</exception>
    </member>
    <member name="M:System.Net.DnsPermission.Copy">
      <summary>建立目前使用權限執行個體的相同複本。</summary>
      <returns>
        <see cref="T:System.Net.DnsPermission" /> 類別的新執行個體是目前執行個體的相同複本。</returns>
    </member>
    <member name="M:System.Net.DnsPermission.FromXml(System.Security.SecurityElement)">
      <summary>從 XML 編碼方式重建 <see cref="T:System.Net.DnsPermission" /> 執行個體。</summary>
      <param name="securityElement">XML 編碼方式，用來重建 <see cref="T:System.Net.DnsPermission" /> 執行個體。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> 不是 <see cref="T:System.Net.DnsPermission" /> 項目。</exception>
    </member>
    <member name="M:System.Net.DnsPermission.Intersect(System.Security.IPermission)">
      <summary>建立使用權限執行個體，這個使用權限執行個體是目前使用權限執行個體和指定使用權限執行個體的交集。</summary>
      <param name="target">
        <see cref="T:System.Net.DnsPermission" /> 執行個體，用來與目前執行個體交集。</param>
      <returns>
        <see cref="T:System.Net.DnsPermission" /> 執行個體，表示目前 <see cref="T:System.Net.DnsPermission" /> 執行個體和指定 <see cref="T:System.Net.DnsPermission" /> 執行個體的交集，或 <see langword="null" /> (如果交集為空)。 如果目前執行個體和 <paramref name="target" /> 都是不受限制的，則這個方法會傳回不受限制的新 <see cref="T:System.Net.DnsPermission" /> 執行個體，否則傳回 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 既不是 <see cref="T:System.Net.DnsPermission" /> 也不是 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Net.DnsPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>判斷目前使用權限執行個體是否為指定使用權限執行個體的子集。</summary>
      <param name="target">要為子集關係測試的第二個 <see cref="T:System.Net.DnsPermission" /> 執行個體。</param>
      <returns>如果目前執行個體是不受限制的，而且 <paramref name="target" /> 若不是 <see langword="false" /> 就是不受限制的，則為 <see langword="null" />，否則為 <see langword="true" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 既不是 <see cref="T:System.Net.DnsPermission" /> 也不是 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Net.DnsPermission.IsUnrestricted">
      <summary>檢查物件的整體使用權限狀態。</summary>
      <returns>如果 <see cref="T:System.Net.DnsPermission" /> 執行個體是使用 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> 建立的，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.DnsPermission.ToXml">
      <summary>建立 <see cref="T:System.Net.DnsPermission" /> 執行個體和其目前狀態的 XML 編碼方式。</summary>
      <returns>
        <see cref="T:System.Security.SecurityElement" /> 執行個體，含有安全物件的 XML 編碼表示，包含狀態資訊。</returns>
    </member>
    <member name="M:System.Net.DnsPermission.Union(System.Security.IPermission)">
      <summary>建立使用權限執行個體，這個使用權限執行個體是目前使用權限執行個體和指定使用權限執行個體的聯集。</summary>
      <param name="target">要與目前執行個體結合的 <see cref="T:System.Net.DnsPermission" /> 執行個體。</param>
      <returns>
        <see cref="T:System.Net.DnsPermission" /> 執行個體，表示目前 <see cref="T:System.Net.DnsPermission" /> 執行個體和指定 <see cref="T:System.Net.DnsPermission" /> 執行個體的聯集。 如果 <paramref name="target" /> 是 <see langword="null" />，則這個方法會傳回目前執行個體的複本。 如果目前執行個體或 <paramref name="target" /> 是不受限制的，則這個方法會傳回不受限制的 <see cref="T:System.Net.DnsPermission" /> 執行個體，否則傳回受限制的 <see cref="T:System.Net.DnsPermission" /> 執行個體。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 既不是 <see cref="T:System.Net.DnsPermission" /> 也不是 <see langword="null" />。</exception>
    </member>
    <member name="T:System.Net.DnsPermissionAttribute">
      <summary>指定要求網域名稱伺服器 (Domain Name Server) 中資訊的使用權限。</summary>
    </member>
    <member name="M:System.Net.DnsPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>使用指定的 <see cref="T:System.Security.Permissions.SecurityAction" /> 值，初始化 <see cref="T:System.Net.DnsPermissionAttribute" /> 類別的新執行個體。</summary>
      <param name="action">其中一個 <see cref="T:System.Security.Permissions.SecurityAction" /> 值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="action" /> 參數不是有效的 <see cref="T:System.Security.Permissions.SecurityAction" />。</exception>
    </member>
    <member name="M:System.Net.DnsPermissionAttribute.CreatePermission">
      <summary>建立並傳回 <see cref="T:System.Net.DnsPermission" /> 類別的新執行個體。</summary>
      <returns>對應安全性宣告的 <see cref="T:System.Net.DnsPermission" />。</returns>
    </member>
    <member name="T:System.Net.EndpointPermission">
      <summary>定義端點，這個端點是由 <see cref="T:System.Net.SocketPermission" /> 執行個體 (Instance) 所授權。</summary>
    </member>
    <member name="M:System.Net.EndpointPermission.Equals(System.Object)">
      <summary>判斷指定的 <see langword="Object" /> 是否等於目前的 <see langword="Object" />。</summary>
      <param name="obj">與目前的 <see cref="T:System.Object" /> 相比較的 <see langword="Object" />。</param>
      <returns>如果指定的 <see langword="Object" /> 和目前的 <see langword="Object" /> 相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.EndpointPermission.GetHashCode">
      <summary>做為特定型別的雜湊函式。</summary>
      <returns>目前 <see cref="T:System.Object" /> 的雜湊碼。</returns>
    </member>
    <member name="P:System.Net.EndpointPermission.Hostname">
      <summary>取得與這個端點相關聯伺服器的 DNS 主機名稱或 IP 位址。</summary>
      <returns>字串，包含伺服器的 DNS 主機名稱或 IP 位址。</returns>
    </member>
    <member name="P:System.Net.EndpointPermission.Port">
      <summary>取得與這個端點關聯的網路通訊埠編號。</summary>
      <returns>與這個要求關聯的網路通訊埠編號，或 <see cref="F:System.Net.SocketPermission.AllPorts" />。</returns>
    </member>
    <member name="P:System.Net.EndpointPermission.Transport">
      <summary>取得與這個端點關聯的傳輸類型。</summary>
      <returns>其中一個 <see cref="T:System.Net.TransportType" /> 值。</returns>
    </member>
    <member name="T:System.Net.Mail.SmtpAccess">
      <summary>指定對 Simple Mail Transport Protocol (SMTP) 伺服器所允許的存取層級。</summary>
    </member>
    <member name="F:System.Net.Mail.SmtpAccess.Connect">
      <summary>透過預設通訊埠 (通訊埠 25) 與 SMTP 主機的連接。</summary>
    </member>
    <member name="F:System.Net.Mail.SmtpAccess.ConnectToUnrestrictedPort">
      <summary>透過任何連接埠與 SMTP 主機的連接。</summary>
    </member>
    <member name="F:System.Net.Mail.SmtpAccess.None">
      <summary>不能存取 SMTP 主機。</summary>
    </member>
    <member name="T:System.Net.Mail.SmtpPermission">
      <summary>控制 Simple Mail Transport Protocol (SMTP) 伺服器的存取。</summary>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.#ctor(System.Boolean)">
      <summary>使用指定的狀態，初始化 <see cref="T:System.Net.Mail.SmtpPermission" /> 類別的新執行個體。</summary>
      <param name="unrestricted">如果新的使用權限不受限制，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.#ctor(System.Net.Mail.SmtpAccess)">
      <summary>使用指定的存取層級，初始化 <see cref="T:System.Net.Mail.SmtpPermission" /> 類別的新執行個體。</summary>
      <param name="access">其中一個 <see cref="T:System.Net.Mail.SmtpAccess" /> 值。</param>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>使用指定的使用權限狀態值，初始化 <see cref="T:System.Net.Mail.SmtpPermission" /> 類別的新執行個體。</summary>
      <param name="state">其中一個 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</param>
    </member>
    <member name="P:System.Net.Mail.SmtpPermission.Access">
      <summary>取得由使用權限所控制之 SMTP 伺服器的存取層級。</summary>
      <returns>其中一個 <see cref="T:System.Net.Mail.SmtpAccess" /> 值。</returns>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.AddPermission(System.Net.Mail.SmtpAccess)">
      <summary>將指定的存取層級值加入使用權限中。</summary>
      <param name="access">其中一個 <see cref="T:System.Net.Mail.SmtpAccess" /> 值。</param>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.Copy">
      <summary>建立並傳回目前權限的相同複本。</summary>
      <returns>
        <see cref="T:System.Net.Mail.SmtpPermission" />，與目前的使用權限完全相同。</returns>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.FromXml(System.Security.SecurityElement)">
      <summary>使用指定的 XML 編碼方式，設定使用權限的狀態。</summary>
      <param name="securityElement">要用於設定目前使用權限狀態的 XML 編碼方式。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> 未描述 <see cref="T:System.Net.Mail.SmtpPermission" /> 物件。  
-或- 
 <paramref name="securityElement" /> 未包含重建使用權限的必要狀態資訊。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.Intersect(System.Security.IPermission)">
      <summary>建立並傳回目前權限與指定權限交集的權限。</summary>
      <param name="target">與目前使用權限交集的 <see cref="T:System.Security.IPermission" />。 必須與目前權限屬於相同的類型。</param>
      <returns>
        <see cref="T:System.Net.Mail.SmtpPermission" />，表示目前使用權限和指定之使用權限的交集。 如果交集是空的或 <paramref name="target" /> 為 <see langword="null" />，則會傳回 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 不是 <see cref="T:System.Net.Mail.SmtpPermission" />。</exception>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>傳回值，指出目前的使用權限是否為指定使用權限的子集。</summary>
      <param name="target">要測試其子集關聯性 (Relationship) 的 <see cref="T:System.Security.IPermission" />。 這個權限必須與目前權限屬於相同的類型。</param>
      <returns>如果目前權限是指定權限的子集，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 不是 <see cref="T:System.Net.Mail.SmtpPermission" />。</exception>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.IsUnrestricted">
      <summary>傳回值，指出目前的權限是否不受限制。</summary>
      <returns>如果目前的權限不受限制，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.ToXml">
      <summary>建立使用權限狀態的 XML 編碼方式。</summary>
      <returns>
        <see cref="T:System.Security.SecurityElement" />，包含目前使用權限的 XML 編碼方式。</returns>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.Union(System.Security.IPermission)">
      <summary>建立目前權限與指定權限聯集的權限。</summary>
      <param name="target">要與目前使用權限結合的 <see cref="T:System.Security.IPermission" />。</param>
      <returns>新的 <see cref="T:System.Net.Mail.SmtpPermission" /> 使用權限，表示目前使用權限和指定使用權限的聯集。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 不是 <see cref="T:System.Net.Mail.SmtpPermission" />。</exception>
    </member>
    <member name="T:System.Net.Mail.SmtpPermissionAttribute">
      <summary>控制 Simple Mail Transport Protocol (SMTP) 伺服器的存取。</summary>
    </member>
    <member name="M:System.Net.Mail.SmtpPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>初始化 <see cref="T:System.Net.Mail.SmtpPermissionAttribute" /> 類別的新執行個體。</summary>
      <param name="action">其中一個 <see cref="T:System.Security.Permissions.SecurityAction" /> 值，指定使用權限行為。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="action" /> 不是有效的 <see cref="T:System.Security.Permissions.SecurityAction" />。</exception>
    </member>
    <member name="P:System.Net.Mail.SmtpPermissionAttribute.Access">
      <summary>取得或設定由屬性 (Attribute) 所控制之 SMTP 伺服器的存取層級。</summary>
      <returns>
        <see cref="T:System.String" /> 值。 有效值包括 "Connect" 和 "None"。</returns>
    </member>
    <member name="M:System.Net.Mail.SmtpPermissionAttribute.CreatePermission">
      <summary>建立使用權限物件，該物件可以使用 <see cref="T:System.Security.Permissions.SecurityAction" /> 儲存在組件的中繼資料 (Metadata) 中。</summary>
      <returns>
        <see cref="T:System.Net.Mail.SmtpPermission" /> 執行個體。</returns>
    </member>
    <member name="T:System.Net.NetworkAccess">
      <summary>指定網路存取權限。</summary>
    </member>
    <member name="F:System.Net.NetworkAccess.Accept">
      <summary>，表示允許應用程式接受從網際網路至本機資源的連接。 注意，這是本機主機的保護措施，使用 Accept 授與對本機資源 (位址/連接埠) 的存取權限。 在通訊端 (Socket) 嘗試繫結至這個本機資源的時候，會執行使用權限檢查來查看該資源是否有 Accept 存在。</summary>
    </member>
    <member name="F:System.Net.NetworkAccess.Connect">
      <summary>指示允許將應用程式連接到特定的網際網路資源。 注意，在遠端主機資源的情況下，不會執行檢查來查看連接使用權限是否存在。 這是因為連接中的遠端主機連接埠是未知的，而且不是可以預先建置的適當使用權限。 應用程式應負責檢查嘗試連接到接聽通訊端的遠端主機的使用權限。</summary>
    </member>
    <member name="T:System.Net.NetworkInformation.NetworkInformationAccess">
      <summary>指定存取網路介面和流量統計資料之相關資訊的使用權限。</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetworkInformationAccess.None">
      <summary>沒有網路資訊的存取權限。</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping">
      <summary>網路資訊的 Ping 存取權限。</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetworkInformationAccess.Read">
      <summary>網路資訊的讀取權限。</summary>
    </member>
    <member name="T:System.Net.NetworkInformation.NetworkInformationPermission">
      <summary>控制對本機電腦之網路資訊及流量統計資料的存取。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.#ctor(System.Net.NetworkInformation.NetworkInformationAccess)">
      <summary>使用指定的 <see cref="T:System.Net.NetworkInformation.NetworkInformationAccess" /> 值，初始化 <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> 類別的新執行個體。</summary>
      <param name="access">其中一個 <see cref="T:System.Net.NetworkInformation.NetworkInformationAccess" /> 值。</param>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>使用指定的 <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> 初始化 <see cref="T:System.Security.Permissions.PermissionState" /> 類別的新執行個體。</summary>
      <param name="state">其中一個 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</param>
    </member>
    <member name="P:System.Net.NetworkInformation.NetworkInformationPermission.Access">
      <summary>取得由這個使用權限所控制之網路資訊的存取層級。</summary>
      <returns>其中一個 <see cref="T:System.Net.NetworkInformation.NetworkInformationAccess" /> 值。</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.AddPermission(System.Net.NetworkInformation.NetworkInformationAccess)">
      <summary>將指定的值加入至這個使用權限。</summary>
      <param name="access">其中一個 <see cref="T:System.Net.NetworkInformation.NetworkInformationAccess" /> 值。</param>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.Copy">
      <summary>建立並傳回這個使用權限的相同複本。</summary>
      <returns>
        <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" />，與目前的使用權限完全相同</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.FromXml(System.Security.SecurityElement)">
      <summary>使用指定的 XML 編碼方式，設定這個使用權限的狀態。</summary>
      <param name="securityElement">
        <see cref="T:System.Security.SecurityElement" />，包含用來設定目前使用權限狀態的 XML 編碼方式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> 不是使用權限編碼方式。  
-或- 
 <paramref name="securityElement" /> 不是 <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> 的編碼方式。  
-或- 
 <paramref name="securityElement" /> 含有無效的 <see cref="T:System.Net.NetworkInformation.NetworkInformationAccess" /> 值。</exception>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.Intersect(System.Security.IPermission)">
      <summary>建立並傳回目前使用權限和指定之使用權限交集的使用權限。</summary>
      <param name="target">與目前使用權限交集的 <see cref="T:System.Security.IPermission" />。 必須與目前權限屬於相同的類型。</param>
      <returns>
        <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" />，表示目前使用權限和指定之使用權限的交集。 如果交集是空的，或 <paramref name="target" /> 為 <see langword="null" />，則這個新使用權限便為 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 不是 <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" />。</exception>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>判斷目前使用權限是否為指定之使用權限的子集。</summary>
      <param name="target">要測試其子集關聯性 (Relationship) 的 <see cref="T:System.Security.IPermission" />。 這個使用權限與目前的使用權限必須屬於相同型別</param>
      <returns>如果目前權限是指定權限的子集，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.IsUnrestricted">
      <summary>傳回值，指出目前的權限是否不受限制。</summary>
      <returns>如果目前的權限不受限制，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.ToXml">
      <summary>建立這個使用權限狀態的 XML 編碼方式。</summary>
      <returns>
        <see cref="T:System.Security.SecurityElement" />，包含目前使用權限的 XML 編碼方式。</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.Union(System.Security.IPermission)">
      <summary>建立使用權限，做為這個使用權限和指定之使用權限的聯集。</summary>
      <param name="target">要與目前權限合併的 <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> 權限。</param>
      <returns>代表目前權限與指定權限聯集的新權限。</returns>
    </member>
    <member name="T:System.Net.NetworkInformation.NetworkInformationPermissionAttribute">
      <summary>允許將 <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> 的安全性動作套用至使用宣告式安全性的程式碼。</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>初始化 <see cref="T:System.Net.NetworkInformation.NetworkInformationPermissionAttribute" /> 類別的新執行個體。</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 值，指定使用權限的行為。</param>
    </member>
    <member name="P:System.Net.NetworkInformation.NetworkInformationPermissionAttribute.Access">
      <summary>取得或設定網路資訊存取層級。</summary>
      <returns>指定存取層級的字串。</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermissionAttribute.CreatePermission">
      <summary>建立並傳回新的 <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> 物件。</summary>
      <returns>
        <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" />，會對應至這個屬性。</returns>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission">
      <summary>指定定義或使用於 <see cref="N:System.Net.PeerToPeer.Collaboration" /> 物件權限的值。</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>初始化 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> 的新執行個體。 當呼叫建構函式時，會傳遞這個執行個體的初始 <see cref="T:System.Security.Permissions.PermissionState" />。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 列舉中的其中一個值。</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Copy">
      <summary>建立並傳回目前 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> 的複本。</summary>
      <returns>
        <see cref="T:System.Object" />，包含 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> 目前執行個體的複本。</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.FromXml(System.Security.SecurityElement)">
      <summary>代表用於編碼安全性物件的 XML 物件模型。</summary>
      <param name="e">用來重新建構權限的 XML 編碼。</param>
      <exception cref="T:System.ArgumentException">參數不是有效的權限項目。  

參數不包含有效的型別或類別。  

不支援參數的版本號碼。</exception>
      <exception cref="T:System.ArgumentNullException">參數為 <see langword="null" /> 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(System.Security.IPermission)">
      <summary>建立並傳回目前 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> 和指定之 <paramref name="target" /> 使用權限交集而成的使用權限。</summary>
      <param name="target">要與目前使用權限形成交集之 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(System.Security.IPermission)" /> 使用權限。 必須與目前權限屬於相同的類型。</param>
      <returns>新的使用權限，表示目前 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> 和指定之 <paramref name="target" /> 使用權限的交集。 如果交集是空的，則這個新的使用權限是 <see langword="null" /> 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</returns>
      <exception cref="T:System.ArgumentException">目標參數不是 <see langword="null" /> 參考 (在 Visual Basic 中為 <see langword="Nothing" />)，而且不是和目前使用權限物件相同類別的執行個體。</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>判斷目前 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> 是否為指定之 <paramref name="target" /> 使用權限的子集。</summary>
      <param name="target">使用權限，要測試與子集關聯性。 這個權限必須與目前權限屬於相同的類型。</param>
      <returns>如果目前的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> 是指定之使用權限的子集，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">參數為 <see langword="null" /> 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsUnrestricted">
      <summary>傳回值，指定目前的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> 是否不受限制。</summary>
      <returns>如果目前的權限不受限制，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.ToXml">
      <summary>建立 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> 和其目前狀態的 XML 編碼方式。</summary>
      <returns>權限的 XML 編碼方式，包含所有狀態資訊。</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)">
      <summary>建立目前 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> 和指定之 <paramref name="target" /> 使用權限聯集而成的使用權限。</summary>
      <param name="target">要與目前權限結合的權限， 必須與目前權限屬於相同的類型。</param>
      <returns>新的使用權限，表示目前 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)" /> 和指定之使用權限的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />。</returns>
      <exception cref="T:System.ArgumentException">參數為 <see langword="null" /> 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</exception>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute">
      <summary>允許將 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> 的安全性動作套用至使用宣告式安全性的程式碼。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>使用指定的 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute" /> 初始化 <see cref="T:System.Security.Permissions.SecurityAction" /> 類別的新執行個體。</summary>
      <param name="action">指定 <see cref="T:System.Security.Permissions.SecurityAction" /> 值。</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute.CreatePermission">
      <summary>建立及傳回新的 <see cref="T:System.Security.IPermission" />。</summary>
      <returns>新的 <see cref="T:System.Security.IPermission" /> 物件。</returns>
    </member>
    <member name="T:System.Net.PeerToPeer.PnrpPermission">
      <summary>指定使用於 <see cref="N:System.Net.PeerToPeer" /> 物件權限的值。</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>使用提供的初始權限狀態初始化 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 類別的新執行個體。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 列舉中的其中一個值。</param>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.Copy">
      <summary>建立並傳回目前 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 的相同複本。</summary>
      <returns>具有 IPermission 介面的物件，其執行個體內含 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 的目前執行個體複本。</returns>
      <exception cref="T:System.ArgumentException">參數不是有效的 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 元素。  

不支援參數的版本號碼。</exception>
      <exception cref="T:System.ArgumentNullException">參數為 <see langword="null" /> 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)">
      <summary>透過 XML 編碼，重新建構具有指定狀態的安全性物件。</summary>
      <param name="e">用來重新建構權限的 XML 編碼。</param>
      <exception cref="T:System.ArgumentException">參數不是有效的 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 元素。  

不支援參數的版本號碼。</exception>
      <exception cref="T:System.ArgumentNullException">參數為 <see langword="null" /> 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)">
      <summary>建立並傳回目前 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 和指定之使用權限交集而成的使用權限。</summary>
      <param name="target">要與目前使用權限 <see cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" /> 的使用權限。 必須與目前權限屬於相同的類型。</param>
      <returns>新的使用權限，表示目前 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 和指定之使用權限的交集。 如果交集是空的，則這個新的使用權限是 <see langword="null" /> 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</returns>
      <exception cref="T:System.ArgumentException">目標參數不是 <see langword="null" /> 參考 (在 Visual Basic 中為 <see langword="Nothing" />)，而且不是和目前使用權限物件相同類別的執行個體。</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>判斷目前 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 是否為指定之使用權限的子集。</summary>
      <param name="target">使用權限，要測試與子集關聯性。 這個使用權限必須與目前的使用權限為相同的型別。</param>
      <returns>如果目前的 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 是指定之使用權限的子集，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">目標參數不是 <see langword="null" /> 參考 (在 Visual Basic 中為 <see langword="Nothing" />)，而且不是和目前使用權限物件相同類別的執行個體。</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted">
      <summary>傳回值，指定目前的 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 是否不受限制。</summary>
      <returns>如果目前的權限不受限制，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.ToXml">
      <summary>建立 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 和其目前狀態的 XML 編碼方式。</summary>
      <returns>
        <see cref="T:System.Security.SecurityElement" /> 物件，包含使用權限的 XML 編碼，包括所有狀態資訊。</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)">
      <summary>建立目前 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 和指定之使用權限聯集而成的使用權限。</summary>
      <param name="target">要與目前權限結合的權限， 必須與目前權限屬於相同的類型。</param>
      <returns>新的使用權限，表示目前 <see cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" /> 和指定之使用權限的 <see cref="T:System.Net.PeerToPeer.PnrpPermission" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 參數無效。</exception>
    </member>
    <member name="T:System.Net.PeerToPeer.PnrpPermissionAttribute">
      <summary>允許將 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 的安全性動作套用至使用宣告式安全性的程式碼。</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>使用指定的 <see cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" /> 初始化 <see cref="T:System.Security.Permissions.SecurityAction" /> 類別的新執行個體。</summary>
      <param name="action">其中一個 <see cref="T:System.Security.Permissions.SecurityAction" /> 值。</param>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermissionAttribute.CreatePermission">
      <summary>建立及傳回新的 <see cref="T:System.Security.IPermission" />。</summary>
      <returns>新的 <see cref="T:System.Security.IPermission" /> 物件。</returns>
    </member>
    <member name="T:System.Net.PeerToPeer.PnrpScope">
      <summary>指定 PNRP Cloud 的不同範圍。</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.PnrpScope.All">
      <summary>所有 IP 位址都可以向 PNRP <see cref="T:System.Net.PeerToPeer.Cloud" /> 註冊。 任何範圍和所有範圍之間沒有差別。</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.PnrpScope.Global">
      <summary>這是全域範圍，所有有效的 IP 位址都可以向 PNRP <see cref="T:System.Net.PeerToPeer.Cloud" /> 註冊。</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.PnrpScope.LinkLocal">
      <summary>這是連結本機範圍，只有為本機區域子網路所定義的 IP 位址可以向 PNRP <see cref="T:System.Net.PeerToPeer.Cloud" /> 註冊。</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.PnrpScope.SiteLocal">
      <summary>這是站台本機範圍，只有為站台所定義的 IP 位址可以向 PNRP 註冊。</summary>
    </member>
    <member name="T:System.Net.SocketPermission">
      <summary>控制在傳輸位址上進行或接受連接的權限。</summary>
    </member>
    <member name="M:System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
      <summary>使用指定的使用權限，為指定的傳輸位址初始化 <see cref="T:System.Net.SocketPermission" /> 類別的新執行個體。</summary>
      <param name="access">其中一個 <see cref="T:System.Net.NetworkAccess" /> 值。</param>
      <param name="transport">其中一個 <see cref="T:System.Net.TransportType" /> 值。</param>
      <param name="hostName">傳輸位址的主機名稱。</param>
      <param name="portNumber">傳輸位址的通訊埠編號。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hostName" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Net.SocketPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>初始化 <see cref="T:System.Net.SocketPermission" /> 類別的新執行個體，允許不受限制存取 <see cref="T:System.Net.Sockets.Socket" /> 或不允許存取 <see cref="T:System.Net.Sockets.Socket" />。</summary>
      <param name="state">其中一個 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</param>
    </member>
    <member name="P:System.Net.SocketPermission.AcceptList">
      <summary>取得 <see cref="T:System.Net.EndpointPermission" /> 執行個體的清單，這些執行個體辨認可在這個使用權限執行個體下接受的端點。</summary>
      <returns>執行個體，這個執行個體會實作包含 <see cref="T:System.Collections.IEnumerator" /> 執行個體的 <see cref="T:System.Net.EndpointPermission" /> 介面。</returns>
    </member>
    <member name="M:System.Net.SocketPermission.AddPermission(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
      <summary>將使用權限加入至傳輸位址的使用權限集。</summary>
      <param name="access">其中一個 <see cref="T:System.Net.NetworkAccess" /> 值。</param>
      <param name="transport">其中一個 <see cref="T:System.Net.TransportType" /> 值。</param>
      <param name="hostName">傳輸位址的主機名稱。</param>
      <param name="portNumber">傳輸位址的通訊埠編號。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hostName" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="F:System.Net.SocketPermission.AllPorts">
      <summary>定義表示所有通訊埠的常數。</summary>
    </member>
    <member name="P:System.Net.SocketPermission.ConnectList">
      <summary>取得 <see cref="T:System.Net.EndpointPermission" /> 執行個體的清單，這些執行個體辨認可在這個使用權限執行個體下連接至的端點。</summary>
      <returns>執行個體，這個執行個體會實作包含 <see cref="T:System.Collections.IEnumerator" /> 執行個體的 <see cref="T:System.Net.EndpointPermission" /> 介面。</returns>
    </member>
    <member name="M:System.Net.SocketPermission.Copy">
      <summary>建立 <see cref="T:System.Net.SocketPermission" /> 執行個體的複本。</summary>
      <returns>
        <see cref="T:System.Net.SocketPermission" /> 類別的新執行個體，是目前執行個體的複本。</returns>
    </member>
    <member name="M:System.Net.SocketPermission.FromXml(System.Security.SecurityElement)">
      <summary>為 XML 編碼方式重建 <see cref="T:System.Net.SocketPermission" /> 執行個體。</summary>
      <param name="securityElement">XML 編碼方式，用以重新建立 <see cref="T:System.Net.SocketPermission" /> 執行個體。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> 不是這個型別的使用權限項目。</exception>
    </member>
    <member name="M:System.Net.SocketPermission.Intersect(System.Security.IPermission)">
      <summary>傳回兩個 <see cref="T:System.Net.SocketPermission" /> 執行個體間的邏輯交集。</summary>
      <param name="target">
        <see cref="T:System.Net.SocketPermission" /> 執行個體，用來與目前執行個體交集。</param>
      <returns>
        <see cref="T:System.Net.SocketPermission" /> 執行個體，表示兩個 <see cref="T:System.Net.SocketPermission" /> 執行個體的交集。 如果交集為空的，方法會傳回 <see langword="null" />。 如果 <paramref name="target" /> 參數為 Null 參考，則方法會傳回 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 參數不是 <see cref="T:System.Net.SocketPermission" />。</exception>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Net.DnsPermission" /> 沒有授與方法呼叫端。</exception>
    </member>
    <member name="M:System.Net.SocketPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>判斷目前使用權限是否為指定之使用權限的子集。</summary>
      <param name="target">要測試其子集關聯性的 <see cref="T:System.Net.SocketPermission" />。</param>
      <returns>在 <paramref name="target" /> 是 <see langword="null" /> 的情況下，如果目前執行個體沒有定義使用權限，則這個方法會傳回 <see langword="true" />，否則傳回 <see langword="false" />。 在 <paramref name="target" /> 不是 <see langword="null" /> 的情況下，如果目前執行個體定義了 <paramref name="target" /> 使用權限的子集，則這個方法會傳回 <see langword="true" />，否則傳回 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 不是 <see cref="T:System.Net.Sockets.SocketException" />。</exception>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Net.DnsPermission" /> 沒有授與方法呼叫端。</exception>
    </member>
    <member name="M:System.Net.SocketPermission.IsUnrestricted">
      <summary>檢查物件的整體使用權限狀態。</summary>
      <returns>如果使用 <see cref="T:System.Net.SocketPermission" /> 的 <see langword="true" /> 值建立 <see cref="T:System.Security.Permissions.PermissionState" /> 執行個體，則為 <see langword="Unrestricted" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.SocketPermission.ToXml">
      <summary>建立 <see cref="T:System.Net.SocketPermission" /> 執行個體和其目前狀態的 XML 編碼方式。</summary>
      <returns>
        <see cref="T:System.Security.SecurityElement" /> 執行個體，含有 <see cref="T:System.Net.SocketPermission" /> 執行個體的 XML 編碼表示，包含狀態資訊。</returns>
    </member>
    <member name="M:System.Net.SocketPermission.Union(System.Security.IPermission)">
      <summary>傳回兩個 <see cref="T:System.Net.SocketPermission" /> 執行個體間的邏輯聯集。</summary>
      <param name="target">要與目前執行個體結合的 <see cref="T:System.Net.SocketPermission" /> 執行個體。</param>
      <returns>
        <see cref="T:System.Net.SocketPermission" /> 執行個體，表示兩個 <see cref="T:System.Net.SocketPermission" /> 執行個體的聯集。 如果 <paramref name="target" /> 參數是 <see langword="null" />，則會傳回目前執行個體的複本。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 不是 <see cref="T:System.Net.SocketPermission" />。</exception>
    </member>
    <member name="T:System.Net.SocketPermissionAttribute">
      <summary>指定安全性動作以控制 <see cref="T:System.Net.Sockets.Socket" /> 連接。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Net.SocketPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>使用指定的 <see cref="T:System.Security.Permissions.SecurityAction" /> 值，初始化 <see cref="T:System.Net.SocketPermissionAttribute" /> 類別的新執行個體。</summary>
      <param name="action">其中一個 <see cref="T:System.Security.Permissions.SecurityAction" /> 值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="action" /> 不是有效的 <see cref="T:System.Security.Permissions.SecurityAction" /> 值。</exception>
    </member>
    <member name="P:System.Net.SocketPermissionAttribute.Access">
      <summary>取得或設定由這個 <see cref="T:System.Net.SocketPermissionAttribute" /> 允許的網路存取方法。</summary>
      <returns>字串，包含由這個 <see cref="T:System.Net.SocketPermissionAttribute" /> 的執行個體允許的網路存取方法。 有效的值包括「Accept」和「Connect」。</returns>
      <exception cref="T:System.ArgumentException">當您嘗試設定此值時，<see cref="P:System.Net.SocketPermissionAttribute.Access" /> 屬性不是 <see langword="null" />。 若要指定一個以上的存取方法，請使用額外的屬性宣告陳述式 (Declaration Statement)。</exception>
    </member>
    <member name="M:System.Net.SocketPermissionAttribute.CreatePermission">
      <summary>建立並傳回 <see cref="T:System.Net.SocketPermission" /> 類別的新執行個體。</summary>
      <returns>對應至安全性宣告之 <see cref="T:System.Net.SocketPermission" /> 類別的執行個體。</returns>
      <exception cref="T:System.ArgumentException">目前執行個體的 <see cref="P:System.Net.SocketPermissionAttribute.Access" />、<see cref="P:System.Net.SocketPermissionAttribute.Host" />、<see cref="P:System.Net.SocketPermissionAttribute.Transport" /> 和 <see cref="P:System.Net.SocketPermissionAttribute.Port" /> 屬性之中的一個或多個是 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Net.SocketPermissionAttribute.Host">
      <summary>取得或設定由這個 <see cref="T:System.Net.SocketPermissionAttribute" /> 指定的 DNS 主機名稱或 IP 位址。</summary>
      <returns>字串，包含與這個 <see cref="T:System.Net.SocketPermissionAttribute" /> 的執行個體關聯的 DNS 主機名稱或 IP 位址。</returns>
      <exception cref="T:System.ArgumentException">當您嘗試設定此值時，<see cref="P:System.Net.SocketPermissionAttribute.Host" /> 不是 <see langword="null" />。 若要指定一個以上的主機，請使用額外的屬性宣告陳述式。</exception>
    </member>
    <member name="P:System.Net.SocketPermissionAttribute.Port">
      <summary>取得或設定與這個 <see cref="T:System.Net.SocketPermissionAttribute" /> 關聯的通訊埠編號。</summary>
      <returns>字串，包含與這個 <see cref="T:System.Net.SocketPermissionAttribute" /> 的執行個體關聯的通訊埠編號。</returns>
      <exception cref="T:System.ArgumentException">當嘗試設定此值時，<see cref="P:System.Net.SocketPermissionAttribute.Port" /> 屬性是 <see langword="null" />。 若要指定一個以上的連接埠，請使用額外的屬性宣告陳述式。</exception>
    </member>
    <member name="P:System.Net.SocketPermissionAttribute.Transport">
      <summary>取得或設定由這個 <see cref="T:System.Net.TransportType" /> 指定的 <see cref="T:System.Net.SocketPermissionAttribute" />。</summary>
      <returns>字串，包含與這個 <see cref="T:System.Net.TransportType" /> 關聯的 <see cref="T:System.Net.SocketPermissionAttribute" />。</returns>
      <exception cref="T:System.ArgumentException">當您嘗試設定此值時，<see cref="P:System.Net.SocketPermissionAttribute.Transport" /> 不是 <see langword="null" />。 若要指定一個以上的傳輸類型，請使用額外的屬性宣告陳述式。</exception>
    </member>
    <member name="T:System.Net.TransportType">
      <summary>定義 <see cref="T:System.Net.SocketPermission" /> 和 <see cref="T:System.Net.Sockets.Socket" /> 類別的傳輸類型。</summary>
    </member>
    <member name="F:System.Net.TransportType.All">
      <summary>所有的傳輸類型。</summary>
    </member>
    <member name="F:System.Net.TransportType.Connectionless">
      <summary>傳輸類型是不連線的，例如 UDP。 指定這個值與指定 <see cref="F:System.Net.TransportType.Udp" /> 具有相同的效果。</summary>
    </member>
    <member name="F:System.Net.TransportType.ConnectionOriented">
      <summary>傳輸是連接導向的，例如 TCP。 指定這個值與指定 <see cref="F:System.Net.TransportType.Tcp" /> 具有相同的效果。</summary>
    </member>
    <member name="F:System.Net.TransportType.Tcp">
      <summary>TCP 傳輸。</summary>
    </member>
    <member name="F:System.Net.TransportType.Udp">
      <summary>UDP 傳輸。</summary>
    </member>
    <member name="T:System.Net.WebPermission">
      <summary>控制對 HTTP 網際網路資源存取的權限。</summary>
    </member>
    <member name="M:System.Net.WebPermission.#ctor">
      <summary>建立 <see cref="T:System.Net.WebPermission" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)">
      <summary>使用指定 URI 的指定存取權限，建立 <see cref="T:System.Net.WebPermission" /> 類別的新執行個體。</summary>
      <param name="access">NetworkAccess 值，表示對指定的 URI 所授與的存取權限類型。 <see cref="F:System.Net.NetworkAccess.Accept" />，表示允許應用程式接受從網際網路至本機資源的連接。 <see cref="F:System.Net.NetworkAccess.Connect" />指示允許將應用程式連接到特定的網際網路資源。</param>
      <param name="uriString">要授與存取權限的 URI 字串。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriString" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)">
      <summary>以指定 URI 規則運算式的指定存取權限，初始化 <see cref="T:System.Net.WebPermission" /> 類別的新執行個體。</summary>
      <param name="access">
        <see cref="T:System.Net.NetworkAccess" /> 值，表示對指定的 URI 所授與的存取權限類型。 <see cref="F:System.Net.NetworkAccess.Accept" />，表示允許應用程式接受從網際網路至本機資源的連接。 <see cref="F:System.Net.NetworkAccess.Connect" />指示允許將應用程式連接到特定的網際網路資源。</param>
      <param name="uriRegex">規則運算式，說明要授與存取權限的 URI。</param>
    </member>
    <member name="M:System.Net.WebPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>初始化 <see cref="T:System.Net.WebPermission" /> 類別的新執行個體，這個執行個體可決定是否通過所有要求。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 值。</param>
    </member>
    <member name="P:System.Net.WebPermission.AcceptList">
      <summary>這個屬性會傳回由這個 <see cref="T:System.Net.WebPermission" /> 保留的單一接受使用權限其列舉型別。 傳回的列舉型別中所包含的可能物件型別為 <see cref="T:System.String" /> 和 <see cref="T:System.Text.RegularExpressions.Regex" />。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> 介面，包含接受使用權限。</returns>
    </member>
    <member name="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)">
      <summary>以指定的存取權限將指定的 URI 字串加入至目前 <see cref="T:System.Net.WebPermission" />。</summary>
      <param name="access">
        <see cref="T:System.Net.NetworkAccess" />，指定要授與 URI 的存取權限。</param>
      <param name="uriString">字串，說明要授與存取權限的 URI。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriString" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)">
      <summary>以指定的存取權限將指定的 URI 加入至目前 <see cref="T:System.Net.WebPermission" />。</summary>
      <param name="access">NetworkAccess，指定要授與 URI 的存取權限。</param>
      <param name="uriRegex">規則運算式，說明要授與存取權限的 URI 集合。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriRegex" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Net.WebPermission.ConnectList">
      <summary>這個屬性會傳回由這個 <see cref="T:System.Net.WebPermission" /> 保留的單一接受使用權限其列舉型別。 傳回的列舉型別中所包含的可能物件型別為 <see cref="T:System.String" /> 和 <see cref="T:System.Text.RegularExpressions.Regex" />。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> 介面，包含連接使用權限。</returns>
    </member>
    <member name="M:System.Net.WebPermission.Copy">
      <summary>建立 <see cref="T:System.Net.WebPermission" /> 的複本。</summary>
      <returns>
        <see cref="T:System.Net.WebPermission" /> 類別的新執行個體，具有和原始類別相同的值。</returns>
    </member>
    <member name="M:System.Net.WebPermission.FromXml(System.Security.SecurityElement)">
      <summary>從 XML 編碼方式重建 <see cref="T:System.Net.WebPermission" />。</summary>
      <param name="securityElement">要重建 <see cref="T:System.Net.WebPermission" /> 的 XML 編碼方式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> 參數為 <see langword="null." />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> 不是這個型別的使用權限項目。</exception>
    </member>
    <member name="M:System.Net.WebPermission.Intersect(System.Security.IPermission)">
      <summary>傳回兩個 <see cref="T:System.Net.WebPermission" /> 執行個體的邏輯交集。</summary>
      <param name="target">要與目前執行個體比較的 <see cref="T:System.Net.WebPermission" />。</param>
      <returns>新 <see cref="T:System.Net.WebPermission" />，表示目前執行個體和 <paramref name="target" /> 參數的交集。 如果交集為空的，方法會傳回 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 不是 <see langword="null" /> 或屬於 <see cref="T:System.Net.WebPermission" /> 型別</exception>
    </member>
    <member name="M:System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>判斷目前 <see cref="T:System.Net.WebPermission" /> 是否為指定物件的子集。</summary>
      <param name="target">要與目前 <see cref="T:System.Net.WebPermission" /> 比較的 <see cref="T:System.Net.WebPermission" />。</param>
      <returns>如果目前的執行個體是 <paramref name="target" /> 參數的子集，則為 <see langword="true" />，否則為 <see langword="false" />。 如果目標為 <see langword="null" />，則方法會傳回 <see langword="true" />，表示目前為空的不受限制的使用權限，否則傳回 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">目標參數不是 <see cref="T:System.Net.WebPermission" /> 的執行個體。</exception>
      <exception cref="T:System.NotSupportedException">目前執行個體含有 Regex 編碼權限，且在目標執行個體中找不到完全相同的權限。</exception>
    </member>
    <member name="M:System.Net.WebPermission.IsUnrestricted">
      <summary>檢查 <see cref="T:System.Net.WebPermission" /> 的整體使用權限狀態。</summary>
      <returns>如果 <see cref="T:System.Net.WebPermission" /> 是使用 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /><see cref="T:System.Security.Permissions.PermissionState" /> 建立的，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.WebPermission.ToXml">
      <summary>建立 <see cref="T:System.Net.WebPermission" /> 和其目前狀態的 XML 編碼方式。</summary>
      <returns>
        <see cref="T:System.Security.SecurityElement" />，包含 <see cref="T:System.Net.WebPermission" /> 的 XML 編碼表示，包含狀態資訊。</returns>
    </member>
    <member name="M:System.Net.WebPermission.Union(System.Security.IPermission)">
      <summary>傳回 <see cref="T:System.Net.WebPermission" /> 類別的兩個執行個體間的邏輯等位。</summary>
      <param name="target">
        <see cref="T:System.Net.WebPermission" />，要與目前的 <see cref="T:System.Net.WebPermission" /> 比較。</param>
      <returns>
        <see cref="T:System.Net.WebPermission" />，表示目前執行個體和 <paramref name="target" /> 參數間的聯集。 如果 <see langword="WebPermission" /> 是 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />，方法將傳回屬於 <see cref="T:System.Net.WebPermission" /> 的 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。 如果目標是 <see langword="null" />，則方法會傳回目前 <see cref="T:System.Net.WebPermission" /> 的複本。</returns>
      <exception cref="T:System.ArgumentException">目標不是 <see langword="null" /> 或屬於 <see cref="T:System.Net.WebPermission" /> 型別。</exception>
    </member>
    <member name="T:System.Net.WebPermissionAttribute">
      <summary>指定存取網際網路資源的使用權限。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Net.WebPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>以指定可以在這個類別上執行的安全性動作的值，初始化 <see cref="T:System.Net.WebPermissionAttribute" /> 類別的新執行個體。</summary>
      <param name="action">其中一個 <see cref="T:System.Security.Permissions.SecurityAction" /> 值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="action" /> 不是有效的 <see cref="T:System.Security.Permissions.SecurityAction" /> 值。</exception>
    </member>
    <member name="P:System.Net.WebPermissionAttribute.Accept">
      <summary>取得或設定目前 <see cref="T:System.Net.WebPermissionAttribute" /> 可接受的 URI 字串。</summary>
      <returns>字串，包含目前 <see cref="T:System.Net.WebPermissionAttribute" /> 可接受的 URI。</returns>
      <exception cref="T:System.ArgumentException">當您嘗試設定此值時，<see cref="P:System.Net.WebPermissionAttribute.Accept" /> 不是 <see langword="null" />。 如果您想指定一個以上的可接受 URI，請使用額外的屬性宣告陳述式。</exception>
    </member>
    <member name="P:System.Net.WebPermissionAttribute.AcceptPattern">
      <summary>取得或設定目前 <see cref="T:System.Net.WebPermissionAttribute" /> 可接受的 URI 其規則運算式模式描述。</summary>
      <returns>字串，包含目前 <see cref="T:System.Net.WebPermissionAttribute" /> 可接受的 URI 其規則運算式模式描述。 依據 <see cref="T:System.Text.RegularExpressions.Regex" /> 建構函式字串的編碼規則，必須逸出這個字串。</returns>
      <exception cref="T:System.ArgumentException">當您嘗試設定此值時，<see cref="P:System.Net.WebPermissionAttribute.AcceptPattern" /> 不是 <see langword="null" />。 如果您想指定一個以上的可接受 URI，請使用額外的屬性宣告陳述式。</exception>
    </member>
    <member name="P:System.Net.WebPermissionAttribute.Connect">
      <summary>取得或設定目前 <see cref="T:System.Net.WebPermissionAttribute" /> 所使用的 URI 連接字串。</summary>
      <returns>字串，包含由目前 <see cref="T:System.Net.WebPermissionAttribute" /> 控制的 URI 連接。</returns>
      <exception cref="T:System.ArgumentException">當您嘗試設定此值時，<see cref="P:System.Net.WebPermissionAttribute.Connect" /> 不是 <see langword="null" />。 如果您想指定一個以上的連接 URI，請使用額外的屬性宣告陳述式。</exception>
    </member>
    <member name="P:System.Net.WebPermissionAttribute.ConnectPattern">
      <summary>取得或設定由目前 <see cref="T:System.Net.WebPermissionAttribute" /> 控制的 URI 連接其規則運算式模式描述。</summary>
      <returns>字串，包含由這個 <see cref="T:System.Net.WebPermissionAttribute" /> 控制的 URI 連接其規則運算式模式描述。</returns>
      <exception cref="T:System.ArgumentException">當您嘗試設定此值時，<see cref="P:System.Net.WebPermissionAttribute.ConnectPattern" /> 不是 <see langword="null" />。 如果您想指定一個以上的連接 URI，請使用額外的屬性宣告陳述式。</exception>
    </member>
    <member name="M:System.Net.WebPermissionAttribute.CreatePermission">
      <summary>建立並傳回 <see cref="T:System.Net.WebPermission" /> 類別的新執行個體。</summary>
      <returns>對應安全性宣告的 <see cref="T:System.Net.WebPermission" />。</returns>
    </member>
    <member name="T:System.Security.CodeAccessPermission">
      <summary>定義所有程式碼存取權限的基礎結構。</summary>
    </member>
    <member name="M:System.Security.CodeAccessPermission.#ctor">
      <summary>初始化 <see cref="T:System.Security.CodeAccessPermission" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Security.CodeAccessPermission.Assert">
      <summary>宣告即使堆疊中較高層的呼叫端未獲得資源存取權限，呼叫程式碼仍可透過呼叫這個方法的程式碼要求權限，來存取受保護的資源。 使用 <see cref="M:System.Security.CodeAccessPermission.Assert" /> 可能會造成安全性問題。</summary>
      <exception cref="T:System.Security.SecurityException">呼叫的程式碼沒有 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Assertion" />。  
-或- 
目前的框架已有作用中的 <see cref="M:System.Security.CodeAccessPermission.Assert" />。</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.Copy">
      <summary>由衍生類別實作時，建立並傳回目前權限物件的相同複本。</summary>
      <returns>目前權限物件的複本。</returns>
    </member>
    <member name="M:System.Security.CodeAccessPermission.Demand">
      <summary>如果呼叫堆疊中所有較高層的呼叫端尚未授與目前執行個體 (Instance) 所指定的使用權限，請於執行階段強制執行 <see cref="T:System.Security.SecurityException" />。</summary>
      <exception cref="T:System.Security.SecurityException">呼叫堆疊中較高層的呼叫端未授與目前執行個體所指定的使用權限。  
-或- 
呼叫堆疊中較高層的呼叫端已經呼叫目前使用權限物件上的 <see cref="M:System.Security.CodeAccessPermission.Deny" />。</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.Deny">
      <summary>防止呼叫堆疊中較高層的呼叫端，使用呼叫這個方法的程式碼來存取目前執行個體所指定的資源。</summary>
      <exception cref="T:System.Security.SecurityException">目前的框架已有作用中的 <see cref="M:System.Security.CodeAccessPermission.Deny" />。</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.Equals(System.Object)">
      <summary>判斷指定的 <see cref="T:System.Security.CodeAccessPermission" /> 物件是否等於目前的 <see cref="T:System.Security.CodeAccessPermission" />。</summary>
      <param name="obj">要與目前 <see cref="T:System.Security.CodeAccessPermission" /> 比較的 <see cref="T:System.Security.CodeAccessPermission" /> 物件。</param>
      <returns>如果指定的 <see cref="T:System.Security.CodeAccessPermission" /> 物件等於目前的 <see cref="T:System.Security.CodeAccessPermission" /> 物件，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.CodeAccessPermission.FromXml(System.Security.SecurityElement)">
      <summary>在衍生類別中覆寫時，使用 XML 編碼方式重建具有指定狀態的安全性物件。</summary>
      <param name="elem">用來重新建構安全性物件的 XML 編碼方式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elem" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elem" /> 參數不包含與目前執行個體相同型別的執行個體的 XML 編碼方式。  
-或- 
不支援 <paramref name="elem" /> 參數的版本號碼。</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.GetHashCode">
      <summary>取得 <see cref="T:System.Security.CodeAccessPermission" /> 物件的雜湊碼，其適合用於雜湊表這類的雜湊演算法和資料結構。</summary>
      <returns>目前 <see cref="T:System.Security.CodeAccessPermission" /> 物件的雜湊碼。</returns>
    </member>
    <member name="M:System.Security.CodeAccessPermission.Intersect(System.Security.IPermission)">
      <summary>當由衍生類別實作時，建立並傳回目前使用權限和指定使用權限交集的使用權限。</summary>
      <param name="target">要與目前權限產生交集的權限。 必須與目前權限屬於相同的類型。</param>
      <returns>新使用權限，表示目前使用權限和指定使用權限的交集。 如果交集是空的，這個新權限就是 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 參數不是 <see langword="null" />，並且不是與目前使用權限相同類別的執行個體。</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>當由衍生類別實作時，決定目前使用權限是否為指定使用權限的子集。</summary>
      <param name="target">要測試子集關聯性的權限。 這個權限必須與目前權限屬於相同的類型。</param>
      <returns>如果目前權限是指定權限的子集，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 參數不是 <see langword="null" />，而且與目前權限屬於不同的類型。</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.PermitOnly">
      <summary>防止呼叫堆疊中較高層的呼叫端，使用呼叫這個方法的程式碼來存取除了目前執行個體所指定資源之外的所有資源。</summary>
      <exception cref="T:System.Security.SecurityException">目前的框架已有作用中的 <see cref="M:System.Security.CodeAccessPermission.PermitOnly" />。</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.RevertAll">
      <summary>造成目前框架先前的所有覆寫都被移除且不再發生作用</summary>
      <exception cref="T:System.InvalidOperationException">沒有目前框架先前的 <see cref="M:System.Security.CodeAccessPermission.Assert" />、<see cref="M:System.Security.CodeAccessPermission.Deny" /> 或 <see cref="M:System.Security.CodeAccessPermission.PermitOnly" />。</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.RevertAssert">
      <summary>造成目前框架任何先前的 <see cref="M:System.Security.CodeAccessPermission.Assert" /> 將移除並且不再有效。</summary>
      <exception cref="T:System.InvalidOperationException">目前畫面格沒有先前的 <see cref="M:System.Security.CodeAccessPermission.Assert" />。</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.RevertDeny">
      <summary>造成目前框架任何先前的 <see cref="M:System.Security.CodeAccessPermission.Deny" /> 將移除並且不再有效。</summary>
      <exception cref="T:System.InvalidOperationException">目前畫面格沒有先前的 <see cref="M:System.Security.CodeAccessPermission.Deny" />。</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.RevertPermitOnly">
      <summary>造成目前框架任何先前的 <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> 將移除並且不再有效。</summary>
      <exception cref="T:System.InvalidOperationException">目前畫面格沒有先前的 <see cref="M:System.Security.CodeAccessPermission.PermitOnly" />。</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.ToString">
      <summary>建立並傳回目前使用權限物件的字串表示。</summary>
      <returns>目前使用權限物件的字串表示。</returns>
    </member>
    <member name="M:System.Security.CodeAccessPermission.ToXml">
      <summary>在衍生類別中覆寫時，建立安全性物件及其目前狀態的 XML 編碼。</summary>
      <returns>安全物件的 XML 編碼方式，包含所有狀態資訊。</returns>
    </member>
    <member name="M:System.Security.CodeAccessPermission.Union(System.Security.IPermission)">
      <summary>在衍生類別中覆寫時，建立目前權限與指定權限聯集的權限。</summary>
      <param name="other">要與目前權限結合的權限， 必須與目前權限屬於相同的類型。</param>
      <returns>代表目前權限與指定權限聯集的新權限。</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="other" /> 參數不是 <see langword="null" />。 當傳遞 <see langword="null" /> 這個方法只在這個層級受到支援。</exception>
    </member>
    <member name="T:System.Security.HostProtectionException">
      <summary>在偵測到拒絕的主機資源時所擲回的例外狀況。</summary>
    </member>
    <member name="M:System.Security.HostProtectionException.#ctor">
      <summary>使用預設值，初始化 <see cref="T:System.Security.HostProtectionException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Security.HostProtectionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>使用提供的序列化資訊和資料流內容，初始化 <see cref="T:System.Security.HostProtectionException" /> 類別的新執行個體。</summary>
      <param name="info">存放序列物件資料的物件。</param>
      <param name="context">關於來源或目的端的內容資訊。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.HostProtectionException.#ctor(System.String)">
      <summary>使用指定的錯誤訊息，初始化 <see cref="T:System.Security.HostProtectionException" /> 類別的新執行個體。</summary>
      <param name="message">描述錯誤的訊息。</param>
    </member>
    <member name="M:System.Security.HostProtectionException.#ctor(System.String,System.Exception)">
      <summary>使用指定的錯誤訊息以及造成此例外狀況的內部例外狀況的參考，初始化 <see cref="T:System.Security.HostProtectionException" /> 類別的新執行個體。</summary>
      <param name="message">解釋例外狀況原因的錯誤訊息。</param>
      <param name="e">做為目前例外狀況發生原因的例外狀況。 如果 <c>innerException</c> 參數不是 <see langword="null" />，則目前的例外狀況會在處理內部例外的 <see langword="catch" /> 區塊中引發。</param>
    </member>
    <member name="M:System.Security.HostProtectionException.#ctor(System.String,System.Security.Permissions.HostProtectionResource,System.Security.Permissions.HostProtectionResource)">
      <summary>使用指定的錯誤訊息、保護的主機資源和導致擲回例外狀況的主機資源，初始化 <see cref="T:System.Security.HostProtectionException" /> 類別的新執行個體。</summary>
      <param name="message">解釋例外狀況原因的錯誤訊息。</param>
      <param name="protectedResources">列舉值的位元組合，指定部分信任程式碼無法存取的主機資源。</param>
      <param name="demandedResources">列舉值的位元組合，指定需要的主機資源。</param>
    </member>
    <member name="P:System.Security.HostProtectionException.DemandedResources">
      <summary>取得或設定導致擲回例外狀況的要求主機保護資源。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.HostProtectionResource" /> 值的位元組合，識別導致擲回例外狀況的保護資源。 預設為 <see cref="F:System.Security.Permissions.HostProtectionResource.None" />。</returns>
    </member>
    <member name="P:System.Security.HostProtectionException.ProtectedResources">
      <summary>取得或設定無法對部分信任程式碼進行存取的主機保護資源。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.HostProtectionResource" /> 值的位元組合，識別無法存取的主機保護分類。 預設為 <see cref="F:System.Security.Permissions.HostProtectionResource.None" />。</returns>
    </member>
    <member name="M:System.Security.HostProtectionException.ToString">
      <summary>傳回目前主機保護例外狀況的字串代表。</summary>
      <returns>目前 <see cref="T:System.Security.HostProtectionException" /> 物件的字串表示。</returns>
    </member>
    <member name="T:System.Security.HostSecurityManager">
      <summary>允許控制及自訂應用程式定義域的安全性行為。</summary>
    </member>
    <member name="M:System.Security.HostSecurityManager.#ctor">
      <summary>初始化 <see cref="T:System.Security.HostSecurityManager" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
      <summary>決定是否應該執行應用程式。</summary>
      <param name="applicationEvidence">要啟動之應用程式的辨識項。</param>
      <param name="activatorEvidence">或者，啟動中應用程式定義域的辨識項。</param>
      <param name="context">信任內容。</param>
      <returns>包含應用程式相關信任資訊的物件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="applicationEvidence" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">在應用程式辨識項中找不到 <see cref="T:System.Runtime.Hosting.ActivationArguments" /> 物件。  
-或- 
啟動引數的 <see cref="P:System.Runtime.Hosting.ActivationArguments.ActivationContext" /> 屬性是 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Security.Policy.ApplicationTrust" /> 授權集不包含 <see cref="T:System.ActivationContext" /> 所指定的最小要求集。</exception>
    </member>
    <member name="P:System.Security.HostSecurityManager.DomainPolicy">
      <summary>在衍生類別中覆寫時，取得目前應用程式定義域的安全性原則。</summary>
      <returns>目前應用程式定義域的安全性原則。 預設為 <see langword="null" />。</returns>
      <exception cref="T:System.NotSupportedException">此方法使用在 .NET Framework 4 中已過時的程式碼存取安全性 (CAS) 原則。 若要啟用 CAS 原則對舊版 .NET Framework 的相容性，請使用 &lt;legacyCasPolicy&gt; 項目。</exception>
    </member>
    <member name="P:System.Security.HostSecurityManager.Flags">
      <summary>取得旗標，表示主機的重要安全性原則元件。</summary>
      <returns>其中一個列舉值，指定安全性原則元件。 預設為 <see cref="F:System.Security.HostSecurityManagerOptions.AllFlags" />。</returns>
    </member>
    <member name="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
      <summary>針對應用程式定義域要求特定辨識項型別。</summary>
      <param name="evidenceType">辨識項型別。</param>
      <returns>要求的應用程式定義域辨識項。</returns>
    </member>
    <member name="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
      <summary>針對組件要求特定辨識項型別。</summary>
      <param name="evidenceType">辨識項型別。</param>
      <param name="assembly">目標組件。</param>
      <returns>要求的組件辨識項。</returns>
    </member>
    <member name="M:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes">
      <summary>判斷主機可為應用程式定義域提供的辨識項型別 (如有要求的話)。</summary>
      <returns>辨識項型別的陣列。</returns>
    </member>
    <member name="M:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)">
      <summary>判斷主機可為組件提供的辨識項型別 (如有要求的話)。</summary>
      <param name="assembly">目標組件。</param>
      <returns>辨識項型別的陣列。</returns>
    </member>
    <member name="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)">
      <summary>提供要載入之組件的應用程式定義域辨識項。</summary>
      <param name="inputEvidence">要加入至 <see cref="T:System.AppDomain" /> 辨識項的其他辨識項。</param>
      <returns>要用於 <see cref="T:System.AppDomain" /> 的辨識項。</returns>
    </member>
    <member name="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)">
      <summary>提供要載入之組件的組件辨識項。</summary>
      <param name="loadedAssembly">載入的組件。</param>
      <param name="inputEvidence">要加入至組件辨識項的其他辨識項。</param>
      <returns>要用於組件的辨識項。</returns>
    </member>
    <member name="M:System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)">
      <summary>根據指定的辨識項，判斷授與程式碼的權限。</summary>
      <param name="evidence">用來評估原則的辨識項集合。</param>
      <returns>可由安全性系統授與的使用權限集合。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="T:System.Security.HostSecurityManagerOptions">
      <summary>指定主機安全性管理員所使用的安全性原則元件。</summary>
    </member>
    <member name="F:System.Security.HostSecurityManagerOptions.AllFlags">
      <summary>使用所有安全性原則元件。</summary>
    </member>
    <member name="F:System.Security.HostSecurityManagerOptions.HostAppDomainEvidence">
      <summary>使用應用程式定義域辨識項。</summary>
    </member>
    <member name="F:System.Security.HostSecurityManagerOptions.HostAssemblyEvidence">
      <summary>使用組件辨識項。</summary>
    </member>
    <member name="F:System.Security.HostSecurityManagerOptions.HostDetermineApplicationTrust">
      <summary>把對 <see cref="M:System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)" /> 方法的呼叫先轉送給 <see cref="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)" /> 方法。</summary>
    </member>
    <member name="F:System.Security.HostSecurityManagerOptions.HostPolicyLevel">
      <summary>使用 <see cref="P:System.Security.HostSecurityManager.DomainPolicy" /> 屬性中指定的原則層級。</summary>
    </member>
    <member name="F:System.Security.HostSecurityManagerOptions.HostResolvePolicy">
      <summary>使用 <see cref="M:System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)" /> 方法解析應用程式辨識項。</summary>
    </member>
    <member name="F:System.Security.HostSecurityManagerOptions.None">
      <summary>不使用任何安全性原則元件。</summary>
    </member>
    <member name="T:System.Security.IEvidenceFactory">
      <summary>取得物件的 <see cref="T:System.Security.Policy.Evidence" />。</summary>
    </member>
    <member name="P:System.Security.IEvidenceFactory.Evidence">
      <summary>取得驗證目前物件識別 (Identity) 的 <see cref="T:System.Security.Policy.Evidence" />。</summary>
      <returns>目前物件識別的 <see cref="T:System.Security.Policy.Evidence" />。</returns>
    </member>
    <member name="T:System.Security.ISecurityPolicyEncodable">
      <summary>支援將使用權限物件狀態與 XML 項目表示相互轉換的方法。</summary>
    </member>
    <member name="M:System.Security.ISecurityPolicyEncodable.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>透過 XML 編碼，重新建構具有指定狀態的安全性物件。</summary>
      <param name="e">用來重新建構安全性物件的 XML 編碼方式。</param>
      <param name="level">解析具名使用權限集合參考的原則層級內容。</param>
    </member>
    <member name="M:System.Security.ISecurityPolicyEncodable.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>建立安全物件及其目前狀態的 XML 編碼方式。</summary>
      <param name="level">解析具名使用權限集合參考的原則層級內容。</param>
      <returns>原則物件 XML 表示的根項目 (Root Element)。</returns>
    </member>
    <member name="T:System.Security.NamedPermissionSet">
      <summary>定義具有與其相關的名稱和說明的使用權限集合。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.NamedPermissionSet.#ctor(System.Security.NamedPermissionSet)">
      <summary>從其他具名使用權限集合中初始化 <see cref="T:System.Security.NamedPermissionSet" /> 類別的新執行個體。</summary>
      <param name="permSet">從其中建立新執行個體的具名使用權限集合。</param>
    </member>
    <member name="M:System.Security.NamedPermissionSet.#ctor(System.String)">
      <summary>使用指定的名稱來初始化 <see cref="T:System.Security.NamedPermissionSet" /> 類別的全新執行個體。</summary>
      <param name="name">新具名使用權限集合的名稱。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 參數為 <see langword="null" /> 或空字串 ("")。</exception>
    </member>
    <member name="M:System.Security.NamedPermissionSet.#ctor(System.String,System.Security.Permissions.PermissionState)">
      <summary>使用不受限制或完全限制狀態中的指定名稱來初始化 <see cref="T:System.Security.NamedPermissionSet" /> 類別的新執行個體。</summary>
      <param name="name">新具名使用權限集合的名稱。</param>
      <param name="state">其中一個 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 參數為 <see langword="null" /> 或空字串 ("")。</exception>
    </member>
    <member name="M:System.Security.NamedPermissionSet.#ctor(System.String,System.Security.PermissionSet)">
      <summary>使用來自使用權限集合的指定名稱來初始化 <see cref="T:System.Security.NamedPermissionSet" /> 類別的新執行個體。</summary>
      <param name="name">具名使用權限集合的名稱。</param>
      <param name="permSet">從其中取得新具名使用權限集合值的使用權限集合。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 參數為 <see langword="null" /> 或空字串 ("")。</exception>
    </member>
    <member name="M:System.Security.NamedPermissionSet.Copy">
      <summary>從具名使用權限集合中建立使用權限集合複本。</summary>
      <returns>使用權限集合是具名使用權限集合中的使用權限複本。</returns>
    </member>
    <member name="M:System.Security.NamedPermissionSet.Copy(System.String)">
      <summary>使用不同的名稱但相同的使用權限建立具名使用權限集合的複本。</summary>
      <param name="name">新具名使用權限集合的名稱。</param>
      <returns>具有新名稱的具名使用權限集合複本。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 參數為 <see langword="null" /> 或空字串 ("")。</exception>
    </member>
    <member name="P:System.Security.NamedPermissionSet.Description">
      <summary>取得或設定目前具名使用權限集合的文字描述。</summary>
      <returns>具名使用權限集合的文字描述。</returns>
    </member>
    <member name="M:System.Security.NamedPermissionSet.Equals(System.Object)">
      <summary>判斷指定的 <see cref="T:System.Security.NamedPermissionSet" /> 物件是否等於目前的 <see cref="T:System.Security.NamedPermissionSet" />。</summary>
      <param name="o">要與目前 <see cref="T:System.Security.NamedPermissionSet" /> 比較的 <see cref="T:System.Security.NamedPermissionSet" /> 物件。</param>
      <returns>如果指定的 <see cref="T:System.Security.NamedPermissionSet" /> 等於目前的 <see cref="T:System.Security.NamedPermissionSet" /> 物件，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.NamedPermissionSet.FromXml(System.Security.SecurityElement)">
      <summary>使用 XML 編碼方式重建具有指定狀態的具名使用權限集合。</summary>
      <param name="et">安全項目，包含具名使用權限集合的 XML 表示。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="et" /> 參數不是有效的具名使用權限集合表示。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="et" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.NamedPermissionSet.GetHashCode">
      <summary>取得 <see cref="T:System.Security.NamedPermissionSet" /> 物件的雜湊碼，其適合用於雜湊表這類的雜湊演算法和資料結構。</summary>
      <returns>目前 <see cref="T:System.Security.NamedPermissionSet" /> 物件的雜湊碼。</returns>
    </member>
    <member name="P:System.Security.NamedPermissionSet.Name">
      <summary>取得或設定目前具名使用權限集合的名稱。</summary>
      <returns>具名使用權限集合的名稱。</returns>
      <exception cref="T:System.ArgumentException">名稱為 <see langword="null" /> 或空字串 ("")。</exception>
    </member>
    <member name="M:System.Security.NamedPermissionSet.ToXml">
      <summary>建立具名使用權限集合的 XML 項目描述。</summary>
      <returns>具名使用權限集合的 XML 表示。</returns>
    </member>
    <member name="T:System.Security.Permissions.DataProtectionPermission">
      <summary>控制存取加密資料和記憶體的能力。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.#ctor(System.Security.Permissions.DataProtectionPermissionFlags)">
      <summary>使用指定的使用權限旗標，初始化 <see cref="T:System.Security.Permissions.DataProtectionPermission" /> 類別的新執行個體。</summary>
      <param name="flag">
        <see cref="T:System.Security.Permissions.DataProtectionPermissionFlags" /> 值的位元組合。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="flag" /> 不是有效的 <see cref="T:System.Security.Permissions.DataProtectionPermissionFlags" /> 值組合。</exception>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>使用指定的使用權限狀態，初始化 <see cref="T:System.Security.Permissions.DataProtectionPermission" /> 類別的新執行個體。</summary>
      <param name="state">其中一個 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> 不是有效的 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</exception>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.Copy">
      <summary>建立並傳回目前權限的相同複本。</summary>
      <returns>目前權限的複本。</returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermission.Flags">
      <summary>取得或設定資料和記憶體保護旗標。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.DataProtectionPermissionFlags" /> 值的位元組合。</returns>
      <exception cref="T:System.ArgumentException">指定的值不是有效的 <see cref="T:System.Security.Permissions.DataProtectionPermissionFlags" /> 值組合。</exception>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.FromXml(System.Security.SecurityElement)">
      <summary>使用 XML 編碼方式重建具有特定狀態的使用權限。</summary>
      <param name="securityElement">
        <see cref="T:System.Security.SecurityElement" />，包含用於重建使用權限的 XML 編碼方式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> 不是有效的使用權限項目。  
-或- 
不支援 <paramref name="securityElement" /> 的版本號碼。</exception>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.Intersect(System.Security.IPermission)">
      <summary>建立並傳回目前權限與指定權限交集的權限。</summary>
      <param name="target">要與目前權限產生交集的權限。 必須與目前權限屬於相同的類型。</param>
      <returns>代表目前權限與指定權限交集的新權限。 如果交集是空的，這個新權限就是 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 不是 <see langword="null" />，而且不會指定與目前使用權限相同型別的使用權限。</exception>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>判斷目前權限是否為指定權限的子集。</summary>
      <param name="target">要測試子集關聯性 (Relationship) 的使用權限。 這個權限必須與目前權限屬於相同的類型。</param>
      <returns>如果目前權限是指定權限的子集，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 不是 <see langword="null" />，而且不會指定與目前使用權限相同型別的使用權限。</exception>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.IsUnrestricted">
      <summary>傳回值，指出目前的權限是否不受限制。</summary>
      <returns>如果目前的權限不受限制，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.ToXml">
      <summary>建立權限和其目前狀態的 XML 編碼方式。</summary>
      <returns>權限的 XML 編碼方式，包含狀態資訊。</returns>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.Union(System.Security.IPermission)">
      <summary>建立目前權限與指定權限聯集的權限。</summary>
      <param name="target">要與目前權限結合的權限， 必須與目前權限屬於相同的類型。</param>
      <returns>代表目前權限與指定權限聯集的新權限。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 不是 <see langword="null" />，而且不會指定與目前使用權限相同型別的使用權限。</exception>
    </member>
    <member name="T:System.Security.Permissions.DataProtectionPermissionAttribute">
      <summary>允許將 <see cref="T:System.Security.Permissions.DataProtectionPermission" /> 的安全性動作套用至使用宣告式安全性的程式碼。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>使用指定的 <see cref="T:System.Security.Permissions.DataProtectionPermissionAttribute" /> 初始化 <see cref="T:System.Security.Permissions.SecurityAction" /> 類別的新執行個體。</summary>
      <param name="action">其中一個 <see cref="T:System.Security.Permissions.SecurityAction" /> 值。</param>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermissionAttribute.CreatePermission">
      <summary>建立及傳回新的 <see cref="T:System.Security.Permissions.DataProtectionPermission" />。</summary>
      <returns>與屬性對應的 <see cref="T:System.Security.Permissions.DataProtectionPermission" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermissionAttribute.Flags">
      <summary>取得或設定資料保護使用權限。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.DataProtectionPermissionFlags" /> 值的位元組合。 預設為 <see cref="F:System.Security.Permissions.DataProtectionPermissionFlags.NoFlags" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermissionAttribute.ProtectData">
      <summary>取得或設定值，指出是否可以使用 <see cref="T:System.Security.Cryptography.ProtectedData" /> 類別加密資料。</summary>
      <returns>如果可以加密資料，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermissionAttribute.ProtectMemory">
      <summary>取得或設定值，指出是否可以使用 <see cref="T:System.Security.Cryptography.ProtectedMemory" /> 類別加密記憶體。</summary>
      <returns>如果可以加密記憶體，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermissionAttribute.UnprotectData">
      <summary>取得或設定值，指出是否可以使用 <see cref="T:System.Security.Cryptography.ProtectedData" /> 類別解密資料。</summary>
      <returns>如果可以解密資料，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermissionAttribute.UnprotectMemory">
      <summary>取得或設定值，指出是否可以使用 <see cref="T:System.Security.Cryptography.ProtectedMemory" /> 類別解密記憶體。</summary>
      <returns>如果可以解密記憶體，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Security.Permissions.DataProtectionPermissionFlags">
      <summary>指定加密資料和記憶體的存取權限。</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.AllFlags">
      <summary>加密資料、加密記憶體、解密資料和解密記憶體的能力。</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.NoFlags">
      <summary>沒有保護能力。</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.ProtectData">
      <summary>可以加密資料的能力。</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.ProtectMemory">
      <summary>可以加密記憶體的能力。</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.UnprotectData">
      <summary>可以解密資料的能力。</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.UnprotectMemory">
      <summary>可以解密記憶體的能力。</summary>
    </member>
    <member name="T:System.Security.Permissions.EnvironmentPermission">
      <summary>控制系統和使用者環境變數的存取。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.#ctor(System.Security.Permissions.EnvironmentPermissionAccess,System.String)">
      <summary>使用指定之環境變數的指定存取權，來初始化 <see cref="T:System.Security.Permissions.EnvironmentPermission" /> 類別的新執行個體。</summary>
      <param name="flag">其中一個 <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> 值。</param>
      <param name="pathList">已授權存取的環境變數清單 (以分號分隔)。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pathList" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="flag" /> 參數不是有效的 <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> 值。</exception>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>使用指定的受限制或不受限制使用權限，來初始化 <see cref="T:System.Security.Permissions.EnvironmentPermission" /> 類別的新執行個體。</summary>
      <param name="state">其中一個 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> 參數不是有效的 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</exception>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.AddPathList(System.Security.Permissions.EnvironmentPermissionAccess,System.String)">
      <summary>將指定環境變數的存取加入此權限的現有狀態。</summary>
      <param name="flag">其中一個 <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> 值。</param>
      <param name="pathList">環境變數清單 (以分號分隔)。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pathList" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="flag" /> 參數不是有效的 <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> 值。</exception>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.Copy">
      <summary>建立並傳回目前權限的相同複本。</summary>
      <returns>目前權限的複本。</returns>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.FromXml(System.Security.SecurityElement)">
      <summary>透過 XML 編碼，重新建構具有指定狀態的權限。</summary>
      <param name="esd">用來重新建構權限的 XML 編碼。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="esd" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="esd" /> 參數不是有效的權限項目。  
-或- 
<paramref name="esd" /> 參數的版本號碼無效。</exception>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.GetPathList(System.Security.Permissions.EnvironmentPermissionAccess)">
      <summary>使用指定的 <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> 取得所有的環境變數。</summary>
      <param name="flag">其中一個 <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> 值，表示單一環境變數存取類型。</param>
      <returns>選取之旗標的環境變數清單 (以分號分隔)。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="flag" /> 不是有效的 <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> 值。  
-或- 
 <paramref name="flag" /> 是表示一個以上環境變數存取類型的 <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.AllAccess" />，或是不表示任何環境變數存取類型的 <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.NoAccess" />。</exception>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.Intersect(System.Security.IPermission)">
      <summary>建立並傳回目前權限與指定權限交集的權限。</summary>
      <param name="target">要與目前權限產生交集的權限。 必須與目前權限屬於相同的類型。</param>
      <returns>代表目前權限與指定權限交集的新權限。 如果交集是空的，這個新權限就是 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 參數不是 <see langword="null" />，而且與目前權限屬於不同的類型。</exception>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>判斷目前權限是否為指定權限的子集。</summary>
      <param name="target">要測試子集關聯性的權限。 這個權限必須與目前權限屬於相同的類型。</param>
      <returns>如果目前權限是指定權限的子集，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 參數不是 <see langword="null" />，而且與目前權限屬於不同的類型。</exception>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.IsUnrestricted">
      <summary>傳回值，指出目前的權限是否不受限制。</summary>
      <returns>如果目前的權限不受限制，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.SetPathList(System.Security.Permissions.EnvironmentPermissionAccess,System.String)">
      <summary>將指定之環境變數的指定存取設定為現有的使用權限狀態。</summary>
      <param name="flag">其中一個 <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> 值。</param>
      <param name="pathList">環境變數清單 (以分號分隔)。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pathList" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="flag" /> 參數不是有效的 <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> 值。</exception>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.ToXml">
      <summary>建立權限和其目前狀態的 XML 編碼方式。</summary>
      <returns>權限的 XML 編碼方式，包含所有狀態資訊。</returns>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.Union(System.Security.IPermission)">
      <summary>建立目前權限與指定權限聯集的權限。</summary>
      <param name="other">要與目前權限結合的權限， 必須與目前權限屬於相同的類型。</param>
      <returns>代表目前權限與指定權限聯集的新權限。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" /> 參數不是 <see langword="null" />，而且與目前權限屬於不同的類型。</exception>
    </member>
    <member name="T:System.Security.Permissions.EnvironmentPermissionAccess">
      <summary>指定存取環境變數。</summary>
    </member>
    <member name="F:System.Security.Permissions.EnvironmentPermissionAccess.AllAccess">
      <summary>環境變數的 <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /> 和 <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Write" /> 存取權。 <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.AllAccess" /> 表示多重 <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> 值，並且在做為預期單一值的 <see cref="T:System.ArgumentException" /> 方法的 <paramref name="flag" /> 參數使用時，會造成 <see cref="M:System.Security.Permissions.EnvironmentPermission.GetPathList(System.Security.Permissions.EnvironmentPermissionAccess)" />。</summary>
    </member>
    <member name="F:System.Security.Permissions.EnvironmentPermissionAccess.NoAccess">
      <summary>不允許存取環境變數。 <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.NoAccess" /> 表示沒有有效的 <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> 值，並且在做為預期單一值的 <see cref="T:System.ArgumentException" /> 的參數時，會造成 <see cref="M:System.Security.Permissions.EnvironmentPermission.GetPathList(System.Security.Permissions.EnvironmentPermissionAccess)" />。</summary>
    </member>
    <member name="F:System.Security.Permissions.EnvironmentPermissionAccess.Read">
      <summary>指定僅能讀取環境變數。 這個存取層級不包括變更、刪除和建立環境變數。</summary>
    </member>
    <member name="F:System.Security.Permissions.EnvironmentPermissionAccess.Write">
      <summary>指定僅能寫入環境變數。 寫入存取包括建立和刪除環境變數，以及變更現有值。 這個存取階層不包括讀取環境變數。</summary>
    </member>
    <member name="T:System.Security.Permissions.EnvironmentPermissionAttribute">
      <summary>允許將 <see cref="T:System.Security.Permissions.EnvironmentPermission" /> 的安全性動作套用至使用宣告式安全性的程式碼。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>使用指定的 <see cref="T:System.Security.Permissions.EnvironmentPermissionAttribute" /> 初始化 <see cref="T:System.Security.Permissions.SecurityAction" /> 類別的新執行個體。</summary>
      <param name="action">其中一個 <see cref="T:System.Security.Permissions.SecurityAction" /> 值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="action" /> 參數不是有效的 <see cref="T:System.Security.Permissions.SecurityAction" /> 值。</exception>
    </member>
    <member name="P:System.Security.Permissions.EnvironmentPermissionAttribute.All">
      <summary>設定完全存取字串值所指定的環境變數。</summary>
      <returns>完全存取的環境變數清單。</returns>
      <exception cref="T:System.NotSupportedException">此屬性不支援 get 方法。</exception>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermissionAttribute.CreatePermission">
      <summary>建立及傳回新的 <see cref="T:System.Security.Permissions.EnvironmentPermission" />。</summary>
      <returns>對應至這個屬性的 <see cref="T:System.Security.Permissions.EnvironmentPermission" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.EnvironmentPermissionAttribute.Read">
      <summary>取得或設定字串值所指定環境變數的讀取權限。</summary>
      <returns>讀取權限的環境變數清單。</returns>
    </member>
    <member name="P:System.Security.Permissions.EnvironmentPermissionAttribute.Write">
      <summary>取得或設定字串值所指定環境變數的寫入權限。</summary>
      <returns>寫入權限的環境變數清單。</returns>
    </member>
    <member name="T:System.Security.Permissions.FileDialogPermission">
      <summary>控制透過 [檔案] 對話方塊存取檔案或資料夾的能力。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.#ctor(System.Security.Permissions.FileDialogPermissionAccess)">
      <summary>使用指定陣列，初始化 <see cref="T:System.Security.Permissions.FileDialogPermission" /> 類別的新執行個體。</summary>
      <param name="access">
        <see cref="T:System.Security.Permissions.FileDialogPermissionAccess" /> 值的位元組合。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> 參數不是有效 <see cref="T:System.Security.Permissions.FileDialogPermissionAccess" /> 值的結合。</exception>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>依照指定使用限制或無限制的權限，初始化 <see cref="T:System.Security.Permissions.FileDialogPermission" /> 類別的新執行個體。</summary>
      <param name="state">其中一個 <see cref="T:System.Security.Permissions.PermissionState" /> 值 (<see langword="Unrestricted" /> 或 <see langword="None" />)。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> 參數不是有效的 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</exception>
    </member>
    <member name="P:System.Security.Permissions.FileDialogPermission.Access">
      <summary>取得或設定允許的檔案存取。</summary>
      <returns>允許的檔案存取。</returns>
      <exception cref="T:System.ArgumentException">嘗試設定 <paramref name="access" /> 參數為無效的 <see cref="T:System.Security.Permissions.FileDialogPermissionAccess" /> 值結合的數值。</exception>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.Copy">
      <summary>建立並傳回目前權限的相同複本。</summary>
      <returns>目前權限的複本。</returns>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.FromXml(System.Security.SecurityElement)">
      <summary>透過 XML 編碼，重新建構具有指定狀態的權限。</summary>
      <param name="esd">用以重新建構權限的 XML 編碼方式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="esd" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="esd" /> 參數不是有效的權限項目。  
-或- 
不支援 <paramref name="esd" /> 參數的版本號碼。</exception>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.Intersect(System.Security.IPermission)">
      <summary>建立並傳回目前權限與指定權限交集的權限。</summary>
      <param name="target">要與目前權限產生交集的權限。 必須與目前權限屬於相同的類型。</param>
      <returns>代表目前權限與指定權限交集的新權限。 如果交集是空的，這個新權限就是 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 參數不是 <see langword="null" />，而且與目前權限屬於不同的類型。</exception>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>判斷目前權限是否為指定權限的子集。</summary>
      <param name="target">要測試子集關聯性的權限。 這個權限必須與目前權限屬於相同的類型。</param>
      <returns>如果目前權限是指定權限的子集，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 參數不是 <see langword="null" />，而且與目前權限屬於不同的類型。</exception>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.IsUnrestricted">
      <summary>傳回值，指出目前的權限是否不受限制。</summary>
      <returns>如果目前的權限不受限制，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.ToXml">
      <summary>建立權限和其目前狀態的 XML 編碼方式。</summary>
      <returns>權限的 XML 編碼方式，包含狀態資訊。</returns>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.Union(System.Security.IPermission)">
      <summary>建立目前權限與指定權限聯集的權限。</summary>
      <param name="target">要與目前權限結合的權限， 必須與目前權限屬於相同的類型。</param>
      <returns>代表目前權限與指定權限聯集的新權限。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 參數不是 <see langword="null" />，而且與目前權限屬於不同的類型。</exception>
    </member>
    <member name="T:System.Security.Permissions.FileDialogPermissionAccess">
      <summary>指定透過 [檔案] 對話方塊允許的檔案存取類型。</summary>
    </member>
    <member name="F:System.Security.Permissions.FileDialogPermissionAccess.None">
      <summary>不可透過 [檔案] 對話方塊存取檔案。</summary>
    </member>
    <member name="F:System.Security.Permissions.FileDialogPermissionAccess.Open">
      <summary>透過 [檔案] 對話方塊開啟檔案的能力。</summary>
    </member>
    <member name="F:System.Security.Permissions.FileDialogPermissionAccess.OpenSave">
      <summary>透過 [檔案] 對話方塊開啟及儲存檔案的能力。</summary>
    </member>
    <member name="F:System.Security.Permissions.FileDialogPermissionAccess.Save">
      <summary>透過 [檔案] 對話方塊儲存檔案的能力。</summary>
    </member>
    <member name="T:System.Security.Permissions.FileDialogPermissionAttribute">
      <summary>允許將 <see cref="T:System.Security.Permissions.FileDialogPermission" /> 的安全性動作套用至使用宣告式安全性的程式碼。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>使用指定的 <see cref="T:System.Security.Permissions.FileDialogPermissionAttribute" /> 初始化 <see cref="T:System.Security.Permissions.SecurityAction" /> 類別的新執行個體。</summary>
      <param name="action">其中一個 <see cref="T:System.Security.Permissions.SecurityAction" /> 值。</param>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermissionAttribute.CreatePermission">
      <summary>建立及傳回新的 <see cref="T:System.Security.Permissions.FileDialogPermission" />。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.FileDialogPermission" />，會對應至這個屬性。</returns>
    </member>
    <member name="P:System.Security.Permissions.FileDialogPermissionAttribute.Open">
      <summary>取得或設定數值，表示是否宣告要經由檔案對話方塊開啟檔案的使用權限。</summary>
      <returns>如果已宣告要經由檔案對話方塊開啟檔案的使用權限，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.FileDialogPermissionAttribute.Save">
      <summary>取得或設定數值，表示是否宣告要經由檔案對話方塊儲存檔案的使用權限。</summary>
      <returns>如果已宣告要經由檔案對話方塊儲存檔案的使用權限，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Security.Permissions.FileIOPermission">
      <summary>控制存取檔案和資料夾的能力。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)">
      <summary>以針對指定檔案或目錄的指定存取權限和檔案控制資訊的指定存取權限，初始化 <see cref="T:System.Security.Permissions.FileIOPermission" /> 類別的新執行個體。</summary>
      <param name="access">
        <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 列舉值的位元組合。</param>
      <param name="actions">
        <see cref="T:System.Security.AccessControl.AccessControlActions" /> 列舉值的位元組合。</param>
      <param name="path">檔案或目錄的絕對路徑。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> 參數不是有效的 <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 值。  
-或- 
<paramref name="path" /> 參數不是有效的字串。  
-或- 
<paramref name="path" /> 參數未指定檔案或目錄的絕對路徑。</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String[])">
      <summary>以針對指定檔案和目錄的指定存取權限和檔案控制資訊的指定存取權限，初始化 <see cref="T:System.Security.Permissions.FileIOPermission" /> 類別的新執行個體。</summary>
      <param name="access">
        <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 列舉值的位元組合。</param>
      <param name="actions">
        <see cref="T:System.Security.AccessControl.AccessControlActions" /> 列舉值的位元組合。</param>
      <param name="pathList">包含檔案和目錄之絕對路徑的陣列。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> 參數不是有效的 <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 值。  
-或- 
<paramref name="pathList" /> 陣列中的項目不是有效的字串。</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.String)">
      <summary>初始化具有指定檔案或目錄之指定存取權的 <see cref="T:System.Security.Permissions.FileIOPermission" /> 類別的新執行個體。</summary>
      <param name="access">
        <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 列舉值的位元組合。</param>
      <param name="path">檔案或目錄的絕對路徑。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> 參數不是有效的 <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 值。  
-或- 
<paramref name="path" /> 參數不是有效的字串。  
-或- 
<paramref name="path" /> 參數未指定檔案或目錄的絕對路徑。</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.String[])">
      <summary>初始化具有指定檔案及目錄之指定存取權的 <see cref="T:System.Security.Permissions.FileIOPermission" /> 類別的新執行個體。</summary>
      <param name="access">
        <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 列舉值的位元組合。</param>
      <param name="pathList">包含檔案和目錄之絕對路徑的陣列。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> 參數不是有效的 <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 值。  
-或- 
<paramref name="pathList" /> 陣列中的項目不是有效的字串。</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>依照指定使用完全限制或無限制的權限，初始化 <see cref="T:System.Security.Permissions.FileIOPermission" /> 類別的新執行個體。</summary>
      <param name="state">其中一個 <see cref="T:System.Security.Permissions.PermissionState" /> 列舉值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> 參數不是有效的 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.AddPathList(System.Security.Permissions.FileIOPermissionAccess,System.String)">
      <summary>將指定的檔案或目錄存取加入權限的現有狀態。</summary>
      <param name="access">
        <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 值的位元組合。</param>
      <param name="path">檔案或目錄的絕對路徑。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> 參數不是有效的 <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 值。  
-或- 
<paramref name="path" /> 參數不是有效的字串。  
-或- 
<paramref name="path" /> 參數未指定檔案或目錄的絕對路徑。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> 參數的格式無效。</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.AddPathList(System.Security.Permissions.FileIOPermissionAccess,System.String[])">
      <summary>將指定的檔案和目錄存取加入權限的現有狀態。</summary>
      <param name="access">
        <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 值的位元組合。</param>
      <param name="pathList">包含檔案和目錄之絕對路徑的陣列。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> 參數不是有效的 <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 值。  
-或- 
<paramref name="pathList" /> 陣列中的項目無效。</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="pathList" /> 陣列中的項目格式無效。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pathList" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermission.AllFiles">
      <summary>取得或設定允許的所有檔案存取。</summary>
      <returns>所有檔案的檔案 I/O 旗標集合。</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermission.AllLocalFiles">
      <summary>取得或設定允許的所有本機檔案存取。</summary>
      <returns>所有本機檔案的檔案 I/O 旗標集合。</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.Copy">
      <summary>建立並傳回目前權限的相同複本。</summary>
      <returns>目前權限的複本。</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.Equals(System.Object)">
      <summary>判斷指定的 <see cref="T:System.Security.Permissions.FileIOPermission" /> 物件是否等於目前的 <see cref="T:System.Security.Permissions.FileIOPermission" />。</summary>
      <param name="o">要與目前 <see cref="T:System.Security.Permissions.FileIOPermission" /> 比較的 <see cref="T:System.Security.Permissions.FileIOPermission" /> 物件。</param>
      <returns>如果指定的 <see cref="T:System.Security.Permissions.FileIOPermission" /> 等於目前的 <see cref="T:System.Security.Permissions.FileIOPermission" /> 物件，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.FromXml(System.Security.SecurityElement)">
      <summary>透過 XML 編碼，重新建構具有指定狀態的權限。</summary>
      <param name="esd">用以重新建構權限的 XML 編碼方式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="esd" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="esd" /> 參數不是有效的權限項目。  
-或- 
<paramref name="esd" /> 參數的版本號碼不相容。</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.GetHashCode">
      <summary>取得 <see cref="T:System.Security.Permissions.FileIOPermission" /> 物件的雜湊碼，其適合用於雜湊表這類的雜湊演算法和資料結構。</summary>
      <returns>目前 <see cref="T:System.Security.Permissions.FileIOPermission" /> 物件的雜湊碼。</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)">
      <summary>取得具有指定之 <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 的所有檔案和目錄。</summary>
      <param name="access">其中一個 <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 值，代表一種檔案存取類型。</param>
      <returns>授與包含 <paramref name="access" /> 參數指定要存取之檔案與目錄路徑的陣列。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> 不是有效的 <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 值。  
-或- 
 <paramref name="access" /> 是代表多種檔案存取類型的 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.AllAccess" />；如果不代表任何檔案存取類型，則為 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />。</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.Intersect(System.Security.IPermission)">
      <summary>建立並傳回目前權限與指定權限交集的權限。</summary>
      <param name="target">要與目前權限產生交集的權限。 必須與目前權限屬於相同的類型。</param>
      <returns>代表目前權限與指定權限交集的新權限。 如果交集是空的，這個新權限就是 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 參數不是 <see langword="null" />，而且與目前權限屬於不同的類型。</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>判斷目前權限是否為指定權限的子集。</summary>
      <param name="target">要測試子集關聯性的權限。 這個權限必須與目前權限屬於相同的類型。</param>
      <returns>如果目前權限是指定權限的子集，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 參數不是 <see langword="null" />，而且與目前權限屬於不同的類型。</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.IsUnrestricted">
      <summary>傳回值，指出目前的權限是否不受限制。</summary>
      <returns>如果目前的權限不受限制，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.SetPathList(System.Security.Permissions.FileIOPermissionAccess,System.String)">
      <summary>設定指定檔案或目錄的指定存取權，取代使用權限的現有狀態。</summary>
      <param name="access">
        <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 值的位元組合。</param>
      <param name="path">檔案或目錄的絕對路徑。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> 參數不是有效的 <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 值。  
-或- 
<paramref name="path" /> 參數不是有效的字串。  
-或- 
<paramref name="path" /> 參數未指定檔案或目錄的絕對路徑。</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.SetPathList(System.Security.Permissions.FileIOPermissionAccess,System.String[])">
      <summary>設定對指定檔案和目錄的指定存取，方法是以一組新的路徑取代指定存取的目前狀態。</summary>
      <param name="access">
        <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 值的位元組合。</param>
      <param name="pathList">包含檔案和目錄之絕對路徑的陣列。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> 參數不是有效的 <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 值。  
-或- 
<paramref name="pathList" /> 參數中的所有項目都不是有效的字串。</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.ToXml">
      <summary>建立權限和其目前狀態的 XML 編碼方式。</summary>
      <returns>權限的 XML 編碼方式，包含所有狀態資訊。</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.Union(System.Security.IPermission)">
      <summary>建立目前權限與指定權限聯集的權限。</summary>
      <param name="other">要與目前權限結合的權限， 必須與目前權限屬於相同的類型。</param>
      <returns>代表目前權限與指定權限聯集的新權限。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" /> 參數不是 <see langword="null" />，而且與目前權限屬於不同的類型。</exception>
    </member>
    <member name="T:System.Security.Permissions.FileIOPermissionAccess">
      <summary>指定要求的檔案存取權類型。</summary>
    </member>
    <member name="F:System.Security.Permissions.FileIOPermissionAccess.AllAccess">
      <summary>具有檔案或目錄的 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> 和 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> 存取權。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.AllAccess" /> 表示多重 <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 值，並且在做為預期單一值的 <see cref="T:System.ArgumentException" /> 方法的 <paramref name="access" /> 參數使用時，會造成 <see cref="M:System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)" />。</summary>
    </member>
    <member name="F:System.Security.Permissions.FileIOPermissionAccess.Append">
      <summary>將資料附加至檔案或目錄的存取權。 <see langword="FileIOPermissionAccess.Append" /> 存取權包括建立新檔案或目錄的能力。 若要建立檔案，程式碼也必須獲授與 <see langword="Append" /> 與 <see langword="Write" /> 或 <see langword="Read" /> 存取權。</summary>
    </member>
    <member name="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess">
      <summary>沒有檔案或目錄的存取權。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /> 表示沒有有效的 <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 值，並且在做為預期單一值的 <see cref="T:System.ArgumentException" /> 的參數時，會造成 <see cref="M:System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)" />。</summary>
    </member>
    <member name="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery">
      <summary>路徑資訊的存取權。 這個值可以保護路徑中的敏感資訊，例如：使用者名稱，以及路徑中所顯示有關目錄結構的資訊。 這個值不能存取由路徑表示的檔案或資料夾。
基於效能考量，<see langword="PathDiscovery" /> 只應該授與目錄而非檔案。 例如，<see langword="PathDiscovery" /> 權限應該授與諸如 C:\test 與 C:\test 的路徑\\，而非 C:\test\example.txt。</summary>
    </member>
    <member name="F:System.Security.Permissions.FileIOPermissionAccess.Read">
      <summary>讀取檔案或目錄的存取權。</summary>
    </member>
    <member name="F:System.Security.Permissions.FileIOPermissionAccess.Write">
      <summary>寫入或刪除檔案或目錄的存取權。 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> 存取權包括刪除和覆寫檔案或目錄的能力。</summary>
    </member>
    <member name="T:System.Security.Permissions.FileIOPermissionAttribute">
      <summary>允許將 <see cref="T:System.Security.Permissions.FileIOPermission" /> 的安全性動作套用至使用宣告式安全性的程式碼。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>使用指定的 <see cref="T:System.Security.Permissions.FileIOPermissionAttribute" /> 初始化 <see cref="T:System.Security.Permissions.SecurityAction" /> 類別的新執行個體。</summary>
      <param name="action">其中一個 <see cref="T:System.Security.Permissions.SecurityAction" /> 值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="action" /> 參數不是有效的 <see cref="T:System.Security.Permissions.SecurityAction" />。</exception>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.All">
      <summary>取得或設定字串值所指定檔案或目錄的完整存取權。</summary>
      <returns>完全存取權的檔案或目錄絕對路徑。</returns>
      <exception cref="T:System.NotSupportedException">此屬性不支援 get 方法。</exception>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.AllFiles">
      <summary>取得或設定所有檔案的存取權。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 值的位元組合，表示所有檔案的使用權限。 預設為 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.AllLocalFiles">
      <summary>取得或設定允許的所有本機檔案存取。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 值的位元組合，表示所有本機檔案的使用權限。 預設為 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.Append">
      <summary>取得或設定字串值所指定檔案或目錄的附加存取權。</summary>
      <returns>附加存取權的檔案或目錄絕對路徑。</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.ChangeAccessControl">
      <summary>取得或設定可以在其中變更存取控制資訊的檔案或目錄。</summary>
      <returns>可以在其中變更存取控制資訊之檔案或目錄的絕對路徑。</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermissionAttribute.CreatePermission">
      <summary>建立及傳回新的 <see cref="T:System.Security.Permissions.FileIOPermission" />。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.FileIOPermission" />，會對應至這個屬性。</returns>
      <exception cref="T:System.ArgumentException">存取權受到保護的檔案或目錄的路徑資訊包含無效字元或萬用字元規範。</exception>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.PathDiscovery">
      <summary>取得或設定要授與路徑探索 (Discovery) 的檔案或目錄。</summary>
      <returns>檔案或目錄的絕對路徑。</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.Read">
      <summary>取得或設定字串值所指定檔案或目錄的讀取權限。</summary>
      <returns>讀取存取權的檔案或目錄絕對路徑。</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.ViewAccessControl">
      <summary>取得或設定可以在其中檢視存取控制資訊的檔案或目錄。</summary>
      <returns>可以在其中檢視存取控制資訊之檔案或目錄的絕對路徑。</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.ViewAndModify">
      <summary>取得或設定可以在其中檢視和修改檔案資料的檔案或目錄。</summary>
      <returns>可以在其中檢視和修改檔案資料之檔案或目錄的絕對路徑。</returns>
      <exception cref="T:System.NotSupportedException">呼叫了 <see langword="get" /> 存取子。 這個存取子是針對 C# 編譯器相容性而提供。</exception>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.Write">
      <summary>取得或設定字串值所指定檔案或目錄的寫入權限。</summary>
      <returns>寫入存取權的檔案或目錄絕對路徑。</returns>
    </member>
    <member name="T:System.Security.Permissions.GacIdentityPermission">
      <summary>定義源自全域組件快取之檔案的識別使用權限。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.#ctor">
      <summary>初始化 <see cref="T:System.Security.Permissions.GacIdentityPermission" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>使用完全受限制的 <see cref="T:System.Security.Permissions.GacIdentityPermission" />，初始化 <see cref="T:System.Security.Permissions.PermissionState" /> 類別的新執行個體。</summary>
      <param name="state">其中一個 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> 不是有效的 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</exception>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.Copy">
      <summary>建立並傳回目前權限的相同複本。</summary>
      <returns>目前權限的複本。</returns>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.FromXml(System.Security.SecurityElement)">
      <summary>從 XML 編碼方式建立使用權限。</summary>
      <param name="securityElement">
        <see cref="T:System.Security.SecurityElement" />，包含用於建立使用權限的 XML 編碼方式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> 不是有效的使用權限項目。  
-或- 
<paramref name="securityElement" /> 的版本號碼無效。</exception>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.Intersect(System.Security.IPermission)">
      <summary>建立並傳回目前權限與指定權限交集的權限。</summary>
      <param name="target">要與目前權限產生交集的權限。 必須與目前權限屬於相同的類型。</param>
      <returns>代表目前權限與指定權限交集的新權限。 如果交集是空的，這個新使用權限為 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 不是 <see langword="null" />，而且與目前使用權限的型別不同。</exception>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>指出目前使用權限是否為指定之使用權限的子集。</summary>
      <param name="target">要測試子集關聯性 (Relationship) 的使用權限物件。 該使用權限必須與目前使用權限具有相同的型別。</param>
      <returns>如果目前權限是指定權限的子集，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 不是 <see langword="null" />，而且與目前使用權限的型別不同。</exception>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.ToXml">
      <summary>建立權限和其目前狀態的 XML 編碼方式。</summary>
      <returns>
        <see cref="T:System.Security.SecurityElement" />，表示使用權限的 XML 編碼方式，包括任何狀態資訊。</returns>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.Union(System.Security.IPermission)">
      <summary>建立並傳回目前使用權限和指定之使用權限聯集的使用權限。</summary>
      <param name="target">要與目前權限結合的權限， 必須與目前權限屬於相同的類型。</param>
      <returns>代表目前權限與指定權限聯集的新權限。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 不是 <see langword="null" />，而且與目前使用權限的型別不同。</exception>
    </member>
    <member name="T:System.Security.Permissions.GacIdentityPermissionAttribute">
      <summary>允許將 <see cref="T:System.Security.Permissions.GacIdentityPermission" /> 的安全性動作套用至使用宣告式安全性的程式碼。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>使用指定的 <see cref="T:System.Security.Permissions.SecurityAction" /> 值，初始化 <see cref="T:System.Security.Permissions.GacIdentityPermissionAttribute" /> 類別的新執行個體。</summary>
      <param name="action">其中一個 <see cref="T:System.Security.Permissions.SecurityAction" /> 值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="action" /> 參數不是有效的 <see cref="T:System.Security.Permissions.SecurityAction" /> 值。</exception>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermissionAttribute.CreatePermission">
      <summary>建立新的 <see cref="T:System.Security.Permissions.GacIdentityPermission" /> 物件。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.GacIdentityPermission" />，會對應至這個屬性。</returns>
    </member>
    <member name="T:System.Security.Permissions.HostProtectionAttribute">
      <summary>允許使用宣告式安全性動作以決定主機保護需求。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Permissions.HostProtectionAttribute.#ctor">
      <summary>使用預設值，初始化 <see cref="T:System.Security.Permissions.HostProtectionAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Security.Permissions.HostProtectionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>使用指定的 <see cref="T:System.Security.Permissions.SecurityAction" /> 值，初始化 <see cref="T:System.Security.Permissions.HostProtectionAttribute" /> 類別的新執行個體。</summary>
      <param name="action">其中一個 <see cref="T:System.Security.Permissions.SecurityAction" /> 值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="action" /> 不是 <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</exception>
    </member>
    <member name="M:System.Security.Permissions.HostProtectionAttribute.CreatePermission">
      <summary>建立和傳回新的主機保護使用權限。</summary>
      <returns>
        <see cref="T:System.Security.IPermission" />，對應目前屬性。</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt">
      <summary>取得或設定值，指出是否公開外部處理序管理。</summary>
      <returns>如果公開外部處理序管理則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.ExternalThreading">
      <summary>取得或設定值，指出是否公開外部執行緒。</summary>
      <returns>如果公開外部執行緒則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.MayLeakOnAbort">
      <summary>取得或設定值，指出終止作業時，資源是否可能遺漏記憶體。</summary>
      <returns>如果終止時資源可能遺漏記憶體則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.Resources">
      <summary>取得或設定旗標，指定可能會對主機有害的功能分類。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.HostProtectionResource" /> 值的位元組合。 預設為 <see cref="F:System.Security.Permissions.HostProtectionResource.None" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure">
      <summary>取得或設定值，指出是否公開安全性基礎結構。</summary>
      <returns>如果公開安全性基礎結構則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt">
      <summary>取得或設定值，指出是否公開影響自身的處理序管理。</summary>
      <returns>如果公開影響自身的處理序管理則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading">
      <summary>取得或設定值，指出是否公開影響自身的執行緒。</summary>
      <returns>如果公開影響自身的執行緒則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.SharedState">
      <summary>取得或設定值，指出是否公開共用狀態。</summary>
      <returns>如果公開共用狀態則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.Synchronization">
      <summary>取得或設定值，指出是否公開同步處理。</summary>
      <returns>如果公開同步處理則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.UI">
      <summary>取得或設定值，指出是否公開使用者介面。</summary>
      <returns>如果公開使用者介面則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Security.Permissions.HostProtectionResource">
      <summary>指定功能的分類，如果方法或類別叫用這些功能，則可能對主機有害。</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.All">
      <summary>公開 (Expose) 所有主機資源。</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.ExternalProcessMgmt">
      <summary>可能建立或終結其他處理序。</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.ExternalThreading">
      <summary>建立或管理除了其自身之外的執行緒，這些執行緒可能對主機有害。</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.MayLeakOnAbort">
      <summary>如果未受安全控制代碼或某些確保資源釋放的其他方法保護，可能會導致終止時的資源流失。</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.None">
      <summary>未公開任何主機資源。</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.SecurityInfrastructure">
      <summary>公開安全性基礎結構。</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.SelfAffectingProcessMgmt">
      <summary>可能結束目前的處理序，終止伺服器。</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.SelfAffectingThreading">
      <summary>以只影響使用者程式碼的方式管理執行緒。</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.SharedState">
      <summary>公開可能在執行緒之間共用的狀態。</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.Synchronization">
      <summary>公開同步處理。</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.UI">
      <summary>公開使用者介面。</summary>
    </member>
    <member name="T:System.Security.Permissions.IsolatedStorageContainment">
      <summary>指定隔離儲存區 (Isolated Storage) 的允許用法。</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.AdministerIsolatedStorageByUser">
      <summary>使用者存放區的不限制管理功能。 允許整個使用者存放區的瀏覽和刪除，但沒有使用者自己的定義域/組件識別以外的讀取權限。</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.ApplicationIsolationByMachine">
      <summary>儲存區先由電腦隔離，然後再由應用程式隔離。 這為可在任何定義域內容中存取的應用程式提供資料存放區。 每一個應用程式資料分隔需要額外的信任，因為它可能提供應用程式間的「通道」，而危及應用程式在某些特定網站的資料隔離。</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.ApplicationIsolationByRoamingUser">
      <summary>儲存區先由使用者隔離，再由應用程式辨識項隔離。 如果啟用 Windows 使用者資料漫遊，儲存區將會漫遊。 這為可在任何定義域內容中存取的應用程式提供資料存放區。 每一個應用程式資料分隔需要額外的信任，因為它可能提供應用程式間的「通道」，而危及應用程式在某些特定網站的資料隔離。</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.ApplicationIsolationByUser">
      <summary>儲存區先由使用者隔離，然後再由應用程式隔離。 儲存區也由電腦隔離。 這為可在任何定義域內容中存取的應用程式提供資料存放區。 每一個應用程式資料分隔需要額外的信任，因為它可能提供應用程式間的「通道」，而危及應用程式在某些特定網站的資料隔離。</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.AssemblyIsolationByMachine">
      <summary>儲存區先由電腦隔離，然後再由程式碼組件隔離。 這為可在任何定義域內容中存取的組件提供資料存放區。 每一個組件資料分隔需要額外的信任，因為它可能提供應用程式間的「通道」，而危及應用程式在某些特定網站的資料隔離。</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.AssemblyIsolationByRoamingUser">
      <summary>儲存區首先是先由使用者，再由組件辨識項所隔離。 如果啟用 Windows 使用者資料漫遊，儲存區將會漫遊。 這為可在任何定義域內容中存取的組件提供資料存放區。 每一個組件資料分隔需要額外的信任，因為它可能提供應用程式間的「通道」，而危及應用程式在某些特定網站的資料隔離。</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.AssemblyIsolationByUser">
      <summary>儲存區首先是由使用者，接著是由程式碼組件所隔離。 儲存區也由電腦隔離。 這為可在任何定義域內容中存取的組件提供資料存放區。 每一個組件資料分隔需要額外的信任，因為它可能提供應用程式間的「通道」，而危及應用程式在某些特定網站的資料隔離。</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.DomainIsolationByMachine">
      <summary>儲存區先由電腦隔離，然後再由網域和組件隔離。 只能在同一個應用程式的內容中存取資料，並且只在相同電腦上執行時存取。 當協力廠商組件要保留私用資料存放區時，這是非常有用的。</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.DomainIsolationByRoamingUser">
      <summary>儲存區首先是由使用者，接著是由網域和組件所隔離。 如果啟用 Windows 使用者資料漫遊，儲存區將會漫遊。 只能在同一個應用程式的內容中存取資料，並且只在同一個使用者執行的時候。 當協力廠商組件要保留私用資料存放區時，這是非常有用的。</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.DomainIsolationByUser">
      <summary>儲存區首先是由使用者，接著是由網域和組件所隔離。 儲存區也由電腦隔離。 只能在同一個應用程式的內容中存取資料，並且只在同一個使用者執行的時候。 當協力廠商組件要保留私用資料存放區時，這是非常有用的。</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.None">
      <summary>不允許使用隔離儲存區。</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.UnrestrictedIsolatedStorage">
      <summary>允許使用隔離儲存區，不受任何限制。 程式碼具有使用者存放區任何部分的完全存取權，無論定義域或組件的識別。 這個隔離儲存區的使用包括列舉隔離儲存區資料存放區的內容。</summary>
    </member>
    <member name="T:System.Security.Permissions.IsolatedStorageFilePermission">
      <summary>指定私用虛擬檔案系統所允許的用法。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>使用指定的完全受限制或不受限制的使用權限，來初始化 <see cref="T:System.Security.Permissions.IsolatedStorageFilePermission" /> 類別的新執行個體。</summary>
      <param name="state">其中一個 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> 參數不是有效的 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</exception>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermission.Copy">
      <summary>建立並傳回目前權限的相同複本。</summary>
      <returns>目前權限的複本。</returns>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermission.Intersect(System.Security.IPermission)">
      <summary>建立並傳回目前權限與指定權限交集的權限。</summary>
      <param name="target">與目前使用權限物件交集的使用權限。 必須與目前權限屬於相同的類型。</param>
      <returns>代表目前權限與指定權限交集的新權限。 如果交集是空的，這個新權限就是 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 參數不是 <see langword="null" />，而且與目前權限屬於不同的類型。</exception>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermission.IsSubsetOf(System.Security.IPermission)">
      <summary>判斷目前權限是否為指定權限的子集。</summary>
      <param name="target">要測試子集關聯性的權限。 這個權限必須與目前權限屬於相同的類型。</param>
      <returns>如果目前權限是指定權限的子集，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 參數不是 <see langword="null" />，而且與目前權限屬於不同的類型。</exception>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermission.ToXml">
      <summary>建立權限和其目前狀態的 XML 編碼方式。</summary>
      <returns>權限的 XML 編碼方式，包含所有狀態資訊。</returns>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermission.Union(System.Security.IPermission)">
      <summary>建立目前權限與指定權限聯集的權限。</summary>
      <param name="target">要與目前權限結合的權限， 必須與目前權限屬於相同的類型。</param>
      <returns>代表目前權限與指定權限聯集的新權限。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 參數不是 <see langword="null" />，而且與目前權限屬於不同的類型。</exception>
    </member>
    <member name="T:System.Security.Permissions.IsolatedStorageFilePermissionAttribute">
      <summary>允許將 <see cref="T:System.Security.Permissions.IsolatedStorageFilePermission" /> 的安全性動作套用至使用宣告式安全性的程式碼。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>使用指定的 <see cref="T:System.Security.Permissions.IsolatedStorageFilePermissionAttribute" /> 初始化 <see cref="T:System.Security.Permissions.SecurityAction" /> 類別的新執行個體。</summary>
      <param name="action">其中一個 <see cref="T:System.Security.Permissions.SecurityAction" /> 值。</param>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermissionAttribute.CreatePermission">
      <summary>建立及傳回新的 <see cref="T:System.Security.Permissions.IsolatedStorageFilePermission" />。</summary>
      <returns>對應至這個屬性的 <see cref="T:System.Security.Permissions.IsolatedStorageFilePermission" />。</returns>
    </member>
    <member name="T:System.Security.Permissions.IsolatedStoragePermission">
      <summary>表示泛用隔離儲存區 (Isolated Storage) 能力的存取權。</summary>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStoragePermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>使用指定的受限制或不受限制使用權限，來初始化 <see cref="T:System.Security.Permissions.IsolatedStoragePermission" /> 類別的新執行個體。</summary>
      <param name="state">其中一個 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> 參數不是有效的 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</exception>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStoragePermission.FromXml(System.Security.SecurityElement)">
      <summary>透過 XML 編碼，重新建構具有指定狀態的權限。</summary>
      <param name="esd">用來重新建構權限的 XML 編碼。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="esd" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="esd" /> 參數不是有效的權限項目。  
-或- 
<paramref name="esd" /> 參數的版本號碼無效。</exception>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStoragePermission.IsUnrestricted">
      <summary>傳回數值，表示目前使用權限是否不受限制。</summary>
      <returns>如果目前的權限不受限制，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStoragePermission.ToXml">
      <summary>建立權限和其目前狀態的 XML 編碼方式。</summary>
      <returns>權限的 XML 編碼方式，包含所有狀態資訊。</returns>
    </member>
    <member name="P:System.Security.Permissions.IsolatedStoragePermission.UsageAllowed">
      <summary>取得或設定允許的隔離儲存內含項目型別。</summary>
      <returns>其中一個 <see cref="T:System.Security.Permissions.IsolatedStorageContainment" /> 值。</returns>
    </member>
    <member name="P:System.Security.Permissions.IsolatedStoragePermission.UserQuota">
      <summary>取得或設定每個使用者可存放之總資料量整體大小的配額。</summary>
      <returns>配置給使用者的資源大小 (以位元組為單位)。</returns>
    </member>
    <member name="T:System.Security.Permissions.IsolatedStoragePermissionAttribute">
      <summary>允許將 <see cref="T:System.Security.Permissions.IsolatedStoragePermission" /> 的安全性動作套用至使用宣告式安全性的程式碼。</summary>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStoragePermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>使用指定的 <see cref="T:System.Security.Permissions.IsolatedStoragePermissionAttribute" /> 初始化 <see cref="T:System.Security.Permissions.SecurityAction" /> 類別的新執行個體。</summary>
      <param name="action">其中一個 <see cref="T:System.Security.Permissions.SecurityAction" /> 值。</param>
    </member>
    <member name="P:System.Security.Permissions.IsolatedStoragePermissionAttribute.UsageAllowed">
      <summary>取得或設定應宣告的隔離儲存區的層級。</summary>
      <returns>其中一個 <see cref="T:System.Security.Permissions.IsolatedStorageContainment" /> 值。</returns>
    </member>
    <member name="P:System.Security.Permissions.IsolatedStoragePermissionAttribute.UserQuota">
      <summary>取得或設定最大使用者儲存區配額大小。</summary>
      <returns>最大使用者儲存區配額大小 (以位元組為單位)。</returns>
    </member>
    <member name="T:System.Security.Permissions.IUnrestrictedPermission">
      <summary>允許會公開不受限制之狀態的使用權限。</summary>
    </member>
    <member name="M:System.Security.Permissions.IUnrestrictedPermission.IsUnrestricted">
      <summary>傳回數值，表示是否允許不受限制地存取受使用權限保護的資源。</summary>
      <returns>如果允許不受限制地使用受使用權限保護的資源，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Security.Permissions.KeyContainerPermission">
      <summary>控制存取金鑰容器的能力。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags)">
      <summary>使用指定陣列，初始化 <see cref="T:System.Security.Permissions.KeyContainerPermission" /> 類別的新執行個體。</summary>
      <param name="flags">
        <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> 值的位元組合。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="flags" /> 不是有效的 <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> 值組合。</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags,System.Security.Permissions.KeyContainerPermissionAccessEntry[])">
      <summary>使用指定的全域存取和特定金鑰容器存取權限，初始化 <see cref="T:System.Security.Permissions.KeyContainerPermission" /> 類別的新執行個體。</summary>
      <param name="flags">
        <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> 值的位元組合。</param>
      <param name="accessList">
        <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 物件的陣列，可識別特定金鑰容器存取權限。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="flags" /> 不是有效的 <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> 值組合。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="accessList" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>使用受限制或不受限制的使用權限，初始化 <see cref="T:System.Security.Permissions.KeyContainerPermission" /> 類別的新執行個體。</summary>
      <param name="state">其中一個 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> 不是有效的 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</exception>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermission.AccessEntries">
      <summary>取得與目前使用權限相關聯的 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 物件集合。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection" />，包含這個 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 的 <see cref="T:System.Security.Permissions.KeyContainerPermission" /> 物件。</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.Copy">
      <summary>建立並傳回目前權限的相同複本。</summary>
      <returns>目前權限的複本。</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermission.Flags">
      <summary>取得套用至與使用權限相關聯之所有金鑰容器的金鑰容器使用權限旗標。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> 值的位元組合。</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.FromXml(System.Security.SecurityElement)">
      <summary>透過 XML 編碼，重新建構具有指定狀態的權限。</summary>
      <param name="securityElement">
        <see cref="T:System.Security.SecurityElement" />，包含用於重建使用權限的 XML 編碼方式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> 不是有效的使用權限項目。  
-或- 
不支援 <paramref name="securityElement" /> 的版本號碼。</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.Intersect(System.Security.IPermission)">
      <summary>建立並傳回目前權限與指定權限交集的權限。</summary>
      <param name="target">要與目前權限產生交集的權限。 必須與目前權限屬於相同的類型。</param>
      <returns>代表目前權限與指定權限交集的新權限。 如果交集是空的，這個新權限就是 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 不是 <see langword="null" />，而且不會指定與目前使用權限相同型別的使用權限。</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>判斷目前權限是否為指定權限的子集。</summary>
      <param name="target">要測試子集關聯性 (Relationship) 的使用權限。 這個權限必須與目前權限屬於相同的類型。</param>
      <returns>如果目前權限是指定權限的子集，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 不是 <see langword="null" />，而且不會指定與目前使用權限相同型別的使用權限。</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.IsUnrestricted">
      <summary>判斷目前的使用權限是否為不受限制的。</summary>
      <returns>如果目前的權限不受限制，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.ToXml">
      <summary>建立權限和其目前狀態的 XML 編碼方式。</summary>
      <returns>
        <see cref="T:System.Security.SecurityElement" />，包含使用權限的 XML 編碼方式，包括狀態資訊。</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.Union(System.Security.IPermission)">
      <summary>建立目前權限與指定權限聯集的權限。</summary>
      <param name="target">要與目前權限結合的權限， 必須與目前權限屬於相同的類型。</param>
      <returns>代表目前權限與指定權限聯集的新權限。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 不是 <see langword="null" />，而且不會指定與目前使用權限相同型別的使用權限。</exception>
    </member>
    <member name="T:System.Security.Permissions.KeyContainerPermissionAccessEntry">
      <summary>指定特定金鑰容器的存取權限。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.Security.Cryptography.CspParameters,System.Security.Permissions.KeyContainerPermissionFlags)">
      <summary>使用指定的密碼編譯服務提供者 (CSP) 參數和存取權限，初始化 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 類別的新執行個體。</summary>
      <param name="parameters">
        <see cref="T:System.Security.Cryptography.CspParameters" /> 物件，包含密碼編譯服務提供者 (CSP) 參數。</param>
      <param name="flags">
        <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> 值的位元組合。</param>
      <exception cref="T:System.ArgumentException">產生的項目會具有無限制的存取權。</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.Security.Permissions.KeyContainerPermissionFlags)">
      <summary>使用指定的金鑰容器名稱和存取權限，初始化 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 類別的新執行個體。</summary>
      <param name="keyContainerName">金鑰容器的名稱。</param>
      <param name="flags">
        <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> 值的位元組合。</param>
      <exception cref="T:System.ArgumentException">產生的項目會具有無限制的存取權。</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.String,System.Int32,System.String,System.Int32,System.Security.Permissions.KeyContainerPermissionFlags)">
      <summary>使用指定的屬性值，初始化 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 類別的新執行個體。</summary>
      <param name="keyStore">金鑰存放區的名稱。</param>
      <param name="providerName">提供者的名稱。</param>
      <param name="providerType">提供者的型別程式碼。 如需值，請參閱 <see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType" /> 屬性。</param>
      <param name="keyContainerName">金鑰容器的名稱。</param>
      <param name="keySpec">金鑰規格。 如需值，請參閱 <see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec" /> 屬性。</param>
      <param name="flags">
        <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> 值的位元組合。</param>
      <exception cref="T:System.ArgumentException">產生的項目會具有無限制的存取權。</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntry.Equals(System.Object)">
      <summary>判斷指定的 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 物件和目前的執行個體是否相等。</summary>
      <param name="o">要與目前執行個體比較的 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 物件。</param>
      <returns>如果指定的 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 等於目前的 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 物件，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.Flags">
      <summary>取得或設定金鑰容器使用權限。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> 值的位元組合。 預設為 <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.NoFlags" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntry.GetHashCode">
      <summary>取得目前執行個體的雜湊程式碼，這個執行個體適用於雜湊演算法和雜湊表這類的資料結構。</summary>
      <returns>目前 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 物件的雜湊碼。</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerName">
      <summary>取得或設定金鑰容器名稱。</summary>
      <returns>金鑰容器的名稱。</returns>
      <exception cref="T:System.ArgumentException">產生的項目會具有無限制的存取權。</exception>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec">
      <summary>取得或設定金鑰規格。</summary>
      <returns>Wincrypt.h 標頭檔中定義的其中一個 AT_ 值。</returns>
      <exception cref="T:System.ArgumentException">產生的項目會具有無限制的存取權。</exception>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyStore">
      <summary>取得或設定金鑰存放區的名稱。</summary>
      <returns>金鑰存放區的名稱。</returns>
      <exception cref="T:System.ArgumentException">產生的項目會具有無限制的存取權。</exception>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderName">
      <summary>取得或設定提供者名稱。</summary>
      <returns>提供者的名稱。</returns>
      <exception cref="T:System.ArgumentException">產生的項目會具有無限制的存取權。</exception>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType">
      <summary>取得或設定提供者類型。</summary>
      <returns>Wincrypt.h 標頭檔中定義的其中一個 PROV_ 值。</returns>
      <exception cref="T:System.ArgumentException">產生的項目會具有無限制的存取權。</exception>
    </member>
    <member name="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection">
      <summary>表示 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 物件的集合。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.#ctor" />
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Add(System.Security.Permissions.KeyContainerPermissionAccessEntry)">
      <summary>將 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 物件加入至集合。</summary>
      <param name="accessEntry">要加入的 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 物件。</param>
      <returns>要插入新項目的索引。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="accessEntry" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Clear">
      <summary>從集合中移除所有的 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 物件。</summary>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.CopyTo(System.Array,System.Int32)">
      <param name="array" />
      <param name="index" />
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.CopyTo(System.Security.Permissions.KeyContainerPermissionAccessEntry[],System.Int32)">
      <summary>複製集合的項目至相容的一維陣列，從目標陣列的指定索引開始。</summary>
      <param name="array">一維 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 陣列，是從目前集合複製的元素之目的端。</param>
      <param name="index">
        <paramref name="array" /> 中開始複製處的索引。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小於 <paramref name="array" /> 的下限。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> 是多維的。  
-或- 
集合中的項目數大於從 <paramref name="index" /> 到目的 <paramref name="array" /> 結尾的可用空間。</exception>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Count">
      <summary>取得集合中的項目數目。</summary>
      <returns>集合中的 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 物件數目。</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.GetEnumerator">
      <summary>傳回 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator" /> 物件，此物件可用於逐一查看集合中的物件。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator" /> 物件，此物件可用於逐一查看集合。</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IndexOf(System.Security.Permissions.KeyContainerPermissionAccessEntry)">
      <summary>取得指定 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 物件在集合中的索引 (如果它存在於集合中)。</summary>
      <param name="accessEntry">要尋找的 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 物件。</param>
      <returns>集合中指定 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 物件的索引，如果找不到相符項目，則為 -1。</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IsSynchronized">
      <summary>取得值，指出集合是否為同步 (執行緒安全)。</summary>
      <returns>所有情況下都是 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Item(System.Int32)">
      <summary>取得位於集合中指定索引處的項目。</summary>
      <param name="index">要存取之項目以零起始的索引。</param>
      <returns>位於此集合指定索引處的 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 物件。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 大於或等於集合計數。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="index" /> 為負。</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Remove(System.Security.Permissions.KeyContainerPermissionAccessEntry)">
      <summary>從集合中移除指定的 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 物件。</summary>
      <param name="accessEntry">要移除的 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="accessEntry" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.SyncRoot">
      <summary>取得物件，這個物件可以用來對集合進行同步存取。</summary>
      <returns>Object，可用來對集合同步存取。</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>傳回 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator" /> 物件，此物件可用於逐一查看集合中的物件。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator" /> 物件，此物件可用於逐一查看集合。</returns>
    </member>
    <member name="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
      <summary>表示 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 中 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection" /> 物件的列舉值。</summary>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.#ctor" />
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current">
      <summary>取得集合中的目前項目。</summary>
      <returns>集合中目前的 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 物件。</returns>
      <exception cref="T:System.InvalidOperationException">第一次呼叫 <see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" /> 方法之前，存取了 <see cref="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext" /> 屬性。 資料指標 (Cursor) 位於集合中第一個物件之前。  
-或- 
在 <see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" /> 方法呼叫傳回 <see langword="false" /> 之後，存取 <see cref="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext" /> 屬性，這表示資料指標位於集合中的最後一個物件之後。</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext">
      <summary>移至集合中的下一個項目。</summary>
      <returns>如果列舉值成功前移至下一個項目，則為 <see langword="true" />；如果列舉值超過集合的結尾，則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset">
      <summary>將列舉值重設為集合的開頭。</summary>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.System#Collections#IEnumerator#Current">
      <summary>取得集合中目前的物件。</summary>
      <returns>集合中的目前物件。</returns>
    </member>
    <member name="T:System.Security.Permissions.KeyContainerPermissionAttribute">
      <summary>允許將 <see cref="T:System.Security.Permissions.KeyContainerPermission" /> 的安全性動作套用至使用宣告式安全性的程式碼。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>使用指定的安全性動作，初始化 <see cref="T:System.Security.Permissions.KeyContainerPermissionAttribute" /> 類別的新執行個體。</summary>
      <param name="action">其中一個 <see cref="T:System.Security.Permissions.SecurityAction" /> 值。</param>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAttribute.CreatePermission">
      <summary>建立及傳回新的 <see cref="T:System.Security.Permissions.KeyContainerPermission" />。</summary>
      <returns>與屬性對應的 <see cref="T:System.Security.Permissions.KeyContainerPermission" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAttribute.Flags">
      <summary>取得或設定金鑰容器使用權限。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> 值的位元組合。 預設為 <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.NoFlags" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAttribute.KeyContainerName">
      <summary>取得或設定金鑰容器的名稱。</summary>
      <returns>金鑰容器的名稱。</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAttribute.KeySpec">
      <summary>取得或設定金鑰規格。</summary>
      <returns>Wincrypt.h 標頭檔中定義的其中一個 AT_ 值。</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAttribute.KeyStore">
      <summary>取得或設定金鑰存放區的名稱。</summary>
      <returns>金鑰存放區的名稱。 預設值為 "*"。</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAttribute.ProviderName">
      <summary>取得或設定提供者名稱。</summary>
      <returns>提供者的名稱。</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAttribute.ProviderType">
      <summary>取得或設定提供者類型。</summary>
      <returns>Wincrypt.h 標頭檔中定義的其中一個 PROV_ 值。</returns>
    </member>
    <member name="T:System.Security.Permissions.KeyContainerPermissionFlags">
      <summary>指定允許的金鑰容器存取類型。</summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.AllFlags">
      <summary>建立、解密、刪除和開啟金鑰容器，匯出和匯入金鑰，使用金鑰簽章檔案，以及檢視和變更金鑰容器的存取控制清單。</summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.ChangeAcl">
      <summary>變更金鑰容器的存取控制清單 (ACL)。</summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Create">
      <summary>建立金鑰容器。
建立金鑰容器也會在磁碟上建立檔案。 當不再使用建立的金鑰容器時，請務必將它移除。</summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Decrypt">
      <summary>解密金鑰容器。
解密是特殊權限作業，因為它使用私密金鑰。</summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Delete">
      <summary>刪除金鑰容器。
刪除金鑰容器會導致阻斷服務攻擊，因為它會防止使用以該金鑰加密或簽署的檔案。 因此，刪除是特殊權限作業。</summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Export">
      <summary>從金鑰容器匯出金鑰。
匯出金鑰的能力可能有害，因為它會移除金鑰的專屬性。</summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Import">
      <summary>將金鑰匯入金鑰容器。匯入金鑰的能力可能就像刪除容器的能力一樣有害，因為將金鑰匯入到具名金鑰容器會取代現有的金鑰。</summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.NoFlags">
      <summary>沒有金鑰容器的存取權限。</summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Open">
      <summary>開啟金鑰容器並使用公開金鑰 (Public Key)。

<see langword="Open" /> 不會賦予使用私密金鑰來簽署或解密檔案的權限，但它確實會允許使用者驗證檔案簽章並加密檔案。 只有金鑰的擁有者才能使用私密金鑰將這些檔案解密。</summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign">
      <summary>使用金鑰簽章檔案。
簽署檔案的能力可能有害，因為它允許使用者使用另一個使用者的金鑰來簽署檔案。</summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.ViewAcl">
      <summary>檢視金鑰容器的存取控制清單 (ACL)。</summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermission">
      <summary>
        <see cref="T:System.Security.Permissions.MediaPermission" /> 描述一組安全性權限，控制在部分信任的 Windows Presentation Foundation (WPF) 應用程式中使用音訊、影像和視訊媒體。</summary>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor">
      <summary>初始化 <see cref="T:System.Security.Permissions.MediaPermission" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio)">
      <summary>指定音訊權限等級，初始化 <see cref="T:System.Security.Permissions.MediaPermission" /> 類別的新執行個體。</summary>
      <param name="permissionAudio">
        <see cref="T:System.Security.Permissions.MediaPermissionAudio" /> 的列舉值。</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio,System.Security.Permissions.MediaPermissionVideo,System.Security.Permissions.MediaPermissionImage)">
      <summary>指定音訊、視訊和影像權限等級，初始化 <see cref="T:System.Security.Permissions.MediaPermission" /> 類別的新執行個體。</summary>
      <param name="permissionAudio">
        <see cref="T:System.Security.Permissions.MediaPermissionAudio" /> 的列舉值。</param>
      <param name="permissionVideo">
        <see cref="T:System.Security.Permissions.MediaPermissionVideo" /> 的列舉值。</param>
      <param name="permissionImage">
        <see cref="T:System.Security.Permissions.MediaPermissionImage" /> 的列舉值。</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionImage)">
      <summary>指定映像權限等級，以初始化 <see cref="T:System.Security.Permissions.MediaPermission" /> 類別的新執行個體。</summary>
      <param name="permissionImage">
        <see cref="T:System.Security.Permissions.MediaPermissionImage" /> 的列舉值。</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionVideo)">
      <summary>指定視訊權限等級，以初始化 <see cref="T:System.Security.Permissions.MediaPermission" /> 類別的新執行個體。</summary>
      <param name="permissionVideo">
        <see cref="T:System.Security.Permissions.MediaPermissionVideo" /> 的列舉值。</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>指定權限狀態，以初始化 <see cref="T:System.Security.Permissions.MediaPermission" /> 類別的新執行個體。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 的列舉值。</param>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Audio">
      <summary>取得目前音訊使用權限等級的值。</summary>
      <returns>音訊權限等級。</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Copy">
      <summary>建立並傳回目前權限的相同複本。</summary>
      <returns>目前權限的複本。</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.FromXml(System.Security.SecurityElement)">
      <summary>透過 XML 編碼，重新建構具有指定狀態的權限。</summary>
      <param name="securityElement">用來重新建構權限的 XML 編碼。</param>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Image">
      <summary>取得目前影像使用權限層級的值。</summary>
      <returns>影像的權限層級。</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Intersect(System.Security.IPermission)">
      <summary>建立並傳回目前權限與指定權限交集的權限。</summary>
      <param name="target">要與目前權限產生交集的權限。 必須與目前權限屬於相同的類型。</param>
      <returns>兩個使用權限的交集為描述它們都共同描述之狀態的使用權限。 只有通過這兩個原始權限的需求才對於交集權限有效。</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>判斷目前權限是否為指定權限的子集。</summary>
      <param name="target">要測試子集關聯性的權限。 這個權限必須與目前權限屬於相同的類型。</param>
      <returns>如果目前權限是指定權限的子集，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.IsUnrestricted">
      <summary>傳回值，指出目前的權限是否不受限制。</summary>
      <returns>如果音訊、影像和視訊的權限全都不受限制，則為<see langword="true" /> ；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.ToXml">
      <summary>建立權限和其目前狀態的 XML 編碼方式。</summary>
      <returns>權限的 XML 編碼方式，包含所有狀態資訊。</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Union(System.Security.IPermission)">
      <summary>建立目前權限與指定權限聯集的權限。</summary>
      <param name="target">要與目前權限結合的權限， 必須與目前權限屬於相同的類型。</param>
      <returns>代表目前權限與指定權限聯集的新權限。</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Video">
      <summary>取得目前視訊使用權限等級的值。</summary>
      <returns>媒體使用權限等級。</returns>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionAttribute">
      <summary>允許將 <see cref="T:System.Security.Permissions.MediaPermission" /> 的安全性動作套用至使用宣告式安全性的程式碼。</summary>
    </member>
    <member name="M:System.Security.Permissions.MediaPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>初始化 <see cref="T:System.Security.Permissions.MediaPermissionAttribute" /> 的新執行個體。</summary>
      <param name="action">其中一個 <see cref="T:System.Security.Permissions.SecurityAction" /> 值。</param>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Audio">
      <summary>取得或設定 <see cref="T:System.Security.Permissions.MediaPermissionAttribute" /> 的音訊權限等級。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.MediaPermissionAudio" /> 的狀態。</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermissionAttribute.CreatePermission">
      <summary>建立及傳回新的 <see cref="T:System.Security.Permissions.MediaPermission" />。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.MediaPermission" />，會對應至這個屬性。</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Image">
      <summary>取得或設定 <see cref="T:System.Security.Permissions.MediaPermissionAttribute" /> 的影像權限等級。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.MediaPermissionImage" /> 的狀態。</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Video">
      <summary>取得或設定 <see cref="T:System.Security.Permissions.MediaPermissionAttribute" /> 的影像權限等級。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.MediaPermissionVideo" /> 的狀態。</returns>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionAudio">
      <summary>指定音訊的使用權限等級。</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.AllAudio">
      <summary>允許不受限制之音訊播放的使用權限。</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.NoAudio">
      <summary>拒絕所有音訊播放的使用權限。</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.SafeAudio">
      <summary>允許安全、有限音訊播放的使用權限，其中包括拒絕串流存取影像檔。</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.SiteOfOriginAudio">
      <summary>針對位於應用程式之來源網站的檔案，才會允許播放音訊的使用權限。</summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionImage">
      <summary>指定影像的使用權限等級。</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.AllImage">
      <summary>允許不受限制之影像顯示的使用權限。</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.NoImage">
      <summary>拒絕所有影像顯示的使用權限。</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.SafeImage">
      <summary>允許安全、有限影像顯示的使用權限，其中包括拒絕串流存取影像檔。</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.SiteOfOriginImage">
      <summary>針對位於應用程式來源網站的影像，才會允許顯示的使用權限。</summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionVideo">
      <summary>指定視訊的使用權限等級。</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.AllVideo">
      <summary>允許不受限制之視訊播放的使用權限。</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.NoVideo">
      <summary>拒絕所有視訊播放的使用權限。</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.SafeVideo">
      <summary>允許安全、有限視訊播放的使用權限，其中包括拒絕串流存取影像檔。</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.SiteOfOriginVideo">
      <summary>針對位於應用程式之來源網站的檔案，才會允許播放視訊的使用權限。</summary>
    </member>
    <member name="T:System.Security.Permissions.PermissionSetAttribute">
      <summary>允許使用宣告式安全性，將 <see cref="T:System.Security.PermissionSet" /> 的安全性動作套用到程式碼。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Permissions.PermissionSetAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>使用指定的安全性動作，初始化 <see cref="T:System.Security.Permissions.PermissionSetAttribute" /> 類別的新執行個體。</summary>
      <param name="action">指定安全性動作的一個列舉值。</param>
    </member>
    <member name="M:System.Security.Permissions.PermissionSetAttribute.CreatePermission">
      <summary>沒有使用這個方法。</summary>
      <returns>所有情況下都是 null 參考 (在 Visual Basic 中為 <see langword="nothing" />)。</returns>
    </member>
    <member name="M:System.Security.Permissions.PermissionSetAttribute.CreatePermissionSet">
      <summary>根據這個權限集屬性物件，建立並傳回新的權限集。</summary>
      <returns>新的權限集合。</returns>
    </member>
    <member name="P:System.Security.Permissions.PermissionSetAttribute.File">
      <summary>取得或設定含有要被宣告的自訂使用權限之 XML 表示的檔案。</summary>
      <returns>檔案的實體路徑，含有使用權限集的 XML 表示。</returns>
    </member>
    <member name="P:System.Security.Permissions.PermissionSetAttribute.Hex">
      <summary>取得或設定 XML 編碼的使用權限集的十六進位表示。</summary>
      <returns>XML 編碼的使用權限集的十六進位表示。</returns>
    </member>
    <member name="P:System.Security.Permissions.PermissionSetAttribute.Name">
      <summary>取得或設定使用權限集的名稱。</summary>
      <returns>不變的 <see cref="T:System.Security.NamedPermissionSet" /> (包含在預設原則中而且無法變更的數個使用權限集的其中一個) 名稱。</returns>
    </member>
    <member name="P:System.Security.Permissions.PermissionSetAttribute.UnicodeEncoded">
      <summary>取得或設定數值，指示由 <see cref="P:System.Security.Permissions.PermissionSetAttribute.File" /> 所指定的檔案是 Unicode 或 ASCII 編碼。</summary>
      <returns>如果檔案是 Unicode 編碼，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.PermissionSetAttribute.XML">
      <summary>取得或設定使用權限集的 XML 表示。</summary>
      <returns>使用權限集的 XML 表示。</returns>
    </member>
    <member name="T:System.Security.Permissions.PrincipalPermission">
      <summary>允許針對使用中的主體進行檢查 (請參閱 <see cref="T:System.Security.Principal.IPrincipal" />)，方法是使用為宣告式和命令式安全性動作所定義的語言建構。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>使用指定的 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 初始化 <see cref="T:System.Security.Permissions.PermissionState" /> 類別的新執行個體。</summary>
      <param name="state">其中一個 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> 參數不是有效的 <see cref="T:System.Security.Permissions.PermissionState" />。</exception>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.#ctor(System.String,System.String)">
      <summary>為指定的 <paramref name="name" /> 和 <paramref name="role" /> 初始化 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 類別的新執行個體。</summary>
      <param name="name">
        <see cref="T:System.Security.Principal.IPrincipal" /> 物件的使用者名稱。</param>
      <param name="role">
        <see cref="T:System.Security.Principal.IPrincipal" /> 物件的使用者角色 (例如系統管理員)。</param>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.#ctor(System.String,System.String,System.Boolean)">
      <summary>針對指定的 <paramref name="name" />, <paramref name="role" /> 和驗證狀態，初始化 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 類別的新執行個體。</summary>
      <param name="name">
        <see cref="T:System.Security.Principal.IPrincipal" /> 物件的使用者名稱。</param>
      <param name="role">
        <see cref="T:System.Security.Principal.IPrincipal" /> 物件的使用者角色 (例如系統管理員)。</param>
      <param name="isAuthenticated">
        <see langword="true" /> 表示使用者是已驗證的，否則為 <see langword="false" />。</param>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.Copy">
      <summary>建立並傳回目前權限的相同複本。</summary>
      <returns>目前權限的複本。</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.Demand">
      <summary>在執行階段判斷目前的主體是否符合目前使用權限指定的主體。</summary>
      <exception cref="T:System.Security.SecurityException">目前的主體沒有傳遞由目前使用權限所指定之原則的安全性檢查。  
-或- 
目前的 <see cref="T:System.Security.Principal.IPrincipal" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.Equals(System.Object)">
      <summary>判斷指定的 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 物件是否等於目前的 <see cref="T:System.Security.Permissions.PrincipalPermission" />。</summary>
      <param name="o">要與目前 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 比較的 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 物件。</param>
      <returns>如果指定的 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 等於目前的 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 物件，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.FromXml(System.Security.SecurityElement)">
      <summary>透過 XML 編碼，重新建構具有指定狀態的權限。</summary>
      <param name="elem">用來重新建構權限的 XML 編碼。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elem" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elem" /> 參數不是有效的權限項目。  
-或- 
<paramref name="elem" /> 參數的版本號碼無效。</exception>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.GetHashCode">
      <summary>取得 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 物件的雜湊碼，其適合用於雜湊表這類的雜湊演算法和資料結構。</summary>
      <returns>目前 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 物件的雜湊碼。</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.Intersect(System.Security.IPermission)">
      <summary>建立並傳回目前權限與指定權限交集的權限。</summary>
      <param name="target">要與目前權限產生交集的權限。 必須與目前權限屬於相同的類型。</param>
      <returns>代表目前權限與指定權限交集的新權限。 如果交集是空的，這個新使用權限將為 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 參數不是 <see langword="null" />，並且不是與目前使用權限相同類別的執行個體。</exception>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>判斷目前權限是否為指定權限的子集。</summary>
      <param name="target">要測試子集關聯性的權限。 這個權限必須與目前權限屬於相同的類型。</param>
      <returns>如果目前權限是指定權限的子集，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 參數是一個物件，沒有與目前使用權限相同的型別。</exception>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.IsUnrestricted">
      <summary>傳回值，指出目前的權限是否不受限制。</summary>
      <returns>如果目前的權限不受限制，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.ToString">
      <summary>建立並傳回表示目前使用權限的字串。</summary>
      <returns>目前權限的表示。</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.ToXml">
      <summary>建立權限和其目前狀態的 XML 編碼方式。</summary>
      <returns>權限的 XML 編碼方式，包含所有狀態資訊。</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.Union(System.Security.IPermission)">
      <summary>建立目前權限與指定權限聯集的權限。</summary>
      <param name="other">要與目前權限結合的權限， 必須與目前權限屬於相同的類型。</param>
      <returns>代表目前權限與指定權限聯集的新權限。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" /> 參數是一個物件，沒有與目前使用權限相同的型別。</exception>
    </member>
    <member name="T:System.Security.Permissions.PrincipalPermissionAttribute">
      <summary>允許將 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 的安全性動作套用至使用宣告式安全性的程式碼。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>使用指定的 <see cref="T:System.Security.Permissions.PrincipalPermissionAttribute" /> 初始化 <see cref="T:System.Security.Permissions.SecurityAction" /> 類別的新執行個體。</summary>
      <param name="action">其中一個 <see cref="T:System.Security.Permissions.SecurityAction" /> 值。</param>
    </member>
    <member name="P:System.Security.Permissions.PrincipalPermissionAttribute.Authenticated">
      <summary>取得或設定值，指出目前的主體是否已經由對應之以角色為基礎的安全性提供者驗證。</summary>
      <returns>如果目前的主體已經過驗證，則為<see langword="true" /> ，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermissionAttribute.CreatePermission">
      <summary>建立及傳回新的 <see cref="T:System.Security.Permissions.PrincipalPermission" />。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.PrincipalPermission" />，會對應至這個屬性。</returns>
    </member>
    <member name="P:System.Security.Permissions.PrincipalPermissionAttribute.Name">
      <summary>取得或設定與目前主體關聯之識別的名稱。</summary>
      <returns>要與以角色為基礎的安全性提供者所提供之名稱進行比對的名稱。</returns>
    </member>
    <member name="P:System.Security.Permissions.PrincipalPermissionAttribute.Role">
      <summary>取得或設定指定安全性角色中的成員資格。</summary>
      <returns>來自對應之以角色為基礎的安全性提供者之角色名稱。</returns>
    </member>
    <member name="T:System.Security.Permissions.PublisherIdentityPermission">
      <summary>表示軟體發行者 (Publisher) 的識別 (Identity)。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>使用指定的 Authenticode X.509v3 憑證，初始化 <see cref="T:System.Security.Permissions.PublisherIdentityPermission" /> 類別的新執行個體。</summary>
      <param name="certificate">X.509 憑證，表示軟體發行者識別。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="certificate" /> 參數不是有效憑證。</exception>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>使用指定的 <see cref="T:System.Security.Permissions.PublisherIdentityPermission" /> 初始化 <see cref="T:System.Security.Permissions.PermissionState" /> 類別的新執行個體。</summary>
      <param name="state">其中一個 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> 參數不是有效的 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</exception>
    </member>
    <member name="P:System.Security.Permissions.PublisherIdentityPermission.Certificate">
      <summary>取得或設定表示軟體發行者識別的 Authenticode X.509v3 憑證。</summary>
      <returns>X.509 憑證，表示軟體發行者的識別。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Permissions.PublisherIdentityPermission.Certificate" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Permissions.PublisherIdentityPermission.Certificate" /> 不是有效憑證。</exception>
      <exception cref="T:System.NotSupportedException">無法設定此屬性，因為識別模稜兩可。</exception>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.Copy">
      <summary>建立並傳回目前權限的相同複本。</summary>
      <returns>目前權限的複本。</returns>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.FromXml(System.Security.SecurityElement)">
      <summary>透過 XML 編碼，重新建構具有指定狀態的權限。</summary>
      <param name="esd">用來重新建構權限的 XML 編碼。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="esd" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="esd" /> 參數不是有效的權限項目。  
-或- 
<paramref name="esd" /> 參數的版本號碼無效。</exception>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.Intersect(System.Security.IPermission)">
      <summary>建立並傳回目前權限與指定權限交集的權限。</summary>
      <param name="target">要與目前權限產生交集的權限。 必須與目前權限屬於相同的類型。</param>
      <returns>代表目前權限與指定權限交集的新權限。 如果交集是空的，這個新權限就是 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 參數不是 <see langword="null" />，而且與目前權限屬於不同的類型。</exception>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>判斷目前權限是否為指定權限的子集。</summary>
      <param name="target">要測試子集關聯性的權限。 這個權限必須與目前權限屬於相同的類型。</param>
      <returns>如果目前權限是指定權限的子集，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 參數不是 <see langword="null" />，而且與目前權限屬於不同的類型。</exception>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.ToXml">
      <summary>建立權限和其目前狀態的 XML 編碼方式。</summary>
      <returns>權限的 XML 編碼方式，包含所有狀態資訊。</returns>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.Union(System.Security.IPermission)">
      <summary>建立目前權限與指定權限聯集的權限。</summary>
      <param name="target">要與目前權限結合的權限， 必須與目前權限屬於相同的類型。</param>
      <returns>代表目前權限與指定權限聯集的新權限。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 參數不是 <see langword="null" />，而且與目前權限屬於不同的類型。  
-或- 
兩個使用權限不相等。</exception>
    </member>
    <member name="T:System.Security.Permissions.PublisherIdentityPermissionAttribute">
      <summary>允許將 <see cref="T:System.Security.Permissions.PublisherIdentityPermission" /> 的安全性動作套用至使用宣告式安全性的程式碼。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>使用指定的 <see cref="T:System.Security.Permissions.PublisherIdentityPermissionAttribute" /> 初始化 <see cref="T:System.Security.Permissions.SecurityAction" /> 類別的新執行個體。</summary>
      <param name="action">其中一個 <see cref="T:System.Security.Permissions.SecurityAction" /> 值。</param>
    </member>
    <member name="P:System.Security.Permissions.PublisherIdentityPermissionAttribute.CertFile">
      <summary>取得或設定含有 Authenticode X.509v3 憑證的憑證檔。</summary>
      <returns>X.509 憑證檔 (通常副檔名為 .cer) 的檔案路徑。</returns>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermissionAttribute.CreatePermission">
      <summary>建立並傳回 <see cref="T:System.Security.Permissions.PublisherIdentityPermission" /> 的新執行個體。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.PublisherIdentityPermission" />，會對應至這個屬性。</returns>
    </member>
    <member name="P:System.Security.Permissions.PublisherIdentityPermissionAttribute.SignedFile">
      <summary>取得或設定要從其中擷取 Authenticode X.509v3 憑證的簽名檔。</summary>
      <returns>使用 Authenticode 簽章簽名的檔案路徑。</returns>
    </member>
    <member name="P:System.Security.Permissions.PublisherIdentityPermissionAttribute.X509Certificate">
      <summary>取得或設定識別呼叫程式碼發行者的 Authenticode X.509v3 憑證。</summary>
      <returns>X.509 憑證的十六進位表示。</returns>
    </member>
    <member name="T:System.Security.Permissions.ReflectionPermission">
      <summary>控制透過 <see cref="N:System.Reflection" /> API 對非公用型別和成員的存取。 控制 <see cref="N:System.Reflection.Emit" /> API 的一些功能。</summary>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>使用指定的完全受限制或不受限制的使用權限，來初始化 <see cref="T:System.Security.Permissions.ReflectionPermission" /> 類別的新執行個體。</summary>
      <param name="state">其中一個 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> 參數不是有效的 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</exception>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.#ctor(System.Security.Permissions.ReflectionPermissionFlag)">
      <summary>使用指定陣列，初始化 <see cref="T:System.Security.Permissions.ReflectionPermission" /> 類別的新執行個體。</summary>
      <param name="flag">其中一個 <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> 值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="flag" /> 參數不是有效的 <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> 值。</exception>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.Copy">
      <summary>建立並傳回目前權限的相同複本。</summary>
      <returns>目前權限的複本。</returns>
    </member>
    <member name="P:System.Security.Permissions.ReflectionPermission.Flags">
      <summary>取得或設定允許目前使用權限的反映型別。</summary>
      <returns>目前使用權限的設定旗標。</returns>
      <exception cref="T:System.ArgumentException">嘗試將這個屬性設定為無效的值。 如需有效的值，請參閱 <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" />。</exception>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.FromXml(System.Security.SecurityElement)">
      <summary>透過 XML 編碼，重新建構具有指定狀態的權限。</summary>
      <param name="esd">用來重新建構權限的 XML 編碼。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="esd" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="esd" /> 參數不是有效的權限項目。  
-或- 
<paramref name="esd" /> 參數的版本號碼無效。</exception>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.Intersect(System.Security.IPermission)">
      <summary>建立並傳回目前權限與指定權限交集的權限。</summary>
      <param name="target">要與目前權限產生交集的權限。 必須與目前權限屬於相同的類型。</param>
      <returns>代表目前權限與指定權限交集的新權限。 如果交集是空的，這個新權限就是 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 參數不是 <see langword="null" />，而且與目前權限屬於不同的類型。</exception>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>判斷目前權限是否為指定權限的子集。</summary>
      <param name="target">要測試子集關聯性的權限。 這個權限必須與目前權限屬於相同的類型。</param>
      <returns>如果目前權限是指定權限的子集，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 參數不是 <see langword="null" />，而且與目前權限屬於不同的類型。</exception>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.IsUnrestricted">
      <summary>傳回值，指出目前的權限是否不受限制。</summary>
      <returns>如果目前的權限不受限制，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.ToXml">
      <summary>建立權限和其目前狀態的 XML 編碼方式。</summary>
      <returns>權限的 XML 編碼方式，包含所有狀態資訊。</returns>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.Union(System.Security.IPermission)">
      <summary>建立目前權限與指定權限聯集的權限。</summary>
      <param name="other">要與目前權限結合的權限， 必須與目前權限屬於相同的類型。</param>
      <returns>代表目前權限與指定權限聯集的新權限。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" /> 參數不是 <see langword="null" />，而且與目前權限屬於不同的類型。</exception>
    </member>
    <member name="T:System.Security.Permissions.ReflectionPermissionAttribute">
      <summary>允許將 <see cref="T:System.Security.Permissions.ReflectionPermission" /> 的安全性動作套用至使用宣告式安全性的程式碼。</summary>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>使用指定的 <see cref="T:System.Security.Permissions.ReflectionPermissionAttribute" /> 初始化 <see cref="T:System.Security.Permissions.SecurityAction" /> 類別的新執行個體。</summary>
      <param name="action">其中一個 <see cref="T:System.Security.Permissions.SecurityAction" /> 值。</param>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermissionAttribute.CreatePermission">
      <summary>建立及傳回新的 <see cref="T:System.Security.Permissions.ReflectionPermission" />。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.ReflectionPermission" />，會對應至這個屬性。</returns>
    </member>
    <member name="P:System.Security.Permissions.ReflectionPermissionAttribute.Flags">
      <summary>取得或設定反映目前的允許使用。</summary>
      <returns>使用位元的 OR 運算結合一個或以上的 <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> 值。</returns>
      <exception cref="T:System.ArgumentException">嘗試將這個屬性設定為無效的值。 如需有效的值，請參閱 <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" />。</exception>
    </member>
    <member name="P:System.Security.Permissions.ReflectionPermissionAttribute.MemberAccess">
      <summary>取得或設定值，這個值表示是否允許非公用成員上作業的引動過程。</summary>
      <returns>如果允許非公用成員上作業的引動過程，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.ReflectionPermissionAttribute.ReflectionEmit">
      <summary>取得或設定值，這個值表示是否允許 <see cref="N:System.Reflection.Emit" /> 中使用某些功能，例如發出偵錯符號。</summary>
      <returns>如果允許使用受影響的功能，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.ReflectionPermissionAttribute.RestrictedMemberAccess">
      <summary>取得或設定值，這個值表示是否允許非公用成員之受限制的引動過程。 受限制的引動過程表示，包含被叫用非公用成員之組件的權限授權集必須等於叫用組件的權限授權集，或是其子集。</summary>
      <returns>如果允許非公用成員之受限制的引動過程，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.ReflectionPermissionAttribute.TypeInformation">
      <summary>取得或設定值，這個值表示是否允許不可見的成員上的反映。</summary>
      <returns>如果允許不可見成員上的反映，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Security.Permissions.ReflectionPermissionFlag">
      <summary>指定許可的 <see cref="N:System.Reflection" /> 和 <see cref="N:System.Reflection.Emit" /> 命名空間使用。</summary>
    </member>
    <member name="F:System.Security.Permissions.ReflectionPermissionFlag.AllFlags">
      <summary>設定 <see langword="TypeInformation" />、<see langword="MemberAccess" /> 和 <see langword="ReflectionEmit" />。 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.AllFlags" /> 不包含 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess" />。</summary>
    </member>
    <member name="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess">
      <summary>不論授權集為何，所有成員上都允許引動作業。 如果這個旗標沒有設定，則只有在可見成員上允許引動作業。</summary>
    </member>
    <member name="F:System.Security.Permissions.ReflectionPermissionFlag.NoFlags">
      <summary>允許型別和成員的列舉型別。 可見型別和成員上允許引動作業。</summary>
    </member>
    <member name="F:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit">
      <summary>允許發出偵錯符號。 從 .NET Framework 2.0 Service Pack 1 開始，不再需要具有此旗標才能發出程式碼。</summary>
    </member>
    <member name="F:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess">
      <summary>受限制的成員存取是為部分信任的程式碼所提供的。 只有在部分信任程式碼的授權集包含了組件 (包含所要存取之非公用型別和成員) 授權集中的所有權限時，部分信任程式碼才可以存取非公用型別和成員。 這個旗標在 .NET Framework 2.0 SP1 中是新的。</summary>
    </member>
    <member name="F:System.Security.Permissions.ReflectionPermissionFlag.TypeInformation">
      <summary>這個旗標已過時。 不需要旗標即可列舉型別和成員以及檢查其中繼資料。 請改用 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.NoFlags" />。</summary>
    </member>
    <member name="T:System.Security.Permissions.RegistryPermission">
      <summary>控制存取登錄變數的能力。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>使用指定的完全受限制或不受限制的使用權限，來初始化 <see cref="T:System.Security.Permissions.RegistryPermission" /> 類別的新執行個體。</summary>
      <param name="state">其中一個 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> 參數不是有效的 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.RegistryPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)">
      <summary>使用指定登錄變數的指定存取和登錄控制資訊的指定存取權限，初始化 <see cref="T:System.Security.Permissions.RegistryPermission" /> 類別的新執行個體。</summary>
      <param name="access">其中一個 <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> 值。</param>
      <param name="control">
        <see cref="T:System.Security.AccessControl.AccessControlActions" /> 值的位元組合。</param>
      <param name="pathList">已授權存取的登錄變數清單 (以分號分隔)。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> 參數不是有效的 <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> 值。  
-或- 
<paramref name="pathList" /> 參數不是有效的字串。</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.RegistryPermissionAccess,System.String)">
      <summary>使用指定登錄變數的指定存取，來初始化 <see cref="T:System.Security.Permissions.RegistryPermission" /> 類別的新執行個體。</summary>
      <param name="access">其中一個 <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> 值。</param>
      <param name="pathList">已授權存取的登錄變數清單 (以分號分隔)。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> 參數不是有效的 <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> 值。  
-或- 
<paramref name="pathList" /> 參數不是有效的字串。</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.AddPathList(System.Security.Permissions.RegistryPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)">
      <summary>將指定登錄變數的存取加入至現有的使用權限狀態，指定登錄使用權限存取與存取控制動作。</summary>
      <param name="access">其中一個 <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> 值。</param>
      <param name="actions">其中一個 <see cref="T:System.Security.AccessControl.AccessControlActions" /> 值。</param>
      <param name="pathList">登錄變數的清單 (以分號分隔)。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> 參數不是有效的 <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> 值。  
-或- 
<paramref name="pathList" /> 參數不是有效的字串。</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.AddPathList(System.Security.Permissions.RegistryPermissionAccess,System.String)">
      <summary>將指定登錄變數的存取權加入此權限的現有狀態。</summary>
      <param name="access">其中一個 <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> 值。</param>
      <param name="pathList">登錄變數清單 (以分號分隔)。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> 參數不是有效的 <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> 值。  
-或- 
<paramref name="pathList" /> 參數不是有效的字串。</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.Copy">
      <summary>建立並傳回目前權限的相同複本。</summary>
      <returns>目前權限的複本。</returns>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.FromXml(System.Security.SecurityElement)">
      <summary>透過 XML 編碼，重新建構具有指定狀態的權限。</summary>
      <param name="elem">用來重新建構權限的 XML 編碼。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elem" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elem" /> 參數不是有效的權限項目。  
-或- 
<paramref name="elem" /> 參數的版本號碼無效。</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.GetPathList(System.Security.Permissions.RegistryPermissionAccess)">
      <summary>使用指定的 <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> 取得所有登錄變數的路徑。</summary>
      <param name="access">其中一個 <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> 值，表示單一登錄變數存取類型。</param>
      <returns>登錄變數的清單 (以分號分隔) 以及指定的 <see cref="T:System.Security.Permissions.RegistryPermissionAccess" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> 不是有效的 <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> 值。  
-或- 
 <paramref name="access" /> 是表示一個以上登錄變數存取類型的 <see cref="F:System.Security.Permissions.RegistryPermissionAccess.AllAccess" />，或是不表示任何登錄變數存取類型的 <see cref="F:System.Security.Permissions.RegistryPermissionAccess.NoAccess" />。</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.Intersect(System.Security.IPermission)">
      <summary>建立並傳回目前權限與指定權限交集的權限。</summary>
      <param name="target">要與目前權限產生交集的權限。 必須與目前權限屬於相同的類型。</param>
      <returns>代表目前權限與指定權限交集的新權限。 如果交集是空的，這個新權限就是 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 參數不是 <see langword="null" />，而且與目前權限屬於不同的類型。</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>判斷目前權限是否為指定權限的子集。</summary>
      <param name="target">要測試子集關聯性的權限。 這個權限必須與目前權限屬於相同的類型。</param>
      <returns>如果目前權限是指定權限的子集，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 參數不是 <see langword="null" />，而且與目前權限屬於不同的類型。</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.IsUnrestricted">
      <summary>傳回值，指出目前的權限是否不受限制。</summary>
      <returns>如果目前的權限不受限制，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.SetPathList(System.Security.Permissions.RegistryPermissionAccess,System.String)">
      <summary>將所指定登錄變數名稱的新存取設定為現有的使用權限狀態。</summary>
      <param name="access">其中一個 <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> 值。</param>
      <param name="pathList">登錄變數清單 (以分號分隔)。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> 參數不是有效的 <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> 值。  
-或- 
<paramref name="pathList" /> 參數不是有效的字串。</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.ToXml">
      <summary>建立權限和其目前狀態的 XML 編碼方式。</summary>
      <returns>權限的 XML 編碼方式，包含所有狀態資訊。</returns>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.Union(System.Security.IPermission)">
      <summary>建立目前權限與指定權限聯集的權限。</summary>
      <param name="other">要與目前權限結合的權限， 必須與目前權限屬於相同的類型。</param>
      <returns>代表目前權限與指定權限聯集的新權限。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" /> 參數不是 <see langword="null" />，而且與目前權限屬於不同的類型。</exception>
    </member>
    <member name="T:System.Security.Permissions.RegistryPermissionAccess">
      <summary>指定登錄機碼 (Registry Key) 和值的允許存取。</summary>
    </member>
    <member name="F:System.Security.Permissions.RegistryPermissionAccess.AllAccess">
      <summary>登錄變數的 <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" />、<see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /> 和 <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" /> 存取權。 <see cref="F:System.Security.Permissions.RegistryPermissionAccess.AllAccess" /> 表示多重 <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> 值，並且在做為預期單一值的 <see cref="T:System.ArgumentException" /> 方法的 <paramref name="access" /> 參數使用時，會造成 <see cref="M:System.Security.Permissions.RegistryPermission.GetPathList(System.Security.Permissions.RegistryPermissionAccess)" />。</summary>
    </member>
    <member name="F:System.Security.Permissions.RegistryPermissionAccess.Create">
      <summary>建立登錄變數的存取權限。</summary>
    </member>
    <member name="F:System.Security.Permissions.RegistryPermissionAccess.NoAccess">
      <summary>不允許存取登錄變數。 <see cref="F:System.Security.Permissions.RegistryPermissionAccess.NoAccess" /> 表示沒有有效的 <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> 值，並且在做為預期單一值的 <see cref="T:System.ArgumentException" /> 的參數時，會造成 <see cref="M:System.Security.Permissions.RegistryPermission.GetPathList(System.Security.Permissions.RegistryPermissionAccess)" />。</summary>
    </member>
    <member name="F:System.Security.Permissions.RegistryPermissionAccess.Read">
      <summary>登錄變數的讀取存取。</summary>
    </member>
    <member name="F:System.Security.Permissions.RegistryPermissionAccess.Write">
      <summary>登錄變數的寫入存取。</summary>
    </member>
    <member name="T:System.Security.Permissions.RegistryPermissionAttribute">
      <summary>允許將 <see cref="T:System.Security.Permissions.RegistryPermission" /> 的安全性動作套用至使用宣告式安全性的程式碼。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>使用指定的 <see cref="T:System.Security.Permissions.RegistryPermissionAttribute" /> 初始化 <see cref="T:System.Security.Permissions.SecurityAction" /> 類別的新執行個體。</summary>
      <param name="action">其中一個 <see cref="T:System.Security.Permissions.SecurityAction" /> 值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="action" /> 參數不是有效的 <see cref="T:System.Security.Permissions.SecurityAction" />。</exception>
    </member>
    <member name="P:System.Security.Permissions.RegistryPermissionAttribute.All">
      <summary>取得或設定指定之登錄機碼的完整權限。</summary>
      <returns>以分號分隔的清單，列出可以完整存取的登錄機碼路徑。</returns>
      <exception cref="T:System.NotSupportedException">呼叫了 get 存取子，這個存取子是針對 C# 編譯器相容性而提供。</exception>
    </member>
    <member name="P:System.Security.Permissions.RegistryPermissionAttribute.ChangeAccessControl">
      <summary>取得或設定指定之登錄機碼的變更存取控制。</summary>
      <returns>以分號分隔的清單，列出具有變更存取控制的登錄機碼路徑。 執行個體時提供 SQL Server 登入。</returns>
    </member>
    <member name="P:System.Security.Permissions.RegistryPermissionAttribute.Create">
      <summary>取得或設定指定之登錄機碼的建立等級存取權限。</summary>
      <returns>以分號分隔的清單，列出具有建立等級存取權限的登錄機碼路徑。</returns>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermissionAttribute.CreatePermission">
      <summary>建立及傳回新的 <see cref="T:System.Security.Permissions.RegistryPermission" />。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.RegistryPermission" />，會對應至這個屬性。</returns>
    </member>
    <member name="P:System.Security.Permissions.RegistryPermissionAttribute.Read">
      <summary>取得或設定指定之登錄機碼的讀取權限。</summary>
      <returns>以分號分隔的清單，列出具有讀取權限的登錄機碼路徑。</returns>
    </member>
    <member name="P:System.Security.Permissions.RegistryPermissionAttribute.ViewAccessControl">
      <summary>取得或設定指定之登錄機碼的檢視存取控制。</summary>
      <returns>以分號分隔的清單，列出具有檢視存取控制的登錄機碼路徑。</returns>
    </member>
    <member name="P:System.Security.Permissions.RegistryPermissionAttribute.ViewAndModify">
      <summary>取得或設定一組可以檢視及修改之指定的登錄機碼。</summary>
      <returns>以分號分隔的清單，列出具有建立、讀取和寫入權限的登錄機碼路徑。</returns>
      <exception cref="T:System.NotSupportedException">呼叫了 get 存取子，這個存取子是針對 C# 編譯器相容性而提供。</exception>
    </member>
    <member name="P:System.Security.Permissions.RegistryPermissionAttribute.Write">
      <summary>取得或設定指定之登錄機碼的寫入權限。</summary>
      <returns>以分號分隔的清單，列出具有寫入權限的登錄機碼路徑。</returns>
    </member>
    <member name="T:System.Security.Permissions.ResourcePermissionBase">
      <summary>允許的程式碼存取安全性權限控制。</summary>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.#ctor">
      <summary>初始化 <see cref="T:System.Security.Permissions.ResourcePermissionBase" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.#ctor(System.Security.Permissions.PermissionState)">
      <summary>使用建立資源時的指定存取權等級，初始化 <see cref="T:System.Security.Permissions.ResourcePermissionBase" /> 類別的新執行個體。</summary>
      <param name="state">其中一個 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> 參數不是有效的 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</exception>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)">
      <summary>將使用權限項目加入至使用權限。</summary>
      <param name="entry">要加入的 <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" />。</param>
      <exception cref="T:System.ArgumentNullException">指定的 <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath" /> 屬性中的項目數目不等於 <see cref="P:System.Security.Permissions.ResourcePermissionBase.TagNames" /> 屬性中的項目數目。  
-或- 
<see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> 已包含於使用權限。</exception>
    </member>
    <member name="F:System.Security.Permissions.ResourcePermissionBase.Any">
      <summary>指定用來表示任何萬用字元 (Wildcard Character) 的字元。</summary>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.Clear">
      <summary>清除已加入的使用權限項目中的使用權限。</summary>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.Copy">
      <summary>建立並傳回目前使用權限物件的相同複本。</summary>
      <returns>目前權限物件的複本。</returns>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.FromXml(System.Security.SecurityElement)">
      <summary>透過 XML 編碼，重新建構具有指定狀態的安全性物件。</summary>
      <param name="securityElement">用來重新建構安全性物件的 XML 編碼方式。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> 參數不是有效的使用權限項目。  
-或- 
不支援 <paramref name="securityElement" /> 參數的版本號碼。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.GetPermissionEntries">
      <summary>傳回已加入至這個使用權限的 <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> 物件陣列。</summary>
      <returns>已加入至這個使用權限的 <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> 物件陣列。</returns>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.Intersect(System.Security.IPermission)">
      <summary>建立並傳回目前使用權限物件和目標使用權限物件交集的使用權限物件。</summary>
      <param name="target">與目前使用權限物件相同型別的使用權限物件。</param>
      <returns>新使用權限物件，表示目前物件和指定目標的交集。 如果交集是空的，這個物件就是 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentException">與目前使用權限物件不同型別的目標使用權限物件。</exception>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.IsSubsetOf(System.Security.IPermission)">
      <summary>判斷目前使用權限物件是否為指定使用權限的子集。</summary>
      <param name="target">將測試子集關聯性 (Relationship) 的使用權限物件。</param>
      <returns>如果目前使用權限物件是指定使用權限物件的子集則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.IsUnrestricted">
      <summary>取得值，表示使用權限是否不受限制。</summary>
      <returns>如果使用權限不受限制，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="F:System.Security.Permissions.ResourcePermissionBase.Local">
      <summary>指定用來表示區域參考的字元。</summary>
    </member>
    <member name="P:System.Security.Permissions.ResourcePermissionBase.PermissionAccessType">
      <summary>取得或設定一個列舉值，以描述對資源您所授與的存取權類型。</summary>
      <returns>由 <see cref="T:System.Type" /> 衍生的列舉值，描述對資源您所授與的存取權類型。</returns>
      <exception cref="T:System.ArgumentNullException">屬性值為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">屬性值不是有效的列舉值。</exception>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.RemovePermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)">
      <summary>從使用權限中移除使用權限項目。</summary>
      <param name="entry">要移除的 <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" />。</param>
      <exception cref="T:System.ArgumentNullException">指定的 <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath" /> 屬性中的項目數目不等於 <see cref="P:System.Security.Permissions.ResourcePermissionBase.TagNames" /> 屬性中的項目數目。  
-或- 
<see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> 不在使用權限中。</exception>
    </member>
    <member name="P:System.Security.Permissions.ResourcePermissionBase.TagNames">
      <summary>取得或設定一個字串陣列，以辨識您要保護的資源。</summary>
      <returns>字串陣列，辨識您要保護的資源。</returns>
      <exception cref="T:System.ArgumentNullException">屬性值為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">陣列的長度為零。</exception>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.ToXml">
      <summary>建立並傳回安全性物件的 XML 編碼方式和目前狀態。</summary>
      <returns>安全物件的 XML 編碼方式，包含所有狀態資訊。</returns>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.Union(System.Security.IPermission)">
      <summary>建立將目前使用權限物件和目標使用權限物件相結合的使用權限物件。</summary>
      <param name="target">與目前使用權限物件結合的使用權限物件。 它必須與目前的使用權限物件為相同的型別。</param>
      <returns>新使用權限物件，表示目前使用權限物件和指定使用權限物件的聯集。</returns>
      <exception cref="T:System.ArgumentException">與目前使用權限物件不同型別的 <paramref name="target" /> 使用權限物件。</exception>
    </member>
    <member name="T:System.Security.Permissions.ResourcePermissionBaseEntry">
      <summary>定義程式碼存取安全性權限集的最小單位。</summary>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBaseEntry.#ctor">
      <summary>初始化 <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBaseEntry.#ctor(System.Int32,System.String[])">
      <summary>使用指定的使用權限存取權和使用權限存取權路徑來初始化 <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> 類別的新執行個體。</summary>
      <param name="permissionAccess">使用權限存取權等級列舉值的整數表示。 <see cref="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccess" /> 屬性設為這個值。</param>
      <param name="permissionAccessPath">字串陣列，辨識您要保護的資源。 <see cref="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath" /> 屬性設為這個值。</param>
      <exception cref="T:System.ArgumentNullException">指定的 <paramref name="permissionAccessPath" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccess">
      <summary>取得存取權等級列舉值的整數表示。</summary>
      <returns>存取權等級列舉值。</returns>
    </member>
    <member name="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath">
      <summary>取得用來辨識您要保護的資源其字串陣列。</summary>
      <returns>字串陣列，辨識您要保護的資源。</returns>
    </member>
    <member name="T:System.Security.Permissions.SecurityPermission">
      <summary>描述套用至程式碼的安全性權限集。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>使用指定的受限制或不受限制使用權限，來初始化 <see cref="T:System.Security.Permissions.SecurityPermission" /> 類別的新執行個體。</summary>
      <param name="state">其中一個 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> 參數不是有效的 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</exception>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.#ctor(System.Security.Permissions.SecurityPermissionFlag)">
      <summary>使用旗標的指定初始設定狀態來初始化 <see cref="T:System.Security.Permissions.SecurityPermission" /> 類別的新執行個體。</summary>
      <param name="flag">使用權限的初始狀態，由 <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /> 所定義的任何使用權限位元的位元 OR 運算組合表示。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="flag" /> 參數不是有效的 <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /> 值。</exception>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.Copy">
      <summary>建立並傳回目前權限的相同複本。</summary>
      <returns>目前權限的複本。</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermission.Flags">
      <summary>取得或設定安全性權限旗標。</summary>
      <returns>目前使用權限的狀態，由 <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /> 所定義的任何使用權限位元的位元 OR 運算組合表示。</returns>
      <exception cref="T:System.ArgumentException">嘗試將這個屬性設定為無效的值。 如需有效的值，請參閱 <see cref="T:System.Security.Permissions.SecurityPermissionFlag" />。</exception>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.FromXml(System.Security.SecurityElement)">
      <summary>透過 XML 編碼，重新建構具有指定狀態的權限。</summary>
      <param name="esd">用來重新建構權限的 XML 編碼。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="esd" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="esd" /> 參數不是有效的權限項目。  
-或- 
<paramref name="esd" /> 參數的版本號碼不受支援。</exception>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.Intersect(System.Security.IPermission)">
      <summary>建立並傳回目前權限與指定權限交集的權限。</summary>
      <param name="target">要與目前權限產生交集的權限。 必須與目前權限屬於相同的類型。</param>
      <returns>新使用權限物件，表示目前使用權限和指定使用權限的交集。 如果交集是空的，這個新權限就是 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 參數不是 <see langword="null" />，而且與目前權限屬於不同的類型。</exception>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>判斷目前權限是否為指定權限的子集。</summary>
      <param name="target">要測試子集關聯性的權限。 這個權限必須與目前權限屬於相同的類型。</param>
      <returns>如果目前權限是指定權限的子集，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 參數不是 <see langword="null" />，而且與目前權限屬於不同的類型。</exception>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.IsUnrestricted">
      <summary>傳回值，指出目前的權限是否不受限制。</summary>
      <returns>如果目前的權限不受限制，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.ToXml">
      <summary>建立權限和其目前狀態的 XML 編碼方式。</summary>
      <returns>權限的 XML 編碼方式，包含所有狀態資訊。</returns>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.Union(System.Security.IPermission)">
      <summary>建立目前權限與指定權限聯集的權限。</summary>
      <param name="target">要與目前權限結合的權限， 必須與目前權限屬於相同的類型。</param>
      <returns>代表目前權限與指定權限聯集的新權限。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 參數不是 <see langword="null" />，而且與目前權限屬於不同的類型。</exception>
    </member>
    <member name="T:System.Security.Permissions.SiteIdentityPermission">
      <summary>定義程式碼來源網站的識別 (Identity) 使用權限。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>使用指定的 <see cref="T:System.Security.Permissions.SiteIdentityPermission" /> 初始化 <see cref="T:System.Security.Permissions.PermissionState" /> 類別的新執行個體。</summary>
      <param name="state">其中一個 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> 參數不是有效的 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</exception>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Security.Permissions.SiteIdentityPermission" /> 類別的新執行個體，以表示指定的站台識別。</summary>
      <param name="site">站台名稱或萬用字元運算式。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="site" /> 參數不是有效的字串，或不符合有效的萬用字元站台名稱。</exception>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.Copy">
      <summary>建立並傳回目前權限的相同複本。</summary>
      <returns>目前權限的複本。</returns>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.FromXml(System.Security.SecurityElement)">
      <summary>透過 XML 編碼，重新建構具有指定狀態的權限。</summary>
      <param name="esd">用來重新建構權限的 XML 編碼。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="esd" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="esd" /> 參數不是有效的權限項目。  
-或- 
<paramref name="esd" /> 參數的版本號碼無效。</exception>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.Intersect(System.Security.IPermission)">
      <summary>建立並傳回目前權限與指定權限交集的權限。</summary>
      <param name="target">要與目前權限產生交集的權限。 必須與目前權限屬於相同的類型。</param>
      <returns>代表目前權限與指定權限交集的新權限。 如果交集是空的，這個新權限就是 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 參數不是 <see langword="null" />，而且與目前權限屬於不同的類型。</exception>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>判斷目前權限是否為指定權限的子集。</summary>
      <param name="target">要測試子集關聯性的權限。 這個權限必須與目前權限屬於相同的類型。</param>
      <returns>如果目前權限是指定權限的子集，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 參數不是 <see langword="null" />，而且與目前權限屬於不同的類型。</exception>
    </member>
    <member name="P:System.Security.Permissions.SiteIdentityPermission.Site">
      <summary>取得或設定目前的站台。</summary>
      <returns>目前的站台。</returns>
      <exception cref="T:System.NotSupportedException">無法擷取站台識別，因為它具有模稜兩可的識別。</exception>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.ToXml">
      <summary>建立權限和其目前狀態的 XML 編碼方式。</summary>
      <returns>權限的 XML 編碼方式，包含所有狀態資訊。</returns>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.Union(System.Security.IPermission)">
      <summary>建立目前權限與指定權限聯集的權限。</summary>
      <param name="target">要與目前權限結合的權限， 必須與目前權限屬於相同的類型。</param>
      <returns>代表目前權限與指定權限聯集的新權限。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 參數不是 <see langword="null" />，而且與目前權限屬於不同的類型。  
-或- 
兩個使用權限不相等，且其中一個不是另一個的子集。</exception>
    </member>
    <member name="T:System.Security.Permissions.SiteIdentityPermissionAttribute">
      <summary>允許將 <see cref="T:System.Security.Permissions.SiteIdentityPermission" /> 的安全性動作套用至使用宣告式安全性的程式碼。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>使用指定的 <see cref="T:System.Security.Permissions.SiteIdentityPermissionAttribute" /> 初始化 <see cref="T:System.Security.Permissions.SecurityAction" /> 類別的新執行個體。</summary>
      <param name="action">其中一個 <see cref="T:System.Security.Permissions.SecurityAction" /> 值。</param>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermissionAttribute.CreatePermission">
      <summary>建立並傳回 <see cref="T:System.Security.Permissions.SiteIdentityPermission" /> 的新執行個體。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.SiteIdentityPermission" />，會對應至這個屬性。</returns>
    </member>
    <member name="P:System.Security.Permissions.SiteIdentityPermissionAttribute.Site">
      <summary>取得或設定呼叫程式碼的站台名稱。</summary>
      <returns>與安全性提供者指定的站台名稱進行比較的站台名稱。</returns>
    </member>
    <member name="T:System.Security.Permissions.StorePermission">
      <summary>控制對包含 X.509 憑證之存放區的存取。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>使用完全受限制或不受限制的使用權限狀態，初始化 <see cref="T:System.Security.Permissions.StorePermission" /> 類別的新執行個體。</summary>
      <param name="state">其中一個 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> 不是有效的 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</exception>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.StorePermissionFlags)">
      <summary>使用指定陣列，初始化 <see cref="T:System.Security.Permissions.StorePermission" /> 類別的新執行個體。</summary>
      <param name="flag">
        <see cref="T:System.Security.Permissions.StorePermissionFlags" /> 值的位元組合。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="flag" /> 不是有效的 <see cref="T:System.Security.Permissions.StorePermissionFlags" /> 值組合。</exception>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.Copy">
      <summary>建立並傳回目前權限的相同複本。</summary>
      <returns>目前權限的複本。</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermission.Flags">
      <summary>取得或設定目前使用權限所允許的 <see cref="T:System.Security.Cryptography.X509Certificates.X509Store" /> 存取類型。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.StorePermissionFlags" /> 值的位元組合。</returns>
      <exception cref="T:System.ArgumentException">嘗試將這個屬性設定為無效的值。 如需有效的值，請參閱 <see cref="T:System.Security.Permissions.StorePermissionFlags" />。</exception>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.FromXml(System.Security.SecurityElement)">
      <summary>透過 XML 編碼，重新建構具有指定狀態的權限。</summary>
      <param name="securityElement">
        <see cref="T:System.Security.SecurityElement" />，包含用於重建使用權限的 XML 編碼方式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> 不是有效的使用權限項目。  
-或- 
<paramref name="securityElement" /> 中的版本號碼無效。</exception>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.Intersect(System.Security.IPermission)">
      <summary>建立並傳回目前權限與指定權限交集的權限。</summary>
      <param name="target">與目前使用權限交集的使用權限。 必須與目前權限屬於相同的類型。</param>
      <returns>代表目前權限與指定權限交集的新權限。 如果交集是空的，這個新權限就是 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 不是 <see langword="null" />，而且與目前使用權限的型別不同。</exception>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.IsSubsetOf(System.Security.IPermission)">
      <summary>判斷目前權限是否為指定權限的子集。</summary>
      <param name="target">要測試子集關聯性 (Relationship) 的使用權限。 這個使用權限必須與目前的使用權限為相同的型別。</param>
      <returns>如果目前權限是指定權限的子集，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 不是 <see langword="null" />，而且與目前使用權限的型別不同。</exception>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.IsUnrestricted">
      <summary>傳回值，指出目前的權限是否不受限制。</summary>
      <returns>如果目前的權限不受限制，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.ToXml">
      <summary>建立權限和其目前狀態的 XML 編碼方式。</summary>
      <returns>
        <see cref="T:System.Security.SecurityElement" />，包含使用權限的 XML 編碼方式，包括所有狀態資訊。</returns>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.Union(System.Security.IPermission)">
      <summary>建立目前權限與指定權限聯集的權限。</summary>
      <param name="target">要與目前權限結合的權限， 必須與目前權限屬於相同的類型。</param>
      <returns>代表目前權限與指定權限聯集的新權限。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 不是 <see langword="null" />，而且與目前使用權限的型別不同。</exception>
    </member>
    <member name="T:System.Security.Permissions.StorePermissionAttribute">
      <summary>允許將 <see cref="T:System.Security.Permissions.StorePermission" /> 的安全性動作套用至使用宣告式安全性的程式碼。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Permissions.StorePermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>使用指定的安全性動作，初始化 <see cref="T:System.Security.Permissions.StorePermissionAttribute" /> 類別的新執行個體。</summary>
      <param name="action">其中一個 <see cref="T:System.Security.Permissions.SecurityAction" /> 值。</param>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.AddToStore">
      <summary>取得或設定值，指出是否允許將程式碼加入存放區。</summary>
      <returns>如果允許加入至存放區的能力，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.StorePermissionAttribute.CreatePermission">
      <summary>建立及傳回新的 <see cref="T:System.Security.Permissions.StorePermission" />。</summary>
      <returns>與屬性對應的 <see cref="T:System.Security.Permissions.StorePermission" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.CreateStore">
      <summary>取得或設定值，指出是否允許程式碼建立存放區。</summary>
      <returns>如果允許建立存放區的能力，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.DeleteStore">
      <summary>取得或設定值，指出是否允許程式碼刪除存放區。</summary>
      <returns>如果允許刪除存放區的能力，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.EnumerateCertificates">
      <summary>取得或設定值，指出是否允許程式碼在存放區中列舉憑證。</summary>
      <returns>如果允許列舉憑證的能力，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.EnumerateStores">
      <summary>取得或設定值，指出是否允許程式碼列舉存放區。</summary>
      <returns>如果允許列舉存放區的能力，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.Flags">
      <summary>取得或設定存放區使用權限。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.StorePermissionFlags" /> 值的位元組合。 預設為 <see cref="F:System.Security.Permissions.StorePermissionFlags.NoFlags" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.OpenStore">
      <summary>取得或設定值，指出是否允許程式碼開啟存放區。</summary>
      <returns>如果允許開啟存放區的能力，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.RemoveFromStore">
      <summary>取得或設定值，指出是否允許程式碼移除存放區中的憑證。</summary>
      <returns>如果允許移除存放區中憑證的能力，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Security.Permissions.StorePermissionFlags">
      <summary>指定對 X.509 憑證存放區的允許存取。</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.AddToStore">
      <summary>將憑證加入存放區的能力。
基於安全性考量，此能力只應該授與高度信任程式碼。</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.AllFlags">
      <summary>執行所有憑證和存放區作業的能力。</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.CreateStore">
      <summary>建立新存放區的能力。
新存放區是透過呼叫 <see cref="M:System.Security.Cryptography.X509Certificates.X509Store.Open(System.Security.Cryptography.X509Certificates.OpenFlags)" /> 方法來建立的。</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.DeleteStore">
      <summary>刪除存放區的能力。
此功能不是由 <see cref="T:System.Security.Cryptography.X509Certificates.X509Store" /> 類別提供的。</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.EnumerateCertificates">
      <summary>在存放區中列舉憑證的能力。
基於隱私權考量，此能力只應該授與完全信任程式碼。</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.EnumerateStores">
      <summary>在電腦上列舉存放區的能力。
此功能不是由 <see cref="T:System.Security.Cryptography.X509Certificates.X509Store" /> 類別提供的。</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.NoFlags">
      <summary>未指定使用權限以執行任何憑證或存放區作業。</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.OpenStore">
      <summary>開啟存放區的能力。
開啟存放區的能力不包括列舉憑證 (這會造成隱私權考量) 或新增或移除憑證的能力 (這會造成安全性考量)。</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.RemoveFromStore">
      <summary>從存放區移除憑證的能力。
此能力應該只授與高度信任程式碼，因為移除憑證會導致阻斷服務。</summary>
    </member>
    <member name="T:System.Security.Permissions.StrongNameIdentityPermission">
      <summary>定義強式名稱 (Strong Name) 的識別使用權限。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>使用指定的 <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> 初始化 <see cref="T:System.Security.Permissions.PermissionState" /> 類別的新執行個體。</summary>
      <param name="state">其中一個 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> 參數不是有效的 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</exception>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)">
      <summary>為指定的強式名稱識別，初始化 <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> 類別的新執行個體。</summary>
      <param name="blob">定義強式名稱識別命名空間的公開金鑰。</param>
      <param name="name">強式名稱識別的簡單名稱部分。 這對應到組件的名稱。</param>
      <param name="version">識別的版本號碼。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="blob" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 參數是空字串 ("")。</exception>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.Copy">
      <summary>建立並傳回目前權限的相同複本。</summary>
      <returns>目前權限的複本。</returns>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.FromXml(System.Security.SecurityElement)">
      <summary>透過 XML 編碼，重新建構具有指定狀態的權限。</summary>
      <param name="e">用來重新建構權限的 XML 編碼。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> 參數不是有效的權限項目。  
-或- 
<paramref name="e" /> 參數的版本號碼無效。</exception>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.Intersect(System.Security.IPermission)">
      <summary>建立並傳回目前權限與指定權限交集的權限。</summary>
      <param name="target">要與目前權限產生交集的權限。 必須與目前權限屬於相同的類型。</param>
      <returns>新使用權限，表示目前使用權限和指定使用權限的交集。如果交集是空的，則為 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 參數不是 <see langword="null" />，而且與目前權限屬於不同的類型。</exception>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>判斷目前權限是否為指定權限的子集。</summary>
      <param name="target">要測試子集關聯性的權限。 這個權限必須與目前權限屬於相同的類型。</param>
      <returns>如果目前權限是指定權限的子集，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 參數不是 <see langword="null" />，而且與目前權限屬於不同的類型。</exception>
    </member>
    <member name="P:System.Security.Permissions.StrongNameIdentityPermission.Name">
      <summary>取得或設定強式名稱識別的簡單名稱部分。</summary>
      <returns>識別的簡單名稱。</returns>
      <exception cref="T:System.ArgumentException">此值為空字串 ("")。</exception>
      <exception cref="T:System.NotSupportedException">無法擷取此屬性值，因為它包含了模稜兩可的識別。</exception>
    </member>
    <member name="P:System.Security.Permissions.StrongNameIdentityPermission.PublicKey">
      <summary>取得或設定定義強式名稱識別命名空間的公開金鑰 Blob。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" />，其中包含識別的公開金鑰，如果沒有金鑰，則為 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException">屬性值設定為 <see langword="null" />。</exception>
      <exception cref="T:System.NotSupportedException">無法擷取此屬性值，因為它包含了模稜兩可的識別。</exception>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.ToXml">
      <summary>建立權限和其目前狀態的 XML 編碼方式。</summary>
      <returns>權限的 XML 編碼方式，包含所有狀態資訊。</returns>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.Union(System.Security.IPermission)">
      <summary>建立目前權限與指定權限聯集的權限。</summary>
      <param name="target">要與目前權限結合的權限， 必須與目前權限屬於相同的類型。</param>
      <returns>代表目前權限與指定權限聯集的新權限。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 參數不是 <see langword="null" />，而且與目前權限屬於不同的類型。  
-或- 
兩個使用權限不相等，且其中一個是另一個的子集。</exception>
    </member>
    <member name="P:System.Security.Permissions.StrongNameIdentityPermission.Version">
      <summary>取得或設定識別的版本號碼。</summary>
      <returns>識別的版本。</returns>
      <exception cref="T:System.NotSupportedException">無法擷取此屬性值，因為它包含了模稜兩可的識別。</exception>
    </member>
    <member name="T:System.Security.Permissions.StrongNameIdentityPermissionAttribute">
      <summary>允許將 <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> 的安全性動作套用至使用宣告式安全性的程式碼。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>使用指定的 <see cref="T:System.Security.Permissions.StrongNameIdentityPermissionAttribute" /> 初始化 <see cref="T:System.Security.Permissions.SecurityAction" /> 類別的新執行個體。</summary>
      <param name="action">其中一個 <see cref="T:System.Security.Permissions.SecurityAction" /> 值。</param>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermissionAttribute.CreatePermission">
      <summary>建立及傳回新的 <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" />。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" />，會對應至這個屬性。</returns>
      <exception cref="T:System.ArgumentException">此方法因為金鑰為 <see langword="null" /> 而失敗。</exception>
    </member>
    <member name="P:System.Security.Permissions.StrongNameIdentityPermissionAttribute.Name">
      <summary>取得或設定強式名稱識別的名稱。</summary>
      <returns>用來對照由安全性提供者所指定名稱的名稱。</returns>
    </member>
    <member name="P:System.Security.Permissions.StrongNameIdentityPermissionAttribute.PublicKey">
      <summary>取得或設定表示為十六進位字串的強式名稱識別的公開金鑰值。</summary>
      <returns>表示為十六進位字串的強式名稱識別的公開金鑰值。</returns>
    </member>
    <member name="P:System.Security.Permissions.StrongNameIdentityPermissionAttribute.Version">
      <summary>取得或設定強式名稱識別的版本。</summary>
      <returns>強式名稱識別的版本號碼。</returns>
    </member>
    <member name="T:System.Security.Permissions.StrongNamePublicKeyBlob">
      <summary>表示強式名稱的公開金鑰資訊 (稱為 Blob)。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Permissions.StrongNamePublicKeyBlob.#ctor(System.Byte[])">
      <summary>使用公開金鑰 Blob 未經處理的位元組來初始化 <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" /> 類別的新執行個體。</summary>
      <param name="publicKey">位元組的陣列，表示未經處理的公開金鑰 (Public Key) 資料。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="publicKey" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Permissions.StrongNamePublicKeyBlob.Equals(System.Object)">
      <summary>取得或設定數值，表示目前的公開金鑰 Blob 是否等於指定的公開金鑰 Blob。</summary>
      <param name="o">物件，包含公開金鑰 Blob。</param>
      <returns>如果目前物件的公開金鑰 Blob 等於 <paramref name="o" /> 參數的公開金鑰 Blob，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.StrongNamePublicKeyBlob.GetHashCode">
      <summary>傳回以公開金鑰為基礎的雜湊程式碼。</summary>
      <returns>以公開金鑰為基礎的雜湊程式碼。</returns>
    </member>
    <member name="M:System.Security.Permissions.StrongNamePublicKeyBlob.ToString">
      <summary>建立並傳回公開金鑰 Blob 的字串表示。</summary>
      <returns>公開金鑰 Blob 的十六進位版本。</returns>
    </member>
    <member name="T:System.Security.Permissions.TypeDescriptorPermission">
      <summary>定義 <see cref="T:System.ComponentModel.TypeDescriptor" /> 類別的部分定義存取。</summary>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>初始化 <see cref="T:System.Security.Permissions.TypeDescriptorPermission" /> 類別的新執行個體。</summary>
      <param name="state">要求的 <see cref="T:System.Security.Permissions.PermissionState" />。 只有 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> 和 <see cref="F:System.Security.Permissions.PermissionState.None" /> 有效。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> 不是有效的使用權限狀態。 只有 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> 和 <see cref="F:System.Security.Permissions.PermissionState.None" /> 有效。</exception>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.#ctor(System.Security.Permissions.TypeDescriptorPermissionFlags)">
      <summary>使用指定的使用權限旗標，初始化 <see cref="T:System.Security.Permissions.TypeDescriptorPermission" /> 類別的新執行個體。</summary>
      <param name="flag">要求的權限旗標。</param>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.Copy">
      <summary>由衍生類別實作時，建立並傳回目前權限物件的相同複本。</summary>
      <returns>目前權限物件的複本。</returns>
    </member>
    <member name="P:System.Security.Permissions.TypeDescriptorPermission.Flags">
      <summary>取得或設定型別描述元的 <see cref="T:System.Security.Permissions.TypeDescriptorPermissionFlags" />。</summary>
      <returns>型別描述元的 <see cref="T:System.Security.Permissions.TypeDescriptorPermissionFlags" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.FromXml(System.Security.SecurityElement)">
      <summary>在衍生類別中覆寫時，使用 XML 編碼方式重建具有指定狀態的安全性物件。</summary>
      <param name="securityElement">用來重新建構安全性物件的 XML 編碼方式。</param>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.Intersect(System.Security.IPermission)">
      <summary>當由衍生類別實作時，建立並傳回目前使用權限和指定使用權限交集的使用權限。</summary>
      <param name="target">要與目前權限產生交集的權限。 必須與目前權限屬於相同的類型。</param>
      <returns>新使用權限，表示目前使用權限和指定使用權限的交集。 如果交集是空的，這個新權限就是 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>當由衍生類別實作時，決定目前使用權限是否為指定使用權限的子集。</summary>
      <param name="target">要測試子集關聯性的權限。 這個權限必須與目前權限屬於相同的類型。</param>
      <returns>如果目前權限是指定權限的子集，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.IsUnrestricted">
      <summary>取得值，這個值表示是否可以透過部分信任程式碼來呼叫型別描述元。</summary>
      <returns>如果 <see cref="P:System.Security.Permissions.TypeDescriptorPermission.Flags" /> 屬性設定為 <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.ToXml">
      <summary>在衍生類別中覆寫時，建立安全性物件及其目前狀態的 XML 編碼。</summary>
      <returns>安全物件的 XML 編碼方式，包含所有狀態資訊。</returns>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.Union(System.Security.IPermission)">
      <summary>在衍生類別中覆寫時，建立目前權限與指定權限聯集的權限。</summary>
      <param name="target">要與目前權限結合的權限， 必須與目前權限屬於相同的類型。</param>
      <returns>代表目前權限與指定權限聯集的新權限。</returns>
    </member>
    <member name="T:System.Security.Permissions.TypeDescriptorPermissionAttribute">
      <summary>判斷套用至 <see cref="T:System.ComponentModel.TypeDescriptor" /> 的權限旗標。</summary>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>使用指定的 <see cref="T:System.Security.Permissions.TypeDescriptorPermissionAttribute" /> 初始化 <see cref="T:System.Security.Permissions.SecurityAction" /> 類別的新執行個體。</summary>
      <param name="action">其中一個 <see cref="T:System.Security.Permissions.SecurityAction" /> 值。</param>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermissionAttribute.CreatePermission">
      <summary>在衍生類別中覆寫時，會建立可被序列化為二進位表單以及持續與 <see cref="T:System.Security.Permissions.SecurityAction" /> 一併儲存於組件 (Assembly) 的中繼資料 (Metadata) 內的使用權限物件。</summary>
      <returns>可序列化的使用權限物件。</returns>
    </member>
    <member name="P:System.Security.Permissions.TypeDescriptorPermissionAttribute.Flags">
      <summary>取得或設定 <see cref="T:System.Security.Permissions.TypeDescriptorPermissionFlags" /> 的 <see cref="T:System.ComponentModel.TypeDescriptor" />。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.TypeDescriptorPermissionFlags" /> 的 <see cref="T:System.ComponentModel.TypeDescriptor" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.TypeDescriptorPermissionAttribute.RestrictedRegistrationAccess">
      <summary>取得或設定值，這個值表示是否可以透過部分信用來存取型別描述元。</summary>
      <returns>如果可以透過部分信任來存取型別描述元則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Security.Permissions.TypeDescriptorPermissionFlags">
      <summary>定義型別描述元的權限設定。</summary>
    </member>
    <member name="F:System.Security.Permissions.TypeDescriptorPermissionFlags.NoFlags">
      <summary>型別描述元上沒有設定權限旗標。</summary>
    </member>
    <member name="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess">
      <summary>可能透過部分信任程式碼呼叫的型別描述元。</summary>
    </member>
    <member name="T:System.Security.Permissions.UIPermission">
      <summary>控制與使用者介面和剪貼簿相關的使用權限。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>依指定使用完全限制或不限制的存取，初始化 <see cref="T:System.Security.Permissions.UIPermission" /> 類別的新執行個體。</summary>
      <param name="state">其中一個列舉值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> 參數不是有效的 <see cref="T:System.Security.Permissions.PermissionState" />。</exception>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionClipboard)">
      <summary>使用剪貼簿使用權限和禁止視窗存取，初始化 <see cref="T:System.Security.Permissions.UIPermission" /> 類別的新執行個體。</summary>
      <param name="clipboardFlag">其中一個列舉值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="clipboardFlag" /> 參數不是有效的 <see cref="T:System.Security.Permissions.UIPermissionClipboard" /> 值。</exception>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionWindow)">
      <summary>使用視窗使用權限和禁止剪貼簿存取，初始化 <see cref="T:System.Security.Permissions.UIPermission" /> 類別的新執行個體。</summary>
      <param name="windowFlag">其中一個列舉值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="windowFlag" /> 參數不是有效的 <see cref="T:System.Security.Permissions.UIPermissionWindow" /> 值。</exception>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionWindow,System.Security.Permissions.UIPermissionClipboard)">
      <summary>使用指定的視窗和剪貼簿使用權限，初始化 <see cref="T:System.Security.Permissions.UIPermission" /> 類別的新執行個體。</summary>
      <param name="windowFlag">其中一個列舉值。</param>
      <param name="clipboardFlag">其中一個列舉值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="windowFlag" /> 參數不是有效的 <see cref="T:System.Security.Permissions.UIPermissionWindow" /> 值。  
-或- 
<paramref name="clipboardFlag" /> 參數不是有效的 <see cref="T:System.Security.Permissions.UIPermissionClipboard" /> 值。</exception>
    </member>
    <member name="P:System.Security.Permissions.UIPermission.Clipboard">
      <summary>取得或設定權限所代表的剪貼簿存取。</summary>
      <returns>其中一個 <see cref="T:System.Security.Permissions.UIPermissionClipboard" /> 值。</returns>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.Copy">
      <summary>建立並傳回目前權限的相同複本。</summary>
      <returns>目前權限的複本。</returns>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.FromXml(System.Security.SecurityElement)">
      <summary>透過 XML 編碼，重新建構具有指定狀態的權限。</summary>
      <param name="esd">用以重新建構權限的 XML 編碼方式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="esd" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="esd" /> 參數不是有效的權限項目。  
-或- 
<paramref name="esd" /> 參數的版本號碼無效。</exception>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.Intersect(System.Security.IPermission)">
      <summary>建立並傳回目前權限與指定權限交集的權限。</summary>
      <param name="target">要與目前權限產生交集的權限。 必須與目前權限屬於相同的類型。</param>
      <returns>代表目前權限與指定權限交集的新權限。 如果交集是空的，這個新權限就是 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 參數不是 <see langword="null" />，而且與目前權限屬於不同的類型。</exception>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>判斷目前權限是否為指定權限的子集。</summary>
      <param name="target">要測試子集關聯性 (Relationship) 的使用權限。 這個權限必須與目前權限屬於相同的類型。</param>
      <returns>如果目前權限是指定權限的子集，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 參數不是 <see langword="null" />，而且與目前權限屬於不同的類型。</exception>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.IsUnrestricted">
      <summary>傳回值，指出目前的權限是否不受限制。</summary>
      <returns>如果目前的權限不受限制，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.ToXml">
      <summary>建立權限和其目前狀態的 XML 編碼方式。</summary>
      <returns>權限的 XML 編碼方式，包含所有狀態資訊。</returns>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.Union(System.Security.IPermission)">
      <summary>建立該使用權限和指定使用權限聯集的使用權限。</summary>
      <param name="target">要與目前權限結合的權限， 它必須與目前的使用權限有相同的型別。</param>
      <returns>代表目前權限與指定權限聯集的新權限。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 參數不是 <see langword="null" />，而且與目前權限屬於不同的類型。</exception>
    </member>
    <member name="P:System.Security.Permissions.UIPermission.Window">
      <summary>取得或設定由使用權限表示的視窗存取。</summary>
      <returns>其中一個 <see cref="T:System.Security.Permissions.UIPermissionWindow" /> 值。</returns>
    </member>
    <member name="T:System.Security.Permissions.UIPermissionAttribute">
      <summary>允許將 <see cref="T:System.Security.Permissions.UIPermission" /> 的安全性動作套用至使用宣告式安全性的程式碼。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Permissions.UIPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>使用指定的 <see cref="T:System.Security.Permissions.UIPermissionAttribute" /> 初始化 <see cref="T:System.Security.Permissions.SecurityAction" /> 類別的新執行個體。</summary>
      <param name="action">其中一個 <see cref="T:System.Security.Permissions.SecurityAction" /> 值。</param>
    </member>
    <member name="P:System.Security.Permissions.UIPermissionAttribute.Clipboard">
      <summary>取得或設定所允許的剪貼簿存取類型。</summary>
      <returns>其中一個 <see cref="T:System.Security.Permissions.UIPermissionClipboard" /> 值。</returns>
    </member>
    <member name="M:System.Security.Permissions.UIPermissionAttribute.CreatePermission">
      <summary>建立及傳回新的 <see cref="T:System.Security.Permissions.UIPermission" />。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.UIPermission" />，會對應至這個屬性。</returns>
    </member>
    <member name="P:System.Security.Permissions.UIPermissionAttribute.Window">
      <summary>取得或設定所允許的視窗資源存取類型。</summary>
      <returns>其中一個 <see cref="T:System.Security.Permissions.UIPermissionWindow" /> 值。</returns>
    </member>
    <member name="T:System.Security.Permissions.UIPermissionClipboard">
      <summary>指定允許給呼叫程式碼的剪貼簿存取類型。</summary>
    </member>
    <member name="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard">
      <summary>剪貼簿可以無限制使用。</summary>
    </member>
    <member name="F:System.Security.Permissions.UIPermissionClipboard.NoClipboard">
      <summary>剪貼簿無法使用。</summary>
    </member>
    <member name="F:System.Security.Permissions.UIPermissionClipboard.OwnClipboard">
      <summary>要將資料置放在剪貼簿上 (<see langword="Copy" />，<see langword="Cut" />) 的能力不受限制。 接受 <see langword="Paste" /> 的內建 (Intrinsic) 控制項 (例如文字方塊) 可以接受剪貼簿資料，但是必須利用程式設計方式讀取剪貼簿的使用者控制項則無法接受。</summary>
    </member>
    <member name="T:System.Security.Permissions.UIPermissionWindow">
      <summary>指定程式碼允許使用的視窗類型。</summary>
    </member>
    <member name="F:System.Security.Permissions.UIPermissionWindow.AllWindows">
      <summary>使用者可以無限制使用所有視窗和使用者輸入事件。</summary>
    </member>
    <member name="F:System.Security.Permissions.UIPermissionWindow.NoWindows">
      <summary>使用者無法使用任何視窗或使用者介面事件。 無法使用任何使用者介面。</summary>
    </member>
    <member name="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows">
      <summary>使用者只能使用 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /> 來進行繪圖，並只能使用該子視窗中使用者介面的使用者輸入事件。 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /> 的一些例子有：<see cref="T:System.Windows.Forms.MessageBox" />、常見的對話方塊控制項及瀏覽器內顯示的控制項。</summary>
    </member>
    <member name="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows">
      <summary>使用者只能使用 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /> 和 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /> 來進行繪圖，也只能在這些最上層視窗和子視窗中的使用者介面中使用使用者輸入事件。 如需詳細資訊，請參閱＜備註＞一節。</summary>
    </member>
    <member name="T:System.Security.Permissions.UrlIdentityPermission">
      <summary>定義程式碼來源 URL 的識別 (Identity) 使用權限。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>使用指定的 <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> 初始化 <see cref="T:System.Security.Permissions.PermissionState" /> 類別的新執行個體。</summary>
      <param name="state">其中一個 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> 參數不是有效的 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</exception>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> 類別的新執行個體，以表示由 <paramref name="site" /> 所描述的 URL 識別。</summary>
      <param name="site">URL 或萬用字元運算式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="site" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.FormatException">
        <paramref name="site" /> 的長度為零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="site" /> 參數的 URL、目錄或網站部分無效。</exception>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.Copy">
      <summary>建立並傳回目前權限的相同複本。</summary>
      <returns>目前權限的複本。</returns>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.FromXml(System.Security.SecurityElement)">
      <summary>透過 XML 編碼，重新建構具有指定狀態的權限。</summary>
      <param name="esd">用來重新建構權限的 XML 編碼。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="esd" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="esd" /> 參數不是有效的權限項目。  
-或- 
<paramref name="esd" /> 參數的版本號碼無效。</exception>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.Intersect(System.Security.IPermission)">
      <summary>建立並傳回目前權限與指定權限交集的權限。</summary>
      <param name="target">要與目前權限產生交集的權限。 必須與目前權限屬於相同的類型。</param>
      <returns>代表目前權限與指定權限交集的新權限。 如果交集是空的，這個新權限就是 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 參數不是 <see langword="null" />，而且與目前權限屬於不同的類型。  
-或- 
Url 屬性不是有效的 URL。</exception>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>判斷目前權限是否為指定權限的子集。</summary>
      <param name="target">要測試子集關聯性的權限。 這個權限必須與目前權限屬於相同的類型。</param>
      <returns>如果目前權限是指定權限的子集，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 參數不是 <see langword="null" />，而且與目前權限屬於不同的類型。  
-或- 
Url 屬性不是有效的 URL。</exception>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.ToXml">
      <summary>建立權限和其目前狀態的 XML 編碼方式。</summary>
      <returns>權限的 XML 編碼方式，包含所有狀態資訊。</returns>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.Union(System.Security.IPermission)">
      <summary>建立目前權限與指定權限聯集的權限。</summary>
      <param name="target">要與目前權限結合的權限， 必須與目前權限屬於相同的類型。</param>
      <returns>代表目前權限與指定權限聯集的新權限。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 參數不是 <see langword="null" />，而且與目前權限屬於不同的類型。  
-或- 
<see cref="P:System.Security.Permissions.UrlIdentityPermission.Url" /> 屬性不是有效的 URL。  
-或- 
兩個使用權限不相等，且其中一個不是另一個的子集。</exception>
      <exception cref="T:System.NotSupportedException">作業是模稜兩可的，因為權限表示多個身分識別。</exception>
    </member>
    <member name="P:System.Security.Permissions.UrlIdentityPermission.Url">
      <summary>取得或設定表示網際網路程式碼識別的 URL。</summary>
      <returns>URL，表示網際網路程式碼識別。</returns>
      <exception cref="T:System.NotSupportedException">無法擷取 URL，因為它具有模稜兩可的識別。</exception>
    </member>
    <member name="T:System.Security.Permissions.UrlIdentityPermissionAttribute">
      <summary>允許將 <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> 的安全性動作套用至使用宣告式安全性的程式碼。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>使用指定的 <see cref="T:System.Security.Permissions.UrlIdentityPermissionAttribute" /> 初始化 <see cref="T:System.Security.Permissions.SecurityAction" /> 類別的新執行個體。</summary>
      <param name="action">其中一個 <see cref="T:System.Security.Permissions.SecurityAction" /> 值。</param>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermissionAttribute.CreatePermission">
      <summary>建立及傳回新的 <see cref="T:System.Security.Permissions.UrlIdentityPermission" />。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.UrlIdentityPermission" />，會對應至這個屬性。</returns>
    </member>
    <member name="P:System.Security.Permissions.UrlIdentityPermissionAttribute.Url">
      <summary>取得或設定呼叫程式碼的完整 URL。</summary>
      <returns>符合主機指定 URL 的 URL。</returns>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermission">
      <summary>
        <see cref="T:System.Security.Permissions.WebBrowserPermission" /> 物件控制建立 WebBrowser 控制項的能力。</summary>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor">
      <summary>初始化 <see cref="T:System.Security.Permissions.WebBrowserPermission" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>指定權限狀態，以初始化 <see cref="T:System.Security.Permissions.WebBrowserPermission" /> 類別的新執行個體。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 的列舉值。</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.WebBrowserPermissionLevel)">
      <summary>指定 Web 瀏覽器權限等級，以初始化 <see cref="T:System.Security.Permissions.WebBrowserPermission" /> 類別的新執行個體。</summary>
      <param name="webBrowserPermissionLevel">
        <see cref="T:System.Security.Permissions.WebBrowserPermissionLevel" /> 的列舉值。</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Copy">
      <summary>建立並傳回目前權限的相同複本。</summary>
      <returns>目前權限的複本。</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.FromXml(System.Security.SecurityElement)">
      <summary>透過 XML 編碼，重新建構具有指定狀態的權限。</summary>
      <param name="securityElement">用來重新建構權限的 XML 編碼。</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Intersect(System.Security.IPermission)">
      <summary>建立並傳回目前權限與指定權限交集的權限。</summary>
      <param name="target">要與目前權限產生交集的權限。 必須與目前權限屬於相同的類型。</param>
      <returns>兩個使用權限的交集為描述它們都共同描述之狀態的使用權限。 只有通過這兩個原始權限的需求才對於交集權限有效。</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>判斷目前權限是否為指定權限的子集。</summary>
      <param name="target">要測試子集關聯性的權限。 這個權限必須與目前權限屬於相同的類型。</param>
      <returns>如果目前權限是指定權限的子集，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.IsUnrestricted">
      <summary>傳回值，指出目前的權限是否不受限制。</summary>
      <returns>如果 <see cref="P:System.Security.Permissions.WebBrowserPermission.Level" /> 屬性設定為 <see cref="F:System.Security.Permissions.WebBrowserPermissionLevel.Unrestricted" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.WebBrowserPermission.Level">
      <summary>取得或設定目前 Web 瀏覽器權限層級的值。</summary>
      <returns>目前 Web 瀏覽器權限層級的值。</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.ToXml">
      <summary>建立權限和其目前狀態的 XML 編碼方式。</summary>
      <returns>權限的 XML 編碼方式，包含所有狀態資訊。</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Union(System.Security.IPermission)">
      <summary>建立目前權限與指定權限聯集的權限。</summary>
      <param name="target">要與目前權限結合的權限， 必須與目前權限屬於相同的類型。</param>
      <returns>代表目前權限與指定權限聯集的新權限。</returns>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermissionAttribute">
      <summary>允許將 <see cref="T:System.Security.Permissions.WebBrowserPermission" /> 的安全性動作套用至使用宣告式安全性的程式碼。</summary>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>使用指定的 <see cref="T:System.Security.Permissions.WebBrowserPermissionAttribute" /> 初始化 <see cref="T:System.Security.Permissions.SecurityAction" /> 類別的新執行個體。</summary>
      <param name="action">其中一個 <see cref="T:System.Security.Permissions.SecurityAction" /> 值。</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermissionAttribute.CreatePermission">
      <summary>建立並傳回 <see cref="T:System.Security.Permissions.WebBrowserPermission" /> 類別的新執行個體。</summary>
      <returns>對應安全性宣告的 <see cref="T:System.Security.Permissions.WebBrowserPermission" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.WebBrowserPermissionAttribute.Level">
      <summary>取得或設定 <see cref="T:System.Security.Permissions.WebBrowserPermissionAttribute" /> 目前的 Web 瀏覽器權限層級。</summary>
      <returns>目前 Web 瀏覽器權限層級的狀態。</returns>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermissionLevel">
      <summary>指定 Web 瀏覽器的使用權限等級。</summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.None">
      <summary>無法將框架巡覽至 HTML 的 Web 瀏覽器。</summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.Safe">
      <summary>可將框架安全巡覽至 HTML，但有數項限制的 Web 瀏覽器。</summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.Unrestricted">
      <summary>可無限制地巡覽的 Web 瀏覽器。</summary>
    </member>
    <member name="T:System.Security.Permissions.ZoneIdentityPermission">
      <summary>定義程式碼來源區域的識別 (Identity) 使用權限。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>使用指定的 <see cref="T:System.Security.Permissions.ZoneIdentityPermission" /> 初始化 <see cref="T:System.Security.Permissions.PermissionState" /> 類別的新執行個體。</summary>
      <param name="state">其中一個 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> 參數不是有效的 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</exception>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.SecurityZone)">
      <summary>初始化 <see cref="T:System.Security.Permissions.ZoneIdentityPermission" /> 類別的新執行個體，以表示指定的區域身分識別。</summary>
      <param name="zone">區域識別項。</param>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.Copy">
      <summary>建立並傳回目前權限的相同複本。</summary>
      <returns>目前權限的複本。</returns>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.FromXml(System.Security.SecurityElement)">
      <summary>透過 XML 編碼，重新建構具有指定狀態的權限。</summary>
      <param name="esd">用來重新建構權限的 XML 編碼。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="esd" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="esd" /> 參數不是有效的權限項目。  
-或- 
<paramref name="esd" /> 參數的版本號碼無效。</exception>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.Intersect(System.Security.IPermission)">
      <summary>建立並傳回目前權限與指定權限交集的權限。</summary>
      <param name="target">要與目前權限產生交集的權限。 必須與目前權限屬於相同的類型。</param>
      <returns>代表目前權限與指定權限交集的新權限。 如果交集是空的，這個新權限就是 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 參數不是 <see langword="null" />，而且與目前權限屬於不同的類型。</exception>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>判斷目前權限是否為指定權限的子集。</summary>
      <param name="target">要測試子集關聯性的權限。 這個權限必須與目前權限屬於相同的類型。</param>
      <returns>如果目前權限是指定權限的子集，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 參數不是 <see langword="null" />、這個權限不代表 <see cref="F:System.Security.SecurityZone.NoZone" /> 安全性區域，而且指定的權限不等於目前權限。</exception>
    </member>
    <member name="P:System.Security.Permissions.ZoneIdentityPermission.SecurityZone">
      <summary>取得或設定目前 <see cref="T:System.Security.Permissions.ZoneIdentityPermission" /> 所表示的區域。</summary>
      <returns>其中一個 <see cref="T:System.Security.SecurityZone" /> 值。</returns>
      <exception cref="T:System.ArgumentException">參數值不是 <see cref="T:System.Security.SecurityZone" /> 的有效值。</exception>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.ToXml">
      <summary>建立權限和其目前狀態的 XML 編碼方式。</summary>
      <returns>權限的 XML 編碼方式，包含所有狀態資訊。</returns>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.Union(System.Security.IPermission)">
      <summary>建立目前權限與指定權限聯集的權限。</summary>
      <param name="target">要與目前權限結合的權限， 必須與目前權限屬於相同的類型。</param>
      <returns>代表目前權限與指定權限聯集的新權限。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 參數不是 <see langword="null" />，而且與目前權限屬於不同的類型。  
-或- 
兩個使用權限不相等，且目前使用權限不代表 <see cref="F:System.Security.SecurityZone.NoZone" /> 安全性區域。</exception>
    </member>
    <member name="T:System.Security.Permissions.ZoneIdentityPermissionAttribute">
      <summary>允許將 <see cref="T:System.Security.Permissions.ZoneIdentityPermission" /> 的安全性動作套用至使用宣告式安全性的程式碼。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>使用指定的 <see cref="T:System.Security.Permissions.ZoneIdentityPermissionAttribute" /> 初始化 <see cref="T:System.Security.Permissions.SecurityAction" /> 類別的新執行個體。</summary>
      <param name="action">其中一個 <see cref="T:System.Security.Permissions.SecurityAction" /> 值。</param>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermissionAttribute.CreatePermission">
      <summary>建立及傳回新的 <see cref="T:System.Security.Permissions.ZoneIdentityPermission" />。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.ZoneIdentityPermission" />，會對應至這個屬性。</returns>
    </member>
    <member name="P:System.Security.Permissions.ZoneIdentityPermissionAttribute.Zone">
      <summary>取得或設定由屬性值指定的內容區域中的成員資格。</summary>
      <returns>其中一個 <see cref="T:System.Security.SecurityZone" /> 值。</returns>
    </member>
    <member name="T:System.Security.Policy.AllMembershipCondition">
      <summary>表示符合所有程式碼的成員資格條件。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.#ctor">
      <summary>初始化 <see cref="T:System.Security.Policy.AllMembershipCondition" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>判斷指定的辨識項是否符合成員資格條件。</summary>
      <param name="evidence">要進行測試的辨識項集合。</param>
      <returns>一定是 <see langword="true" />。</returns>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.Copy">
      <summary>建立成員資格條件的相等複本。</summary>
      <returns>目前成員資格條件的相同新複本。</returns>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.Equals(System.Object)">
      <summary>判斷指定的成員資格條件是否為 <see cref="T:System.Security.Policy.AllMembershipCondition" />。</summary>
      <param name="o">要與 <see cref="T:System.Security.Policy.AllMembershipCondition" /> 相比較的物件。</param>
      <returns>如果指定的成員資格條件為 <see cref="T:System.Security.Policy.AllMembershipCondition" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>透過 XML 編碼，重新建構具有指定狀態的安全性物件。</summary>
      <param name="e">用來重新建構安全性物件的 XML 編碼方式。</param>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>透過 XML 編碼，重新建構具有指定狀態的安全性物件。</summary>
      <param name="e">用來重新建構安全性物件的 XML 編碼方式。</param>
      <param name="level">原則層級內容，用來解析具名的使用權限集合參考。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> 參數不是有效的成員資格條件項目。</exception>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.GetHashCode">
      <summary>取得目前成員資格條件的雜湊程式碼。</summary>
      <returns>目前成員資格條件的雜湊程式碼。</returns>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.ToString">
      <summary>建立並傳回成員資格條件的字串表示。</summary>
      <returns>成員資格條件的表示。</returns>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.ToXml">
      <summary>建立安全物件及其目前狀態的 XML 編碼方式。</summary>
      <returns>安全物件的 XML 編碼方式，包含所有狀態資訊。</returns>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>使用指定的 <see cref="T:System.Security.Policy.PolicyLevel" />，建立安全性物件的 XML 編碼方式和它的目前狀態。</summary>
      <param name="level">原則層級內容，用來解析具名使用權限集合參考。</param>
      <returns>安全物件的 XML 編碼方式，包含所有狀態資訊。</returns>
    </member>
    <member name="T:System.Security.Policy.ApplicationDirectory">
      <summary>提供應用程式目錄做為原則評估的辨識項。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectory.#ctor(System.String)">
      <summary>初始化 <see cref="T:System.Security.Policy.ApplicationDirectory" /> 類別的新執行個體。</summary>
      <param name="name">應用程式目錄的路徑。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectory.Copy">
      <summary>建立 <see cref="T:System.Security.Policy.ApplicationDirectory" /> 的新複本。</summary>
      <returns>
        <see cref="T:System.Security.Policy.ApplicationDirectory" /> 的相同新複本。</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationDirectory.Directory">
      <summary>取得應用程式目錄的路徑。</summary>
      <returns>應用程式目錄的路徑。</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectory.Equals(System.Object)">
      <summary>判斷與辨識項物件型別相同的執行個體是否為相等的。</summary>
      <param name="o">和目前辨識項物件相同型別的物件。</param>
      <returns>如果兩個執行個體相等，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectory.GetHashCode">
      <summary>取得目前應用程式目錄的雜湊程式碼。</summary>
      <returns>目前應用程式目錄的雜湊程式碼。</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectory.ToString">
      <summary>取得 <see cref="T:System.Security.Policy.ApplicationDirectory" /> 辨識項物件狀態的字串表示。</summary>
      <returns>
        <see cref="T:System.Security.Policy.ApplicationDirectory" /> 辨識項物件的狀態表示。</returns>
    </member>
    <member name="T:System.Security.Policy.ApplicationDirectoryMembershipCondition">
      <summary>藉由測試組件的應用程式目錄，判斷它是否屬於程式碼群組。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.#ctor">
      <summary>初始化 <see cref="T:System.Security.Policy.ApplicationDirectoryMembershipCondition" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>判斷指定的辨識項是否滿足成員資格條件。</summary>
      <param name="evidence">要進行測試的辨識項集合。</param>
      <returns>如果指定的辨識項符合成員資格條件，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.Copy">
      <summary>建立成員資格條件的相等複本。</summary>
      <returns>目前成員資格條件的相同新複本。</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.Equals(System.Object)">
      <summary>判斷指定的成員資格條件是否為 <see cref="T:System.Security.Policy.ApplicationDirectoryMembershipCondition" />。</summary>
      <param name="o">要與 <see cref="T:System.Security.Policy.ApplicationDirectoryMembershipCondition" /> 相比較的物件。</param>
      <returns>如果指定的成員資格條件為 <see cref="T:System.Security.Policy.ApplicationDirectoryMembershipCondition" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>透過 XML 編碼，重新建構具有指定狀態的安全性物件。</summary>
      <param name="e">用來重新建構安全性物件的 XML 編碼方式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> 參數不是有效的應用程式目錄成員資格條件項目。</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>透過 XML 編碼，重新建構具有指定狀態的安全性物件。</summary>
      <param name="e">用來重新建構安全性物件的 XML 編碼方式。</param>
      <param name="level">原則層級內容，用來解析具名的使用權限集合參考。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> 參數不是有效的應用程式目錄成員資格條件項目。</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.GetHashCode">
      <summary>取得目前成員資格條件的雜湊程式碼。</summary>
      <returns>目前成員資格條件的雜湊程式碼。</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.ToString">
      <summary>建立並傳回成員資格條件的字串表示。</summary>
      <returns>成員資格條件狀態的字串表示。</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml">
      <summary>建立安全物件及其目前狀態的 XML 編碼方式。</summary>
      <returns>安全物件的 XML 編碼方式，包含所有狀態資訊。</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>使用指定的 <see cref="T:System.Security.Policy.PolicyLevel" />，建立安全性物件的 XML 編碼方式和它的目前狀態。</summary>
      <param name="level">原則層級內容，用來解析具名使用權限集合參考。</param>
      <returns>安全物件的 XML 編碼方式，包含所有狀態資訊。</returns>
    </member>
    <member name="T:System.Security.Policy.ApplicationTrust">
      <summary>封裝關於應用程式的安全性決策。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrust.#ctor">
      <summary>初始化 <see cref="T:System.Security.Policy.ApplicationTrust" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrust.#ctor(System.ApplicationIdentity)">
      <summary>使用 <see cref="T:System.Security.Policy.ApplicationTrust" />，初始化 <see cref="T:System.ApplicationIdentity" /> 類別的新執行個體。</summary>
      <param name="identity">
        <see cref="T:System.ApplicationIdentity" />，可唯一識別應用程式。</param>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrust.#ctor(System.Security.PermissionSet,System.Collections.Generic.IEnumerable{System.Security.Policy.StrongName})">
      <summary>使用提供的授權集和完全信任組件的集合，初始化 <see cref="T:System.Security.Policy.ApplicationTrust" /> 類別的新執行個體。</summary>
      <param name="defaultGrantSet">預設使用權限集合，授與所有無特定授權的組件。</param>
      <param name="fullTrustAssemblies">強式名稱的陣列，表示在應用程式定義域中應視為完全信任的組件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fullTrustAssemblies" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="fullTrustAssemblies" /> 包含不具有 <see cref="T:System.Security.Policy.StrongName" /> 的組件。</exception>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrust.ApplicationIdentity">
      <summary>取得或設定應用程式信任物件的應用程式識別。</summary>
      <returns>應用程式信任物件的 <see cref="T:System.ApplicationIdentity" />。</returns>
      <exception cref="T:System.ArgumentNullException">無法設定 <see cref="T:System.ApplicationIdentity" />，因為它具有 <see langword="null" /> 值。</exception>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrust.DefaultGrantSet">
      <summary>取得或設定定義預設授權集的原則陳述式。</summary>
      <returns>
        <see cref="T:System.Security.Policy.PolicyStatement" />，描述預設授權。</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrust.ExtraInfo">
      <summary>取得或設定關於應用程式的額外安全性資訊。</summary>
      <returns>包含關於應用程式的額外安全性資訊之物件。</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrust.FromXml(System.Security.SecurityElement)">
      <summary>使用 XML 編碼方式的指定狀態重建 <see cref="T:System.Security.Policy.ApplicationTrust" /> 物件。</summary>
      <param name="element">用來重建 <see cref="T:System.Security.Policy.ApplicationTrust" /> 物件的 XML 編碼方式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">用於 <paramref name="element" /> 的 XML 編碼方式無效。</exception>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrust.FullTrustAssemblies">
      <summary>取得此應用程式信任的完全信任組件清單。</summary>
      <returns>完全信任組件的清單。</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun">
      <summary>取得或設定值，指出應用程式是否有必要的使用權限授權且受信任為可執行。</summary>
      <returns>如果應用程式受信任為可執行，則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrust.Persist">
      <summary>取得或設定值，指出應用程式信任資訊是否會持續 (Persist)。</summary>
      <returns>如果應用程式信任資訊會持續，則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrust.ToXml">
      <summary>建立 <see cref="T:System.Security.Policy.ApplicationTrust" /> 物件及其目前狀態的 XML 編碼方式。</summary>
      <returns>安全物件的 XML 編碼方式，包含所有狀態資訊。</returns>
    </member>
    <member name="T:System.Security.Policy.ApplicationTrustCollection">
      <summary>表示 <see cref="T:System.Security.Policy.ApplicationTrust" /> 物件的集合。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.Add(System.Security.Policy.ApplicationTrust)">
      <summary>新增項目至集合。</summary>
      <param name="trust">要加入的 <see cref="T:System.Security.Policy.ApplicationTrust" /> 物件。</param>
      <returns>要插入新項目的索引。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="trust" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">在 <paramref name="trust" /> 中所指定的 <see cref="P:System.Security.Policy.ApplicationTrust.ApplicationIdentity" /> 之 <see cref="T:System.Security.Policy.ApplicationTrust" /> 屬性為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.AddRange(System.Security.Policy.ApplicationTrust[])">
      <summary>將指定的 <see cref="T:System.Security.Policy.ApplicationTrust" /> 陣列元素複製到集合的末端。</summary>
      <param name="trusts">
        <see cref="T:System.Security.Policy.ApplicationTrust" /> 型別的陣列，包含要加入至集合的物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="trusts" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">在 <paramref name="trust" /> 中所指定的 <see cref="P:System.Security.Policy.ApplicationTrust.ApplicationIdentity" /> 之 <see cref="T:System.Security.Policy.ApplicationTrust" /> 屬性為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.AddRange(System.Security.Policy.ApplicationTrustCollection)">
      <summary>將指定 <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> 的元素複製到集合結尾。</summary>
      <param name="trusts">
        <see cref="T:System.Security.Policy.ApplicationTrustCollection" />，含有要加入至集合的物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="trusts" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">在 <paramref name="trust" /> 中所指定的 <see cref="P:System.Security.Policy.ApplicationTrust.ApplicationIdentity" /> 之 <see cref="T:System.Security.Policy.ApplicationTrust" /> 屬性為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.Clear">
      <summary>從集合中移除所有應用程式信任。</summary>
      <exception cref="T:System.ArgumentException">集合中某個項目的 <see cref="P:System.Security.Policy.ApplicationTrust.ApplicationIdentity" /> 屬性為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.CopyTo(System.Security.Policy.ApplicationTrust[],System.Int32)">
      <summary>從目標陣列的指定索引處開始，將整個集合複製到相容的一維陣列。</summary>
      <param name="array">
        <see cref="T:System.Security.Policy.ApplicationTrust" /> 型別的一維陣列，該陣列是從目前集合複製的元素目的端。</param>
      <param name="index">
        <paramref name="array" /> 中以零起始的索引，即開始複製的位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小於 <paramref name="array" /> 的下限。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> 是多維的。  
-或- 
<see cref="T:System.Security.Policy.ApplicationTrustCollection" /> 中的元素數目大於從 <paramref name="index" /> 到目的 <paramref name="array" /> 結尾的可用空間。</exception>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrustCollection.Count">
      <summary>取得集合中所含的項目數。</summary>
      <returns>集合中所含的項目數。</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.Find(System.ApplicationIdentity,System.Security.Policy.ApplicationVersionMatch)">
      <summary>取得集合中的應用程式信任，該集合符合指定的應用程式識別 (Identity)。</summary>
      <param name="applicationIdentity">
        <see cref="T:System.ApplicationIdentity" /> 物件，描述要尋找的應用程式。</param>
      <param name="versionMatch">其中一個 <see cref="T:System.Security.Policy.ApplicationVersionMatch" /> 值。</param>
      <returns>
        <see cref="T:System.Security.Policy.ApplicationTrustCollection" />，包含所有符合的 <see cref="T:System.Security.Policy.ApplicationTrust" /> 物件。</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.GetEnumerator">
      <summary>傳回物件，可用來逐一查看集合。</summary>
      <returns>
        <see cref="T:System.Security.Policy.ApplicationTrustEnumerator" />，可用來逐一查看集合。</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrustCollection.IsSynchronized">
      <summary>取得值，表示是否同步化存取集合 (執行緒安全)。</summary>
      <returns>所有情況下都是 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrustCollection.Item(System.Int32)">
      <summary>取得 <see cref="T:System.Security.Policy.ApplicationTrust" /> 物件，該物件位在集合中的指定索引處。</summary>
      <param name="index">集合中物件的以零起始的索引。</param>
      <returns>位於此集合指定索引處的 <see cref="T:System.Security.Policy.ApplicationTrust" /> 物件。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 大於或等於集合中的物件計數。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="index" /> 為負。</exception>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrustCollection.Item(System.String)">
      <summary>取得指定應用程式的 <see cref="T:System.Security.Policy.ApplicationTrust" /> 物件。</summary>
      <param name="appFullName">應用程式的完整名稱。</param>
      <returns>指定應用程式的 <see cref="T:System.Security.Policy.ApplicationTrust" /> 物件，如果找不到物件則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.Remove(System.ApplicationIdentity,System.Security.Policy.ApplicationVersionMatch)">
      <summary>從集合中移除符合指定準則的所有應用程式信任物件。</summary>
      <param name="applicationIdentity">要移除的 <see cref="T:System.ApplicationIdentity" /> 物件之 <see cref="T:System.Security.Policy.ApplicationTrust" />。</param>
      <param name="versionMatch">其中一個 <see cref="T:System.Security.Policy.ApplicationVersionMatch" /> 值。</param>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.Remove(System.Security.Policy.ApplicationTrust)">
      <summary>從集合中移除指定的應用程式信任。</summary>
      <param name="trust">要移除的 <see cref="T:System.Security.Policy.ApplicationTrust" /> 物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="trust" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">由 <paramref name="trust" /> 所指定的 <see cref="P:System.Security.Policy.ApplicationTrust.ApplicationIdentity" /> 物件之 <see cref="T:System.Security.Policy.ApplicationTrust" /> 屬性為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.RemoveRange(System.Security.Policy.ApplicationTrust[])">
      <summary>從集合移除指定陣列中的應用程式信任物件。</summary>
      <param name="trusts">型別 <see cref="T:System.Security.Policy.ApplicationTrust" /> 的一維陣列，包含要從目前集合中移除的項目。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="trusts" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.RemoveRange(System.Security.Policy.ApplicationTrustCollection)">
      <summary>從集合移除指定集合中的應用程式信任物件。</summary>
      <param name="trusts">
        <see cref="T:System.Security.Policy.ApplicationTrustCollection" />，包含要從目前集合中移除的項目。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="trusts" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrustCollection.SyncRoot">
      <summary>取得物件，可用來對集合進行同步存取。</summary>
      <returns>要用來同步化對集合的存取之物件。</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>從指定的 <see cref="T:System.Collections.ICollection" /> 索引處開始，將 <see cref="T:System.Array" /> 的元素複製到指定的 <see cref="T:System.Array" />。</summary>
      <param name="array">一維 <see cref="T:System.Array" />，是從 <see cref="T:System.Collections.ICollection" /> 複製過來的項目之目的端。 <see cref="T:System.Array" /> 必須有以零為起始的索引。</param>
      <param name="index">
        <paramref name="array" /> 中以零起始的索引，即開始複製的位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小於零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> 是多維的。  
-或- 
來源 <see cref="T:System.Collections.ICollection" /> 中的項目數目，大於 <paramref name="index" /> 到目的 <paramref name="array" /> 結尾的可用空間。</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>傳回逐一查看集合的列舉值。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" />，可用於逐一查看集合。</returns>
    </member>
    <member name="T:System.Security.Policy.ApplicationTrustEnumerator">
      <summary>代表 <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> 集合中 <see cref="T:System.Security.Policy.ApplicationTrust" /> 物件的列舉程式。</summary>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrustEnumerator.Current">
      <summary>取得 <see cref="T:System.Security.Policy.ApplicationTrust" /> 集合中目前的 <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> 物件。</summary>
      <returns>
        <see cref="T:System.Security.Policy.ApplicationTrust" /> 中的目前 <see cref="T:System.Security.Policy.ApplicationTrustCollection" />。</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustEnumerator.MoveNext">
      <summary>移至 <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> 集合中的下一個項目。</summary>
      <returns>如果列舉值成功前移至下一個項目，則為 <see langword="true" />；如果列舉值超過集合的結尾，則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustEnumerator.Reset">
      <summary>將列舉值重設為 <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> 集合的開頭。</summary>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrustEnumerator.System#Collections#IEnumerator#Current">
      <summary>取得 <see cref="T:System.Object" /> 集合中目前的 <see cref="T:System.Security.Policy.ApplicationTrustCollection" />。</summary>
      <returns>
        <see cref="T:System.Object" /> 中的目前 <see cref="T:System.Security.Policy.ApplicationTrustCollection" />。</returns>
    </member>
    <member name="T:System.Security.Policy.ApplicationVersionMatch">
      <summary>指定如何在集合中尋找應用程式信任時比對版本。</summary>
    </member>
    <member name="F:System.Security.Policy.ApplicationVersionMatch.MatchAllVersions">
      <summary>符合所有版本。</summary>
    </member>
    <member name="F:System.Security.Policy.ApplicationVersionMatch.MatchExactVersion">
      <summary>符合精確版本。</summary>
    </member>
    <member name="T:System.Security.Policy.CodeConnectAccess">
      <summary>指定要授與程式碼的網路資源存取權限。</summary>
    </member>
    <member name="M:System.Security.Policy.CodeConnectAccess.#ctor(System.String,System.Int32)">
      <summary>初始化 <see cref="T:System.Security.Policy.CodeConnectAccess" /> 類別的新執行個體。</summary>
      <param name="allowScheme">目前執行個體所表示的 URI 配置。</param>
      <param name="allowPort">目前執行個體所表示的連接埠。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="allowScheme" /> 為 <see langword="null" />。  
-或- 
 <paramref name="allowScheme" /> 為空字串 ("")。  
-或- 
 <paramref name="allowScheme" /> 包含配置內不允許的字元。  
-或- 
 <paramref name="allowPort" /> 小於 0。  
-或- 
 <paramref name="allowPort" /> 大於 65,535。</exception>
    </member>
    <member name="F:System.Security.Policy.CodeConnectAccess.AnyScheme">
      <summary>包含表示配置萬用字元的字串值。</summary>
    </member>
    <member name="M:System.Security.Policy.CodeConnectAccess.CreateAnySchemeAccess(System.Int32)">
      <summary>傳回 <see cref="T:System.Security.Policy.CodeConnectAccess" /> 執行個體，表示使用任何配置來存取指定的連接埠。</summary>
      <param name="allowPort">傳回的執行個體所表示的連接埠。</param>
      <returns>指定連接埠的 <see cref="T:System.Security.Policy.CodeConnectAccess" /> 執行個體。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="allowPort" /> 小於 0。  
-或- 
 <paramref name="allowPort" /> 大於 65,535。</exception>
    </member>
    <member name="M:System.Security.Policy.CodeConnectAccess.CreateOriginSchemeAccess(System.Int32)">
      <summary>傳回 <see cref="T:System.Security.Policy.CodeConnectAccess" /> 執行個體，表示使用程式碼的原始配置來存取指定的連接埠。</summary>
      <param name="allowPort">傳回的執行個體所表示的連接埠。</param>
      <returns>指定連接埠的 <see cref="T:System.Security.Policy.CodeConnectAccess" /> 執行個體。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="allowPort" /> 小於 0。  
-或- 
 <paramref name="allowPort" /> 大於 65,535。</exception>
    </member>
    <member name="F:System.Security.Policy.CodeConnectAccess.DefaultPort">
      <summary>包含用來代表預設連接埠的值。</summary>
    </member>
    <member name="M:System.Security.Policy.CodeConnectAccess.Equals(System.Object)">
      <summary>傳回數值，指出兩個 <see cref="T:System.Security.Policy.CodeConnectAccess" /> 物件是否代表相同的配置和連接埠。</summary>
      <param name="o">要與目前 <see cref="T:System.Security.Policy.CodeConnectAccess" /> 物件進行比較的物件。</param>
      <returns>如果這兩個物件都代表相同的配置和連接埠則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.CodeConnectAccess.GetHashCode">
      <summary>做為特定型別的雜湊函式。</summary>
      <returns>目前 <see cref="T:System.Object" /> 的雜湊碼。</returns>
    </member>
    <member name="F:System.Security.Policy.CodeConnectAccess.OriginPort">
      <summary>包含用來代表 URI (程式碼來源處) 中連接埠值的值。</summary>
    </member>
    <member name="F:System.Security.Policy.CodeConnectAccess.OriginScheme">
      <summary>包含用來代表 URL (程式碼來源的 URL) 中配置的值。</summary>
    </member>
    <member name="P:System.Security.Policy.CodeConnectAccess.Port">
      <summary>取得目前執行個體所表示的連接埠。</summary>
      <returns>會與 <see cref="T:System.Int32" /> 屬性結合使用，並辨識電腦通訊埠的 <see cref="P:System.Security.Policy.CodeConnectAccess.Scheme" /> 值。</returns>
    </member>
    <member name="P:System.Security.Policy.CodeConnectAccess.Scheme">
      <summary>取得目前執行個體所表示的 URI 配置。</summary>
      <returns>辨識 URI 配置的 <see cref="T:System.String" /> 已轉換為小寫。</returns>
    </member>
    <member name="T:System.Security.Policy.CodeGroup">
      <summary>表示抽象基底類別，程式碼群組之所有實作 (Implementation) 必須從它衍生。</summary>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)">
      <summary>初始化 <see cref="T:System.Security.Policy.CodeGroup" /> 的新執行個體。</summary>
      <param name="membershipCondition">成員資格條件，其測試辨識項以判斷這個程式碼群組是否套用原則。</param>
      <param name="policy">程式碼群組的原則陳述式，形式為要授與符合成員資格條件的程式碼之使用權限集合和屬性 (Attribute)。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="membershipCondition" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="membershipCondition" /> 參數的型別無效。  
-或- 
<paramref name="policy" /> 參數的型別無效。</exception>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.AddChild(System.Security.Policy.CodeGroup)">
      <summary>加入子程式碼群組到目前程式碼群組。</summary>
      <param name="group">要加入為子程式碼群組的程式碼群組。 這個新的子程式碼群組會加入至清單的結尾處。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="group" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="group" /> 參數不是有效程式碼群組。</exception>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.AttributeString">
      <summary>取得程式碼群組之原則陳述式屬性 (Attribute) 的字串表示。</summary>
      <returns>程式碼群組之原則陳述式屬性的字串表示。</returns>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.Children">
      <summary>取得或設定程式碼群組的子程式碼群組之排序清單。</summary>
      <returns>子程式碼群組清單。</returns>
      <exception cref="T:System.ArgumentNullException">嘗試將這個屬性設定為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">嘗試以不是 <see cref="T:System.Security.Policy.CodeGroup" /> 物件的子系清單來設定此屬性。</exception>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.Copy">
      <summary>在衍生類別中覆寫時，製作目前程式碼群組的深層複本 (Deep Copy)。</summary>
      <returns>目前程式碼群組的相等複本，包含它的成員資格條件和子程式碼群組。</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>在衍生類別中覆寫時，序列化衍生的程式碼群組特定的屬性和內部狀態，並加入序列化到指定的 <see cref="T:System.Security.SecurityElement" />。</summary>
      <param name="element">要加入到序列化的 XML 編碼方式。</param>
      <param name="level">程式碼群組所存在的原則層級。</param>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.Description">
      <summary>取得或設定程式碼群組的描述。</summary>
      <returns>程式碼群組的描述。</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.Equals(System.Object)">
      <summary>判斷指定的程式碼群組是否相等於目前程式碼群組。</summary>
      <param name="o">要和目前程式碼群組比較的程式碼群組。</param>
      <returns>如果指定的程式碼群組相等於目前程式碼群組，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.Equals(System.Security.Policy.CodeGroup,System.Boolean)">
      <summary>判斷指定的程式碼群組是否等於目前程式碼群組，若有指定則檢查子程式碼群組。</summary>
      <param name="cg">要和目前程式碼群組比較的程式碼群組。</param>
      <param name="compareChildren">若也要比較子程式碼群組，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
      <returns>如果指定的程式碼群組相等於目前程式碼群組，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement)">
      <summary>使用 XML 編碼方式重建具有指定狀態的安全性物件。</summary>
      <param name="e">用來重新建構安全性物件的 XML 編碼方式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>使用 XML 編碼方式重建具有指定狀態和原則層級的安全性物件。</summary>
      <param name="e">用來重新建構安全性物件的 XML 編碼方式。</param>
      <param name="level">程式碼群組所存在的原則層級。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.GetHashCode">
      <summary>取得目前程式碼群組的雜湊程式碼。</summary>
      <returns>目前程式碼群組的雜湊程式碼。</returns>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.MembershipCondition">
      <summary>取得或設定程式碼群組的成員資格條件。</summary>
      <returns>判斷程式碼群組可套用哪個辨識項的成員資格條件。</returns>
      <exception cref="T:System.ArgumentNullException">嘗試將這個參數設定為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.MergeLogic">
      <summary>在衍生類別中覆寫時，取得程式碼群組的合併邏輯。</summary>
      <returns>程式碼群組之合併邏輯的描述。</returns>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.Name">
      <summary>取得或設定程式碼群組的名稱。</summary>
      <returns>程式碼群組的名稱。</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>在衍生類別中覆寫時，從指定的 <see cref="T:System.Security.SecurityElement" /> 重建衍生程式碼群組特定的屬性和內部狀態。</summary>
      <param name="e">用來重新建構安全性物件的 XML 編碼方式。</param>
      <param name="level">程式碼群組所存在的原則層級。</param>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.PermissionSetName">
      <summary>取得程式碼群組的具名使用權限之名稱。</summary>
      <returns>原則層級的具名使用權限集合的名稱。</returns>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.PolicyStatement">
      <summary>取得或設定與程式碼群組相關的原則陳述式。</summary>
      <returns>程式碼群組的原則陳述式。</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.RemoveChild(System.Security.Policy.CodeGroup)">
      <summary>移除指定的子程式碼群組。</summary>
      <param name="group">要做為子程式碼群組來移除的程式碼群組。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="group" /> 參數不是目前程式碼群組的直接子程式碼群組。</exception>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.Resolve(System.Security.Policy.Evidence)">
      <summary>在衍生類別中覆寫時，解析程式碼群組的原則和它的子代 (Descendant) 辨識項集。</summary>
      <param name="evidence">組件的辨識項。</param>
      <returns>原則陳述式，包含由程式碼群組以選擇性屬性授與的使用權限，或為 <see langword="null" />，如果程式碼群組無法套用 (成員資格條件不符合指定的辨識項)。</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
      <summary>在衍生類別中覆寫時，解析符合的程式碼群組。</summary>
      <param name="evidence">組件的辨識項。</param>
      <returns>
        <see cref="T:System.Security.Policy.CodeGroup" />，是符合程式碼群組的樹狀結構的根 (Root)。</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.ToXml">
      <summary>建立安全物件及其目前狀態的 XML 編碼方式。</summary>
      <returns>安全物件的 XML 編碼方式，包含所有狀態資訊。</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>建立安全性物件、它的目前狀態和程式碼所存在的原則層級的 XML 編碼方式。</summary>
      <param name="level">程式碼群組所存在的原則層級。</param>
      <returns>安全物件的 XML 編碼方式，包含所有狀態資訊。</returns>
    </member>
    <member name="T:System.Security.Policy.Evidence">
      <summary>定義構成安全性原則決策輸入的資訊集。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Policy.Evidence.#ctor">
      <summary>初始化 <see cref="T:System.Security.Policy.Evidence" /> 類別的新的空執行個體。</summary>
    </member>
    <member name="M:System.Security.Policy.Evidence.#ctor(System.Object[],System.Object[])">
      <summary>從多重主應用程式和組件辨識項集合初始化 <see cref="T:System.Security.Policy.Evidence" /> 類別的新執行個體。</summary>
      <param name="hostEvidence">用來建立新執行個體的主應用程式辨識項。</param>
      <param name="assemblyEvidence">用來建立新執行個體的組件辨識項。</param>
    </member>
    <member name="M:System.Security.Policy.Evidence.#ctor(System.Security.Policy.Evidence)">
      <summary>從現有物件的淺層複本 (Shallow Copy) 初始化 <see cref="T:System.Security.Policy.Evidence" /> 類別的新執行個體。</summary>
      <param name="evidence">
        <see cref="T:System.Security.Policy.Evidence" /> 執行個體，用來建立新的執行個體。 這個執行個體不會深層複製。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="evidence" /> 參數不是 <see cref="T:System.Security.Policy.Evidence" /> 的有效執行個體。</exception>
    </member>
    <member name="M:System.Security.Policy.Evidence.#ctor(System.Security.Policy.EvidenceBase[],System.Security.Policy.EvidenceBase[])">
      <summary>從多重主應用程式和組件辨識項集合初始化 <see cref="T:System.Security.Policy.Evidence" /> 類別的新執行個體。</summary>
      <param name="hostEvidence">用來建立新執行個體的主應用程式辨識項。</param>
      <param name="assemblyEvidence">用來建立新執行個體的組件辨識項。</param>
    </member>
    <member name="M:System.Security.Policy.Evidence.AddAssembly(System.Object)">
      <summary>加入指定的組件辨識項到辨識項集合。</summary>
      <param name="id">任何辨識項物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> 為 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="id" /> 不可序列化。</exception>
    </member>
    <member name="M:System.Security.Policy.Evidence.AddAssemblyEvidence``1(``0)">
      <summary>將指定之型別的辨識項物件加入組件提供的辨識項清單中。</summary>
      <param name="evidence">要加入的組件辨識項。</param>
      <typeparam name="T">
        <paramref name="evidence" /> 中物件的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="T" /> 型別的辨識項已經在清單中。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="evidence" /> 不可序列化。</exception>
    </member>
    <member name="M:System.Security.Policy.Evidence.AddHost(System.Object)">
      <summary>加入主應用程式提供的指定辨識項到辨識項集合。</summary>
      <param name="id">任何辨識項物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> 為 null。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="id" /> 不可序列化。</exception>
    </member>
    <member name="M:System.Security.Policy.Evidence.AddHostEvidence``1(``0)">
      <summary>將指定之型別的主辨識項加入主辨識項集合中。</summary>
      <param name="evidence">要加入的主辨識項。</param>
      <typeparam name="T">
        <paramref name="evidence" /> 中物件的型別。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="T" /> 型別的辨識項已經在清單中。</exception>
    </member>
    <member name="M:System.Security.Policy.Evidence.Clear">
      <summary>從辨識項集合中移除主辨識項和組件辨識項。</summary>
    </member>
    <member name="M:System.Security.Policy.Evidence.Clone">
      <summary>傳回此辨識項物件的複本。</summary>
      <returns>此辨識項物件的複本。</returns>
    </member>
    <member name="M:System.Security.Policy.Evidence.CopyTo(System.Array,System.Int32)">
      <summary>複製辨識項物件到 <see cref="T:System.Array" />。</summary>
      <param name="array">會複製辨識項物的目標陣列。</param>
      <param name="index">陣列中以零起始的位置，會從該處開始複製辨識項物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 為 null。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 超出目標陣列的範圍。</exception>
    </member>
    <member name="P:System.Security.Policy.Evidence.Count">
      <summary>取得辨識項集合 (Evidence Set) 中的辨識項物件數。</summary>
      <returns>辨識項集合中的辨識項物件數。</returns>
    </member>
    <member name="M:System.Security.Policy.Evidence.GetAssemblyEnumerator">
      <summary>列舉組件提供的辨識項。</summary>
      <returns>辨識項列舉值，由 <see cref="M:System.Security.Policy.Evidence.AddAssembly(System.Object)" /> 方法所加入。</returns>
    </member>
    <member name="M:System.Security.Policy.Evidence.GetAssemblyEvidence``1">
      <summary>取得集合中指定之型別的組件辨識項。</summary>
      <typeparam name="T">要取得的辨識項型別。</typeparam>
      <returns>組件辨識項集合中型別 <paramref name="T" /> 的辨識項。</returns>
    </member>
    <member name="M:System.Security.Policy.Evidence.GetEnumerator">
      <summary>列舉集合中所有由主應用程式和組件提供的辨識碼。</summary>
      <returns>辨識碼列舉值，由 <see cref="M:System.Security.Policy.Evidence.AddHost(System.Object)" /> 方法和 <see cref="M:System.Security.Policy.Evidence.AddAssembly(System.Object)" /> 方法所加入。</returns>
    </member>
    <member name="M:System.Security.Policy.Evidence.GetHostEnumerator">
      <summary>列舉主應用程式提供的辨識碼。</summary>
      <returns>辨識項列舉值，由 <see cref="M:System.Security.Policy.Evidence.AddHost(System.Object)" /> 方法所加入。</returns>
    </member>
    <member name="M:System.Security.Policy.Evidence.GetHostEvidence``1">
      <summary>取得集合中指定之型別的主辨識項。</summary>
      <typeparam name="T">要取得的辨識項型別。</typeparam>
      <returns>主辨識項集合中型別 <paramref name="T" /> 的辨識項。</returns>
    </member>
    <member name="P:System.Security.Policy.Evidence.IsReadOnly">
      <summary>取得值，指出辨識項集合是否為唯讀。</summary>
      <returns>永遠為 <see langword="false" />，因為不支援唯讀辨識項集合。</returns>
    </member>
    <member name="P:System.Security.Policy.Evidence.IsSynchronized">
      <summary>取得值，指出辨識項集合是否為安全執行緒 (Thread-Safe)。</summary>
      <returns>永遠為 <see langword="false" /> (因為不支援安全執行緒辨識項集合)。</returns>
    </member>
    <member name="P:System.Security.Policy.Evidence.Locked">
      <summary>取得或設定值，指出辨識項是否被鎖定。</summary>
      <returns>如果辨識項被鎖定，則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.Evidence.Merge(System.Security.Policy.Evidence)">
      <summary>合併指定的辨識項集合到目前的辨識項集合中。</summary>
      <param name="evidence">要合併到目前辨識項集合的辨識項集合。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="evidence" /> 參數不是 <see cref="T:System.Security.Policy.Evidence" /> 的有效執行個體。</exception>
      <exception cref="T:System.Security.SecurityException">
        <see cref="P:System.Security.Policy.Evidence.Locked" /> 為 <see langword="true" />，呼叫這個方法的程式碼沒有 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />，且 <paramref name="evidence" /> 參數有非空白的主應用程式清單。</exception>
    </member>
    <member name="M:System.Security.Policy.Evidence.RemoveType(System.Type)">
      <summary>從主列舉型別和組件列舉型別中移除指定型別的辨識項。</summary>
      <param name="t">要移除的辨識項型別。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="t" /> 為 null。</exception>
    </member>
    <member name="P:System.Security.Policy.Evidence.SyncRoot">
      <summary>取得同步 (Synchronization) 根 (Root)。</summary>
      <returns>因為不支援辨識項集合的同步處理，所以永遠為 <see langword="this" /> (在 Visual Basic 中為 <see langword="Me" />)。</returns>
    </member>
    <member name="T:System.Security.Policy.EvidenceBase">
      <summary>提供基底類別，所有要做為辨識項使用的物件都必須衍生自該類別。</summary>
    </member>
    <member name="M:System.Security.Policy.EvidenceBase.#ctor">
      <summary>初始化 <see cref="T:System.Security.Policy.EvidenceBase" /> 類別的新執行個體。</summary>
      <exception cref="T:System.InvalidOperationException">要用來做為辨識項的物件不是可序列化的。</exception>
    </member>
    <member name="M:System.Security.Policy.EvidenceBase.Clone">
      <summary>建立新物件，該物件是目前執行個體的完整複本。</summary>
      <returns>此辨識項物件的複本。</returns>
    </member>
    <member name="T:System.Security.Policy.FileCodeGroup">
      <summary>將管理位於程式碼組件 (Assembly) 上檔案的使用權限授權給符合成員資格條件的程式碼組件。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Policy.FileCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Permissions.FileIOPermissionAccess)">
      <summary>初始化 <see cref="T:System.Security.Policy.FileCodeGroup" /> 類別的新執行個體。</summary>
      <param name="membershipCondition">成員資格條件，其測試辨識項以判斷這個程式碼群組是否套用原則。</param>
      <param name="access">其中一個 <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 值。 這個值是用來建構所授權的 <see cref="T:System.Security.Permissions.FileIOPermission" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="membershipCondition" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="membershipCondition" /> 參數的型別無效。  
-或- 
<paramref name="access" /> 參數的型別無效。</exception>
    </member>
    <member name="P:System.Security.Policy.FileCodeGroup.AttributeString">
      <summary>取得程式碼群組之原則陳述式屬性 (Attribute) 的字串表示。</summary>
      <returns>一定是 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Security.Policy.FileCodeGroup.Copy">
      <summary>製作目前程式碼群組的深層複本 (Deep Copy)。</summary>
      <returns>目前程式碼群組的相等複本，包含它的成員資格條件和子程式碼群組。</returns>
    </member>
    <member name="M:System.Security.Policy.FileCodeGroup.Equals(System.Object)">
      <summary>判斷指定的程式碼群組是否相等於目前程式碼群組。</summary>
      <param name="o">要和目前程式碼群組比較的程式碼群組。</param>
      <returns>如果指定的程式碼群組相等於目前程式碼群組，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.FileCodeGroup.GetHashCode">
      <summary>取得目前程式碼群組的雜湊程式碼。</summary>
      <returns>目前程式碼群組的雜湊程式碼。</returns>
    </member>
    <member name="P:System.Security.Policy.FileCodeGroup.MergeLogic">
      <summary>取得合併邏輯。</summary>
      <returns>字串 "Union"。</returns>
    </member>
    <member name="P:System.Security.Policy.FileCodeGroup.PermissionSetName">
      <summary>取得程式碼群組的具名使用權限之名稱。</summary>
      <returns>字串「相同目錄 FileIO-」和存取類型的串連。</returns>
    </member>
    <member name="M:System.Security.Policy.FileCodeGroup.Resolve(System.Security.Policy.Evidence)">
      <summary>解析程式碼群組的原則和其辨識項集合的子代。</summary>
      <param name="evidence">組件的辨識項。</param>
      <returns>原則陳述式，包含由程式碼群組使用選擇性屬性授與的使用權限，或為 <see langword="null" />，如果程式碼群組無法套用 (成員資格條件不符合指定的辨識項)。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Policy.PolicyException">目前原則是 <see langword="null" />。  
-或- 
一個以上的程式碼群組 (包含父程式碼群組和所有的子程式碼群組) 標記為 <see cref="F:System.Security.Policy.PolicyStatementAttribute.Exclusive" />。</exception>
    </member>
    <member name="M:System.Security.Policy.FileCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
      <summary>解析符合的程式碼群組。</summary>
      <param name="evidence">組件的辨識項。</param>
      <returns>
        <see cref="T:System.Security.Policy.CodeGroup" />，是符合程式碼群組的樹狀結構的根 (Root)。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="T:System.Security.Policy.FirstMatchCodeGroup">
      <summary>允許由程式碼群組和第一個相符子程式碼群組的原則陳述式聯合定義安全性原則。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Policy.FirstMatchCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)">
      <summary>初始化 <see cref="T:System.Security.Policy.FirstMatchCodeGroup" /> 類別的新執行個體。</summary>
      <param name="membershipCondition">成員資格條件，其測試辨識項以判斷這個程式碼群組是否套用原則。</param>
      <param name="policy">程式碼群組的原則陳述式，形式為要授與符合成員資格條件的程式碼之使用權限集合和屬性 (Attribute)。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="membershipCondition" /> 參數的型別無效。  
-或- 
<paramref name="policy" /> 參數的型別無效。</exception>
    </member>
    <member name="M:System.Security.Policy.FirstMatchCodeGroup.Copy">
      <summary>製作程式碼群組的深層複本 (Deep Copy)。</summary>
      <returns>程式碼群組的對等複本，包含它的成員資格條件和子程式碼群組。</returns>
    </member>
    <member name="P:System.Security.Policy.FirstMatchCodeGroup.MergeLogic">
      <summary>取得合併邏輯。</summary>
      <returns>字串 "First Match"。</returns>
    </member>
    <member name="M:System.Security.Policy.FirstMatchCodeGroup.Resolve(System.Security.Policy.Evidence)">
      <summary>解析程式碼群組的原則和其辨識項集合的子代。</summary>
      <param name="evidence">組件的辨識項。</param>
      <returns>原則陳述式，包含由程式碼群組使用選擇性屬性授與的使用權限，或為 <see langword="null" />，如果程式碼群組無法套用 (成員資格條件不符合指定的辨識項)。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Policy.PolicyException">一個以上的程式碼群組 (包含父程式碼群組和任何的子程式碼群組) 標記為 <see cref="F:System.Security.Policy.PolicyStatementAttribute.Exclusive" />。</exception>
    </member>
    <member name="M:System.Security.Policy.FirstMatchCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
      <summary>解析符合的程式碼群組。</summary>
      <param name="evidence">組件的辨識項。</param>
      <returns>
        <see cref="T:System.Security.Policy.CodeGroup" />，是符合程式碼群組的樹狀結構的根 (Root)。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="T:System.Security.Policy.GacInstalled">
      <summary>請確認全域組件快取 (GAC) 中有產生程式碼組件，以做為原則評估的辨識項。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Policy.GacInstalled.#ctor">
      <summary>初始化 <see cref="T:System.Security.Policy.GacInstalled" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Security.Policy.GacInstalled.Copy">
      <summary>建立目前物件的對等複本。</summary>
      <returns>
        <see cref="T:System.Security.Policy.GacInstalled" /> 的對等複本。</returns>
    </member>
    <member name="M:System.Security.Policy.GacInstalled.CreateIdentityPermission(System.Security.Policy.Evidence)">
      <summary>建立對應至目前物件的新識別權限。</summary>
      <param name="evidence">要建構識別使用權限的來源 <see cref="T:System.Security.Policy.Evidence" />。</param>
      <returns>對應至目前物件的新識別權限。</returns>
    </member>
    <member name="M:System.Security.Policy.GacInstalled.Equals(System.Object)">
      <summary>表示目前的物件是否相當於指定的物件。</summary>
      <param name="o">要與目前物件比較的物件。</param>
      <returns>如果 <paramref name="o" /> 為 <see cref="T:System.Security.Policy.GacInstalled" /> 物件，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.GacInstalled.GetHashCode">
      <summary>傳回目前物件的雜湊碼。</summary>
      <returns>目前物件的雜湊碼。</returns>
    </member>
    <member name="M:System.Security.Policy.GacInstalled.ToString">
      <summary>傳回代表目前物件的字串。</summary>
      <returns>目前物件的字串表示。</returns>
    </member>
    <member name="T:System.Security.Policy.GacMembershipCondition">
      <summary>藉由測試組件的全域組件快取成員資格，決定組件是否屬於程式碼群組。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.#ctor">
      <summary>初始化 <see cref="T:System.Security.Policy.GacMembershipCondition" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>指示指定的辨識項是否符合成員資格條件。</summary>
      <param name="evidence">要進行測試的 <see cref="T:System.Security.Policy.Evidence" />。</param>
      <returns>如果指定的辨識項符合成員資格條件，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.Copy">
      <summary>建立成員資格條件的相等複本。</summary>
      <returns>新的 <see cref="T:System.Security.Policy.GacMembershipCondition" /> 物件。</returns>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.Equals(System.Object)">
      <summary>表示目前的物件是否相當於指定的物件。</summary>
      <param name="o">要與目前物件比較的物件。</param>
      <returns>如果 <paramref name="o" /> 是 <see cref="T:System.Security.Policy.GacMembershipCondition" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>使用指定的 XML 編碼，重建安全性物件。</summary>
      <param name="e">
        <see cref="T:System.Security.SecurityElement" />，包含用來重建安全性物件的 XML 編碼。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> 不是有效的成員資格條件項目。</exception>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>使用指定的 XML 編碼，以指定的原則層級內容重建安全性物件。</summary>
      <param name="e">
        <see cref="T:System.Security.SecurityElement" />，包含用來重建安全性物件的 XML 編碼。</param>
      <param name="level">
        <see cref="T:System.Security.Policy.PolicyLevel" /> 內容，用於解析 <see cref="T:System.Security.NamedPermissionSet" /> 參考。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> 不是有效的成員資格條件項目。</exception>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.GetHashCode">
      <summary>取得目前成員資格條件的雜湊程式碼。</summary>
      <returns>0 (零)。</returns>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.ToString">
      <summary>傳回成員資格條件的字串表示。</summary>
      <returns>成員資格條件的字串表示。</returns>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.ToXml">
      <summary>建立安全物件及其目前狀態的 XML 編碼方式。</summary>
      <returns>
        <see cref="T:System.Security.SecurityElement" />，包含安全性物件的 XML 編碼，含任何狀態資訊。</returns>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>使用指定的原則層級內容，建立安全性物件的 XML 編碼和它的目前狀態。</summary>
      <param name="level">
        <see cref="T:System.Security.Policy.PolicyLevel" /> 內容，用於解析 <see cref="T:System.Security.NamedPermissionSet" /> 參考。</param>
      <returns>
        <see cref="T:System.Security.SecurityElement" />，包含安全性物件的 XML 編碼，含任何狀態資訊。</returns>
    </member>
    <member name="T:System.Security.Policy.Hash">
      <summary>提供組件 (Assembly) 雜湊值 (Hash Value) 的相關辨識項。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Policy.Hash.#ctor(System.Reflection.Assembly)">
      <summary>初始化 <see cref="T:System.Security.Policy.Hash" /> 類別的新執行個體。</summary>
      <param name="assembly">要計算其雜湊值的組件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assembly" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="assembly" /> 不是執行階段 <see cref="T:System.Reflection.Assembly" /> 物件。</exception>
    </member>
    <member name="M:System.Security.Policy.Hash.CreateMD5(System.Byte[])">
      <summary>建立包含 <see cref="T:System.Security.Policy.Hash" /> 雜湊值的 <see cref="T:System.Security.Cryptography.MD5" /> 物件。</summary>
      <param name="md5">位元組陣列，包含 <see cref="T:System.Security.Cryptography.MD5" /> 雜湊值。</param>
      <returns>物件，包含 <paramref name="md5" /> 參數提供的雜湊值。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="md5" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Policy.Hash.CreateSHA1(System.Byte[])">
      <summary>建立包含 <see cref="T:System.Security.Policy.Hash" /> 雜湊值的 <see cref="T:System.Security.Cryptography.SHA1" /> 物件。</summary>
      <param name="sha1">位元組陣列，包含 <see cref="T:System.Security.Cryptography.SHA1" /> 雜湊值。</param>
      <returns>物件，包含 <paramref name="sha1" /> 參數提供的雜湊值。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sha1" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Policy.Hash.CreateSHA256(System.Byte[])">
      <summary>建立包含 <see cref="T:System.Security.Policy.Hash" /> 雜湊值的 <see cref="T:System.Security.Cryptography.SHA256" /> 物件。</summary>
      <param name="sha256">位元組陣列，包含 <see cref="T:System.Security.Cryptography.SHA256" /> 雜湊值。</param>
      <returns>雜湊物件，包含 <paramref name="sha256" /> 參數提供的雜湊值。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sha256" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Policy.Hash.GenerateHash(System.Security.Cryptography.HashAlgorithm)">
      <summary>使用指定的雜湊演算法計算組件的雜湊值。</summary>
      <param name="hashAlg">用來計算組件雜湊值的雜湊演算法。</param>
      <returns>位元組陣列，表示組件的雜湊值。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hashAlg" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.Security.SecurityException">無法產生組件的雜湊值。</exception>
    </member>
    <member name="M:System.Security.Policy.Hash.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>取得具有參數名稱和額外例外狀況 (Exception) 資訊的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 物件。</summary>
      <param name="info">存放序列物件資料的物件。</param>
      <param name="context">關於來源或目的端的內容資訊。</param>
    </member>
    <member name="P:System.Security.Policy.Hash.MD5">
      <summary>取得組件的 <see cref="T:System.Security.Cryptography.MD5" /> 雜湊值。</summary>
      <returns>位元組陣列，表示組件的 <see cref="T:System.Security.Cryptography.MD5" /> 雜湊值。</returns>
    </member>
    <member name="P:System.Security.Policy.Hash.SHA1">
      <summary>取得組件的 <see cref="T:System.Security.Cryptography.SHA1" /> 雜湊值。</summary>
      <returns>位元組陣列，表示組件的 <see cref="T:System.Security.Cryptography.SHA1" /> 雜湊值。</returns>
    </member>
    <member name="P:System.Security.Policy.Hash.SHA256">
      <summary>取得組件的 <see cref="T:System.Security.Cryptography.SHA256" /> 雜湊值。</summary>
      <returns>位元組陣列，表示組件的 <see cref="T:System.Security.Cryptography.SHA256" /> 雜湊值。</returns>
    </member>
    <member name="M:System.Security.Policy.Hash.ToString">
      <summary>傳回目前 <see cref="T:System.Security.Policy.Hash" /> 的字串表示。</summary>
      <returns>目前 <see cref="T:System.Security.Policy.Hash" /> 的表示。</returns>
    </member>
    <member name="T:System.Security.Policy.HashMembershipCondition">
      <summary>測試組件的雜湊值 (Hash Value) 藉此判斷組件是否屬於程式碼群組。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.#ctor(System.Security.Cryptography.HashAlgorithm,System.Byte[])">
      <summary>使用判斷成員資格的雜湊演算法和雜湊值，初始化 <see cref="T:System.Security.Policy.HashMembershipCondition" /> 類別的新執行個體。</summary>
      <param name="hashAlg">用來計算組件雜湊值的雜湊演算法。</param>
      <param name="value">用來測試的雜湊值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hashAlg" /> 參數為 <see langword="null" />。  
-或- 
<paramref name="value" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="hashAlg" /> 參數不是有效的雜湊演算法。</exception>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>判斷指定的辨識項是否符合成員資格條件。</summary>
      <param name="evidence">要進行測試的辨識項集合。</param>
      <returns>如果指定的辨識項符合成員資格條件，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.Copy">
      <summary>建立成員資格條件的相等複本。</summary>
      <returns>目前成員資格條件的相同新複本。</returns>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.Equals(System.Object)">
      <summary>判斷來自指定物件的 <see cref="P:System.Security.Policy.HashMembershipCondition.HashValue" /> 和 <see cref="P:System.Security.Policy.HashMembershipCondition.HashAlgorithm" /> 是否等同於目前 <see cref="P:System.Security.Policy.HashMembershipCondition.HashValue" /> 中所包含的 <see cref="P:System.Security.Policy.HashMembershipCondition.HashAlgorithm" /> 和 <see cref="T:System.Security.Policy.HashMembershipCondition" />。</summary>
      <param name="o">要與目前 <see cref="T:System.Security.Policy.HashMembershipCondition" /> 比較的物件。</param>
      <returns>如果來自指定物件的 <see cref="P:System.Security.Policy.HashMembershipCondition.HashValue" /> 和 <see cref="P:System.Security.Policy.HashMembershipCondition.HashAlgorithm" /> 等同於目前 <see cref="P:System.Security.Policy.HashMembershipCondition.HashValue" /> 中所包含的 <see cref="P:System.Security.Policy.HashMembershipCondition.HashAlgorithm" /> 和 <see cref="T:System.Security.Policy.HashMembershipCondition" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>透過 XML 編碼，重新建構具有指定狀態的安全性物件。</summary>
      <param name="e">用來重新建構安全性物件的 XML 編碼方式。</param>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>透過 XML 編碼，重新建構具有指定狀態的安全性物件。</summary>
      <param name="e">用來重新建構安全性物件的 XML 編碼方式。</param>
      <param name="level">原則層級內容，用來解析具名的使用權限集合參考。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> 參數不是有效的成員資格條件項目。</exception>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.GetHashCode">
      <summary>取得目前成員資格條件的雜湊程式碼。</summary>
      <returns>目前成員資格條件的雜湊程式碼。</returns>
    </member>
    <member name="P:System.Security.Policy.HashMembershipCondition.HashAlgorithm">
      <summary>取得或設定要用於成員資格條件的雜湊演算法。</summary>
      <returns>雜湊演算法，用於成員資格條件。</returns>
      <exception cref="T:System.ArgumentNullException">嘗試將 <see cref="P:System.Security.Policy.HashMembershipCondition.HashAlgorithm" /> 設定為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Security.Policy.HashMembershipCondition.HashValue">
      <summary>取得或設定用來測試成員資格條件的雜湊值。</summary>
      <returns>用來測試成員資格條件的雜湊值。</returns>
      <exception cref="T:System.ArgumentNullException">嘗試將 <see cref="P:System.Security.Policy.HashMembershipCondition.HashValue" /> 設定為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
      <summary>執行於整個物件 Graph 已經還原序列化時。</summary>
      <param name="sender">初始化回呼 (Callback) 的物件。 這個參數的功能目前未實作。</param>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>將序列化目標物件所需的資料填入 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</summary>
      <param name="info">要以資料填入的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">此序列化的目的端 <see cref="T:System.Runtime.Serialization.StreamingContext" />。</param>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.ToString">
      <summary>建立並傳回成員資格條件的字串表示。</summary>
      <returns>成員資格條件狀態的字串表示。</returns>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.ToXml">
      <summary>建立安全物件及其目前狀態的 XML 編碼方式。</summary>
      <returns>安全物件的 XML 編碼方式，包含所有狀態資訊。</returns>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>使用指定的 <see cref="T:System.Security.Policy.PolicyLevel" />，建立安全性物件的 XML 編碼方式和它的目前狀態。</summary>
      <param name="level">原則層級內容，用來解析具名使用權限集合參考。</param>
      <returns>安全物件的 XML 編碼方式，包含所有狀態資訊。</returns>
    </member>
    <member name="T:System.Security.Policy.IIdentityPermissionFactory">
      <summary>定義建立新識別 (Identity) 使用權限的方法。</summary>
    </member>
    <member name="M:System.Security.Policy.IIdentityPermissionFactory.CreateIdentityPermission(System.Security.Policy.Evidence)">
      <summary>建立指定辨識項的新識別使用權限。</summary>
      <param name="evidence">要建立新識別使用權限的來源辨識項。</param>
      <returns>新識別使用權限。</returns>
    </member>
    <member name="T:System.Security.Policy.IMembershipCondition">
      <summary>定義要判斷程式碼組件 (Assembly) 是否為程式碼群組成員的測試。</summary>
    </member>
    <member name="M:System.Security.Policy.IMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>判斷指定的辨識項是否符合成員資格條件。</summary>
      <param name="evidence">要進行測試的辨識項集合。</param>
      <returns>如果指定的辨識項符合成員資格條件，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.IMembershipCondition.Copy">
      <summary>建立成員資格條件的相等複本。</summary>
      <returns>目前成員資格條件的相同新複本。</returns>
    </member>
    <member name="M:System.Security.Policy.IMembershipCondition.Equals(System.Object)">
      <summary>判斷指定的 <see cref="T:System.Object" /> 是否等於目前的 <see cref="T:System.Object" />。</summary>
      <param name="obj">與目前的 <see cref="T:System.Object" /> 相比較的 <see cref="T:System.Object" />。</param>
      <returns>如果指定的 <see cref="T:System.Object" /> 和目前的 <see cref="T:System.Object" /> 相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.IMembershipCondition.ToString">
      <summary>建立並傳回成員資格條件的字串表示。</summary>
      <returns>目前成員資格條件狀態的字串表示。</returns>
    </member>
    <member name="T:System.Security.Policy.NetCodeGroup">
      <summary>將 Web 使用權限授權給下載組件的來源站台。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.#ctor(System.Security.Policy.IMembershipCondition)">
      <summary>初始化 <see cref="T:System.Security.Policy.NetCodeGroup" /> 類別的新執行個體。</summary>
      <param name="membershipCondition">測試辨識項以判斷這個程式碼群組是否套用程式碼存取安全性原則的成員資格條件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="membershipCondition" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="membershipCondition" /> 參數的型別無效。</exception>
    </member>
    <member name="F:System.Security.Policy.NetCodeGroup.AbsentOriginScheme">
      <summary>包含用來指定程式碼 (具有未知或無法辨認之原始配置) 連接存取的值。</summary>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.AddConnectAccess(System.String,System.Security.Policy.CodeConnectAccess)">
      <summary>將指定的連接存取加入至目前的程式碼群組。</summary>
      <param name="originScheme">
        <see cref="T:System.String" /> 包含與程式碼配置相符的配置。</param>
      <param name="connectAccess">
        <see cref="T:System.Security.Policy.CodeConnectAccess" />，指定配置與連接埠程式碼可用於連回其原始伺服器。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="originScheme" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="originScheme" /> 包含配置內不允許的字元。  
-或- 
 <paramref name="originScheme" /> = <see cref="F:System.Security.Policy.NetCodeGroup.AbsentOriginScheme" /> 和 <paramref name="connectAccess" /> 指定 <see cref="F:System.Security.Policy.CodeConnectAccess.OriginScheme" /> 作為其配置。</exception>
    </member>
    <member name="F:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme">
      <summary>包含用來指定任何其他未指定原始配置的值。</summary>
    </member>
    <member name="P:System.Security.Policy.NetCodeGroup.AttributeString">
      <summary>取得程式碼群組之原則陳述式屬性 (Attribute) 的字串表示。</summary>
      <returns>一定是 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.Copy">
      <summary>製作目前程式碼群組的深層複本 (Deep Copy)。</summary>
      <returns>目前程式碼群組的相等複本，包含它的成員資格條件和子程式碼群組。</returns>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.Equals(System.Object)">
      <summary>判斷指定的程式碼群組是否相等於目前程式碼群組。</summary>
      <param name="o">要和目前程式碼群組比較的 <see cref="T:System.Security.Policy.NetCodeGroup" /> 物件。</param>
      <returns>如果指定的程式碼群組相等於目前程式碼群組，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.GetConnectAccessRules">
      <summary>取得目前程式碼群組的連接存取資訊。</summary>
      <returns>
        <see cref="T:System.Collections.DictionaryEntry" /> 陣列包含連接存取資訊。</returns>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.GetHashCode">
      <summary>取得目前程式碼群組的雜湊程式碼。</summary>
      <returns>目前程式碼群組的雜湊程式碼。</returns>
    </member>
    <member name="P:System.Security.Policy.NetCodeGroup.MergeLogic">
      <summary>取得用於合併群組的邏輯。</summary>
      <returns>字串 "Union"。</returns>
    </member>
    <member name="P:System.Security.Policy.NetCodeGroup.PermissionSetName">
      <summary>取得用於程式碼群組的 <see cref="T:System.Security.NamedPermissionSet" /> 名稱。</summary>
      <returns>永遠是字串 "Same site Web"。</returns>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.ResetConnectAccess">
      <summary>移除目前程式碼群組的所有連接存取資訊。</summary>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.Resolve(System.Security.Policy.Evidence)">
      <summary>解析程式碼群組的原則和其辨識項集合的子代。</summary>
      <param name="evidence">用於組件的 <see cref="T:System.Security.Policy.Evidence" />。</param>
      <returns>
        <see cref="T:System.Security.Policy.PolicyStatement" />，是由含選擇性屬性之程式碼群組授與的使用權限所組成，如果程式碼群組無法套用 (成員資格條件不符合指定的辨識項)，則為 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Policy.PolicyException">一個以上的程式碼群組 (包含父程式碼群組和任何的子程式碼群組) 標記為 <see cref="F:System.Security.Policy.PolicyStatementAttribute.Exclusive" />。</exception>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
      <summary>解析符合的程式碼群組。</summary>
      <param name="evidence">組件的辨識項。</param>
      <returns>與辨識項相符的一組完整的程式碼群組。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="T:System.Security.Policy.PermissionRequestEvidence">
      <summary>定義表示使用權限要求的辨識項。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Policy.PermissionRequestEvidence.#ctor(System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)">
      <summary>使用程式碼組件的使用權限要求，初始化 <see cref="T:System.Security.Policy.PermissionRequestEvidence" /> 類別的新執行個體。</summary>
      <param name="request">程式碼要求執行的最小使用權限。</param>
      <param name="optional">程式碼可以在使用權限授權時所使用的非必要使用權限。</param>
      <param name="denied">程式碼明確要求不要授權的使用權限。</param>
    </member>
    <member name="M:System.Security.Policy.PermissionRequestEvidence.Copy">
      <summary>建立目前 <see cref="T:System.Security.Policy.PermissionRequestEvidence" /> 的對等複本。</summary>
      <returns>目前 <see cref="T:System.Security.Policy.PermissionRequestEvidence" /> 的對等複本。</returns>
    </member>
    <member name="P:System.Security.Policy.PermissionRequestEvidence.DeniedPermissions">
      <summary>取得程式碼明確要求不要授權的使用權限。</summary>
      <returns>程式碼明確要求不要授權的使用權限。</returns>
    </member>
    <member name="P:System.Security.Policy.PermissionRequestEvidence.OptionalPermissions">
      <summary>取得程式碼可以在使用權限授權時所使用的非必要使用權限。</summary>
      <returns>使用權限，程式碼可以在使用權限授權時使用，但非必要。</returns>
    </member>
    <member name="P:System.Security.Policy.PermissionRequestEvidence.RequestedPermissions">
      <summary>取得程式碼要求執行的最小使用權限。</summary>
      <returns>程式碼要求執行的最小使用權限。</returns>
    </member>
    <member name="M:System.Security.Policy.PermissionRequestEvidence.ToString">
      <summary>取得 <see cref="T:System.Security.Policy.PermissionRequestEvidence" /> 狀態的字串表示。</summary>
      <returns>
        <see cref="T:System.Security.Policy.PermissionRequestEvidence" /> 狀態的表示。</returns>
    </member>
    <member name="T:System.Security.Policy.PolicyException">
      <summary>當原則禁止程式碼執行時所擲出的例外狀況。</summary>
    </member>
    <member name="M:System.Security.Policy.PolicyException.#ctor">
      <summary>使用預設屬性，初始化 <see cref="T:System.Security.Policy.PolicyException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Security.Policy.PolicyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>使用序列化資料，初始化 <see cref="T:System.Security.Policy.PolicyException" /> 類別的新執行個體。</summary>
      <param name="info">存放序列物件資料的物件。</param>
      <param name="context">關於來源或目的端的內容資訊。</param>
    </member>
    <member name="M:System.Security.Policy.PolicyException.#ctor(System.String)">
      <summary>使用指定的錯誤訊息，初始化 <see cref="T:System.Security.Policy.PolicyException" /> 類別的新執行個體。</summary>
      <param name="message">解釋例外狀況原因的錯誤訊息。</param>
    </member>
    <member name="M:System.Security.Policy.PolicyException.#ctor(System.String,System.Exception)">
      <summary>使用指定的錯誤訊息以及造成此例外狀況的內部例外狀況的參考，初始化 <see cref="T:System.Security.Policy.PolicyException" /> 類別的新執行個體。</summary>
      <param name="message">解釋例外狀況原因的錯誤訊息。</param>
      <param name="exception">做為目前例外狀況發生原因的例外狀況。 如果 <paramref name="exception" /> 參數不是 <see langword="null" />，則目前的例外狀況會在處理內部例外的 <see langword="catch" /> 區塊中引發。</param>
    </member>
    <member name="T:System.Security.Policy.PolicyLevel">
      <summary>表示 Common Language Runtime 的安全性原則層級。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.AddFullTrustAssembly(System.Security.Policy.StrongName)">
      <summary>將和指定 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 相對應的 <see cref="T:System.Security.Policy.StrongName" /> 加入至用來決定組件是否屬於不應被評估的組件群組成員的 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 物件清單。</summary>
      <param name="sn">
        <see cref="T:System.Security.Policy.StrongName" /> 可用來建立要加入至用來決定組件是否屬於不應被評估的組件群組成員其 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 物件清單的 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sn" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sn" /> 參數所指定的 <see cref="T:System.Security.Policy.StrongName" /> 能夠完全受到信任。</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.AddFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)">
      <summary>將指定的 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 加入至用來決定組件是否屬於不應被評估的組件群組成員的 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 物件清單。</summary>
      <param name="snMC">要加入至用來決定組件是否屬於不應被評估的組件群組成員其 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 物件清單的 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="snMC" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="snMC" /> 參數所指定的 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 能夠完全受到信任。</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.AddNamedPermissionSet(System.Security.NamedPermissionSet)">
      <summary>將 <see cref="T:System.Security.NamedPermissionSet" /> 加入至目前的原則層級。</summary>
      <param name="permSet">要加入至目前原則層級的 <see cref="T:System.Security.NamedPermissionSet" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="permSet" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="permSet" /> 參數的名稱和 <see cref="T:System.Security.NamedPermissionSet" /> 中現有的 <see cref="T:System.Security.Policy.PolicyLevel" /> 名稱相同。</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.ChangeNamedPermissionSet(System.String,System.Security.PermissionSet)">
      <summary>以指定的 <see cref="T:System.Security.NamedPermissionSet" /> 取代目前原則層級中的 <see cref="T:System.Security.PermissionSet" />。</summary>
      <param name="name">要取代的 <see cref="T:System.Security.NamedPermissionSet" /> 名稱。</param>
      <param name="pSet">要取代由 <paramref name="name" /> 參數指定的 <see cref="T:System.Security.PermissionSet" /> 其 <see cref="T:System.Security.NamedPermissionSet" />。</param>
      <returns>已被取代的 <see cref="T:System.Security.NamedPermissionSet" /> 複本。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 參數為 <see langword="null" />。  
-或- 
<paramref name="pSet" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 參數等於保留使用權限集的名稱。  
-或- 
找不到由 <paramref name="pSet" /> 參數指定的 <see cref="T:System.Security.PermissionSet" />。</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.CreateAppDomainLevel">
      <summary>建立用於應用程式定義域原則層級的新原則層級。</summary>
      <returns>新建立的 <see cref="T:System.Security.Policy.PolicyLevel" />。</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.FromXml(System.Security.SecurityElement)">
      <summary>使用 XML 編碼方式重建具有指定狀態的安全性物件。</summary>
      <param name="e">用來重新建構安全性物件的 XML 編碼方式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">由 <paramref name="e" /> 參數指定的 <see cref="T:System.Security.SecurityElement" /> 無效。</exception>
    </member>
    <member name="P:System.Security.Policy.PolicyLevel.FullTrustAssemblies">
      <summary>取得 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 物件的清單，用來決定組件是否屬於用來評估安全性原則的組件群組成員之一。</summary>
      <returns>
        <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 物件的清單，用來決定組件是否屬於用來評估安全性原則的組件群組成員之一。 在組件的評估安全性原則期間已完全受信任的組件並未包含在清單中。</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.GetNamedPermissionSet(System.String)">
      <summary>使用指定的名稱傳回目前原則層級中的 <see cref="T:System.Security.NamedPermissionSet" />。</summary>
      <param name="name">要尋找的 <see cref="T:System.Security.NamedPermissionSet" /> 名稱。</param>
      <returns>如果找到，則為目前原則層級中 <see cref="T:System.Security.NamedPermissionSet" /> 指定的名稱，否則為 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Security.Policy.PolicyLevel.Label">
      <summary>取得原則層級的描述性標記 (Label)。</summary>
      <returns>與原則層級相關的標記。</returns>
    </member>
    <member name="P:System.Security.Policy.PolicyLevel.NamedPermissionSets">
      <summary>取得為原則層級所定義的具名使用權限集清單。</summary>
      <returns>為原則層級所定義的具名使用權限集清單。</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.Recover">
      <summary>以最近的備份 (反映上次儲存之前的原則狀態) 取代這個 <see cref="T:System.Security.Policy.PolicyLevel" /> 的組態檔，而將它還原成最近的狀態。</summary>
      <exception cref="T:System.Security.Policy.PolicyException">原則層級不具有有效的組態檔。</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(System.Security.Policy.StrongName)">
      <summary>從原則層級用來評估原則的組件清單中移除指定的 <see cref="T:System.Security.Policy.StrongName" /> 組件。</summary>
      <param name="sn">要從用來評估原則的組件清單中移除的組件 <see cref="T:System.Security.Policy.StrongName" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sn" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">由 <paramref name="sn" /> 參數指定具有 <see cref="T:System.Security.Policy.StrongName" /> 的組件並未受完全信任。</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)">
      <summary>從原則層級用來評估原則的組件清單中移除指定的 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 組件。</summary>
      <param name="snMC">要從用來評估原則的組件清單中移除的組件 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="snMC" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">由 <paramref name="snMC" /> 參數指定的 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 並未受完全信任。</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(System.Security.NamedPermissionSet)">
      <summary>從目前的原則層級中移除指定的 <see cref="T:System.Security.NamedPermissionSet" />。</summary>
      <param name="permSet">要從目前原則層級中移除的 <see cref="T:System.Security.NamedPermissionSet" />。</param>
      <returns>已移除的 <see cref="T:System.Security.NamedPermissionSet" />。</returns>
      <exception cref="T:System.ArgumentException">找不到由 <paramref name="permSet" /> 參數指定的 <see cref="T:System.Security.NamedPermissionSet" />。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="permSet" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(System.String)">
      <summary>從目前原則層級中移除指定名稱的 <see cref="T:System.Security.NamedPermissionSet" />。</summary>
      <param name="name">要移除的 <see cref="T:System.Security.NamedPermissionSet" /> 名稱。</param>
      <returns>已移除的 <see cref="T:System.Security.NamedPermissionSet" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 參數等於保留使用權限集的名稱。  
-或- 
找不到指定名稱的 <see cref="T:System.Security.NamedPermissionSet" />。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.Reset">
      <summary>將目前原則層級返回成預設狀態。</summary>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.Resolve(System.Security.Policy.Evidence)">
      <summary>依據原則層級的辨識項 (Evidence) 來解析原則，並傳回結果 <see cref="T:System.Security.Policy.PolicyStatement" />。</summary>
      <param name="evidence">用來解析 <see cref="T:System.Security.Policy.Evidence" /> 的 <see cref="T:System.Security.Policy.PolicyLevel" />。</param>
      <returns>結果為 <see cref="T:System.Security.Policy.PolicyStatement" />。</returns>
      <exception cref="T:System.Security.Policy.PolicyException">原則層級包含多個標記為獨佔的相符程式碼群組。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
      <summary>在原則層級上解析原則並傳回符合辨識項的程式碼群組樹狀結構其根目錄。</summary>
      <param name="evidence">用來解析原則的 <see cref="T:System.Security.Policy.Evidence" />。</param>
      <returns>
        <see cref="T:System.Security.Policy.CodeGroup" />，表示符合指定辨識項的程式碼群組樹狀結構的根目錄。</returns>
      <exception cref="T:System.Security.Policy.PolicyException">原則層級包含多個標記為獨佔的相符程式碼群組。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Security.Policy.PolicyLevel.RootCodeGroup">
      <summary>取得或設定原則層級的根程式碼群組。</summary>
      <returns>
        <see cref="T:System.Security.Policy.CodeGroup" />，是原則層級程式碼群組的樹狀結構的根。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.PolicyLevel.RootCodeGroup" /> 的值為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Security.Policy.PolicyLevel.StoreLocation">
      <summary>取得儲存原則檔的路徑。</summary>
      <returns>儲存原則檔的路徑，或當 <see cref="T:System.Security.Policy.PolicyLevel" /> 沒有指定儲存區時的 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.ToXml">
      <summary>建立安全物件及其目前狀態的 XML 編碼方式。</summary>
      <returns>安全物件的 XML 編碼方式，包含所有狀態資訊。</returns>
    </member>
    <member name="P:System.Security.Policy.PolicyLevel.Type">
      <summary>取得原則層級的型別。</summary>
      <returns>其中一個 <see cref="T:System.Security.PolicyLevelType" /> 值。</returns>
    </member>
    <member name="T:System.Security.Policy.PolicyStatement">
      <summary>表示 <see cref="T:System.Security.Policy.CodeGroup" /> 的陳述式，描述以特定辨識項 (Evidence) 集合套用至程式碼的使用權限和其他資訊。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.#ctor(System.Security.PermissionSet)">
      <summary>使用指定的 <see cref="T:System.Security.Policy.PolicyStatement" /> 初始化 <see cref="T:System.Security.PermissionSet" /> 類別的新執行個體。</summary>
      <param name="permSet">要初始化新執行個體的 <see cref="T:System.Security.PermissionSet" />。</param>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.#ctor(System.Security.PermissionSet,System.Security.Policy.PolicyStatementAttribute)">
      <summary>使用指定的 <see cref="T:System.Security.Policy.PolicyStatement" /> 和屬性，初始化 <see cref="T:System.Security.PermissionSet" /> 類別的新執行個體。</summary>
      <param name="permSet">要初始化新執行個體的 <see cref="T:System.Security.PermissionSet" />。</param>
      <param name="attributes">
        <see cref="T:System.Security.Policy.PolicyStatementAttribute" /> 值的位元組合。</param>
    </member>
    <member name="P:System.Security.Policy.PolicyStatement.Attributes">
      <summary>取得或設定原則陳述式的屬性。</summary>
      <returns>原則陳述式的屬性。</returns>
    </member>
    <member name="P:System.Security.Policy.PolicyStatement.AttributeString">
      <summary>取得原則陳述式屬性的字串表示。</summary>
      <returns>文字字串，表示原則陳述式的屬性。</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.Copy">
      <summary>建立目前原則陳述式的對等複本。</summary>
      <returns>
        <see cref="T:System.Security.Policy.PolicyStatement" /> 的新複本，其中 <see cref="P:System.Security.Policy.PolicyStatement.PermissionSet" /> 和 <see cref="P:System.Security.Policy.PolicyStatement.Attributes" /> 與目前 <see cref="T:System.Security.Policy.PolicyStatement" /> 中的項目相同。</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.Equals(System.Object)">
      <summary>判斷指定的 <see cref="T:System.Security.Policy.PolicyStatement" /> 物件是否等於目前的 <see cref="T:System.Security.Policy.PolicyStatement" />。</summary>
      <param name="o">要與目前 <see cref="T:System.Security.Policy.PolicyStatement" /> 比較的 <see cref="T:System.Security.Policy.PolicyStatement" /> 物件。</param>
      <returns>如果指定的 <see cref="T:System.Security.Policy.PolicyStatement" /> 等於目前的 <see cref="T:System.Security.Policy.PolicyStatement" /> 物件，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.FromXml(System.Security.SecurityElement)">
      <summary>使用 XML 編碼方式重建具有指定狀態的安全性物件。</summary>
      <param name="et">用來重新建構安全性物件的 XML 編碼方式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="et" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="et" /> 參數不是有效的 <see cref="T:System.Security.Policy.PolicyStatement" /> 編碼。</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>使用 XML 編碼方式重建具有指定狀態的安全性物件。</summary>
      <param name="et">用來重新建構安全性物件的 XML 編碼方式。</param>
      <param name="level">查閱 <see cref="T:System.Security.Policy.PolicyLevel" /> 值的 <see cref="T:System.Security.NamedPermissionSet" /> 內容。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="et" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="et" /> 參數不是有效的 <see cref="T:System.Security.Policy.PolicyStatement" /> 編碼。</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.GetHashCode">
      <summary>取得 <see cref="T:System.Security.Policy.PolicyStatement" /> 物件的雜湊碼，其適合用於雜湊表這類的雜湊演算法和資料結構。</summary>
      <returns>目前 <see cref="T:System.Security.Policy.PolicyStatement" /> 物件的雜湊碼。</returns>
    </member>
    <member name="P:System.Security.Policy.PolicyStatement.PermissionSet">
      <summary>取得或設定原則陳述式的 <see cref="T:System.Security.PermissionSet" />。</summary>
      <returns>原則陳述式的 <see cref="T:System.Security.PermissionSet" />。</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.ToXml">
      <summary>建立安全物件及其目前狀態的 XML 編碼方式。</summary>
      <returns>安全物件的 XML 編碼方式，包含所有狀態資訊。</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>建立安全物件及其目前狀態的 XML 編碼方式。</summary>
      <param name="level">查閱 <see cref="T:System.Security.Policy.PolicyLevel" /> 值的 <see cref="T:System.Security.NamedPermissionSet" /> 內容。</param>
      <returns>安全物件的 XML 編碼方式，包含所有狀態資訊。</returns>
    </member>
    <member name="T:System.Security.Policy.PolicyStatementAttribute">
      <summary>定義程式碼群組安全性原則的特殊屬性 (Attribute) 旗標。</summary>
    </member>
    <member name="F:System.Security.Policy.PolicyStatementAttribute.All">
      <summary>已設定所有的屬性旗標。</summary>
    </member>
    <member name="F:System.Security.Policy.PolicyStatementAttribute.Exclusive">
      <summary>獨佔程式碼群組旗標。 當程式碼群組擁有這個旗標集時，則只有與該程式碼群組相關的使用權限可以被授與屬於該程式碼群組的程式碼。 一般而言，符合特定程式碼片段的程式碼群組可以設為獨佔。</summary>
    </member>
    <member name="F:System.Security.Policy.PolicyStatementAttribute.LevelFinal">
      <summary>這個旗標表示的原則陳述式將使解析作業不評估較低的原則層級，而有效地允許原則層級覆寫較低的層級。</summary>
    </member>
    <member name="F:System.Security.Policy.PolicyStatementAttribute.Nothing">
      <summary>沒有設定旗標。</summary>
    </member>
    <member name="T:System.Security.Policy.Publisher">
      <summary>提供程式碼組件的 Authenticode X.509v3 數位簽章做為原則評估的辨識項。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Policy.Publisher.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>使用包含發行者公開金鑰 (Public Key) 的 X.509v3 憑證，初始化 <see cref="T:System.Security.Policy.Publisher" /> 類別的新執行個體。</summary>
      <param name="cert">
        <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" />，包含軟體發行者公開金鑰。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cert" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Security.Policy.Publisher.Certificate">
      <summary>取得發行者的 Authenticode X.509v3 憑證。</summary>
      <returns>發行者的 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" />。</returns>
    </member>
    <member name="M:System.Security.Policy.Publisher.Copy">
      <summary>建立 <see cref="T:System.Security.Policy.Publisher" /> 的對等複本。</summary>
      <returns>
        <see cref="T:System.Security.Policy.Publisher" /> 的相同新複本。</returns>
    </member>
    <member name="M:System.Security.Policy.Publisher.CreateIdentityPermission(System.Security.Policy.Evidence)">
      <summary>建立對應至 <see cref="T:System.Security.Policy.Publisher" /> 類別目前執行個體的識別 (Identity) 使用權限。</summary>
      <param name="evidence">要建構識別使用權限的來源 <see cref="T:System.Security.Policy.Evidence" />。</param>
      <returns>指定 <see cref="T:System.Security.Permissions.PublisherIdentityPermission" /> 的 <see cref="T:System.Security.Policy.Publisher" />。</returns>
    </member>
    <member name="M:System.Security.Policy.Publisher.Equals(System.Object)">
      <summary>比較目前的 <see cref="T:System.Security.Policy.Publisher" /> 與指定物件是否相等。</summary>
      <param name="o">要測試與目前物件是否相等的 <see cref="T:System.Security.Policy.Publisher" />。</param>
      <returns>如果 <see cref="T:System.Security.Policy.Publisher" /> 類別的兩個執行個體相等，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="o" /> 參數不是 <see cref="T:System.Security.Policy.Publisher" /> 物件。</exception>
    </member>
    <member name="M:System.Security.Policy.Publisher.GetHashCode">
      <summary>取得目前 <see cref="P:System.Security.Policy.Publisher.Certificate" /> 的雜湊程式碼。</summary>
      <returns>目前 <see cref="P:System.Security.Policy.Publisher.Certificate" /> 的雜湊程式碼。</returns>
    </member>
    <member name="M:System.Security.Policy.Publisher.ToString">
      <summary>傳回目前 <see cref="T:System.Security.Policy.Publisher" /> 的字串表示。</summary>
      <returns>目前 <see cref="T:System.Security.Policy.Publisher" /> 的表示。</returns>
    </member>
    <member name="T:System.Security.Policy.PublisherMembershipCondition">
      <summary>藉由測試組件的軟體發行者 (Publisher) 的 Authenticode X.509v3 憑證，判斷組件是否屬於程式碼群組。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>使用判斷成員資格的 Authenticode X.509v3 憑證，初始化 <see cref="T:System.Security.Policy.PublisherMembershipCondition" /> 類別的新執行個體。</summary>
      <param name="certificate">
        <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" />，包含軟體發行者公開金鑰。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Security.Policy.PublisherMembershipCondition.Certificate">
      <summary>取得或設定用來測試成員資格條件的 Authenticode X.509v3 憑證。</summary>
      <returns>用來測試成員資格條件的 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" />。</returns>
      <exception cref="T:System.ArgumentNullException">屬性值為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>判斷指定的辨識項是否符合成員資格條件。</summary>
      <param name="evidence">要進行測試的 <see cref="T:System.Security.Policy.Evidence" />。</param>
      <returns>如果指定的辨識項符合成員資格條件，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> 屬性為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.Copy">
      <summary>建立成員資格條件的相等複本。</summary>
      <returns>目前成員資格條件的相同新複本。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> 屬性為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.Equals(System.Object)">
      <summary>判斷指定物件的發行者憑證是否等同於包含在目前 <see cref="T:System.Security.Policy.PublisherMembershipCondition" /> 中的發行者憑證。</summary>
      <param name="o">要與目前 <see cref="T:System.Security.Policy.PublisherMembershipCondition" /> 比較的物件。</param>
      <returns>如果來自指定物件的發行者憑證等同於目前 <see cref="T:System.Security.Policy.PublisherMembershipCondition" /> 中所包含的發行者憑證，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> 屬性為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>透過 XML 編碼，重新建構具有指定狀態的安全性物件。</summary>
      <param name="e">用來重新建構安全性物件的 XML 編碼方式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> 參數不是有效的成員資格條件項目。</exception>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>透過 XML 編碼，重新建構具有指定狀態的安全性物件。</summary>
      <param name="e">用來重新建構安全性物件的 XML 編碼方式。</param>
      <param name="level">
        <see cref="T:System.Security.Policy.PolicyLevel" /> 內容，用來解析 <see cref="T:System.Security.NamedPermissionSet" /> 參考。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> 參數不是有效的成員資格條件項目。</exception>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.GetHashCode">
      <summary>取得目前成員資格條件的雜湊程式碼。</summary>
      <returns>目前成員資格條件的雜湊程式碼。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> 屬性為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.ToString">
      <summary>建立並傳回 <see cref="T:System.Security.Policy.PublisherMembershipCondition" /> 的字串表示。</summary>
      <returns>
        <see cref="T:System.Security.Policy.PublisherMembershipCondition" /> 的表示。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> 屬性為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.ToXml">
      <summary>建立安全物件及其目前狀態的 XML 編碼方式。</summary>
      <returns>安全物件的 XML 編碼方式，包含所有狀態資訊。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> 屬性為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>使用指定的 <see cref="T:System.Security.Policy.PolicyLevel" />，建立安全性物件的 XML 編碼方式和它的目前狀態。</summary>
      <param name="level">
        <see cref="T:System.Security.Policy.PolicyLevel" /> 內容，用來解析 <see cref="T:System.Security.NamedPermissionSet" /> 參考。</param>
      <returns>安全物件的 XML 編碼方式，包含所有狀態資訊。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> 屬性為 <see langword="null" />。</exception>
    </member>
    <member name="T:System.Security.Policy.Site">
      <summary>提供程式碼組件的來源網站做為原則評估的辨識項。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Policy.Site.#ctor(System.String)">
      <summary>使用程式碼組件的來源網站，初始化 <see cref="T:System.Security.Policy.Site" /> 類別的新執行個體。</summary>
      <param name="name">相關聯程式碼組件的來源網站。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Policy.Site.Copy">
      <summary>建立 <see cref="T:System.Security.Policy.Site" /> 物件的對等複本。</summary>
      <returns>與目前 <see cref="T:System.Security.Policy.Site" /> 物件完全相同的新物件。</returns>
    </member>
    <member name="M:System.Security.Policy.Site.CreateFromUrl(System.String)">
      <summary>建立來自指定 URL 的新 <see cref="T:System.Security.Policy.Site" /> 物件。</summary>
      <param name="url">URL，從其中建立新的 <see cref="T:System.Security.Policy.Site" /> 物件。</param>
      <returns>新的站台物件。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="url" /> 參數不是有效的 URL。  
-或- 
<paramref name="url" /> 參數為檔名。</exception>
    </member>
    <member name="M:System.Security.Policy.Site.CreateIdentityPermission(System.Security.Policy.Evidence)">
      <summary>建立對應至目前 <see cref="T:System.Security.Policy.Site" /> 物件的識別權限。</summary>
      <param name="evidence">要建構識別使用權限的來源辨識項。</param>
      <returns>目前 <see cref="T:System.Security.Policy.Site" /> 物件的站台識別使用權限。</returns>
    </member>
    <member name="M:System.Security.Policy.Site.Equals(System.Object)">
      <summary>比較目前的 <see cref="T:System.Security.Policy.Site" /> 與指定物件是否相等。</summary>
      <param name="o">要測試與目前物件是否相等的物件。</param>
      <returns>如果 <see cref="T:System.Security.Policy.Site" /> 類別的兩個執行個體相等，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.Site.GetHashCode">
      <summary>傳回目前網站名稱的雜湊碼。</summary>
      <returns>目前網站名稱的雜湊碼。</returns>
    </member>
    <member name="P:System.Security.Policy.Site.Name">
      <summary>取得程式碼組件的來源網站。</summary>
      <returns>程式碼組件的來源網站的名稱。</returns>
    </member>
    <member name="M:System.Security.Policy.Site.ToString">
      <summary>傳回目前 <see cref="T:System.Security.Policy.Site" /> 物件的字串表示。</summary>
      <returns>目前站台的表示。</returns>
    </member>
    <member name="T:System.Security.Policy.SiteMembershipCondition">
      <summary>藉由測試組件的來源站台，判斷該組件是否屬於程式碼群組。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.#ctor(System.String)">
      <summary>使用判斷成員資格的站台名稱，初始化 <see cref="T:System.Security.Policy.SiteMembershipCondition" /> 類別的新執行個體。</summary>
      <param name="site">網站名稱或萬用字元運算式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="site" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="site" /> 參數不是有效的 <see cref="T:System.Security.Policy.Site" />。</exception>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>判斷指定的辨識項是否符合成員資格條件。</summary>
      <param name="evidence">要進行測試的 <see cref="T:System.Security.Policy.Evidence" />。</param>
      <returns>如果指定的辨識項符合成員資格條件，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> 屬性為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.Copy">
      <summary>建立成員資格條件的相等複本。</summary>
      <returns>目前成員資格條件的相同新複本。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> 屬性為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.Equals(System.Object)">
      <summary>判斷來自指定 <see cref="T:System.Security.Policy.SiteMembershipCondition" /> 物件的站台是否等同於包含在目前 <see cref="T:System.Security.Policy.SiteMembershipCondition" /> 的站台。</summary>
      <param name="o">要與目前的 <see cref="T:System.Security.Policy.SiteMembershipCondition" /> 比較的 <see cref="T:System.Security.Policy.SiteMembershipCondition" /> 物件。</param>
      <returns>如果來自指定 <see cref="T:System.Security.Policy.SiteMembershipCondition" /> 物件的站台等同於包含在目前 <see cref="T:System.Security.Policy.SiteMembershipCondition" /> 的站台，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">目前物件或指定物件的 <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> 屬性為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>透過 XML 編碼，重新建構具有指定狀態的安全性物件。</summary>
      <param name="e">用來重新建構安全性物件的 XML 編碼方式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> 參數不是有效的成員資格條件項目。</exception>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>透過 XML 編碼，重新建構具有指定狀態的安全性物件。</summary>
      <param name="e">用來重新建構安全性物件的 XML 編碼方式。</param>
      <param name="level">
        <see cref="T:System.Security.Policy.PolicyLevel" /> 內容，用來解析 <see cref="T:System.Security.NamedPermissionSet" /> 參考。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> 參數不是有效的成員資格條件項目。</exception>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.GetHashCode">
      <summary>取得目前成員資格條件的雜湊程式碼。</summary>
      <returns>目前成員資格條件的雜湊程式碼。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> 屬性為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Security.Policy.SiteMembershipCondition.Site">
      <summary>取得或設定用來測試成員資格條件的站台。</summary>
      <returns>用來測試成員資格條件的站台。</returns>
      <exception cref="T:System.ArgumentNullException">嘗試將 <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> 設定為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">嘗試將 <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> 設定為無效的 <see cref="T:System.Security.Policy.Site" />。</exception>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.ToString">
      <summary>建立並傳回成員資格條件的字串表示。</summary>
      <returns>成員資格條件的字串表示。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> 屬性為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.ToXml">
      <summary>建立安全物件及其目前狀態的 XML 編碼方式。</summary>
      <returns>安全物件的 XML 編碼方式，包含所有狀態資訊。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> 屬性為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>使用指定的 <see cref="T:System.Security.Policy.PolicyLevel" />，建立安全性物件的 XML 編碼方式和它的目前狀態。</summary>
      <param name="level">
        <see cref="T:System.Security.Policy.PolicyLevel" /> 內容，用來解析 <see cref="T:System.Security.NamedPermissionSet" /> 參考。</param>
      <returns>安全物件的 XML 編碼方式，包含所有狀態資訊。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> 屬性為 <see langword="null" />。</exception>
    </member>
    <member name="T:System.Security.Policy.StrongName">
      <summary>提供程式碼組件的強式名稱做為原則評估的辨識項。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Policy.StrongName.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)">
      <summary>使用強式名稱公開金鑰 Blob、名稱和版本，初始化 <see cref="T:System.Security.Policy.StrongName" /> 類別的新執行個體。</summary>
      <param name="blob">軟體發行者的 <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" />。</param>
      <param name="name">強式名稱的簡單名稱部分。</param>
      <param name="version">強式名稱的 <see cref="T:System.Version" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="blob" /> 參數為 <see langword="null" />。  
-或- 
<paramref name="name" /> 參數為 <see langword="null" />。  
-或- 
<paramref name="version" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 參數是空字串 ("")。</exception>
    </member>
    <member name="M:System.Security.Policy.StrongName.Copy">
      <summary>建立目前 <see cref="T:System.Security.Policy.StrongName" /> 的對等複本。</summary>
      <returns>目前 <see cref="T:System.Security.Policy.StrongName" /> 的相同新複本。</returns>
    </member>
    <member name="M:System.Security.Policy.StrongName.CreateIdentityPermission(System.Security.Policy.Evidence)">
      <summary>建立對應至目前 <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> 的 <see cref="T:System.Security.Policy.StrongName" />。</summary>
      <param name="evidence">要從其中建構 <see cref="T:System.Security.Policy.Evidence" /> 的 <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" />。</param>
      <returns>指定 <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> 的 <see cref="T:System.Security.Policy.StrongName" />。</returns>
    </member>
    <member name="M:System.Security.Policy.StrongName.Equals(System.Object)">
      <summary>判斷指定的強式名稱是否等同於目前的強式名稱。</summary>
      <param name="o">要根據目前的強式名稱比較的強式名稱。</param>
      <returns>如果指定的強式名稱等同於目前的強式名稱，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.StrongName.GetHashCode">
      <summary>取得目前 <see cref="T:System.Security.Policy.StrongName" /> 的雜湊程式碼。</summary>
      <returns>目前 <see cref="T:System.Security.Policy.StrongName" /> 的雜湊程式碼。</returns>
    </member>
    <member name="P:System.Security.Policy.StrongName.Name">
      <summary>取得目前 <see cref="T:System.Security.Policy.StrongName" /> 的簡單名稱。</summary>
      <returns>
        <see cref="T:System.Security.Policy.StrongName" /> 的簡單名稱部分。</returns>
    </member>
    <member name="P:System.Security.Policy.StrongName.PublicKey">
      <summary>取得目前 <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" /> 的 <see cref="T:System.Security.Policy.StrongName" />。</summary>
      <returns>目前 <see cref="T:System.Security.Policy.StrongName" /> 的 <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" />。</returns>
    </member>
    <member name="M:System.Security.Policy.StrongName.ToString">
      <summary>建立目前 <see cref="T:System.Security.Policy.StrongName" /> 的字串表示。</summary>
      <returns>目前 <see cref="T:System.Security.Policy.StrongName" /> 的表示。</returns>
    </member>
    <member name="P:System.Security.Policy.StrongName.Version">
      <summary>取得目前 <see cref="T:System.Version" /> 的 <see cref="T:System.Security.Policy.StrongName" />。</summary>
      <returns>目前 <see cref="T:System.Security.Policy.StrongName" /> 的 <see cref="T:System.Version" />。</returns>
    </member>
    <member name="T:System.Security.Policy.StrongNameMembershipCondition">
      <summary>藉由測試組件的強式名稱 (Strong Name)，判斷組件是否屬於程式碼群組。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)">
      <summary>使用判斷成員資格的強式名稱公開金鑰 Blob、名稱和版本號碼，初始化 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 類別的新執行個體。</summary>
      <param name="blob">軟體發行者的強式名稱公開金鑰 Blob。</param>
      <param name="name">強式名稱的簡單名稱部分。</param>
      <param name="version">強式名稱的版本號碼。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="blob" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 參數為 <see langword="null" />。  
-或- 
<paramref name="name" /> 參數是空字串 ("")。</exception>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>判斷指定的辨識項是否符合成員資格條件。</summary>
      <param name="evidence">要進行測試的 <see cref="T:System.Security.Policy.Evidence" />。</param>
      <returns>如果指定的辨識項符合成員資格條件，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.Copy">
      <summary>建立目前 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 的對等複本。</summary>
      <returns>目前 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 的相同新複本</returns>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.Equals(System.Object)">
      <summary>判斷來自指定物件的 <see cref="T:System.Security.Policy.StrongName" /> 是否等同於目前 <see cref="T:System.Security.Policy.StrongName" /> 中所包含的 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" />。</summary>
      <param name="o">要與目前 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 比較的物件。</param>
      <returns>如果來自指定物件的 <see cref="T:System.Security.Policy.StrongName" /> 等同於包含在目前 <see cref="T:System.Security.Policy.StrongName" /> 的 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">目前物件或指定物件的 <see cref="P:System.Security.Policy.StrongNameMembershipCondition.PublicKey" /> 屬性為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>透過 XML 編碼，重新建構具有指定狀態的安全性物件。</summary>
      <param name="e">用來重新建構安全性物件的 XML 編碼方式。</param>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>透過 XML 編碼，重新建構具有指定狀態的安全性物件。</summary>
      <param name="e">用來重新建構安全性物件的 XML 編碼方式。</param>
      <param name="level">
        <see cref="T:System.Security.Policy.PolicyLevel" /> 內容，用來解析 <see cref="T:System.Security.NamedPermissionSet" /> 參考。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> 參數不是有效的成員資格條件項目。</exception>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.GetHashCode">
      <summary>傳回目前 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 的雜湊程式碼。</summary>
      <returns>目前 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 的雜湊程式碼。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Policy.StrongNameMembershipCondition.PublicKey" /> 屬性為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Security.Policy.StrongNameMembershipCondition.Name">
      <summary>取得或設定用來測試成員資格條件的 <see cref="T:System.Security.Policy.StrongName" /> 簡單名稱。</summary>
      <returns>用來測試成員資格條件的 <see cref="T:System.Security.Policy.StrongName" /> 簡單名稱。</returns>
      <exception cref="T:System.ArgumentException">值為 <see langword="null" />。  
-或- 
此值為空字串 ("")。</exception>
    </member>
    <member name="P:System.Security.Policy.StrongNameMembershipCondition.PublicKey">
      <summary>取得或設定用來測試成員資格條件的 <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" /> 的 <see cref="T:System.Security.Policy.StrongName" />。</summary>
      <returns>用來測試成員資格條件的 <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" /> 的 <see cref="T:System.Security.Policy.StrongName" />。</returns>
      <exception cref="T:System.ArgumentNullException">嘗試將 <see cref="P:System.Security.Policy.StrongNameMembershipCondition.PublicKey" /> 設定為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.ToString">
      <summary>建立並傳回目前 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 的字串表示。</summary>
      <returns>目前 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 的表示。</returns>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.ToXml">
      <summary>建立安全物件及其目前狀態的 XML 編碼方式。</summary>
      <returns>安全物件的 XML 編碼方式，包含所有狀態資訊。</returns>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>使用指定的 <see cref="T:System.Security.Policy.PolicyLevel" />，建立安全性物件的 XML 編碼方式和它的目前狀態。</summary>
      <param name="level">
        <see cref="T:System.Security.Policy.PolicyLevel" /> 內容，用來解析 <see cref="T:System.Security.NamedPermissionSet" /> 參考。</param>
      <returns>安全物件的 XML 編碼方式，包含所有狀態資訊。</returns>
    </member>
    <member name="P:System.Security.Policy.StrongNameMembershipCondition.Version">
      <summary>取得或設定用來測試成員資格條件的 <see cref="T:System.Version" /> 的 <see cref="T:System.Security.Policy.StrongName" />。</summary>
      <returns>用來測試成員資格條件的 <see cref="T:System.Version" /> 的 <see cref="T:System.Security.Policy.StrongName" />。</returns>
    </member>
    <member name="T:System.Security.Policy.TrustManagerContext">
      <summary>表示在決定是否執行應用程式，以及在執行應用程式的新 <see cref="T:System.AppDomain" /> 上設定安全性時，信任管理員要考慮的內容。</summary>
    </member>
    <member name="M:System.Security.Policy.TrustManagerContext.#ctor">
      <summary>初始化 <see cref="T:System.Security.Policy.TrustManagerContext" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Security.Policy.TrustManagerContext.#ctor(System.Security.Policy.TrustManagerUIContext)">
      <summary>使用指定的 <see cref="T:System.Security.Policy.TrustManagerUIContext" /> 物件，初始化 <see cref="T:System.Security.Policy.TrustManagerContext" /> 類別的新執行個體。</summary>
      <param name="uiContext">其中一個 <see cref="T:System.Security.Policy.TrustManagerUIContext" /> 值，指定要使用的信任管理員使用者介面型別。</param>
    </member>
    <member name="P:System.Security.Policy.TrustManagerContext.IgnorePersistedDecision">
      <summary>取得或設定值，指出應用程式安全性管理員是否應忽略任何持續 (Persist) 的決策，並呼叫信任管理員。</summary>
      <returns>若要呼叫信任管理員則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Policy.TrustManagerContext.KeepAlive">
      <summary>取得或設定值，指出信任管理員是否應快取這個應用程式的狀態，以方便處理未來對判斷應用程式信任的要求。</summary>
      <returns>若要快取狀態資料則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Policy.TrustManagerContext.NoPrompt">
      <summary>取得或設定值，指出信任管理員是否應提示使用者做出信任決策。</summary>
      <returns>若不提示使用者則為 <see langword="true" />，若要提示使用者則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Policy.TrustManagerContext.Persist">
      <summary>取得或設定值，指出使用者對同意對話方塊的回應是否應持續。</summary>
      <returns>若要快取狀態資料則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Security.Policy.TrustManagerContext.PreviousApplicationIdentity">
      <summary>取得或設定上一個應用程式識別 (Identity) 的識別。</summary>
      <returns>
        <see cref="T:System.ApplicationIdentity" /> 物件，表示上一個 <see cref="T:System.ApplicationIdentity" />。</returns>
    </member>
    <member name="P:System.Security.Policy.TrustManagerContext.UIContext">
      <summary>取得或設定信任管理員應顯示的使用者介面型別。</summary>
      <returns>其中一個 <see cref="T:System.Security.Policy.TrustManagerUIContext" /> 值。 預設為 <see cref="F:System.Security.Policy.TrustManagerUIContext.Run" />。</returns>
    </member>
    <member name="T:System.Security.Policy.TrustManagerUIContext">
      <summary>指定信任管理員應該用於信任決策的使用者介面 (UI) 型別。</summary>
    </member>
    <member name="F:System.Security.Policy.TrustManagerUIContext.Install">
      <summary>安裝 UI。</summary>
    </member>
    <member name="F:System.Security.Policy.TrustManagerUIContext.Run">
      <summary>執行 UI。</summary>
    </member>
    <member name="F:System.Security.Policy.TrustManagerUIContext.Upgrade">
      <summary>升級 UI。</summary>
    </member>
    <member name="T:System.Security.Policy.UnionCodeGroup">
      <summary>表示程式碼群組，它的原則陳述式是目前程式碼群組原則陳述式和其所有相符子程式碼群組原則陳述式的聯合。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Policy.UnionCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)">
      <summary>初始化 <see cref="T:System.Security.Policy.UnionCodeGroup" /> 類別的新執行個體。</summary>
      <param name="membershipCondition">成員資格條件，其測試辨識項以判斷這個程式碼群組是否套用原則。</param>
      <param name="policy">程式碼群組的原則陳述式，形式為要授與符合成員資格條件的程式碼之使用權限集合和屬性 (Attribute)。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="membershipCondition" /> 參數的型別無效。  
-或- 
<paramref name="policy" /> 參數的型別無效。</exception>
    </member>
    <member name="M:System.Security.Policy.UnionCodeGroup.Copy">
      <summary>製作目前程式碼群組的深層複本 (Deep Copy)。</summary>
      <returns>目前程式碼群組的相等複本，包含它的成員資格條件和子程式碼群組。</returns>
    </member>
    <member name="P:System.Security.Policy.UnionCodeGroup.MergeLogic">
      <summary>取得合併邏輯。</summary>
      <returns>永遠是字串 "Union"。</returns>
    </member>
    <member name="M:System.Security.Policy.UnionCodeGroup.Resolve(System.Security.Policy.Evidence)">
      <summary>解析程式碼群組的原則和其辨識項集合的子代。</summary>
      <param name="evidence">組件的辨識項。</param>
      <returns>原則陳述式，包含由程式碼群組使用選擇性屬性授與的使用權限，或為 <see langword="null" />，如果程式碼群組無法套用 (成員資格條件不符合指定的辨識項)。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Policy.PolicyException">一個以上的程式碼群組 (包含父程式碼群組和任何的子程式碼群組) 標記為 <see cref="F:System.Security.Policy.PolicyStatementAttribute.Exclusive" />。</exception>
    </member>
    <member name="M:System.Security.Policy.UnionCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
      <summary>解析符合的程式碼群組。</summary>
      <param name="evidence">組件的辨識項。</param>
      <returns>與辨識項相符的一組完整的程式碼群組。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="T:System.Security.Policy.Url">
      <summary>提供程式碼組件的來源 URL 做為原則評估的辨識項。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Policy.Url.#ctor(System.String)">
      <summary>使用程式碼組件的來源 URL 初始化 <see cref="T:System.Security.Policy.Url" /> 類別的新執行個體。</summary>
      <param name="name">相關聯程式碼組件的來源 URL。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Policy.Url.Copy">
      <summary>建立辨識項物件的新複本。</summary>
      <returns>辨識項物件的相同新複本。</returns>
    </member>
    <member name="M:System.Security.Policy.Url.CreateIdentityPermission(System.Security.Policy.Evidence)">
      <summary>建立對應於 <see cref="T:System.Security.Policy.Url" /> 辨識項類別目前執行個體的識別 (Identity) 使用權限。</summary>
      <param name="evidence">要建構識別使用權限的來源辨識項集合 (Evidence Set)。</param>
      <returns>
        <see cref="T:System.Security.Permissions.UrlIdentityPermission" />，用於指定的 <see cref="T:System.Security.Policy.Url" /> 辨識項。</returns>
    </member>
    <member name="M:System.Security.Policy.Url.Equals(System.Object)">
      <summary>比較目前的 <see cref="T:System.Security.Policy.Url" /> 辨識項物件與指定物件是否相等。</summary>
      <param name="o">要測試與目前物件是否相等的 <see cref="T:System.Security.Policy.Url" /> 辨識項物件。</param>
      <returns>如果兩個 <see cref="T:System.Security.Policy.Url" /> 物件相等則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Policy.Url.GetHashCode">
      <summary>取得目前 URL 的雜湊程式碼。</summary>
      <returns>目前 URL 的雜湊程式碼。</returns>
    </member>
    <member name="M:System.Security.Policy.Url.ToString">
      <summary>傳回目前 <see cref="T:System.Security.Policy.Url" /> 的字串表示。</summary>
      <returns>目前 <see cref="T:System.Security.Policy.Url" /> 的表示。</returns>
    </member>
    <member name="P:System.Security.Policy.Url.Value">
      <summary>取得 URL，其為程式碼組件的來源。</summary>
      <returns>URL，程式碼組件的來源。</returns>
    </member>
    <member name="T:System.Security.Policy.UrlMembershipCondition">
      <summary>測試 URL，判斷組件是否屬於程式碼群組。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.#ctor(System.String)">
      <summary>使用判斷成員資格的 URL，初始化 <see cref="T:System.Security.Policy.UrlMembershipCondition" /> 類別的新執行個體。</summary>
      <param name="url">用來測試的 URL。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="url" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="url" /> 必須是絕對 URL。</exception>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>判斷指定的辨識項是否符合成員資格條件。</summary>
      <param name="evidence">要進行測試的辨識項集合。</param>
      <returns>如果指定的辨識項符合成員資格條件，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> 屬性為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.Copy">
      <summary>建立成員資格條件的相等複本。</summary>
      <returns>目前成員資格條件的相同新複本。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> 屬性為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.Equals(System.Object)">
      <summary>判斷來自指定物件的 URL 是否等同於目前 <see cref="T:System.Security.Policy.UrlMembershipCondition" /> 中所包含的 URL。</summary>
      <param name="o">要與目前 <see cref="T:System.Security.Policy.UrlMembershipCondition" /> 比較的物件。</param>
      <returns>如果來自指定物件的 URL 等同於目前 <see cref="T:System.Security.Policy.UrlMembershipCondition" /> 中所包含的 URL，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">目前物件或指定物件的 <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> 屬性為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>透過 XML 編碼，重新建構具有指定狀態的安全性物件。</summary>
      <param name="e">用來重新建構安全性物件的 XML 編碼方式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> 參數不是有效的成員資格條件項目。</exception>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>透過 XML 編碼，重新建構具有指定狀態的安全性物件。</summary>
      <param name="e">用來重新建構安全性物件的 XML 編碼方式。</param>
      <param name="level">原則層級內容，用來解析具名的使用權限集合參考。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> 參數不是有效的成員資格條件項目。</exception>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.GetHashCode">
      <summary>取得目前成員資格條件的雜湊程式碼。</summary>
      <returns>目前成員資格條件的雜湊程式碼。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> 屬性為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.ToString">
      <summary>建立並傳回成員資格條件的字串表示。</summary>
      <returns>成員資格條件狀態的字串表示。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> 屬性為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.ToXml">
      <summary>建立安全物件及其目前狀態的 XML 編碼方式。</summary>
      <returns>安全物件的 XML 編碼方式，包含所有狀態資訊。</returns>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>使用指定的 <see cref="T:System.Security.Policy.PolicyLevel" />，建立安全性物件的 XML 編碼方式和它的目前狀態。</summary>
      <param name="level">原則層級內容，用來解析具名使用權限集合參考。</param>
      <returns>安全物件的 XML 編碼方式，包含所有狀態資訊。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> 屬性為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Security.Policy.UrlMembershipCondition.Url">
      <summary>取得或設定用來測試成員資格條件的 URL。</summary>
      <returns>URL，用來測試成員資格條件。</returns>
      <exception cref="T:System.ArgumentNullException">嘗試將 <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> 設定為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">值不是絕對 URL。</exception>
    </member>
    <member name="T:System.Security.Policy.Zone">
      <summary>提供程式碼組件的安全性區域 (Security Zone) 做為原則評估的辨識項。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Policy.Zone.#ctor(System.Security.SecurityZone)">
      <summary>使用程式碼組件的來源地區初始化 <see cref="T:System.Security.Policy.Zone" /> 類別的新執行個體。</summary>
      <param name="zone">相關聯程式碼組件的來源地區。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="zone" /> 參數不是有效的 <see cref="T:System.Security.SecurityZone" />。</exception>
    </member>
    <member name="M:System.Security.Policy.Zone.Copy">
      <summary>建立辨識項物件的對等複本。</summary>
      <returns>辨識項物件的相同新複本。</returns>
    </member>
    <member name="M:System.Security.Policy.Zone.CreateFromUrl(System.String)">
      <summary>建立具有指定 URL 的新地區。</summary>
      <param name="url">要建立地區的來源 URL。</param>
      <returns>具有指定 URL 的新地區。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="url" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Policy.Zone.CreateIdentityPermission(System.Security.Policy.Evidence)">
      <summary>建立對應至 <see cref="T:System.Security.Policy.Zone" /> 辨識項類別目前執行個體的識別 (Identity) 使用權限。</summary>
      <param name="evidence">要建構識別使用權限的來源辨識項集合 (Evidence Set)。</param>
      <returns>
        <see cref="T:System.Security.Permissions.ZoneIdentityPermission" />，用於指定的 <see cref="T:System.Security.Policy.Zone" /> 辨識項。</returns>
    </member>
    <member name="M:System.Security.Policy.Zone.Equals(System.Object)">
      <summary>比較目前的 <see cref="T:System.Security.Policy.Zone" /> 辨識項物件與指定物件是否相等。</summary>
      <param name="o">要測試與目前物件是否相等的 <see cref="T:System.Security.Policy.Zone" /> 辨識項物件。</param>
      <returns>如果兩個 <see cref="T:System.Security.Policy.Zone" /> 物件相等則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="o" /> 參數不是 <see cref="T:System.Security.Policy.Zone" /> 物件。</exception>
    </member>
    <member name="M:System.Security.Policy.Zone.GetHashCode">
      <summary>取得目前地區的雜湊程式碼。</summary>
      <returns>目前地區的雜湊程式碼。</returns>
    </member>
    <member name="P:System.Security.Policy.Zone.SecurityZone">
      <summary>取得程式碼組件的來源地區。</summary>
      <returns>程式碼組件的來源地區。</returns>
    </member>
    <member name="M:System.Security.Policy.Zone.ToString">
      <summary>傳回目前 <see cref="T:System.Security.Policy.Zone" /> 的字串表示。</summary>
      <returns>目前 <see cref="T:System.Security.Policy.Zone" /> 的表示。</returns>
    </member>
    <member name="T:System.Security.Policy.ZoneMembershipCondition">
      <summary>藉由測試組件的來源地區，判斷組件是否屬於程式碼群組。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.#ctor(System.Security.SecurityZone)">
      <summary>使用判斷成員資格的地區，初始化 <see cref="T:System.Security.Policy.ZoneMembershipCondition" /> 類別的新執行個體。</summary>
      <param name="zone">用來測試的 <see cref="T:System.Security.SecurityZone" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="zone" /> 參數不是有效的 <see cref="T:System.Security.SecurityZone" />。</exception>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>判斷指定的辨識項是否符合成員資格條件。</summary>
      <param name="evidence">要進行測試的辨識項集合。</param>
      <returns>如果指定的辨識項符合成員資格條件，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> 屬性為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> 屬性不是有效的 <see cref="T:System.Security.SecurityZone" />。</exception>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.Copy">
      <summary>建立成員資格條件的相等複本。</summary>
      <returns>目前成員資格條件的相同新複本。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> 屬性為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> 屬性不是有效的 <see cref="T:System.Security.SecurityZone" />。</exception>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.Equals(System.Object)">
      <summary>判斷來自指定物件的地區是否等同於目前 <see cref="T:System.Security.Policy.ZoneMembershipCondition" /> 中所包含的地區。</summary>
      <param name="o">要與目前 <see cref="T:System.Security.Policy.ZoneMembershipCondition" /> 比較的物件。</param>
      <returns>如果來自指定物件的地區等同於 <see cref="T:System.Security.Policy.ZoneMembershipCondition" /> 中所包含的地區，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">目前物件或指定物件的 <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> 屬性為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">目前物件或指定物件的 <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> 屬性不是有效的 <see cref="T:System.Security.SecurityZone" />。</exception>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>透過 XML 編碼，重新建構具有指定狀態的安全性物件。</summary>
      <param name="e">用來重新建構安全性物件的 XML 編碼方式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> 參數不是有效的成員資格條件項目。</exception>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>透過 XML 編碼，重新建構具有指定狀態的安全性物件。</summary>
      <param name="e">用來重新建構安全性物件的 XML 編碼方式。</param>
      <param name="level">原則層級內容，用來解析具名的使用權限集合參考。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> 參數不是有效的成員資格條件項目。</exception>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.GetHashCode">
      <summary>取得目前成員資格條件的雜湊程式碼。</summary>
      <returns>目前成員資格條件的雜湊程式碼。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> 屬性為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> 屬性不是有效的 <see cref="T:System.Security.SecurityZone" />。</exception>
    </member>
    <member name="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone">
      <summary>取得或設定用來測試成員資格條件的地區。</summary>
      <returns>用來測試成員資格條件的地區。</returns>
      <exception cref="T:System.ArgumentNullException">值為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">嘗試將 <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> 設定為無效的 <see cref="T:System.Security.SecurityZone" />。</exception>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.ToString">
      <summary>建立並傳回成員資格條件的字串表示。</summary>
      <returns>成員資格條件狀態的字串表示。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> 屬性為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> 屬性不是有效的 <see cref="T:System.Security.SecurityZone" />。</exception>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.ToXml">
      <summary>建立安全物件及其目前狀態的 XML 編碼方式。</summary>
      <returns>安全物件的 XML 編碼方式，包含所有狀態資訊。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> 屬性為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> 屬性不是有效的 <see cref="T:System.Security.SecurityZone" />。</exception>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>使用指定的 <see cref="T:System.Security.Policy.PolicyLevel" />，建立安全性物件的 XML 編碼方式和它的目前狀態。</summary>
      <param name="level">原則層級內容，用來解析具名使用權限集合參考。</param>
      <returns>安全物件的 XML 編碼方式，包含所有狀態資訊。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> 屬性為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> 屬性不是有效的 <see cref="T:System.Security.SecurityZone" />。</exception>
    </member>
    <member name="T:System.Security.PolicyLevelType">
      <summary>指定 Managed 程式碼原則層級的型別。</summary>
    </member>
    <member name="F:System.Security.PolicyLevelType.AppDomain">
      <summary>應用程式中所有 Managed 程式碼的安全性原則。</summary>
    </member>
    <member name="F:System.Security.PolicyLevelType.Enterprise">
      <summary>企業中所有 Managed 程式碼的安全性原則。</summary>
    </member>
    <member name="F:System.Security.PolicyLevelType.Machine">
      <summary>執行於電腦上所有 Managed 程式碼的安全性原則。</summary>
    </member>
    <member name="F:System.Security.PolicyLevelType.User">
      <summary>由使用者執行的所有 Managed 程式碼的安全性原則。</summary>
    </member>
    <member name="T:System.Security.SecurityContext">
      <summary>封裝並散佈跨執行緒傳送之執行內容的所有安全性相關資料。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.SecurityContext.Capture">
      <summary>擷取目前執行緒的安全性內容。</summary>
      <returns>目前執行緒的安全性內容。</returns>
    </member>
    <member name="M:System.Security.SecurityContext.CreateCopy">
      <summary>建立目前安全性內容的複本。</summary>
      <returns>目前執行緒的安全性內容。</returns>
      <exception cref="T:System.InvalidOperationException">目前的安全性內容是先前已用過、已在應用程式定義域之間封送處理，或者不是透過 <see cref="M:System.Security.SecurityContext.Capture" /> 方法所取得。</exception>
    </member>
    <member name="M:System.Security.SecurityContext.Dispose">
      <summary>釋放 <see cref="T:System.Security.SecurityContext" /> 類別目前的執行個體所使用的全部資源。</summary>
    </member>
    <member name="M:System.Security.SecurityContext.IsFlowSuppressed">
      <summary>決定安全性內容的流量是否已經抑制。</summary>
      <returns>如果已經抑制流量則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed">
      <summary>決定目前安全性內容中 Windows 識別部分的流量是否已抑制。</summary>
      <returns>如果已經抑制流量則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.SecurityContext.RestoreFlow">
      <summary>還原安全性內容在非同步執行緒之間的流量。</summary>
      <exception cref="T:System.InvalidOperationException">安全性內容為 <see langword="null" /> 或空字串。</exception>
    </member>
    <member name="M:System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)">
      <summary>在目前執行緒上的指定安全性內容中執行指定的方法。</summary>
      <param name="securityContext">要設定的安全性內容。</param>
      <param name="callback">委派，表示要在指定的安全性內容中執行的方法。</param>
      <param name="state">要傳遞至回呼 (Callback) 方法的物件。</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="securityContext" /> 為 <see langword="null" />。  
-或- 
 <paramref name="securityContext" /> 不是透過擷取作業取得。  
-或- 
 已經將 <paramref name="securityContext" /> 做為 <see cref="M:System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)" /> 方法呼叫的引數使用。</exception>
    </member>
    <member name="M:System.Security.SecurityContext.SuppressFlow">
      <summary>抑制安全性內容在非同步執行緒之間的流量。</summary>
      <returns>還原流量的 <see cref="T:System.Threading.AsyncFlowControl" /> 結構。</returns>
    </member>
    <member name="M:System.Security.SecurityContext.SuppressFlowWindowsIdentity">
      <summary>抑制目前安全性內容中 Windows 識別部分在非同步執行緒之間的流量。</summary>
      <returns>用於還原流量的結構。</returns>
    </member>
    <member name="T:System.Security.SecurityContextSource">
      <summary>識別安全性內容的來源。</summary>
    </member>
    <member name="F:System.Security.SecurityContextSource.CurrentAppDomain">
      <summary>目前應用程式定義域是安全性內容的來源。</summary>
    </member>
    <member name="F:System.Security.SecurityContextSource.CurrentAssembly">
      <summary>目前組件是安全性內容的來源。</summary>
    </member>
    <member name="T:System.Security.SecurityManager">
      <summary>提供主要存取點給與安全性系統互動的類別。 這個類別無法被繼承。</summary>
    </member>
    <member name="P:System.Security.SecurityManager.CheckExecutionRights">
      <summary>取得或設定值，指出程式碼是否必須具有 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Execution" /> 才能執行。</summary>
      <returns>如果程式碼必須具有 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Execution" /> 才能執行，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.Security.SecurityException">呼叫此方法的程式碼沒有 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />。</exception>
    </member>
    <member name="M:System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture">
      <summary>判斷如果稍後必須重新建立目前執行緒的安全性狀態，目前執行緒是否需要擷取安全性內容。</summary>
      <returns>如果堆疊未包含部分信任的應用程式定義域、部分信任的組件及目前使用中的 <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> 或 <see cref="M:System.Security.CodeAccessPermission.Deny" /> 修飾詞，則為 <see langword="false" />，如果 Common Language Runtime 無法保證堆疊完全不含上述任何項目，則為 <see langword="true" />。</returns>
    </member>
    <member name="M:System.Security.SecurityManager.GetStandardSandbox(System.Security.Policy.Evidence)">
      <summary>取得可安全授與具提供之辨識項的應用程式的權限集合。</summary>
      <param name="evidence">要與權限集合比對的主辨識項。</param>
      <returns>權限集合，可用來當做具提供之辨識項的應用程式的授權集。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.SecurityManager.GetZoneAndOrigin(System.Collections.ArrayList@,System.Collections.ArrayList@)">
      <summary>取得目前組件的已授與區域識別 (Identity) 和 URL 識別使用權限集合。</summary>
      <param name="zone">輸出參數，包含所授與 <see cref="T:System.Collections.ArrayList" /> 物件的 <see cref="P:System.Security.Permissions.ZoneIdentityPermissionAttribute.Zone" />。</param>
      <param name="origin">輸出參數，包含所授與 <see cref="T:System.Collections.ArrayList" /> 物件的 <see cref="T:System.Security.Permissions.UrlIdentityPermission" />。</param>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> 的要求失敗。</exception>
    </member>
    <member name="M:System.Security.SecurityManager.IsGranted(System.Security.IPermission)">
      <summary>判斷是否授與呼叫端使用權限。</summary>
      <param name="perm">要測試呼叫端授與的使用權限。</param>
      <returns>如果授與呼叫端的使用權限包括 <paramref name="perm" /> 使用權限，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.SecurityManager.LoadPolicyLevelFromFile(System.String,System.Security.PolicyLevelType)">
      <summary>從指定的檔案載入 <see cref="T:System.Security.Policy.PolicyLevel" />。</summary>
      <param name="path">包含安全性原則資訊之檔案的實體檔案路徑。</param>
      <param name="type">其中一個列舉值指定要載入的原則層級類型。</param>
      <returns>載入的原則層級。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> 參數指定的檔案不存在。</exception>
      <exception cref="T:System.Security.SecurityException">呼叫此方法的程式碼沒有 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />。  
-或- 
呼叫此方法的程式碼沒有 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />。  
-或- 
呼叫此方法的程式碼沒有 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />。  
-或- 
呼叫此方法的程式碼沒有 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />。</exception>
      <exception cref="T:System.NotSupportedException">此方法使用在 .NET Framework 4 中已過時的程式碼存取安全性 (CAS) 原則。 若要啟用 CAS 原則對舊版 .NET Framework 的相容性，請使用 &lt;legacyCasPolicy&gt; 項目。</exception>
    </member>
    <member name="M:System.Security.SecurityManager.LoadPolicyLevelFromString(System.String,System.Security.PolicyLevelType)">
      <summary>從指定的字串載入 <see cref="T:System.Security.Policy.PolicyLevel" />。</summary>
      <param name="str">安全性原則層級之 XML 表示的格式，和組態檔中的格式相同。</param>
      <param name="type">其中一個列舉值指定要載入的原則層級類型。</param>
      <returns>載入的原則層級。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="str" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="str" /> 參數無效。</exception>
      <exception cref="T:System.Security.SecurityException">呼叫此方法的程式碼沒有 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />。</exception>
    </member>
    <member name="M:System.Security.SecurityManager.PolicyHierarchy">
      <summary>提供依層級存取安全性原則階層的列舉程式，例如電腦原則和使用者原則。</summary>
      <returns>構成安全性原則階層之 <see cref="T:System.Security.Policy.PolicyLevel" /> 物件的列舉程式。</returns>
      <exception cref="T:System.NotSupportedException">此方法使用在 .NET Framework 4 中已過時的程式碼存取安全性 (CAS) 原則。 若要啟用 CAS 原則對舊版 .NET Framework 的相容性，請使用 &lt;legacyCasPolicy&gt; 項目。</exception>
      <exception cref="T:System.Security.SecurityException">呼叫此方法的程式碼沒有 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />。</exception>
    </member>
    <member name="M:System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence)">
      <summary>根據指定的辨識項，判斷授與程式碼的權限。</summary>
      <param name="evidence">用來評估原則的辨識項集合。</param>
      <returns>可由安全性系統授與的一組權限。</returns>
      <exception cref="T:System.NotSupportedException">此方法使用在 .NET Framework 4 中已過時的程式碼存取安全性 (CAS) 原則。 若要啟用 CAS 原則對舊版 .NET Framework 的相容性，請使用 &lt;legacyCasPolicy&gt; 項目。</exception>
    </member>
    <member name="M:System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet@)">
      <summary>根據指定的辨識項和要求，判斷授與程式碼的權限。</summary>
      <param name="evidence">用來評估原則的辨識項集合。</param>
      <param name="reqdPset">執行程式碼所需的必要權限。</param>
      <param name="optPset">授與時將使用的選擇性權限，但非執行程式碼所需。</param>
      <param name="denyPset">即使原則以其他方式允許，也永遠不得授與程式碼的拒絕的使用權限。</param>
      <param name="denied">包含未授與的一組權限的輸出參數。</param>
      <returns>由安全性系統授與的一組權限。</returns>
      <exception cref="T:System.NotSupportedException">此方法使用在 .NET Framework 4 中已過時的程式碼存取安全性 (CAS) 原則。 若要啟用 CAS 原則對舊版 .NET Framework 的相容性，請使用 &lt;legacyCasPolicy&gt; 項目。</exception>
      <exception cref="T:System.Security.Policy.PolicyException">原則無法授與 <paramref name="reqdPset" /> 參數指定的基本必要權限。</exception>
    </member>
    <member name="M:System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence[])">
      <summary>根據指定的辨識項，判斷授與程式碼的權限。</summary>
      <param name="evidences">用來評估原則的辨識項物件陣列。</param>
      <returns>適用於所有提供的辨識項的一組權限。</returns>
      <exception cref="T:System.NotSupportedException">此方法使用在 .NET Framework 4 中已過時的程式碼存取安全性 (CAS) 原則。 若要啟用 CAS 原則對舊版 .NET Framework 的相容性，請使用 &lt;legacyCasPolicy&gt; 項目。</exception>
    </member>
    <member name="M:System.Security.SecurityManager.ResolvePolicyGroups(System.Security.Policy.Evidence)">
      <summary>取得符合指定之辨識項的程式碼群組集合。</summary>
      <param name="evidence">針對評估之原則設定的辨識項。</param>
      <returns>符合辨識項之程式碼群組集合的列舉。</returns>
      <exception cref="T:System.NotSupportedException">此方法使用在 .NET Framework 4 中已過時的程式碼存取安全性 (CAS) 原則。 若要啟用 CAS 原則對舊版 .NET Framework 的相容性，請使用 &lt;legacyCasPolicy&gt; 項目。</exception>
    </member>
    <member name="M:System.Security.SecurityManager.ResolveSystemPolicy(System.Security.Policy.Evidence)">
      <summary>根據指定的辨識項，判斷要授與程式碼何種權限，但不包括 <see cref="T:System.AppDomain" /> 層級的原則。</summary>
      <param name="evidence">用來評估原則的辨識項集合。</param>
      <returns>可由安全性系統授與的一組權限。</returns>
      <exception cref="T:System.NotSupportedException">此方法使用在 .NET Framework 4 中已過時的程式碼存取安全性 (CAS) 原則。 若要啟用 CAS 原則對舊版 .NET Framework 的相容性，請使用 &lt;legacyCasPolicy&gt; 項目。</exception>
    </member>
    <member name="M:System.Security.SecurityManager.SavePolicy">
      <summary>儲存已修改的安全性原則狀態。</summary>
      <exception cref="T:System.NotSupportedException">此方法使用在 .NET Framework 4 中已過時的程式碼存取安全性 (CAS) 原則。 若要啟用 CAS 原則對舊版 .NET Framework 的相容性，請使用 &lt;legacyCasPolicy&gt; 項目。</exception>
      <exception cref="T:System.Security.SecurityException">呼叫此方法的程式碼沒有 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />。</exception>
    </member>
    <member name="M:System.Security.SecurityManager.SavePolicyLevel(System.Security.Policy.PolicyLevel)">
      <summary>儲存使用 <see cref="M:System.Security.SecurityManager.LoadPolicyLevelFromFile(System.String,System.Security.PolicyLevelType)" /> 載入之已修改的安全性原則層級。</summary>
      <param name="level">要儲存的原則層級物件。</param>
      <exception cref="T:System.Security.SecurityException">呼叫此方法的程式碼沒有 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />。</exception>
      <exception cref="T:System.NotSupportedException">此方法使用在 .NET Framework 4 中已過時的程式碼存取安全性 (CAS) 原則。 若要啟用 CAS 原則對舊版 .NET Framework 的相容性，請使用 &lt;legacyCasPolicy&gt; 項目。</exception>
    </member>
    <member name="P:System.Security.SecurityManager.SecurityEnabled">
      <summary>取得或設定值，指出是否啟用安全性。</summary>
      <returns>如果啟用安全性，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.Security.SecurityException">呼叫此方法的程式碼沒有 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />。</exception>
    </member>
    <member name="T:System.Security.SecurityState">
      <summary>提供基底類別，目前是要向 <see cref="T:System.AppDomainManager" /> 物件要求動作的安全性狀態。</summary>
    </member>
    <member name="M:System.Security.SecurityState.#ctor">
      <summary>初始化 <see cref="T:System.Security.SecurityState" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Security.SecurityState.EnsureState">
      <summary>在衍生類別中覆寫時，確保可以在主機上使用由 <see cref="T:System.Security.SecurityState" /> 表示的狀態。</summary>
    </member>
    <member name="M:System.Security.SecurityState.IsStateAvailable">
      <summary>取得值，指出 <see cref="T:System.Security.SecurityState" /> 類別這個實作的狀態，在目前主機上是否可用。</summary>
      <returns>如果狀態為可用，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Security.SecurityZone">
      <summary>定義與安全性原則所使用的安全性區域 (Security Zone) 對應的整數值。</summary>
    </member>
    <member name="F:System.Security.SecurityZone.Internet">
      <summary>網際網路區域是用在位於網際網路上不屬於其他地區的網站。</summary>
    </member>
    <member name="F:System.Security.SecurityZone.Intranet">
      <summary>近端內部網路區域是用在位於公司內部網路上的內容。 因為伺服器和資訊可能是在公司的防火牆 (Firewall) 內，使用者或公司可以指派更高的信任層級給內部網路上的內容。</summary>
    </member>
    <member name="F:System.Security.SecurityZone.MyComputer">
      <summary>本機電腦 (Local Computer) 區域是一個隱含區域，用於使用者電腦上存在的內容。</summary>
    </member>
    <member name="F:System.Security.SecurityZone.NoZone">
      <summary>未指定區域。</summary>
    </member>
    <member name="F:System.Security.SecurityZone.Trusted">
      <summary>信任的網站區域是用在比網際網路上其他網站更可信賴或更可靠的網站內容。 使用者可以使用這個區域指派更高的信任層級給這些站，以減少驗證要求的數目。 使用者需要將這些信任網站的 URL 對應至這個區域。</summary>
    </member>
    <member name="F:System.Security.SecurityZone.Untrusted">
      <summary>限制的網站區域是用在下載內容時可能發生或可能已經發生問題的網站。 使用者需要將這些未受信任網站的 URL 對應至這個區域。</summary>
    </member>
    <member name="T:System.Security.XmlSyntaxException">
      <summary>當解析 XML 時發生語法錯誤，所擲回的例外狀況。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Security.XmlSyntaxException.#ctor">
      <summary>使用預設屬性，初始化 <see cref="T:System.Security.XmlSyntaxException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Security.XmlSyntaxException.#ctor(System.Int32)">
      <summary>使用偵測到例外狀況的行號，來初始化 <see cref="T:System.Security.XmlSyntaxException" /> 類別的新執行個體。</summary>
      <param name="lineNumber">偵測到 XML 語法錯誤的 XML 資料流行號。</param>
    </member>
    <member name="M:System.Security.XmlSyntaxException.#ctor(System.Int32,System.String)">
      <summary>使用指定的錯誤訊息和偵測到例外狀況的行號，來初始化 <see cref="T:System.Security.XmlSyntaxException" /> 類別的新執行個體。</summary>
      <param name="lineNumber">偵測到 XML 語法錯誤的 XML 資料流行號。</param>
      <param name="message">解釋例外狀況原因的錯誤訊息。</param>
    </member>
    <member name="M:System.Security.XmlSyntaxException.#ctor(System.String)">
      <summary>使用指定的錯誤訊息，初始化 <see cref="T:System.Security.XmlSyntaxException" /> 類別的新執行個體。</summary>
      <param name="message">解釋例外狀況原因的錯誤訊息。</param>
    </member>
    <member name="M:System.Security.XmlSyntaxException.#ctor(System.String,System.Exception)">
      <summary>使用指定的錯誤訊息以及造成此例外狀況的內部例外狀況的參考，初始化 <see cref="T:System.Security.XmlSyntaxException" /> 類別的新執行個體。</summary>
      <param name="message">解釋例外狀況原因的錯誤訊息。</param>
      <param name="inner">做為目前例外狀況發生原因的例外狀況。 如果 <paramref name="inner" /> 參數不是 <see langword="null" />，則目前的例外狀況會在處理內部例外的 <see langword="catch" /> 區塊中引發。</param>
    </member>
    <member name="T:System.ServiceProcess.ServiceControllerPermission">
      <summary>允許服務控制器的程式碼存取安全性權限的控制。</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermission.#ctor">
      <summary>初始化 <see cref="T:System.ServiceProcess.ServiceControllerPermission" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>使用對資源的指定存取，初始化 <see cref="T:System.ServiceProcess.ServiceControllerPermission" /> 類別的新執行個體。</summary>
      <param name="state">其中一個 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> 參數不是有效的 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</exception>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermission.#ctor(System.ServiceProcess.ServiceControllerPermissionAccess,System.String,System.String)">
      <summary>使用指定的許可存取等級、服務所在處的電腦名稱和向系統識別服務的簡短名稱，初始化 <see cref="T:System.ServiceProcess.ServiceControllerPermission" /> 類別的新執行個體。</summary>
      <param name="permissionAccess">其中一個 <see cref="T:System.ServiceProcess.ServiceControllerPermissionAccess" /> 值。</param>
      <param name="machineName">服務駐留其上的電腦名稱。</param>
      <param name="serviceName">向系統識別服務的簡短名稱。</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermission.#ctor(System.ServiceProcess.ServiceControllerPermissionEntry[])">
      <summary>使用指定的使用權限項目，初始化 <see cref="T:System.ServiceProcess.ServiceControllerPermission" /> 類別的新執行個體。</summary>
      <param name="permissionAccessEntries">
        <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> 物件的陣列。 <see cref="P:System.ServiceProcess.ServiceControllerPermission.PermissionEntries" /> 屬性設為這個值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="permissionAccessEntries" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermission.PermissionEntries">
      <summary>取得這個使用權限要求的使用權限項目的集合。</summary>
      <returns>
        <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntryCollection" />，含有這個使用權限要求的使用權限項目。</returns>
    </member>
    <member name="T:System.ServiceProcess.ServiceControllerPermissionAccess">
      <summary>定義 <see cref="T:System.ServiceProcess.ServiceController" /> 使用權限類別所使用的存取等級。</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerPermissionAccess.Browse">
      <summary>
        <see cref="T:System.ServiceProcess.ServiceController" /> 可以連結至現有的服務，但無法予以控制。</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerPermissionAccess.Control">
      <summary>
        <see cref="T:System.ServiceProcess.ServiceController" /> 可以連結至現有的服務，並且可以予以控制。</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerPermissionAccess.None">
      <summary>
        <see cref="T:System.ServiceProcess.ServiceController" /> 沒有使用權限。</summary>
    </member>
    <member name="T:System.ServiceProcess.ServiceControllerPermissionAttribute">
      <summary>允許宣告式服務控制器使用權限檢查。</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>初始化 <see cref="T:System.ServiceProcess.ServiceControllerPermissionAttribute" /> 類別的新執行個體。</summary>
      <param name="action">其中一個 <see cref="T:System.Security.Permissions.SecurityAction" /> 值。</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionAttribute.CreatePermission">
      <summary>根據所要求的存取層級建立使用權限，該層級透過屬性 (Attribute) 上的 <see cref="P:System.ServiceProcess.ServiceControllerPermissionAttribute.PermissionAccess" /> 屬性 (Property) 來設定。</summary>
      <returns>
        <see cref="T:System.Security.IPermission" />，表示建立的使用權限。</returns>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionAttribute.MachineName">
      <summary>取得或設定服務駐留其上的電腦名稱。</summary>
      <returns>正在執行與 <see cref="T:System.ServiceProcess.ServiceController" /> 相關聯服務的電腦名稱。</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.ServiceProcess.ServiceControllerPermissionAttribute.MachineName" /> 語法無效。</exception>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionAttribute.PermissionAccess">
      <summary>取得或設定用於使用權限要求的存取等級。</summary>
      <returns>
        <see cref="T:System.ServiceProcess.ServiceControllerPermissionAccess" /> 值的位元組合。</returns>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionAttribute.ServiceName">
      <summary>取得或設定用來識別系統服務的簡短名稱。</summary>
      <returns>服務的名稱。</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.ServiceProcess.ServiceControllerPermissionAttribute.ServiceName" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.ServiceProcess.ServiceControllerPermissionAttribute.ServiceName" /> 屬性的語法無效。</exception>
    </member>
    <member name="T:System.ServiceProcess.ServiceControllerPermissionEntry">
      <summary>定義設定給 <see cref="T:System.ServiceProcess.ServiceController" /> 之程式碼存取安全性權限的最小單位。</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntry.#ctor">
      <summary>初始化 <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntry.#ctor(System.ServiceProcess.ServiceControllerPermissionAccess,System.String,System.String)">
      <summary>使用指定的使用權限存取等級、電腦名稱和識別服務的簡短名稱，初始化 <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> 類別的新執行個體。</summary>
      <param name="permissionAccess">其中一個 <see cref="T:System.ServiceProcess.ServiceControllerPermissionAccess" /> 值。</param>
      <param name="machineName">服務駐留其上的電腦名稱。</param>
      <param name="serviceName">向系統識別服務的簡短名稱。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceName" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="machineName" /> 無效。  
-或- 
 <paramref name="serviceName" /> 無效。</exception>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionEntry.MachineName">
      <summary>取得服務駐留其上的電腦名稱。</summary>
      <returns>正在執行與 <see cref="T:System.ServiceProcess.ServiceController" /> 相關聯服務的電腦名稱。</returns>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionEntry.PermissionAccess">
      <summary>取得存取等級，用於使用權限要求。</summary>
      <returns>
        <see cref="T:System.ServiceProcess.ServiceControllerPermissionAccess" /> 值的位元組合。</returns>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionEntry.ServiceName">
      <summary>取得向系統識別服務的簡短名稱。</summary>
      <returns>服務的名稱。</returns>
    </member>
    <member name="T:System.ServiceProcess.ServiceControllerPermissionEntryCollection">
      <summary>包含 <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> 物件的強型別集合。</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Add(System.ServiceProcess.ServiceControllerPermissionEntry)">
      <summary>將指定的 <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> 加入這個集合。</summary>
      <param name="value">要加入的 <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> 物件。</param>
      <returns>所加入 <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> 物件之以零起始的索引。</returns>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.AddRange(System.ServiceProcess.ServiceControllerPermissionEntry[])">
      <summary>附加一組指定的使用權限項目至這個集合。</summary>
      <param name="value">型別 <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> 物件的陣列，含有要加入的使用權限項目。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.AddRange(System.ServiceProcess.ServiceControllerPermissionEntryCollection)">
      <summary>附加一組指定的使用權限項目至這個集合。</summary>
      <param name="value">
        <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntryCollection" />，包含要加入的使用權限項目。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Contains(System.ServiceProcess.ServiceControllerPermissionEntry)">
      <summary>判斷這個集合是否含有指定的 <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> 物件。</summary>
      <param name="value">所要尋找的 <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> 物件。</param>
      <returns>如果指定的 <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> 物件屬於這個集合，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.CopyTo(System.ServiceProcess.ServiceControllerPermissionEntry[],System.Int32)">
      <summary>從陣列的特定索引開始，將使用權限項目從這個集合複製至陣列。</summary>
      <param name="array">型別 <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> 的陣列，接收複製的使用權限項目。</param>
      <param name="index">以零起始的索引，要開始複製使用權限項目的所在位置。</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.IndexOf(System.ServiceProcess.ServiceControllerPermissionEntry)">
      <summary>判斷在這個集合中的指定使用權限項目索引。</summary>
      <param name="value">要搜尋的使用權限項目。</param>
      <returns>指定使用權限項目的以零起始索引，或 -1 (如果在集合中找不到使用權限項目)。</returns>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Insert(System.Int32,System.ServiceProcess.ServiceControllerPermissionEntry)">
      <summary>將使用權限項目插入至這個集合的指定索引。</summary>
      <param name="index">集合的以零起始索引，要插入使用權限項目的所在位置。</param>
      <param name="value">要插入至這個集合的使用權限項目。</param>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Item(System.Int32)">
      <summary>取得或設定位在指定索引的物件。</summary>
      <param name="index">集合中之以零起始的索引。</param>
      <returns>
        <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> 物件，位在指定的索引。</returns>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.OnClear">
      <summary>清除集合的內容之後，執行額外的自訂處理程序。</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.OnInsert(System.Int32,System.Object)">
      <summary>執行其他自訂處理序後，再將新的使用權限項目加入集合中。</summary>
      <param name="index">插入 <paramref name="value" /> 處之以零起始的索引。</param>
      <param name="value">在 <paramref name="index" /> 中權限項目的新值。</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.OnRemove(System.Int32,System.Object)">
      <summary>從集合中移除新的使用權限項目時，執行其他自訂處理序。</summary>
      <param name="index">可以找到 <paramref name="value" /> 處之以零起始的索引。</param>
      <param name="value">要從 <paramref name="index" /> 中移除的使用權限項目。</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)">
      <summary>先執行其他自訂處理序後，再設定集合中的值。</summary>
      <param name="index">可以找到 <paramref name="oldValue" /> 處之以零起始的索引。</param>
      <param name="oldValue">以 <paramref name="newValue" /> 取代的值。</param>
      <param name="newValue">在 <paramref name="index" /> 中權限項目的新值。</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Remove(System.ServiceProcess.ServiceControllerPermissionEntry)">
      <summary>從這個集合移除指定的使用權限項目。</summary>
      <param name="value">要移除的使用權限項目。</param>
    </member>
    <member name="T:System.Transactions.DistributedTransactionPermission">
      <summary>當交易的管理擴大至 MSDTC 時，<see cref="N:System.Transactions" /> 所要求的使用權線。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>初始化 <see cref="T:System.Transactions.DistributedTransactionPermission" /> 類別的新執行個體。</summary>
      <param name="state">其中一個 <see cref="T:System.Security.Permissions.PermissionState" /> 值。</param>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.Copy">
      <summary>建立並傳回目前權限的相同複本。</summary>
      <returns>目前權限的複本。</returns>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.FromXml(System.Security.SecurityElement)">
      <summary>透過 XML 編碼，重新建構具有指定狀態的權限。</summary>
      <param name="securityElement">用以重新建構權限的 XML 編碼方式。</param>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.Intersect(System.Security.IPermission)">
      <summary>建立並傳回目前權限與指定權限交集的權限。</summary>
      <param name="target">要與目前權限產生交集的權限。 必須與目前權限屬於相同的類型。</param>
      <returns>代表目前權限與指定權限交集的新權限。 如果交集是空的，這個新權限就是 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>傳回值，指出目前的使用權限是否為指定之使用權限的子集。</summary>
      <param name="target">要測試子集關聯性 (Relationship) 的使用權限。 這個權限必須與目前權限屬於相同的類型。</param>
      <returns>如果目前 <see cref="T:System.Security.IPermission" /> 是指定之 <see cref="T:System.Security.IPermission" /> 的子集，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.IsUnrestricted">
      <summary>傳回值，指出是否允許不受限制地存取受目前使用權限保護的資源。</summary>
      <returns>如果允許不受限制地使用受使用權限保護的資源，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.ToXml">
      <summary>建立安全物件及其目前狀態的 XML 編碼方式。</summary>
      <returns>
        <see cref="T:System.Security.SecurityElement" />，包含安全性物件的 XML 編碼，含任何狀態資訊。</returns>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.Union(System.Security.IPermission)">
      <summary>建立目前權限與指定權限聯集的權限。</summary>
      <param name="target">要與目前權限結合的權限， 必須與目前權限屬於相同的類型。</param>
      <returns>
        <see cref="T:System.Security.IPermission" />，表示目前使用權限和指定使用權限的聯集。</returns>
    </member>
    <member name="T:System.Transactions.DistributedTransactionPermissionAttribute">
      <summary>允許將 <see cref="T:System.Transactions.DistributedTransactionPermission" /> 的安全性動作套用至使用宣告式安全性的程式碼。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>使用指定的 <see cref="T:System.Transactions.DistributedTransactionPermissionAttribute" /> 初始化 <see cref="T:System.Security.Permissions.SecurityAction" /> 類別的新執行個體。</summary>
      <param name="action">其中一個 <see cref="T:System.Security.Permissions.SecurityAction" /> 值。</param>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermissionAttribute.CreatePermission">
      <summary>建立使用權限物件，該物件接著會序列化為二進位格式，並與組件之中繼資料中的 <see cref="T:System.Security.Permissions.SecurityAction" /> 一起持續儲存。</summary>
      <returns>可序列化的權限物件。</returns>
    </member>
    <member name="P:System.Transactions.DistributedTransactionPermissionAttribute.Unrestricted">
      <summary>取得或設定數值，表示是否宣告由屬性所保護之資源的完整 (不受限制的) 使用權限。</summary>
      <returns>如果已宣告受保護之資源的完整使用權限，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Web.AspNetHostingPermission">
      <summary>控制 ASP.NET 裝載環境中的存取權限。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>使用指定的 <see cref="T:System.Web.AspNetHostingPermission" /> 列舉值，初始化 <see cref="T:System.Security.Permissions.PermissionState" /> 類別的新執行個體。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 列舉值。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> 未設定為其中一個 <see cref="T:System.Security.Permissions.PermissionState" /> 列舉型別值。</exception>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.#ctor(System.Web.AspNetHostingPermissionLevel)">
      <summary>使用指定的使用權限等級，初始化 <see cref="T:System.Web.AspNetHostingPermission" /> 類別的新執行個體。</summary>
      <param name="level">
        <see cref="T:System.Web.AspNetHostingPermissionLevel" /> 列舉值。</param>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.Copy">
      <summary>由衍生類別實作時，建立並傳回目前權限物件的相同複本。</summary>
      <returns>目前權限物件的複本。</returns>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.FromXml(System.Security.SecurityElement)">
      <summary>使用 XML 編碼方式重建具有指定狀態的使用權限物件。</summary>
      <param name="securityElement">
        <see cref="T:System.Security.SecurityElement" />，包含用來重建使用權限物件的 XML 編碼方式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> 的 <see cref="P:System.Security.SecurityElement.Tag" /> 屬性不等於 "IPermission"。  
-或- 
<paramref name="securityElement" /> 的類別 <see cref="M:System.Security.SecurityElement.Attribute(System.String)" /> 是 <see langword="null" /> 或空字串 ("")。</exception>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.Intersect(System.Security.IPermission)">
      <summary>當由衍生類別實作時，建立並傳回目前使用權限和指定使用權限交集的使用權限。</summary>
      <param name="target">要與目前權限結合的權限， 必須與目前權限屬於相同的類型。</param>
      <returns>
        <see cref="T:System.Security.IPermission" />，表示目前使用權限和指定之使用權限的交集，如果交集是空的，則為 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 不是 <see cref="T:System.Web.AspNetHostingPermission" />。</exception>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>傳回值，指出目前的使用權限是否為指定使用權限的子集。</summary>
      <param name="target">
        <see cref="T:System.Security.IPermission" />，要結合目前的使用權限。 它必須與目前的 <see cref="T:System.Security.IPermission" /> 為相同的型別。</param>
      <returns>如果目前 <see cref="T:System.Security.IPermission" /> 是指定之 <see cref="T:System.Security.IPermission" /> 的子集，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 不是 <see cref="T:System.Web.AspNetHostingPermission" />。</exception>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.IsUnrestricted">
      <summary>傳回值，指出是否允許不受限制地存取受使用權限保護的資源。</summary>
      <returns>如果允許不受限制地使用受使用權限保護的資源，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Web.AspNetHostingPermission.Level">
      <summary>取得或設定 ASP.NET 應用程式目前裝載的使用權限等級。</summary>
      <returns>其中一個 <see cref="T:System.Web.AspNetHostingPermissionLevel" /> 列舉值。</returns>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.ToXml">
      <summary>建立使用權限物件的 XML 編碼方式，和其目前狀態。</summary>
      <returns>
        <see cref="T:System.Security.SecurityElement" />，包含使用權限物件的 XML 編碼方式，含任何狀態資訊。</returns>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.Union(System.Security.IPermission)">
      <summary>建立目前權限與指定權限聯集的權限。</summary>
      <param name="target">要與目前權限結合的權限， 必須與目前權限屬於相同的類型。</param>
      <returns>
        <see cref="T:System.Security.IPermission" />，表示目前使用權限和指定使用權限的聯集。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 不是 <see cref="T:System.Web.AspNetHostingPermission" />。</exception>
    </member>
    <member name="T:System.Web.AspNetHostingPermissionAttribute">
      <summary>允許將 <see cref="T:System.Web.AspNetHostingPermission" /> 的安全性動作套用至使用宣告式安全性的程式碼。 這個類別無法被繼承。</summary>
    </member>
    <member name="M:System.Web.AspNetHostingPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>初始化 <see cref="T:System.Web.AspNetHostingPermissionAttribute" /> 類別的新執行個體。</summary>
      <param name="action">其中一個 <see cref="T:System.Security.Permissions.SecurityAction" /> 列舉值。</param>
    </member>
    <member name="M:System.Web.AspNetHostingPermissionAttribute.CreatePermission">
      <summary>使用 <see cref="P:System.Web.AspNetHostingPermissionAttribute.Level" /> 屬性先前設定的權限等級，建立新的 <see cref="T:System.Web.AspNetHostingPermission" />。</summary>
      <returns>
        <see cref="T:System.Security.IPermission" />，它是新的 <see cref="T:System.Web.AspNetHostingPermission" />。</returns>
    </member>
    <member name="P:System.Web.AspNetHostingPermissionAttribute.Level">
      <summary>取得或設定目前裝載的權限等級。</summary>
      <returns>其中一個 <see cref="T:System.Web.AspNetHostingPermissionLevel" /> 列舉值。</returns>
    </member>
    <member name="T:System.Web.AspNetHostingPermissionLevel">
      <summary>指定授與 ASP.NET Web 應用程式的信任層級。</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.High">
      <summary>表示使用小於或等於 <see langword="High" /> 信任層級之任何層級的需求保護的功能將會成功。 此層級適用於高度信任的 Managed 程式碼應用程式，其需要使用大部分支援不完全信任存取的 Managed 權限。 它不會授與某些最高權限 (例如，能夠呼叫原生程式碼)，但會提供一種方式，利用最低權限來執行信任的應用程式，或者針對高度信任的應用程式提供某種程度的條件約束。 此層級是藉由在組態檔的 trust 區段中，至少設定 <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /> 信任層級來授與。</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.Low">
      <summary>表示使用小於或等於 <see cref="F:System.Web.AspNetHostingPermissionLevel.Low" /> 層級之任何層級的需求保護的功能將會成功。 此層級適合用來允許唯讀存取受限環境中的有限資源。 此層級是藉由在組態檔的 trust 區段中，指定 <see cref="F:System.Web.AspNetHostingPermissionLevel.Low" /> 信任層級來授與。</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.Medium">
      <summary>表示使用小於或等於 <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> 層級之任何層級的需求保護的功能將會成功。 此層級是藉由在組態檔的 trust 區段中，至少設定 <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> 信任層級來授與。</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.Minimal">
      <summary>表示使用 <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" /> 層級的需求保護的功能將會成功。 此層級可讓程式碼執行，但無法與存在於系統上的資源進行互動。 此層級是藉由在組態檔的 trust 區段中，至少設定 <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" /> 信任層級來授與。</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.None">
      <summary>表示未授與任何權限。 <see cref="T:System.Web.AspNetHostingPermission" /> 的所有需求都將失敗。</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.Unrestricted">
      <summary>表示將授與要使用所有應用程式功能之權限的所有需求。 這相當於在組態檔的 trust 區段中授與 <see langword="Full" /> 信任層級。</summary>
    </member>
    <member name="T:System.Xaml.Permissions.XamlAccessLevel">
      <summary>針對 XAML 載入目的，定義組件和型別的存取控制。</summary>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(System.Reflection.Assembly)">
      <summary>根據 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 所要求的組件傳回 <see cref="T:System.Reflection.Assembly" /> 執行個體。</summary>
      <param name="assembly">要求的組件。</param>
      <returns>
        <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 執行個體，其中使用 <paramref name="assembly" /> 值做為 <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /> 的來源資訊。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assembly" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(System.Reflection.AssemblyName)">
      <summary>根據 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 所要求的組件傳回 <see cref="T:System.Reflection.AssemblyName" /> 執行個體。</summary>
      <param name="assemblyName">要求的組件名稱。</param>
      <returns>
        <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 執行個體，其中使用 <paramref name="assemblyName" /> 值做為 <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /> 的來源資訊。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="assemblyName" /> 不是有效的完整組件名稱。</exception>
    </member>
    <member name="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName">
      <summary>取得組件的 <see cref="T:System.Reflection.AssemblyName" />，這個 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 會決定此組件的使用權限。</summary>
      <returns>組件的 <see cref="T:System.Reflection.AssemblyName" />，這個 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 會決定此組件的使用權限。</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.String)">
      <summary>根據以限定名稱指定的特定型別，傳回 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 執行個體。</summary>
      <param name="assemblyQualifiedTypeName">剖析為組件限定型別名稱的字串。</param>
      <returns>
        <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 執行個體，其中使用 <paramref name="assemblyQualifiedTypeName" /> 值做為 <see cref="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName" /> 的來源資訊，並由型別上的反映來決定 <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyQualifiedTypeName" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="assemblyQualifiedTypeName" /> 不是有效的組件限定型別名稱。  
-或- 
<paramref name="assemblyQualifiedTypeName" /> 內的組件名稱不是有效的組件名稱。</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.Type)">
      <summary>根據 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 所指定的特定型別，傳回 <see cref="T:System.Type" /> 執行個體。</summary>
      <param name="type">要求存取的 <see cref="T:System.Type" />。</param>
      <returns>
        <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 執行個體，其中使用 <paramref name="type" /> 值做為 <see cref="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName" /> 的來源資訊，並由型別上的反映來決定 <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName">
      <summary>取得型別的未限定字串名稱，這個 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 會決定此型別的使用權限。</summary>
      <returns>型別的未限定字串名稱，這個 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 會決定此型別的使用權限。</returns>
    </member>
    <member name="T:System.Xaml.Permissions.XamlLoadPermission">
      <summary>針對從 XAML 讀取器或寫入器使用的組件中載入型別，宣告使用權限。</summary>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Collections.Generic.IEnumerable{System.Xaml.Permissions.XamlAccessLevel})">
      <summary>使用特定 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 值的可列舉集合，初始化 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 類別的新執行個體。</summary>
      <param name="allowedAccess">特定 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 值的可舉列集合。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="allowedAccess" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="allowedAccess" /> 包含無效的資訊，例如 Null 項目。</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>使用現有的使用權限，初始化 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 類別的新執行個體。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 列舉值。</param>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Xaml.Permissions.XamlAccessLevel)">
      <summary>使用單一 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 值，初始化 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 類別的新執行個體。</summary>
      <param name="allowedAccess">定義性的 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="allowedAccess" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess">
      <summary>取得這個 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 表示的所有 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 值的清單。</summary>
      <returns>
        <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 值的唯讀清單，或 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Copy">
      <summary>建立並傳回目前 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 的相同複本。</summary>
      <returns>目前 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 的複本。</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Equals(System.Object)">
      <param name="obj" />
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.FromXml(System.Security.SecurityElement)">
      <summary>透過 XML 編碼，重新建構具有指定狀態的安全性物件。</summary>
      <param name="elem">用來重新建構安全性物件的 XML 編碼方式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elem" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elem" /> 不包含 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 的 XML 編碼方式。  
-或- 
不支援內 <paramref name="elem" /> 的版本屬性。</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.GetHashCode" />
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Includes(System.Xaml.Permissions.XamlAccessLevel)">
      <summary>傳回這個 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 的 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 清單中是否包括指定的 <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" />。</summary>
      <param name="requestedAccess">要檢查的特定 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />。</param>
      <returns>如果 <paramref name="requestedAccess" /> 是目前 <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" /> 的 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 清單中的項目，則為 <see langword="true" />。 否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestedAccess" /> 為 null。</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Intersect(System.Security.IPermission)">
      <summary>建立並傳回目前 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 和指定之使用權限交集而成的 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />。</summary>
      <param name="target">要與目前 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 交集的 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />。 可以是 <see langword="null" />。</param>
      <returns>新的使用權限，表示目前 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 和指定之 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 的交集。 如果交集是空的，這個新權限就是 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 是 <see langword="null" /> 或不是 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />。</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>判斷目前 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 是否為指定之使用權限的子集。</summary>
      <param name="target">要測試子集關聯性的權限。 可以是 <see langword="null" />。</param>
      <returns>如果目前的 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 是指定之使用權限的子集，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 是 <see langword="null" /> 或不是 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />。</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted">
      <summary>傳回這個 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 是否代表不受限制的使用權限。</summary>
      <returns>如果這個 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 代表不受限制的使用權限，則為 <see langword="true" />。 如果這個 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 在 <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" /> 中有特定的存取層級限制，或沒有使用權限，則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.ToXml">
      <summary>建立這個 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 和其目前狀態的 XML 編碼。</summary>
      <returns>這個 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 的 XML 編碼，包含任何狀態資訊。</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Union(System.Security.IPermission)">
      <summary>建立目前 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 和指定之使用權限聯集而成的使用權限。</summary>
      <param name="other">要與目前的 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 結合的 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />。 可以是 <see langword="null" />。</param>
      <returns>新 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />，表示目前 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 和指定 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 的聯集。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" /> 是 <see langword="null" /> 或不是 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />。</exception>
    </member>
  </members>
</doc>