<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>WindowsBase</name>
  </assembly>
  <members>
    <member name="T:System.Collections.Specialized.CollectionChangedEventManager">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation so that you can use the &quot;weak event listener&quot; pattern to attach listeners for the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">提供 <see cref="T:System.Windows.WeakEventManager" /> 實作，讓您能夠使用「弱式事件接聽程式」模式附加 <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> 事件的接聽程式。</summary>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.AddHandler(System.Collections.Specialized.INotifyCollectionChanged,System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs})">
      <summary vsli:raw="Adds the specified event handler, which is called when specified source raises the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">加入指定的事件處理常式，當指定的來源引發 <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> 事件時，就會呼叫這個處理常式。</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">引發 <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> 事件的來源物件。</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">處理 <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> 事件的委派。</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.AddListener(System.Collections.Specialized.INotifyCollectionChanged,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Adds the specified listener to the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event of the specified source.">將指定的接聽程式加入至指定之來源的 <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> 事件。</summary>
      <param name="source" vsli:raw="The object with the event.">具有事件的物件。</param>
      <param name="listener" vsli:raw="The object to add as a listener.">要加入做為接聽程式的物件。</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">傳回新的物件，包含 <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> 事件的接聽程式。</summary>
      <returns vsli:raw="A new object to contain listeners to the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">包含 <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> 事件之接聽程式的新物件。</returns>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.RemoveHandler(System.Collections.Specialized.INotifyCollectionChanged,System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs})">
      <summary vsli:raw="Removes the specified event handler from the specified source.">從指定的來源中移除指定的事件處理常式。</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">引發 <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> 事件的來源物件。</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event.">處理 <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> 事件的委派。</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.RemoveListener(System.Collections.Specialized.INotifyCollectionChanged,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Removes the specified listener from the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event of the specified source.">從指定之來源的 <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> 事件中移除指定的接聽程式。</summary>
      <param name="source" vsli:raw="The object with the event.">具有事件的物件。</param>
      <param name="listener" vsli:raw="The listener to remove.">要移除的接聽程式。</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.StartListening(System.Object)">
      <summary vsli:raw="Begins listening for the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event on the specified source.">開始接聽所指定來源上的 <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> 事件。</summary>
      <param name="source" vsli:raw="The object with the event.">具有事件的物件。</param>
    </member>
    <member name="M:System.Collections.Specialized.CollectionChangedEventManager.StopListening(System.Object)">
      <summary vsli:raw="Stops listening for the &lt;see cref=&quot;E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&quot; /&gt; event on the specified source.">停止接聽所指定來源上的 <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> 事件。</summary>
      <param name="source" vsli:raw="The object with the event.">具有事件的物件。</param>
    </member>
    <member name="T:System.ComponentModel.CurrentChangedEventManager">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation so that you can use the &quot;weak event listener&quot; pattern to attach listeners for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">提供 <see cref="T:System.Windows.WeakEventManager" /> 實作，讓您能夠使用「弱式事件接聽程式」模式附加 <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> 事件的接聽程式。</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.AddHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.EventArgs})">
      <summary vsli:raw="Adds the specified event handler, which is called when specified source raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">加入指定的事件處理常式，當指定的來源引發 <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> 事件時，就會呼叫這個處理常式。</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">引發 <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> 事件的來源物件。</param>
      <param name="handler" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">引發 <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> 事件的來源物件。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.AddListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Adds the specified listener to the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event of the specified source.">將指定的接聽程式加入至指定之來源的 <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> 事件。</summary>
      <param name="source" vsli:raw="The object with the event.">具有事件的物件。</param>
      <param name="listener" vsli:raw="The object to add as a listener.">要加入做為接聽程式的物件。</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">傳回新的物件，包含 <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> 事件的接聽程式。</summary>
      <returns vsli:raw="A new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">包含 <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> 事件之接聽程式的新物件。</returns>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.RemoveHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.EventArgs})">
      <summary vsli:raw="Removes the specified event handler from the specified source.">從指定的來源中移除指定的事件處理常式。</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">引發 <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> 事件的來源物件。</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event.">處理 <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> 事件的委派。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.RemoveListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Removes the specified listener from the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event of the specified source.">從指定之來源的 <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> 事件中移除指定的接聽程式。</summary>
      <param name="source" vsli:raw="The object with the event.">具有事件的物件。</param>
      <param name="listener" vsli:raw="The listener to remove.">要移除的接聽程式。</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.StartListening(System.Object)">
      <summary vsli:raw="Begins listening for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event on the specified source.">開始接聽所指定來源上的 <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> 事件。</summary>
      <param name="source" vsli:raw="The object with the event.">具有事件的物件。</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangedEventManager.StopListening(System.Object)">
      <summary vsli:raw="Stops listening for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanged&quot; /&gt; event on the specified source.">停止接聽所指定來源上的 <see cref="E:System.ComponentModel.ICollectionView.CurrentChanged" /> 事件。</summary>
      <param name="source" vsli:raw="The object with the event.">具有事件的物件。</param>
    </member>
    <member name="T:System.ComponentModel.CurrentChangingEventArgs">
      <summary vsli:raw="Provides information for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">提供 <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> 事件的資訊。</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventArgs.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.CurrentChangingEventArgs&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.CurrentChangingEventArgs" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventArgs.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.CurrentChangingEventArgs&quot; /&gt; class with the specified &lt;paramref name=&quot;isCancelable&quot; /&gt; value.">使用指定的 <paramref name="isCancelable" /> 值，初始化 <see cref="T:System.ComponentModel.CurrentChangingEventArgs" /> 類別的新執行個體。</summary>
      <param name="isCancelable" vsli:raw="A value that indicates whether the event is cancelable.">指出事件是否可取消的值。</param>
    </member>
    <member name="P:System.ComponentModel.CurrentChangingEventArgs.Cancel">
      <summary vsli:raw="Gets or sets a value that indicates whether to cancel the event.">取得或設定值，指出是否要取消事件。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the event is to be canceled; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;false&quot; /&gt;.">如果要取消事件，則為 <see langword="true" />；否則為 <see langword="false" />。 預設值為 <see langword="false" />。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="If the value of &lt;see cref=&quot;P:System.ComponentModel.CurrentChangingEventArgs.IsCancelable&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="P:System.ComponentModel.CurrentChangingEventArgs.IsCancelable" /> 的值為 <see langword="false" />。</exception>
    </member>
    <member name="P:System.ComponentModel.CurrentChangingEventArgs.IsCancelable">
      <summary vsli:raw="Gets a value that indicates whether the event is cancelable.">取得值，這個值表示事件是否可取消。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the event is cancelable, otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">如果事件可以取消則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="true" />。</returns>
    </member>
    <member name="T:System.ComponentModel.CurrentChangingEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Windows.Data.CollectionView.CurrentChanging&quot; /&gt; event.">代表處理 <see cref="E:System.Windows.Data.CollectionView.CurrentChanging" /> 事件的方法。</summary>
      <param name="sender" vsli:raw="The object that raised the event.">引發事件的物件。</param>
      <param name="e" vsli:raw="Information about the event.">事件相關資訊。</param>
    </member>
    <member name="T:System.ComponentModel.CurrentChangingEventManager">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation so that you can use the &quot;weak event listener&quot; pattern to attach listeners for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">提供 <see cref="T:System.Windows.WeakEventManager" /> 實作，讓您能夠使用「弱式事件接聽程式」模式附加 <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> 事件的接聽程式。</summary>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.AddHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.ComponentModel.CurrentChangingEventArgs})">
      <summary vsli:raw="Adds the specified event handler, which is called when specified source raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">加入指定的事件處理常式，當指定的來源引發 <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> 事件時，就會呼叫這個處理常式。</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">引發 <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> 事件的來源物件。</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">處理 <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> 事件的委派。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.AddListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Adds the specified listener to the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event of the specified source.">將指定的接聽程式加入至指定之來源的 <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> 事件。</summary>
      <param name="source" vsli:raw="The object with the event.">具有事件的物件。</param>
      <param name="listener" vsli:raw="The object to add as a listener.">要加入做為接聽程式的物件。</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">傳回新的物件，包含 <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> 事件的接聽程式。</summary>
      <returns vsli:raw="A new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">包含 <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> 事件之接聽程式的新物件。</returns>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.RemoveHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.ComponentModel.CurrentChangingEventArgs})">
      <summary vsli:raw="Removes the specified event handler from the specified source.">從指定的來源中移除指定的事件處理常式。</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">引發 <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> 事件的來源物件。</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event.">處理 <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> 事件的委派。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.RemoveListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Removes the specified listener from the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event of the specified source.">從指定之來源的 <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> 事件中移除指定的接聽程式。</summary>
      <param name="source" vsli:raw="The object with the event.">具有事件的物件。</param>
      <param name="listener" vsli:raw="The listener to remove.">要移除的接聽程式。</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.StartListening(System.Object)">
      <summary vsli:raw="Begins listening for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event on the specified source.">開始接聽所指定來源上的 <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> 事件。</summary>
      <param name="source" vsli:raw="The object with the event.">具有事件的物件。</param>
    </member>
    <member name="M:System.ComponentModel.CurrentChangingEventManager.StopListening(System.Object)">
      <summary vsli:raw="Stops listening for the &lt;see cref=&quot;E:System.ComponentModel.ICollectionView.CurrentChanging&quot; /&gt; event on the specified source.">停止接聽所指定來源上的 <see cref="E:System.ComponentModel.ICollectionView.CurrentChanging" /> 事件。</summary>
      <param name="source" vsli:raw="The object with the event.">具有事件的物件。</param>
    </member>
    <member name="T:System.ComponentModel.DependencyPropertyDescriptor">
      <summary vsli:raw="Provides an extension of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that accounts for the additional property characteristics of a dependency property.">提供 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 的擴充，說明相依性屬性的其他屬性特性。</summary>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)">
      <summary vsli:raw="Enables other objects to be notified when this property changes.">使其他物件能在這個屬性變更時受到告知。</summary>
      <param name="component" vsli:raw="The component to add the handler for.">要為其加入處理常式的元件。</param>
      <param name="handler" vsli:raw="The delegate to add as a listener.">要加入以做為接聽程式 (Listener) 的委派。</param>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Attributes">
      <summary vsli:raw="Gets the collection of attributes for this member.">取得這個成員的屬性集合。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.AttributeCollection&quot; /&gt; collection of attributes.">屬性 (Attribute) 的 <see cref="T:System.ComponentModel.AttributeCollection" /> 集合。</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.CanResetValue(System.Object)">
      <summary vsli:raw="Returns whether resetting an object changes its value.">傳回值，表示重設物件是否變更其值。</summary>
      <param name="component" vsli:raw="The component to test for reset capability.">要測試重設能力的元件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if resetting the component changes its value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果重設元件會變更其值，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Category">
      <summary vsli:raw="Gets the name of the category that the member belongs to, as specified in the &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt;.">取得成員所屬的分類名稱，如 <see cref="T:System.ComponentModel.CategoryAttribute" /> 中所指定的。</summary>
      <returns vsli:raw="The name of the category to which the member belongs. If there is no &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt;, the category name is set to the default category, &lt;see langword=&quot;Misc&quot; /&gt;.">成員所屬的分類名稱。 如果沒有 <see cref="T:System.ComponentModel.CategoryAttribute" />，則分類名稱會設定為預設分類 <see langword="Misc" />。</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.ComponentType">
      <summary vsli:raw="Gets the type of the component this property is bound to.">取得這個屬性所繫結的元件型別。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the type of component this property is bound to. When &lt;see cref=&quot;M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)&quot; /&gt; or &lt;see cref=&quot;M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)&quot; /&gt; are invoked, the object specified might be an instance of this type.">
        <see cref="T:System.Type" />，表示這個屬性所繫結的元件型別。 當叫用 <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)" /> 或 <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" /> 時，指定的物件可能是這個型別的執行個體。</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Converter">
      <summary vsli:raw="Gets the type converter for this property.">取得這個屬性的型別轉換子。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; that is used to convert the &lt;see cref=&quot;T:System.Type&quot; /&gt; of this property.">
        <see cref="T:System.ComponentModel.TypeConverter" />，用來轉換這個屬性的 <see cref="T:System.Type" />。</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.DependencyProperty">
      <summary vsli:raw="Returns the dependency property identifier.">傳回相依性屬性的識別項。</summary>
      <returns vsli:raw="The dependency property identifier.">相依性屬性識別項。</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Description">
      <summary vsli:raw="Gets the description of the member, as specified in the &lt;see cref=&quot;T:System.ComponentModel.DescriptionAttribute&quot; /&gt;.">取得成員的描述，如 <see cref="T:System.ComponentModel.DescriptionAttribute" /> 中所指定的。</summary>
      <returns vsli:raw="The description of the member. If there is no &lt;see cref=&quot;T:System.ComponentModel.DescriptionAttribute&quot; /&gt;, the property value is set to the default, which is an empty string (&quot;&quot;).">成員的描述。 如果沒有 <see cref="T:System.ComponentModel.DescriptionAttribute" />，則屬性值會設為預設，即空字串 ("")。</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.DesignerCoerceValueCallback">
      <summary vsli:raw="Gets or sets a callback that designers use to modify the effective value of a dependency property before the dependency property value is stored in the dependency property engine.">取得或設定回呼，設計工具使用這個回呼修改相依性屬性的有效值，然後再將相依性屬性值儲存在相依性屬性引擎。</summary>
      <returns vsli:raw="A callback that designers use to modify the effective value of a dependency property before the dependency property value is stored in the dependency property engine.">回呼，設計工具用來修改相依性屬性的有效值，然後再將相依性屬性值儲存在相依性屬性引擎。</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.DesignTimeOnly">
      <summary vsli:raw="Gets whether this member should be set only at design time, as specified in the &lt;see cref=&quot;T:System.ComponentModel.DesignOnlyAttribute&quot; /&gt;.">取得值，表示這個成員是否只在設計階段設定，如 <see cref="T:System.ComponentModel.DesignOnlyAttribute" /> 中所指定的。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this member should be set only at design time; &lt;see langword=&quot;false&quot; /&gt; if the member can be set during run time. If there is no &lt;see cref=&quot;T:System.ComponentModel.DesignOnlyAttribute&quot; /&gt;, the return value is the default, which is &lt;see langword=&quot;false&quot; /&gt;.">如果這個成員只應該在設計階段設定，則為 <see langword="true" />；如果成員可在 Run Time 期間設定，則為 <see langword="false" />。 如果沒有 <see cref="T:System.ComponentModel.DesignOnlyAttribute" />，則傳回值為預設值，即 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.DisplayName">
      <summary vsli:raw="Gets the name that can be displayed in a window, such as a Properties window.">取得可在視窗 (例如 [屬性] 視窗) 中顯示的名稱。</summary>
      <returns vsli:raw="The name to display for the property.">要顯示的屬性名稱。</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.Equals(System.Object)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; instances for equality.">比較兩個 <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> 執行個體是否相等。</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; to compare with the current instance.">要與目前執行個體比較的 <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the values are equivalent; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果值相等，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; for a provided property name.">傳回已提供之屬性名稱的 <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />。</summary>
      <param name="name" vsli:raw="The registered name of a dependency property or an attached property.">相依性屬性或附加屬性的註冊名稱。</param>
      <param name="ownerType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object that owns the property definition.">擁有屬性定義之物件的 <see cref="T:System.Type" />。</param>
      <param name="targetType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object you want to set the property for.">要設定其屬性之物件的 <see cref="T:System.Type" />。</param>
      <returns vsli:raw="The requested &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt;.">所要求的 <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />。</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; for a provided property name.">傳回已提供之屬性名稱的 <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />。</summary>
      <param name="name" vsli:raw="The registered name of a dependency property or an attached property.">相依性屬性或附加屬性的註冊名稱。</param>
      <param name="ownerType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object that owns the property definition.">擁有屬性定義之物件的 <see cref="T:System.Type" />。</param>
      <param name="targetType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object you want to set the property for.">要設定其屬性之物件的 <see cref="T:System.Type" />。</param>
      <param name="ignorePropertyType" vsli:raw="Specifies to ignore the property type.">指定忽略屬性型別。</param>
      <returns vsli:raw="The requested &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt;.">所要求的 <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />。</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; for a provided &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt;.">傳回所提供之 <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> 的 <see cref="T:System.ComponentModel.PropertyDescriptor" />。</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; to check.">要進行檢查的 <see cref="T:System.ComponentModel.PropertyDescriptor" />。</param>
      <returns vsli:raw="If the property described by &lt;paramref name=&quot;property&quot; /&gt; is a dependency property, returns a valid &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt;. Otherwise, returns a &lt;see langword=&quot;null&quot; /&gt;&lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt;.">如果 <paramref name="property" /> 所描述的屬性是相依性屬性，則會傳回有效的 <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />。 否則會傳回 <see langword="null" /><see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />。</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; for a provided dependency property and target type.">傳回所提供之相依性屬性和目標類型的 <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />。</summary>
      <param name="dependencyProperty" vsli:raw="The identifier for a dependency property.">相依性屬性的識別項。</param>
      <param name="targetType" vsli:raw="The type of the object where the property is set.">設定屬性之物件的型別。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt; for the provided dependency property.">所提供之相依性屬性的 <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" />。</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt;.">傳回 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</summary>
      <param name="instance" vsli:raw="A component to get the properties for.">要為其取得屬性的元件。</param>
      <param name="filter" vsli:raw="An array of type &lt;see cref=&quot;T:System.Attribute&quot; /&gt; to use as a filter.">
        <see cref="T:System.Attribute" /> 型別的陣列，可用來當做篩選條件。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; with the properties that match the specified attributes for the specified component.">
        <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />，具有與指定元件的指定屬性 (Attribute) 相符的屬性 (Property)。</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.GetEditor(System.Type)">
      <summary vsli:raw="Gets an editor of the specified type.">取得指定型別的編輯器。</summary>
      <param name="editorBaseType" vsli:raw="The base type of editor, which is used to differentiate between multiple editors that a property supports.">編輯器的基底型別 (Base Type)，用來區分屬性支援的多個編輯器。</param>
      <returns vsli:raw="An instance of the requested editor type, or &lt;see langword=&quot;null&quot; /&gt; if an editor cannot be found.">要求的編輯器型別的執行個體，或者如果找不到，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.ComponentModel.DependencyPropertyDescriptor&quot; /&gt;.">傳回這個 <see cref="T:System.ComponentModel.DependencyPropertyDescriptor" /> 的雜湊程式碼。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 位元帶正負號的整數雜湊碼。</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.GetValue(System.Object)">
      <summary vsli:raw="Returns the current value of the property on a component.">傳回元件上屬性的目前值。</summary>
      <param name="component" vsli:raw="The component instance.">元件執行個體。</param>
      <returns vsli:raw="The requested value.">要求的值。</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.IsAttached">
      <summary vsli:raw="Gets a value that indicates whether the property is registered as an attached property and is being used through an attached usage.">取得值，指出屬性是否註冊為附加屬性，並正透過附加使用方式使用中。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property is an attached property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果屬性是附加屬性，則為<see langword="true" /> ；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.IsBrowsable">
      <summary vsli:raw="Gets a value that indicates the value of the &lt;see cref=&quot;T:System.ComponentModel.BrowsableAttribute&quot; /&gt; on the property.">取得值，這個值表示屬性上的 <see cref="T:System.ComponentModel.BrowsableAttribute" /> 值。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.BrowsableAttribute&quot; /&gt; was specified on the property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果在屬性上指定了 <see cref="T:System.ComponentModel.BrowsableAttribute" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.IsLocalizable">
      <summary vsli:raw="Gets a value indicating whether this property should be localized, as specified in the &lt;see cref=&quot;T:System.ComponentModel.LocalizableAttribute&quot; /&gt;.">取得值，表示這個屬性是否應該當地語系化，如 <see cref="T:System.ComponentModel.LocalizableAttribute" /> 中指定的。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the member is marked with the &lt;see cref=&quot;T:System.ComponentModel.LocalizableAttribute&quot; /&gt; constructor of the value true; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果使用 true 值的 <see cref="T:System.ComponentModel.LocalizableAttribute" /> 建構函式標示成員，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether this property is read-only.">取得值，表示這個屬性是否為唯讀。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果屬性是唯讀，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Metadata">
      <summary vsli:raw="Gets the metadata associated with the dependency property.">取得與相依性屬性相關聯的中繼資料。</summary>
      <returns vsli:raw="The dependency property metadata.">相依性屬性中繼資料。</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.PropertyType">
      <summary vsli:raw="Gets the represented &lt;see cref=&quot;T:System.Type&quot; /&gt; of the dependency property.">取得相依性屬性的代表 <see cref="T:System.Type" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the dependency property.">相依性屬性的 <see cref="T:System.Type" /> 。</returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
      <summary vsli:raw="Enables other objects to be notified when this property changes.">使其他物件能在這個屬性變更時受到告知。</summary>
      <param name="component" vsli:raw="The component to add the handler for.">要為其加入處理常式的元件。</param>
      <param name="handler" vsli:raw="The delegate to add as a listener.">要加入以做為接聽程式 (Listener) 的委派。</param>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.ResetValue(System.Object)">
      <summary vsli:raw="Resets the value for this property of the component to the default value.">將元件的這個屬性值重設為預設值。</summary>
      <param name="component" vsli:raw="The component with the property value that is to be reset to the default value.">屬性值要重設為預設值的元件。</param>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)">
      <summary vsli:raw="Sets the value of the component to a different value.">將元件的值設定為不同的值。</summary>
      <param name="component" vsli:raw="The component with the property value that is to be set.">屬性值將要設定的元件。</param>
      <param name="value" vsli:raw="The new value.">新值。</param>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.ShouldSerializeValue(System.Object)">
      <summary vsli:raw="Indicates whether the value of this property needs to be persisted by serialization processes.">指出這個屬性值是否需要由序列化處理序保存。</summary>
      <param name="component" vsli:raw="The component with the property to be examined for persistence.">元件，具有要檢查保存性 (Persistence) 的屬性。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property should be persisted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果屬性應該要保存，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.DependencyPropertyDescriptor.SupportsChangeEvents">
      <summary vsli:raw="Indicates whether value change notifications for this property may originate from outside the property descriptor, such as from the component itself, or whether notifications will only originate from direct calls made to &lt;see cref=&quot;M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)&quot; /&gt;.">指示這個屬性的數值變更告知是否可能來自屬性描述項之外 (例如來自元件本身)，或者告知只會來自 <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" /> 的直接呼叫。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if notifications for this property may originate from outside the property descriptor, such as from the component itself. &lt;see langword=&quot;false&quot; /&gt; if notifications will only originate from direct calls made to &lt;see cref=&quot;M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)&quot; /&gt;.">如果這個屬性的告知可能來自屬性描述項之外，例如來自元件本身，則為 <see langword="true" />。 如果告知只來自 <see cref="M:System.ComponentModel.DependencyPropertyDescriptor.SetValue(System.Object,System.Object)" /> 的直接呼叫，則為 <see langword="false" /></returns>
    </member>
    <member name="M:System.ComponentModel.DependencyPropertyDescriptor.ToString">
      <summary vsli:raw="Converts the value of this instance to its equivalent string representation.">將這個執行個體的值轉換為它的相等字串表示。</summary>
      <returns vsli:raw="Returns the &lt;see cref=&quot;P:System.ComponentModel.MemberDescriptor.Name&quot; /&gt; value.">傳回 <see cref="P:System.ComponentModel.MemberDescriptor.Name" /> 值。</returns>
    </member>
    <member name="T:System.ComponentModel.ErrorsChangedEventManager">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation so that you can use the weak event listener pattern to attach listeners for the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">提供 <see cref="T:System.Windows.WeakEventManager" /> 實作 (Implementation)，使您可以使用「弱式事件接聽程式」(Weak Event Listener) 模式來附加 <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> 事件的接聽程式。</summary>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.AddHandler(System.ComponentModel.INotifyDataErrorInfo,System.EventHandler{System.ComponentModel.DataErrorsChangedEventArgs})">
      <summary vsli:raw="Adds the specified event handler, which is called when specified source raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">加入指定的事件處理常式，當指定的來源引發 <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> 事件時，就會呼叫這個處理常式。</summary>
      <param name="source" vsli:raw="The source object that raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">引發 <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> 事件的來源物件。</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">處理 <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> 事件的委派。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">傳回新的物件，包含 <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> 事件的接聽程式。</summary>
      <returns vsli:raw="A new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">包含 <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> 事件之接聽程式的新物件。</returns>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.RemoveHandler(System.ComponentModel.INotifyDataErrorInfo,System.EventHandler{System.ComponentModel.DataErrorsChangedEventArgs})">
      <summary vsli:raw="Removes the specified event handler from the specified source.">從指定的來源中移除指定的事件處理常式。</summary>
      <param name="source" vsli:raw="The source object that raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">引發 <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> 事件的來源物件。</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">處理 <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> 事件的委派。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.StartListening(System.Object)">
      <summary vsli:raw="Begins listening for the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event on the specified source.">開始接聽所指定來源上的 <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> 事件。</summary>
      <param name="source" vsli:raw="The source object that raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">引發 <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> 事件的來源物件。</param>
    </member>
    <member name="M:System.ComponentModel.ErrorsChangedEventManager.StopListening(System.Object)">
      <summary vsli:raw="Stops listening for the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event on the specified source.">停止接聽所指定來源上的 <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> 事件。</summary>
      <param name="source" vsli:raw="The source object that raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged&quot; /&gt; event.">引發 <see cref="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" /> 事件的來源物件。</param>
    </member>
    <member name="T:System.ComponentModel.GroupDescription">
      <summary vsli:raw="Provides an abstract base class for types that describe how to divide the items in a collection into groups.">為描述如何將集合中的項目分組的類型，提供抽象基底類別。</summary>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.GroupDescription&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.GroupDescription" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.ComponentModel.GroupDescription.CustomSort">
      <summary vsli:raw="Gets or sets a custom comparer that sorts groups using an object that implements &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt;.">取得或設定自訂比較子，使用實作 <see cref="T:System.Collections.IComparer" /> 的物件來排序群組。</summary>
      <returns vsli:raw="A custom comparer that sorts groups using an object that implements &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt;.">自訂比較子，使用實作 <see cref="T:System.Collections.IComparer" /> 的物件來排序群組。</returns>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.GroupNameFromItem(System.Object,System.Int32,System.Globalization.CultureInfo)">
      <summary vsli:raw="Returns the group name(s) for the given item.">傳回指定項目的群組名稱。</summary>
      <param name="item" vsli:raw="The item to return group names for.">要為其傳回群組名稱的項目。</param>
      <param name="level" vsli:raw="The level of grouping.">群組層級。</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; to supply to the converter.">要提供給轉換器的 <see cref="T:System.Globalization.CultureInfo" />。</param>
      <returns vsli:raw="The group name(s) for the given item.">指定項目的群組名稱。</returns>
    </member>
    <member name="P:System.ComponentModel.GroupDescription.GroupNames">
      <summary vsli:raw="Gets the collection of names that are used to initialize a group with a set of subgroups with the given names.">取得名稱集合，這些名稱用來初始化有一組具指定名稱之子群組的群組。</summary>
      <returns vsli:raw="The collection of names that are used to initialize a group with a set of subgroups with the given names.">名稱集合，這些名稱用來初始化有一組具指定名稱之子群組的群組。</returns>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.NamesMatch(System.Object,System.Object)">
      <summary vsli:raw="Returns a value that indicates whether the group name and the item name match such that the item belongs to the group.">傳回值，指出群組名稱和項目名稱是否相符，以便讓項目歸屬於群組。</summary>
      <param name="groupName" vsli:raw="The name of the group to check.">要檢查的群組名稱。</param>
      <param name="itemName" vsli:raw="The name of the item to check.">要檢查的項目名稱。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the names match and the item belongs to the group; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果名稱相符且項目屬於群組，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.GroupDescription.PropertyChanged&quot; /&gt; event.">引發 <see cref="E:System.ComponentModel.GroupDescription.PropertyChanged" /> 事件。</summary>
      <param name="e" vsli:raw="Arguments of the event being raised.">所引發事件的引數。</param>
    </member>
    <member name="E:System.ComponentModel.GroupDescription.PropertyChanged">
      <summary vsli:raw="Occurs when a property value changes.">當屬性值變更時發生。</summary>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.ShouldSerializeGroupNames">
      <summary vsli:raw="Returns whether serialization processes should serialize the effective value of the &lt;see cref=&quot;P:System.ComponentModel.GroupDescription.GroupNames&quot; /&gt; property on instances of this class.">傳回序列化程序是否應序列化這個類別執行個體上 <see cref="P:System.ComponentModel.GroupDescription.GroupNames" /> 屬性的有效值。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.ComponentModel.GroupDescription.GroupNames&quot; /&gt; property value should be serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果應序列化 <see cref="P:System.ComponentModel.GroupDescription.GroupNames" /> 屬性值，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.GroupDescription.ShouldSerializeSortDescriptions">
      <summary vsli:raw="Returns whether serialization processes should serialize the effective value of the &lt;see cref=&quot;P:System.ComponentModel.GroupDescription.SortDescriptions&quot; /&gt; property on instances of this class.">傳回序列化程序是否應序列化這個類別執行個體上 <see cref="P:System.ComponentModel.GroupDescription.SortDescriptions" /> 屬性的有效值。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.ComponentModel.GroupDescription.SortDescriptions&quot; /&gt; property value should be serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果應序列化 <see cref="P:System.ComponentModel.GroupDescription.SortDescriptions" /> 屬性值，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.GroupDescription.SortDescriptions">
      <summary vsli:raw="Gets the collection of sort criteria in which to sort the groups.">取得用以排序群組的排序準則集合。</summary>
      <returns vsli:raw="The collection of sort criteria in which to sort the groups.">用以排序群組的排序準則集合。</returns>
    </member>
    <member name="E:System.ComponentModel.GroupDescription.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary vsli:raw="Occurs when a property value changes.">當屬性值變更時發生。</summary>
    </member>
    <member name="T:System.ComponentModel.ICollectionView">
      <summary vsli:raw="Enables collections to have the functionalities of current record management, custom sorting, filtering, and grouping.">讓集合擁有目前記錄管理、自訂排序、篩選和分組的功能。</summary>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CanFilter">
      <summary vsli:raw="Gets a value that indicates whether this view supports filtering via the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.Filter&quot; /&gt; property.">取得值，該值表示此檢視是否支援透過 <see cref="P:System.ComponentModel.ICollectionView.Filter" /> 屬性進行篩選的功能。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this view support filtering; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果此檢視支援篩選，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CanGroup">
      <summary vsli:raw="Gets a value that indicates whether this view supports grouping via the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.GroupDescriptions&quot; /&gt; property.">取得值，這個值表示此檢視是否支援透過 <see cref="P:System.ComponentModel.ICollectionView.GroupDescriptions" /> 屬性進行分組的功能。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this view supports grouping; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果此檢視支援分組，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CanSort">
      <summary vsli:raw="Gets a value that indicates whether this view supports sorting via the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.SortDescriptions&quot; /&gt; property.">取得值，這個值表示此檢視是否支援透過 <see cref="P:System.ComponentModel.ICollectionView.SortDescriptions" /> 屬性進行排序的功能。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this view supports sorting; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果這個檢視支援排序，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.Contains(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether a given item belongs to this collection view.">傳回值，其中該值指出指定的項目是否屬於此集合檢視。</summary>
      <param name="item" vsli:raw="The object to check.">要檢查的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the item belongs to this collection view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果項目屬於此集合檢視，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.Culture">
      <summary vsli:raw="Gets or sets the cultural info for any operations of the view that may differ by culture, such as sorting.">取得或設定文化資訊，描述此檢視依文化特性而異的任何作業，例如排序。</summary>
      <returns vsli:raw="The culture to use during sorting.">要在排序期間使用的文化特性。</returns>
    </member>
    <member name="E:System.ComponentModel.ICollectionView.CurrentChanged">
      <summary vsli:raw="When implementing this interface, raise this event after the current item has been changed.">實作這個介面時，在變更目前項目之後會引發這個事件。</summary>
    </member>
    <member name="E:System.ComponentModel.ICollectionView.CurrentChanging">
      <summary vsli:raw="When implementing this interface, raise this event before changing the current item. Event handler can cancel this event.">實作這個介面時，在變更目前項目之前會引發這個事件。 事件處理常式可以取消這個事件。</summary>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CurrentItem">
      <summary vsli:raw="Gets the current item in the view.">取得檢視中的目前項目。</summary>
      <returns vsli:raw="The current item of the view or &lt;see langword=&quot;null&quot; /&gt; if there is no current item.">檢視的目前項目，或者，如果沒有目前的項目，則為 <see langword="null" />。</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.CurrentPosition">
      <summary vsli:raw="Gets the ordinal position of the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; within the view.">取得 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> 在檢視中的序數位置。</summary>
      <returns vsli:raw="The ordinal position of the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; within the view.">
        <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> 在檢視中的序數位置。</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.DeferRefresh">
      <summary vsli:raw="Enters a defer cycle that you can use to merge changes to the view and delay automatic refresh.">進入延後循環，您可以用來合併變更到檢視，並且延遲自動重新整理。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; object that you can use to dispose of the calling object.">
        <see cref="T:System.IDisposable" /> 物件，可用來處置呼叫物件。</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.Filter">
      <summary vsli:raw="Gets or sets a callback used to determine if an item is suitable for inclusion in the view.">取得或設定回呼，這個回呼是用來判斷項目是否適合包含在檢視中。</summary>
      <returns vsli:raw="A method used to determine if an item is suitable for inclusion in the view.">用來判斷項目是否適合包含在檢視中的方法。</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.GroupDescriptions">
      <summary vsli:raw="Gets a collection of &lt;see cref=&quot;T:System.ComponentModel.GroupDescription&quot; /&gt; objects that describe how the items in the collection are grouped in the view.">取得 <see cref="T:System.ComponentModel.GroupDescription" /> 物件的集合，這些物件會描述如何在檢視中分組集合內的項目。</summary>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.ComponentModel.GroupDescription&quot; /&gt; objects that describe how the items in the collection are grouped in the view.">
        <see cref="T:System.ComponentModel.GroupDescription" /> 物件的集合，這些物件描述集合項目在檢視中的分組方式。</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.Groups">
      <summary vsli:raw="Gets the top-level groups.">取得最上層群組。</summary>
      <returns vsli:raw="A read-only collection of the top-level groups or &lt;see langword=&quot;null&quot; /&gt; if there are no groups.">最上層群組的唯讀集合，如果沒有群組，則為 <see langword="null" />。</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.IsCurrentAfterLast">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; of the view is beyond the end of the collection.">取得值，這個值表示檢視的 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> 是否超過集合的結尾。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; of the view is beyond the end of the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果檢視的 <see langword="true" /> 超過集合的結尾，則為 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.IsCurrentBeforeFirst">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; of the view is beyond the beginning of the collection.">取得值，這個值表示檢視的 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> 是否超過集合的開頭。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; of the view is beyond the beginning of the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />如果視圖的超過集合的開頭, 則為, <see langword="false" />否則為。 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /></returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.IsEmpty">
      <summary vsli:raw="Returns a value that indicates whether the resulting view is empty.">傳回值，指出產生的檢視是否為空白。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting view is empty; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果產生的檢視為空白，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentTo(System.Object)">
      <summary vsli:raw="Sets the specified item to be the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; in the view.">將指定項目設定為檢視中的 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />。</summary>
      <param name="item" vsli:raw="The item to set as the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt;.">要設定為 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> 的項目。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; is within the view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果產生的 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> 位於檢視之內，就是 <see langword="true" />，否則就是 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToFirst">
      <summary vsli:raw="Sets the first item in the view as the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt;.">將檢視中的第一個項目設定為 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; is an item within the view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果產生的 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> 是檢視內的項目，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToLast">
      <summary vsli:raw="Sets the last item in the view as the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt;.">將檢視中的最後一個項目設定為 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; is an item within the view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果產生的 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> 是檢視中的項目則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToNext">
      <summary vsli:raw="Sets the item after the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; in the view as the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt;.">將檢視中 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> 後面的項目設定為 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; is an item within the view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果產生的 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> 是檢視內的項目，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToPosition(System.Int32)">
      <summary vsli:raw="Sets the item at the specified index to be the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; in the view.">將指定索引處的項目設定為檢視中的 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />。</summary>
      <param name="position" vsli:raw="The index to set the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; to.">要設定 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> 的索引。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; is an item within the view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果產生的 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> 是檢視內的項目，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.MoveCurrentToPrevious">
      <summary vsli:raw="Sets the item before the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; in the view as the &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt;.">將檢視中 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> 前面的項目設定為 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the resulting &lt;see cref=&quot;P:System.ComponentModel.ICollectionView.CurrentItem&quot; /&gt; is an item within the view; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果產生的 <see cref="P:System.ComponentModel.ICollectionView.CurrentItem" /> 是檢視內的項目，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.ICollectionView.Refresh">
      <summary vsli:raw="Recreates the view.">重新建立檢視。</summary>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.SortDescriptions">
      <summary vsli:raw="Gets a collection of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; objects that describe how the items in the collection are sorted in the view.">取得 <see cref="T:System.ComponentModel.SortDescription" /> 物件的集合，這些物件描述如何在檢視中排序集合中的項目。</summary>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; objects that describe how the items in the collection are sorted in the view.">
        <see cref="T:System.ComponentModel.SortDescription" /> 物件的集合，這些物件描述如何在檢視中排序集合中的項目。</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionView.SourceCollection">
      <summary vsli:raw="Returns the underlying collection.">傳回基礎集合。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerable&quot; /&gt; object that is the underlying collection.">為基礎集合的 <see cref="T:System.Collections.IEnumerable" /> 物件。</returns>
    </member>
    <member name="T:System.ComponentModel.ICollectionViewFactory">
      <summary vsli:raw="An interface that enables implementing collections to create a view to their data. Normally, user code does not call methods on this interface.">可讓實作集合建立其資料檢視的介面。 使用者程式碼通常不會在此介面呼叫方法。</summary>
    </member>
    <member name="M:System.ComponentModel.ICollectionViewFactory.CreateView">
      <summary vsli:raw="Creates a new view on the collection that implements this interface. Typically, user code does not call this method.">在實作此介面的集合上建立新檢視。 使用者程式碼通常不會呼叫這個方法。</summary>
      <returns vsli:raw="The newly created view.">新建立的檢視。</returns>
    </member>
    <member name="T:System.ComponentModel.ICollectionViewLiveShaping">
      <summary vsli:raw="Defines properties that enables sorting, grouping, and filtering on a &lt;see cref=&quot;T:System.Windows.Data.CollectionView&quot; /&gt; in real time.">定義可在 <see cref="T:System.Windows.Data.CollectionView" /> 上即時啟用排序、群組及篩選的屬性。</summary>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveFiltering">
      <summary vsli:raw="Gets a value that indicates whether the collection view supports turning filtering data in real time on or off.">取得值，其中該值表示集合檢視是否支援即時開啟或關閉篩選資料。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection view supports turning live filtering on or off; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果集合檢視支援開啟或關閉即時篩選，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveGrouping">
      <summary vsli:raw="Gets a value that indicates whether the collection view supports turning grouping data in real time on or off.">取得值，這個值表示這個集合檢視是否支援開啟或關閉即時群組資料功能。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection view supports turning live grouping on or off; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果集合檢視支援開啟和關閉即時群組功能，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveSorting">
      <summary vsli:raw="Gets a value that indicates whether the collection view supports turning sorting data in real time on or off.">取得值，這個值表示這個集合檢視是否支援開啟或關閉即時排序資料功能。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection view supports turning live sorting on or off; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果集合檢視支援開啟和關閉即時排序功能，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveFiltering">
      <summary vsli:raw="Gets or sets a value that indicates whether filtering data in real time is enabled.">取得或設定值，指出是否已啟用即時篩選資料。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if filtering data in real time is enabled; &lt;see langword=&quot;false&quot; /&gt; if live filtering is not enabled; &lt;see langword=&quot;null&quot; /&gt; if it cannot be determined whether the collection view implements live filtering.">如果啟用即時篩選資料功能，則為 <see langword="true" />，如果未啟用即時篩選功能，則為 <see langword="false" />，如果無法判斷集合檢視是否實作即時篩選功能，則為 <see langword="null" />。</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveGrouping">
      <summary vsli:raw="Gets or sets a value that indicates whether grouping data in real time is enabled.">取得或設定值，指出是否已啟用即時設定資料群組。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if grouping data in real time is enable; &lt;see langword=&quot;false&quot; /&gt; if live grouping is not enabled; &lt;see langword=&quot;null&quot; /&gt; if it cannot be determined whether the collection view implements live grouping.">如果啟用即時群組資料功能，則為 <see langword="true" />，如果未啟用即時群組功能，則為 <see langword="false" />，如果無法判斷集合檢視是否實作即時群組功能，則為 <see langword="null" />。</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveSorting">
      <summary vsli:raw="Gets or sets a value that indicates whether sorting in real time is enabled.">取得或設定值，指出是否已啟用即時排序。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if sorting data in real time is enable; &lt;see langword=&quot;false&quot; /&gt; if live sorting is not enabled; &lt;see langword=&quot;null&quot; /&gt; if it cannot be determined whether the collection view implements live sorting.">如果啟用即時排序資料功能，則為 <see langword="true" />，如果未啟用即時排序功能，則為 <see langword="false" />，如果無法判斷集合檢視是否實作即時排序功能，則為 <see langword="null" />。</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.LiveFilteringProperties">
      <summary vsli:raw="Gets a collection of strings that specify the properties that participate in filtering data in real time.">取得字串集合，這些字串會指定參與即時篩選資料的屬性。</summary>
      <returns vsli:raw="A collection of strings that specify the properties that participate in filtering data in real time.">字串集合，會指定參與即時篩選資料的屬性。</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.LiveGroupingProperties">
      <summary vsli:raw="Gets a collection of strings that specify the properties that participate in grouping data in real time.">取得字串集合，這些字串會指定參與即時篩群組資料的屬性。</summary>
      <returns vsli:raw="A collection of strings that specify the properties that participate in grouping data in real time.">字串集合，會指定參與即時群組資料的屬性。</returns>
    </member>
    <member name="P:System.ComponentModel.ICollectionViewLiveShaping.LiveSortingProperties">
      <summary vsli:raw="Gets a collection of strings that specify the properties that participate in sorting data in real time.">取得字串集合，這些字串會指定參與即時排序資料的屬性。</summary>
      <returns vsli:raw="A collection of strings that specify the properties that participate in sorting data in real time.">字串集合，會指定參與即時排序資料的屬性。</returns>
    </member>
    <member name="T:System.ComponentModel.IEditableCollectionView">
      <summary vsli:raw="Defines methods and properties that a &lt;see cref=&quot;T:System.Windows.Data.CollectionView&quot; /&gt; implements to provide editing capabilities to a collection.">定義 <see cref="T:System.Windows.Data.CollectionView" /> 實作的方法和屬性，以提供集合編輯功能。</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.AddNew">
      <summary vsli:raw="Adds a new item to the collection.">將新項目加入至集合中。</summary>
      <returns vsli:raw="The new item that is added to the collection.">已加入至集合的新項目。</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CanAddNew">
      <summary vsli:raw="Gets a value that indicates whether a new item can be added to the collection.">取得值，這個值表示新項目是否可以加入至此集合。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a new item can be added to the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果新項目可以加入集合，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CanCancelEdit">
      <summary vsli:raw="Gets a value that indicates whether the collection view can discard pending changes and restore the original values of an edited object.">取得值，這個值表示集合檢視是否可以捨棄暫止的變更，並還原已編輯物件的原始值。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection view can discard pending changes and restore the original values of an edited object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果集合檢視可以捨棄暫止的變更，並還原已編輯物件的原始值，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CancelEdit">
      <summary vsli:raw="Ends the edit transaction and, if possible, restores the original value to the item.">結束編輯異動，並在可能情況下還原項目的原始值。</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CancelNew">
      <summary vsli:raw="Ends the add transaction and discards the pending new item.">結束加入異動並捨棄暫止的新項目。</summary>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CanRemove">
      <summary vsli:raw="Gets a value that indicates whether an item can be removed from the collection.">取得值，這個值表示是否可以從集合中移除某個項目。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an item can be removed from the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果可以從集合中移除某個項目，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CommitEdit">
      <summary vsli:raw="Ends the edit transaction and saves the pending changes.">結束編輯異動並儲存暫止的變更。</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.CommitNew">
      <summary vsli:raw="Ends the add transaction and saves the pending new item.">結束加入異動並儲存暫止的新項目。</summary>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CurrentAddItem">
      <summary vsli:raw="Gets the item that is being added during the current add transaction.">取得要在目前加入異動期間加入的項目。</summary>
      <returns vsli:raw="The item that is being added if &lt;see cref=&quot;P:System.ComponentModel.IEditableCollectionView.IsAddingNew&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">如果 <see cref="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" /> 為 <see langword="true" />，則為所要加入的項目；否則為 <see langword="null" />。</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.CurrentEditItem">
      <summary vsli:raw="Gets the item in the collection that is being edited.">取得集合內將被編輯的項目。</summary>
      <returns vsli:raw="The item in the collection that is being edited if &lt;see cref=&quot;P:System.ComponentModel.IEditableCollectionView.IsEditingItem&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">如果 <see cref="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" /> 為 <see langword="true" />，則為集合內正在編輯的項目；否則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.EditItem(System.Object)">
      <summary vsli:raw="Begins an edit transaction of the specified item.">開始指定之項目的編輯異動。</summary>
      <param name="item" vsli:raw="The item to edit.">要編輯的項目。</param>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.IsAddingNew">
      <summary vsli:raw="Gets a value that indicates whether an add transaction is in progress.">取得值，這個值表示加入異動是否正在進行中。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an add transaction is in progress; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果加入異動正在進行中，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.IsEditingItem">
      <summary vsli:raw="Gets a value that indicates whether an edit transaction is in progress.">取得值，這個值表示編輯異動是否正在進行中。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an edit transaction is in progress; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果編輯異動正在進行中，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition">
      <summary vsli:raw="Gets or sets the position of the new item placeholder in the collection view.">取得或設定集合檢視中新項目預留位置 (Placeholder) 的位置 (Position)。</summary>
      <returns vsli:raw="One of the enumeration values that specifies the position of the new item placeholder in the collection view.">一個列舉值，指定集合檢視中新項目預留位置 (Placeholder) 的位置 (Position)。</returns>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.Remove(System.Object)">
      <summary vsli:raw="Removes the specified item from the collection.">從集合中移除指定的項目。</summary>
      <param name="item" vsli:raw="The item to remove.">要移除的項目。</param>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the item at the specified position from the collection.">從集合中移除指定位置上的項目。</summary>
      <param name="index" vsli:raw="The position of the item to remove.">要移除之項目的位置。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0 or greater than the number of items in the collection view.">
        <paramref name="index" /> 小於 0，或大於集合檢視中項目的數目。</exception>
    </member>
    <member name="T:System.ComponentModel.IEditableCollectionViewAddNewItem">
      <summary vsli:raw="Defines methods and properties that a &lt;see cref=&quot;T:System.Windows.Data.CollectionView&quot; /&gt; implements to enable specifying adding items of a specific type.">定義 <see cref="T:System.Windows.Data.CollectionView" /> 實作的方法和屬性，以指定加入特定型別的項目。</summary>
    </member>
    <member name="M:System.ComponentModel.IEditableCollectionViewAddNewItem.AddNewItem(System.Object)">
      <summary vsli:raw="Adds the specified object to the collection.">將指定的物件加入至集合。</summary>
      <param name="newItem" vsli:raw="The object to add to the collection.">要新增至集合的物件。</param>
      <returns vsli:raw="The object that is added to the collection.">加入至集合中的物件。</returns>
    </member>
    <member name="P:System.ComponentModel.IEditableCollectionViewAddNewItem.CanAddNewItem">
      <summary vsli:raw="Gets a value that indicates whether a specified object can be added to the collection.">取得值，這個值表示指定的物件是否可以加入至此集合。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a specified object can be added to the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的物件可以加入至集合則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.ComponentModel.IItemProperties">
      <summary vsli:raw="Defines a property that provides information about an object's properties.">定義提供物件屬性相關資訊的屬性。</summary>
    </member>
    <member name="P:System.ComponentModel.IItemProperties.ItemProperties">
      <summary vsli:raw="Gets a collection that contains information about the properties that are available on the items in a collection.">取得集合，其中包含可在集合的項目上取得之屬性的相關資訊。</summary>
      <returns vsli:raw="A collection that contains information about the properties that are available on the items in a collection.">集合，其中包含可在集合的項目上取得之屬性的相關資訊。</returns>
    </member>
    <member name="T:System.ComponentModel.ItemPropertyInfo">
      <summary vsli:raw="Contains information about a property.">包含屬性的資訊。</summary>
    </member>
    <member name="M:System.ComponentModel.ItemPropertyInfo.#ctor(System.String,System.Type,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.ItemPropertyInfo&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.ItemPropertyInfo" /> 類別的新執行個體。</summary>
      <param name="name" vsli:raw="The name of the property.">屬性的名稱。</param>
      <param name="type" vsli:raw="The type of the property.">屬性的類型。</param>
      <param name="descriptor" vsli:raw="An object that contains additional information about the property.">包含屬性其他資訊的物件。</param>
    </member>
    <member name="P:System.ComponentModel.ItemPropertyInfo.Descriptor">
      <summary vsli:raw="Gets an object that contains additional information about the property.">取得包含屬性其他資訊的物件。</summary>
      <returns vsli:raw="An object that contains additional information about the property.">包含屬性其他資訊的物件。</returns>
    </member>
    <member name="P:System.ComponentModel.ItemPropertyInfo.Name">
      <summary vsli:raw="Gets the name of the property.">取得屬性的名稱。</summary>
      <returns vsli:raw="The name of the property.">屬性的名稱。</returns>
    </member>
    <member name="P:System.ComponentModel.ItemPropertyInfo.PropertyType">
      <summary vsli:raw="Gets the type of the property.">取得屬性的型別。</summary>
      <returns vsli:raw="The type of the property.">屬性的類型。</returns>
    </member>
    <member name="T:System.ComponentModel.NewItemPlaceholderPosition">
      <summary vsli:raw="Specifies where the placeholder for a new item appears in the collection.">指定新項目的預留位置出現在集合中的位置。</summary>
    </member>
    <member name="F:System.ComponentModel.NewItemPlaceholderPosition.AtBeginning">
      <summary vsli:raw="The placeholder for a new item appears at the beginning of the collection.  New items are at the beginning of the collection, after the new item placeholder.">新項目的預留位置出現在集合的開頭。  新項目是在集合的開頭，而在新項目預留位置之後。</summary>
    </member>
    <member name="F:System.ComponentModel.NewItemPlaceholderPosition.AtEnd">
      <summary vsli:raw="The placeholder for a new item appears at the end of the collection. New items are added at the end of the collection, before the new item placeholder.">新項目的預留位置出現在集合的結尾。 新項目加入集合的結尾，而在新項目預留位置之前。</summary>
    </member>
    <member name="F:System.ComponentModel.NewItemPlaceholderPosition.None">
      <summary vsli:raw="The collection does not use a new item placeholder. The position of items that are added depends on the underlying collection.  Usually, they are added at the end of the collection.">集合不會使用新的項目預留位置。 所加入項目的位置取決於基礎集合。  通常，它們會加到集合的結尾。</summary>
    </member>
    <member name="T:System.ComponentModel.PropertyChangedEventManager">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation so that you can use the &quot;weak event listener&quot; pattern to attach listeners for the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">提供 <see cref="T:System.Windows.WeakEventManager" /> 實作，讓您能夠使用「弱式事件接聽程式」模式附加 <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> 事件的接聽程式。</summary>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.AddHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)">
      <summary vsli:raw="Adds the specified event handler, which is called when specified source raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event for the specified property.">加入指定的事件處理常式，當指定的來源引發指定之屬性的 <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> 事件時，就會呼叫這個處理常式。</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">引發 <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> 事件的來源物件。</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">處理 <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> 事件的委派。</param>
      <param name="propertyName" vsli:raw="The name of the property that exists on &lt;paramref name=&quot;source&quot; /&gt; upon which to listen for changes. Set to &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; to indicate &quot;any property&quot;.">在 <paramref name="source" /> 上要接聽變更之屬性的名稱。 設定為 <see cref="F:System.String.Empty" /> 表示「任何屬性」。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="More than one method is associated with &lt;paramref name=&quot;handler&quot; /&gt;.">多個方法與 <paramref name="handler" /> 相關聯。</exception>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.AddListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)">
      <summary vsli:raw="Adds the specified listener to the list of listeners on the specified source.">將指定的接聽程式加入至指定之來源的接聽程式清單。</summary>
      <param name="source" vsli:raw="The object with the event.">具有事件的物件。</param>
      <param name="listener" vsli:raw="The object to add as a listener.">要加入做為接聽程式的物件。</param>
      <param name="propertyName" vsli:raw="The name of the property that exists on &lt;paramref name=&quot;source&quot; /&gt; upon which to listen for changes. Set to &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; to indicate &quot;any property&quot;.">在 <paramref name="source" /> 上要接聽變更之屬性的名稱。 設定為 <see cref="F:System.String.Empty" /> 表示「任何屬性」。</param>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">傳回新的物件，包含 <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> 事件的接聽程式。</summary>
      <returns vsli:raw="A new object to contain listeners to the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">包含 <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> 事件之接聽程式的新物件。</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.Purge(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Removes listeners that are no longer active from the data for the provided source.">從提供的來源資料中，移除已不在使用中的接聽程式。</summary>
      <param name="source" vsli:raw="Source object to remove all listeners from.">要移除所有接聽程式的來源物件。</param>
      <param name="data" vsli:raw="The data to purge. This is expected to be a &lt;see cref=&quot;T:System.Collections.Specialized.HybridDictionary&quot; /&gt;.">要清除的資料。 這應該是 <see cref="T:System.Collections.Specialized.HybridDictionary" />。</param>
      <param name="purgeAll" vsli:raw="Set to &lt;see langword=&quot;true&quot; /&gt; to stop listening and to completely remove all data.">設定為 <see langword="true" /> 可以停止接聽並完全移除所有資料。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if some entries were removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果已移除某些項目則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.RemoveHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)">
      <summary vsli:raw="Removes the specified event handler from the specified source.">從指定的來源中移除指定的事件處理常式。</summary>
      <param name="source" vsli:raw="The source object that the raises the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">引發 <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> 事件的來源物件。</param>
      <param name="handler" vsli:raw="The delegate that handles the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event.">處理 <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> 事件的委派。</param>
      <param name="propertyName" vsli:raw="The name of the property that exists on &lt;paramref name=&quot;source&quot; /&gt; upon which to stop listening for changes. Set to &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; to indicate &quot;any property&quot;.">在 <paramref name="source" /> 上要停止接聽變更之屬性的名稱。 設定為 <see cref="F:System.String.Empty" /> 表示「任何屬性」。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;handler&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="handler" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="More than one method is associated with &lt;paramref name=&quot;handler&quot; /&gt;.">多個方法與 <paramref name="handler" /> 相關聯。</exception>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.RemoveListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)">
      <summary vsli:raw="Removes the specified listener from the list of listeners on the provided source.">從所提供來源上的接聽程式清單中移除指定的接聽程式。</summary>
      <param name="source" vsli:raw="The object to remove the listener from.">要從中移除接聽程式的物件。</param>
      <param name="listener" vsli:raw="The listener to remove.">要移除的接聽程式。</param>
      <param name="propertyName" vsli:raw="The name of the property that exists on &lt;paramref name=&quot;source&quot; /&gt; upon which to stop listening for changes. Set to &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; to indicate &quot;any property&quot;.">在 <paramref name="source" /> 上要停止接聽變更之屬性的名稱。 設定為 <see cref="F:System.String.Empty" /> 表示「任何屬性」。</param>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.StartListening(System.Object)">
      <summary vsli:raw="Begins listening for the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event on the provided source.">開始在提供的來源上接聽 <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> 事件。</summary>
      <param name="source" vsli:raw="The object on which to start listening for &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt;.">要開始接聽 <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> 的物件。</param>
    </member>
    <member name="M:System.ComponentModel.PropertyChangedEventManager.StopListening(System.Object)">
      <summary vsli:raw="Stops listening for the &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt; event on the provided source.">停止在提供的來源上接聽 <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> 事件。</summary>
      <param name="source" vsli:raw="The source object on which to stop listening for &lt;see cref=&quot;E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&quot; /&gt;.">要停止被接聽 <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> 的來源物件。</param>
    </member>
    <member name="T:System.ComponentModel.PropertyFilterAttribute">
      <summary vsli:raw="Specifies which properties should be reported by type descriptors, specifically the &lt;see cref=&quot;M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)&quot; /&gt; method.">指定類型描述項應該報告的屬性，特別是 <see cref="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)" /> 方法。</summary>
    </member>
    <member name="M:System.ComponentModel.PropertyFilterAttribute.#ctor(System.ComponentModel.PropertyFilterOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> 類別的新執行個體。</summary>
      <param name="filter" vsli:raw="The options that describe this property filter.">描述這個屬性篩選常式的選項。</param>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterAttribute.Default">
      <summary vsli:raw="This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.">此成員支援 .NET Framework 基礎結構，並不能直接使用於您的程式碼中。</summary>
    </member>
    <member name="M:System.ComponentModel.PropertyFilterAttribute.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether the current &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt; .NET Framework attribute is equal to a specified object.">傳回值，以指出目前的 <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> .NET Framework 屬性 是否等於指定的物件。</summary>
      <param name="value" vsli:raw="The object to compare to this &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt;.">與這個 <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> 相比較的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> 和目前的 <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> 相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.PropertyFilterAttribute.Filter">
      <summary vsli:raw="Gets the filter options for this &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt; .NET Framework attribute.">取得這個 <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> .NET Framework 屬性 的篩選選項。</summary>
      <returns vsli:raw="The property filter options.">屬性篩選常式選項。</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyFilterAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for the current &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt; .NET Framework attribute.">傳回目前 <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> .NET Framework 屬性 的雜湊碼。</summary>
      <returns vsli:raw="A signed 32-bit integer value.">帶正負號的 32 位元整數值。</returns>
    </member>
    <member name="M:System.ComponentModel.PropertyFilterAttribute.Match(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether the property filter options of the current &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt; .NET Framework attribute match the property filter options of the provided object.">傳回值，以指出目前 <see cref="T:System.ComponentModel.PropertyFilterAttribute" /> .NET Framework 屬性 的屬性篩選選項是否符合所提供物件的屬性篩選選項。</summary>
      <param name="value" vsli:raw="The object to compare. This object is expected to be a &lt;see cref=&quot;T:System.ComponentModel.PropertyFilterAttribute&quot; /&gt;.">要比較的物件。 這個物件必須是 <see cref="T:System.ComponentModel.PropertyFilterAttribute" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a match exists; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果有相符項目，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.ComponentModel.PropertyFilterOptions">
      <summary vsli:raw="Specifies which properties should be reported by type descriptors, specifically the &lt;see cref=&quot;M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)&quot; /&gt; method. This enumeration is used to specify the value of the &lt;see cref=&quot;P:System.ComponentModel.PropertyFilterAttribute.Filter&quot; /&gt; property.">指定類型描述項應該報告的屬性，特別是 <see cref="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)" /> 方法。 這個列舉用來指定 <see cref="P:System.ComponentModel.PropertyFilterAttribute.Filter" /> 屬性的值。</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.All">
      <summary vsli:raw="Return all properties.">傳回所有屬性。</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.Invalid">
      <summary vsli:raw="Return only those properties that are not valid given the current context of the object.">只傳回指定物件目前內容中無效的屬性。</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.None">
      <summary vsli:raw="Return no properties.">不傳回任何屬性。</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.SetValues">
      <summary vsli:raw="Return only those properties that have local values currently set.">只傳回目前已設定區域數值的屬性。</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.UnsetValues">
      <summary vsli:raw="Return only those properties whose local values are not set, or do not have properties set in an external expression store (such as binding or deferred resource).">只傳回區域數值未設定的屬性，或不設定外部運算式存放區中 (例如繫結或延後資源) 的屬性。</summary>
    </member>
    <member name="F:System.ComponentModel.PropertyFilterOptions.Valid">
      <summary vsli:raw="Return any property that is valid on the object in the current scope.">傳回在目前範圍中物件有效的任何屬性。</summary>
    </member>
    <member name="T:System.ComponentModel.SortDescription">
      <summary vsli:raw="Defines the direction and the property name to be used as the criteria for sorting a collection.">定義要用來做為排序集合之準則的方向和屬性名稱。</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescription.#ctor(System.String,System.ComponentModel.ListSortDirection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; structure.">初始化 <see cref="T:System.ComponentModel.SortDescription" /> 結構的新執行個體。</summary>
      <param name="propertyName" vsli:raw="The name of the property to sort the list by. If the collection contains strings or value types, set this parameter to the empty string (&quot;&quot;).">要用來排序清單的屬性名稱。</param>
      <param name="direction" vsli:raw="The sort order.">排序順序。</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="The &lt;paramref name=&quot;direction&quot; /&gt; parameter does not specify a valid value.">
        <paramref name="direction" /> 參數未指定有效的值。</exception>
    </member>
    <member name="P:System.ComponentModel.SortDescription.Direction">
      <summary vsli:raw="Gets or sets a value that indicates whether to sort in ascending or descending order.">取得或設定值，指出要依遞增或遞減次序排序。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ListSortDirection&quot; /&gt; value to indicate whether to sort in ascending or descending order.">
        <see cref="T:System.ComponentModel.ListSortDirection" /> 值，指出要依遞增或遞減次序排序。</returns>
    </member>
    <member name="M:System.ComponentModel.SortDescription.Equals(System.Object)">
      <summary vsli:raw="Compares the specified instance and the current instance of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; for value equality.">比較 <see cref="T:System.ComponentModel.SortDescription" /> 之指定的執行個體和目前執行個體的值是否相等。</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; instance to compare.">要比較的 <see cref="T:System.ComponentModel.SortDescription" /> 執行個體。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; and this instance of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; have the same values.">如果 <paramref name="obj" /> 和 <see cref="T:System.ComponentModel.SortDescription" /> 的執行個體具有相同的值，則為 <see langword="true" />。</returns>
    </member>
    <member name="M:System.ComponentModel.SortDescription.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt;.">傳回這個 <see cref="T:System.ComponentModel.SortDescription" /> 執行個體的雜湊程式碼。</summary>
      <returns vsli:raw="The hash code for this instance of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt;.">這個 <see cref="T:System.ComponentModel.SortDescription" /> 執行個體的雜湊程式碼。</returns>
    </member>
    <member name="P:System.ComponentModel.SortDescription.IsSealed">
      <summary vsli:raw="Gets a value that indicates whether this object is in an immutable state.">取得值，這個值表示這個物件是否處於不變的狀態。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this object is in use; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果這個物件正在使用中則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.SortDescription.op_Equality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; objects for value equality.">比較兩個 <see cref="T:System.ComponentModel.SortDescription" /> 物件的值是否相等。</summary>
      <param name="sd1" vsli:raw="The first instance to compare.">要比較的第一個執行個體。</param>
      <param name="sd2" vsli:raw="The second instance to compare.">要比較的第二個執行個體。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two objects are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果兩個物件相等則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.SortDescription.op_Inequality(System.ComponentModel.SortDescription,System.ComponentModel.SortDescription)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; objects for value inequality.">比較兩個 <see cref="T:System.ComponentModel.SortDescription" /> 物件的值是否不相等。</summary>
      <param name="sd1" vsli:raw="The first instance to compare.">要比較的第一個執行個體。</param>
      <param name="sd2" vsli:raw="The second instance to compare.">要比較的第二個執行個體。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the values are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果值不相等則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.SortDescription.PropertyName">
      <summary vsli:raw="Gets or sets the property name being used as the sorting criteria.">取得或設定當做排序準則的屬性名稱。</summary>
      <returns vsli:raw="The default value is null.">預設值為 null。</returns>
    </member>
    <member name="T:System.ComponentModel.SortDescriptionCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.ComponentModel.SortDescription&quot; /&gt; objects.">表示 <see cref="T:System.ComponentModel.SortDescription" /> 物件的集合。</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.SortDescriptionCollection&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.SortDescriptionCollection" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.ClearItems">
      <summary vsli:raw="Removes all items from the collection.">移除集合的所有項目。</summary>
    </member>
    <member name="E:System.ComponentModel.SortDescriptionCollection.CollectionChanged">
      <summary vsli:raw="Occurs when an item is added or removed.">加入或移除項目時發生。</summary>
    </member>
    <member name="F:System.ComponentModel.SortDescriptionCollection.Empty">
      <summary vsli:raw="Gets an empty and non-modifiable instance of &lt;see cref=&quot;T:System.ComponentModel.SortDescriptionCollection&quot; /&gt;.">取得 <see cref="T:System.ComponentModel.SortDescriptionCollection" /> 之空白且不可修改的執行個體。</summary>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.InsertItem(System.Int32,System.ComponentModel.SortDescription)">
      <summary vsli:raw="Inserts an item into the collection at the specified index.">將項目插入至索引中的指定索引處。</summary>
      <param name="index" vsli:raw="The zero-based index where the &lt;paramref name=&quot;item&quot; /&gt; is inserted.">插入 <paramref name="item" /> 之從零開始的索引。</param>
      <param name="item" vsli:raw="The object to insert.">要插入的物件。</param>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.RemoveItem(System.Int32)">
      <summary vsli:raw="Removes the item at the specified index in the collection.">移除集合中位於指定索引位置的項目。</summary>
      <param name="index" vsli:raw="The zero-based index of the element to remove.">移除項目之以零為起始的索引。</param>
    </member>
    <member name="M:System.ComponentModel.SortDescriptionCollection.SetItem(System.Int32,System.ComponentModel.SortDescription)">
      <summary vsli:raw="Replaces the element at the specified index.">取代指定之索引處的項目。</summary>
      <param name="index" vsli:raw="The zero-based index of the element to replace.">要取代的項目之以零起始的索引。</param>
      <param name="item" vsli:raw="The new value for the element at the specified index.">指定之索引處的項目新值。</param>
    </member>
    <member name="E:System.ComponentModel.SortDescriptionCollection.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
      <summary vsli:raw="Occurs when an item is added or removed.">加入或移除項目時發生。</summary>
    </member>
    <member name="T:System.Diagnostics.PresentationTraceLevel">
      <summary vsli:raw="Describes the level of detail to trace about a particular object.">描述要追蹤有關特定物件的詳細資訊層級。</summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceLevel.High">
      <summary vsli:raw="Traces all additional information.">追蹤所有其他的資訊。</summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceLevel.Low">
      <summary vsli:raw="Traces some additional information.">追蹤部分其他的資訊。</summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceLevel.Medium">
      <summary vsli:raw="Traces a medium amount of additional information.">追蹤中量的其他資訊。</summary>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceLevel.None">
      <summary vsli:raw="Traces no available additional information.">追蹤無法使用的其他資訊。</summary>
    </member>
    <member name="T:System.Diagnostics.PresentationTraceSources">
      <summary vsli:raw="Provides debug tracing support that is specifically targeted for Windows Presentation Foundation (WPF) applications.">提供特別以 Windows Presentation Foundation (WPF) 應用程式為目標的偵錯追蹤支援。</summary>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.AnimationSource">
      <summary vsli:raw="Gets an animation trace source.">取得動畫追蹤來源。</summary>
      <returns vsli:raw="An animation trace source.">動畫追蹤來源。</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.DataBindingSource">
      <summary vsli:raw="Gets a data-binding trace source.">取得資料繫結追蹤來源。</summary>
      <returns vsli:raw="A data-binding trace source.">資料繫結追蹤來源。</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.DependencyPropertySource">
      <summary vsli:raw="Gets a dependency property trace source.">取得相依性屬性的追蹤來源。</summary>
      <returns vsli:raw="A dependency property trace source.">相依性屬性的追蹤來源。</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.DocumentsSource">
      <summary vsli:raw="Gets a document trace source.">取得文件追蹤來源。</summary>
      <returns vsli:raw="A document trace source.">文件追蹤來源。</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.FreezableSource">
      <summary vsli:raw="Gets a Freezable trace source.">取得 Freezable 追蹤來源。</summary>
      <returns vsli:raw="A Freezable trace source.">Freezable 追蹤來源。</returns>
    </member>
    <member name="M:System.Diagnostics.PresentationTraceSources.GetTraceLevel(System.Object)">
      <summary vsli:raw="Gets the value of the &lt;see cref=&quot;P:System.Diagnostics.PresentationTraceSources.TraceLevel&quot; /&gt; attached property for a specified element.">取得所指定項目的 <see cref="F:System.Diagnostics.PresentationTraceSources.TraceLevelProperty" /> 附加屬性值。</summary>
      <param name="element" vsli:raw="The element from which the property value is read.">要從中讀取屬性值的項目。</param>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.PresentationTraceSources.TraceLevel&quot; /&gt; property value for the element.">項目的 <see cref="F:System.Diagnostics.PresentationTraceSources.TraceLevelProperty" /> 屬性值。</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.HwndHostSource">
      <summary vsli:raw="Gets an hwnd host trace source.">取得 hwnd 裝載追蹤來源。</summary>
      <returns vsli:raw="An hwnd host trace source.">hwnd 裝載追蹤來源。</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.MarkupSource">
      <summary vsli:raw="Gets a markup trace source.">取得標記追蹤來源。</summary>
      <returns vsli:raw="A markup trace source.">標記追蹤來源。</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.NameScopeSource">
      <summary vsli:raw="Gets a name scope trace source.">取得名稱範圍追蹤來源。</summary>
      <returns vsli:raw="A name scope trace source.">名稱範圍追蹤來源。</returns>
    </member>
    <member name="M:System.Diagnostics.PresentationTraceSources.Refresh">
      <summary vsli:raw="Refreshes trace sources, by forcing the app.config file to be re-read.">強制重新讀取 app.config 檔案，以重新整理追蹤來源。</summary>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.ResourceDictionarySource">
      <summary vsli:raw="Gets a resource dictionary trace source.">取得資源字典追蹤來源。</summary>
      <returns vsli:raw="A resource dictionary trace source.">資源字典追蹤來源。</returns>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.RoutedEventSource">
      <summary vsli:raw="Gets a routed event trace source.">取得路由事件追蹤來源。</summary>
      <returns vsli:raw="A routed event trace source.">路由事件追蹤來源。</returns>
    </member>
    <member name="M:System.Diagnostics.PresentationTraceSources.SetTraceLevel(System.Object,System.Diagnostics.PresentationTraceLevel)">
      <summary vsli:raw="Sets the value of the &lt;see cref=&quot;P:System.Diagnostics.PresentationTraceSources.TraceLevel&quot; /&gt; attached property to a specified element.">將 <see cref="F:System.Diagnostics.PresentationTraceSources.TraceLevelProperty" /> 附加屬性的值設定為指定的元素。</summary>
      <param name="element" vsli:raw="The element to which the attached property is written.">要寫入附加屬性的項目。</param>
      <param name="traceLevel" vsli:raw="The needed &lt;see cref=&quot;T:System.Diagnostics.PresentationTraceLevel&quot; /&gt; value.">所需要的 <see cref="T:System.Diagnostics.PresentationTraceLevel" /> 值。</param>
    </member>
    <member name="P:System.Diagnostics.PresentationTraceSources.ShellSource">
      <summary vsli:raw="Gets a shell trace source.">取得殼層追蹤來源。</summary>
      <returns vsli:raw="A shell trace source.">殼層追蹤來源。</returns>
    </member>
    <member name="F:System.Diagnostics.PresentationTraceSources.TraceLevelProperty">
      <summary vsli:raw="Identifies the &lt;see cref=&quot;P:System.Diagnostics.PresentationTraceSources.TraceLevel&quot; /&gt; attached property.">識別 <see cref="F:System.Diagnostics.PresentationTraceSources.TraceLevelProperty" /> 附加屬性。</summary>
    </member>
    <member name="T:System.IO.FileFormatException">
      <summary>當應符合某種檔案格式規格的輸入檔案或資料流，格式不正確時，所擲回的例外狀況。</summary>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor">
      <summary>建立 <see cref="T:System.IO.FileFormatException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>建立 <see cref="T:System.IO.FileFormatException" /> 類別的新執行個體，並使用序列化資料將它初始化。 進行還原序列化 (Deserialization) 期間會呼叫這個建構函式，以便重新構成經由資料流傳送的例外狀況物件。</summary>
      <param name="info">存放序列物件資料的物件。</param>
      <param name="context">關於來源或目的端的內容資訊。</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.String)">
      <summary>使用指定的錯誤訊息，建立 <see cref="T:System.IO.FileFormatException" /> 類別的新執行個體。</summary>
      <param name="message">表示錯誤訊息的 <see cref="T:System.String" /> 值。</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.String,System.Exception)">
      <summary>使用指定的錯誤訊息和例外狀況型別，建立 <see cref="T:System.IO.FileFormatException" /> 類別的新執行個體。</summary>
      <param name="message">表示錯誤訊息的 <see cref="T:System.String" /> 值。</param>
      <param name="innerException">
        <see cref="P:System.Exception.InnerException" /> 屬性的值，代表目前例外狀況的原因。</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri)">
      <summary>使用來源 URI 值，建立 <see cref="T:System.IO.FileFormatException" /> 類別的新執行個體。</summary>
      <param name="sourceUri">造成這個錯誤之檔案的 <see cref="T:System.Uri" /> 值。</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri,System.Exception)">
      <summary>使用來源 URI 值和例外狀況型別，建立 <see cref="T:System.IO.FileFormatException" /> 類別的新執行個體。</summary>
      <param name="sourceUri">造成這個錯誤之檔案的 <see cref="T:System.Uri" /> 值。</param>
      <param name="innerException">
        <see cref="P:System.Exception.InnerException" /> 屬性的值，代表目前例外狀況的原因。</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri,System.String)">
      <summary>使用來源 URI 值和指定的錯誤訊息，建立 <see cref="T:System.IO.FileFormatException" /> 類別的新執行個體。</summary>
      <param name="sourceUri">造成這個錯誤之檔案的 <see cref="T:System.Uri" /> 值。</param>
      <param name="message">表示錯誤訊息的 <see cref="T:System.String" /> 值。</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri,System.String,System.Exception)">
      <summary>使用來源 URI 值、指定的錯誤訊息和例外狀況型別，建立 <see cref="T:System.IO.FileFormatException" /> 類別的新執行個體。</summary>
      <param name="sourceUri">造成這個錯誤之檔案的 <see cref="T:System.Uri" /> 值。</param>
      <param name="message">表示錯誤訊息的 <see cref="T:System.String" /> 值。</param>
      <param name="innerException">
        <see cref="P:System.Exception.InnerException" /> 屬性的值，代表目前例外狀況的原因。</param>
    </member>
    <member name="M:System.IO.FileFormatException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>以檔案名稱和其他例外狀況資訊設定 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 物件。</summary>
      <param name="info">存放序列物件資料的物件。</param>
      <param name="context">關於來源或目的端的內容資訊。</param>
    </member>
    <member name="P:System.IO.FileFormatException.SourceUri">
      <summary>取得造成 <see cref="T:System.IO.FileFormatException" /> 的檔案名稱。</summary>
      <returns>
        <see cref="T:System.Uri" />，表示造成例外狀況的檔案名稱。</returns>
    </member>
    <member name="T:System.IO.Packaging.CertificateEmbeddingOption">
      <summary vsli:raw="Specifies the location where the X.509 certificate that is used in signing is stored.">指定用於簽署之 X.509 憑證的儲存位置。</summary>
    </member>
    <member name="F:System.IO.Packaging.CertificateEmbeddingOption.InCertificatePart">
      <summary vsli:raw="The certificate is embedded in its own &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt;.">憑證內嵌於本身的 <see cref="T:System.IO.Packaging.PackagePart" />。</summary>
    </member>
    <member name="F:System.IO.Packaging.CertificateEmbeddingOption.InSignaturePart">
      <summary vsli:raw="The certificate is embedded in the &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.SignaturePart&quot; /&gt; that is created for the signature being added.">憑證內嵌於針對要加入之簽章所建立的 <see cref="P:System.IO.Packaging.PackageDigitalSignature.SignaturePart" />。</summary>
    </member>
    <member name="F:System.IO.Packaging.CertificateEmbeddingOption.NotEmbedded">
      <summary vsli:raw="The certificate in not embedded in the package.">憑證並未內嵌於封裝中。</summary>
    </member>
    <member name="T:System.IO.Packaging.CompressionOption">
      <summary>指定儲存於 <see cref="T:System.IO.Packaging.PackagePart" /> 中之內容的壓縮層級。</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.Fast">
      <summary>壓縮已針對效能進行最佳化。</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.Maximum">
      <summary>壓縮已針對大小進行最佳化。</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.Normal">
      <summary>壓縮已針對大小和效能的平衡進行最佳化。</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.NotCompressed">
      <summary>壓縮已關閉。</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.SuperFast">
      <summary>壓縮已針對高效能進行最佳化。</summary>
    </member>
    <member name="T:System.IO.Packaging.EncryptedPackageEnvelope">
      <summary vsli:raw="Represents an OLE compound file that contains an encrypted package.">代表包含加密封裝的 OLE 複合檔案 (Compound File)。</summary>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Close">
      <summary vsli:raw="Closes the encrypted package and the OLE compound file that holds it.">關閉加密封裝及保存該封裝的 OLE 複合檔案。</summary>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
      <summary vsli:raw="Creates and returns an &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; on the specified stream.">在指定的資料流上建立及傳回 <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />。</summary>
      <param name="envelopeStream" vsli:raw="The stream on which to create the file.">要建立檔案的資料流。</param>
      <param name="publishLicense" vsli:raw="The publish license that is embedded in the compound file.">嵌入在複合檔案中的發行授權。</param>
      <param name="cryptoProvider" vsli:raw="An object that determines what operations the current user is allowed to perform on the encrypted content.">物件，其決定目前使用者可以對加密內容執行的作業。</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">新建立的 <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;envelopeStream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="envelopeStream" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;envelopeStream&quot; /&gt; does not provide read/write access.">
        <paramref name="envelopeStream" /> 未提供讀取/寫入權限。</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
      <summary vsli:raw="Creates and returns an &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; and gives it the specified file name.">建立及傳回 <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />，並為其提供指定的檔名。</summary>
      <param name="envelopeFileName" vsli:raw="The name of the OLE compound file.">OLE 複合檔案的名稱。</param>
      <param name="publishLicense" vsli:raw="The publish license that is embedded in the compound file.">嵌入在複合檔案中的發行授權。</param>
      <param name="cryptoProvider" vsli:raw="An object that determines what operations the current user is allowed to perform on the encrypted content.">物件，其決定目前使用者可以對加密內容執行的作業。</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">新建立的 <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;envelopeFileName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="envelopeFileName" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
      <summary vsli:raw="Creates and returns an &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; (on the specified stream) that uses the specified unencrypted package as its content.">建立及傳回使用指定之未加密封裝做為其內容的 <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> (在指定的資料流上)。</summary>
      <param name="envelopeStream" vsli:raw="The stream on which to create the file.">要建立檔案的資料流。</param>
      <param name="packageStream" vsli:raw="The stream representing the existing unencrypted package.">代表現有未加密封裝的資料流。</param>
      <param name="publishLicense" vsli:raw="The publish license that is embedded in the compound file.">嵌入在複合檔案中的發行授權。</param>
      <param name="cryptoProvider" vsli:raw="An object that determines what operations the current user is allowed to perform on the encrypted content.">物件，其決定目前使用者可以對加密內容執行的作業。</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">新建立的 <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;envelopeStream&quot; /&gt; or &lt;paramref name=&quot;packageStream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="envelopeStream" /> 或 <paramref name="packageStream" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;envelopeStream&quot; /&gt; does not provide read/write access.">
        <paramref name="envelopeStream" /> 未提供讀取/寫入權限。</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
      <summary vsli:raw="Creates and returns an &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; that uses the specified unencrypted package as its content, and gives it the specified file name.">建立及傳回使用指定之未加密封裝做為其內容的 <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />，並為其提供指定的檔名。</summary>
      <param name="envelopeFileName" vsli:raw="The name of the OLE compound file.">OLE 複合檔案的名稱。</param>
      <param name="packageStream" vsli:raw="The stream representing the existing unencrypted package.">代表現有未加密封裝的資料流。</param>
      <param name="publishLicense" vsli:raw="The publish license that is embedded in the compound file.">嵌入在複合檔案中的發行授權。</param>
      <param name="cryptoProvider" vsli:raw="An object that determines what operations the current user is allowed to perform on the encrypted content.">物件，其決定目前使用者可以對加密內容執行的作業。</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">新建立的 <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;envelopeFileName&quot; /&gt; or &lt;paramref name=&quot;packageStream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="envelopeFileName" /> 或 <paramref name="packageStream" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">釋放 <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> 所使用的所有資源。</summary>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; and optionally releases the managed resources.">釋放 <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.FileOpenAccess">
      <summary vsli:raw="Gets a value that specifies whether the file was opened with access to read, write, or both.">取得值，指出開啟檔案時使用的是讀取權限、寫入權限或兩者。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt; value that was used to open the file.">用於開啟檔案的 <see cref="T:System.IO.FileAccess" /> 值。</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Flush">
      <summary vsli:raw="Flush the stream for both the &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; and its package content.">清除 <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> 及其封裝內容的資料流。</summary>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.GetPackage">
      <summary vsli:raw="Gets the encrypted package inside the &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">取得 <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> 內的加密封裝。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; in the envelope.">封套中的 <see cref="T:System.IO.Packaging.Package" />。</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.IO.Stream)">
      <summary vsli:raw="Gets a value specifying whether the specified stream is an OLE compound file with an encrypted package stream.">取得值，指出指定的資料流是否為具有加密封裝資料流的 OLE 複合檔案。</summary>
      <param name="stream" vsli:raw="The stream that is tested.">要測試的資料流。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified stream is an OLE compound file with an encrypted package stream; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的資料流是具有加密封裝資料流的 OLE 複合檔案，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)">
      <summary vsli:raw="Gets a value specifying whether the specified file is an OLE compound file with an encrypted package stream.">取得值，指出指定的檔案是否為具有加密封裝資料流的 OLE 複合檔案。</summary>
      <param name="fileName" vsli:raw="The file that is tested.">要測試的檔案。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified file is an OLE compound file with an encrypted package stream; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的檔案是具有加密封裝資料流的 OLE 複合檔案，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="fileName" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.IO.Stream)">
      <summary vsli:raw="Open the encrypted package in the specified stream.">開啟指定之資料流中的加密封裝。</summary>
      <param name="envelopeStream" vsli:raw="The stream containing the encrypted package.">包含加密封裝的資料流。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; that is opened.">要開啟的 <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />。</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)">
      <summary vsli:raw="Open the encrypted package in the specified file as read only and unshared.">以唯讀及非共用模式開啟指定之檔案中的加密封裝。</summary>
      <param name="envelopeFileName" vsli:raw="The file containing the encrypted package.">檔案內含加密的套件。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; that is opened.">要開啟的 <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />。</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)">
      <summary vsli:raw="Open the encrypted package in the specified file as unshared and with the specified access.">以非共用模式和指定的存取權，開啟指定之檔案中的加密封裝。</summary>
      <param name="envelopeFileName" vsli:raw="The file containing the encrypted package.">檔案內含加密的套件。</param>
      <param name="access" vsli:raw="The type of access.">存取權的類型。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; that is opened.">要開啟的 <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />。</returns>
    </member>
    <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)">
      <summary vsli:raw="Open the encrypted package in the specified file and gives it the specified access and sharing.">開啟指定之檔案中的加密封裝，並為其提供指定的存取權和共用。</summary>
      <param name="envelopeFileName" vsli:raw="The file containing the encrypted package.">檔案內含加密的套件。</param>
      <param name="access" vsli:raw="The type of access.">存取權的類型。</param>
      <param name="sharing" vsli:raw="The type of sharing.">共用的類型。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt; that is opened.">要開啟的 <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />。</returns>
    </member>
    <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties">
      <summary vsli:raw="Gets the core package properties (such as Title and Subject) of the rights managed document.">取得權限 Managed 文件的核心封裝屬性 (例如 Title 和 Subject)。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.PackageProperties&quot; /&gt; for the package.">封裝的 <see cref="T:System.IO.Packaging.PackageProperties" />。</returns>
    </member>
    <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation">
      <summary vsli:raw="Gets the rights management information stored in the &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;; specifically, the &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; and the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt;s stored in the OLE compound file that embodies the rights-management protected package.">取得儲存在 <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> 中的版權管理資訊；具體來說就是儲存在包含版權管理保護封裝之 OLE 複合檔案中的 <see cref="T:System.Security.RightsManagement.PublishLicense" /> 和 <see cref="T:System.Security.RightsManagement.UseLicense" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.RightsManagementInformation&quot; /&gt; for the package.">封裝的 <see cref="T:System.IO.Packaging.RightsManagementInformation" />。</returns>
    </member>
    <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.StorageInfo">
      <summary vsli:raw="Gets an object that provides access to the compound file streams outside the encrypted package.">取得可用來存取加密封裝外部之複合檔案資料流的物件。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.Packaging.StorageInfo&quot; /&gt; representing streams in the OLE compound file that are outside the encrypted package.">
        <see cref="T:System.IO.Packaging.StorageInfo" />，代表加密封裝外部之 OLE 複合檔案中的資料流。</returns>
    </member>
    <member name="T:System.IO.Packaging.EncryptionOption">
      <summary>指定 <see cref="T:System.IO.Packaging.Package" /> 中組件的加密選項。</summary>
    </member>
    <member name="F:System.IO.Packaging.EncryptionOption.None">
      <summary>不使用加密。</summary>
    </member>
    <member name="F:System.IO.Packaging.EncryptionOption.RightsManagement">
      <summary>透過版權管理支援加密。</summary>
    </member>
    <member name="T:System.IO.Packaging.InvalidSignatureEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent&quot; /&gt; that is raised when &lt;see cref=&quot;M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)&quot; /&gt; detects an invalid signature.">表示方法，會處理當 <see cref="E:System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent" /> 偵測到無效簽章時所引發的 <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" />。</summary>
      <param name="sender" vsli:raw="The invalid &lt;see cref=&quot;T:System.IO.Packaging.PackageDigitalSignature&quot; /&gt; source of the event.">事件的無效 <see cref="T:System.IO.Packaging.PackageDigitalSignature" /> 來源。</param>
      <param name="e" vsli:raw="The event data.">事件資料。</param>
    </member>
    <member name="T:System.IO.Packaging.Package">
      <summary>表示可以存放多個資料物件的容器。</summary>
    </member>
    <member name="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess)">
      <summary>將使用特定 <see cref="T:System.IO.Packaging.Package" /> 之 <see cref="T:System.IO.FileAccess" /> 類別的新執行個體初始化。</summary>
      <param name="openFileAccess">套件的檔案 IO 權限。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="openFileAccess" /> 的值無效。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Close">
      <summary>儲存並關閉套件，以及所有基礎組件資料流。</summary>
    </member>
    <member name="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)">
      <summary>以特定 URI 及內容類型建立新的未壓縮組件。</summary>
      <param name="partUri">新組件的 統一資源識別項 (URI)。</param>
      <param name="contentType">資料流的內容類型。</param>
      <returns>新建立的組件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> 或 <paramref name="contentType" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> 不是有效的 <see cref="T:System.IO.Packaging.PackagePart" /> URI。</exception>
      <exception cref="T:System.InvalidOperationException">套件中已經存在具有指定之 <paramref name="partUri" /> 的組件。</exception>
      <exception cref="T:System.ObjectDisposedException">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
      <exception cref="T:System.IO.IOException">套件是唯讀的 (無法新增組件)。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
      <summary>以特定 URI、內容類型及壓縮選項建立新組件。</summary>
      <param name="partUri">新組件的 URI。</param>
      <param name="contentType">資料流的內容類型。</param>
      <param name="compressionOption">資料流、<see cref="F:System.IO.Packaging.CompressionOption.NotCompressed" /> 或 <see cref="F:System.IO.Packaging.CompressionOption.Normal" /> 壓縮的壓縮選項。</param>
      <returns>新建立的組件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> 或 <paramref name="contentType" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> 不是有效的 <see cref="T:System.IO.Packaging.PackagePart" /> 統一資源識別項 (URI)。</exception>
      <exception cref="T:System.InvalidOperationException">套件中已經存在具有指定之 <paramref name="partUri" /> 的組件。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="compressionOption" /> 值不是有效的。</exception>
      <exception cref="T:System.ObjectDisposedException">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
      <exception cref="T:System.IO.IOException">套件是唯讀的 (無法新增組件)。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
      <summary>在衍生類別中覆寫時，請在套件中建立新的組件。</summary>
      <param name="partUri">所建立之組件的統一資源識別項 (URI)。</param>
      <param name="contentType">資料流的內容類型。</param>
      <param name="compressionOption">資料流的壓縮選項。</param>
      <returns>建立的組件。</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
      <summary>以特定 URI、目標模式及關聯性類型建立套件層級關係。</summary>
      <param name="targetUri">目標組件的 統一資源識別項 (URI)。</param>
      <param name="targetMode">指出目標組件是套件的 <see cref="F:System.IO.Packaging.TargetMode.Internal" /> 或 <see cref="F:System.IO.Packaging.TargetMode.External" />。</param>
      <param name="relationshipType">唯一定義關聯性角色的 URI。</param>
      <returns>指定之組件的套件層級關係。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetUri" /> 或 <paramref name="relationshipType" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="targetUri" /> 組件是 <see cref="T:System.IO.Packaging.PackageRelationship" />，或 <paramref name="targetMode" /> 是 <see cref="F:System.IO.Packaging.TargetMode.Internal" /> 且 <paramref name="targetUri" /> 是絕對 URI。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="targetMode" /> 的值無效。</exception>
      <exception cref="T:System.ObjectDisposedException">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
      <exception cref="T:System.IO.IOException">封裝是唯讀的。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
      <summary>以特定 URI、目標模式、關聯性類型及識別項 (ID) 建立套件層級關係。</summary>
      <param name="targetUri">目標組件的 統一資源識別項 (URI)。</param>
      <param name="targetMode">指出目標組件是套件的 <see cref="F:System.IO.Packaging.TargetMode.Internal" /> 或 <see cref="F:System.IO.Packaging.TargetMode.External" />。</param>
      <param name="relationshipType">唯一定義關聯性角色的 URI。</param>
      <param name="id">唯一的 XML 識別項。</param>
      <returns>指定之組件的套件層級關係。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetUri" /> 或 <paramref name="relationshipType" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="targetUri" /> 組件是 <see cref="T:System.IO.Packaging.PackageRelationship" />，或 <paramref name="targetMode" /> 是 <see cref="F:System.IO.Packaging.TargetMode.Internal" /> 且 <paramref name="targetUri" /> 是絕對 URI。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="targetMode" /> 的值無效。</exception>
      <exception cref="T:System.ObjectDisposedException">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
      <exception cref="T:System.IO.IOException">封裝是唯讀的。</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> 不是有效的 XML 識別項，或是套件中已存在具有指定之 <paramref name="id" /> 的組件。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.DeletePart(System.Uri)">
      <summary>刪除套件中具有特定 URI 的組件。</summary>
      <param name="partUri">要刪除之組件的 URI。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> 不是有效的 <see cref="T:System.IO.Packaging.PackagePart" /> URI。</exception>
      <exception cref="T:System.ObjectDisposedException">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
      <exception cref="T:System.IO.IOException">封裝是唯讀的。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)">
      <summary>在衍生類別中覆寫時，刪除具有特定 URI 的組件。</summary>
      <param name="partUri">要刪除之 <see cref="P:System.IO.Packaging.PackagePart.Uri" /> 的 <see cref="T:System.IO.Packaging.PackagePart" />。</param>
    </member>
    <member name="M:System.IO.Packaging.Package.DeleteRelationship(System.String)">
      <summary>刪除套件層級關係。</summary>
      <param name="id">要刪除之 <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> 的 <see cref="T:System.IO.Packaging.PackageRelationship" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ObjectDisposedException">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
      <exception cref="T:System.IO.IOException">封裝是唯讀的。</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> 不是有效的 XML 識別項。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Dispose(System.Boolean)">
      <summary>清除並儲存所有組件與關聯性的內容、關閉套件，然後釋放所有的資源。</summary>
      <param name="disposing">
        <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="P:System.IO.Packaging.Package.FileOpenAccess">
      <summary>取得套件的檔案存取設定。</summary>
      <returns>其中一個 <see cref="T:System.IO.FileAccess" /> 值：<see cref="F:System.IO.FileAccess.Read" />、<see cref="F:System.IO.FileAccess.Write" /> 或 <see cref="F:System.IO.FileAccess.ReadWrite" />。</returns>
      <exception cref="T:System.ObjectDisposedException">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Flush">
      <summary>儲存套件包含的所有組件及關聯性的內容。</summary>
      <exception cref="T:System.ObjectDisposedException">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
      <exception cref="T:System.IO.IOException">套件是唯讀的，無法修改。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.FlushCore">
      <summary>在衍生類別中覆寫時，將所有組件與關聯性的內容儲存到衍生類別存放區。</summary>
    </member>
    <member name="M:System.IO.Packaging.Package.GetPart(System.Uri)">
      <summary>傳回具有特定 URI 的組件。</summary>
      <param name="partUri">要傳回之組件的統一資源識別項 (URI)。</param>
      <returns>具有指定之 <paramref name="partUri" /> 的組件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> 不是有效的 <see cref="T:System.IO.Packaging.PackagePart" /> 統一資源識別項 (URI)。</exception>
      <exception cref="T:System.InvalidOperationException">具有指定之 <paramref name="partUri" /> 的組件不在套件內。</exception>
      <exception cref="T:System.ObjectDisposedException">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
      <exception cref="T:System.IO.IOException">封裝是唯寫的。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetPartCore(System.Uri)">
      <summary>在衍生類別中覆寫時，傳回由特定 URI 定址的組件。</summary>
      <param name="partUri">要擷取之組件的統一資源識別項 (URI)。</param>
      <returns>要求的組件；或者，如果具有指定之 <paramref name="partUri" /> 的組件不存在套件中，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.GetParts">
      <summary>傳回套件中所有組件的集合。</summary>
      <returns>包含在套件中的所有 <see cref="T:System.IO.Packaging.PackagePart" /> 項目的集合。</returns>
      <exception cref="T:System.ObjectDisposedException">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
      <exception cref="T:System.IO.IOException">封裝是唯寫的。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetPartsCore">
      <summary>在衍生類別中覆寫時，傳回套件中所有組件的陣列。</summary>
      <returns>包含在套件中的所有組件的陣列。</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.GetRelationship(System.String)">
      <summary>傳回具有特定識別項的套件層級關係。</summary>
      <param name="id">要傳回之關聯性的 <see cref="P:System.IO.Packaging.PackageRelationship.Id" />。</param>
      <returns>具有指定之 <paramref name="id" /> 的套件層級關係。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> 不是有效的 XML 識別項。</exception>
      <exception cref="T:System.InvalidOperationException">具有指定之 <paramref name="id" /> 的關聯性不在套件內。</exception>
      <exception cref="T:System.ObjectDisposedException">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
      <exception cref="T:System.IO.IOException">封裝是唯寫的。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetRelationships">
      <summary>傳回所有套件層級關係的集合。</summary>
      <returns>包含在套件中的所有套件層級關係的集合。</returns>
      <exception cref="T:System.ObjectDisposedException">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
      <exception cref="T:System.IO.IOException">封裝是唯寫的。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
      <summary>傳回符合特定 <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> 的所有套件層級關係的集合。</summary>
      <param name="relationshipType">要進行比對並傳回集合的 <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />。</param>
      <returns>符合指定之 <paramref name="relationshipType" /> 的套件層級關係的集合。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relationshipType" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="relationshipType" /> 為空字串。</exception>
      <exception cref="T:System.ObjectDisposedException">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
      <exception cref="T:System.IO.IOException">封裝是唯寫的。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.IO.Stream)">
      <summary>開啟位於特定 IO 資料流上的套件。</summary>
      <param name="stream">開啟封裝所在的 IO 資料流。</param>
      <returns>已開啟的套件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.IO.IOException">要開啟的套件需要讀取或讀寫權限，而指定的 <paramref name="stream" /> 是唯寫，或是要開啟的套件需要寫入或讀寫權限，而指定的 <paramref name="stream" /> 是唯讀。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)">
      <summary>使用特定 IO 資料流及檔案模式開啟套件。</summary>
      <param name="stream">開啟封裝所在的 IO 資料流。</param>
      <param name="packageMode">開啟套件的檔案模式。</param>
      <returns>已開啟的套件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="packageMode" /> 值無效。</exception>
      <exception cref="T:System.IO.IOException">要開啟的套件需要讀取或讀寫權限，而指定的 <paramref name="stream" /> 是唯寫，或是要開啟的套件需要寫入或讀寫權限，而指定的 <paramref name="stream" /> 是唯讀。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)">
      <summary>使用特定 IO 資料流、檔案模式及檔案存取設定開啟套件。</summary>
      <param name="stream">開啟封裝所在的 IO 資料流。</param>
      <param name="packageMode">開啟套件的檔案模式。</param>
      <param name="packageAccess">開啟套件的檔案存取。</param>
      <returns>已開啟的套件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="packageMode" /> 或 <paramref name="packageAccess" /> 的值無效。</exception>
      <exception cref="T:System.IO.IOException">要開啟的套件需要讀取或讀寫權限，而指定的 <paramref name="stream" /> 是唯寫，或是要開啟的套件需要寫入或讀寫權限，而指定的 <paramref name="stream" /> 是唯讀。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String)">
      <summary>開啟特定路徑與檔名的封裝。</summary>
      <param name="path">封裝的路徑和檔名。</param>
      <returns>已開啟的套件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)">
      <summary>使用特定檔案模式開啟位於特定路徑的套件。</summary>
      <param name="path">封裝的路徑和檔名。</param>
      <param name="packageMode">開啟套件的檔案模式。</param>
      <returns>已開啟的套件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="packageMode" /> 的值無效。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
      <summary>使用特定檔案模式及檔案存取設定，開啟位於特定路徑的套件。</summary>
      <param name="path">封裝的路徑和檔名。</param>
      <param name="packageMode">開啟套件的檔案模式。</param>
      <param name="packageAccess">開啟套件的檔案存取。</param>
      <returns>已開啟的套件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="packageMode" /> 或 <paramref name="packageAccess" /> 的值無效。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
      <summary>使用特定檔案模式、檔案存取及檔案共用設定，開啟位於特定路徑的套件。</summary>
      <param name="path">封裝的路徑和檔名。</param>
      <param name="packageMode">開啟套件的檔案模式。</param>
      <param name="packageAccess">開啟套件的檔案存取。</param>
      <param name="packageShare">用來開啟套件的檔案共用模式。</param>
      <returns>已開啟的套件。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="packageMode" />、<paramref name="packageAccess" /> 或 <paramref name="packageShare" /> 的值無效。</exception>
    </member>
    <member name="P:System.IO.Packaging.Package.PackageProperties">
      <summary>取得套件的核心屬性。</summary>
      <returns>套件的核心屬性。</returns>
      <exception cref="T:System.ObjectDisposedException">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.PartExists(System.Uri)">
      <summary>指出套件中是否存在具有特定 URI 的組件。</summary>
      <param name="partUri">要檢查之組件的 <see cref="T:System.Uri" />。</param>
      <returns>如果套件內已經存在具有指定之 <paramref name="partUri" /> 的組件，就是 <see langword="true" />，否則就是 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> 不是有效的 <see cref="T:System.IO.Packaging.PackagePart" /> 統一資源識別項 (URI)。</exception>
      <exception cref="T:System.ObjectDisposedException">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
      <exception cref="T:System.IO.IOException">套件是唯寫的 (無法讀取資訊)。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.RelationshipExists(System.String)">
      <summary>指出套件中是否包含具有特定 ID 的套件層級關係。</summary>
      <param name="id">要檢查之關聯性的 <see cref="P:System.IO.Packaging.PackageRelationship.Id" />。</param>
      <returns>如果套件裝包含具有指定之 <paramref name="id" /> 的套件層級關係，就是 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> 不是有效的 XML 識別項。</exception>
      <exception cref="T:System.ObjectDisposedException">套件沒有開啟 (已呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
      <exception cref="T:System.IO.IOException">封裝是唯寫的。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.System#IDisposable#Dispose">
      <summary>這個成員支援 Windows Presentation Foundation (WPF) 基礎結構，但不建議用於應用程式。  請改用類型安全的 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 方法。</summary>
    </member>
    <member name="T:System.IO.Packaging.PackageDigitalSignature">
      <summary vsli:raw="Represents a digital signature that is applied to a set of package parts and relationships.">代表套用至一組封裝組件和關聯性的數位簽章。</summary>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.CertificateEmbeddingOption">
      <summary vsli:raw="Gets the X.509 certificate embedding option.">取得 X.509 憑證內嵌選項。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.IO.Packaging.CertificateEmbeddingOption&quot; /&gt; values that specifies the option for the digital signature.">其中一個 <see cref="T:System.IO.Packaging.CertificateEmbeddingOption" /> 值，其指定數位簽章的選項。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">數位 <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> 已經刪除。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignature.GetPartTransformList(System.Uri)">
      <summary vsli:raw="Returns an ordered list of the &lt;see cref=&quot;T:System.Security.Cryptography.Xml.Transform&quot; /&gt; operations applied to a given part.">傳回套用到特定組件之 <see cref="T:System.Security.Cryptography.Xml.Transform" /> 作業的排序清單。</summary>
      <param name="partName" vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; of the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; to return the transform list for.">要傳回其轉換清單之 <see cref="T:System.Uri" /> 的 <see cref="T:System.IO.Packaging.PackagePart" />。</param>
      <returns vsli:raw="An ordered list of URI strings, such as &lt;see cref=&quot;F:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl&quot; /&gt; or &lt;see cref=&quot;F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl&quot; /&gt;, that represents the canonical XML transformations applied to the part with the given &lt;paramref name=&quot;partName&quot; /&gt; URI.">URI 字串的排序清單，例如 <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl" /> 或 <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl" />，表示套用到具有特定 <paramref name="partName" /> URI 之組件的標準 XML 轉換。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">數位 <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> 已經刪除。</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.Signature">
      <summary vsli:raw="Gets or sets the XML digital signature.">取得或設定 XML 數位簽章。</summary>
      <returns vsli:raw="The XML digital signature.">XML 數位簽章。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">數位 <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> 已經刪除。</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignaturePart">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; that contains the signature.">取得含有簽章的 <see cref="T:System.IO.Packaging.PackagePart" />。</summary>
      <returns vsli:raw="The package part that contains the signature.">含有套件的封裝組件。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">數位 <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> 已經刪除。</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignatureType">
      <summary vsli:raw="Gets the URI string that identifies the signature type.">取得 URI 字串，可識別簽章類型。</summary>
      <returns vsli:raw="A URI string that identifies the signature type. The default is &lt;see cref=&quot;F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl&quot; /&gt;.">可識別簽章類型的 URI 字串。 預設為 <see cref="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl" />。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">數位 <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> 已經刪除。</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignatureValue">
      <summary vsli:raw="Gets the encrypted hash value of the &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt;.">取得 <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> 的加密雜湊值。</summary>
      <returns vsli:raw="A byte array that contains the encrypted hash value of the &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt;.">位元組陣列，包含 <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> 的加密雜湊值。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">數位 <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> 已經刪除。</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignedParts">
      <summary vsli:raw="Gets a collection of all the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; objects signed with the signature.">取得所有以這個簽章簽署之 <see cref="T:System.IO.Packaging.PackagePart" /> 物件的集合。</summary>
      <returns vsli:raw="A collection that contains all the package parts signed with the signature.">包含所有以這個簽章簽署之套件組件的集合。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">數位 <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> 已經刪除。</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SignedRelationshipSelectors">
      <summary vsli:raw="Gets the list of the &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; parts that have been signed with the signature.">取得已使用此簽章簽署之 <see cref="T:System.IO.Packaging.PackageRelationship" /> 組件的清單。</summary>
      <returns vsli:raw="The list of the &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; parts that have been signed with the signature.">已使用此簽章簽署之 <see cref="T:System.IO.Packaging.PackageRelationship" /> 組件的清單。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">數位 <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> 已經刪除。</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.Signer">
      <summary vsli:raw="Gets the X.509 certificate of the signer.">取得簽署者的 X.509 憑證。</summary>
      <returns vsli:raw="The digital certificate of the signer, or &lt;see langword=&quot;null&quot; /&gt; if the certificate is not stored in the &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">簽署者的數位憑證，或是如果憑證未儲存在 <see cref="T:System.IO.Packaging.Package" />，則為 <see langword="null" />。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">數位 <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> 已經刪除。</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.SigningTime">
      <summary vsli:raw="Gets the date and time that the signature was created.">取得簽章建立的日期與時間。</summary>
      <returns vsli:raw="The date and time that the signature was created.">簽章建立的日期與時間。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">數位 <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> 已經刪除。</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignature.TimeFormat">
      <summary vsli:raw="Gets the format of the date and time returned by the &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.SigningTime&quot; /&gt; property.">取得 <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" /> 屬性傳回的日期與時間格式。</summary>
      <returns vsli:raw="The format of the date and time returned by the &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.SigningTime&quot; /&gt; property.">
        <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" /> 屬性傳回的日期與時間格式。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">數位 <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> 已經刪除。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignature.Verify">
      <summary vsli:raw="Verifies the digital signature against an X.509 certificate.">根據 X.509 憑證驗證數位簽章。</summary>
      <returns vsli:raw="&lt;see cref=&quot;F:System.IO.Packaging.VerifyResult.Success&quot; /&gt; if the verification succeeded; otherwise, one of the &lt;see cref=&quot;T:System.IO.Packaging.VerifyResult&quot; /&gt; values that identifies a problem.">如果驗證成功，則為<see cref="F:System.IO.Packaging.VerifyResult.Success" /> ，否則會是識別問題的其中一個 <see cref="T:System.IO.Packaging.VerifyResult" /> 值。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">數位 <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> 已經刪除。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignature.Verify(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary vsli:raw="Verifies the digital signature against a given X.509 certificate.">根據指定的 X.509 憑證驗證數位簽章。</summary>
      <param name="signingCertificate" vsli:raw="The signer's X.509 certificate to verify the digital signature against.">用來驗證數位簽章之簽署者的 X.509 憑證。</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.IO.Packaging.VerifyResult.Success&quot; /&gt; if the verification succeeded; otherwise, one of the &lt;see cref=&quot;T:System.IO.Packaging.VerifyResult&quot; /&gt; values that identifies a problem.">如果驗證成功，則為<see cref="F:System.IO.Packaging.VerifyResult.Success" /> ，否則會是識別問題的其中一個 <see cref="T:System.IO.Packaging.VerifyResult" /> 值。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The digital &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.Signature&quot; /&gt; has been deleted.">數位 <see cref="P:System.IO.Packaging.PackageDigitalSignature.Signature" /> 已經刪除。</exception>
    </member>
    <member name="T:System.IO.Packaging.PackageDigitalSignatureManager">
      <summary vsli:raw="Provides a utility class for the creation and verification of digital signatures in a &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">提供公用程式類別，可用來建立及驗證 <see cref="T:System.IO.Packaging.Package" /> 中的數位簽章。</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.#ctor(System.IO.Packaging.Package)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.IO.Packaging.PackageDigitalSignatureManager&quot; /&gt; class for use with a specified &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">將 <see cref="T:System.IO.Packaging.PackageDigitalSignatureManager" /> 類別的新執行個體初始化，以搭配指定 <see cref="T:System.IO.Packaging.Package" /> 使用。</summary>
      <param name="package" vsli:raw="The package associated with this signature manager.">這個簽章管理員所關聯的封裝。</param>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption">
      <summary vsli:raw="Gets or sets the X.509 certificate embedding option used by the &lt;see cref=&quot;M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})&quot; /&gt; method to digitally sign package parts.">取得或設定 <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})" /> 方法用來對封包組件進行數位簽署的 X.509 憑證內嵌選項。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.IO.Packaging.CertificateEmbeddingOption&quot; /&gt; values.">其中一個 <see cref="T:System.IO.Packaging.CertificateEmbeddingOption" /> 值。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign">
      <summary vsli:raw="Countersigns all the signatures in the package with a user-selected X.509 certificate.">使用使用者選取的 X.509 憑證，來副署封裝中的所有簽章。</summary>
      <returns vsli:raw="The signature that was added as a countersign; or &lt;see langword=&quot;null&quot; /&gt; if no certificate could be located or the user canceled the certificate selection dialog.">加入為副署的簽章；或者，如果找不到憑證，或使用者已取消憑證選取對話方塊，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary vsli:raw="Countersigns all the signatures in the package with a specified X.509 certificate.">使用指定的 X.509 憑證來副署封裝中的所有簽章。</summary>
      <param name="certificate" vsli:raw="The X.509 certificate to add as a countersign signature.">要加入為副署簽章的 X.509 憑證。</param>
      <returns vsli:raw="The signature that was added as a countersign.">已加入為副署的憑證。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;certificate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;">
        <paramref name="certificate" /> 是 <see langword="null" /></exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.Uri})">
      <summary vsli:raw="Countersigns a list of signatures with a given X.509 certificate.">以指定的 X.509 憑證副署簽章清單。</summary>
      <param name="certificate" vsli:raw="The X.509 certificate to countersign each of the specified &lt;paramref name=&quot;signatures&quot; /&gt;.">要對每個指定之 <paramref name="signatures" /> 進行副署的 X.509 憑證。</param>
      <param name="signatures" vsli:raw="The list of signatures to countersign.">要副署的簽章清單。</param>
      <returns vsli:raw="The digital signature used to countersign each of the &lt;paramref name=&quot;signatures&quot; /&gt;.">用來副署每個 <paramref name="signatures" /> 的數位簽章。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Either the &lt;paramref name=&quot;certificate&quot; /&gt; or &lt;paramref name=&quot;signatures&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="certificate" /> 或 <paramref name="signatures" /> 參數有一個是 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The package contains no signed &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; objects.">封裝未包含任何簽署的 <see cref="T:System.IO.Packaging.PackagePart" /> 物件。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The package contains no &lt;see cref=&quot;T:System.IO.Packaging.PackageDigitalSignature&quot; /&gt; parts.">封裝未包含任何 <see cref="T:System.IO.Packaging.PackageDigitalSignature" /> 組件。</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm">
      <summary vsli:raw="Gets a URI string that identifies the default hash algorithm used to create and verify signatures.">取得 URI 字串，此字串可識別用來建立及驗證簽章的預設雜湊演算法。</summary>
      <returns vsli:raw="A URI string that identifies the default hash algorithm used to create and verify signatures.">URI 字串，識別用來建立及驗證簽章的預設雜湊演算法。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.GetSignature(System.Uri)">
      <summary vsli:raw="Returns the digital signature for a given signature uniform resource identifier (URI).">傳回特定簽章統一資源識別項 (URI) 的數位簽章。</summary>
      <param name="signatureUri" vsli:raw="The URI of the digital signature to return.">要傳回的數位簽章之 URI。</param>
      <returns vsli:raw="The digital signature for the specified &lt;paramref name=&quot;signatureUri&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if a signature for the given &lt;paramref name=&quot;signatureUri&quot; /&gt; cannot be found.">指定 <paramref name="signatureUri" /> 的數位簽章，或者如果找不到特定 <paramref name="signatureUri" />，則是 <see langword="null" />。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm">
      <summary vsli:raw="Gets or sets the URI identifier for the &lt;see cref=&quot;T:System.Security.Cryptography.HashAlgorithm&quot; /&gt; instance used to create and verify signatures.">取得或設定 <see cref="T:System.Security.Cryptography.HashAlgorithm" /> 執行個體的 URI 識別項，以用來建立及驗證簽章。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.Cryptography.Xml.SignedXml&quot; /&gt; URI identifier for the &lt;see cref=&quot;T:System.Security.Cryptography.HashAlgorithm&quot; /&gt; instance used to create and verify signatures.">用來建立及<see cref="T:System.Security.Cryptography.HashAlgorithm" />驗證簽章之實例的識別碼。URI <see cref="T:System.Security.Cryptography.Xml.SignedXml" /></returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The string for the URI to set is &lt;see langword=&quot;null&quot; /&gt;.">要設定的 URI 字串是 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The string for the URI to set is empty.">要設定的 URI 字串是空的。</exception>
    </member>
    <member name="E:System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent">
      <summary vsli:raw="Occurs when &lt;see cref=&quot;M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)&quot; /&gt; encounters an invalid signature.">發生於 <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" /> 遇到無效簽章時。</summary>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned">
      <summary vsli:raw="Gets a value that indicates whether the package contains any signatures.">取得數值，指出封裝是否含有任何簽章。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the package contains signatures; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果封裝含有簽章，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow">
      <summary vsli:raw="Gets or sets a handle to the parent window for displaying a certificate selection dialog box.">取得或設定控制代碼，控制用來顯示憑證選取對話方塊的父視窗。</summary>
      <returns vsli:raw="The handle of the parent window to use to display the certificate selection dialog box.">父視窗的控制代碼，用來顯示憑證選取對話方塊。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.RemoveAllSignatures">
      <summary vsli:raw="Removes all digital signatures from the package.">從封裝中移除所有數位簽章。</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature(System.Uri)">
      <summary vsli:raw="Removes the digital signature with a given signature uniform resource identifier (URI).">移除具有指定簽章 統一資源識別項 (URI) 的數位簽章。</summary>
      <param name="signatureUri" vsli:raw="The URI of the &lt;see cref=&quot;T:System.IO.Packaging.PackageDigitalSignature&quot; /&gt; to remove.">要移除之 URI 的 <see cref="T:System.IO.Packaging.PackageDigitalSignature" />。</param>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})">
      <summary vsli:raw="Prompts the user for an X.509 certificate, which is then used to digitally sign a specified list of package parts.">提示使用者提供 X.509 憑證，稍後會使用此憑證對指定的封裝組件清單進行數位簽署。</summary>
      <param name="parts" vsli:raw="The list of uniform resource identifiers (URIs) for the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; elements to sign.">要簽署之 統一資源識別項 (URI) 項目的 <see cref="T:System.IO.Packaging.PackagePart" /> 清單。</param>
      <returns vsli:raw="The digital signature used to sign the list of &lt;paramref name=&quot;parts&quot; /&gt;.">用來簽署 <paramref name="parts" /> 清單的數位簽章。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary vsli:raw="Signs a list of package parts with a given X.509 certificate.">以指定的 X.509 憑證簽署封裝組件清單。</summary>
      <param name="parts" vsli:raw="The list of uniform resource identifiers (URIs) for the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; elements to sign.">要簽署之 統一資源識別項 (URI) 項目的 <see cref="T:System.IO.Packaging.PackagePart" /> 清單。</param>
      <param name="certificate" vsli:raw="The X.509 certificate to use to digitally sign each of the specified &lt;paramref name=&quot;parts&quot; /&gt;.">用來對每個指定之 <paramref name="parts" /> 進行數位簽署的 X.509 憑證。</param>
      <returns vsli:raw="The digital signature used to sign the given list of &lt;paramref name=&quot;parts&quot; /&gt;; or &lt;see langword=&quot;null&quot; /&gt; if no certificate could be found or the user clicked &quot;Cancel&quot; in the certificate selection dialog box.">用來簽署 <paramref name="parts" /> 之指定清單的數位簽章；如果找不到任何憑證，或是使用者在憑證選取對話方塊中按一下 [取消]，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector})">
      <summary vsli:raw="Signs a list of package parts and package relationships with a given X.509 certificate.">以指定的 X.509 憑證簽署封裝組件和封裝關聯性清單。</summary>
      <param name="parts" vsli:raw="The list of uniform resource identifiers (URIs) for the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; objects to sign.">要簽署之 <see cref="T:System.IO.Packaging.PackagePart" /> 物件的 統一資源識別項 (URI) 清單。</param>
      <param name="certificate" vsli:raw="The X.509 certificate to use to digitally sign each of the specified parts and relationships.">用來對每個指定之組件和關聯性進行數位簽署的 X.509 憑證。</param>
      <param name="relationshipSelectors" vsli:raw="The list of &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; objects to sign.">要簽署的 <see cref="T:System.IO.Packaging.PackageRelationship" /> 物件清單。</param>
      <returns vsli:raw="The digital signature used to sign the elements specified in the &lt;paramref name=&quot;parts&quot; /&gt; and &lt;paramref name=&quot;relationshipSelectors&quot; /&gt; lists.">用來簽署 <paramref name="parts" /> 和 <paramref name="relationshipSelectors" /> 清單中所指定元素的數位簽章。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Neither &lt;paramref name=&quot;parts&quot; /&gt; nor &lt;paramref name=&quot;relationshipSelectors&quot; /&gt; specify any objects to sign.">
        <paramref name="parts" /> 和 <paramref name="relationshipSelectors" /> 都未指定要簽署的任何物件。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String)">
      <summary vsli:raw="Signs a list of package parts and package relationships with a given X.509 certificate and identifier (ID).">以指定的 X.509 憑證和 識別項 (ID) 簽署套件組件和套件關聯性清單。</summary>
      <param name="parts" vsli:raw="The list of uniform resource identifiers (URIs) for the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; objects to sign.">要簽署之 <see cref="T:System.IO.Packaging.PackagePart" /> 物件的 統一資源識別項 (URI) 清單。</param>
      <param name="certificate" vsli:raw="The X.509 certificate to use to digitally sign each of the specified parts and relationships.">用來對每個指定之組件和關聯性進行數位簽署的 X.509 憑證。</param>
      <param name="relationshipSelectors" vsli:raw="The list of &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; objects to sign.">要簽署的 <see cref="T:System.IO.Packaging.PackageRelationship" /> 物件清單。</param>
      <param name="signatureId" vsli:raw="An identification string to associate with the signature.">要與簽章相關聯的識別字串。</param>
      <returns vsli:raw="The digital signature used to sign the elements specified in the &lt;paramref name=&quot;parts&quot; /&gt; and &lt;paramref name=&quot;relationshipSelectors&quot; /&gt; lists.">用來簽署 <paramref name="parts" /> 和 <paramref name="relationshipSelectors" /> 清單中所指定元素的數位簽章。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Neither &lt;paramref name=&quot;parts&quot; /&gt; nor &lt;paramref name=&quot;relationshipSelectors&quot; /&gt; specify any elements to sign.">
        <paramref name="parts" /> 和 <paramref name="relationshipSelectors" /> 都未指定要簽署的任何項目。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String,System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.DataObject},System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.Reference})">
      <summary vsli:raw="Signs a list of package parts, package relationships, or custom objects with a specified X.509 certificate and signature identifier (ID).">以指定的 X.509 憑證和簽章 識別項 (ID)，簽署套件組件、套件關聯性或自訂物件清單。</summary>
      <param name="parts" vsli:raw="The list of uniform resource identifiers (URIs) for the &lt;see cref=&quot;T:System.IO.Packaging.PackagePart&quot; /&gt; objects to sign.">要簽署之 <see cref="T:System.IO.Packaging.PackagePart" /> 物件的 統一資源識別項 (URI) 清單。</param>
      <param name="certificate" vsli:raw="The X.509 certificate to use to digitally sign each of the specified parts and relationships.">用來對每個指定之組件和關聯性進行數位簽署的 X.509 憑證。</param>
      <param name="relationshipSelectors" vsli:raw="The list of &lt;see cref=&quot;T:System.IO.Packaging.PackageRelationship&quot; /&gt; objects to sign.">要簽署的 <see cref="T:System.IO.Packaging.PackageRelationship" /> 物件清單。</param>
      <param name="signatureId" vsli:raw="An identification string to associate with the signature.">要與簽章相關聯的識別字串。</param>
      <param name="signatureObjects" vsli:raw="A list of custom data objects to sign.">要簽署的自訂資料物件清單。</param>
      <param name="objectReferences" vsli:raw="A list of references to custom objects to sign.">要簽署的自訂物件參考清單。</param>
      <returns vsli:raw="The digital signature used to sign the elements specified in the &lt;paramref name=&quot;parts&quot; /&gt; and &lt;paramref name=&quot;relationshipSelectors&quot; /&gt; lists.">用來簽署 <paramref name="parts" /> 和 <paramref name="relationshipSelectors" /> 清單中所指定元素的數位簽章。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Neither &lt;paramref name=&quot;parts&quot; /&gt;, &lt;paramref name=&quot;relationshipSelectors&quot; /&gt;, &lt;paramref name=&quot;signatureObjects&quot; /&gt;, nor &lt;paramref name=&quot;objectReferences&quot; /&gt; specify any elements to sign.">
        <paramref name="parts" />、<paramref name="relationshipSelectors" />、<paramref name="signatureObjects" /> 和 <paramref name="objectReferences" /> 都未指定要簽署的任何項目。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.ContentType&quot; /&gt; of a part being signed references an empty, &lt;see langword=&quot;null&quot; /&gt;, or undefined &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping&quot; /&gt;.">所簽署組件的 <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> 參考空白、 <see langword="null" />或未定義的 <see cref="P:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping" />。</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;signatureId&quot; /&gt; is not &lt;see langword=&quot;null&quot; /&gt; and is not a valid XML schema ID (for example, begins with a leading numeric digit).">
        <paramref name="signatureId" /> 不是 <see langword="null" />，而且不是有效的 XML 結構描述識別碼 (例如，開頭為前置數字)。</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin">
      <summary vsli:raw="Gets the uniform resource identifier (URI) of the signature origin part.">取得簽章原點組件的統一資源識別項 (URI)。</summary>
      <returns vsli:raw="The URI of the signature origin part.">簽章原點組件的 URI。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType">
      <summary vsli:raw="Gets the type of default signature origin relationship.">取得預設簽章原點關聯性的類型。</summary>
      <returns vsli:raw="The type of default signature origin relationship.">預設簽章原點關聯性的類型。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.Signatures">
      <summary vsli:raw="Gets a collection of all the signatures contained in the package.">取得封裝內所含全部簽章的集合。</summary>
      <returns vsli:raw="A collection of all the &lt;see cref=&quot;T:System.IO.Packaging.PackageDigitalSignature&quot; /&gt; objects.">所有 <see cref="T:System.IO.Packaging.PackageDigitalSignature" /> 物件的集合。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat">
      <summary vsli:raw="Gets or sets the date/time format used to create a signature &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.SigningTime&quot; /&gt;.">取得或設定用來建立簽章 <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" /> 的日期與時間格式。</summary>
      <returns vsli:raw="The date/time format used to create a signature &lt;see cref=&quot;P:System.IO.Packaging.PackageDigitalSignature.SigningTime&quot; /&gt;.">用來建立簽章 <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" /> 的日期與時間格式。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping">
      <summary vsli:raw="Gets a dictionary that contains each defined &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.ContentType&quot; /&gt; and its associated XML &lt;see cref=&quot;T:System.Security.Cryptography.Xml.Transform&quot; /&gt;.&lt;see cref=&quot;P:System.Security.Cryptography.Xml.Transform.Algorithm&quot; /&gt; identifier.">取得包含各個已定義 <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> 和其相關聯 XML <see cref="T:System.Security.Cryptography.Xml.Transform" />.<see cref="P:System.Security.Cryptography.Xml.Transform.Algorithm" /> 識別碼的字典 。</summary>
      <returns vsli:raw="A dictionary that contains each defined &lt;see cref=&quot;P:System.IO.Packaging.PackagePart.ContentType&quot; /&gt; and its associated XML &lt;see cref=&quot;T:System.Security.Cryptography.Xml.Transform&quot; /&gt;.&lt;see cref=&quot;P:System.Security.Cryptography.Xml.Transform.Algorithm&quot; /&gt; identifier.">字典, 其中包含每個<see cref="P:System.IO.Packaging.PackagePart.ContentType" />已定義和XML其相關聯<see cref="T:System.Security.Cryptography.Xml.Transform" />的。<see cref="P:System.Security.Cryptography.Xml.Transform.Algorithm" /> 。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary vsli:raw="Verifies a given X.509 certificate.">驗證指定的 X.509 憑證。</summary>
      <param name="certificate" vsli:raw="The X.509 certificate to verify.">要驗證的 X.509 憑證。</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.NoError&quot; /&gt; (value 0) if the certificate verified successfully; otherwise, a bitwise enumeration of error flags.">如果成功驗證憑證，則為 <see cref="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.NoError" /> (值 0)；否則為錯誤旗標的位元列舉。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)">
      <summary vsli:raw="Verifies the signatures on all signed parts within the package.">確認封裝內所有已簽署組件上的簽章。</summary>
      <param name="exitOnFailure" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to exit on first failure; otherwise, &lt;see langword=&quot;false&quot; /&gt; to continue and check all signatures.">
        <see langword="true" /> 表示在第一次失敗時結束；否則，<see langword="false" /> 表示繼續並檢查所有簽章。</param>
      <returns vsli:raw="&lt;see cref=&quot;F:System.IO.Packaging.VerifyResult.Success&quot; /&gt; (value 0) if all signatures are verified successfully; otherwise, an enumeration that identifies the error.">如果已順利驗證所有簽章，則為 <see cref="F:System.IO.Packaging.VerifyResult.Success" /> (值 0)；否則為識別錯誤的列舉。</returns>
    </member>
    <member name="T:System.IO.Packaging.PackagePart">
      <summary>提供基底類別給儲存於 <see cref="T:System.IO.Packaging.Package" /> 中的組件。  這個類別是抽象的。</summary>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri)">
      <summary>使用指定的父 <see cref="T:System.IO.Packaging.PackagePart" /> 及組件 URI，初始化 <see cref="P:System.IO.Packaging.PackagePart.Package" /> 類別的新執行個體。</summary>
      <param name="package">組件的父 <see cref="T:System.IO.Packaging.Package" />。</param>
      <param name="partUri">組件的 URI，相對於父 <see cref="T:System.IO.Packaging.Package" /> 根目錄。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="package" /> 或 <paramref name="partUri" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String)">
      <summary>使用指定的父 <see cref="T:System.IO.Packaging.PackagePart" />、組件 URI 及 MIME 內容類型，初始化 <see cref="P:System.IO.Packaging.PackagePart.Package" /> 類別的新執行個體。</summary>
      <param name="package">組件的父 <see cref="T:System.IO.Packaging.Package" />。</param>
      <param name="partUri">組件的 URI，相對於父 <see cref="T:System.IO.Packaging.Package" /> 根目錄。</param>
      <param name="contentType">組件資料流的 MIME 內容類型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="package" /> 或 <paramref name="partUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> 不是有效的 <see cref="T:System.IO.Packaging.PackagePart" /> URI。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String,System.IO.Packaging.CompressionOption)">
      <summary>使用指定的父 <see cref="T:System.IO.Packaging.PackagePart" />、組件 URI、MIME 內容類型及 <see cref="P:System.IO.Packaging.PackagePart.Package" />，初始化 <see cref="T:System.IO.Packaging.CompressionOption" /> 類別的新執行個體。</summary>
      <param name="package">組件的父 <see cref="T:System.IO.Packaging.Package" />。</param>
      <param name="partUri">組件的 URI，相對於父 <see cref="T:System.IO.Packaging.Package" /> 根目錄。</param>
      <param name="contentType">組件資料流的 MIME 內容類型。</param>
      <param name="compressionOption">組件資料流的壓縮選項。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="package" /> 或 <paramref name="partUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> 不是有效的 <see cref="T:System.IO.Packaging.PackagePart" /> URI。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="compressionOption" /> 值不是有效的。</exception>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.CompressionOption">
      <summary>取得組件內容資料流的壓縮選項。</summary>
      <returns>組件內容資料流的壓縮選項。</returns>
      <exception cref="T:System.InvalidOperationException">組件已經刪除。  
-或- 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 沒有開啟 (已經呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.ContentType">
      <summary>取得內容資料流的 MIME 類型。</summary>
      <returns>組件內容資料流的 MIME 類型。</returns>
      <exception cref="T:System.InvalidOperationException">組件已經刪除。  
-或- 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 沒有開啟 (已經呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。  
-或- 
衍生類別 <see cref="M:System.IO.Packaging.PackagePart.GetContentTypeCore" /> 方法傳回的字串是空的。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
      <summary>建立這個 <see cref="T:System.IO.Packaging.PackagePart" /> 和指定目標 <see cref="T:System.IO.Packaging.PackagePart" /> 或外部資源之間的組件層級關係。</summary>
      <param name="targetUri">目標組件的 URI。</param>
      <param name="targetMode">其中一個列舉值。 例如，如果目標組件位於 <see cref="F:System.IO.Packaging.TargetMode.Internal" /> 內部，就是 <see cref="T:System.IO.Packaging.Package" />，如果目標組件是 <see cref="F:System.IO.Packaging.TargetMode.External" /> 外部的資源，就是 <see cref="T:System.IO.Packaging.Package" />。</param>
      <param name="relationshipType">關聯性的角色。</param>
      <returns>這個 <see cref="T:System.IO.Packaging.PackagePart" /> 與目標 <see cref="T:System.IO.Packaging.PackagePart" /> 或外部資源之間的組件層級關係。</returns>
      <exception cref="T:System.InvalidOperationException">組件已經刪除。  
-或- 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 沒有開啟 (已經呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetUri" /> 或 <paramref name="relationshipType" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="targetMode" /> 參數不是有效的 <see cref="T:System.IO.Packaging.TargetMode" /> 列舉值。</exception>
      <exception cref="T:System.ArgumentException">由 <paramref name="targetUri" /> 識別的組件是一種關聯性 (關聯性的目標不能是另一種關聯性)。  
-或- 
 <paramref name="targetMode" /> 是指定為 <see cref="F:System.IO.Packaging.TargetMode.Internal" />，但 <paramref name="targetUri" /> 是一種絕對的外部 URI。</exception>
      <exception cref="T:System.IO.IOException">套件是唯讀的 (無法新增關聯性)。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
      <summary>建立這個 <see cref="T:System.IO.Packaging.PackagePart" /> 和指定目標 <see cref="T:System.IO.Packaging.PackagePart" /> 或外部資源之間的組件層級關係。</summary>
      <param name="targetUri">目標組件的 URI。</param>
      <param name="targetMode">其中一個列舉值。 例如，如果目標組件位於 <see cref="F:System.IO.Packaging.TargetMode.Internal" /> 內部，就是 <see cref="T:System.IO.Packaging.Package" />，如果目標組件是 <see cref="F:System.IO.Packaging.TargetMode.External" /> 外部的資源，就是 <see cref="T:System.IO.Packaging.Package" />。</param>
      <param name="relationshipType">關聯性的角色。</param>
      <param name="id">關聯性的唯一 ID。</param>
      <returns>這個 <see cref="T:System.IO.Packaging.PackagePart" /> 與目標 <see cref="T:System.IO.Packaging.PackagePart" /> 或外部資源之間的組件層級關係。</returns>
      <exception cref="T:System.InvalidOperationException">組件已經刪除。  
-或- 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 沒有開啟 (已經呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetUri" /> 或 <paramref name="relationshipType" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="targetMode" /> 參數不是有效的 <see cref="T:System.IO.Packaging.TargetMode" /> 列舉值。</exception>
      <exception cref="T:System.ArgumentException">由 <paramref name="targetUri" /> 識別的組件是一種關聯性 (關聯性的目標不能是另一種關聯性)。  
-或- 
 <paramref name="targetMode" /> 是指定為 <see cref="F:System.IO.Packaging.TargetMode.Internal" />，但 <paramref name="targetUri" /> 是一種絕對的外部 URI。</exception>
      <exception cref="T:System.IO.IOException">套件是唯讀的 (無法新增關聯性)。</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> 不是有效的 XML 識別項。  
-或- 
具有指定之 <paramref name="id" /> 的組件已經存在。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)">
      <summary>刪除指定的組件層級 <see cref="T:System.IO.Packaging.PackageRelationship" />。</summary>
      <param name="id">要刪除之關聯性的 <see cref="P:System.IO.Packaging.PackageRelationship.Id" />。</param>
      <exception cref="T:System.InvalidOperationException">組件已經刪除。  
-或- 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 沒有開啟 (已經呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.IO.IOException">套件是唯讀的 (無法刪除關聯性)。</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> 不是有效的 XML 識別項。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetContentTypeCore">
      <summary>在衍生類別中覆寫時，傳回組件內容的 MIME 型別。</summary>
      <returns>組件內容的 MIME 型別。</returns>
      <exception cref="T:System.NotSupportedException">衍生的類別不會提供 <see cref="M:System.IO.Packaging.PackagePart.GetContentTypeCore" /> 方法所需的覆寫實作。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetRelationship(System.String)">
      <summary>傳回具有指定之 <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> 的關聯性。</summary>
      <param name="id">要傳回之關聯性的 <see cref="P:System.IO.Packaging.PackageRelationship.Id" />。</param>
      <returns>符合指定之 <paramref name="id" /> 的關聯性。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> 不是有效的 XML 識別項。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="relationshipType" /> 為空字串。</exception>
      <exception cref="T:System.InvalidOperationException">組件已經刪除。  
-或- 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 沒有開啟 (已經呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。  
-或- 
套件中不存在具有指定之 <paramref name="id" /> 的關聯性。</exception>
      <exception cref="T:System.IO.IOException">封裝是唯寫的 (無法讀取關聯性資訊)。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetRelationships">
      <summary>傳回這個組件所擁有之全部關聯性的集合。</summary>
      <returns>這個組件所擁有之全部關聯性的集合。</returns>
      <exception cref="T:System.InvalidOperationException">組件已經刪除。  
-或- 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 沒有開啟 (已經呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
      <exception cref="T:System.IO.IOException">封裝是唯寫的 (無法讀取關聯性資訊)。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)">
      <summary>傳回符合指定之 <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> 的關聯性集合。</summary>
      <param name="relationshipType">關聯性的 <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />，可在集合中找到並傳回。</param>
      <returns>符合指定之 <paramref name="relationshipType" /> 的關聯性集合。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relationshipType" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="relationshipType" /> 為空字串。</exception>
      <exception cref="T:System.InvalidOperationException">組件已經刪除。  
-或- 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 沒有開啟 (已經呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
      <exception cref="T:System.IO.IOException">封裝是唯寫的 (無法讀取關聯性資訊)。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStream">
      <summary>傳回部分內容資料流。</summary>
      <returns>部分的內容資料流。</returns>
      <exception cref="T:System.InvalidOperationException">組件已經刪除。  
-或- 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 沒有開啟 (已經呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
      <exception cref="T:System.IO.IOException">衍生子類別的 <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> 方法傳回的資料流物件是 <see langword="null" />。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode)">
      <summary>傳回在指定之 I/O <see cref="T:System.IO.FileMode" /> 中開啟的內容資料流。</summary>
      <param name="mode">開啟內容資料流的 I/O 模式。</param>
      <returns>組件的內容資料流。</returns>
      <exception cref="T:System.InvalidOperationException">組件已經刪除。  
-或- 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 沒有開啟 (已經呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" /> 參數不是有效的 <see cref="T:System.IO.FileMode" /> 列舉值。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="mode" /> 參數與套件及組件資料流不相容。  
-或- 
衍生子類別的 <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> 方法傳回的資料流物件是 <see langword="null" />。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode,System.IO.FileAccess)">
      <summary>傳回以指定之 <see cref="T:System.IO.FileMode" /> 及 <see cref="T:System.IO.FileAccess" /> 開啟的組件內容資料流。</summary>
      <param name="mode">開啟內容資料流的 I/O 模式。</param>
      <param name="access">開啟內容資料流時使用的存取權限。</param>
      <returns>組件的內容資料流。</returns>
      <exception cref="T:System.InvalidOperationException">組件已經刪除。  
-或- 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 沒有開啟 (已經呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" /> 參數不是有效的 <see cref="T:System.IO.FileMode" /> 列舉值。  
-或- 
<paramref name="access" /> 參數不是有效的 <see cref="T:System.IO.FileAccess" /> 列舉值。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="mode" /> 或 <paramref name="access" /> 與套件及組件資料流不相容。  
-或- 
<paramref name="access" /> 參數是指定為 <see cref="F:System.IO.FileAccess.Read" />，但 <paramref name="mode" /> 參數需要寫入存取。  (<see cref="T:System.IO.FileMode" />、<see cref="F:System.IO.FileMode.Create" />、<see cref="F:System.IO.FileMode.CreateNew" /> 及 <see cref="F:System.IO.FileMode.Truncate" /> 的 <see cref="F:System.IO.FileMode.Append" /> 值需要 <see cref="F:System.IO.FileAccess.Write" /> 或 <see cref="F:System.IO.FileAccess.ReadWrite" /> 存取)。 
-或- 
衍生子類別的 <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> 方法傳回的資料流物件是 <see langword="null" />。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)">
      <summary>在衍生類別中覆寫時，會傳回以指定之 <see cref="T:System.IO.FileMode" /> 及 <see cref="T:System.IO.FileAccess" /> 開啟的組件內容資料流。</summary>
      <param name="mode">開啟內容資料流的 I/O 模式。</param>
      <param name="access">開啟內容資料流時使用的存取權限。</param>
      <returns>組件的內容資料流。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.Package">
      <summary>取得組件的父 <see cref="T:System.IO.Packaging.Package" />。</summary>
      <returns>組件的父套件。</returns>
      <exception cref="T:System.InvalidOperationException">組件已經刪除。  
-或- 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 沒有開啟 (已經呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.RelationshipExists(System.String)">
      <summary>傳回值，表示這個組件是否擁有包含指定之 <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> 的關聯性。</summary>
      <param name="id">要檢查之關聯性的 <see cref="P:System.IO.Packaging.PackageRelationship.Id" />。</param>
      <returns>如果這個組件擁有包含指定之 <paramref name="id" /> 的關聯性，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> 不是有效的 XML 識別項。</exception>
      <exception cref="T:System.InvalidOperationException">組件已經刪除。  
-或- 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 沒有開啟 (已經呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
      <exception cref="T:System.IO.IOException">封裝是唯寫的 (無法讀取關聯性資訊)。</exception>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.Uri">
      <summary>取得組件的 URI。</summary>
      <returns>相對於封裝根目錄之元件的。URI</returns>
      <exception cref="T:System.InvalidOperationException">組件已經刪除。  
-或- 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 沒有開啟 (已經呼叫 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />)。</exception>
    </member>
    <member name="T:System.IO.Packaging.PackagePartCollection">
      <summary>表示 <see cref="T:System.IO.Packaging.PackagePart" /> 物件的集合。</summary>
    </member>
    <member name="M:System.IO.Packaging.PackagePartCollection.GetEnumerator">
      <summary>傳回可逐一查看集合中各組件的列舉程式。</summary>
      <returns>可逐一查看集合中 <see cref="T:System.IO.Packaging.PackagePart" /> 元素的列舉值。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePartCollection.System#Collections#Generic#IEnumerable{System#IO#Packaging#PackagePart}#GetEnumerator">
      <summary>傳回逐一查看集合的列舉值。</summary>
      <returns>
        <see cref="T:System.Collections.Generic.IEnumerator`1" /> 物件，可用於逐一查看集合。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePartCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>如需這個成員的說明，請參閱 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> 物件，可用於逐一查看集合。</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageProperties">
      <summary>表示 <see cref="T:System.IO.Packaging.Package" /> 的核心屬性。</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageProperties.#ctor">
      <summary>初始化 <see cref="T:System.IO.Packaging.PackageProperties" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Category">
      <summary>在衍生類別 (Derived Class) 中覆寫時，取得或設定 <see cref="T:System.IO.Packaging.Package" /> 的分類。</summary>
      <returns>
        <see cref="T:System.IO.Packaging.Package" /> 中包含之內容的分類。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.ContentStatus">
      <summary>在衍生類別中覆寫時，取得或設定值，表示 <see cref="T:System.IO.Packaging.Package" /> 的狀態。</summary>
      <returns>
        <see cref="T:System.IO.Packaging.Package" /> 內容的狀態。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.ContentType">
      <summary>在衍生類別中覆寫時，取得或設定值，表示 <see cref="T:System.IO.Packaging.Package" /> 中包含之內容的型別。</summary>
      <returns>
        <see cref="T:System.IO.Packaging.Package" /> 中包含之內容的型別。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Created">
      <summary>在衍生類別中覆寫時，取得或設定建立 <see cref="T:System.IO.Packaging.Package" /> 的日期和時間。</summary>
      <returns>最初建立 <see cref="T:System.IO.Packaging.Package" /> 的日期和時間。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Creator">
      <summary>在衍生類別中覆寫時，取得或設定值，識別建立 <see cref="T:System.IO.Packaging.Package" /> 及其內容的個人或實體 (Entity)。</summary>
      <returns>建立 <see cref="T:System.IO.Packaging.Package" /> 及其內容的個人或實體。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Description">
      <summary>在衍生類別中覆寫時，取得或設定 <see cref="T:System.IO.Packaging.Package" /> 中所包含內容的描述。</summary>
      <returns>
        <see cref="T:System.IO.Packaging.Package" /> 中所包含內容的描述。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageProperties.Dispose">
      <summary>釋放 <see cref="T:System.IO.Packaging.PackageProperties" /> 執行個體使用的所有資源。</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageProperties.Dispose(System.Boolean)">
      <summary>釋放 <see cref="T:System.IO.Packaging.PackageProperties" /> 執行個體所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</summary>
      <param name="disposing">
        <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Identifier">
      <summary>在衍生類別中覆寫時，取得或設定明確識別 <see cref="T:System.IO.Packaging.Package" /> 及其內容的值。</summary>
      <returns>明確識別 <see cref="T:System.IO.Packaging.Package" /> 及其內容的值。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Keywords">
      <summary>在衍生類別中覆寫時，取得或設定值，定義支援搜尋與檢索 <see cref="T:System.IO.Packaging.Package" /> 及其內容的關鍵字分隔集合。</summary>
      <returns>支援搜尋與檢索 <see cref="T:System.IO.Packaging.Package" /> 及內容的關鍵字分隔集合。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Language">
      <summary>在衍生類別中覆寫時，取得或設定識別 <see cref="T:System.IO.Packaging.Package" /> 內容語言的值。</summary>
      <returns>識別 <see cref="T:System.IO.Packaging.Package" /> 內容語言的值。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.LastModifiedBy">
      <summary>在衍生類別中覆寫時，取得或設定值，識別上次修改 <see cref="T:System.IO.Packaging.Package" /> 內容的使用者。</summary>
      <returns>上次修改 <see cref="T:System.IO.Packaging.Package" /> 內容的使用者。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.LastPrinted">
      <summary>在衍生類別中覆寫時，取得或設定上次列印 <see cref="T:System.IO.Packaging.Package" /> 內容的日期和時間。</summary>
      <returns>上次列印 <see cref="T:System.IO.Packaging.Package" /> 內容的日期和時間。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Modified">
      <summary>在衍生類別中覆寫時，取得或設定上次變更 <see cref="T:System.IO.Packaging.Package" /> 的日期和時間。</summary>
      <returns>上次變更 <see cref="T:System.IO.Packaging.Package" /> 的日期和時間。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Revision">
      <summary>在衍生類別中覆寫時，取得或設定 <see cref="T:System.IO.Packaging.Package" /> 的修訂編號。</summary>
      <returns>
        <see cref="T:System.IO.Packaging.Package" /> 的修訂編號。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Subject">
      <summary>在衍生類別中覆寫時，取得或設定 <see cref="T:System.IO.Packaging.Package" /> 內容的主題。</summary>
      <returns>
        <see cref="T:System.IO.Packaging.Package" /> 內容的主題。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Title">
      <summary>在衍生類別中覆寫時，取得或設定指定給 <see cref="T:System.IO.Packaging.Package" /> 及其內容的名稱。</summary>
      <returns>指定給 <see cref="T:System.IO.Packaging.Package" /> 及其內容的名稱。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Version">
      <summary>在衍生類別中覆寫時，取得或設定 <see cref="T:System.IO.Packaging.Package" /> 的版本號碼。</summary>
      <returns>
        <see cref="T:System.IO.Packaging.Package" /> 的版本號碼。</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationship">
      <summary>代表來源 <see cref="T:System.IO.Packaging.Package" /> 或 <see cref="T:System.IO.Packaging.PackagePart" /> 以及目標物件 (可能是 <see cref="T:System.IO.Packaging.PackagePart" /> 或外部資源) 之間的關聯。</summary>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.Id">
      <summary>取得識別關聯性的字串。</summary>
      <returns>識別關聯性的字串。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.Package">
      <summary>取得包含此關聯性的 <see cref="T:System.IO.Packaging.Package" />。</summary>
      <returns>包含此關聯性的封裝。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.RelationshipType">
      <summary>取得關聯性的限定型別名稱。</summary>
      <returns>關聯性的限定型別名稱。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.SourceUri">
      <summary>取得擁有關聯性之套件或組件的 URI。</summary>
      <returns>擁有關聯性之 <see cref="T:System.IO.Packaging.Package" /> 或 <see cref="T:System.IO.Packaging.PackagePart" /> 的 URI。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.TargetMode">
      <summary>取得值，指出關聯性的目標對 <see cref="F:System.IO.Packaging.TargetMode.Internal" /> 是 <see cref="F:System.IO.Packaging.TargetMode.External" /> 或 <see cref="T:System.IO.Packaging.Package" />。</summary>
      <returns>列舉值，指出 <see cref="P:System.IO.Packaging.PackageRelationship.TargetUri" /> 參考的資源對 <see cref="F:System.IO.Packaging.TargetMode.Internal" /> 是 <see cref="F:System.IO.Packaging.TargetMode.External" /> 或 <see cref="T:System.IO.Packaging.Package" />。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.TargetUri">
      <summary>取得關聯性之目標資源的 URI。</summary>
      <returns>目標資源的 URI。</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationshipCollection">
      <summary>表示指定之 <see cref="T:System.IO.Packaging.PackageRelationship" /> 或 <see cref="T:System.IO.Packaging.PackagePart" /> 所擁有的 <see cref="T:System.IO.Packaging.Package" /> 項目集合。</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipCollection.GetEnumerator">
      <summary>傳回列舉值，以便逐一查看集合中的關聯性 (Relationship)。</summary>
      <returns>可逐一查看集合中 <see cref="T:System.IO.Packaging.PackageRelationship" /> 元素的列舉值。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>這個類型或成員支援 Windows Presentation Foundation 基礎結構，而且不能從程式碼直接使用。</summary>
      <returns>請勿使用 (使用 <see cref="M:System.IO.Packaging.PackageRelationshipCollection.GetEnumerator" />)。</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationshipSelector">
      <summary>定義選取組件層級或封裝層級之關聯性 (Relationship) 的 <see cref="T:System.IO.Packaging.PackageRelationship" /> 準則。</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)">
      <summary>初始化 <see cref="T:System.IO.Packaging.PackageRelationshipSelector" /> 類別的新執行個體。</summary>
      <param name="sourceUri">擁有關聯性之 <see cref="T:System.IO.Packaging.PackagePart" /> 或 <see cref="T:System.IO.Packaging.Package" /> (<c>SourceUri</c>="/") 的 統一資源識別項 (URI)。</param>
      <param name="selectorType">依關聯性 <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" /> 或關聯性 <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Type" /> 之 <paramref name="selectionCriteria" /> 的型別。</param>
      <param name="selectionCriteria">用於依據 <paramref name="selectorType" /> 選取關聯性的限定性條件字串 (Qualification String)。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceUri" /> 或 <paramref name="selectionCriteria" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="selectorType" /> 參數無效。</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="selectorType" /> 參數是 <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" />，但是 <paramref name="selectionCriteria" /> 不是有效的 XML 結構描述定義 (XSD) 識別項 (ID)。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="selectionCriteria" /> 對指定的 <paramref name="selectorType" /> 無效。
-或-
<paramref name="sourceUri" /> 不是 <see cref="T:System.IO.Packaging.Package" /> 根 ("/")，也不是有效的 <see cref="T:System.IO.Packaging.PackagePart" /> URI。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipSelector.Select(System.IO.Packaging.Package)">
      <summary>傳回符合定義之 <see cref="T:System.IO.Packaging.PackageRelationship" />、<see cref="P:System.IO.Packaging.PackageRelationshipSelector.SourceUri" /> 和 <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SelectorType" /> 的 <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SelectionCriteria" /> 物件清單。</summary>
      <param name="package">要依選取準則從中選取關聯性的封裝。</param>
      <returns>符合指定給 <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" /> 建構函式之選取參數的關聯性清單。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="package" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationshipSelector.SelectionCriteria">
      <summary>取得指定給 <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" /> 建構函式 (Constructor) 的選取準則。</summary>
      <returns>選取準則，其依據指定給 <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SelectorType" /> 建構函式之 <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" /> 或 <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Type" /> 的 <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationshipSelector.SelectorType">
      <summary>取得指定給 <see cref="T:System.IO.Packaging.PackageRelationshipSelectorType" /> 建構函式的 <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />。</summary>
      <returns>指定給<see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" /> 建構函式之 <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Type" /> 或 <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" /> 的選取器型別。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationshipSelector.SourceUri">
      <summary>取得根目錄封裝 URI ("/") 或組件 <see cref="P:System.IO.Packaging.PackagePart.Uri" />，其已指定給 <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" /> 建構函式做為關聯性的擁有者。</summary>
      <returns>根目錄封裝 URI ("/") 或組件 <see cref="P:System.IO.Packaging.PackagePart.Uri" />，其已指定給 <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" /> 建構函式做為關聯性的擁有者。</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationshipSelectorType">
      <summary>指定透過 <see cref="T:System.IO.Packaging.PackageRelationship" /> 比對及重新執行 <see cref="T:System.IO.Packaging.PackageRelationshipSelector" /> 選取項目時所使用之選取準則的型別。</summary>
    </member>
    <member name="F:System.IO.Packaging.PackageRelationshipSelectorType.Id">
      <summary>
        <see cref="T:System.IO.Packaging.PackageRelationship" /> 的選取依據是 <see cref="P:System.IO.Packaging.PackageRelationship.Id" />。</summary>
    </member>
    <member name="F:System.IO.Packaging.PackageRelationshipSelectorType.Type">
      <summary>
        <see cref="T:System.IO.Packaging.PackageRelationship" /> 的選取依據是 <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />。</summary>
    </member>
    <member name="T:System.IO.Packaging.PackUriHelper">
      <summary>提供公用程式方法來撰寫和剖析 Pack URI 物件。</summary>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)">
      <summary>傳回值，這個值表示兩個 Pack URI 是否相等。</summary>
      <param name="firstPackUri">第一個 Pack URI。</param>
      <param name="secondPackUri">第二個 Pack URI。</param>
      <returns>帶正負號的整數，表示 <paramref name="firstPackUri" /> 與 <paramref name="secondPackUri" /> 之間的關聯性。  
  值 
  意義 
  小於 0 
 <paramref name="firstPackUri" /> 小於 <paramref name="secondPackUri" />。  

  0 
 <paramref name="firstPackUri" /> 相當於 <paramref name="secondPackUri" />。  

  大於 0 
 <paramref name="firstPackUri" /> 大於 <paramref name="secondPackUri" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="firstPackUri" /> 或 <paramref name="secondPackUri" /> 不是絕對 URI。  
-或- 
<paramref name="firstPackUri" /> 或 <paramref name="secondPackUri" /> 的開頭不是 "pack://" scheme。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)">
      <summary>傳回值，指出兩個套件組件 URI 是否相等。</summary>
      <param name="firstPartUri">第一個 <see cref="T:System.IO.Packaging.PackagePart" /> 的 URI。</param>
      <param name="secondPartUri">第二個 <see cref="T:System.IO.Packaging.PackagePart" /> 的 URI。</param>
      <returns>一個值，表示 <paramref name="firstPartUri" /> 與 <paramref name="secondPartUri" /> 之間的關聯性。  
  值 
  意義 
  小於 0 
 <paramref name="firstPartUri" /> 小於 <paramref name="secondPartUri" />。  

  0 
 <paramref name="firstPartUri" /> 相當於 <paramref name="secondPartUri" />。  

  大於 0 
 <paramref name="firstPartUri" /> 大於 <paramref name="secondPartUri" />。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="firstPartUri" /> 或 <paramref name="secondPartUri" /> 不是有效的組件 URI 語法。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.Create(System.Uri)">
      <summary>建立指向封裝的新 Pack URI。</summary>
      <param name="packageUri">所參考之 <see cref="T:System.IO.Packaging.Package" /> 的 URI。</param>
      <returns>特定 <paramref name="packageUri" /> 所參考之 <see cref="T:System.IO.Packaging.Package" /> 的 Pack URI。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="packageUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="packageUri" /> 不是絕對 URI。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri)">
      <summary>使用 <see cref="T:System.IO.Packaging.Package" /> URI 和套件組件的 URI，來建立 Pack URI。</summary>
      <param name="packageUri">URI 的 <see cref="T:System.IO.Packaging.Package" />。</param>
      <param name="partUri">套件中 <see cref="T:System.IO.Packaging.PackagePart" /> 的 URI。</param>
      <returns>特定 <see cref="T:System.IO.Packaging.PackagePart" /> 的 Pack URI。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="packageUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="packageUri" /> 不是絕對 URI。  
-或- 
 <paramref name="partUri" /> 不是有效的組件 URI 語法。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri,System.String)">
      <summary>使用 <see cref="T:System.IO.Packaging.Package" /> URI、套件組件的 URI，以及要附加的 "#" 片段，來建立 Pack URI。</summary>
      <param name="packageUri">URI 的 <see cref="T:System.IO.Packaging.Package" />。</param>
      <param name="partUri">套件中 <see cref="T:System.IO.Packaging.PackagePart" /> 的 URI。</param>
      <param name="fragment">識別此封裝組件中項目的 "#" 參考。</param>
      <returns>識別指定的封裝、封裝組件以及片段的封裝 URI。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="packageUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="packageUri" /> 不是絕對 URI。  
-或- 
 <paramref name="partUri" /> 不是有效的組件 URI 語法。  
-或- 
 <paramref name="fragment" /> 是空的或開頭並非 "#"。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)">
      <summary>建立格式化的 <see cref="T:System.IO.Packaging.PackagePart" /> URI。</summary>
      <param name="partUri">封裝內部 <see cref="T:System.IO.Packaging.PackagePart" /> 的 URI。</param>
      <returns>格式化的 <see cref="T:System.IO.Packaging.PackagePart" /> URI。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> 不是絕對 <see cref="T:System.Uri" />。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)">
      <summary>傳回指定之 <see cref="T:System.IO.Packaging.PackagePart" /> URI 的正規化形式。</summary>
      <param name="partUri">要正規化的 <see cref="T:System.IO.Packaging.PackagePart" /> URI。</param>
      <returns>特定 <paramref name="partUri" /> 的正規化格式。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> 沒有有效的 <see cref="T:System.Uri" /> 語法。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)">
      <summary>傳回指向所指定 Pack URI 之整個封裝的內部 URI。</summary>
      <param name="packUri">傳回 <see cref="T:System.IO.Packaging.Package" /> 之 URI 的 Pack URI。</param>
      <returns>所指定 <paramref name="packUri" /> 之 <see cref="T:System.IO.Packaging.Package" /> 的 URI。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="packUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="packUri" /> 不是絕對 <see cref="T:System.Uri" />。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)">
      <summary>傳回指定 Pack URI 中的 <see cref="T:System.IO.Packaging.PackagePart" /> URI。</summary>
      <param name="packUri">要從中傳回 <see cref="T:System.IO.Packaging.PackagePart" /> URI 的 pack URI。</param>
      <returns>指定之 <paramref name="packUri" /> 中 <see cref="T:System.IO.Packaging.PackagePart" /> 的 URI；或若 <paramref name="packUri" /> 指向封裝而非 <see cref="T:System.IO.Packaging.PackagePart" />，則為 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException">如果 <paramref name="packUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">如果 <paramref name="packUri" /> 不是絕對 <see cref="T:System.Uri" />。
-或-
<paramref name="packUri" /> 不具有 "pack://" 配置。
-或- 
從 <paramref name="packUri" /> 擷取的 partUri 不符合有效 partUri 語法。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)">
      <summary>傳回與指定 <see cref="T:System.IO.Packaging.PackagePart" /> 建立關聯之關聯性組件的 URI。</summary>
      <param name="partUri">
        <see cref="P:System.IO.Packaging.PackagePart.Uri" /> 的 <see cref="T:System.IO.Packaging.PackagePart" />，要傳回關聯之 <see cref="T:System.IO.Packaging.PackageRelationship" /> 的 URI。</param>
      <returns>
        <see cref="T:System.IO.Packaging.PackageRelationship" /> 組件的 URI，此組件與由 <paramref name="partUri" /> 識別的 <see cref="T:System.IO.Packaging.PackagePart" /> 關聯。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> 語法對於封裝組件 URI 無效。  
-或- 
 <paramref name="partUri" /> 是絕對 URI。  
-或- 
 <paramref name="partUri" /> 參考關聯性組件。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)">
      <summary>傳回兩個指定 <see cref="T:System.IO.Packaging.PackagePart" /> URI 之間的相對 URI。</summary>
      <param name="sourcePartUri">來源組件的 URI。</param>
      <param name="targetPartUri">目標組件的 URI。</param>
      <returns>從 <paramref name="sourcePartUri" /> 到 <paramref name="targetPartUri" /> 的相對 URI。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourcePartUri" /> 或 <paramref name="targetPartUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourcePartUri" /> 或 <paramref name="targetPartUri" /> 沒有有效的 <see cref="T:System.Uri" /> 語法。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(System.Uri)">
      <summary>從具有指定之 URI 的 <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> 傳回 <see cref="T:System.IO.Packaging.PackageRelationship" />。</summary>
      <param name="relationshipPartUri">關聯性組件的 URI，要傳回 <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />。</param>
      <returns>
        <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> 的 <see cref="T:System.IO.Packaging.PackagePart" />，來自具有指定之 <paramref name="relationshipPartUri" /> 的關聯性。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relationshipPartUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="relationshipPartUri" /> 是絕對 URI。  
-或- 
 <paramref name="relationshipPartUri" /> 語法對於 <see cref="T:System.IO.Packaging.PackagePart" /> 無效。  
-或- 
 <paramref name="relationshipPartUri" /> 不會參考關聯性組件。  
-或- 
關聯性組件的 <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> 參考其他 (無效) 關聯性組件。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(System.Uri)">
      <summary>傳回值，指出所指定 URI 是否為 <see cref="T:System.IO.Packaging.PackageRelationship" /> 組件的 URI。</summary>
      <param name="partUri">要檢查是否有 <see cref="T:System.IO.Packaging.PackageRelationship" /> 組件的 URI。</param>
      <returns>如果 <paramref name="partUri" /> 識別出 <see cref="T:System.IO.Packaging.PackageRelationship" /> 組件，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> 是絕對 URI。  
-或- 
 <paramref name="partUri" /> 是無效的 <see cref="T:System.IO.Packaging.PackagePart" /> 語法。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)">
      <summary>傳回組件 URI，提供來源組件 URI 以及含有目標組件相對路徑的 URI。</summary>
      <param name="sourcePartUri">來源組件的 URI，或是 "/" 以指定 <see cref="T:System.IO.Packaging.Package" /> 根目錄。</param>
      <param name="targetUri">相對於目標組件的 URI。</param>
      <returns>在指定的 <paramref name="SourcePartUri" /> 與 <paramref name="targetUri" /> 參數之間解析的目標組件之 URI。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourcePartUri" /> 或 <paramref name="targetUri" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourcePartUri" /> 不是有效的組件 URI。  
-或- 
 <paramref name="targetUri" /> 不是有效的相對 URI。</exception>
    </member>
    <member name="F:System.IO.Packaging.PackUriHelper.UriSchemePack">
      <summary>定義封裝 URI 配置名稱 "pack"。</summary>
    </member>
    <member name="T:System.IO.Packaging.RightsManagementInformation">
      <summary vsli:raw="Represents Digital Rights Management (DRM) information that is stored in an &lt;see cref=&quot;T:System.IO.Packaging.EncryptedPackageEnvelope&quot; /&gt;.">表示儲存在 <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> 的數位版權管理 (DRM) 資訊。</summary>
    </member>
    <member name="P:System.IO.Packaging.RightsManagementInformation.CryptoProvider">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Security.RightsManagement.CryptoProvider&quot; /&gt; for accessing the package's encrypted rights management data stream.">取得或設定 <see cref="T:System.Security.RightsManagement.CryptoProvider" />，用於存取封裝的加密版權管理資料流。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.CryptoProvider&quot; /&gt; for accessing the rights management information.">用於存取版權管理資訊的 <see cref="T:System.Security.RightsManagement.CryptoProvider" />。</returns>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.DeleteUseLicense(System.Security.RightsManagement.ContentUser)">
      <summary vsli:raw="Deletes the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for a specified user from the encrypted rights management data stream.">從加密版權管理資料流中，刪除指定之使用者的 <see cref="T:System.Security.RightsManagement.UseLicense" />。</summary>
      <param name="userKey" vsli:raw="The user of the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; to be deleted.">要刪除之 <see cref="T:System.Security.RightsManagement.UseLicense" /> 的使用者。</param>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.GetEmbeddedUseLicenses">
      <summary vsli:raw="Returns a dictionary collection of user and &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; key/value pairs from the encrypted rights management data stream.">從加密版權管理資料流傳回使用者和 <see cref="T:System.Security.RightsManagement.UseLicense" /> 索引鍵/值組的字典集合。</summary>
      <returns vsli:raw="A collection of user and &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; key/value pairs that are contained in the rights managed protected package.">包含在版權管理保護封裝中的使用者和 <see cref="T:System.Security.RightsManagement.UseLicense" /> 索引鍵/值組集合。</returns>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.LoadPublishLicense">
      <summary vsli:raw="Returns the embedded &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; from the encrypted rights management data stream.">從加密版權管理資料流傳回內嵌的 <see cref="T:System.Security.RightsManagement.PublishLicense" />。</summary>
      <returns vsli:raw="The embedded &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt;; or &lt;see langword=&quot;null&quot; /&gt;, if the package does not contain a &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt;.">內嵌的 <see cref="T:System.Security.RightsManagement.PublishLicense" />；如果封裝未包含 <see cref="T:System.Security.RightsManagement.PublishLicense" />，則為 <see langword="null" />。</returns>
      <exception cref="T:System.IO.FileFormatException" vsli:raw="The rights management information in this package cannot be read by the current version of this class.">這個類別目前的版本不能讀取本套件中的版權管理資訊。</exception>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.LoadUseLicense(System.Security.RightsManagement.ContentUser)">
      <summary vsli:raw="Returns a specified user's embedded &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; from the encrypted rights management data stream.">從加密版權管理資料流傳回指定之使用者的內嵌 <see cref="T:System.Security.RightsManagement.UseLicense" />。</summary>
      <param name="userKey" vsli:raw="The user or user group to return the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for.">要傳回 <see cref="T:System.Security.RightsManagement.UseLicense" /> 的使用者或使用者群組。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for the specified user; or &lt;see langword=&quot;null&quot; /&gt;, if the package does not contain a &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; that matches the given &lt;paramref name=&quot;userKey&quot; /&gt;.">指定之使用者的 <see cref="T:System.Security.RightsManagement.UseLicense" />；如果封裝未包含符合指定之 <paramref name="userKey" /> 的 <see cref="T:System.Security.RightsManagement.UseLicense" />，則為 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;userKey&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="userKey" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.IO.FileFormatException" vsli:raw="The rights management information in this package cannot be read by the current version of this class.">這個類別目前的版本不能讀取本套件中的版權管理資訊。</exception>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.SavePublishLicense(System.Security.RightsManagement.PublishLicense)">
      <summary vsli:raw="Saves a given &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; to the encrypted rights management data stream.">將指定的 <see cref="T:System.Security.RightsManagement.PublishLicense" /> 儲存到加密版權管理資料流。</summary>
      <param name="publishLicense" vsli:raw="The publish license to store and embed in the package.">要儲存及內嵌在封裝中的發行授權。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;publishLicense&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="publishLicense" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.IO.FileFormatException" vsli:raw="The rights management information in this package cannot be read by the current version of this class.">這個類別目前的版本不能讀取本套件中的版權管理資訊。</exception>
    </member>
    <member name="M:System.IO.Packaging.RightsManagementInformation.SaveUseLicense(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.UseLicense)">
      <summary vsli:raw="Saves a given &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for a specified user to the encrypted rights management data stream.">將指定之使用者的指定 <see cref="T:System.Security.RightsManagement.UseLicense" /> 儲存到加密版權管理資料流。</summary>
      <param name="userKey" vsli:raw="The user of the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt;.">
        <see cref="T:System.Security.RightsManagement.UseLicense" /> 的使用者。</param>
      <param name="useLicense" vsli:raw="The use license to store and embed in the package.">要儲存及內嵌在封裝中的使用授權。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Either the &lt;paramref name=&quot;userKey&quot; /&gt; or &lt;paramref name=&quot;useLicense&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="userKey" /> 或 <paramref name="useLicense" /> 參數有一個是 <see langword="null" />。</exception>
      <exception cref="T:System.IO.FileFormatException" vsli:raw="The rights management information in this package cannot be read by the current version of this class.">這個類別目前的版本不能讀取本套件中的版權管理資訊。</exception>
    </member>
    <member name="T:System.IO.Packaging.SignatureVerificationEventArgs">
      <summary vsli:raw="Specifies the event args provided to the &lt;see cref=&quot;T:System.IO.Packaging.InvalidSignatureEventHandler&quot; /&gt;.">指定提供給 <see cref="T:System.IO.Packaging.InvalidSignatureEventHandler" /> 的事件引數。</summary>
    </member>
    <member name="P:System.IO.Packaging.SignatureVerificationEventArgs.Signature">
      <summary vsli:raw="Gets the digital signature being verified.">取得正在驗證的數位簽章。</summary>
      <returns vsli:raw="The digital signature being verified.">正在驗證的數位簽章。</returns>
    </member>
    <member name="P:System.IO.Packaging.SignatureVerificationEventArgs.VerifyResult">
      <summary vsli:raw="Gets the signature verification error.">取得簽章驗證錯誤。</summary>
      <returns vsli:raw="The signature verification error.">簽章驗證錯誤。</returns>
    </member>
    <member name="T:System.IO.Packaging.StorageInfo">
      <summary vsli:raw="Provides access and information for manipulating data stores in a &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">提供存取權和資訊，用來管理 <see cref="T:System.IO.Packaging.Package" /> 中的資料存放區。</summary>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.CreateStream(System.String)">
      <summary vsli:raw="Creates a new stream with a given name.">使用指定的名稱建立新資料流。</summary>
      <param name="name" vsli:raw="The name for the new stream.">新資料流的名稱。</param>
      <returns vsli:raw="The new stream with the specified &lt;paramref name=&quot;name&quot; /&gt;.">具有指定之 <paramref name="name" /> 的新資料流。</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.CreateStream(System.String,System.IO.Packaging.CompressionOption,System.IO.Packaging.EncryptionOption)">
      <summary vsli:raw="Creates a new stream with a given name, &lt;see cref=&quot;T:System.IO.Packaging.CompressionOption&quot; /&gt;, and &lt;see cref=&quot;T:System.IO.Packaging.EncryptionOption&quot; /&gt;.">使用指定的名稱、<see cref="T:System.IO.Packaging.CompressionOption" /> 和 <see cref="T:System.IO.Packaging.EncryptionOption" /> 建立新資料流。</summary>
      <param name="name" vsli:raw="The name for the new stream.">新資料流的名稱。</param>
      <param name="compressionOption" vsli:raw="The compression option for the data stream.">資料流的壓縮選項。</param>
      <param name="encryptionOption" vsli:raw="The encryption option for the data stream.">資料流的加密 (Encryption) 選項。</param>
      <returns vsli:raw="The new stream with the specified &lt;paramref name=&quot;name&quot; /&gt;, &lt;paramref name=&quot;compressionOption&quot; /&gt;, and &lt;paramref name=&quot;encryptionOption&quot; /&gt;.">具有指定之 <paramref name="name" />、<paramref name="compressionOption" /> 和 <paramref name="encryptionOption" /> 的新資料流。</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.CreateSubStorage(System.String)">
      <summary vsli:raw="Creates a new child &lt;see cref=&quot;T:System.IO.Packaging.StorageInfo&quot; /&gt; with this &lt;see cref=&quot;T:System.IO.Packaging.StorageInfo&quot; /&gt; as the parent.">以這個 <see cref="T:System.IO.Packaging.StorageInfo" /> 為父系建立新的子系 <see cref="T:System.IO.Packaging.StorageInfo" />。</summary>
      <param name="name" vsli:raw="The name for the new child data store.">新的子資料存放區名稱。</param>
      <returns vsli:raw="The new child data store.">新的子資料存放區。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.DeleteStream(System.String)">
      <summary vsli:raw="Deletes the stream with a specified name.">刪除具有指定名稱的資料流。</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.StreamInfo&quot; /&gt; name of the stream to delete.">要刪除之資料流的 <see cref="T:System.IO.Packaging.StreamInfo" /> 名稱。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.DeleteSubStorage(System.String)">
      <summary vsli:raw="Deletes a specified sub-store.">刪除指定的子存放區。</summary>
      <param name="name" vsli:raw="The name of the sub-store to delete.">要刪除之子存放區的名稱。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.GetStreamInfo(System.String)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.IO.Packaging.StreamInfo&quot; /&gt; instance with the given name.">傳回具有指定之名稱的 <see cref="T:System.IO.Packaging.StreamInfo" /> 執行個體。</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.IO.Packaging.StreamInfo&quot; /&gt; instance to return.">要傳回之 <see cref="T:System.IO.Packaging.StreamInfo" /> 執行個體的名稱。</param>
      <returns vsli:raw="The stream with the specified &lt;paramref name=&quot;name&quot; /&gt;.">具有指定之 <paramref name="name" /> 的資料流。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.GetStreams">
      <summary vsli:raw="Returns an array of the &lt;see cref=&quot;T:System.IO.Packaging.StreamInfo&quot; /&gt; instances that are currently contained in this store.">傳回這個存放區目前包含的 <see cref="T:System.IO.Packaging.StreamInfo" /> 執行個體陣列。</summary>
      <returns vsli:raw="An array of the &lt;see cref=&quot;T:System.IO.Packaging.StreamInfo&quot; /&gt; objects, each pointing to an I/O steam defined within this store.">
        <see cref="T:System.IO.Packaging.StreamInfo" /> 物件的陣列，每個物件都指向這個存放區內定義的一個 I/O 資料流。</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.GetSubStorageInfo(System.String)">
      <summary vsli:raw="Returns the child sub-store with a given name.">傳回具有指定名稱之子系子存放區。</summary>
      <param name="name" vsli:raw="The name of the sub-store to return.">要傳回之子存放區的名稱。</param>
      <returns vsli:raw="The child sub-store with the specified &lt;paramref name=&quot;name&quot; /&gt;.">具有指定 <paramref name="name" /> 的子系子存放區。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.GetSubStorages">
      <summary vsli:raw="Returns an array of the child sub-stores that are currently contained in this store.">傳回目前包含在這個存放區之子項子存放區的陣列。</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.IO.Packaging.StorageInfo&quot; /&gt; objects, each pointing to a sub-store defined within this store.">
        <see cref="T:System.IO.Packaging.StorageInfo" /> 物件的陣列，每個物件都指向這個存放區內定義的一個子存放區。</returns>
    </member>
    <member name="P:System.IO.Packaging.StorageInfo.Name">
      <summary vsli:raw="Gets the name of the store.">取得存放區的名稱。</summary>
      <returns vsli:raw="The name of this store.">此存放區的名稱。</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.StreamExists(System.String)">
      <summary vsli:raw="Returns a value that indicates whether a given stream exists.">傳回值，指出指定的資料流是否存在。</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.IO.Packaging.StreamInfo&quot; /&gt; name to check for.">要進行檢查的 <see cref="T:System.IO.Packaging.StreamInfo" /> 名稱。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a stream with the specified &lt;paramref name=&quot;name&quot; /&gt; exists; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果具有指定之 <paramref name="name" /> 的資料流存在，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.IO.Packaging.StorageInfo.SubStorageExists(System.String)">
      <summary vsli:raw="Returns a value that indicates whether a given child sub-store exists.">傳回值，指出指定的子系子存放區是否存在。</summary>
      <param name="name" vsli:raw="The child &lt;see cref=&quot;T:System.IO.Packaging.StorageInfo&quot; /&gt; name to check for.">要進行檢查的子系 <see cref="T:System.IO.Packaging.StorageInfo" /> 名稱。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a child sub-store with the specified &lt;paramref name=&quot;name&quot; /&gt; exists; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果具有指定之 <paramref name="name" /> 的子系子存放區存在，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.IO.Packaging.StreamInfo">
      <summary vsli:raw="Provides access and information for manipulating I/O streams within a &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt;.">提供存取權和資訊，用來管理 <see cref="T:System.IO.Packaging.Package" /> 內的 I/O 資料流。</summary>
    </member>
    <member name="P:System.IO.Packaging.StreamInfo.CompressionOption">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.IO.Packaging.CompressionOption&quot; /&gt; setting for the stream.">取得資料流的 <see cref="T:System.IO.Packaging.CompressionOption" /> 設定。</summary>
      <returns vsli:raw="The compression option setting for the package stream.">封裝資料流的壓縮選項設定。</returns>
    </member>
    <member name="P:System.IO.Packaging.StreamInfo.EncryptionOption">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.IO.Packaging.EncryptionOption&quot; /&gt; setting for the stream.">取得資料流的 <see cref="T:System.IO.Packaging.EncryptionOption" /> 設定。</summary>
      <returns vsli:raw="The encryption option setting for the package stream.">封裝資料流的加密 (Encryption) 選項設定。</returns>
    </member>
    <member name="M:System.IO.Packaging.StreamInfo.GetStream">
      <summary vsli:raw="Returns a stream opened in a default &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt; and &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt;.">傳回以預設 <see cref="T:System.IO.FileMode" /> 和 <see cref="T:System.IO.FileAccess" /> 開啟的資料流。</summary>
      <returns vsli:raw="The I/O stream opened in a default &lt;see cref=&quot;T:System.IO.Packaging.Package&quot; /&gt; root &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt; and &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt;.">以預設 <see cref="T:System.IO.Packaging.Package" /> 根 <see cref="T:System.IO.FileMode" /> 與 <see cref="T:System.IO.FileAccess" /> 所開啟的 I/O 資料流。</returns>
    </member>
    <member name="M:System.IO.Packaging.StreamInfo.GetStream(System.IO.FileMode)">
      <summary vsli:raw="Returns an I/O stream opened in a specified &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt;.">傳回以指定之 <see cref="T:System.IO.FileMode" /> 開啟的 I/O 資料流。</summary>
      <param name="mode" vsli:raw="The file mode in which to open the stream.">用來開啟資料流的檔案模式。</param>
      <returns vsli:raw="The stream opened in the specified file &lt;paramref name=&quot;mode&quot; /&gt;.">以指定之檔案 <paramref name="mode" />. 開啟的資料流。</returns>
    </member>
    <member name="M:System.IO.Packaging.StreamInfo.GetStream(System.IO.FileMode,System.IO.FileAccess)">
      <summary vsli:raw="Returns an I/O stream opened in a specified &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt; and with a given &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt;.">傳回以指定之 <see cref="T:System.IO.FileMode" /> 和指定之<see cref="T:System.IO.FileAccess" /> 開啟的 I/O 資料流。</summary>
      <param name="mode" vsli:raw="The file mode in which to open the stream.">用來開啟資料流的檔案模式。</param>
      <param name="access" vsli:raw="The file access mode in which to read or write to the stream.">用來讀取或寫入至資料流的檔案存取模式。</param>
      <returns vsli:raw="The I/O stream opened in the specified &lt;see cref=&quot;T:System.IO.FileMode&quot; /&gt; and with a given &lt;see cref=&quot;T:System.IO.FileAccess&quot; /&gt;.">以指定之 <see cref="T:System.IO.FileMode" /> 和指定之 <see cref="T:System.IO.FileAccess" /> 開啟的 I/O 資料流。</returns>
    </member>
    <member name="P:System.IO.Packaging.StreamInfo.Name">
      <summary vsli:raw="Gets the name of the stream.">取得資料流的名稱。</summary>
      <returns vsli:raw="The name of this stream.">資料流的名稱。</returns>
    </member>
    <member name="T:System.IO.Packaging.TargetMode">
      <summary>指定 <see cref="T:System.IO.Packaging.PackageRelationship" /> 的目標在 <see cref="T:System.IO.Packaging.Package" /> 內部或外部。</summary>
    </member>
    <member name="F:System.IO.Packaging.TargetMode.External">
      <summary>關聯性會參考套件外部的資源。</summary>
    </member>
    <member name="F:System.IO.Packaging.TargetMode.Internal">
      <summary>關聯性所參考的部分位在套件內部。</summary>
    </member>
    <member name="T:System.IO.Packaging.VerifyResult">
      <summary vsli:raw="Specifies the result of a certificate or signature verification.">指定憑證或簽章驗證的結果。</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.CertificateRequired">
      <summary vsli:raw="The X.509 certificate is not available to verify the signature.">X.509 憑證無法用來驗證簽章。</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.InvalidCertificate">
      <summary vsli:raw="The X.509 certificate is not valid.">X.509 憑證無效。</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.InvalidSignature">
      <summary vsli:raw="The signature is not valid.">簽章無效。</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.NotSigned">
      <summary vsli:raw="The specified package or part has no signature.">指定的封裝或組件沒有簽章。</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.ReferenceNotFound">
      <summary vsli:raw="A reference relationship to the signature was not found.">找不到簽章的參考關聯性。</summary>
    </member>
    <member name="F:System.IO.Packaging.VerifyResult.Success">
      <summary vsli:raw="The verification was successful.">驗證成功。</summary>
    </member>
    <member name="T:System.IO.Packaging.ZipPackage">
      <summary>實作抽象 <see cref="T:System.IO.Packaging.Package" /> 基底類別的衍生子類別，<see cref="T:System.IO.Packaging.ZipPackage" /> 類別使用 ZIP 封存檔作為容器存放區。 這個類別無法被繼承。</summary>
    </member>
    <member name="T:System.IO.Packaging.ZipPackagePart">
      <summary>表示儲存於 <see cref="T:System.IO.Packaging.ZipPackage" /> 中的一部分。</summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermission">
      <summary>
        <see cref="T:System.Security.Permissions.MediaPermission" /> 描述一組安全性權限，控制在部分信任的 Windows Presentation Foundation (WPF) 應用程式中使用音訊、影像和視訊媒體。</summary>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor">
      <summary>初始化 <see cref="T:System.Security.Permissions.MediaPermission" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio)">
      <summary>指定音訊權限等級，初始化 <see cref="T:System.Security.Permissions.MediaPermission" /> 類別的新執行個體。</summary>
      <param name="permissionAudio">
        <see cref="T:System.Security.Permissions.MediaPermissionAudio" /> 的列舉值。</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio,System.Security.Permissions.MediaPermissionVideo,System.Security.Permissions.MediaPermissionImage)">
      <summary>指定音訊、視訊和影像權限等級，初始化 <see cref="T:System.Security.Permissions.MediaPermission" /> 類別的新執行個體。</summary>
      <param name="permissionAudio">
        <see cref="T:System.Security.Permissions.MediaPermissionAudio" /> 的列舉值。</param>
      <param name="permissionVideo">
        <see cref="T:System.Security.Permissions.MediaPermissionVideo" /> 的列舉值。</param>
      <param name="permissionImage">
        <see cref="T:System.Security.Permissions.MediaPermissionImage" /> 的列舉值。</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionImage)">
      <summary>指定映像權限等級，以初始化 <see cref="T:System.Security.Permissions.MediaPermission" /> 類別的新執行個體。</summary>
      <param name="permissionImage">
        <see cref="T:System.Security.Permissions.MediaPermissionImage" /> 的列舉值。</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionVideo)">
      <summary>指定視訊權限等級，以初始化 <see cref="T:System.Security.Permissions.MediaPermission" /> 類別的新執行個體。</summary>
      <param name="permissionVideo">
        <see cref="T:System.Security.Permissions.MediaPermissionVideo" /> 的列舉值。</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>指定權限狀態，以初始化 <see cref="T:System.Security.Permissions.MediaPermission" /> 類別的新執行個體。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 的列舉值。</param>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Audio">
      <summary>取得目前音訊使用權限等級的值。</summary>
      <returns>音訊權限等級。</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Copy">
      <summary>建立並傳回目前權限的相同複本。</summary>
      <returns>目前權限的複本。</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.FromXml(System.Security.SecurityElement)">
      <summary>透過 XML 編碼，重新建構具有指定狀態的權限。</summary>
      <param name="securityElement">用來重新建構權限的 XML 編碼。</param>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Image">
      <summary>取得目前影像使用權限層級的值。</summary>
      <returns>影像的權限層級。</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Intersect(System.Security.IPermission)">
      <summary>建立並傳回目前權限與指定權限交集的權限。</summary>
      <param name="target">要與目前權限產生交集的權限。 必須與目前權限屬於相同的類型。</param>
      <returns>兩個使用權限的交集為描述它們都共同描述之狀態的使用權限。 只有通過這兩個原始權限的需求才對於交集權限有效。</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>判斷目前權限是否為指定權限的子集。</summary>
      <param name="target">要測試子集關聯性的權限。 這個權限必須與目前權限屬於相同的類型。</param>
      <returns>如果目前權限是指定權限的子集，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.IsUnrestricted">
      <summary>傳回值，指出目前的權限是否不受限制。</summary>
      <returns>如果音訊、影像和視訊的權限全都不受限制，則為<see langword="true" /> ；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.ToXml">
      <summary>建立權限和其目前狀態的 XML 編碼方式。</summary>
      <returns>權限的 XML 編碼方式，包含所有狀態資訊。</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Union(System.Security.IPermission)">
      <summary>建立目前權限與指定權限聯集的權限。</summary>
      <param name="target">要與目前權限結合的權限， 必須與目前權限屬於相同的類型。</param>
      <returns>代表目前權限與指定權限聯集的新權限。</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Video">
      <summary>取得目前視訊使用權限等級的值。</summary>
      <returns>媒體使用權限等級。</returns>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionAttribute">
      <summary>允許將 <see cref="T:System.Security.Permissions.MediaPermission" /> 的安全性動作套用至使用宣告式安全性的程式碼。</summary>
    </member>
    <member name="M:System.Security.Permissions.MediaPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>初始化 <see cref="T:System.Security.Permissions.MediaPermissionAttribute" /> 的新執行個體。</summary>
      <param name="action">其中一個 <see cref="T:System.Security.Permissions.SecurityAction" /> 值。</param>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Audio">
      <summary>取得或設定 <see cref="T:System.Security.Permissions.MediaPermissionAttribute" /> 的音訊權限等級。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.MediaPermissionAudio" /> 的狀態。</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermissionAttribute.CreatePermission">
      <summary>建立及傳回新的 <see cref="T:System.Security.Permissions.MediaPermission" />。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.MediaPermission" />，會對應至這個屬性。</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Image">
      <summary>取得或設定 <see cref="T:System.Security.Permissions.MediaPermissionAttribute" /> 的影像權限等級。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.MediaPermissionImage" /> 的狀態。</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Video">
      <summary>取得或設定 <see cref="T:System.Security.Permissions.MediaPermissionAttribute" /> 的影像權限等級。</summary>
      <returns>
        <see cref="T:System.Security.Permissions.MediaPermissionVideo" /> 的狀態。</returns>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionAudio">
      <summary>指定音訊的使用權限等級。</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.AllAudio">
      <summary>允許不受限制之音訊播放的使用權限。</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.NoAudio">
      <summary>拒絕所有音訊播放的使用權限。</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.SafeAudio">
      <summary>允許安全、有限音訊播放的使用權限，其中包括拒絕串流存取影像檔。</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.SiteOfOriginAudio">
      <summary>針對位於應用程式之來源網站的檔案，才會允許播放音訊的使用權限。</summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionImage">
      <summary>指定影像的使用權限等級。</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.AllImage">
      <summary>允許不受限制之影像顯示的使用權限。</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.NoImage">
      <summary>拒絕所有影像顯示的使用權限。</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.SafeImage">
      <summary>允許安全、有限影像顯示的使用權限，其中包括拒絕串流存取影像檔。</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.SiteOfOriginImage">
      <summary>針對位於應用程式來源網站的影像，才會允許顯示的使用權限。</summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionVideo">
      <summary>指定視訊的使用權限等級。</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.AllVideo">
      <summary>允許不受限制之視訊播放的使用權限。</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.NoVideo">
      <summary>拒絕所有視訊播放的使用權限。</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.SafeVideo">
      <summary>允許安全、有限視訊播放的使用權限，其中包括拒絕串流存取影像檔。</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.SiteOfOriginVideo">
      <summary>針對位於應用程式之來源網站的檔案，才會允許播放視訊的使用權限。</summary>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermission">
      <summary>
        <see cref="T:System.Security.Permissions.WebBrowserPermission" /> 物件控制建立 WebBrowser 控制項的能力。</summary>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor">
      <summary>初始化 <see cref="T:System.Security.Permissions.WebBrowserPermission" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>指定權限狀態，以初始化 <see cref="T:System.Security.Permissions.WebBrowserPermission" /> 類別的新執行個體。</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 的列舉值。</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.WebBrowserPermissionLevel)">
      <summary>指定 Web 瀏覽器權限等級，以初始化 <see cref="T:System.Security.Permissions.WebBrowserPermission" /> 類別的新執行個體。</summary>
      <param name="webBrowserPermissionLevel">
        <see cref="T:System.Security.Permissions.WebBrowserPermissionLevel" /> 的列舉值。</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Copy">
      <summary>建立並傳回目前權限的相同複本。</summary>
      <returns>目前權限的複本。</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.FromXml(System.Security.SecurityElement)">
      <summary>透過 XML 編碼，重新建構具有指定狀態的權限。</summary>
      <param name="securityElement">用來重新建構權限的 XML 編碼。</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Intersect(System.Security.IPermission)">
      <summary>建立並傳回目前權限與指定權限交集的權限。</summary>
      <param name="target">要與目前權限產生交集的權限。 必須與目前權限屬於相同的類型。</param>
      <returns>兩個使用權限的交集為描述它們都共同描述之狀態的使用權限。 只有通過這兩個原始權限的需求才對於交集權限有效。</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>判斷目前權限是否為指定權限的子集。</summary>
      <param name="target">要測試子集關聯性的權限。 這個權限必須與目前權限屬於相同的類型。</param>
      <returns>如果目前權限是指定權限的子集，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.IsUnrestricted">
      <summary>傳回值，指出目前的權限是否不受限制。</summary>
      <returns>如果 <see cref="P:System.Security.Permissions.WebBrowserPermission.Level" /> 屬性設定為 <see cref="F:System.Security.Permissions.WebBrowserPermissionLevel.Unrestricted" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.WebBrowserPermission.Level">
      <summary>取得或設定目前 Web 瀏覽器權限層級的值。</summary>
      <returns>目前 Web 瀏覽器權限層級的值。</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.ToXml">
      <summary>建立權限和其目前狀態的 XML 編碼方式。</summary>
      <returns>權限的 XML 編碼方式，包含所有狀態資訊。</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Union(System.Security.IPermission)">
      <summary>建立目前權限與指定權限聯集的權限。</summary>
      <param name="target">要與目前權限結合的權限， 必須與目前權限屬於相同的類型。</param>
      <returns>代表目前權限與指定權限聯集的新權限。</returns>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermissionAttribute">
      <summary>允許將 <see cref="T:System.Security.Permissions.WebBrowserPermission" /> 的安全性動作套用至使用宣告式安全性的程式碼。</summary>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>使用指定的 <see cref="T:System.Security.Permissions.WebBrowserPermissionAttribute" /> 初始化 <see cref="T:System.Security.Permissions.SecurityAction" /> 類別的新執行個體。</summary>
      <param name="action">其中一個 <see cref="T:System.Security.Permissions.SecurityAction" /> 值。</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermissionAttribute.CreatePermission">
      <summary>建立並傳回 <see cref="T:System.Security.Permissions.WebBrowserPermission" /> 類別的新執行個體。</summary>
      <returns>對應安全性宣告的 <see cref="T:System.Security.Permissions.WebBrowserPermission" />。</returns>
    </member>
    <member name="P:System.Security.Permissions.WebBrowserPermissionAttribute.Level">
      <summary>取得或設定 <see cref="T:System.Security.Permissions.WebBrowserPermissionAttribute" /> 目前的 Web 瀏覽器權限層級。</summary>
      <returns>目前 Web 瀏覽器權限層級的狀態。</returns>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermissionLevel">
      <summary>指定 Web 瀏覽器的使用權限等級。</summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.None">
      <summary>無法將框架巡覽至 HTML 的 Web 瀏覽器。</summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.Safe">
      <summary>可將框架安全巡覽至 HTML，但有數項限制的 Web 瀏覽器。</summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.Unrestricted">
      <summary>可無限制地巡覽的 Web 瀏覽器。</summary>
    </member>
    <member name="T:System.Security.RightsManagement.AuthenticationType">
      <summary vsli:raw="Specifies the method of rights management authentication.">指定權限管理驗證的方法。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.AuthenticationType.Internal">
      <summary vsli:raw="Implicit authentication to any requesting user.">任何要求使用者的隱含驗證。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.AuthenticationType.Passport">
      <summary vsli:raw="Windows Live ID authentication.">Windows Live ID 驗證。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.AuthenticationType.Windows">
      <summary vsli:raw="Windows authentication in a corporate domain environment.">企業網域環境中的 Windows 驗證。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.AuthenticationType.WindowsPassport">
      <summary vsli:raw="Either Windows authentication or Windows Live ID authentication.">Windows 驗證或 Windows Live ID 驗證。</summary>
    </member>
    <member name="T:System.Security.RightsManagement.ContentGrant">
      <summary vsli:raw="Represents a right granted to a user to access information in a rights managed document.">代表授與使用者以存取權限管理文件中資訊的權限。</summary>
    </member>
    <member name="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.ContentGrant&quot; /&gt; class that grants a specified &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; a specified &lt;see cref=&quot;T:System.Security.RightsManagement.ContentRight&quot; /&gt;.">初始化 <see cref="T:System.Security.RightsManagement.ContentGrant" /> 類別的新執行個體，此類別授予指定的 <see cref="T:System.Security.RightsManagement.ContentUser" /> 一項指定的 <see cref="T:System.Security.RightsManagement.ContentRight" />。</summary>
      <param name="user" vsli:raw="The user the access right is granted to.">存取權限所授與的使用者。</param>
      <param name="right" vsli:raw="The access right that is granted.">所授與的存取權限。</param>
    </member>
    <member name="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight,System.DateTime,System.DateTime)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.ContentGrant&quot; /&gt; class that grants a specified &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; a specified &lt;see cref=&quot;T:System.Security.RightsManagement.ContentRight&quot; /&gt; for a specified &lt;see cref=&quot;T:System.DateTime&quot; /&gt; duration.">初始化 <see cref="T:System.Security.RightsManagement.ContentGrant" /> 類別的新執行個體，此類別授予指定的 <see cref="T:System.Security.RightsManagement.ContentUser" /> 一項指定的 <see cref="T:System.Security.RightsManagement.ContentRight" />，在一段指定 <see cref="T:System.DateTime" /> 期間內有效。</summary>
      <param name="user" vsli:raw="The user the access right is granted to.">存取權限所授與的使用者。</param>
      <param name="right" vsli:raw="The access right that is granted.">所授與的存取權限。</param>
      <param name="validFrom" vsli:raw="The starting date and time that the right begins.">權限生效的日期與時間。</param>
      <param name="validUntil" vsli:raw="The ending date and time that the right expires.">權限失效的結束日期與時間。</param>
    </member>
    <member name="P:System.Security.RightsManagement.ContentGrant.Right">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Security.RightsManagement.ContentRight&quot; /&gt; that is granted.">取得所授與的 <see cref="T:System.Security.RightsManagement.ContentRight" />。</summary>
      <returns vsli:raw="The access right that is granted to the &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.User&quot; /&gt;, as specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)&quot; /&gt; constructor.">授與 <see cref="P:System.Security.RightsManagement.ContentGrant.User" /> 的存取權限，如 <see cref="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)" /> 建構函式所指定。</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentGrant.User">
      <summary vsli:raw="Gets the user who is granted the access &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.Right&quot; /&gt;.">取得被授與存取 <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> 的使用者。</summary>
      <returns vsli:raw="The user that the access &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.Right&quot; /&gt; is granted to, as specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)&quot; /&gt; constructor.">存取 <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> 所授與的使用者，如 <see cref="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)" /> 建構函式所指定。</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentGrant.ValidFrom">
      <summary vsli:raw="Gets the starting date and time that the granted &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.Right&quot; /&gt; begins.">取得所授與 <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> 生效的開始日期與時間。</summary>
      <returns vsli:raw="The start date and time that the granted &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.Right&quot; /&gt; begins, or &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.&lt;see cref=&quot;F:System.DateTime.MinValue&quot;&gt;DateTime.MinValue&lt;/see&gt; if there is there is no starting limitation.">授<see cref="P:System.Security.RightsManagement.ContentGrant.Right" />與開始的開始日期和時間, 或<see cref="T:System.DateTime" />。<see cref="F:System.DateTime.MinValue" /> 如果沒有開始限制, 則為。</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentGrant.ValidUntil">
      <summary vsli:raw="Gets the ending date and time that the granted &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.Right&quot; /&gt; expires.">取得所授與 <see cref="P:System.Security.RightsManagement.ContentGrant.Right" /> 失效的結束日期與時間。</summary>
      <returns vsli:raw="The end date and time that the granted &lt;see cref=&quot;P:System.Security.RightsManagement.ContentGrant.Right&quot; /&gt; expires, or &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.&lt;see cref=&quot;F:System.DateTime.MaxValue&quot;&gt;DateTime.MaxValue&lt;/see&gt; if there is no ending limitation.">授<see cref="P:System.Security.RightsManagement.ContentGrant.Right" />與到期的結束日期和時間, 或<see cref="T:System.DateTime" />。<see cref="F:System.DateTime.MaxValue" /> 如果沒有結束限制, 則為。</returns>
    </member>
    <member name="T:System.Security.RightsManagement.ContentRight">
      <summary vsli:raw="Specifies rights that can be granted to users for accessing content in a rights managed document.">指定可授與使用者以存取受版權管理文件內容的權限。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.DocumentEdit">
      <summary vsli:raw="The user can edit the document that contains the protected content.">使用者可以編輯包含受保護內容的文件。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Edit">
      <summary vsli:raw="The user can edit and encrypt the protected content.">使用者可以編輯和加密受保護的內容。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Export">
      <summary vsli:raw="The user can export the protected content.">使用者可以匯出受保護的內容。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Extract">
      <summary vsli:raw="The user can extract (copy and paste) the protected content.">使用者可以擷取 (複製和貼上) 受保護的內容。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Forward">
      <summary vsli:raw="The user can forward the protected content to another user.">使用者可以將受保護的內容轉寄給另一位使用者。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.ObjectModel">
      <summary vsli:raw="The user can control programmed access to the protected content.">使用者可以控制受保護內容的程式化存取權。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Owner">
      <summary vsli:raw="The user is the content owner.  The owner can edit and encrypt the protected content, and decrypt the signed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt;.">使用者是內容擁有者。  擁有人可以編輯和加密受保護的內容，以及解密已簽署的 <see cref="T:System.Security.RightsManagement.PublishLicense" />。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Print">
      <summary vsli:raw="The user can print the protected content.">使用者可以列印受保護的內容。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Reply">
      <summary vsli:raw="The user can reply to the sender of the protected content.">使用者可以回覆受保護內容的寄件者。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.ReplyAll">
      <summary vsli:raw="The user can &quot;reply all&quot; to recipients of the protected content.">使用者可以對受保護內容的收件者，執行「全部回覆」功能。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.Sign">
      <summary vsli:raw="The user can digitally sign the protected content.">使用者可以對受保護的內容進行數位簽署。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.View">
      <summary vsli:raw="The user can view the protected content.">使用者可以檢視受保護的內容。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.ContentRight.ViewRightsData">
      <summary vsli:raw="The user can decrypt and view the rights specified in the signed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt;.">使用者可以解密和檢視已簽署之 <see cref="T:System.Security.RightsManagement.PublishLicense" /> 中所指定的權限。</summary>
    </member>
    <member name="T:System.Security.RightsManagement.ContentUser">
      <summary vsli:raw="Represents a user or user-group for granting access to rights managed content.">代表要授與版權管理內容存取權的使用者或使用者群組。</summary>
    </member>
    <member name="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; class.">初始化 <see cref="T:System.Security.RightsManagement.ContentUser" /> 類別的新執行個體。</summary>
      <param name="name" vsli:raw="The user or group name.">使用者或群組名稱。</param>
      <param name="authenticationType" vsli:raw="The method for authentication.">驗證方法。</param>
    </member>
    <member name="P:System.Security.RightsManagement.ContentUser.AnyoneUser">
      <summary vsli:raw="Gets an instance of the &quot;Anyone&quot; &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; persona.">取得 "Anyone" <see cref="T:System.Security.RightsManagement.ContentUser" /> 角色的執行個體。</summary>
      <returns vsli:raw="An instance of the &quot;Anyone&quot; &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; persona.">"Anyone" <see cref="T:System.Security.RightsManagement.ContentUser" /> 角色的執行個體。</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentUser.AuthenticationType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Security.RightsManagement.AuthenticationType&quot; /&gt; specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)&quot; /&gt; constructor.">取得指定給 <see cref="T:System.Security.RightsManagement.AuthenticationType" /> 建構函式的 <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.AuthenticationType&quot; /&gt; specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)&quot; /&gt; constructor.">指定給 <see cref="T:System.Security.RightsManagement.AuthenticationType" /> 建構函式的 <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" />。</returns>
    </member>
    <member name="M:System.Security.RightsManagement.ContentUser.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; is equivalent to another given instance.">傳回值，指出這個 <see cref="T:System.Security.RightsManagement.ContentUser" /> 是否相當於另一個特定執行個體。</summary>
      <param name="obj" vsli:raw="The user instance to compare for equality.">要比較是否相等的使用者執行個體。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;P:System.Security.RightsManagement.ContentUser.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.ContentUser.AuthenticationType&quot; /&gt; are the same for both this user and the given user; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果此使用者與指定使用者的 <see cref="P:System.Security.RightsManagement.ContentUser.Name" /> 和 <see cref="P:System.Security.RightsManagement.ContentUser.AuthenticationType" /> 相同，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.RightsManagement.ContentUser.GetHashCode">
      <summary vsli:raw="Returns a computed hash code based on the user &lt;see cref=&quot;P:System.Security.RightsManagement.ContentUser.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.ContentUser.AuthenticationType&quot; /&gt;.">傳回根據使用者 <see cref="P:System.Security.RightsManagement.ContentUser.Name" /> 和 <see cref="P:System.Security.RightsManagement.ContentUser.AuthenticationType" /> 計算出的雜湊程式碼。</summary>
      <returns vsli:raw="A hash code computed from the user &lt;see cref=&quot;P:System.Security.RightsManagement.ContentUser.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.ContentUser.AuthenticationType&quot; /&gt;.">從使用者 <see cref="P:System.Security.RightsManagement.ContentUser.Name" /> 和 <see cref="P:System.Security.RightsManagement.ContentUser.AuthenticationType" /> 計算出的雜湊程式碼。</returns>
    </member>
    <member name="M:System.Security.RightsManagement.ContentUser.IsAuthenticated">
      <summary vsli:raw="Returns a value that indicates whether the user is currently authenticated.">傳回值，指出使用者目前是否已驗證。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the user is currently authenticated; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  The default is &lt;see langword=&quot;false&quot; /&gt; until authenticated.">如果使用者目前已驗證則為 <see langword="true" />，否則為 <see langword="false" />。  域設值為 <see langword="false" />，直到完成驗證為止。</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentUser.Name">
      <summary vsli:raw="Gets the user or group name specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)&quot; /&gt; constructor.">取得指定給 <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" /> 建構函式的使用者或群組名稱。</summary>
      <returns vsli:raw="The user or group name specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)&quot; /&gt; constructor.">指定給 <see cref="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)" /> 建構函式的使用者或群組名稱。</returns>
    </member>
    <member name="P:System.Security.RightsManagement.ContentUser.OwnerUser">
      <summary vsli:raw="Gets an instance of the &quot;Owner&quot; &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; persona.">取得 "Owner" <see cref="T:System.Security.RightsManagement.ContentUser" /> 角色的執行個體。</summary>
      <returns vsli:raw="An instance of the &quot;Owner&quot; &lt;see cref=&quot;T:System.Security.RightsManagement.ContentUser&quot; /&gt; persona.">"Owner" <see cref="T:System.Security.RightsManagement.ContentUser" /> 角色的執行個體。</returns>
    </member>
    <member name="T:System.Security.RightsManagement.CryptoProvider">
      <summary vsli:raw="Provides digital rights management services for encrypting and decrypting protected content.">提供數位版權管理服務，以加密或解密受保護的內容。</summary>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.BlockSize">
      <summary vsli:raw="Gets the cipher block size, in bytes.">取得密碼區塊大小 (以位元組為單位)。</summary>
      <returns vsli:raw="The cipher block size, in bytes.  The default block size for Advanced Encryption Standard (AES) is 8.">密碼區塊大小 (以位元組為單位)。  進階加密標準 (AES) 的預設區塊大小為8。</returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.BoundGrants">
      <summary vsli:raw="Gets a collection listing the rights that passed verification and that are granted to the user.">取得集合，列出通過驗證且授與使用者的權限清單。</summary>
      <returns vsli:raw="A collection enumerating the rights that passed verification and that are granted to the user.">集合，其中列舉通過驗證且授與使用者的權限。</returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.CanDecrypt">
      <summary vsli:raw="Gets a value that indicates whether the user has rights to decrypt.">取得值，指出使用者是否具有解密權限。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; grants the user rights to decrypt; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />如果授與使用者要解密的許可權, 則為<see langword="false" />, 否則為。 <see cref="T:System.Security.RightsManagement.UseLicense" /></returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.CanEncrypt">
      <summary vsli:raw="Gets a value that indicates whether the user has rights to encrypt.">取得值，指出使用者是否具有加密權限。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; grants the user rights to encrypt; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />如果授與使用者要加密的許可權, 則為<see langword="false" />, 否則為。 <see cref="T:System.Security.RightsManagement.UseLicense" /></returns>
    </member>
    <member name="P:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks">
      <summary vsli:raw="Gets a value that indicates whether &lt;see cref=&quot;M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])&quot; /&gt; and &lt;see cref=&quot;M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])&quot; /&gt; can accept buffers that are different block sizes in length.">取得值，指出 <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> 和 <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> 是否可接受區塊長度大小不同的緩衝區。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the buffer passed to &lt;see cref=&quot;M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])&quot; /&gt; can be a different length from the buffer passed to &lt;see cref=&quot;M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt; if the buffers passed to &lt;see cref=&quot;M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])&quot; /&gt; and &lt;see cref=&quot;M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])&quot; /&gt; must be the exact same length.  For AES the default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />如果<see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" />傳遞至的緩衝區可以與傳遞至<see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />的緩衝區長度不同, 則為; 如果<see langword="false" />傳遞至<see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" />且<see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />的緩衝區必須是完全相同的長度, 則為。  若為 AES, 預設<see langword="true" />值為。</returns>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])">
      <summary vsli:raw="Decrypts cipher text to clear text.">將密碼文字解密為純文字。</summary>
      <param name="cryptoText" vsli:raw="The cipher text to decrypt.">要解密的密碼文字。</param>
      <returns vsli:raw="The decrypted clear text of &lt;paramref name=&quot;cryptoText&quot; /&gt;.">
        <paramref name="cryptoText" /> 解密後的純文字。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;cipherText&quot; /&gt; is null.">
        <paramref name="cipherText" /> 為 null。</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException" vsli:raw="Decryption right not granted.">未授與解密權限。</exception>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.Security.RightsManagement.CryptoProvider&quot; /&gt;.">釋放 <see cref="T:System.Security.RightsManagement.CryptoProvider" /> 所使用的所有資源。</summary>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Security.RightsManagement.CryptoProvider&quot; /&gt; and optionally releases the managed resources.">釋放 <see cref="T:System.Security.RightsManagement.CryptoProvider" /> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])">
      <summary vsli:raw="Encrypts clear text to cipher text.">將純文字加密為加密文字。</summary>
      <param name="clearText" vsli:raw="The clear text content to encrypt.">要加密的純文字內容。</param>
      <returns vsli:raw="Encrypted cipher text of the given &lt;paramref name=&quot;clearText&quot; /&gt;.">指定 <paramref name="clearText" /> 之已加密的加密文字。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;clearText&quot; /&gt; is null.">
        <paramref name="clearText" /> 為 null。</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException" vsli:raw="Encryption is not permitted.">不允許加密。</exception>
    </member>
    <member name="M:System.Security.RightsManagement.CryptoProvider.Finalize">
      <summary vsli:raw="Frees resources and performs internal cleanup before the instance is reclaimed by garbage collection.">釋出資源並執行內部清除後，記憶體回收才能回收執行個體。</summary>
    </member>
    <member name="T:System.Security.RightsManagement.LocalizedNameDescriptionPair">
      <summary vsli:raw="Represents an immutable (read-only) pair of &quot;Name&quot; and &quot;Description&quot; strings.">代表「名稱」和「描述」這組不可變 (唯讀) 字串。</summary>
    </member>
    <member name="M:System.Security.RightsManagement.LocalizedNameDescriptionPair.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.LocalizedNameDescriptionPair&quot; /&gt; class.">初始化 <see cref="T:System.Security.RightsManagement.LocalizedNameDescriptionPair" /> 類別的新執行個體。</summary>
      <param name="name" vsli:raw="The value for the locale &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name&quot; /&gt; property.">地區設定 <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> 屬性的值。</param>
      <param name="description" vsli:raw="The value for the locale &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description&quot; /&gt; property.">地區設定 <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> 屬性的值。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Either the &lt;paramref name=&quot;name&quot; /&gt; parameter or &lt;paramref name=&quot;description&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> 參數或 <paramref name="description" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description">
      <summary vsli:raw="Gets the locale description.">取得地區設定的描述。</summary>
      <returns vsli:raw="The locale description.">地區設定的描述。</returns>
    </member>
    <member name="M:System.Security.RightsManagement.LocalizedNameDescriptionPair.Equals(System.Object)">
      <summary vsli:raw="Indicates whether the &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description&quot; /&gt; properties of a given object match those of this &lt;see cref=&quot;T:System.Security.RightsManagement.LocalizedNameDescriptionPair&quot; /&gt;.">指出指定物件的 <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> 和 <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> 屬性是否符合此 <see cref="T:System.Security.RightsManagement.LocalizedNameDescriptionPair" /> 的屬性。</summary>
      <param name="obj" vsli:raw="The object to compare the &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description&quot; /&gt; properties of.">要比較其 <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> 和 <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> 屬性的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description&quot; /&gt; properties of the given object match those of this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定物件的 <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> 和 <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> 屬性符合此執行個體的屬性，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.RightsManagement.LocalizedNameDescriptionPair.GetHashCode">
      <summary vsli:raw="Gets a computed hash code based on the &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description&quot; /&gt; properties.">取得計算的雜湊程式碼，它是根據 <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> 和 <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> 屬性。</summary>
      <returns vsli:raw="A computed hash code based on the &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description&quot; /&gt; properties of this &lt;see cref=&quot;T:System.Security.RightsManagement.LocalizedNameDescriptionPair&quot; /&gt;.">計算的雜湊程式碼，它是根據此 <see cref="T:System.Security.RightsManagement.LocalizedNameDescriptionPair" /> 的 <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name" /> 和 <see cref="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Description" /> 屬性。</returns>
    </member>
    <member name="P:System.Security.RightsManagement.LocalizedNameDescriptionPair.Name">
      <summary vsli:raw="Gets the locale name.">取得地區設定名稱。</summary>
      <returns vsli:raw="The locale name.">地區設定名稱。</returns>
    </member>
    <member name="T:System.Security.RightsManagement.PublishLicense">
      <summary vsli:raw="Represents a signed rights managed publish license.">代表帶正負號的版權管理發行授權。</summary>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; class from a specified serialized and signed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt;.">從已序列化且已簽署的指定 <see cref="T:System.Security.RightsManagement.PublishLicense" /> 初始化 <see cref="T:System.Security.RightsManagement.PublishLicense" /> 類別的新執行個體 (Instance)。</summary>
      <param name="signedPublishLicense" vsli:raw="A signed and serialized publish license.">已簽署及序列化的發行授權。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;signedPublishLicense&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="signedPublishLicense" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException" vsli:raw="The license is invalid.">授權無效。</exception>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.AcquireUseLicense(System.Security.RightsManagement.SecureEnvironment)">
      <summary vsli:raw="Attempts to acquire a &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for a user or user group in a specified &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt;.">嘗試取得適用於 <see cref="T:System.Security.RightsManagement.UseLicense" /> 中使用者或使用者群組的 <see cref="T:System.Security.RightsManagement.SecureEnvironment" />。</summary>
      <param name="secureEnvironment" vsli:raw="The secure environment for license activation and binding.">授權啟用與繫結的安全環境。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for a user or user group in the specified &lt;paramref name=&quot;secureEnvironment&quot; /&gt;.">適用於指定 <paramref name="secureEnvironment" /> 中使用者或使用者群組的 <see cref="T:System.Security.RightsManagement.UseLicense" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;secureEnvironment&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="secureEnvironment" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException" vsli:raw="The authentication failed.">驗證失敗。</exception>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI(System.Security.RightsManagement.SecureEnvironment)">
      <summary vsli:raw="Attempts to acquire a &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for a user or user group in a specified &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt;.">嘗試取得適用於 <see cref="T:System.Security.RightsManagement.UseLicense" /> 中使用者或使用者群組的 <see cref="T:System.Security.RightsManagement.SecureEnvironment" />。</summary>
      <param name="secureEnvironment" vsli:raw="The secure environment for license activation and binding.">授權啟用與繫結的安全環境。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for a user or user group in the specified &lt;paramref name=&quot;secureEnvironment&quot; /&gt;.">適用於指定 <paramref name="secureEnvironment" /> 中使用者或使用者群組的 <see cref="T:System.Security.RightsManagement.UseLicense" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;secureEnvironment&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="secureEnvironment" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException" vsli:raw="The authentication failed.">驗證失敗。</exception>
    </member>
    <member name="P:System.Security.RightsManagement.PublishLicense.ContentId">
      <summary vsli:raw="Gets the publisher-created content identifier.">取得發行者建立的內容識別項。</summary>
      <returns vsli:raw="The publisher-created content identifier.">發行者建立的內容識別項。</returns>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense(System.Security.RightsManagement.CryptoProvider)">
      <summary vsli:raw="Returns a decrypted &lt;see cref=&quot;T:System.Security.RightsManagement.UnsignedPublishLicense&quot; /&gt; version of this signed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt;.">傳回這個已簽署 <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" /> 的已解密 <see cref="T:System.Security.RightsManagement.PublishLicense" /> 版本。</summary>
      <param name="cryptoProvider" vsli:raw="The rights management service to use for decrypting the license.">用於解密授權的版權管理服務。</param>
      <returns vsli:raw="A decrypted, unsigned version of this license.">這個授權的已解密未簽署版本。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;cryptoProvider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="cryptoProvider" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Security.RightsManagement.PublishLicense.ReferralInfoName">
      <summary vsli:raw="Gets the contact name for the author or publisher of the content.">取得內容作者或發行者的連絡人姓名。</summary>
      <returns vsli:raw="The contact name for the author or publisher of the content.">內容作者或發行者的連絡人姓名。</returns>
    </member>
    <member name="P:System.Security.RightsManagement.PublishLicense.ReferralInfoUri">
      <summary vsli:raw="Gets the contact URI for the author or publisher of the content.">取得內容作者或發行者的連絡 URI。</summary>
      <returns vsli:raw="The contact uniform resource identifier (URI) for the author or publisher of the content.">內容作者或發行者的連絡統一資源識別項 (URI)。</returns>
    </member>
    <member name="M:System.Security.RightsManagement.PublishLicense.ToString">
      <summary vsli:raw="Returns the serialized XrML string that was used to create this license.">傳回之前用來建立此授權的序列化 XrML 字串。</summary>
      <returns vsli:raw="The serialized Extensible Rights Markup Language (XrML) string that was used to create this license.">之前用來建立此授權的序列化 可延伸版權標記語言 (XrML) 字串。</returns>
    </member>
    <member name="P:System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl">
      <summary vsli:raw="Gets the URI to use for acquiring a &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt;.">取得 URI，以用來取得 <see cref="T:System.Security.RightsManagement.UseLicense" />。</summary>
      <returns vsli:raw="The URI to use for acquiring a &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt;.">URI，可用來取得 <see cref="T:System.Security.RightsManagement.UseLicense" />。</returns>
    </member>
    <member name="T:System.Security.RightsManagement.RightsManagementException">
      <summary vsli:raw="Represents an error condition when a rights management operation cannot complete successfully.">表示無法順利完成版權管理作業時的錯誤情況。</summary>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class.">初始化 <see cref="T:System.Security.RightsManagement.RightsManagementException" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class and sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; store with information about the exception.">初始化 <see cref="T:System.Security.RightsManagement.RightsManagementException" /> 類別的新執行個體，並設定 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 保存有關例外狀況的資訊。</summary>
      <param name="info" vsli:raw="The object that holds the serialized data.">存放序列化資料的物件。</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">關於來源或目的端的內容資訊。</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class with a given &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementFailureCode&quot; /&gt;.">使用指定的 <see cref="T:System.Security.RightsManagement.RightsManagementException" />，初始化 <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" /> 類別的新執行個體。</summary>
      <param name="failureCode" vsli:raw="The failure code for the error.">錯誤的失敗代碼。</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class with a given &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementFailureCode&quot; /&gt; and &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt;.">使用指定的 <see cref="T:System.Security.RightsManagement.RightsManagementException" /> 和 <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" /> 初始化 <see cref="P:System.Exception.InnerException" /> 類別的新執行個體。</summary>
      <param name="failureCode" vsli:raw="The failure code for the error.">錯誤的失敗代碼。</param>
      <param name="innerException" vsli:raw="The exception instance that caused the error.">造成錯誤的例外狀況執行個體。</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class with a given &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementFailureCode&quot; /&gt; and &lt;see cref=&quot;P:System.Exception.Message&quot; /&gt;.">使用指定的 <see cref="T:System.Security.RightsManagement.RightsManagementException" /> 和 <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" /> 初始化 <see cref="P:System.Exception.Message" /> 類別的新執行個體。</summary>
      <param name="failureCode" vsli:raw="The failure code for the error.">錯誤的失敗代碼。</param>
      <param name="message" vsli:raw="A message that describes the error.">描述錯誤的訊息。</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Security.RightsManagement.RightsManagementFailureCode,System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class with a given &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementFailureCode&quot; /&gt;, &lt;see cref=&quot;P:System.Exception.Message&quot; /&gt; and &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt;.">使用指定的 <see cref="T:System.Security.RightsManagement.RightsManagementException" />、<see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" /> 和 <see cref="P:System.Exception.Message" /> 初始化 <see cref="P:System.Exception.InnerException" /> 類別的新執行個體。</summary>
      <param name="failureCode" vsli:raw="The failure code for the error.">錯誤的失敗代碼。</param>
      <param name="message" vsli:raw="A message that describes the error.">描述錯誤的訊息。</param>
      <param name="innerException" vsli:raw="The exception instance that caused the error.">造成錯誤的例外狀況執行個體。</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class with a given message.">初始化具有指定訊息之 <see cref="T:System.Security.RightsManagement.RightsManagementException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="A message that describes the error.">描述錯誤的訊息。</param>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementException&quot; /&gt; class with a given &lt;see cref=&quot;P:System.Exception.Message&quot; /&gt; and &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt;.">使用指定的 <see cref="T:System.Security.RightsManagement.RightsManagementException" /> 和 <see cref="P:System.Exception.Message" /> 初始化 <see cref="P:System.Exception.InnerException" /> 類別的新執行個體。</summary>
      <param name="message" vsli:raw="A message that describes the error.">描述錯誤的訊息。</param>
      <param name="innerException" vsli:raw="The exception instance that caused this exception.">造成此例外狀況的例外狀況執行個體。</param>
    </member>
    <member name="P:System.Security.RightsManagement.RightsManagementException.FailureCode">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Security.RightsManagement.RightsManagementFailureCode&quot; /&gt; for the error.">取得錯誤的 <see cref="T:System.Security.RightsManagement.RightsManagementFailureCode" />。</summary>
      <returns vsli:raw="The failure code for the error.">錯誤的失敗代碼。</returns>
    </member>
    <member name="M:System.Security.RightsManagement.RightsManagementException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; store with the parameter name and information about the exception.">設定 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 保存有關例外狀況的參數名稱和資訊。</summary>
      <param name="info" vsli:raw="The object that holds the serialized data.">存放序列化資料的物件。</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">關於來源或目的端的內容資訊。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;info&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="T:System.Security.RightsManagement.RightsManagementFailureCode">
      <summary vsli:raw="Specifies error conditions that can occur when performing a rights management operation.">具體說明執行權限管理作業時可能發生的錯誤情況。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.Aborted">
      <summary vsli:raw="Asynchronous operation canceled, or a non-recoverable error has occurred.">非同步作業已取消，或發生無法復原的錯誤。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ActivationFailed">
      <summary vsli:raw="License activation failed; rights management services are not properly configured.">授權啟用失敗；未正確設定權限管理服務。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.AdEntryNotFound">
      <summary vsli:raw="The current user was not found in the Active Directory (AD) for certification under Windows authentication.">在 Active Directory (AD) 中找不到 Windows 驗證下進行認證的目前使用者。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.AlreadyInProgress">
      <summary vsli:raw="The requested operation is already in progress.">要求的作業已在進行中。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.AuthenticationFailed">
      <summary vsli:raw="Possible authentication error (HTTP error 401) returned by an Internet request. Or, the current user does not have valid domain credentials in a silent user activation attempt. Or, the certification server in silent user activation is not in the local intranet or trusted sites zone.">網際網路要求傳回可能的驗證錯誤 (HTTP 錯誤 401)。 或者，在無訊息的使用者啟用嘗試中，目前的使用者不具有有效的網域認證。 或者，無訊息的使用者啟用中的憑證伺服器不在近端內部網路或信任的網站區域。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BadGetInfoQuery">
      <summary vsli:raw="An invalid constant was passed.">傳遞了無效的常數。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindAccessPrincipalNotEnabling">
      <summary vsli:raw="The access condition is not matched to the enabling principal that is handed into the bind.">存取條件不符合交給繫結的啟用主體。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindAccessUnsatisfied">
      <summary vsli:raw="The current user does not satisfy the conditions defined in the End Use License (EUL).">目前的使用者不符合使用授權 (EUL) 中定義的條件。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindContentNotInEndUseLicense">
      <summary vsli:raw="The specified resource is not contained in any WORK node of the license.">指定的資源未包含在授權的任何 WORK 節點中。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindIndicatedPrincipalMissing">
      <summary vsli:raw="The enabling principal does not match the issued principal of the End Use License (EUL).">啟用主體不符合使用授權 (EUL) 的發行主體。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindIntervalTimeViolated">
      <summary vsli:raw="The defined time period for the protected content has expired; access is no longer permitted.">為受保護內容定義的時間週期已過期；不再允許存取。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindMachineNotFoundInGroupIdentity">
      <summary vsli:raw="The current machine is not defined within the rights managed group identity.">目前的電腦未定義於版權管理的群組識別身分內。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindNoApplicableRevocationList">
      <summary vsli:raw="The current user does not have rights to access the protected content.">目前使用者沒有權限可存取受保護的內容。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindNoSatisfiedRightsGroup">
      <summary vsli:raw="The specified rights group is not contained in the End Use License (EUL).">指定的權限群組未包含在使用授權 (EUL) 中。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindPolicyViolation">
      <summary vsli:raw="The current user does not have rights to access the protected content.">目前使用者沒有權限可存取受保護的內容。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevocationListStale">
      <summary vsli:raw="The license requires that a new revocation list must be acquired.">授權要求必須取得新的撤銷清單。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedIssuer">
      <summary vsli:raw="The current user does not have rights to access the protected content.">目前使用者沒有權限可存取受保護的內容。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedLicense">
      <summary vsli:raw="The current user does not have rights to access the protected content.">目前使用者沒有權限可存取受保護的內容。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedModule">
      <summary vsli:raw="Rights management services are not properly configured.">未正確設定權限管理服務。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedPrincipal">
      <summary vsli:raw="The current user does not have rights to access the protected content.">目前使用者沒有權限可存取受保護的內容。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindRevokedResource">
      <summary vsli:raw="The current user does not have rights to access the protected content.">目前使用者沒有權限可存取受保護的內容。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindSpecifiedWorkMissing">
      <summary vsli:raw="The End Use License (EUL) contains no WORK node.">使用授權 (EUL) 未包含 WORK 節點。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BindValidityTimeViolated">
      <summary vsli:raw="The defined time period for the protected content has expired; access is no longer permitted.">為受保護內容定義的時間週期已過期；不再允許存取。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.BrokenCertChain">
      <summary vsli:raw="The rights management certificate chain is broken.">版權管理憑證鏈結已中斷。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ClockRollbackDetected">
      <summary vsli:raw="Clock rollback has been detected. Protected content cannot be accessed.">發現時鐘復原。 無法存取受保護的內容。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.CryptoOperationUnsupported">
      <summary vsli:raw="A cryptographic operation that was requested is not supported. For example, passing an RMS encrypting object for decrypting purposes.">不支援要求的密碼編譯作業。 例如，傳遞 RMS 加密物件以進行解密。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.DebuggerDetected">
      <summary vsli:raw="Cannot open or publish content with restricted permissions because a debugger has been detected.">無法以限制權限開啟或發行內容，因為偵測到偵錯工具。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EmailNotVerified">
      <summary vsli:raw="The user's email address cannot be verified.">無法驗證使用者的電子郵件地址。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EnablingPrincipalFailure">
      <summary vsli:raw="The specified principal cannot be enabled.">無法啟用指定的主體</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EncryptionNotPermitted">
      <summary vsli:raw="Encryption is not permitted.">不允許加密。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EnvironmentCannotLoad">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; cannot load.">無法載入 <see cref="T:System.Security.RightsManagement.SecureEnvironment" />。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.EnvironmentNotLoaded">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; cannot load.">無法載入 <see cref="T:System.Security.RightsManagement.SecureEnvironment" />。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ExpiredOfficialIssuanceLicenseTemplate">
      <summary vsli:raw="The authorized time period defined in the issuance license template has expired; access is no longer permitted.">發佈授權範本中定義的授權時間週期已過期；不再允許存取。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.GlobalOptionAlreadySet">
      <summary vsli:raw="The option specified has already been set.">已設定指定的選項。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.GroupIdentityNotSet">
      <summary vsli:raw="A user name was not specified for the client session.">未指定用戶端工作階段的使用者名稱</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.HidCorrupted">
      <summary vsli:raw="The Hardware ID (HID) used in a machine activation attempt is incorrectly formatted. Rights management services are not properly configured.">機器啟用嘗試中使用的硬體識別碼 (HID) 格式不正確。 未正確設定權限管理服務。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.HidInvalid">
      <summary vsli:raw="The Hardware ID (HID) used in a machine activation attempt is invalid. Rights management services are not properly configured.">機器啟用嘗試中使用的硬體識別碼 (HID) 無效。 未正確設定權限管理服務。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.IdMismatch">
      <summary vsli:raw="The content ID from the license does not match the content ID the license storage session.">授權中的內容識別碼不符合授權儲存工作階段的內容識別碼</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.IncompatibleObjects">
      <summary vsli:raw="An object type passed is incompatible with this operation.">傳遞的物件型別與這項作業不相容。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InfoNotInLicense">
      <summary vsli:raw="When creating a bound license, an issuance license, not an end-use license, was specified.">建立繫結授權時指定的是發佈授權，而非使用者授權。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InfoNotPresent">
      <summary vsli:raw="Some information is missing.">遺漏某些資訊。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InstallationFailed">
      <summary vsli:raw="An installation operation failed.">安裝作業失敗。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidAlgorithmType">
      <summary vsli:raw="The algorithm type specified is invalid.">指定的演算法無效。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidClientLicensorCertificate">
      <summary vsli:raw="Rights management services are not properly configured.">未正確設定權限管理服務。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidEmail">
      <summary vsli:raw="RMS Server email address verification failed.">RMS 伺服器電子郵件地址驗證失敗。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidEncodingType">
      <summary vsli:raw="The specified encoding type is invalid.">指定的編碼類型無效。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidHandle">
      <summary vsli:raw="Either the environment or the enabling principal handle is invalid.">環境或啟用主體控制代碼無效。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidIssuanceLicenseTemplate">
      <summary vsli:raw="The Rights Management Services template contains one or more errors.">權限管理服務範本包含一或多個錯誤。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidKeyLength">
      <summary vsli:raw="The key length specified in a key/value pair is invalid.">索引鍵/值組中指定的金鑰長度無效。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidLicense">
      <summary vsli:raw="The license structure in one of the certificates is invalid.">其中一個憑證中的授權結構無效。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidLicenseSignature">
      <summary vsli:raw="Rights management signed digital certificate cannot be validated. (The signed certificate may have been tampered.)">無法驗證權限管理簽署的數位憑證。 (簽署的憑證可能已遭竄改)。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidLockboxPath">
      <summary vsli:raw="Rights management services are not properly configured.">未正確設定權限管理服務。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidLockboxType">
      <summary vsli:raw="Rights management services are not properly configured.">未正確設定權限管理服務。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidNumericalValue">
      <summary vsli:raw="The numeric value specified is invalid.">指定的數值無效。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidRegistryPath">
      <summary vsli:raw="The specified registry path is invalid.">指定的登錄路徑不正確。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidServerResponse">
      <summary vsli:raw="Rights management services are not properly configured.">未正確設定權限管理服務。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidTimeInfo">
      <summary vsli:raw="The time information specified is invalid.">指定的時間資訊無效。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.InvalidVersion">
      <summary vsli:raw="The rights management version is incorrect.">權限管理版本不正確。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.KeyTypeUnsupported">
      <summary vsli:raw="The key type specified in a key/value pair is not supported.">不支援索引鍵/值組中指定的金鑰類型。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.LibraryFail">
      <summary vsli:raw="A library operation failed.">程式庫作業失敗。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.LibraryUnsupportedPlugIn">
      <summary vsli:raw="The specified library plug-in is not supported.">不支援指定的媒體櫃外掛程式。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.LicenseAcquisitionFailed">
      <summary vsli:raw="An End Use License (EUL) could not be acquired from the rights management server.">無法從權限管理伺服器取得使用授權 (EUL)。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.LicenseBindingToWindowsIdentityFailed">
      <summary vsli:raw="The current user credentials are not valid for acquiring a license.">目前的使用者認證無法順利取得授權。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ManifestPolicyViolation">
      <summary vsli:raw="An operation is in violation of the rights management manifest policy.">作業違反權限管理資訊清單原則。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.MetadataNotSet">
      <summary vsli:raw="The specified metadata could net be set.">無法設定指定的中繼資料。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NeedsGroupIdentityActivation">
      <summary vsli:raw="The user is not activated, or no Rights Account Certificate (RAC) was submitted and none was found in the license store to match the license associated with this session.">使用者未啟用，或未提交權限帳戶憑證 (RAC)，而且在授權存放區中找不到與此工作階段關聯的授權相符的授權。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NeedsMachineActivation">
      <summary vsli:raw="The computer must be activated before the user can be activated.">必須先啟用電腦，才能啟用使用者。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoAesCryptoProvider">
      <summary vsli:raw="Rights management services are not properly configured.">未正確設定權限管理服務。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoConnect">
      <summary vsli:raw="Rights management cannot connect to the URI specified for the license server.">版權管理無法連線至為授權伺服器指定的 URI。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoDistributionPointUrlFound">
      <summary vsli:raw="The protected content is corrupted.">受保護的內容已損毀。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoLicense">
      <summary vsli:raw="A required license is not available.">無法使用必要的授權。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NoMoreData">
      <summary vsli:raw="No license or certificate exists at the specified index.">沒有授權或憑證存在指定的索引中。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NotAChain">
      <summary vsli:raw="Rights managed content is corrupted.">版權管理的內容已損毀。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.NotSet">
      <summary vsli:raw="The item requested to delete does not exist.">要求刪除的項目不存在。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.OutdatedModule">
      <summary vsli:raw="Rights management services are not properly configured.">未正確設定權限管理服務。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.OutOfQuota">
      <summary vsli:raw="The license server's maximum quota of End Use Licenses (EULs) has been reached.">已達到使用授權 (EUL) 的授權伺服器配額上限。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.OwnerLicenseNotFound">
      <summary vsli:raw="The document does not contain an Owner License.">文件未包含擁有者授權。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.QueryReportsNoResults">
      <summary vsli:raw="No instances of the requested attribute exist.">所要求屬性的執行個體不存在。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RecordNotFound">
      <summary vsli:raw="The specified license was not found.">找不到指定的授權。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RequestDenied">
      <summary vsli:raw="The Rights Management server does not allow temporary certification of the current user.">版權管理伺服器不允許目前使用者的暫時憑證。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RevocationInfoNotSet">
      <summary vsli:raw="Certificate or license revocation information has not been set.">尚未設定憑證或授權撤銷資訊。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RightNotGranted">
      <summary vsli:raw="The current user does not have rights to access the protected content.">目前使用者沒有權限可存取受保護的內容。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.RightNotSet">
      <summary vsli:raw="The requested right was not specified when the content was published with rights management.">以權限管理發行內容時未指定要求的權限。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServerError">
      <summary vsli:raw="Rights management services are not properly configured.">未正確設定權限管理服務。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServerNotFound">
      <summary vsli:raw="Rights management services are not properly configured.">未正確設定權限管理服務。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServiceGone">
      <summary vsli:raw="Rights management services are not properly configured.">未正確設定權限管理服務。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServiceMoved">
      <summary vsli:raw="Rights management services are not properly configured.">未正確設定權限管理服務。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ServiceNotFound">
      <summary vsli:raw="Rights management services are not properly configured.">未正確設定權限管理服務。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.Success">
      <summary vsli:raw="Operation has competed successfully.">作業已順利完成。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.TooManyCertificates">
      <summary vsli:raw="The number of certificates has exceeded the maximum number allowed.">憑證數量已超過允許的最大數目。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.TooManyLoadedEnvironments">
      <summary vsli:raw="Too many &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; instance have been created.">建立太多 <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> 執行個體。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.UnexpectedException">
      <summary vsli:raw="An unspecified error occurred.  Also thrown when an application runs in debug mode.">發生未指定的錯誤。  也會在應用程式於偵錯模式執行時擲回。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.UseDefault">
      <summary vsli:raw="If a request is made for computer activation or a rights account certificate, receiving &lt;see cref=&quot;F:System.Security.RightsManagement.RightsManagementFailureCode.UseDefault&quot; /&gt; indicates that the application should pass &lt;see langword=&quot;null&quot; /&gt; into the ActServInfo parameter.">如果是要求啟用電腦或權限帳戶憑證，則收到 <see cref="F:System.Security.RightsManagement.RightsManagementFailureCode.UseDefault" /> 表示應用程式應將 <see langword="null" /> 傳遞到 ActServInfo 參數</summary>
    </member>
    <member name="F:System.Security.RightsManagement.RightsManagementFailureCode.ValidityTimeViolation">
      <summary vsli:raw="The defined time period for the protected content has expired; access is no longer permitted.">為受保護內容定義的時間週期已過期；不再允許存取。</summary>
    </member>
    <member name="T:System.Security.RightsManagement.SecureEnvironment">
      <summary vsli:raw="Represents a secure client session for user activation, license binding, and other rights management operations.">表示使用者啟動、授權繫結及其他權限管理作業的安全用戶端工作階段。</summary>
    </member>
    <member name="P:System.Security.RightsManagement.SecureEnvironment.ApplicationManifest">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.Security.RightsManagement.SecureEnvironment.ApplicationManifest&quot; /&gt; specified when the &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; was created.">取得建立 <see cref="P:System.Security.RightsManagement.SecureEnvironment.ApplicationManifest" /> 時指定的 <see cref="T:System.Security.RightsManagement.SecureEnvironment" />。</summary>
      <returns vsli:raw="The application manifest specified to the &lt;see cref=&quot;Overload:System.Security.RightsManagement.SecureEnvironment.Create&quot; /&gt; method when the &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; is created.">建立 <see cref="Overload:System.Security.RightsManagement.SecureEnvironment.Create" /> 時，指定給 <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> 方法的應用程式資訊清單。</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.AuthenticationType,System.Security.RightsManagement.UserActivationMode)">
      <summary vsli:raw="Creates a secure client session given an application rights manifest, &lt;see cref=&quot;T:System.Security.RightsManagement.AuthenticationType&quot; /&gt;, and &lt;see cref=&quot;T:System.Security.RightsManagement.UserActivationMode&quot; /&gt;.">建立獲得應用程式權限資訊清單的安全用戶端工作階段，<see cref="T:System.Security.RightsManagement.AuthenticationType" /> 和 <see cref="T:System.Security.RightsManagement.UserActivationMode" />。</summary>
      <param name="applicationManifest" vsli:raw="The application rights manifest.">應用程式權限資訊清單。</param>
      <param name="authentication" vsli:raw="The method of authentication.">驗證方法。</param>
      <param name="userActivationMode" vsli:raw="The type of the user rights account certificate.">使用者權限帳戶憑證的類型。</param>
      <returns vsli:raw="A secure client session for activation, license binding, and other rights management operations.">啟動、授權繫結及其他權限管理作業的安全用戶端工作階段。</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)">
      <summary vsli:raw="Creates a secure client session for a specified user with a given rights manifest.">以指定權限資訊清單為指定的使用者建立安全用戶端工作階段。</summary>
      <param name="applicationManifest" vsli:raw="The application rights manifest.">應用程式權限資訊清單。</param>
      <param name="user" vsli:raw="The user or user-group for granting access to rights managed content.">要授與版權管理內容存取權的使用者或使用者群組。</param>
      <returns vsli:raw="A secure client session for activation, license binding, and other rights management operations.">啟動、授權繫結及其他權限管理作業的安全用戶端工作階段。</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt;.">釋放 <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> 所使用的所有資源。</summary>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; and optionally releases the managed resources.">釋放 <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers">
      <summary vsli:raw="Returns a list of the activated users.">傳回已啟動使用者的清單。</summary>
      <returns vsli:raw="A list of the currently activated users.">目前已啟動使用者的清單。</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.IsUserActivated(System.Security.RightsManagement.ContentUser)">
      <summary vsli:raw="Indicates whether a given user has been activated for accessing rights managed content.">表示是否已啟用指定使用者存取權限管理內容。</summary>
      <param name="user" vsli:raw="The user or user-group for granting access to rights managed content.">要授與版權管理內容存取權的使用者或使用者群組。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the given &lt;paramref name=&quot;user&quot; /&gt; has been activated for accessing rights managed content; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果已啟用指定的 <paramref name="user" /> 來存取版權管理內容，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.RightsManagement.SecureEnvironment.RemoveActivatedUser(System.Security.RightsManagement.ContentUser)">
      <summary vsli:raw="Removes the license activation for a specified user.">為指定的使用者移除授權啟用。</summary>
      <param name="user" vsli:raw="The user to remove the license activation for.">要為其移除授權啟動的使用者。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;user&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="user" /> 參數為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The given &lt;paramref name=&quot;user&quot; /&gt; is not authenticated with either Windows authentication or Passport authentication.">指定的 <paramref name="user" /> 不是使用 Windows 驗證或 Passport 驗證進行驗證。</exception>
    </member>
    <member name="P:System.Security.RightsManagement.SecureEnvironment.User">
      <summary vsli:raw="Gets the user or user-group specified when the &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; was created.">取得建立 <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> 時指定的使用者或使用者群組。</summary>
      <returns vsli:raw="The user or user-group specified to the &lt;see cref=&quot;M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)&quot; /&gt; method when the &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt; was created.">建立 <see cref="M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)" /> 時，指定給 <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> 方法的使用者或使用者群組。</returns>
    </member>
    <member name="T:System.Security.RightsManagement.UnsignedPublishLicense">
      <summary vsli:raw="Represents an unsigned rights managed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; or an unsigned &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; template.">代表未簽署的權限管理 <see cref="T:System.Security.RightsManagement.PublishLicense" /> 或未簽署的 <see cref="T:System.Security.RightsManagement.PublishLicense" /> 範本。</summary>
    </member>
    <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.UnsignedPublishLicense&quot; /&gt; class.">初始化 <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.UnsignedPublishLicense&quot; /&gt; class from a specified XrML publish-license template.">從指定的 XrML 發行授權範本初始化 <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" /> 類別的新執行個體。</summary>
      <param name="publishLicenseTemplate" vsli:raw="The Extensible Rights Markup Language (XrML) publish-license template to use to create this license.">用來建立此授權的 可延伸版權標記語言 (XrML) 發行授權範本。</param>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.ContentId">
      <summary vsli:raw="Gets or sets the publisher-created content identifier.">取得或設定發行者建立的內容識別項。</summary>
      <returns vsli:raw="The publisher-created rights-managed content identifier.">發行者建立之受版權管理的內容識別項。</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.Grants">
      <summary vsli:raw="Gets a collection of assigned user rights.">取得已指派使用者權限的集合。</summary>
      <returns vsli:raw="A collection of the assigned user rights that are provided in this license.">已指派使用者權限的集合，由這份授權所提供。</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary">
      <summary vsli:raw="Gets a collection of name and description pairs.">取得名稱與描述配對的集合。</summary>
      <returns vsli:raw="A collection of name and description pairs.">名稱與描述配對的集合。</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.Owner">
      <summary vsli:raw="Gets or sets the content owner.">取得或設定內容擁有者。</summary>
      <returns vsli:raw="The user who owns the published content.">擁有發行內容的使用者。</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName">
      <summary vsli:raw="Gets or sets the contact name for the author or publisher of the content.">取得或設定內容作者或發行者的連絡人姓名。</summary>
      <returns vsli:raw="The contact name for the author or publisher of the content.">內容作者或發行者的連絡人姓名。</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri">
      <summary vsli:raw="Gets or sets the contact URI for the author or publisher of the content.">取得或設定內容作者或發行者的連絡 URI。</summary>
      <returns vsli:raw="The contact uniform resource identifier (URI) for the author or publisher of the content.">內容作者或發行者的連絡統一資源識別項 (URI)。</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)">
      <summary vsli:raw="Creates a signed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; and returns a &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for the document author.">建立已簽署的 <see cref="T:System.Security.RightsManagement.PublishLicense" />，並傳回文件作者的 <see cref="T:System.Security.RightsManagement.UseLicense" />。</summary>
      <param name="secureEnvironment" vsli:raw="The secure environment for license activation and binding.">授權啟用與繫結的安全環境。</param>
      <param name="authorUseLicense" vsli:raw="A returned &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; for the document author.">傳回的文件作者 <see cref="T:System.Security.RightsManagement.UseLicense" />。</param>
      <returns vsli:raw="The signed &lt;see cref=&quot;T:System.Security.RightsManagement.PublishLicense&quot; /&gt; that is created by signing this &lt;see cref=&quot;T:System.Security.RightsManagement.UnsignedPublishLicense&quot; /&gt;.">已簽署的 <see cref="T:System.Security.RightsManagement.PublishLicense" />，這是透過簽署這份 <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" /> 而建立的。</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.ToString">
      <summary vsli:raw="Returns a serialized template created from the XrML of the &lt;see cref=&quot;T:System.Security.RightsManagement.UnsignedPublishLicense&quot; /&gt;.">傳回從 <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" /> 之 XrML 建立的序列化範本。</summary>
      <returns vsli:raw="A serialized template created from the XrML of the &lt;see cref=&quot;T:System.Security.RightsManagement.UnsignedPublishLicense&quot; /&gt;.">從 <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" /> 之 XrML 建立的序列化範本。</returns>
    </member>
    <member name="T:System.Security.RightsManagement.UseLicense">
      <summary vsli:raw="Represents a license that enables access to protected rights managed content.">代表可讓您存取受保護版權管理內容的授權。</summary>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.RightsManagement.UseLicense&quot; /&gt; class.">初始化 <see cref="T:System.Security.RightsManagement.UseLicense" /> 類別的新執行個體。</summary>
      <param name="useLicense" vsli:raw="A use license in serialized Extensible Rights Markup Language (XrML) form.">採用序列化可延伸版權標記語言 (XrML) 形式的使用授權。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;useLicense&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="useLicense" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Security.RightsManagement.RightsManagementException" vsli:raw="&lt;paramref name=&quot;useLicense&quot; /&gt; is invalid.">
        <paramref name="useLicense" /> 無效。</exception>
    </member>
    <member name="P:System.Security.RightsManagement.UseLicense.ApplicationData">
      <summary vsli:raw="Gets the application data dictionary that contains key/value pairs passed from the publishing application to the consuming application.">取得應用程式資料字典，其中包含從發行應用程式傳遞至使用應用程式的金鑰/值組。</summary>
      <returns vsli:raw="The application data dictionary that contains key/value pairs passed from the publishing application to the consuming application.">應用程式資料字典，其中包含從發行應用程式傳遞至使用應用程式的金鑰/值組。</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)">
      <summary vsli:raw="Binds the license to a given &lt;see cref=&quot;T:System.Security.RightsManagement.SecureEnvironment&quot; /&gt;.">將授權繫結至指定的 <see cref="T:System.Security.RightsManagement.SecureEnvironment" />。</summary>
      <param name="secureEnvironment" vsli:raw="The environment to bind the license to.">要繫結授權的環境。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Security.RightsManagement.CryptoProvider&quot; /&gt; instance if the license binding succeeded; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">如果授權繫結成功，則為 <see cref="T:System.Security.RightsManagement.CryptoProvider" /> 執行個體；否則為 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;secureEnvironment&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="secureEnvironment" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Security.RightsManagement.UseLicense.ContentId">
      <summary vsli:raw="Gets the content identifier created by the publisher.">取得發行者建立的內容識別項。</summary>
      <returns vsli:raw="The content identifier created by the publisher.">發行者建立的內容識別項。</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.Equals(System.Object)">
      <summary vsli:raw="Indicates if this license is equivalent to another given license.">指出此授權是否相當於另一個指定的授權。</summary>
      <param name="x" vsli:raw="The license to compare.">要比較的授權。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if both licenses are the equivalent; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果兩個授權相等，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.GetHashCode">
      <summary vsli:raw="Returns the hash code associated with this license.">傳回與此授權相關聯的雜湊碼。</summary>
      <returns vsli:raw="A hash code for this license.">此授權的雜湊碼。</returns>
    </member>
    <member name="P:System.Security.RightsManagement.UseLicense.Owner">
      <summary vsli:raw="Gets the owner of the license.">取得授權的擁有人。</summary>
      <returns vsli:raw="The owner of the license.">授權的擁有人。</returns>
    </member>
    <member name="M:System.Security.RightsManagement.UseLicense.ToString">
      <summary vsli:raw="Returns the serialized XrML string used to create this license.">會傳回序列化的 XrML 字串，用來建立此授權。</summary>
      <returns vsli:raw="The serialized Extensible Rights Markup Language (XrML) string originally passed to the &lt;see cref=&quot;M:System.Security.RightsManagement.UseLicense.#ctor(System.String)&quot; /&gt; constructor.">原本傳遞至 <see cref="M:System.Security.RightsManagement.UseLicense.#ctor(System.String)" /> 建構函式的序列化可延伸版權標記語言 (XrML) 字串。</returns>
    </member>
    <member name="T:System.Security.RightsManagement.UserActivationMode">
      <summary vsli:raw="Specifies the type of user Rights Account Certificate to request for rights management activation.">指定要求用於版權管理啟用的使用者「版權帳號憑證」類型。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.UserActivationMode.Permanent">
      <summary vsli:raw="A permanent Rights Account Certificate.">永久版權帳號憑證。</summary>
    </member>
    <member name="F:System.Security.RightsManagement.UserActivationMode.Temporary">
      <summary vsli:raw="A temporary Rights Account Certificate.">暫時版權帳號憑證。</summary>
    </member>
    <member name="T:System.Windows.AttachedPropertyBrowsableAttribute">
      <summary vsli:raw="Provides a base class for .NET attributes that report the use scope of attached properties.">提供報告附加屬性使用範圍之 .NET Framework 屬性的基底類別。</summary>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Windows.AttachedPropertyBrowsableAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute">
      <summary vsli:raw="Specifies that an attached property is browsable only for elements that derive from a specified type.">指定附加屬性僅供衍生自指定類型的項目瀏覽。</summary>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableForTypeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt; class, using the provided &lt;paramref name=&quot;targetType&quot; /&gt;.">使用提供的 <paramref name="targetType" /> 初始化 <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> 類別的新執行個體。</summary>
      <param name="targetType" vsli:raw="The intended type that scopes the use of the attached property where this .NET Framework attribute applies.">預定使用的類型，它會限定套用這個 .NET Framework 屬性 之附加屬性的使用範圍。</param>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableForTypeAttribute.Equals(System.Object)">
      <summary vsli:raw="Determines whether the current &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt; .NET Framework attribute is equal to a specified object.">判斷目前的 <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> .NET Framework 屬性 是否等於指定的物件。</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt; to compare to the current &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt;.">要與目前 <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> 比較的 <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> 和目前的 <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> 相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableForTypeAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt; .NET Framework attribute.">傳回這個 <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> .NET Framework 屬性 的雜湊碼。</summary>
      <returns vsli:raw="An unsigned 32-bit integer value.">32 位元不帶正負號的整數值。</returns>
    </member>
    <member name="P:System.Windows.AttachedPropertyBrowsableForTypeAttribute.TargetType">
      <summary vsli:raw="Gets the base type that scopes the use of the attached property where this .NET Framework attribute applies.">取得基底類型，限定套用了這個 .NET Framework 屬性 之附加屬性的使用範圍。</summary>
      <returns vsli:raw="The requested &lt;see cref=&quot;T:System.Type&quot; /&gt;.">所要求的 <see cref="T:System.Type" />。</returns>
    </member>
    <member name="P:System.Windows.AttachedPropertyBrowsableForTypeAttribute.TypeId">
      <summary vsli:raw="Gets a unique type identifier for this &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt; .NET Framework attribute.">取得此 <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> .NET Framework 屬性 的唯一類型識別項。</summary>
      <returns vsli:raw="An object that is a unique identifier for the &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableForTypeAttribute&quot; /&gt;.">一種物件，為 <see cref="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" /> 的唯一識別項。</returns>
    </member>
    <member name="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute">
      <summary vsli:raw="Specifies that an attached property is only browsable on an element that also has another specific .NET attribute applied to its class definition.">指定只能瀏覽在其類別定義上套用了另一個特定 .NET Framework 屬性的項目上的附加屬性。</summary>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> 類別的新執行個體。</summary>
      <param name="attributeType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the  .NET Framework attribute that must also be applied on a class in order for the attached property to be browsable on the class where &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt; is applied.">為了可在套用 <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> 的類別上瀏覽附加屬性，類別上也必須套用 .NET Framework 屬性 的 <see cref="T:System.Type" />。</param>
    </member>
    <member name="P:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.AttributeType">
      <summary vsli:raw="Gets the type of the  .NET Framework attribute that must also be applied on a class.">取得必須在類別上套用的 .NET Framework 屬性 的類型。</summary>
      <returns vsli:raw="The  .NET Framework attribute type.">.NET Framework 屬性型別。</returns>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.Equals(System.Object)">
      <summary vsli:raw="Determines whether the current &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt; .NET Framework attribute is equal to a specified object.">判斷目前的 <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> .NET Framework 屬性 是否等於指定的物件。</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt; to compare to the current &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt;.">要與目前 <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> 比較的 <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> 和目前的 <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> 相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute&quot; /&gt; .NET Framework attribute.">傳回這個 <see cref="T:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute" /> .NET Framework 屬性 的雜湊碼。</summary>
      <returns vsli:raw="An unsigned 32-bit integer value.">32 位元不帶正負號的整數值。</returns>
    </member>
    <member name="T:System.Windows.BaseCompatibilityPreferences">
      <summary vsli:raw="Contains properties that specify how an application should behave relative to new WPF features that are in the WindowsBase assembly.">包含指定應用程式相對於 WindowsBase 組件中新的 WPF 功能應如何表現的屬性。</summary>
    </member>
    <member name="P:System.Windows.BaseCompatibilityPreferences.FlowDispatcherSynchronizationContextPriority">
      <summary vsli:raw="Gets or sets a value that indicates whether information about the &lt;see cref=&quot;P:System.Windows.Threading.DispatcherOperation.Priority&quot; /&gt; is saved to the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt;.">取得或設定值，指出有關 <see cref="P:System.Windows.Threading.DispatcherOperation.Priority" /> 的資訊是否儲存至 <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if information about the &lt;see cref=&quot;P:System.Windows.Threading.DispatcherOperation.Priority&quot; /&gt; is saved to the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果將 <see cref="P:System.Windows.Threading.DispatcherOperation.Priority" /> 的相關資訊儲存至 <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> 則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailure">
      <summary vsli:raw="Defines how the dispatcher reacts to failures encountered when it requests processing.">定義發送器如何回應在處理要求時發生的失敗。</summary>
      <returns vsli:raw="A value that defines how the dispatcher reacts to failures.">定義發送器如何回應失敗的值。</returns>
    </member>
    <member name="T:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailureOptions">
      <summary vsli:raw="Provides a set of values that describes how the dispatcher responds to failures that are encountered while requesting processing.">提供一組值，描述發送器如何回應在處理要求時發生的失敗。</summary>
    </member>
    <member name="F:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailureOptions.Continue">
      <summary vsli:raw="Continue after the failure.  &#xA;  &#xA; This is the default value. It defines the behavior of the Windows Presentation Foundation dispatcher prior to the .NET Framework 4.7.1. The dispatcher may become unresponsive when this option is selected.">失敗後繼續執行。  
 這是預設值。 它會定義 Windows Presentation Foundation 發送器的行為先於 .NET Framework 4.7.1。 選取此選項時，發送器可能無回應。</summary>
    </member>
    <member name="F:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailureOptions.Reset">
      <summary vsli:raw="Reset the dispatcher's state to try another request the next time one is needed.  &#xA;  &#xA; While this option can sometimes &quot;repair&quot; unresponsiveness, it cannot honor the usual timing of processing, which can be crucial. Selecting this option can lead to unexpected behavior.">重設發送器的狀態，在下次有需要時嘗試另一個要求。  
 雖然此選項有時會「修復」無回應問題，但它無法接受一般的處理時機，而時機非常重要。 選取此選項會導致非預期的行為。</summary>
    </member>
    <member name="F:System.Windows.BaseCompatibilityPreferences.HandleDispatcherRequestProcessingFailureOptions.Throw">
      <summary vsli:raw="Throw an exception.  &#xA;  &#xA; This option immediately brings the problem to the application developer's attention.">擲回例外狀況。  
 此選項會讓應用程式開發人員立即注意到問題。</summary>
    </member>
    <member name="P:System.Windows.BaseCompatibilityPreferences.InlineDispatcherSynchronizationContextSend">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)&quot; /&gt; method puts the delegates on the dispatcher queue or if the delegate is directly invoked.">取得或設定值，這個值表示 <see cref="M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)" /> 方法會將委派放在發送程式佇列，還是直接叫用委派。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)&quot; /&gt; method puts the delegates on the dispatcher queue or if the delegate is directly invoked; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)" /> 方法會將委派放在發送器佇列或直接叫用委派則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.BaseCompatibilityPreferences.ReuseDispatcherSynchronizationContextInstance">
      <summary vsli:raw="Gets or sets a value that indicates whether a single &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; is used for multiple dispatcher operations.">取得或設定值，這個值表示是否在多個發送器作業中使用單一 <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />。</summary>
      <returns vsli:raw="true if a single &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; is used for multiple dispatcher operations; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果多個發送器作業使用單一 <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> 則為 true，否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.CoerceValueCallback">
      <summary vsli:raw="Provides a template for a method that is called whenever a dependency property value is being re-evaluated, or coercion is specifically requested.">提供方法的範本，該方法會在相依性屬性值重新評估時或特別要求強制型轉 (Coercion) 時被呼叫。</summary>
      <param name="d" vsli:raw="The object that the property exists on. When the callback is invoked, the property system will pass this value.">屬性所在的物件。 當叫用 (Invoke) 回呼時 (Callback)，屬性系統將傳遞這個值。</param>
      <param name="baseValue" vsli:raw="The new value of the property, prior to any coercion attempt.">在嘗試任何強制型轉之前，屬性的新值。</param>
      <returns vsli:raw="The coerced value (with appropriate type).">強制型轉的值 (具有適當的型別)。</returns>
    </member>
    <member name="T:System.Windows.Converters.Int32RectValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">將 <see cref="T:System.String" /> 執行個體轉換為 <see cref="T:System.Windows.Int32Rect" /> 執行個體，以及反向操作。</summary>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Converters.Int32RectValueSerializer&quot; /&gt; class.">初始化 <see cref="T:System.Windows.Converters.Int32RectValueSerializer" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">判斷指定的 <see cref="T:System.String" /> 是否能夠轉換為 <see cref="T:System.Windows.Int32Rect" /> 的執行個體。</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">要評估以進行轉換的字串。</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">用於轉換的內容資訊。</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">一律傳回 <see langword="true" />。</returns>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">判斷指定的 <see cref="T:System.Windows.Int32Rect" /> 是否能夠轉換為 <see cref="T:System.String" />。</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">要評估以進行轉換的物件。</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">用於轉換的內容資訊。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="value" /> 可以轉換為 <see cref="T:System.String" />，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">將 <see cref="T:System.String" /> 轉換成 <see cref="T:System.Windows.Int32Rect" />。</summary>
      <param name="value" vsli:raw="The string to convert.">要轉換的字串。</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">用於轉換的內容資訊。</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">根據所提供 <paramref name="value" /> 的新 <see cref="T:System.Windows.Int32Rect" /> 執行個體。</returns>
    </member>
    <member name="M:System.Windows.Converters.Int32RectValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">將 <see cref="T:System.Windows.Int32Rect" /> 的執行個體轉換成 <see cref="T:System.String" />。</summary>
      <param name="value" vsli:raw="The object to convert into a string.">要轉換為字串的物件。</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">用於轉換的內容資訊。</param>
      <returns vsli:raw="A string representation of the specified &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">指定之 <see cref="T:System.Windows.Int32Rect" /> 的字串表示。</returns>
    </member>
    <member name="T:System.Windows.Converters.PointValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">將 <see cref="T:System.String" /> 執行個體轉換為 <see cref="T:System.Windows.Point" /> 執行個體，以及反向操作。</summary>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Converters.PointValueSerializer&quot; /&gt; class.">初始化 <see cref="T:System.Windows.Converters.PointValueSerializer" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">判斷指定的 <see cref="T:System.String" /> 是否能夠轉換為 <see cref="T:System.Windows.Point" /> 的執行個體。</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">要評估以進行轉換的字串。</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">用於轉換的內容資訊。</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">一律傳回 <see langword="true" />。</returns>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">判斷指定的 <see cref="T:System.Windows.Point" /> 是否能夠轉換為 <see cref="T:System.String" />。</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">要評估以進行轉換的物件。</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">用於轉換的內容資訊。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="value" /> 可以轉換為 <see cref="T:System.String" />，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">將 <see cref="T:System.String" /> 轉換成 <see cref="T:System.Windows.Point" />。</summary>
      <param name="value" vsli:raw="The string to convert.">要轉換的字串。</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">用於轉換的內容資訊。</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">根據所提供 <paramref name="value" /> 的新 <see cref="T:System.Windows.Point" /> 執行個體。</returns>
    </member>
    <member name="M:System.Windows.Converters.PointValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">將 <see cref="T:System.Windows.Point" /> 的執行個體轉換成 <see cref="T:System.String" />。</summary>
      <param name="value" vsli:raw="The object to convert into a string.">要轉換為字串的物件。</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">用於轉換的內容資訊。</param>
      <returns vsli:raw="A string representation of the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">指定之 <see cref="T:System.Windows.Point" /> 的字串表示。</returns>
    </member>
    <member name="T:System.Windows.Converters.RectValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">將 <see cref="T:System.String" /> 執行個體轉換為 <see cref="T:System.Windows.Rect" /> 執行個體，以及反向操作。</summary>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Converters.RectValueSerializer&quot; /&gt; class.">初始化 <see cref="T:System.Windows.Converters.RectValueSerializer" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">判斷指定的 <see cref="T:System.String" /> 是否能夠轉換為 <see cref="T:System.Windows.Rect" /> 的執行個體。</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">要評估以進行轉換的字串。</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">用於轉換的內容資訊。</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">一律傳回 <see langword="true" />。</returns>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">判斷指定的 <see cref="T:System.Windows.Rect" /> 是否能夠轉換為 <see cref="T:System.String" />。</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">要評估以進行轉換的物件。</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">用於轉換的內容資訊。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="value" /> 可以轉換為 <see cref="T:System.String" />，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">將 <see cref="T:System.String" /> 轉換成 <see cref="T:System.Windows.Rect" />。</summary>
      <param name="value" vsli:raw="The string to convert.">要轉換的字串。</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">用於轉換的內容資訊。</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">根據所提供 <paramref name="value" /> 的新 <see cref="T:System.Windows.Rect" /> 執行個體。</returns>
    </member>
    <member name="M:System.Windows.Converters.RectValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">將 <see cref="T:System.Windows.Rect" /> 的執行個體轉換成 <see cref="T:System.String" />。</summary>
      <param name="value" vsli:raw="The object to convert into a string.">要轉換為字串的物件。</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">用於轉換的內容資訊。</param>
      <returns vsli:raw="A string representation of the specified &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">指定之 <see cref="T:System.Windows.Rect" /> 的字串表示。</returns>
    </member>
    <member name="T:System.Windows.Converters.SizeValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">將 <see cref="T:System.String" /> 執行個體轉換為 <see cref="T:System.Windows.Size" /> 執行個體，以及反向操作。</summary>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Converters.SizeValueSerializer&quot; /&gt; class.">初始化 <see cref="T:System.Windows.Converters.SizeValueSerializer" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">判斷指定的 <see cref="T:System.String" /> 是否能夠轉換為 <see cref="T:System.Windows.Size" /> 的執行個體。</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">要評估以進行轉換的字串。</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">用於轉換的內容資訊。</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">一律傳回 <see langword="true" />。</returns>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">判斷指定的 <see cref="T:System.Windows.Size" /> 是否能夠轉換為 <see cref="T:System.String" />。</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">要評估以進行轉換的物件。</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">用於轉換的內容資訊。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="value" /> 可以轉換為 <see cref="T:System.String" />，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">將 <see cref="T:System.String" /> 轉換成 <see cref="T:System.Windows.Size" />。</summary>
      <param name="value" vsli:raw="The string to convert.">要轉換的字串。</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">用於轉換的內容資訊。</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">根據所提供 <paramref name="value" /> 的新 <see cref="T:System.Windows.Size" /> 執行個體。</returns>
    </member>
    <member name="M:System.Windows.Converters.SizeValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">將 <see cref="T:System.Windows.Size" /> 的執行個體轉換成 <see cref="T:System.String" />。</summary>
      <param name="value" vsli:raw="The object to convert into a string.">要轉換為字串的物件。</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">用於轉換的內容資訊。</param>
      <returns vsli:raw="A string representation of the specified &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">指定之 <see cref="T:System.Windows.Size" /> 的字串表示。</returns>
    </member>
    <member name="T:System.Windows.Converters.VectorValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">將 <see cref="T:System.String" /> 執行個體轉換為 <see cref="T:System.Windows.Vector" /> 執行個體，以及反向操作。</summary>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Converters.VectorValueSerializer&quot; /&gt; class.">初始化 <see cref="T:System.Windows.Converters.VectorValueSerializer" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">判斷指定的 <see cref="T:System.String" /> 是否能夠轉換為 <see cref="T:System.Windows.Vector" /> 的執行個體。</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">要評估以進行轉換的字串。</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">用於轉換的內容資訊。</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">一律傳回 <see langword="true" />。</returns>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">判斷指定的 <see cref="T:System.Windows.Vector" /> 是否能夠轉換為 <see cref="T:System.String" />。</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">要評估以進行轉換的物件。</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">用於轉換的內容資訊。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="value" /> 可以轉換為 <see cref="T:System.String" />，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">將 <see cref="T:System.String" /> 轉換成 <see cref="T:System.Windows.Vector" />。</summary>
      <param name="value" vsli:raw="The string to convert.">要轉換的字串。</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">用於轉換的內容資訊。</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">根據所提供 <paramref name="value" /> 的新 <see cref="T:System.Windows.Vector" /> 執行個體。</returns>
    </member>
    <member name="M:System.Windows.Converters.VectorValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">將 <see cref="T:System.Windows.Vector" /> 的執行個體轉換成 <see cref="T:System.String" />。</summary>
      <param name="value" vsli:raw="The object to convert into a string.">要轉換為字串的物件。</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">用於轉換的內容資訊。</param>
      <returns vsli:raw="A string representation of the specified &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">指定之 <see cref="T:System.Windows.Vector" /> 的字串表示。</returns>
    </member>
    <member name="T:System.Windows.Data.DataSourceProvider">
      <summary vsli:raw="Common base class and contract for &lt;see cref=&quot;T:System.Windows.Data.DataSourceProvider&quot; /&gt; objects, which are factories that execute some queries to produce a single object or a list of objects that you can use as binding source objects.">常用的基底類別和 <see cref="T:System.Windows.Data.DataSourceProvider" /> 物件協定，是執行幾項查詢以產生單一物件或物件清單 (可當作繫結來源物件使用) 的因素。</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Data.DataSourceProvider&quot; /&gt; class. This is a protected constructor.">初始化 <see cref="T:System.Windows.Data.DataSourceProvider" /> 類別的新執行個體。 這是受保護的建構函式。</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.BeginInit">
      <summary vsli:raw="Indicates that initialization of this object is about to begin; no implicit &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.Refresh&quot; /&gt; occurs until the matched &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.EndInit&quot; /&gt; method is called.">表示這個物件即將開始初始化；直到呼叫對應的 <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" /> 方法，才會發生隱含的 <see cref="M:System.Windows.Data.DataSourceProvider.EndInit" />。</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.BeginQuery">
      <summary vsli:raw="When overridden in a derived class, this base class calls this method when &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.InitialLoad&quot; /&gt; or &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.Refresh&quot; /&gt; has been called. The base class delays the call if refresh is deferred or initial load is disabled.">在衍生類別中覆寫時，這個基底類別會在已呼叫 <see cref="M:System.Windows.Data.DataSourceProvider.InitialLoad" /> 或 <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" /> 之後呼叫這個方法。 如果延後重新整理或停用初始載入，基底類別就會延遲呼叫。</summary>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.Data">
      <summary vsli:raw="Gets the underlying data object.">取得基礎資料物件。</summary>
      <returns vsli:raw="A value of type &lt;see cref=&quot;T:System.Object&quot; /&gt; that is the underlying data object.">為基礎資料物件之類型 <see cref="T:System.Object" /> 的值。</returns>
    </member>
    <member name="E:System.Windows.Data.DataSourceProvider.DataChanged">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;P:System.Windows.Data.DataSourceProvider.Data&quot; /&gt; property has a new value.">當 <see cref="P:System.Windows.Data.DataSourceProvider.Data" /> 屬性有新值時發生。</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.DeferRefresh">
      <summary vsli:raw="Enters a defer cycle that you can use to change properties of the provider and delay automatic refresh.">進入延後循環，您可以用來變更提供者屬性，並且延遲自動重新整理。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; object that you can use to dispose of the calling object.">
        <see cref="T:System.IDisposable" /> 物件，可用來處置呼叫物件。</returns>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.Dispatcher">
      <summary vsli:raw="Gets or sets the current &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; object to the UI thread to use.">取得或設定要使用之 UI 執行緒目前的 <see cref="T:System.Windows.Threading.Dispatcher" /> 物件。</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; object to the UI thread to use. By default, this is the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; object that is associated with the thread on which this instance was created.">要使用<see cref="T:System.Windows.Threading.Dispatcher" />之UI執行緒的目前物件。 根據預設，這是與建立這個執行個體所在之執行緒相關聯的 <see cref="T:System.Windows.Threading.Dispatcher" /> 物件。</returns>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.EndInit">
      <summary vsli:raw="Indicates that the initialization of this object has completed; this causes a &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.Refresh&quot; /&gt; if no other &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.DeferRefresh&quot; /&gt; is outstanding.">指出這個物件的初始化已經完成，如果沒有任何其他未處理的 <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" />，這就會導致 <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" />。</summary>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.Error">
      <summary vsli:raw="Gets the error of the last query operation.">取得上次查詢作業的錯誤。</summary>
      <returns vsli:raw="A value of type &lt;see cref=&quot;T:System.Exception&quot; /&gt; that is the error of the last query operation, or &lt;see langword=&quot;null&quot; /&gt; if there was no error.">做為上次查詢作業錯誤之 <see cref="T:System.Exception" /> 型別的值，如果沒有錯誤，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.InitialLoad">
      <summary vsli:raw="Starts the initial query to the underlying data model. The result is returned on the &lt;see cref=&quot;P:System.Windows.Data.DataSourceProvider.Data&quot; /&gt; property.">啟動基礎資料模型的初始查詢。 結果會針對 <see cref="P:System.Windows.Data.DataSourceProvider.Data" /> 屬性傳回。</summary>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled">
      <summary vsli:raw="Gets or sets a value that indicates whether to prevent or delay the automatic loading of data.">取得或設定值，這個值表示是否要防止或延遲自動資料載入。</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; to prevent or delay the automatic loading of data; otherwise, &lt;see langword=&quot;true&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="false" /> 表示防止或延遲自動資料載入，否則為 <see langword="true" />。 預設值為 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Windows.Data.DataSourceProvider.IsRefreshDeferred">
      <summary vsli:raw="Gets a value that indicates whether there is an outstanding &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.DeferRefresh&quot; /&gt; in use.">取得值，指出是否仍然有未處理的 <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /> 在使用中。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there is an outstanding &lt;see cref=&quot;M:System.Windows.Data.DataSourceProvider.DeferRefresh&quot; /&gt; in use; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果仍然有未處理的 <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /> 在使用中，就是 <see langword="true" />，否則就是 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Windows.Data.DataSourceProvider.PropertyChanged&quot; /&gt; event with the provided arguments.">使用提供的引數，引發 <see cref="E:System.Windows.Data.DataSourceProvider.PropertyChanged" /> 事件。</summary>
      <param name="e" vsli:raw="Arguments of the event being raised.">所引發事件的引數。</param>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object)">
      <summary vsli:raw="Derived classes call this method to indicate that a query has finished.">衍生類別會呼叫這個方法來指出查詢已經完成。</summary>
      <param name="newData" vsli:raw="The data that is the result of the query.">查詢的結果資料。</param>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object,System.Exception,System.Windows.Threading.DispatcherOperationCallback,System.Object)">
      <summary vsli:raw="Derived classes call this method to indicate that a query has finished.">衍生類別會呼叫這個方法來指出查詢已經完成。</summary>
      <param name="newData" vsli:raw="The data that is the result of the query.">查詢的結果資料。</param>
      <param name="error" vsli:raw="The error that occurred while running the query. This value is &lt;see langword=&quot;null&quot; /&gt; if there is no error.">執行查詢時所發生的錯誤。 如果沒有錯誤，這個值為 <see langword="null" />。</param>
      <param name="completionWork" vsli:raw="Optional delegate that is used to execute completion work on the UI thread, for example, to set additional properties.">用於對 UI 執行緒執行完成工作 (例如設定其他屬性) 的選擇性委派。</param>
      <param name="callbackArguments" vsli:raw="Optional arguments to send as a parameter with the &lt;paramref name=&quot;completionWork&quot; /&gt; delegate.">隨 <paramref name="completionWork" /> 委派當做參數傳送的選擇性引數。</param>
    </member>
    <member name="E:System.Windows.Data.DataSourceProvider.PropertyChanged">
      <summary vsli:raw="Occurs when a property value changes.">當屬性值變更時發生。</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.Refresh">
      <summary vsli:raw="Initiates a refresh operation to the underlying data model. The result is returned on the &lt;see cref=&quot;P:System.Windows.Data.DataSourceProvider.Data&quot; /&gt; property.">啟始基礎資料模型的重新整理作業。 結果會針對 <see cref="P:System.Windows.Data.DataSourceProvider.Data" /> 屬性傳回。</summary>
    </member>
    <member name="E:System.Windows.Data.DataSourceProvider.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <summary vsli:raw="Occurs when a property value changes.">當屬性值變更時發生。</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary vsli:raw="This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.">這個成員支援 Windows Presentation Foundation (WPF) 基礎結構，但是您不可以從程式碼直接使用它。</summary>
    </member>
    <member name="M:System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#EndInit">
      <summary vsli:raw="This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.">這個成員支援 Windows Presentation Foundation (WPF) 基礎結構，但是您不可以從程式碼直接使用它。</summary>
    </member>
    <member name="T:System.Windows.DependencyObject">
      <summary vsli:raw="Represents an object that participates in the dependency property system.">表示參與相依性屬性系統的物件。</summary>
    </member>
    <member name="M:System.Windows.DependencyObject.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; class.">初始化 <see cref="T:System.Windows.DependencyObject" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)">
      <summary vsli:raw="Clears the local value of a property. The property to be cleared is specified by a &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier.">清除屬性的區域數值。 要清除的屬性是由 <see cref="T:System.Windows.DependencyProperty" /> 識別項所指定。</summary>
      <param name="dp" vsli:raw="The dependency property to be cleared, identified by a &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; object reference.">要清除的相依性屬性，該屬性是由 <see cref="T:System.Windows.DependencyProperty" /> 物件參考所識別。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Attempted to call &lt;see cref=&quot;M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)&quot; /&gt; on a sealed &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">嘗試在密封的 <see cref="T:System.Windows.DependencyObject" /> 上呼叫 <see cref="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />。</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)">
      <summary vsli:raw="Clears the local value of a read-only property. The property to be cleared is specified by a &lt;see cref=&quot;T:System.Windows.DependencyPropertyKey&quot; /&gt;.">清除唯讀屬性的區域數值。 要清除的屬性是由 <see cref="T:System.Windows.DependencyPropertyKey" /> 所指定。</summary>
      <param name="key" vsli:raw="The key for the dependency property to be cleared.">要清除之相依性屬性的索引鍵。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Attempted to call &lt;see cref=&quot;M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)&quot; /&gt; on a sealed &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">嘗試在密封的 <see cref="T:System.Windows.DependencyObject" /> 上呼叫 <see cref="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />。</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)">
      <summary vsli:raw="Coerces the value of the specified dependency property. This is accomplished by invoking any &lt;see cref=&quot;T:System.Windows.CoerceValueCallback&quot; /&gt; function specified in property metadata for the dependency property as it exists on the calling &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">強制轉型所指定相依性屬性的值。 叫用存在於呼叫 <see cref="T:System.Windows.CoerceValueCallback" /> 上相依性屬性之屬性中繼資料內所指定的任何 <see cref="T:System.Windows.DependencyObject" /> 函式，就可以達到這一點。</summary>
      <param name="dp" vsli:raw="The identifier for the dependency property to coerce.">要強制轉型之相依性屬性的識別項。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The specified &lt;paramref name=&quot;dp&quot; /&gt; or its value were invalid or do not exist.">指定的 <paramref name="dp" /> 或其值無效或不存在。</exception>
    </member>
    <member name="P:System.Windows.DependencyObject.DependencyObjectType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; that wraps the CLR type of this instance.">取得包裝此執行個體之 CLR 型別的 <see cref="T:System.Windows.DependencyObjectType" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; that wraps the CLR type of this instance.">包裝此執行個體之 CLR 型別的 <see cref="T:System.Windows.DependencyObjectType" />。</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.Equals(System.Object)">
      <summary vsli:raw="Determines whether a provided &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; is equivalent to the current &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">判斷提供的 <see cref="T:System.Windows.DependencyObject" /> 和目前的 <see cref="T:System.Windows.DependencyObject" /> 是否相等。</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; to compare to the current instance.">要與目前執行個體相比較的 <see cref="T:System.Windows.DependencyObject" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two instances are the same; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果兩個執行個體相等，就是 <see langword="true" />，否則就是 <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.GetHashCode">
      <summary vsli:raw="Gets a hash code for this &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">取得這個 <see cref="T:System.Windows.DependencyObject" /> 的雜湊程式碼。</summary>
      <returns vsli:raw="A signed 32-bit integer hash code.">帶正負號的 32 位元整數雜湊程式碼。</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.GetLocalValueEnumerator">
      <summary vsli:raw="Creates a specialized enumerator for determining which dependency properties have locally set values on this &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">建立特定的列舉值，以判斷哪些相依性屬性在此 <see cref="T:System.Windows.DependencyObject" /> 上具有本機設定的值。</summary>
      <returns vsli:raw="A specialized local value enumerator.">特定的區域數值列舉值。</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)">
      <summary vsli:raw="Returns the current effective value of a dependency property on this instance of a &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">傳回 <see cref="T:System.Windows.DependencyObject" /> 的這個執行個體上之相依性屬性的目前有效值。</summary>
      <param name="dp" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier of the property to retrieve the value for.">要為其擷取值之屬性的 <see cref="T:System.Windows.DependencyProperty" /> 識別項。</param>
      <returns vsli:raw="Returns the current effective value.">傳回目前的有效值。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The specified &lt;paramref name=&quot;dp&quot; /&gt; or its value was invalid, or the specified &lt;paramref name=&quot;dp&quot; /&gt; does not exist.">指定的 <paramref name="dp" /> 或其值無效，或是指定的 <paramref name="dp" /> 不存在。</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)">
      <summary vsli:raw="Re-evaluates the effective value for the specified dependency property.">重新評估指定之相依性屬性的有效值。</summary>
      <param name="dp" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier of the property to invalidate.">要使其失效之屬性的 <see cref="T:System.Windows.DependencyProperty" /> 識別項。</param>
    </member>
    <member name="P:System.Windows.DependencyObject.IsSealed">
      <summary vsli:raw="Gets a value that indicates whether this instance is currently sealed (read-only).">取得值，這個值表示此執行個體目前是否已密封 (唯讀)。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this instance is sealed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果這個執行個體已密封則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary vsli:raw="Invoked whenever the effective value of any dependency property on this &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; has been updated. The specific dependency property that changed is reported in the event data.">每當這個 <see cref="T:System.Windows.DependencyObject" /> 上任何相依性屬性的有效值已更新時叫用。 已變更的特定相依性屬性會在事件資料中報告。</summary>
      <param name="e" vsli:raw="Event data that will contain the dependency property identifier of interest, the property metadata for the type, and old and new values.">事件資料，其中包含相關的相依性屬性識別項、型別的屬性中繼資料，以及舊值和新值。</param>
    </member>
    <member name="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)">
      <summary vsli:raw="Returns the local value of a dependency property, if it exists.">傳回相依性屬性的區域值 (如果存在)。</summary>
      <param name="dp" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier of the property to retrieve the value for.">要為其擷取值之屬性的 <see cref="T:System.Windows.DependencyProperty" /> 識別項。</param>
      <returns vsli:raw="Returns the local value, or returns the sentinel value &lt;see cref=&quot;F:System.Windows.DependencyProperty.UnsetValue&quot; /&gt; if no local value is set.">傳回區域數值，若區域數值並未設定，則傳回 Sentinel 值 <see cref="F:System.Windows.DependencyProperty.UnsetValue" />。</returns>
    </member>
    <member name="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)">
      <summary vsli:raw="Sets the value of a dependency property without changing its value source.">設定相依性屬性的值，而不需要變更其值來源。</summary>
      <param name="dp" vsli:raw="The identifier of the dependency property to set.">要設定之相依性屬性的識別項。</param>
      <param name="value" vsli:raw="The new local value.">新區域數值。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Attempted to modify a read-only dependency property, or a property on a sealed &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">嘗試修改唯讀的相依性屬性，或密封的 <see cref="T:System.Windows.DependencyObject" /> 上的屬性。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; was not the correct type as registered for the &lt;paramref name=&quot;dp&quot; /&gt; property.">
        <paramref name="value" /> 不是如同為 <paramref name="dp" /> 屬性所註冊的正確型別。</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)">
      <summary vsli:raw="Sets the local value of a dependency property, specified by its dependency property identifier.">設定相依性屬性的區域值 (由相依性屬性的識別碼所指定)。</summary>
      <param name="dp" vsli:raw="The identifier of the dependency property to set.">要設定之相依性屬性的識別項。</param>
      <param name="value" vsli:raw="The new local value.">新區域數值。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Attempted to modify a read-only dependency property, or a property on a sealed &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">嘗試修改唯讀的相依性屬性，或密封的 <see cref="T:System.Windows.DependencyObject" /> 上的屬性。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; was not the correct type as registered for the &lt;paramref name=&quot;dp&quot; /&gt; property.">
        <paramref name="value" /> 不是如同為 <paramref name="dp" /> 屬性所註冊的正確型別。</exception>
    </member>
    <member name="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)">
      <summary vsli:raw="Sets the local value of a read-only dependency property, specified by the &lt;see cref=&quot;T:System.Windows.DependencyPropertyKey&quot; /&gt; identifier of the dependency property.">設定唯讀相依性屬性的區域數值 (由相依性屬性的 <see cref="T:System.Windows.DependencyPropertyKey" /> 識別項所指定)。</summary>
      <param name="key" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyPropertyKey&quot; /&gt; identifier of the property to set.">要設定之屬性的 <see cref="T:System.Windows.DependencyPropertyKey" /> 識別項。</param>
      <param name="value" vsli:raw="The new local value.">新區域數值。</param>
    </member>
    <member name="M:System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)">
      <summary vsli:raw="Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.">傳回值，這個值表示序列化程序是否應該序列化所提供相依性屬性的值。</summary>
      <param name="dp" vsli:raw="The identifier for the dependency property that should be serialized.">應序列化之相依性屬性的識別項。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the dependency property that is supplied should be value-serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果提供之相依性屬性的值應該序列化則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.DependencyObjectType">
      <summary vsli:raw="Implements an underlying type cache for all &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; derived types.">實作針對所有 <see cref="T:System.Windows.DependencyObject" /> 衍生型別 (Derived Type) 的基礎型別快取。</summary>
    </member>
    <member name="P:System.Windows.DependencyObjectType.BaseType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; of the immediate base class of the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">取得目前 <see cref="T:System.Windows.DependencyObjectType" /> 之直接基底類別的 <see cref="T:System.Windows.DependencyObjectType" />。</summary>
      <returns vsli:raw="The type of the base class.">基底類別的型別。</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectType.FromSystemType(System.Type)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; that represents a given system (CLR) type.">傳回 <see cref="T:System.Windows.DependencyObjectType" />，表示指定的系統 (CLR) 型別。</summary>
      <param name="systemType" vsli:raw="The system (CLR) type to convert.">要轉換的系統 (CLR) 型別。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; that represents the system (CLR) type.">
        <see cref="T:System.Windows.DependencyObjectType" />，表示系統 (CLR) 型別。</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectType.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">傳回這個 <see cref="T:System.Windows.DependencyObjectType" /> 的雜湊程式碼。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 位元帶正負號的整數雜湊碼。</returns>
    </member>
    <member name="P:System.Windows.DependencyObjectType.Id">
      <summary vsli:raw="Gets a zero-based unique identifier for constant-time array lookup operations.">取得常數時間陣列查閱作業之以零起始的唯一識別項。</summary>
      <returns vsli:raw="An internal identifier.">內部識別項。</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectType.IsInstanceOfType(System.Windows.DependencyObject)">
      <summary vsli:raw="Determines whether the specified object is an instance of the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">判斷指定的物件是否為目前 <see cref="T:System.Windows.DependencyObjectType" /> 的執行個體。</summary>
      <param name="dependencyObject" vsli:raw="The object to compare with the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">要與目前 <see cref="T:System.Windows.DependencyObjectType" /> 比較的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the class represented by the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; is in the inheritance hierarchy of the &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; passed as &lt;paramref name=&quot;d&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果目前 <see cref="T:System.Windows.DependencyObjectType" /> 所表示的類別位於以 <paramref name="d" /> 形式傳遞之 <see cref="T:System.Windows.DependencyObject" /> 的繼承階層架構中，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.DependencyObjectType.IsSubclassOf(System.Windows.DependencyObjectType)">
      <summary vsli:raw="Determines whether the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; derives from the specified &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">判斷目前 <see cref="T:System.Windows.DependencyObjectType" /> 是否衍生自指定的 <see cref="T:System.Windows.DependencyObjectType" />。</summary>
      <param name="dependencyObjectType" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; to compare.">要比較的 <see cref="T:System.Windows.DependencyObjectType" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;dependencyObjectType&quot; /&gt; parameter and the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; represent types of classes, and the class represented by the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; derives from the class represented by &lt;paramref name=&quot;dependencyObjectType&quot; /&gt;. Otherwise, &lt;see langword=&quot;false&quot; /&gt;. This method also returns &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;dependencyObjectType&quot; /&gt; and the current &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; represent the same class.">如果 <paramref name="dependencyObjectType" /> 參數和目前的 <see cref="T:System.Windows.DependencyObjectType" /> 表示類別的型別，而且目前的 <see cref="T:System.Windows.DependencyObjectType" /> 所表示的類別衍生自 <paramref name="dependencyObjectType" /> 所表示的類別，則為 <see langword="true" />。 否則為 <see langword="false" />。 如果 <paramref name="dependencyObjectType" /> 和目前的 <see cref="T:System.Windows.DependencyObjectType" /> 皆表示相同的類別，這個方法也會傳回 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.DependencyObjectType.Name">
      <summary vsli:raw="Gets the name of the represented common language runtime (CLR) system type.">取得所表示之 通用語言執行平台 (CLR) 系統型別的名稱。</summary>
      <returns vsli:raw="The name of the represented CLR system type.">所表示之 CLR 系統型別的名稱。</returns>
    </member>
    <member name="P:System.Windows.DependencyObjectType.SystemType">
      <summary vsli:raw="Gets the common language runtime (CLR) system type represented by this &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">取得這個 <see cref="T:System.Windows.DependencyObjectType" /> 所表示的 通用語言執行平台 (CLR) 系統型別。</summary>
      <returns vsli:raw="The CLR system type represented by this &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt;.">這個 <see cref="T:System.Windows.DependencyObjectType" /> 所表示的 CLR 系統型別。</returns>
    </member>
    <member name="T:System.Windows.DependencyProperty">
      <summary vsli:raw="Represents a property that can be set through methods such as, styling, data binding, animation, and inheritance.">代表可以透過方法設定的屬性，例如樣式、資料繫結、動畫和繼承。</summary>
    </member>
    <member name="M:System.Windows.DependencyProperty.AddOwner(System.Type)">
      <summary vsli:raw="Adds another type as an owner of a dependency property that has already been registered.">加入其他類型，作為已註冊之相依性屬性的擁有者。</summary>
      <param name="ownerType" vsli:raw="The type to add as an owner of this dependency property.">要加入為此相依性屬性之擁有者的類型。</param>
      <returns vsli:raw="A reference to the original &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier that identifies the dependency property. This identifier should be exposed by the adding class as a &lt;see langword=&quot;public static readonly&quot; /&gt; field.">原始 <see cref="T:System.Windows.DependencyProperty" /> 識別項的參考，它識別相依性屬性。 應該藉由加入類別作為 <see langword="public static readonly" /> 欄位來公開此識別項。</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.AddOwner(System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Adds another type as an owner of a dependency property that has already been registered, providing dependency property metadata for the dependency property as it will exist on the provided owner type.">加入另一個類型作為已註冊的相依性屬性的擁有者，並提供在所提供擁有者類型上存在之相依性屬性的相依性屬性中繼資料。</summary>
      <param name="ownerType" vsli:raw="The type to add as owner of this dependency property.">要加入為此相依性屬性之擁有者的類型。</param>
      <param name="typeMetadata" vsli:raw="The metadata that qualifies the dependency property as it exists on the provided type.">限定存在於所提供類型之相依性屬性的中繼資料。</param>
      <returns vsli:raw="A reference to the original &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier that identifies the dependency property. This identifier should be exposed by the adding class as a &lt;see langword=&quot;public static readonly&quot; /&gt; field.">原始 <see cref="T:System.Windows.DependencyProperty" /> 識別項的參考，它識別相依性屬性。 應該藉由加入類別作為 <see langword="public static readonly" /> 欄位來公開此識別項。</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.DefaultMetadata">
      <summary vsli:raw="Gets the default metadata of the dependency property.">取得相依性屬性的預設中繼資料。</summary>
      <returns vsli:raw="The default metadata of the dependency property.">相依性屬性的預設中繼資料。</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetHashCode">
      <summary vsli:raw="Returns a hash code for this &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt;.">傳回這個 <see cref="T:System.Windows.DependencyProperty" /> 的雜湊程式碼。</summary>
      <returns vsli:raw="The hash code for this &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt;.">這個 <see cref="T:System.Windows.DependencyProperty" /> 的雜湊程式碼。</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetMetadata(System.Type)">
      <summary vsli:raw="Returns the metadata for this dependency property as it exists on a specified existing type.">傳回這個相依性屬性的中繼資料，因為這個屬性位於指定的現有類型。</summary>
      <param name="forType" vsli:raw="The specific type from which to retrieve the dependency property metadata.">要從中擷取相依性屬性中繼資料的特定類型。</param>
      <returns vsli:raw="A property metadata object.">屬性中繼資料物件。</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetMetadata(System.Windows.DependencyObject)">
      <summary vsli:raw="Returns the metadata for this dependency property as it exists on the specified object instance.">傳回這個相依性屬性的中繼資料，因為這個屬性位於指定的物件執行個體。</summary>
      <param name="dependencyObject" vsli:raw="A dependency object that is checked for type, to determine which type-specific version of the dependency property the metadata should come from.">檢查了相依性物件的類型，以判斷中繼資料應該來自於相依性屬性的哪一個特定類型版本。</param>
      <returns vsli:raw="A property metadata object.">屬性中繼資料物件。</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.GetMetadata(System.Windows.DependencyObjectType)">
      <summary vsli:raw="Returns the metadata for this dependency property as it exists on a specified type.">傳回存在於所指定類型之這個相依性屬性的中繼資料。</summary>
      <param name="dependencyObjectType" vsli:raw="A specific object that records the dependency object type from which the dependency property metadata is desired.">記錄需要相依性屬性中繼資料之相依性物件類型的特定物件。</param>
      <returns vsli:raw="A property metadata object.">屬性中繼資料物件。</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.GlobalIndex">
      <summary vsli:raw="Gets an internally generated value that uniquely identifies the dependency property.">取得可唯一識別相依性屬性的內部產生值。</summary>
      <returns vsli:raw="A unique numeric identifier.">唯一數值識別項。</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.IsValidType(System.Object)">
      <summary vsli:raw="Determines whether a specified value is acceptable for this dependency property's type, as checked against the property type provided in the original dependency property registration.">根據原始相依性屬性註冊所提供的屬性型別檢查這個相依性屬性的型別，判斷此型別是否接受指定的值。</summary>
      <param name="value" vsli:raw="The value to check.">要檢查的值。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified value is the registered property type or an acceptable derived type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的值為註冊的屬性型別或可接受的衍生型別則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.IsValidValue(System.Object)">
      <summary vsli:raw="Determines whether the provided value is accepted for the type of property through basic type checking, and also potentially if it is within the allowed range of values for that type.">透過基本型別檢查，判斷屬性型別是否接受所提供的值，並在必要時判斷此值是否位於該型別的允許值範圍內。</summary>
      <param name="value" vsli:raw="The value to check.">要檢查的值。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value is acceptable and is of the correct type or a derived type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果此值可被接受且屬於正確型別或衍生型別，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.Name">
      <summary vsli:raw="Gets the name of the dependency property.">取得相依性屬性的名稱。</summary>
      <returns vsli:raw="The name of the property.">屬性的名稱。</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.OverrideMetadata(System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Specifies alternate metadata for this dependency property when it is present on instances of a specified type, overriding the metadata that existed for the dependency property as it was inherited from base types.">當這個相依性屬性出現在所指定類型的執行個體中時，指定其替代中繼資料，並覆寫從基底類型繼承時存在的相依性屬性中繼資料。</summary>
      <param name="forType" vsli:raw="The type where this dependency property is inherited and where the provided alternate metadata will be applied.">繼承這個相依性屬性，且將套用所提供替代中繼資料的類型。</param>
      <param name="typeMetadata" vsli:raw="The metadata to apply to the dependency property on the overriding type.">要套用至覆寫類型上相依性屬性的中繼資料。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt was made to override metadata on a read-only dependency property (that operation cannot be done using this signature).">嘗試覆寫唯讀相依性屬性的中繼資料 (無法使用此簽章完成作業)。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Metadata was already established for the dependency property as it exists on the provided type.">已經建立相依性屬性的中繼資料，因為它存在於所提供的類型。</exception>
    </member>
    <member name="M:System.Windows.DependencyProperty.OverrideMetadata(System.Type,System.Windows.PropertyMetadata,System.Windows.DependencyPropertyKey)">
      <summary vsli:raw="Supplies alternate metadata for a read-only dependency property when it is present on instances of a specified type, overriding the metadata that was provided in the initial dependency property registration. You must pass the &lt;see cref=&quot;T:System.Windows.DependencyPropertyKey&quot; /&gt; for the read-only dependency property to avoid raising an exception.">當它出現在所指定類型的執行個體，覆寫在初始相依性屬性登錄中所提供的中繼資料時，提供唯讀相依性屬性的替代中繼資料。 您必須傳遞唯讀相依性屬性的 <see cref="T:System.Windows.DependencyPropertyKey" />，以避免引發例外狀況。</summary>
      <param name="forType" vsli:raw="The type where this dependency property is inherited and where the provided alternate metadata will be applied.">繼承這個相依性屬性，且將套用所提供替代中繼資料的類型。</param>
      <param name="typeMetadata" vsli:raw="The metadata to apply to the dependency property on the overriding type.">要套用至覆寫類型上相依性屬性的中繼資料。</param>
      <param name="key" vsli:raw="The access key for a read-only dependency property.">唯讀相依性屬性的存取索引鍵。</param>
    </member>
    <member name="P:System.Windows.DependencyProperty.OwnerType">
      <summary vsli:raw="Gets the type of the object that registered the dependency property with the property system, or added itself as owner of the property.">取得對屬性系統註冊相依性屬性之物件，或將本身作為屬性擁有者加入之物件的類型。</summary>
      <returns vsli:raw="The type of the object that registered the property or added itself as owner of the property.">註冊屬性或將本身作為屬性擁有者加入的物件類型。</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.PropertyType">
      <summary vsli:raw="Gets the type that the dependency property uses for its value.">取得相依性屬性用於其值的型別。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the property value.">屬性值的 <see cref="T:System.Type" />。</returns>
    </member>
    <member name="P:System.Windows.DependencyProperty.ReadOnly">
      <summary vsli:raw="Gets a value that indicates whether the dependency property identified by this &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; instance is a read-only dependency property.">取得值，這個值表示此 <see cref="T:System.Windows.DependencyProperty" /> 執行個體所識別的相依性屬性是否為唯讀相依性屬性。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the dependency property is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果相依性屬性為唯讀則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.Register(System.String,System.Type,System.Type)">
      <summary vsli:raw="Registers a dependency property with the specified property name, property type, and owner type.">使用指定的屬性名稱、屬性類型和擁有者類型以註冊相依性屬性。</summary>
      <param name="name" vsli:raw="The name of the dependency property to register. The name must be unique within the registration namespace of the owner type.">要註冊之相依性屬性的名稱。 名稱在擁有者類型的註冊命名空間內必須是唯一的。</param>
      <param name="propertyType" vsli:raw="The type of the property.">屬性的類型。</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">正在註冊相依性屬性的擁有者類型。</param>
      <returns vsli:raw="A dependency property identifier that should be used to set the value of a &lt;see langword=&quot;public static readonly&quot; /&gt; field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.">應該用來設定類別之 <see langword="public static readonly" /> 欄位值的相依性屬性的識別項。 若為以程式設計方式設定其值或取得中繼資料等的作業，之後就會用識別項參考相依性屬性。</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.Register(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Registers a dependency property with the specified property name, property type, owner type, and property metadata.">請使用指定的屬性名稱、屬性類型、擁有者類型和屬性中繼資料登錄相依性屬性。</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">要註冊之相依性屬性的名稱。</param>
      <param name="propertyType" vsli:raw="The type of the property.">屬性的類型。</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">正在註冊相依性屬性的擁有者類型。</param>
      <param name="typeMetadata" vsli:raw="Property metadata for the dependency property.">相依性屬性的屬性中繼資料。</param>
      <returns vsli:raw="A dependency property identifier that should be used to set the value of a &lt;see langword=&quot;public static readonly&quot; /&gt; field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.">應該用來設定類別之 <see langword="public static readonly" /> 欄位值的相依性屬性的識別項。 若為以程式設計方式設定其值或取得中繼資料等的作業，之後就會用識別項參考相依性屬性。</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.Register(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
      <summary vsli:raw="Registers a dependency property with the specified property name, property type, owner type, property metadata, and a value validation callback for the property.">使用指定的屬性名稱、屬性類型、擁有者類型、屬性中繼資料和屬性的值驗證回呼，註冊相依性屬性。</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">要註冊之相依性屬性的名稱。</param>
      <param name="propertyType" vsli:raw="The type of the property.">屬性的類型。</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">正在註冊相依性屬性的擁有者類型。</param>
      <param name="typeMetadata" vsli:raw="Property metadata for the dependency property.">相依性屬性的屬性中繼資料。</param>
      <param name="validateValueCallback" vsli:raw="A reference to a callback that should perform any custom validation of the dependency property value beyond typical type validation.">回呼的參考，應該執行對相依性屬性值之一般類型驗證以外的任何自訂驗證。</param>
      <returns vsli:raw="A dependency property identifier that should be used to set the value of a &lt;see langword=&quot;public static readonly&quot; /&gt; field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.">應該用來設定類別之 <see langword="public static readonly" /> 欄位值的相依性屬性的識別項。 若為以程式設計方式設定其值或取得中繼資料等的作業，之後就會用識別項參考相依性屬性。</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type)">
      <summary vsli:raw="Registers an attached property with the specified property name, property type, and owner type.">使用指定的屬性名稱、屬性類型和擁有者類型以註冊附加屬性。</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">要註冊之相依性屬性的名稱。</param>
      <param name="propertyType" vsli:raw="The type of the property.">屬性的類型。</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">正在註冊相依性屬性的擁有者類型。</param>
      <returns vsli:raw="A dependency property identifier that should be used to set the value of a &lt;see langword=&quot;public static readonly&quot; /&gt; field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.">應該用來設定類別之 <see langword="public static readonly" /> 欄位值的相依性屬性的識別項。 若為以程式設計方式設定其值或取得中繼資料等的作業，之後就會用識別項參考相依性屬性。</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Registers an attached property with the specified property name, property type, owner type, and property metadata.">請使用指定的屬性名稱、屬性類型、擁有者類型和屬性中繼資料登錄附加的屬性。</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">要註冊之相依性屬性的名稱。</param>
      <param name="propertyType" vsli:raw="The type of the property.">屬性的類型。</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">正在註冊相依性屬性的擁有者類型。</param>
      <param name="defaultMetadata" vsli:raw="Property metadata for the dependency property. This can include the default value as well as other characteristics.">相依性屬性的屬性中繼資料。 這可以包含預設值及其他特性。</param>
      <returns vsli:raw="A dependency property identifier that should be used to set the value of a &lt;see langword=&quot;public static readonly&quot; /&gt; field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.">應該用來設定類別之 <see langword="public static readonly" /> 欄位值的相依性屬性的識別項。 若為以程式設計方式設定其值或取得中繼資料等的作業，之後就會用識別項參考相依性屬性。</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
      <summary vsli:raw="Registers an attached property with the specified property type, owner type, property metadata, and value validation callback for the property.">使用指定的屬性類型、擁有者類型、屬性中繼資料以及屬性的值驗證回呼，註冊附加屬性。</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">要註冊之相依性屬性的名稱。</param>
      <param name="propertyType" vsli:raw="The type of the property.">屬性的類型。</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">正在註冊相依性屬性的擁有者類型。</param>
      <param name="defaultMetadata" vsli:raw="Property metadata for the dependency property. This can include the default value as well as other characteristics.">相依性屬性的屬性中繼資料。 這可以包含預設值及其他特性。</param>
      <param name="validateValueCallback" vsli:raw="A reference to a callback that should perform any custom validation of the dependency property value beyond typical type validation.">回呼的參考，應該執行對相依性屬性值之一般類型驗證以外的任何自訂驗證。</param>
      <returns vsli:raw="A dependency property identifier that should be used to set the value of a &lt;see langword=&quot;public static readonly&quot; /&gt; field in your class. That identifier is then used to reference the dependency property later, for operations such as setting its value programmatically or obtaining metadata.">應該用來設定類別之 <see langword="public static readonly" /> 欄位值的相依性屬性的識別項。 若為以程式設計方式設定其值或取得中繼資料等的作業，之後就會用識別項參考相依性屬性。</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttachedReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Registers a read-only attached property, with the specified property type, owner type, and property metadata.">註冊具有指定屬性類型、擁有者類型和屬性中繼資料的唯讀附加屬性。</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">要註冊之相依性屬性的名稱。</param>
      <param name="propertyType" vsli:raw="The type of the property.">屬性的類型。</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">正在註冊相依性屬性的擁有者類型。</param>
      <param name="defaultMetadata" vsli:raw="Property metadata for the dependency property.">相依性屬性的屬性中繼資料。</param>
      <returns vsli:raw="A dependency property key that should be used to set the value of a static read-only field in your class, which is then used to reference the dependency property later.">應該用來設定類別中靜態唯讀欄位值的相依性屬性索引鍵，其將在稍後用於參考相依性屬性。</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterAttachedReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
      <summary vsli:raw="Registers a read-only attached property, with the specified property type, owner type, property metadata, and a validation callback.">使用指定的屬性類型、擁有者類型、屬性中繼資料和驗證回呼，註冊一個唯讀附加屬性。</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">要註冊之相依性屬性的名稱。</param>
      <param name="propertyType" vsli:raw="The type of the property.">屬性的類型。</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">正在註冊相依性屬性的擁有者類型。</param>
      <param name="defaultMetadata" vsli:raw="Property metadata for the dependency property.">相依性屬性的屬性中繼資料。</param>
      <param name="validateValueCallback" vsli:raw="A reference to a user-created callback that should perform any custom validation of the dependency property value beyond typical type validation.">使用者建立回呼的參考，除了一般類型驗證以外，還應執行相依性屬性值的任何自訂驗證。</param>
      <returns vsli:raw="A dependency property key that should be used to set the value of a static read-only field in your class, which is then used to reference the dependency property.">相依性屬性索引鍵，應該用來在您的類別中設定靜態唯獨欄位值，然後用來參考相依性屬性。</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Registers a read-only dependency property, with the specified property type, owner type, and property metadata.">使用指定的屬性類型、擁有者類型和屬性中繼資料登錄唯讀相依性屬性。</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">要註冊之相依性屬性的名稱。</param>
      <param name="propertyType" vsli:raw="The type of the property.">屬性的類型。</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">正在註冊相依性屬性的擁有者類型。</param>
      <param name="typeMetadata" vsli:raw="Property metadata for the dependency property.">相依性屬性的屬性中繼資料。</param>
      <returns vsli:raw="A dependency property key that should be used to set the value of a static read-only field in your class, which is then used to reference the dependency property.">相依性屬性索引鍵，應該用來在您的類別中設定靜態唯獨欄位值，然後用來參考相依性屬性。</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.RegisterReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
      <summary vsli:raw="Registers a read-only dependency property, with the specified property type, owner type, property metadata, and a validation callback.">使用指定的屬性類型、擁有者類型、屬性中繼資料和驗證回呼登錄唯讀相依性屬性。</summary>
      <param name="name" vsli:raw="The name of the dependency property to register.">要註冊之相依性屬性的名稱。</param>
      <param name="propertyType" vsli:raw="The type of the property.">屬性的類型。</param>
      <param name="ownerType" vsli:raw="The owner type that is registering the dependency property.">正在註冊相依性屬性的擁有者類型。</param>
      <param name="typeMetadata" vsli:raw="Property metadata for the dependency property.">相依性屬性的屬性中繼資料。</param>
      <param name="validateValueCallback" vsli:raw="A reference to a user-created callback that should perform any custom validation of the dependency property value beyond typical type validation.">使用者建立回呼的參考，除了一般類型驗證以外，還應執行相依性屬性值的任何自訂驗證。</param>
      <returns vsli:raw="A dependency property key that should be used to set the value of a static read-only field in your class, which is then used to reference the dependency property later.">應該用來設定類別中靜態唯讀欄位值的相依性屬性索引鍵，其將在稍後用於參考相依性屬性。</returns>
    </member>
    <member name="M:System.Windows.DependencyProperty.ToString">
      <summary vsli:raw="Returns the string representation of the dependency property.">傳回相依性屬性的字串表示。</summary>
      <returns vsli:raw="The string representation of the dependency property.">相依性屬性的字串表示。</returns>
    </member>
    <member name="F:System.Windows.DependencyProperty.UnsetValue">
      <summary vsli:raw="Specifies a static value that is used by the WPF property system rather than &lt;see langword=&quot;null&quot; /&gt; to indicate that the property exists, but does not have its value set by the property system.">指定 WPF 屬性系統所使用的靜態值，而非指定 <see langword="null" />，以表示屬性已存在，但屬性系統尚未設定其值。</summary>
    </member>
    <member name="P:System.Windows.DependencyProperty.ValidateValueCallback">
      <summary vsli:raw="Gets the value validation callback for the dependency property.">取得相依性屬性的值驗證回呼。</summary>
      <returns vsli:raw="The value validation callback for this dependency property, as provided for the &lt;paramref name=&quot;validateValueCallback&quot; /&gt; parameter in the original dependency property registration.">這個相依性屬性的值驗證回呼，如同在原始相依性屬性註冊中為 <paramref name="validateValueCallback" /> 參數所提供的。</returns>
    </member>
    <member name="T:System.Windows.DependencyPropertyChangedEventArgs">
      <summary vsli:raw="Provides data for various property changed events. Typically these events report effective value changes in the value of a read-only dependency property. Another usage is as part of a &lt;see cref=&quot;T:System.Windows.PropertyChangedCallback&quot; /&gt; implementation.">提供各種屬性變更事件的資料。 這些事件通常會報告唯讀相依性屬性值中的有效值變更。 此外，也可以當做 <see cref="T:System.Windows.PropertyChangedCallback" /> 實作的一部分來使用。</summary>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.#ctor(System.Windows.DependencyProperty,System.Object,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; class.">初始化 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> 類別的新執行個體。</summary>
      <param name="property" vsli:raw="The identifier for the dependency property that changed.">變更之相依性屬性的識別項。</param>
      <param name="oldValue" vsli:raw="The value of the property before the change reported by the relevant event or state change.">在相關事件或狀態變更報告變更之前的屬性值。</param>
      <param name="newValue" vsli:raw="The value of the property after the change reported by the relevant event or state change.">在相關事件或狀態變更報告變更之後的屬性值。</param>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Object)">
      <summary vsli:raw="Determines whether the provided object is equivalent to the current &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;.">判斷提供的物件和目前的 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> 是否相等。</summary>
      <param name="obj" vsli:raw="The object to compare to the current &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;.">要與目前 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> 比較的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the provided object is equivalent to the current &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果提供的物件相當於目前的 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />物件則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary vsli:raw="Determines whether the provided &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; is equivalent to the current &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;.">判斷提供的 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> 和目前的 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> 是否相等。</summary>
      <param name="args" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; to compare to the current &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;.">
        <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />，要與目前的 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> 比較</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the provided &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; is equivalent to the current &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果提供的 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> 物件相當於目前的 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> 物件則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.GetHashCode">
      <summary vsli:raw="Gets a hash code  for this &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt;.">取得這個 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> 的雜湊碼。</summary>
      <returns vsli:raw="A signed 32-bit integer hash code.">帶正負號的 32 位元整數雜湊程式碼。</returns>
    </member>
    <member name="P:System.Windows.DependencyPropertyChangedEventArgs.NewValue">
      <summary vsli:raw="Gets the value of the property after the change.">取得變更後的屬性值。</summary>
      <returns vsli:raw="The property value after the change.">變更後的屬性值。</returns>
    </member>
    <member name="P:System.Windows.DependencyPropertyChangedEventArgs.OldValue">
      <summary vsli:raw="Gets the value of the property before the change.">取得變更前的屬性值。</summary>
      <returns vsli:raw="The property value before the change.">變更前的屬性值。</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.op_Equality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; objects have the same value.">判斷兩個指定的 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> 物件是否具有相同的值。</summary>
      <param name="left" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; to compare.">要比較的第一個 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />。</param>
      <param name="right" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; to compare.">要比較的第二個 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; instances are equivalent; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果兩個 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> 執行個體相等則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyChangedEventArgs.op_Inequality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; objects are different.">判斷兩個指定的 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> 物件是否不相等。</summary>
      <param name="left" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; to compare.">要比較的第一個 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />。</param>
      <param name="right" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; to compare.">要比較的第二個 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Windows.DependencyPropertyChangedEventArgs&quot; /&gt; instances are different; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果兩個 <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> 執行個體不相等則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.DependencyPropertyChangedEventArgs.Property">
      <summary vsli:raw="Gets the identifier for the dependency property where the value change occurred.">取得發生值變更之相依性屬性的識別項。</summary>
      <returns vsli:raw="The identifier field of the dependency property where the value change occurred.">發生值變更之相依性屬性的識別項欄位。</returns>
    </member>
    <member name="T:System.Windows.DependencyPropertyChangedEventHandler">
      <summary vsli:raw="Represents the method that will handle events raised when a &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; is changed on a particular &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; implementation.">代表方法，該方法將處理 <see cref="T:System.Windows.DependencyProperty" /> 在特定 <see cref="T:System.Windows.DependencyObject" /> 實作上變更時引發的事件。</summary>
      <param name="sender" vsli:raw="The source of the event.">事件的來源。</param>
      <param name="e" vsli:raw="The event data.">事件資料。</param>
    </member>
    <member name="T:System.Windows.DependencyPropertyKey">
      <summary vsli:raw="Provides a dependency property identifier for limited write access to a read-only dependency property.">為唯讀相依性屬性的有限寫入權限提供相依性屬性識別項。</summary>
    </member>
    <member name="P:System.Windows.DependencyPropertyKey.DependencyProperty">
      <summary vsli:raw="Gets the dependency property identifier associated with this specialized read-only dependency property identifier.">取得與這個特定的相依性屬性識別項關聯的相依性屬性識別項。</summary>
      <returns vsli:raw="The relevant dependency property identifier.">相關的相依性屬性識別項。</returns>
    </member>
    <member name="M:System.Windows.DependencyPropertyKey.OverrideMetadata(System.Type,System.Windows.PropertyMetadata)">
      <summary vsli:raw="Overrides the metadata of a read-only dependency property that is represented by this dependency property identifier.">覆寫由相依性屬性識別項表示之唯讀相依性屬性的中繼資料。</summary>
      <param name="forType" vsli:raw="The type on which this dependency property exists and metadata should be overridden.">這個相依性屬性所存在以及中繼資料應該覆寫的型別。</param>
      <param name="typeMetadata" vsli:raw="Metadata supplied for this type.">為這個型別提供的中繼資料。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Attempted metadata override on a read-write dependency property (cannot be done using this signature).">嘗試覆寫唯讀相依性屬性的中繼資料 (無法使用這個簽章執行)。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Metadata was already established for the property as it exists on the provided type.">已為存在於所提供之型別的屬性建立中繼資料。</exception>
    </member>
    <member name="T:System.Windows.Expression">
      <summary vsli:raw="This type supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.">這個類型支援 Windows Presentation Foundation (WPF) 基礎結構，但並不適合直接透過您的程式碼使用。</summary>
    </member>
    <member name="T:System.Windows.ExpressionConverter">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.Windows.Expression&quot; /&gt; to and from other types.">將 <see cref="T:System.Windows.Expression" /> 執行個體 (Instance) 來回轉換成其他型別。</summary>
    </member>
    <member name="M:System.Windows.ExpressionConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.ExpressionConverter&quot; /&gt; class.">初始化 <see cref="T:System.Windows.ExpressionConverter" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Windows.ExpressionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Returns whether this converter can convert from a source object to an &lt;see cref=&quot;T:System.Windows.Expression&quot; /&gt; object.">傳回這個轉換子是否可以將來源物件轉換成 <see cref="T:System.Windows.Expression" /> 物件。</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">提供格式內容的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="sourceType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the type you wish to convert from.">
        <see cref="T:System.Type" />，表示要轉換的來源型別。</param>
      <returns vsli:raw="Always &lt;see langword=&quot;false&quot; /&gt;.">一定是 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.ExpressionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Returns whether this converter can convert an &lt;see cref=&quot;T:System.Windows.Expression&quot; /&gt; object to a specific destination type.">傳回這個轉換子是否可以將 <see cref="T:System.Windows.Expression" /> 物件轉換成特定目的型別。</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">提供格式內容的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="destinationType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the type you wish to convert to.">
        <see cref="T:System.Type" />，表示要轉換為何種目標型別。</param>
      <returns vsli:raw="Always &lt;see langword=&quot;false&quot; /&gt;.">一定是 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.ExpressionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts the provided value to the &lt;see cref=&quot;T:System.Windows.Expression&quot; /&gt; type.">將提供的值轉換為 <see cref="T:System.Windows.Expression" /> 型別。</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">提供格式內容的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; to use as the current culture.">要用作目前文化特性的 <see cref="T:System.Globalization.CultureInfo" />。</param>
      <param name="value" vsli:raw="The object to convert.">要轉換的物件。</param>
      <returns vsli:raw="Always throws an exception and returns &lt;see langword=&quot;null&quot; /&gt;.">一律擲回例外狀況並傳回 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.ExpressionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts the provided &lt;see cref=&quot;T:System.Windows.Expression&quot; /&gt; object to the specified type.">將提供的 <see cref="T:System.Windows.Expression" /> 物件轉換為指定的型別。</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">提供格式內容的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; to use as the current culture.">要用作目前文化特性的 <see cref="T:System.Globalization.CultureInfo" />。</param>
      <param name="value" vsli:raw="The object to convert.">要轉換的物件。</param>
      <param name="destinationType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the type you wish to convert to.">
        <see cref="T:System.Type" />，表示要轉換為何種目標型別。</param>
      <returns vsli:raw="Always throws an exception and returns &lt;see langword=&quot;null&quot; /&gt;.">一律擲回例外狀況並傳回 <see langword="null" />。</returns>
    </member>
    <member name="T:System.Windows.Freezable">
      <summary vsli:raw="Defines an object that has a modifiable state and a read-only (frozen) state. Classes that derive from &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; provide detailed change notification, can be made immutable, and can clone themselves.">定義具有可修改狀態和唯讀 (凍結) 狀態的物件。 衍生自 <see cref="T:System.Windows.Freezable" /> 的類別可以提供詳細變更告知、可以設為不變的，而且可以自我複製。</summary>
    </member>
    <member name="M:System.Windows.Freezable.#ctor">
      <summary vsli:raw="Initializes a new instance of a &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; derived class.">初始化 <see cref="T:System.Windows.Freezable" /> 衍生類別的新執行個體。</summary>
    </member>
    <member name="P:System.Windows.Freezable.CanFreeze">
      <summary vsli:raw="Gets a value that indicates whether the object can be made unmodifiable.">取得值，指出是否可以將物件設為不可修改。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current object can be made unmodifiable or is already unmodifiable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果可以將目前的物件設為不可修改，或是目前的物件已經不可修改，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="E:System.Windows.Freezable.Changed">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; or an object it contains is modified.">發生於 <see cref="T:System.Windows.Freezable" /> 或所含的物件遭到修改時。</summary>
    </member>
    <member name="M:System.Windows.Freezable.Clone">
      <summary vsli:raw="Creates a modifiable clone of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt;, making deep copies of the object's values. When copying the object's dependency properties, this method copies expressions (which might no longer resolve) but not animations or their current values.">建立這個 <see cref="T:System.Windows.Freezable" /> 的可修改複製，製作這個物件值的深層複製。 當複製這個物件的相依性屬性時，這個方法會複製運算式 (但可能已不再解析)，但不會複製動畫或其目前值。</summary>
      <returns vsli:raw="A modifiable clone of the current object. The cloned object's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property is &lt;see langword=&quot;false&quot; /&gt; even if the source's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt;.">目前物件的可修改複本。 即使來源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 屬性為 <see langword="true." />，複製物件的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 屬性仍為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)">
      <summary vsli:raw="Makes the instance a clone (deep copy) of the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; using base (non-animated) property values.">使用基底 (非動畫) 屬性值，將執行個體設為指定 <see cref="T:System.Windows.Freezable" /> 的複製品 (深層複製)。</summary>
      <param name="sourceFreezable" vsli:raw="The object to clone.">要複製的物件。</param>
    </member>
    <member name="M:System.Windows.Freezable.CloneCurrentValue">
      <summary vsli:raw="Creates a modifiable clone (deep copy) of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; using its current values.">使用 <see cref="T:System.Windows.Freezable" /> 的目前值，建立它的可修改複製品 (深層複本)。</summary>
      <returns vsli:raw="A modifiable clone of the current object. The cloned object's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property is &lt;see langword=&quot;false&quot; /&gt; even if the source's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt;.">目前物件的可修改複本。 即使來源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 屬性為 <see langword="true." />，複製物件的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 屬性仍為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)">
      <summary vsli:raw="Makes the instance a modifiable clone (deep copy) of the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; using current property values.">使用目前的屬性值，讓執行個體成為指定之 <see cref="T:System.Windows.Freezable" /> 的可修改複本 (深層複本)。</summary>
      <param name="sourceFreezable" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; to be cloned.">要複製的 <see cref="T:System.Windows.Freezable" />。</param>
    </member>
    <member name="M:System.Windows.Freezable.CreateInstance">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; class.">初始化 <see cref="T:System.Windows.Freezable" /> 類別的新執行個體。</summary>
      <returns vsli:raw="The new instance.">新的執行個體。</returns>
    </member>
    <member name="M:System.Windows.Freezable.CreateInstanceCore">
      <summary vsli:raw="When implemented in a derived class, creates a new instance of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; derived class.">在衍生類別中實作時，建立 <see cref="T:System.Windows.Freezable" /> 衍生類別的新執行個體。</summary>
      <returns vsli:raw="The new instance.">新的執行個體。</returns>
    </member>
    <member name="M:System.Windows.Freezable.Freeze">
      <summary vsli:raw="Makes the current object unmodifiable and sets its &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property to &lt;see langword=&quot;true&quot; /&gt;.">將目前的物件設為不可修改，並將其 <see cref="P:System.Windows.Freezable.IsFrozen" /> 屬性設定為 <see langword="true" />。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; cannot be made unmodifiable.">無法將 <see cref="T:System.Windows.Freezable" /> 設為不可修改。</exception>
    </member>
    <member name="M:System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)">
      <summary vsli:raw="If the &lt;paramref name=&quot;isChecking&quot; /&gt; parameter is &lt;see langword=&quot;true&quot; /&gt;, this method indicates whether the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; can be made unmodifiable. If the &lt;paramref name=&quot;isChecking&quot; /&gt; parameter is &lt;see langword=&quot;false&quot; /&gt;, this method attempts to make the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; unmodifiable and indicates whether the operation succeeded.">如果 <paramref name="isChecking" /> 參數是 <see langword="true" />，則這個方法表示是否可以將指定的 <see cref="T:System.Windows.Freezable" /> 設為不可修改的。 如果 <paramref name="isChecking" /> 參數是 <see langword="false" />，則這個方法會嘗試將指定的 <see cref="T:System.Windows.Freezable" /> 設為不可修改的，並表示作業是否成功。</summary>
      <param name="freezable" vsli:raw="The object to check or make unmodifiable. If &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, the object is checked to determine whether it can be made unmodifiable. If &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;, the object is made unmodifiable, if possible.">要檢查或設為不可修改的物件。 如果 <paramref name="isChecking" /> 是 <see langword="true" />，則會檢查物件，判斷是否可以將它設為不可修改的。 如果 <paramref name="isChecking" /> 是 <see langword="false" />，則會適時將物件設為不可修改的。</param>
      <param name="isChecking" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to return an indication of whether the object can be frozen (without actually freezing it); &lt;see langword=&quot;false&quot; /&gt; to actually freeze the object.">
        <see langword="true" /> 表示傳回是否可以凍結物件 (而不是實際進行凍結)，<see langword="false" /> 則表示實際凍結物件。</param>
      <returns vsli:raw="If &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, this method returns &lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; can be made unmodifiable, or &lt;see langword=&quot;false&quot; /&gt; if it cannot be made unmodifiable. If &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;, this method returns &lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; is now unmodifiable, or &lt;see langword=&quot;false&quot; /&gt; if it cannot be made unmodifiable.">如果 <paramref name="isChecking" /> 是 <see langword="true" />，則這個方法會在可以將指定的 <see cref="T:System.Windows.Freezable" /> 設為不可修改的時傳回 <see langword="true" />，並在無法設為不可修改的時傳回 <see langword="false" />。 如果 <paramref name="isChecking" /> 是 <see langword="false" />，則這個方法會在指定的 <see cref="T:System.Windows.Freezable" /> 現在為不可修改的時傳回 <see langword="true" />，並在無法設為不可修改的時傳回 <see langword="false" />。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="When &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;, the attempt to make &lt;paramref name=&quot;freezable&quot; /&gt; unmodifiable was unsuccessful; the object is now in an unknown state (it might be partially frozen).">當 <paramref name="isChecking" /> 是 <see langword="false" /> 時，將 <paramref name="freezable" /> 設為不可修改的嘗試失敗了。這個物件現在是處於未知的狀態 (可能是局部凍結)。</exception>
    </member>
    <member name="M:System.Windows.Freezable.FreezeCore(System.Boolean)">
      <summary vsli:raw="Makes the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; object unmodifiable or tests whether it can be made unmodifiable.">將 <see cref="T:System.Windows.Freezable" /> 物件設為不可修改的，或測試是否可以將它設為不可修改的。</summary>
      <param name="isChecking" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to return an indication of whether the object can be frozen (without actually freezing it); &lt;see langword=&quot;false&quot; /&gt; to actually freeze the object.">
        <see langword="true" /> 表示傳回是否可以凍結物件 (而不是實際進行凍結)，<see langword="false" /> 則表示實際凍結物件。</param>
      <returns vsli:raw="If &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, this method returns &lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; can be made unmodifiable, or &lt;see langword=&quot;false&quot; /&gt; if it cannot be made unmodifiable. If &lt;paramref name=&quot;isChecking&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;, this method returns &lt;see langword=&quot;true&quot; /&gt; if the if the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; is now unmodifiable, or &lt;see langword=&quot;false&quot; /&gt; if it cannot be made unmodifiable.">如果 <paramref name="isChecking" /> 是 <see langword="true" />，則這個方法會在可以將 <see cref="T:System.Windows.Freezable" /> 設為不可修改的時傳回 <see langword="true" />，並在無法設為不可修改的時傳回 <see langword="false" />。 如果 <paramref name="isChecking" /> 是 <see langword="false" />，則這個方法會在指定的 <see cref="T:System.Windows.Freezable" /> 現在為不可修改的時傳回 <see langword="true" />，並在無法設為不可修改的時傳回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Freezable.GetAsFrozen">
      <summary vsli:raw="Creates a frozen copy of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt;, using base (non-animated) property values. Because the copy is frozen, any frozen sub-objects are copied by reference.">使用基底 (非動畫) 屬性值，建立 <see cref="T:System.Windows.Freezable" /> 的凍結複本。 因為複本已凍結，所以會以傳址方式複製任何凍結子物件。</summary>
      <returns vsli:raw="A frozen copy of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt;. The copy's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property is set to &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="T:System.Windows.Freezable" /> 的凍結複本。 複本的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 屬性是設定為 <see langword="true" />。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; cannot be frozen because it contains expressions or animated properties.">
        <see cref="T:System.Windows.Freezable" /> 包含運算式或動畫屬性，因此無法予以凍結。</exception>
    </member>
    <member name="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)">
      <summary vsli:raw="Makes the instance a frozen clone of the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; using base (non-animated) property values.">使用基底 (非動畫) 屬性值，將執行個體設為所指定 <see cref="T:System.Windows.Freezable" /> 的凍結複製品。</summary>
      <param name="sourceFreezable" vsli:raw="The instance to copy.">要複製的執行個體。</param>
    </member>
    <member name="M:System.Windows.Freezable.GetCurrentValueAsFrozen">
      <summary vsli:raw="Creates a frozen copy of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; using current property values. Because the copy is frozen, any frozen sub-objects are copied by reference.">使用目前屬性值，建立 <see cref="T:System.Windows.Freezable" /> 的凍結複本。 因為複本已凍結，所以會以傳址方式複製任何凍結子物件。</summary>
      <returns vsli:raw="A frozen copy of the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt;. The copy's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property is set to &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="T:System.Windows.Freezable" /> 的凍結複本。 複本的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 屬性是設定為 <see langword="true" />。</returns>
    </member>
    <member name="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <summary vsli:raw="Makes the current instance a frozen clone of the specified &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt;. If the object has animated dependency properties, their current animated values are copied.">將目前執行個體設為所指定 <see cref="T:System.Windows.Freezable" /> 的凍結複製品。 如果物件具有動畫相依性屬性，則會複製這些屬性的目前動畫值。</summary>
      <param name="sourceFreezable" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; to copy and freeze.">要複製和凍結的 <see cref="T:System.Windows.Freezable" />。</param>
    </member>
    <member name="P:System.Windows.Freezable.IsFrozen">
      <summary vsli:raw="Gets a value that indicates whether the object is currently modifiable.">取得值，該值表示物件目前是否可修改。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is frozen and cannot be modified; &lt;see langword=&quot;false&quot; /&gt; if the object can be modified.">如果物件已凍結，而且無法修改則為 <see langword="true" />，如果可以修改物件則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Freezable.OnChanged">
      <summary vsli:raw="Called when the current &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; object is modified.">目前的 <see cref="T:System.Windows.Freezable" /> 物件遭到修改時進行呼叫。</summary>
    </member>
    <member name="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary vsli:raw="Ensures that appropriate context pointers are established for a &lt;see cref=&quot;T:System.Windows.DependencyObjectType&quot; /&gt; data member that has just been set.">確定已為剛剛設定的 <see cref="T:System.Windows.DependencyObjectType" /> 資料成員，建立適當的內容指標。</summary>
      <param name="oldValue" vsli:raw="The previous value of the data member.">資料成員先前的值。</param>
      <param name="newValue" vsli:raw="The current value of the data member.">資料成員目前的值。</param>
    </member>
    <member name="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <summary vsli:raw="This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.">這個成員支援 Windows Presentation Foundation (WPF) 基礎結構，但是您不可以從程式碼直接使用它。</summary>
      <param name="oldValue" vsli:raw="The previous value of the data member.">資料成員先前的值。</param>
      <param name="newValue" vsli:raw="The current value of the data member.">資料成員目前的值。</param>
      <param name="property" vsli:raw="The property that changed.">已變更的屬性。</param>
    </member>
    <member name="M:System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary vsli:raw="Overrides the &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; implementation of &lt;see cref=&quot;M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)&quot; /&gt; to also invoke any &lt;see cref=&quot;E:System.Windows.Freezable.Changed&quot; /&gt; handlers in response to a changing dependency property of type &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt;.">覆寫 <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" /> 的 <see cref="T:System.Windows.DependencyObject" /> 實作也可以叫用任何 <see cref="E:System.Windows.Freezable.Changed" /> 處理常式，以回應類型 <see cref="T:System.Windows.Freezable" /> 的變更相依性屬性。</summary>
      <param name="e" vsli:raw="Event data that contains information about which property changed, and its old and new values.">事件資料包含已變更哪個屬性的相關資訊，及舊值和新值。</param>
    </member>
    <member name="M:System.Windows.Freezable.ReadPreamble">
      <summary vsli:raw="Ensures that the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; is being accessed from a valid thread. Inheritors of &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; must call this method at the beginning of any API that reads data members that are not dependency properties.">確定 <see cref="T:System.Windows.Freezable" /> 是從有效的執行緒進行存取。 如果 API 會讀取非相依性屬性的資料成員，則 <see cref="T:System.Windows.Freezable" /> 的繼承者必須在該 API 的開頭呼叫這個方法。</summary>
    </member>
    <member name="M:System.Windows.Freezable.WritePostscript">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Windows.Freezable.Changed&quot; /&gt; event for the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; and invokes its &lt;see cref=&quot;M:System.Windows.Freezable.OnChanged&quot; /&gt; method. Classes that derive from &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; should call this method at the end of any API that modifies class members that are not stored as dependency properties.">引發 <see cref="T:System.Windows.Freezable" /> 的 <see cref="E:System.Windows.Freezable.Changed" /> 事件，並叫用其 <see cref="M:System.Windows.Freezable.OnChanged" /> 方法。 在任何 API 修改未以相依性屬性儲存的類別成員之後，衍生自 <see cref="T:System.Windows.Freezable" /> 的類別應該在 API 的結尾呼叫這個方法。</summary>
    </member>
    <member name="M:System.Windows.Freezable.WritePreamble">
      <summary vsli:raw="Verifies that the &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; is not frozen and that it is being accessed from a valid threading context. &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; inheritors should call this method at the beginning of any API that writes to data members that are not dependency properties.">確認 <see cref="T:System.Windows.Freezable" /> 未凍結，而且是從有效的執行緒內容進行存取。 在任何 API 將資料寫入至非相依性屬性的資料成員之前，<see cref="T:System.Windows.Freezable" /> 繼承者應該在 API 的開頭呼叫這個方法。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Freezable&quot; /&gt; instance is frozen and cannot have its members written to.">
        <see cref="T:System.Windows.Freezable" /> 執行個體已凍結，無法寫入它的成員。</exception>
    </member>
    <member name="T:System.Windows.Input.FocusNavigationDirection">
      <summary vsli:raw="Specifies the direction within a user interface (UI) in which a desired focus change request is attempted. The direction is either based on tab order or by relative direction in layout.">指定使用者介面 (UI) 內在嘗試需要的焦點變更要求時的方向。 該方向是以定位順序或以配置的相對方向為基礎。</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Down">
      <summary vsli:raw="Move focus to another focusable element downwards from the currently focused element.">將焦點移至目前取得焦點之項目下面的其他可焦點化項目。</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.First">
      <summary vsli:raw="Move focus to the first focusable element in tab order. Not supported for &lt;see cref=&quot;M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)&quot; /&gt;.">將焦點移至定位順序中的第一個可焦點化項目。 <see cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" /> 上並不支援。</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Last">
      <summary vsli:raw="Move focus to the last focusable element in tab order. Not supported for &lt;see cref=&quot;M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)&quot; /&gt;.">將焦點移至定位順序中的最後一個可焦點化項目。 <see cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" /> 上並不支援。</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Left">
      <summary vsli:raw="Move focus to another focusable element to the left of the currently focused element.">將焦點移至目前取得焦點之項目左邊的其他可焦點化項目。</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Next">
      <summary vsli:raw="Move focus to the next focusable element in tab order. Not supported for &lt;see cref=&quot;M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)&quot; /&gt;.">將焦點移至定位順序中的下一個可焦點化項目。 <see cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" /> 上並不支援。</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Previous">
      <summary vsli:raw="Move focus to the previous focusable element in tab order. Not supported for &lt;see cref=&quot;M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)&quot; /&gt;.">將焦點移至定位順序中的上一個可焦點化項目。 <see cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" /> 上並不支援。</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Right">
      <summary vsli:raw="Move focus to another focusable element to the right of the currently focused element.">將焦點移至目前取得焦點之項目右邊的其他可焦點化項目。</summary>
    </member>
    <member name="F:System.Windows.Input.FocusNavigationDirection.Up">
      <summary vsli:raw="Move focus to another focusable element upwards from the currently focused element.">將焦點移至目前取得焦點之項目上面的其他可焦點化項目。</summary>
    </member>
    <member name="T:System.Windows.Input.Key">
      <summary vsli:raw="Specifies the possible key values on a keyboard.">在鍵盤上，指定可能的按鍵值。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.A">
      <summary vsli:raw="The A key.">A 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.AbntC1">
      <summary vsli:raw="The ABNT_C1 (Brazilian) key.">ABNT_C1 (巴西) 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.AbntC2">
      <summary vsli:raw="The ABNT_C2 (Brazilian) key.">ABNT_C2 (巴西) 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Add">
      <summary vsli:raw="The Add key.">加號鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Apps">
      <summary vsli:raw="The Application key (Microsoft Natural Keyboard). Also known as the Menu key, as it displays an application-specific context menu.">應用程式鍵 (Microsoft Natural Keyboard)。 也稱為功能表鍵，因為它會顯示特定應用程式的操作功能表。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Attn">
      <summary vsli:raw="The ATTN key.">ATTN 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.B">
      <summary vsli:raw="The B key.">B 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Back">
      <summary vsli:raw="The Backspace key.">退格鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserBack">
      <summary vsli:raw="The Browser Back key.">瀏覽器上一頁鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserFavorites">
      <summary vsli:raw="The Browser Favorites key.">瀏覽器我的最愛鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserForward">
      <summary vsli:raw="The Browser Forward key.">瀏覽器下一頁鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserHome">
      <summary vsli:raw="The Browser Home key.">瀏覽器首頁鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserRefresh">
      <summary vsli:raw="The Browser Refresh key.">瀏覽器重新整理鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserSearch">
      <summary vsli:raw="The Browser Search key.">瀏覽器搜尋鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.BrowserStop">
      <summary vsli:raw="The Browser Stop key.">瀏覽器停止鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.C">
      <summary vsli:raw="The C key.">C 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Cancel">
      <summary vsli:raw="The Cancel key.">取消鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Capital">
      <summary vsli:raw="The Caps Lock key.">Caps Lock 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.CapsLock">
      <summary vsli:raw="The Caps Lock key.">Caps Lock 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Clear">
      <summary vsli:raw="The Clear key.">Clear 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.CrSel">
      <summary vsli:raw="The CRSEL key.">CRSEL 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D">
      <summary vsli:raw="The D key.">D 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D0">
      <summary vsli:raw="The 0 (zero) key.">0 (零) 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D1">
      <summary vsli:raw="The 1 (one) key.">1 (一) 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D2">
      <summary vsli:raw="The 2 key.">2 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D3">
      <summary vsli:raw="The 3 key.">3 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D4">
      <summary vsli:raw="The 4 key.">4 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D5">
      <summary vsli:raw="The 5 key.">5 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D6">
      <summary vsli:raw="The 6 key.">6 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D7">
      <summary vsli:raw="The 7 key.">7 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D8">
      <summary vsli:raw="The 8 key.">8 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.D9">
      <summary vsli:raw="The 9 key.">9 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeAlphanumeric">
      <summary vsli:raw="The DBE_ALPHANUMERIC key.">DBE_ALPHANUMERIC 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeCodeInput">
      <summary vsli:raw="The DBE_CODEINPUT key.">DBE_CODEINPUT 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeDbcsChar">
      <summary vsli:raw="The DBE_DBCSCHAR key.">DBE_DBCSCHAR 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeDetermineString">
      <summary vsli:raw="The DBE_DETERMINESTRING key.">DBE_DETERMINESTRING 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeEnterDialogConversionMode">
      <summary vsli:raw="The DBE_ENTERDLGCONVERSIONMODE key.">DBE_ENTERDLGCONVERSIONMODE 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeEnterImeConfigureMode">
      <summary vsli:raw="The DBE_ENTERIMECONFIGMODE key.">DBE_ENTERIMECONFIGMODE 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeEnterWordRegisterMode">
      <summary vsli:raw="The DBE_ENTERWORDREGISTERMODE key.">DBE_ENTERWORDREGISTERMODE 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeFlushString">
      <summary vsli:raw="The DBE_FLUSHSTRING key.">DBE_FLUSHSTRING 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeHiragana">
      <summary vsli:raw="The DBE_HIRAGANA key.">DBE_HIRAGANA 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeKatakana">
      <summary vsli:raw="The DBE_KATAKANA key.">DBE_KATAKANA 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeNoCodeInput">
      <summary vsli:raw="The DBE_NOCODEINPUT key.">DBE_NOCODEINPUT 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeNoRoman">
      <summary vsli:raw="The DBE_NOROMAN key.">DBE_NOROMAN 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeRoman">
      <summary vsli:raw="The DBE_ROMAN key.">DBE_ROMAN 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DbeSbcsChar">
      <summary vsli:raw="The DBE_SBCSCHAR key.">DBE_SBCSCHAR 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.DeadCharProcessed">
      <summary vsli:raw="The key is used with another key to create a single combined character.">此按鍵用於與另一個按鍵建立單一合併字元。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Decimal">
      <summary vsli:raw="The Decimal key.">小數點鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Delete">
      <summary vsli:raw="The Delete key.">Delete 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Divide">
      <summary vsli:raw="The Divide key.">除號鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Down">
      <summary vsli:raw="The Down Arrow key.">向下鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.E">
      <summary vsli:raw="The E key.">E 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.End">
      <summary vsli:raw="The End key.">End 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Enter">
      <summary vsli:raw="The Enter key.">Enter 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.EraseEof">
      <summary vsli:raw="The ERASE EOF key.">ERASE EOF 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Escape">
      <summary vsli:raw="The ESC key.">ESC 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Execute">
      <summary vsli:raw="The Execute key.">Execute 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ExSel">
      <summary vsli:raw="The EXSEL key.">EXSEL 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F">
      <summary vsli:raw="The F key.">F 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F1">
      <summary vsli:raw="The F1 key.">F1 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F10">
      <summary vsli:raw="The F10 key.">F10 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F11">
      <summary vsli:raw="The F11 key.">F11 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F12">
      <summary vsli:raw="The F12 key.">F12 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F13">
      <summary vsli:raw="The F13 key.">F13 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F14">
      <summary vsli:raw="The F14 key.">F14 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F15">
      <summary vsli:raw="The F15 key.">F15 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F16">
      <summary vsli:raw="The F16 key.">F16 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F17">
      <summary vsli:raw="The F17 key.">F17 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F18">
      <summary vsli:raw="The F18 key.">F18 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F19">
      <summary vsli:raw="The F19 key.">F19 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F2">
      <summary vsli:raw="The F2 key.">F2 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F20">
      <summary vsli:raw="The F20 key.">F20 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F21">
      <summary vsli:raw="The F21 key.">F21 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F22">
      <summary vsli:raw="The F22 key.">F22 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F23">
      <summary vsli:raw="The F23 key.">F23 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F24">
      <summary vsli:raw="The F24 key.">F24 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F3">
      <summary vsli:raw="The F3 key.">F3 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F4">
      <summary vsli:raw="The F4 key.">F4 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F5">
      <summary vsli:raw="The F5 key.">F5 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F6">
      <summary vsli:raw="The F6 key.">F6 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F7">
      <summary vsli:raw="The F7 key.">F7 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F8">
      <summary vsli:raw="The F8 key.">F8 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.F9">
      <summary vsli:raw="The F9 key.">F9 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.FinalMode">
      <summary vsli:raw="The IME Final mode key.">輸入法 Final 模式鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.G">
      <summary vsli:raw="The G key.">G 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.H">
      <summary vsli:raw="The H key.">H 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.HangulMode">
      <summary vsli:raw="The IME Hangul mode key.">輸入法 Hangul 模式鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.HanjaMode">
      <summary vsli:raw="The IME Hanja mode key.">輸入法 Hanja 模式鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Help">
      <summary vsli:raw="The Help key.">Help 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Home">
      <summary vsli:raw="The Home key.">Home 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.I">
      <summary vsli:raw="The I key.">I 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeAccept">
      <summary vsli:raw="The IME Accept key.">輸入法接受鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeConvert">
      <summary vsli:raw="The IME Convert key.">輸入法轉換鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeModeChange">
      <summary vsli:raw="The IME Mode change request.">輸入法模式變更要求。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeNonConvert">
      <summary vsli:raw="The IME NonConvert key.">輸入法非轉換鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.ImeProcessed">
      <summary vsli:raw="A special key masking the real key being processed by an IME.">遮蔽 IME 正在處理之實際鍵的特殊鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Insert">
      <summary vsli:raw="The Insert key.">Insert 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.J">
      <summary vsli:raw="The J key.">J 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.JunjaMode">
      <summary vsli:raw="The IME Junja mode key.">輸入法 Junja 模式鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.K">
      <summary vsli:raw="The K key.">K 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.KanaMode">
      <summary vsli:raw="The IME Kana mode key.">輸入法 Kana 模式鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.KanjiMode">
      <summary vsli:raw="The IME Kanji mode key.">輸入法 Kanji 模式鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.L">
      <summary vsli:raw="The L key.">L 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LaunchApplication1">
      <summary vsli:raw="The Launch Application1 key.">啟動應用程式 1 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LaunchApplication2">
      <summary vsli:raw="The Launch Application2 key.">啟動應用程式 2 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LaunchMail">
      <summary vsli:raw="The Launch Mail key.">啟動郵件鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Left">
      <summary vsli:raw="The Left Arrow key.">向左鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LeftAlt">
      <summary vsli:raw="The left ALT key.">左 ALT 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LeftCtrl">
      <summary vsli:raw="The left CTRL key.">左 CTRL 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LeftShift">
      <summary vsli:raw="The left Shift key.">左 Shift 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LineFeed">
      <summary vsli:raw="The Linefeed key.">換行字元鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.LWin">
      <summary vsli:raw="The left Windows logo key (Microsoft Natural Keyboard).">左 Windows 標誌鍵 (Microsoft Natural Keyboard)。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.M">
      <summary vsli:raw="The M key.">M 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.MediaNextTrack">
      <summary vsli:raw="The Media Next Track key.">媒體下一首鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.MediaPlayPause">
      <summary vsli:raw="The Media Play Pause key.">媒體播放/暫停鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.MediaPreviousTrack">
      <summary vsli:raw="The Media Previous Track key.">媒體上一首鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.MediaStop">
      <summary vsli:raw="The Media Stop key.">媒體停止鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Multiply">
      <summary vsli:raw="The Multiply key.">乘號鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.N">
      <summary vsli:raw="The N key.">N 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Next">
      <summary vsli:raw="The Page Down key.">Page Down 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NoName">
      <summary vsli:raw="A constant reserved for future use.">保留供未來使用的常數。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.None">
      <summary vsli:raw="No key pressed.">未按下任何鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumLock">
      <summary vsli:raw="The Num Lock key.">Num Lock 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad0">
      <summary vsli:raw="The 0 key on the numeric keypad.">數字鍵台上的 0 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad1">
      <summary vsli:raw="The 1 key on the numeric keypad.">數字鍵台上的 1 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad2">
      <summary vsli:raw="The 2 key on the numeric keypad.">數字鍵台上的 2 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad3">
      <summary vsli:raw="The 3 key on the numeric keypad.">數字鍵台上的 3 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad4">
      <summary vsli:raw="The 4 key on the numeric keypad.">數字鍵台上的 4 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad5">
      <summary vsli:raw="The 5 key on the numeric keypad.">數字鍵台上的 5 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad6">
      <summary vsli:raw="The 6 key on the numeric keypad.">數字鍵台上的 6 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad7">
      <summary vsli:raw="The 7 key on the numeric keypad.">數字鍵台上的 7 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad8">
      <summary vsli:raw="The 8 key on the numeric keypad.">數字鍵台上的 8 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.NumPad9">
      <summary vsli:raw="The 9 key on the numeric keypad.">數字鍵台上的 9 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.O">
      <summary vsli:raw="The O key.">O 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem1">
      <summary vsli:raw="The OEM 1 key.">OEM 1 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem102">
      <summary vsli:raw="The OEM 102 key.">OEM 102 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem2">
      <summary vsli:raw="The OEM 2 key.">OEM 2 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem3">
      <summary vsli:raw="The OEM 3 key.">OEM 3 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem4">
      <summary vsli:raw="The OEM 4 key.">OEM 4 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem5">
      <summary vsli:raw="The OEM 5 key.">OEM 5 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem6">
      <summary vsli:raw="The OEM 6 key.">OEM 6 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem7">
      <summary vsli:raw="The OEM 7 key.">OEM 7 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Oem8">
      <summary vsli:raw="The OEM 8 key.">OEM 8 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemAttn">
      <summary vsli:raw="The OEM ATTN key.">OEM ATTN 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemAuto">
      <summary vsli:raw="The OEM AUTO key.">OEM AUTO 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemBackslash">
      <summary vsli:raw="The OEM Backslash key.">OEM 反斜線鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemBackTab">
      <summary vsli:raw="The OEM BACKTAB key.">OEM BACKTAB 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemClear">
      <summary vsli:raw="The OEM Clear key.">OEM Clear 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemCloseBrackets">
      <summary vsli:raw="The OEM Close Brackets key.">OEM 右括弧鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemComma">
      <summary vsli:raw="The OEM Comma key.">OEM 逗號鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemCopy">
      <summary vsli:raw="The OEM COPY key.">OEM 複製鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemEnlw">
      <summary vsli:raw="The OEM ENLW key.">OEM ENLW 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemFinish">
      <summary vsli:raw="The OEM FINISH key.">OEM 完成鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemMinus">
      <summary vsli:raw="The OEM Minus key.">OEM 減號鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemOpenBrackets">
      <summary vsli:raw="The OEM Open Brackets key.">OEM 左括弧鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemPeriod">
      <summary vsli:raw="The OEM Period key.">OEM 句號鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemPipe">
      <summary vsli:raw="The OEM Pipe key.">OEM 直立線符號鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemPlus">
      <summary vsli:raw="The OEM Addition key.">OEM 加號鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemQuestion">
      <summary vsli:raw="The OEM Question key.">OEM 問號鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemQuotes">
      <summary vsli:raw="The OEM Quotes key.">OEM 引號鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemSemicolon">
      <summary vsli:raw="The OEM Semicolon key.">OEM 分號鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.OemTilde">
      <summary vsli:raw="The OEM Tilde key.">OEM 波狀符號鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.P">
      <summary vsli:raw="The P key.">P 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Pa1">
      <summary vsli:raw="The PA1 key.">PA1 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.PageDown">
      <summary vsli:raw="The Page Down key.">Page Down 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.PageUp">
      <summary vsli:raw="The Page Up key.">Page Up 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Pause">
      <summary vsli:raw="The Pause key.">Pause 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Play">
      <summary vsli:raw="The PLAY key.">PLAY 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Print">
      <summary vsli:raw="The Print key.">Print 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.PrintScreen">
      <summary vsli:raw="The Print Screen key.">Print Screen 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Prior">
      <summary vsli:raw="The Page Up key.">Page Up 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Q">
      <summary vsli:raw="The Q key.">Q 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.R">
      <summary vsli:raw="The R key.">R 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Return">
      <summary vsli:raw="The Return key.">Return 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Right">
      <summary vsli:raw="The Right Arrow key.">向右鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.RightAlt">
      <summary vsli:raw="The right ALT key.">右 ALT 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.RightCtrl">
      <summary vsli:raw="The right CTRL key.">右 CTRL 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.RightShift">
      <summary vsli:raw="The right Shift key.">右 Shift 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.RWin">
      <summary vsli:raw="The right Windows logo key (Microsoft Natural Keyboard).">右 Windows 標誌鍵 (Microsoft Natural Keyboard)。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.S">
      <summary vsli:raw="The S key.">S 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Scroll">
      <summary vsli:raw="The Scroll Lock key.">Scroll Lock 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Select">
      <summary vsli:raw="The Select key.">Select 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.SelectMedia">
      <summary vsli:raw="The Select Media key.">選取媒體鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Separator">
      <summary vsli:raw="The Separator key.">分隔符號鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Sleep">
      <summary vsli:raw="The Computer Sleep key.">電腦睡眠鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Snapshot">
      <summary vsli:raw="The Print Screen key.">Print Screen 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Space">
      <summary vsli:raw="The Spacebar key.">空格鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Subtract">
      <summary vsli:raw="The Subtract key.">減號鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.System">
      <summary vsli:raw="A special key masking the real key being processed as a system key.">遮蔽正作為系統鍵處理之實際鍵的特殊鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.T">
      <summary vsli:raw="The T key.">T 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Tab">
      <summary vsli:raw="The Tab key.">Tab 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.U">
      <summary vsli:raw="The U key.">U 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Up">
      <summary vsli:raw="The Up Arrow key.">向上鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.V">
      <summary vsli:raw="The V key.">V 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.VolumeDown">
      <summary vsli:raw="The Volume Down key.">音量降低鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.VolumeMute">
      <summary vsli:raw="The Volume Mute key.">靜音鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.VolumeUp">
      <summary vsli:raw="The Volume Up key.">音量提高鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.W">
      <summary vsli:raw="The W key.">W 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.X">
      <summary vsli:raw="The X key.">X 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Y">
      <summary vsli:raw="The Y key.">Y 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Z">
      <summary vsli:raw="The Z key.">Z 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.Key.Zoom">
      <summary vsli:raw="The ZOOM key.">ZOOM 鍵。</summary>
    </member>
    <member name="T:System.Windows.Input.KeyConverter">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; object to and from other types.">將 <see cref="T:System.Windows.Input.Key" /> 物件來回轉換成其他型別。</summary>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; class.">初始化 <see cref="T:System.Windows.Input.Key" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object of the specified type can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;, using the specified context.">使用指定的內容，判斷所指定型別的物件是否可轉換成 <see cref="T:System.Windows.Input.Key" /> 的執行個體。</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">格式內容，提供正在叫用此轉換器之環境的相關資訊。</param>
      <param name="sourceType" vsli:raw="The type being evaluated for conversion.">正在評估以進行轉換的型別。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;sourceType&quot; /&gt; is of type &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="true" /> 屬於類型 <paramref name="sourceType" />，則為 <see cref="T:System.String" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; can be converted to the specified type, using the specified context.">使用指定的內容，判斷 <see cref="T:System.Windows.Input.Key" /> 的執行個體是否可以轉換成指定的型別。</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">格式內容，提供正在叫用此轉換器之環境的相關資訊。</param>
      <param name="destinationType" vsli:raw="The type being evaluated for conversion.">正在評估以進行轉換的型別。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;destinationType&quot; /&gt; is of type &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="true" /> 屬於類型 <paramref name="destinationType" />，則為 <see cref="T:System.String" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified object to a &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;, using the specified context.">使用指定的內容，嘗試將指定的物件轉換為 <see cref="T:System.Windows.Input.Key" />。</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">格式內容，提供正在叫用此轉換器之環境的相關資訊。</param>
      <param name="culture" vsli:raw="Culture specific information.">特定文化特性 (Culture) 資訊。</param>
      <param name="source" vsli:raw="The object to convert.">要轉換的物件。</param>
      <returns vsli:raw="The converted object.">轉換的物件。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; cannot be converted.">無法轉換 <paramref name="source" />。</exception>
    </member>
    <member name="M:System.Windows.Input.KeyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert a &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; to the specified type, using the specified context.">使用指定的內容，嘗試將 <see cref="T:System.Windows.Input.Key" /> 轉換為指定的型別。</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">格式內容，提供正在叫用此轉換器之環境的相關資訊。</param>
      <param name="culture" vsli:raw="Culture specific information.">特定文化特性 (Culture) 資訊。</param>
      <param name="value" vsli:raw="The object to convert.">要轉換的物件。</param>
      <param name="destinationType" vsli:raw="The type to convert the object to.">要將物件轉換成的類型。</param>
      <returns vsli:raw="The converted object.">轉換的物件。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="destinationType" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be converted to &lt;paramref name=&quot;destinationType&quot; /&gt;.">
        <paramref name="value" /> 無法轉換成 <paramref name="destinationType" />。</exception>
    </member>
    <member name="T:System.Windows.Input.KeyInterop">
      <summary vsli:raw="Provides static methods to convert between Win32 Virtual-Keys and the WPF &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; enumeration.">提供在 Win32 虛擬按鍵和 <see cref="T:System.Windows.Input.Key" /> 列舉之間進行轉換的靜態方法。</summary>
    </member>
    <member name="M:System.Windows.Input.KeyInterop.KeyFromVirtualKey(System.Int32)">
      <summary vsli:raw="Converts a Win32 Virtual-Key into WPF &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;.">將 Win32 虛擬按鍵轉換為 WPF <see cref="T:System.Windows.Input.Key" />。</summary>
      <param name="virtualKey" vsli:raw="The virtual key to convert.">要轉換的虛擬按鍵。</param>
      <returns vsli:raw="The WPF key.">WPF 按鍵。</returns>
    </member>
    <member name="M:System.Windows.Input.KeyInterop.VirtualKeyFromKey(System.Windows.Input.Key)">
      <summary vsli:raw="Converts a WPF &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; into a Win32 Virtual-Key.">將 WPF <see cref="T:System.Windows.Input.Key" /> 轉換為 Win32 虛擬按鍵。</summary>
      <param name="key" vsli:raw="The WPF to convert.">要進行轉換的 WPF。</param>
      <returns vsli:raw="The Win32 Virtual-Key.">Win32 虛擬按鍵。</returns>
    </member>
    <member name="T:System.Windows.Input.KeyValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;.">將 <see cref="T:System.String" /> 執行個體轉換為 <see cref="T:System.Windows.Input.Key" /> 執行個體，以及反向操作。</summary>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Input.KeyValueSerializer&quot; /&gt; class.">初始化 <see cref="T:System.Windows.Input.KeyValueSerializer" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be convert to an instance of &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;.">判斷指定的 <see cref="T:System.String" /> 是否可以轉換為 <see cref="T:System.Windows.Input.Key" /> 的執行個體。</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">要評估以進行轉換的字串。</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">用於轉換的內容資訊。</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">一律傳回 <see langword="true" />。</returns>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if the specified &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">判斷指定的 <see cref="T:System.Windows.Input.Key" /> 是否能夠轉換為 <see cref="T:System.String" />。</summary>
      <param name="value" vsli:raw="The key to evaluate for conversion.">要評估以進行轉換的索引鍵。</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">用於轉換的內容資訊。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="value" /> 可以轉換為 <see cref="T:System.String" />，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;.">將 <see cref="T:System.String" /> 轉換成 <see cref="T:System.Windows.Input.Key" />。</summary>
      <param name="value" vsli:raw="The string to convert into a &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;.">要轉換成 <see cref="T:System.Windows.Input.Key" /> 的字串。</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">用於轉換的內容資訊。</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">根據所提供 <paramref name="value" /> 的新 <see cref="T:System.Windows.Input.Key" /> 執行個體。</returns>
    </member>
    <member name="M:System.Windows.Input.KeyValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">將 <see cref="T:System.Windows.Input.Key" /> 的執行個體轉換成 <see cref="T:System.String" />。</summary>
      <param name="value" vsli:raw="The key to convert into a string.">要轉換為字串的索引鍵。</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">用於轉換的內容資訊。</param>
      <returns vsli:raw="An invariant string representation of the specified &lt;see cref=&quot;T:System.Windows.Input.Key&quot; /&gt;.">指定之 <see cref="T:System.Windows.Input.Key" /> 的非變異字串表示。</returns>
    </member>
    <member name="T:System.Windows.Input.ModifierKeys">
      <summary vsli:raw="Specifies the set of modifier keys.">指定一組輔助按鍵 (Modifier Key)。</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Alt">
      <summary vsli:raw="The ALT key.">ALT 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Control">
      <summary vsli:raw="The CTRL key.">CTRL 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.None">
      <summary vsli:raw="No modifiers are pressed.">未按下任何輔助按鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Shift">
      <summary vsli:raw="The SHIFT key.">SHIFT 鍵。</summary>
    </member>
    <member name="F:System.Windows.Input.ModifierKeys.Windows">
      <summary vsli:raw="The Windows logo key.">Windows 標幟按鍵。</summary>
    </member>
    <member name="T:System.Windows.Input.ModifierKeysConverter">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; object to and from other types.">將 <see cref="T:System.Windows.Input.ModifierKeys" /> 物件來回轉換成其他型別。</summary>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Input.ModifierKeysConverter&quot; /&gt; class.">初始化 <see cref="T:System.Windows.Input.ModifierKeysConverter" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object of the specified type can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt;, using the specified context.">使用指定的內容，判斷所指定型別的物件是否可轉換成 <see cref="T:System.Windows.Input.ModifierKeys" /> 的執行個體。</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">格式內容，提供正在叫用此轉換器之環境的相關資訊。</param>
      <param name="sourceType" vsli:raw="The type being evaluated for conversion.">正在評估以進行轉換的型別。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;sourceType&quot; /&gt; is type &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="sourceType" /> 的型別為 <see cref="T:System.String" /> 則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; can be converted to the specified type, using the specified context.">使用指定的內容，判斷 <see cref="T:System.Windows.Input.ModifierKeys" /> 的執行個體是否可以轉換成指定的型別。</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">格式內容，提供正在叫用此轉換器之環境的相關資訊。</param>
      <param name="destinationType" vsli:raw="The type being evaluated for conversion.">正在評估以進行轉換的型別。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;destinationType&quot; /&gt; is type &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="destinationType" /> 的型別為 <see cref="T:System.String" /> 則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified object to a &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt;, using the specified context.">使用指定的內容，嘗試將指定的物件轉換為 <see cref="T:System.Windows.Input.ModifierKeys" />。</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">格式內容，提供正在叫用此轉換器之環境的相關資訊。</param>
      <param name="culture" vsli:raw="Culture specific information.">特定文化特性 (Culture) 資訊。</param>
      <param name="source" vsli:raw="The object to convert.">要轉換的物件。</param>
      <returns vsli:raw="The converted object.">轉換的物件。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; cannot be converted.">無法轉換 <paramref name="source" />。</exception>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert a &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; to the specified type, using the specified context.">使用指定的內容，嘗試將 <see cref="T:System.Windows.Input.ModifierKeys" /> 轉換為指定的型別。</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">格式內容，提供正在叫用此轉換器之環境的相關資訊。</param>
      <param name="culture" vsli:raw="Culture specific information.">特定文化特性 (Culture) 資訊。</param>
      <param name="value" vsli:raw="The object to convert.">要轉換的物件。</param>
      <param name="destinationType" vsli:raw="The type to convert the object to.">要將物件轉換成的類型。</param>
      <returns vsli:raw="The converted object.">轉換的物件。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destinationType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="destinationType" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; does not map to a valid &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt;.">
        <paramref name="value" /> 沒有對應到有效的 <see cref="T:System.Windows.Input.ModifierKeys" />。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be converted.">無法轉換 <paramref name="value" />。</exception>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysConverter.IsDefinedModifierKeys(System.Windows.Input.ModifierKeys)">
      <summary vsli:raw="Determines whether the specified value is a valid &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; value.">判斷指定的值是否為有效的 <see cref="T:System.Windows.Input.ModifierKeys" /> 值。</summary>
      <param name="modifierKeys" vsli:raw="The value to check for validity.">要檢查有效性的值。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if input is a valid &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果輸入的是有效的 <see cref="T:System.Windows.Input.ModifierKeys" /> 值則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.Input.ModifierKeysValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt;.">將 <see cref="T:System.String" /> 執行個體轉換為 <see cref="T:System.Windows.Input.ModifierKeys" /> 執行個體，以及反向操作。</summary>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Input.ModifierKeysValueSerializer&quot; /&gt; class.">初始化 <see cref="T:System.Windows.Input.ModifierKeysValueSerializer" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be convert to an instance of &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt;.">判斷指定的 <see cref="T:System.String" /> 是否可以轉換為 <see cref="T:System.Windows.Input.ModifierKeys" /> 的執行個體。</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">要評估以進行轉換的字串。</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">用於轉換的內容資訊。</param>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">一律傳回 <see langword="true" />。</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if the specified &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">判斷指定的 <see cref="T:System.Windows.Input.ModifierKeys" /> 是否能夠轉換為 <see cref="T:System.String" />。</summary>
      <param name="value" vsli:raw="The modifier keys to evaluate for conversion.">要評估以進行轉換的輔助按鍵 (Modifier Key)。</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">用於轉換的內容資訊。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="value" /> 可以轉換為 <see cref="T:System.String" />，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; value.">將 <see cref="T:System.String" /> 轉換成 <see cref="T:System.Windows.Input.ModifierKeys" /> 值。</summary>
      <param name="value" vsli:raw="The string to convert into a &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt;.">要轉換成 <see cref="T:System.Windows.Input.ModifierKeys" /> 的字串。</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">用於轉換的內容資訊。</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">根據所提供 <paramref name="value" /> 的新 <see cref="T:System.Windows.Input.ModifierKeys" /> 執行個體。</returns>
    </member>
    <member name="M:System.Windows.Input.ModifierKeysValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">將 <see cref="T:System.Windows.Input.ModifierKeys" /> 的執行個體轉換成 <see cref="T:System.String" />。</summary>
      <param name="value" vsli:raw="The key to convert into a string.">要轉換為字串的索引鍵。</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">用於轉換的內容資訊。</param>
      <returns vsli:raw="An invariant string representation of the specified &lt;see cref=&quot;T:System.Windows.Input.ModifierKeys&quot; /&gt; value.">指定之 <see cref="T:System.Windows.Input.ModifierKeys" /> 值的非變異字串表示。</returns>
    </member>
    <member name="T:System.Windows.Input.TraversalRequest">
      <summary vsli:raw="Represents a request to move focus to another control.">表示將焦點移至另一個控制項的要求。</summary>
    </member>
    <member name="M:System.Windows.Input.TraversalRequest.#ctor(System.Windows.Input.FocusNavigationDirection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Input.TraversalRequest&quot; /&gt; class.">初始化 <see cref="T:System.Windows.Input.TraversalRequest" /> 類別的新執行個體。</summary>
      <param name="focusNavigationDirection" vsli:raw="The intended direction of the focus traversal, as a value of the enumeration.">焦點周遊的預計方向，以列舉型別 (Enumeration) 的值表示。</param>
    </member>
    <member name="P:System.Windows.Input.TraversalRequest.FocusNavigationDirection">
      <summary vsli:raw="Gets the traversal direction.">取得周遊方向。</summary>
      <returns vsli:raw="One of the traversal direction enumeration values.">其中一個周遊方向的列舉型別值。</returns>
    </member>
    <member name="P:System.Windows.Input.TraversalRequest.Wrapped">
      <summary vsli:raw="Gets or sets a value that indicates whether focus traversal has reached the end of child elements that can have focus.">取得或設定值，這個值指出焦點周遊是否已到達能夠擁有焦點之子項目的結尾。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this traversal has reached the end of child elements that can have focus; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果這個周遊已到達能夠擁有焦點之子項目的結尾，則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.Int32Rect">
      <summary vsli:raw="Describes the width, height, and location of an integer rectangle.">描述整數矩形的寬度、高度以及位置。</summary>
    </member>
    <member name="M:System.Windows.Int32Rect.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; with the specified &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt; coordinates and the specified &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt;.">使用指定的 <see cref="T:System.Windows.Int32Rect" /> 及 <see cref="P:System.Windows.Int32Rect.X" /> 座標，以及指定的 <see cref="P:System.Windows.Int32Rect.Y" /> 與 <see cref="P:System.Windows.Int32Rect.Width" />，初始化 <see cref="P:System.Windows.Int32Rect.Height" /> 的新執行個體。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt; of the new &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; instance which specifies the x-coordinate of the top-left corner of the rectangle.">新 <see cref="P:System.Windows.Int32Rect.X" /> 執行個體的 <see cref="T:System.Windows.Int32Rect" />，指定矩形左上角的 x 座標。</param>
      <param name="y" vsli:raw="The &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt; of the new &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; instance which specifies the y-coordinate of the top-left corner of the rectangle.">新 <see cref="P:System.Windows.Int32Rect.Y" /> 執行個體的 <see cref="T:System.Windows.Int32Rect" />，指定矩形左上角的 y 座標。</param>
      <param name="width" vsli:raw="The &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt; of the new &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; instance which specifies the width of the rectangle.">新 <see cref="P:System.Windows.Int32Rect.Width" /> 執行個體的 <see cref="T:System.Windows.Int32Rect" />，指定矩形的寬度。</param>
      <param name="height" vsli:raw="The &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; of the new &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; instance which specifies the height of the rectangle.">新 <see cref="P:System.Windows.Int32Rect.Height" /> 執行個體的 <see cref="T:System.Windows.Int32Rect" />，指定矩形的高度。</param>
    </member>
    <member name="P:System.Windows.Int32Rect.Empty">
      <summary vsli:raw="Gets the empty rectangle, a special value that represents a rectangle with no position or area.">取得空矩形，表示沒有位置或區域之矩形的特殊值。</summary>
      <returns vsli:raw="An empty rectangle with no position or area.">沒有位置或區域的空矩形。</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified rectangle is equal to this rectangle.">判斷指定的矩形是否等於這個矩形。</summary>
      <param name="o" vsli:raw="The object to compare to the current rectangle.">要與目前矩形相比較的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; and has the same &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; as this rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若 <paramref name="o" /> 為 <see cref="T:System.Windows.Int32Rect" /> 且具有與此矩形相同的 <see cref="P:System.Windows.Int32Rect.X" />、<see cref="P:System.Windows.Int32Rect.Y" />、<see cref="P:System.Windows.Int32Rect.Width" /> 和 <see cref="P:System.Windows.Int32Rect.Height" />，即為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.Equals(System.Windows.Int32Rect)">
      <summary vsli:raw="Determines whether the specified rectangle is equal to this rectangle.">判斷指定的矩形是否等於這個矩形。</summary>
      <param name="value" vsli:raw="The rectangle to compare to the current rectangle.">要與目前矩形相比較的矩形。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; has the same &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; as this rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若 <paramref name="value" /> 具有與此矩形相同的 <see cref="P:System.Windows.Int32Rect.X" />、<see cref="P:System.Windows.Int32Rect.Y" />、<see cref="P:System.Windows.Int32Rect.Width" /> 及 <see cref="P:System.Windows.Int32Rect.Height" />，即為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.Equals(System.Windows.Int32Rect,System.Windows.Int32Rect)">
      <summary vsli:raw="Determines whether the specified rectangles are equal.">判斷指定的矩形是否相等。</summary>
      <param name="int32Rect1" vsli:raw="The first rectangle to compare.">要比較的第一個矩形。</param>
      <param name="int32Rect2" vsli:raw="The second rectangle to compare.">要比較的第二個矩形。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;int32Rect1&quot; /&gt; and &lt;paramref name=&quot;int32Rect2&quot; /&gt; have the same &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若 <paramref name="int32Rect1" /> 及 <paramref name="int32Rect2" /> 擁有相同的 <see cref="P:System.Windows.Int32Rect.X" />、<see cref="P:System.Windows.Int32Rect.Y" />、<see cref="P:System.Windows.Int32Rect.Width" /> 和 <see cref="P:System.Windows.Int32Rect.Height" />，即為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.GetHashCode">
      <summary vsli:raw="Creates a hash code from this rectangle's &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; values.">從這個矩形的 <see cref="P:System.Windows.Int32Rect.X" />、<see cref="P:System.Windows.Int32Rect.Y" />、<see cref="P:System.Windows.Int32Rect.Width" /> 及 <see cref="P:System.Windows.Int32Rect.Height" /> 值建立雜湊程式碼。</summary>
      <returns vsli:raw="This rectangle's hash code.">這個矩形的雜湊程式碼。</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.HasArea">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; properties of the &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; are greater than 0.">取得值，指出 <see cref="P:System.Windows.Int32Rect.Width" /> 的 <see cref="P:System.Windows.Int32Rect.Height" /> 和 <see cref="T:System.Windows.Int32Rect" /> 屬性是否大於 0。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; properties of the &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; are greater than 0; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />如果的<see cref="P:System.Windows.Int32Rect.Width" />和<see cref="P:System.Windows.Int32Rect.Height" />屬性<see cref="T:System.Windows.Int32Rect" />大於 0, 則為, <see langword="false" />否則為。</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.Height">
      <summary vsli:raw="Gets or sets the height of the rectangle.">取得或設定矩形的高度。</summary>
      <returns vsli:raw="The height of the rectangle. The default value is &lt;c&gt;0&lt;/c&gt;.">矩形的高度。 預設值為<c>0</c>。</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.IsEmpty">
      <summary vsli:raw="Gets a value indicating whether the rectangle is empty.">取得值，指出矩形是否為空。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the rectangle is empty; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />如果矩形是空的, 則為,否則為<see langword="false" />。 預設值為 <see langword="true" />。</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.op_Equality(System.Windows.Int32Rect,System.Windows.Int32Rect)">
      <summary vsli:raw="Compares two rectangles for exact equality.">比較兩個矩形是否完全相等。</summary>
      <param name="int32Rect1" vsli:raw="The first rectangle to compare.">要比較的第一個矩形。</param>
      <param name="int32Rect2" vsli:raw="The second rectangle to compare.">要比較的第二個矩形。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;int32Rect1&quot; /&gt; and &lt;paramref name=&quot;int32Rect2&quot; /&gt; have the same &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若 <paramref name="int32Rect1" /> 及 <paramref name="int32Rect2" /> 擁有相同的 <see cref="P:System.Windows.Int32Rect.X" />、<see cref="P:System.Windows.Int32Rect.Y" />、<see cref="P:System.Windows.Int32Rect.Width" /> 和 <see cref="P:System.Windows.Int32Rect.Height" />，即為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.op_Inequality(System.Windows.Int32Rect,System.Windows.Int32Rect)">
      <summary vsli:raw="Compares two rectangles for inequality.">比較兩個矩形是否不相等。</summary>
      <param name="int32Rect1" vsli:raw="The first rectangle to compare.">要比較的第一個矩形。</param>
      <param name="int32Rect2" vsli:raw="The second rectangle to compare.">要比較的第二個矩形。</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;int32Rect1&quot; /&gt; and &lt;paramref name=&quot;int32Rect2&quot; /&gt; have the same &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt;; otherwise, if all of these values are the same, then &lt;see langword=&quot;true&quot; /&gt;.">若 <paramref name="int32Rect1" /> 及 <paramref name="int32Rect2" /> 擁有相同的 <see cref="P:System.Windows.Int32Rect.X" />、<see cref="P:System.Windows.Int32Rect.Y" />、<see cref="P:System.Windows.Int32Rect.Width" /> 和 <see cref="P:System.Windows.Int32Rect.Height" />，即為 <see langword="false" />；若這些值全都相同，則為 <see langword="true" />。</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.Parse(System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; structure from the specified &lt;see cref=&quot;T:System.String&quot; /&gt; representation.">從指定的 <see cref="T:System.Windows.Int32Rect" /> 表示建立 <see cref="T:System.String" /> 結構。</summary>
      <param name="source" vsli:raw="A string representation of an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">
        <see cref="T:System.Windows.Int32Rect" /> 的字串表示。</param>
      <returns vsli:raw="The equivalent &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; structure.">對等的 <see cref="T:System.Windows.Int32Rect" /> 結構。</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Formats the value of the current instance using the specified format.">使用指定的格式，格式化目前執行個體的值。</summary>
      <param name="format" vsli:raw="The format to use.">要使用的格式。</param>
      <param name="provider" vsli:raw="The provider to use to format the value.">用來將值格式化的提供者。</param>
      <returns vsli:raw="The value of the current instance in the specified format.">目前執行個體的值，使用指定的格式。</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.ToString">
      <summary vsli:raw="Creates a string representation of this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">建立這個 <see cref="T:System.Windows.Int32Rect" /> 的字串表示。</summary>
      <returns vsli:raw="A string containing the same &lt;see cref=&quot;P:System.Windows.Int32Rect.X&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Y&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Int32Rect.Width&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Int32Rect.Height&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; structure.">字串，其中包含與這個 <see cref="P:System.Windows.Int32Rect.X" /> 結構相同的 <see cref="P:System.Windows.Int32Rect.Y" />、<see cref="P:System.Windows.Int32Rect.Width" />、<see cref="P:System.Windows.Int32Rect.Height" /> 及 <see cref="T:System.Windows.Int32Rect" /> 值。</returns>
    </member>
    <member name="M:System.Windows.Int32Rect.ToString(System.IFormatProvider)">
      <summary vsli:raw="Creates a string representation of this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; based on the supplied &lt;see cref=&quot;T:System.IFormatProvider&quot; /&gt;.">根據提供的 <see cref="T:System.Windows.Int32Rect" /> 建立這個 <see cref="T:System.IFormatProvider" /> 的字串表示。</summary>
      <param name="provider" vsli:raw="The format provider to use. If provider is &lt;see langword=&quot;null&quot; /&gt;, the current culture is used.">要使用的格式提供者。 如果提供者為 <see langword="null" />，則會使用目前的文化特性 (Culture)。</param>
      <returns vsli:raw="A string representation of this instance of &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">這個 <see cref="T:System.Windows.Int32Rect" /> 之執行個體的字串表示。</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.Width">
      <summary vsli:raw="Gets or sets the width of the rectangle.">取得或設定矩形的寬度。</summary>
      <returns vsli:raw="The width of the rectangle. The default value is &lt;c&gt;0&lt;/c&gt;.">矩形的寬度。 預設值為<c>0</c>。</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.X">
      <summary vsli:raw="Gets or sets the x-coordinate of the top-left corner of the rectangle.">取得或設定矩形左上角的 X 座標。</summary>
      <returns vsli:raw="The x-coordinate of the top-left corner of the rectangle. The default value is &lt;c&gt;0&lt;/c&gt;.">矩形左上角的 X 座標。 預設值為<c>0</c>。</returns>
    </member>
    <member name="P:System.Windows.Int32Rect.Y">
      <summary vsli:raw="Gets or sets the y-coordinate of the top-left corner of the rectangle.">取得或設定此矩形左上角的 Y 座標。</summary>
      <returns vsli:raw="The y-coordinate of the top-left corner of the rectangle. The default value is &lt;c&gt;0&lt;/c&gt;.">矩形左上角的 Y 座標。 預設值為<c>0</c>。</returns>
    </member>
    <member name="T:System.Windows.Int32RectConverter">
      <summary vsli:raw="Converts instances of other types to and from an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">將其他型別的執行個體與 <see cref="T:System.Windows.Int32Rect" /> 來回轉換。</summary>
    </member>
    <member name="M:System.Windows.Int32RectConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Int32RectConverter&quot; /&gt; class.">初始化 <see cref="T:System.Windows.Int32RectConverter" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Windows.Int32RectConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object can be converted from a given type to an instance of an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">判斷物件是否可從指定的型別轉換為 <see cref="T:System.Windows.Int32Rect" /> 的執行個體。</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">描述類型的內容資訊。</param>
      <param name="sourceType" vsli:raw="The type of the source that is being evaluated for conversion.">正在評估以進行轉換之來源的型別。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type can be converted to an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果型別可轉換為 <see cref="T:System.Windows.Int32Rect" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Int32RectConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; can be converted to a different type.">判斷 <see cref="T:System.Windows.Int32Rect" /> 的執行個體是否可轉換成不同的型別。</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">描述類型的內容資訊。</param>
      <param name="destinationType" vsli:raw="The desired type this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; is being evaluated for conversion.">要評估這個 <see cref="T:System.Windows.Int32Rect" /> 是否能轉換到的型別。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; can be converted to &lt;paramref name=&quot;destinationType&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果這個 <see cref="T:System.Windows.Int32Rect" /> 可轉換為 <paramref name="destinationType" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Int32RectConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified type to an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">嘗試將指定的型別轉換為 <see cref="T:System.Windows.Int32Rect" />。</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">提供轉換所需的內容資訊。</param>
      <param name="culture" vsli:raw="Cultural information to respect during conversion.">轉換期間應遵守的文化特性資訊。</param>
      <param name="value" vsli:raw="The object being converted.">要轉換的物件。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; created from converting &lt;paramref name=&quot;value&quot; /&gt;.">轉換 <paramref name="value" /> 時建立的 <see cref="T:System.Windows.Int32Rect" />。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The specified object is NULL or is a type that cannot be converted to an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">如果指定的物件為 NULL 或屬於無法轉換為 <see cref="T:System.Windows.Int32Rect" /> 的型別，則會擲回。</exception>
    </member>
    <member name="M:System.Windows.Int32RectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; to a specified type.">嘗試將 <see cref="T:System.Windows.Int32Rect" /> 轉換為指定的型別。</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">提供轉換所需的內容資訊。</param>
      <param name="culture" vsli:raw="Cultural information to respect during conversion.">轉換期間應遵守的文化特性資訊。</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; to convert.">要進行轉換的 <see cref="T:System.Windows.Int32Rect" />。</param>
      <param name="destinationType" vsli:raw="The type to convert this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt; to.">要將這個 <see cref="T:System.Windows.Int32Rect" /> 轉換成的型別。</param>
      <returns vsli:raw="The object created from converting this &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;.">轉換這個 <see cref="T:System.Windows.Int32Rect" /> 時建立的物件。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or is not an &lt;see cref=&quot;T:System.Windows.Int32Rect&quot; /&gt;, or &lt;paramref name=&quot;destinationType&quot; /&gt; is not one of the valid types for conversion.">如果 <paramref name="value" /> 是 <see langword="null" /> 或不是 <see cref="T:System.Windows.Int32Rect" />，或者 <paramref name="destinationType" /> 不是一個有效的轉換型別，則會擲回。</exception>
    </member>
    <member name="T:System.Windows.Interop.ComponentDispatcher">
      <summary vsli:raw="Enables shared control of the message pump between Win32 and WPF in interoperation scenarios.">在互通案例中，啟用 Win32 和 WPF 之間訊息提取的共用控制項。</summary>
    </member>
    <member name="P:System.Windows.Interop.ComponentDispatcher.CurrentKeyboardMessage">
      <summary vsli:raw="Gets the last message that was raised.">取得引發的最後訊息。</summary>
      <returns vsli:raw="The last message.">最後訊息。</returns>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.EnterThreadModal">
      <summary vsli:raw="Occurs when a thread becomes modal.">當執行緒成為強制回應時發生。</summary>
    </member>
    <member name="P:System.Windows.Interop.ComponentDispatcher.IsThreadModal">
      <summary vsli:raw="Gets a value that indicates whether the thread is modal.">取得值，表示執行緒是否為強制回應。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the thread is modal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果為強制回應的執行緒則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.LeaveThreadModal">
      <summary vsli:raw="Occurs when a modal thread becomes nonmodal.">當強制回應執行緒成為非強制回應時發生。</summary>
    </member>
    <member name="M:System.Windows.Interop.ComponentDispatcher.PopModal">
      <summary vsli:raw="Called to indicate that a modal thread is no longer modal.">呼叫以表示強制回應執行緒不再為強制回應。</summary>
    </member>
    <member name="M:System.Windows.Interop.ComponentDispatcher.PushModal">
      <summary vsli:raw="Called to indicate that the thread is modal.">呼叫以表示執行緒為強制回應。</summary>
    </member>
    <member name="M:System.Windows.Interop.ComponentDispatcher.RaiseIdle">
      <summary vsli:raw="Called to indicate that a thread is idle.">呼叫以表示執行緒閒置中。</summary>
    </member>
    <member name="M:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(System.Windows.Interop.MSG@)">
      <summary vsli:raw="Indicates that a new message is available for possible handling.">表示有新訊息可供處理。</summary>
      <param name="msg" vsli:raw="The message and its associated data.">訊息及其關聯的資料。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if one of the modules listening to the message loop processed the message. The owner of the message loop should ignore the message. &lt;see langword=&quot;false&quot; /&gt;, if the message was not processed. In this case, the owner of the message pump should call the Win32 function TranslateMessage followed by DispatchMessage.">如果其中一個接聽訊息迴圈的模組已處理訊息，則為 <see langword="true" />。 訊息迴圈的擁有者應忽略該訊息。 如果未處理訊息，則為 <see langword="false" />。 在這種情況下，訊息提取的擁有者應呼叫 Win32 函式 TranslateMessage (英文)，後面接著 DispatchMessage (英文)。</returns>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage">
      <summary vsli:raw="Occurs when the message pump receives a keyboard message.">當訊息幫浦收到鍵盤訊息時發生。</summary>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.ThreadIdle">
      <summary vsli:raw="Occurs when the thread is idle.">當執行緒閒置時發生。</summary>
    </member>
    <member name="E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage">
      <summary vsli:raw="Occurs when the message pump receives a keyboard message.">當訊息幫浦收到鍵盤訊息時發生。</summary>
    </member>
    <member name="T:System.Windows.Interop.IKeyboardInputSink">
      <summary vsli:raw="Provides a keyboard sink for components that manages tabbing, accelerators, and mnemonics across interop boundaries and between HWNDs. This interface implements keyboard message management in WPF-Win32 interoperation scenarios.">為元件提供鍵盤接收，這些元件會管理 Interop 界限中和 HWND 之間的定位鍵、快速鍵和助憶鍵 (Mnemonics)。 這個介面實作 WPF-Win32 交互操作案例中的鍵盤訊息管理。</summary>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin">
      <summary vsli:raw="Gets a value that indicates whether the sink or one of its contained components has focus.">取得值，這個值表示接收或其包含的其中一個元件是否有焦點。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the sink or one of its contained components has focus; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果接收或其包含的其中一個元件有焦點則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite">
      <summary vsli:raw="Gets or sets a reference to the component's container's &lt;see cref=&quot;T:System.Windows.Interop.IKeyboardInputSite&quot; /&gt; interface.">取得或設定對元件容器之 <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> 介面的參考。</summary>
      <returns vsli:raw="A reference to the container's &lt;see cref=&quot;T:System.Windows.Interop.IKeyboardInputSite&quot; /&gt; interface.">對容器之 <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> 介面的參考。</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary vsli:raw="Called when one of the mnemonics (access keys) for this sink is invoked.">當叫用這個接收的其中一個助憶鍵 (便捷鍵 (Access Key)) 時呼叫。</summary>
      <param name="msg" vsli:raw="The message for the mnemonic and associated data. Do not modify this message structure. It is passed by reference for performance reasons only.">助憶鍵及其相關聯資料的訊息。 請勿修改這個訊息結構。 參考僅基於效能考量而傳送它。</param>
      <param name="modifiers" vsli:raw="Modifier keys.">輔助按鍵 (Modifier Key)。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果已處理訊息，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
      <summary vsli:raw="Registers the &lt;see cref=&quot;T:System.Windows.Interop.IKeyboardInputSink&quot; /&gt; interface of a contained component.">註冊所包含之元件的 <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> 介面。</summary>
      <param name="sink" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Interop.IKeyboardInputSink&quot; /&gt; sink of the contained component.">所包含之元件的 <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> 接收。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Interop.IKeyboardInputSite&quot; /&gt; site of the contained component.">所包含之元件的 <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> 站台。</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)">
      <summary vsli:raw="Sets focus on either the first tab stop or the last tab stop of the sink.">將焦點設定在接收的第一個定位停駐點 (Tab Stop) 或最後一個定位停駐點。</summary>
      <param name="request" vsli:raw="Specifies whether focus should be set to the first or the last tab stop.">指定是否應將焦點設定為第一個或最後一個定位停駐點。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the focus has been set as requested; &lt;see langword=&quot;false&quot; /&gt;, if there are no tab stops.">如果已依照要求設定焦點則為 <see langword="true" />，如果沒有定位停駐點則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary vsli:raw="Processes keyboard input at the keydown message level.">在 Keydown 訊息層級處理鍵盤輸入。</summary>
      <param name="msg" vsli:raw="The message and associated data. Do not modify this structure. It is passed by reference for performance reasons only.">訊息及相關聯資料。 請勿修改這個結構。 參考僅基於效能考量而傳送它。</param>
      <param name="modifiers" vsli:raw="Modifier keys.">輔助按鍵 (Modifier Key)。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled by the method implementation; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果訊息由方法實作處理則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
      <summary vsli:raw="Processes WM_CHAR, WM_SYSCHAR, WM_DEADCHAR, and WM_SYSDEADCHAR input messages before &lt;see cref=&quot;M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)&quot; /&gt; is called.">請先處理 WM_CHAR、WM_SYSCHAR、WM_DEADCHAR 和 WM_SYSDEADCHAR 輸入訊息，然後再呼叫 <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />。</summary>
      <param name="msg" vsli:raw="The message and associated data. Do not modify this structure. It is passed by reference for performance reasons only.">訊息及相關聯資料。 請勿修改這個結構。 參考僅基於效能考量而傳送它。</param>
      <param name="modifiers" vsli:raw="Modifier keys.">輔助按鍵 (Modifier Key)。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was processed and &lt;see cref=&quot;M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)&quot; /&gt; should not be called; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果已處理訊息則為 <see langword="true" />，此時不應呼叫 <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.Interop.IKeyboardInputSite">
      <summary vsli:raw="Manages keyboard focus within the container.  This interface implements keyboard message management in WPF-Win32 interoperation scenarios.">在容器內管理鍵盤焦點。  這個介面實作 WPF-Win32 交互操作案例中的鍵盤訊息管理。</summary>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops(System.Windows.Input.TraversalRequest)">
      <summary vsli:raw="Called by a contained component when it has reached its last tab stop and has no further items to tab to.">由所包含的元件在到達其最後一個定位停駐點 (Tab Stop)，且沒有要定位到的其他項目時呼叫。</summary>
      <param name="request" vsli:raw="Specifies whether focus should be set to the first or the last tab stop.">指定是否應將焦點設定為第一個或最後一個定位停駐點。</param>
      <returns vsli:raw="If this method returns &lt;see langword=&quot;true&quot; /&gt;, the site has shifted focus to another component. If this method returns &lt;see langword=&quot;false&quot; /&gt;, focus is still within the calling component. The component should &quot;wrap around&quot; and set focus to its first contained tab stop.">如果這個方法傳回 <see langword="true" />，則站台會將焦點轉移到其他元件。 如果此方法傳回 <see langword="false" />，則焦點將仍位於呼叫元件內。 元件應「環繞」並將焦點設定至其所包含的第一個定位停駐點。</returns>
    </member>
    <member name="P:System.Windows.Interop.IKeyboardInputSite.Sink">
      <summary vsli:raw="Gets the keyboard sink associated with this site.">取得與這個站台相關聯的鍵盤接收。</summary>
      <returns vsli:raw="The current site's &lt;see cref=&quot;T:System.Windows.Interop.IKeyboardInputSink&quot; /&gt; interface.">目前站台的 <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> 介面。</returns>
    </member>
    <member name="M:System.Windows.Interop.IKeyboardInputSite.Unregister">
      <summary vsli:raw="Unregisters a child keyboard input sink from this site.">從此站台移除註冊子鍵盤輸入接收。</summary>
    </member>
    <member name="T:System.Windows.Interop.MSG">
      <summary vsli:raw="Contains message information from a thread's message queue.">包含來自執行緒之訊息佇列的訊息資訊。</summary>
    </member>
    <member name="P:System.Windows.Interop.MSG.hwnd">
      <summary vsli:raw="Gets or sets the window handle (HWND) to the window whose window procedure receives the message.">取得或設定視窗的視窗控制代碼 (Window Handle) (HWND)，該視窗的視窗程序 (Procedure) 會接收訊息。</summary>
      <returns vsli:raw="The window handle (HWND).">視窗控制代碼 (HWND)。</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.lParam">
      <summary vsli:raw="Gets or sets the &lt;paramref name=&quot;lParam&quot; /&gt; value that specifies additional information about the message. The exact meaning depends on the value of the &lt;see cref=&quot;P:System.Windows.Interop.MSG.message&quot; /&gt; member.">取得或設定 <paramref name="lParam" /> 值，這個值指定訊息的其他資訊。 確切意義取決於 <see cref="P:System.Windows.Interop.MSG.message" /> 成員的值。</summary>
      <returns vsli:raw="The &lt;paramref name=&quot;lParam&quot; /&gt; value for the message.">訊息的 <paramref name="lParam" /> 值。</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.message">
      <summary vsli:raw="Gets or sets the message identifier.">取得或設定訊息識別項。</summary>
      <returns vsli:raw="The message identifier.">訊息識別項。</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.pt_x">
      <summary vsli:raw="Gets or sets the x coordinate of the cursor position on the screen, when the message was posted.">取得或設定公佈訊息時螢幕上游標位置的 x 座標。</summary>
      <returns vsli:raw="The x coordinate of the cursor position.">游標位置的 x 座標。</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.pt_y">
      <summary vsli:raw="Gets or sets the y coordinate of the cursor position on the screen, when the message was posted.">取得或設定公佈訊息時螢幕上游標位置的 y 座標。</summary>
      <returns vsli:raw="The y coordinate of the cursor position.">游標位置的 y 座標。</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.time">
      <summary vsli:raw="Gets or sets the time at which the message was posted.">取得或設定公佈訊息的時間。</summary>
      <returns vsli:raw="The time that the message was posted.">公佈訊息的時間。</returns>
    </member>
    <member name="P:System.Windows.Interop.MSG.wParam">
      <summary vsli:raw="Gets or sets the &lt;paramref name=&quot;wParam&quot; /&gt; value for the message, which specifies additional information about the message. The exact meaning depends on the value of the message.">取得或設定訊息的 <paramref name="wParam" /> 值，這個值指定訊息的其他資訊。 確切意義取決於訊息的值。</summary>
      <returns vsli:raw="The &lt;paramref name=&quot;wParam&quot; /&gt; value for the message.">訊息的 <paramref name="wParam" /> 值。</returns>
    </member>
    <member name="T:System.Windows.Interop.ThreadMessageEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage&quot; /&gt; and &lt;see cref=&quot;E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage&quot; /&gt; events.">表示處理 <see cref="E:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage" /> 和 <see cref="E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage" /> 事件的方法。</summary>
      <param name="msg" vsli:raw="A structure with the message data.">包含訊息資料的結構。</param>
      <param name="handled" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果已處理訊息，則為 <see langword="true" />；否則為 <see langword="false" />。</param>
    </member>
    <member name="T:System.Windows.IWeakEventListener">
      <summary vsli:raw="Provides event listening support for classes that expect to receive events through the WeakEvent pattern and a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt;.">為透過 WeakEvent 模式和 <see cref="T:System.Windows.WeakEventManager" /> 接收事件的類別提供事件接聽支援。</summary>
    </member>
    <member name="M:System.Windows.IWeakEventListener.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <summary vsli:raw="Receives events from the centralized event manager.">從集中式事件管理員接收事件。</summary>
      <param name="managerType" vsli:raw="The type of the &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; calling this method.">呼叫這個方法的 <see cref="T:System.Windows.WeakEventManager" /> 型別。</param>
      <param name="sender" vsli:raw="Object that originated the event.">發出事件的物件。</param>
      <param name="e" vsli:raw="Event data.">事件資料。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the listener handled the event. It is considered an error by the &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; handling in WPF to register a listener for an event that the listener does not handle. Regardless, the method should return &lt;see langword=&quot;false&quot; /&gt; if it receives an event that it does not recognize or handle.">如果接聽程式已處理事件則為 <see langword="true" />。 在 WPF 中處理的 <see cref="T:System.Windows.WeakEventManager" /> 會將其視為錯誤，以註冊接聽程式未處理之事件的接聽程式。 如果方法接收到無法辨識或處理的事件，不論如何都該傳回 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.LocalValueEntry">
      <summary vsli:raw="Represents a property identifier and the property value for a locally set dependency property.">表示屬性識別項和本機設定相依性屬性的屬性值。</summary>
    </member>
    <member name="M:System.Windows.LocalValueEntry.Equals(System.Object)">
      <summary vsli:raw="Determines whether two &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; instances are equal.">判斷兩個 <see cref="T:System.Windows.LocalValueEntry" /> 執行個體是否相等。</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; to compare with the current &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt;.">與目前的 <see cref="T:System.Windows.LocalValueEntry" /> 相比較的 <see cref="T:System.Windows.LocalValueEntry" />。</param>
      <returns vsli:raw="This &lt;see cref=&quot;M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)&quot; /&gt; implementation compares the values of the &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Property&quot; /&gt;, and potentially compares the values of &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Value&quot; /&gt;. The &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Property&quot; /&gt; component of a &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; is a value type, so will always be a bitwise comparison. For the &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Value&quot; /&gt; component, this implementation employs a bitwise comparison if it is a value type. For locally set properties that have reference types, the behavior is deferred to that type's equality determination mechanisms, because it just uses the == operator on the two values internally. By default, this would be a reference equality of the values and thus the equality of the entire &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; would become a reference equality.">此 <see cref="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)" /> 實作會比較 <see cref="P:System.Windows.LocalValueEntry.Property" /> 的值，而且也可能比較 <see cref="P:System.Windows.LocalValueEntry.Value" /> 的值。 <see cref="P:System.Windows.LocalValueEntry.Property" /> 的 <see cref="T:System.Windows.LocalValueEntry" /> 元件為值型別，因此永遠都是位元 (Bitwise) 比較。 如果 <see cref="P:System.Windows.LocalValueEntry.Value" /> 元件是值型別，這個實作會運用位元比較。 針對擁有參考型別的本機設定屬性，行為會受到此型別相等判斷機制的延後，因為它只會在兩個數值上內部使用 == 運算子。 根據預設，這會是值的參考相等，所以整個 <see cref="T:System.Windows.LocalValueEntry" /> 的相等將會變成參考相等。</returns>
    </member>
    <member name="M:System.Windows.LocalValueEntry.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt;.">傳回這個 <see cref="T:System.Windows.LocalValueEntry" /> 的雜湊程式碼。</summary>
      <returns vsli:raw="A signed 32-bit integer value.">帶正負號的 32 位元整數值。</returns>
    </member>
    <member name="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
      <summary vsli:raw="Compares the specified &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; instances to determine whether they are the same.">比較指定的 <see cref="T:System.Windows.LocalValueEntry" /> 執行個體，判斷它們是否相同。</summary>
      <param name="obj1" vsli:raw="The first instance to compare.">要比較的第一個執行個體。</param>
      <param name="obj2" vsli:raw="The second instance to compare.">要比較的第二個執行個體。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;obj1&quot; /&gt;&lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; is equal to the &lt;paramref name=&quot;obj2&quot; /&gt;&lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若 <paramref name="obj1" /><see cref="T:System.Windows.LocalValueEntry" /> 等於 <paramref name="obj2" /><see cref="T:System.Windows.LocalValueEntry" /> 則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.LocalValueEntry.op_Inequality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
      <summary vsli:raw="Compares the specified &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; instances to determine whether they are different.">比較指定的 <see cref="T:System.Windows.LocalValueEnumerator" /> 執行個體，判斷它們是否不同。</summary>
      <param name="obj1" vsli:raw="The first instance to compare.">要比較的第一個執行個體。</param>
      <param name="obj2" vsli:raw="The second instance to compare.">要比較的第二個執行個體。</param>
      <returns vsli:raw="This implementation compares the values of the &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Property&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Value&quot; /&gt; components of a &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt;. The &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Property&quot; /&gt; component of a &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; is always a value type, so this comparison will always be a bitwise comparison. For the &lt;see cref=&quot;P:System.Windows.LocalValueEntry.Value&quot; /&gt; component, this implementation employs a bitwise comparison if it is a value type.  &#xA;  &#xA; For locally set properties that have reference types, the behavior is deferred to that type's equality determination mechanisms, because it uses the &lt;see langword=&quot;==&quot; /&gt; operator on the two values internally. By default, this is a reference equality of the values.">此實作會比較 <see cref="P:System.Windows.LocalValueEntry.Property" /> 的值和 <see cref="P:System.Windows.LocalValueEntry.Value" /> 的 <see cref="T:System.Windows.LocalValueEntry" /> 元件。 <see cref="P:System.Windows.LocalValueEntry.Property" /> 的 <see cref="T:System.Windows.LocalValueEntry" /> 元件永遠為值型別，因此這個比較永遠都是位元比較。 如果 <see cref="P:System.Windows.LocalValueEntry.Value" /> 元件是值型別，這個實作會運用位元比較。  
針對擁有參考型別的本機設定屬性，行為會受到此型別相等判斷機制的延後，因為它只會在兩個數值上內部使用 <see langword="==" /> 運算子。 根據預設，這是值的參考相等。</returns>
    </member>
    <member name="P:System.Windows.LocalValueEntry.Property">
      <summary vsli:raw="Gets the identifier for the locally set dependency property that is represented by this entry.">取得以這個項目表示之本機設定相依性屬性的識別項。</summary>
      <returns vsli:raw="The identifier for the locally set dependency property.">本機設定之相依性屬性的識別項。</returns>
    </member>
    <member name="P:System.Windows.LocalValueEntry.Value">
      <summary vsli:raw="Gets the value of the locally set dependency property.">取得本機設定之相依性屬性的值。</summary>
      <returns vsli:raw="The value of the locally set dependency property as an object.">本機設定之相依性屬性的值，以物件表示。</returns>
    </member>
    <member name="T:System.Windows.LocalValueEnumerator">
      <summary vsli:raw="Provides enumeration support for the local values of any dependency properties that exist on a &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt;.">為任何存在於 <see cref="T:System.Windows.DependencyObject" /> 之相依性屬性的區域數值提供列舉支援。</summary>
    </member>
    <member name="P:System.Windows.LocalValueEnumerator.Count">
      <summary vsli:raw="Gets the number of items that are represented in the collection.">取得集合中表示的項目數。</summary>
      <returns vsli:raw="The number of items in the collection.">集合中的項目數目</returns>
    </member>
    <member name="P:System.Windows.LocalValueEnumerator.Current">
      <summary vsli:raw="Gets the current element in the collection.">取得集合中目前的項目。</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;T:System.Windows.LocalValueEntry&quot; /&gt; in the collection.">集合中目前的 <see cref="T:System.Windows.LocalValueEntry" />。</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.Equals(System.Object)">
      <summary vsli:raw="Determines whether the provided &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; is equivalent to this &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt;.">判斷提供的 <see cref="T:System.Windows.LocalValueEnumerator" /> 是否與這個 <see cref="T:System.Windows.LocalValueEnumerator" /> 相等。</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; to compare with the current &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt;.">與目前的 <see cref="T:System.Windows.LocalValueEnumerator" /> 相比較的 <see cref="T:System.Windows.LocalValueEnumerator" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.Windows.LocalValueEnumerator" /> 和目前的 <see cref="T:System.Windows.LocalValueEnumerator" /> 相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.GetHashCode">
      <summary vsli:raw="Returns a hash code for the current &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt;.">傳回目前 <see cref="T:System.Windows.LocalValueEnumerator" /> 的雜湊程式碼。</summary>
      <returns vsli:raw="A 32-bit integer hash code.">32 位元整數雜湊碼。</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.MoveNext">
      <summary vsli:raw="Advances the enumerator to the next element of the collection.">將列舉值往前推至下集合中的下一個項目。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the enumerator was successfully advanced to the next element; &lt;see langword=&quot;false&quot; /&gt; if the enumerator has passed the end of the collection.">如果列舉值成功前移至下一個項目，則為 <see langword="true" />；如果列舉值超過集合的結尾，則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.op_Equality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)">
      <summary vsli:raw="Compares whether two specified &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; objects are the same.">比較兩個指定的 <see cref="T:System.Windows.LocalValueEnumerator" /> 物件是否相同。</summary>
      <param name="obj1" vsli:raw="The first object to compare.">要比較的第一個物件。</param>
      <param name="obj2" vsli:raw="The second object to compare.">要比較的第二個物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;obj1&quot; /&gt;&lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; is equal to the &lt;paramref name=&quot;obj2&quot; /&gt;&lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若 <paramref name="obj1" /><see cref="T:System.Windows.LocalValueEnumerator" /> 等於 <paramref name="obj2" /><see cref="T:System.Windows.LocalValueEnumerator" /> 則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.op_Inequality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)">
      <summary vsli:raw="Compares two specified &lt;see cref=&quot;T:System.Windows.LocalValueEnumerator&quot; /&gt; objects to determine whether they are not the same.">比較兩個指定的 <see cref="T:System.Windows.LocalValueEnumerator" /> 物件，判斷它們是否不相同。</summary>
      <param name="obj1" vsli:raw="The first object to compare.">要比較的第一個物件。</param>
      <param name="obj2" vsli:raw="The second object to compare.">要比較的第二個物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instances are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果執行個體不相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.LocalValueEnumerator.Reset">
      <summary vsli:raw="Sets the enumerator to its initial position, which is before the first element in the collection.">設定列舉值至它的初始位置，這是在集合中第一個項目之前。</summary>
    </member>
    <member name="P:System.Windows.LocalValueEnumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="For a description of this members, see &lt;see cref=&quot;P:System.Collections.IEnumerator.Current&quot; /&gt;.">如需這個成員的說明，請參閱 <see cref="P:System.Collections.IEnumerator.Current" />。</summary>
      <returns vsli:raw="The current element in the collection.">集合中目前的項目。</returns>
    </member>
    <member name="T:System.Windows.Markup.DesignerSerializationOptions">
      <summary vsli:raw="Specifies how a property is to be serialized.">指定要序列化屬性的方式。</summary>
    </member>
    <member name="F:System.Windows.Markup.DesignerSerializationOptions.SerializeAsAttribute">
      <summary vsli:raw="The property should be serialized as an attribute.">屬性 (Property) 必須序列化為屬性 (Attribute)。</summary>
    </member>
    <member name="T:System.Windows.Markup.DesignerSerializationOptionsAttribute">
      <summary vsli:raw="Specifies the serialization flags for a property.">指定屬性的序列化 (Serialization) 旗標。</summary>
    </member>
    <member name="M:System.Windows.Markup.DesignerSerializationOptionsAttribute.#ctor(System.Windows.Markup.DesignerSerializationOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.DesignerSerializationOptionsAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Windows.Markup.DesignerSerializationOptionsAttribute" /> 類別的新執行個體。</summary>
      <param name="designerSerializationOptions" vsli:raw="Specifies how the property is to be serialized.">指定要序列化屬性的方式。</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;designerSerializationOptions&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Windows.Markup.DesignerSerializationOptions&quot; /&gt; value.">
        <paramref name="designerSerializationOptions" /> 不是有效的 <see cref="T:System.Windows.Markup.DesignerSerializationOptions" /> 值。</exception>
    </member>
    <member name="P:System.Windows.Markup.DesignerSerializationOptionsAttribute.DesignerSerializationOptions">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.DesignerSerializationOptions&quot; /&gt; set on the attribute.">取得在屬性上設定的 <see cref="T:System.Windows.Markup.DesignerSerializationOptions" />。</summary>
      <returns vsli:raw="The serialization option, as a value of the enumeration.">序列化選項，以列舉的值表示。</returns>
    </member>
    <member name="T:System.Windows.Markup.InternalTypeHelper">
      <summary vsli:raw="Abstract class used internally by the WPF XAML compiler to support the use of internal types.">WPF XAML 編譯器 (Compiler) 在內部使用抽象類別 (Abstract Class) 來支援使用內部型別。</summary>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.InternalTypeHelper&quot; /&gt; class.">初始化 <see cref="T:System.Windows.Markup.InternalTypeHelper" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
      <summary vsli:raw="When overridden in a derived (generated) class, attaches an event handler delegate to an internal event.">在衍生 (產生的) 類別中覆寫時，將事件處理常式委派 (Delegate) 附加至內部事件。</summary>
      <param name="eventInfo" vsli:raw="The event information for the event (CLR reflection information).">事件的事件資訊 (CLR 反映資訊)。</param>
      <param name="target" vsli:raw="The target where the handler is attached.">附加處理常式的目標。</param>
      <param name="handler" vsli:raw="The event handler.">事件處理常式。</param>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
      <summary vsli:raw="When overridden in a derived (generated) class, creates an event delegate referencing a non-public handler method.">在衍生 (產生的) 類別中覆寫時，建立參考非公用處理常式方法的事件委派。</summary>
      <param name="delegateType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the delegate.">委派的 <see cref="T:System.Type" />。</param>
      <param name="target" vsli:raw="The target where the handler is attached.">附加處理常式的目標。</param>
      <param name="handler" vsli:raw="The name of the handler implementation.">處理常式實作的名稱。</param>
      <returns vsli:raw="The delegate reference.">委派參考。</returns>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
      <summary vsli:raw="When overridden in a derived (generated) class, creates an instance of an internal type.">在衍生 (產生的) 類別中覆寫時，建立內部型別的執行個體。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to create.">要建立的 <see cref="T:System.Type" />。</param>
      <param name="culture" vsli:raw="Culture specific information.">特定文化特性 (Culture) 資訊。</param>
      <returns vsli:raw="The created instance.">建立的執行個體。</returns>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
      <summary vsli:raw="When overridden in a derived (generated) class, gets the value of an internal property on the target object.">在衍生 (產生的) 類別中覆寫時，取得目標物件之內部屬性的值。</summary>
      <param name="propertyInfo" vsli:raw="Property information for the property to get.">要取得之屬性的屬性資訊。</param>
      <param name="target" vsli:raw="The object that holds the desired property value.">存放所需屬性值的物件。</param>
      <param name="culture" vsli:raw="Culture specific information.">特定文化特性 (Culture) 資訊。</param>
      <returns vsli:raw="The value of the property.">屬性的值。</returns>
    </member>
    <member name="M:System.Windows.Markup.InternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
      <summary vsli:raw="When overridden in a derived (generated) class, sets the value on an internal property on the target object.">在衍生 (產生的) 類別中覆寫時，設定目標物件之內部屬性的值。</summary>
      <param name="propertyInfo" vsli:raw="Property information for the property to set.">要設定之屬性的屬性資訊。</param>
      <param name="target" vsli:raw="The object that holds the desired property value.">存放所需屬性值的物件。</param>
      <param name="value" vsli:raw="The value to set.">要設定的值。</param>
      <param name="culture" vsli:raw="Culture specific information.">特定文化特性 (Culture) 資訊。</param>
    </member>
    <member name="T:System.Windows.Markup.IReceiveMarkupExtension">
      <summary vsli:raw="Provides a mechanism whereby types can declare that they can receive an expression (or another class) from a markup extension, where the output is a different property type than the target property. Do not use for .NET Framework 4 implementations.">提供型別可以宣告它們能夠接受來自標記延伸運算式 (或其他類別) 的一種機制，其中輸出會是有別於目標屬性的另一種屬性。 請勿用於 .NET Framework 4 實作。</summary>
    </member>
    <member name="M:System.Windows.Markup.IReceiveMarkupExtension.ReceiveMarkupExtension(System.String,System.Windows.Markup.MarkupExtension,System.IServiceProvider)">
      <summary vsli:raw="Provides the handling for markup extensions that provide property values. Do not use for .NET Framework 4 implementations; see &lt;see cref=&quot;T:System.Windows.Markup.IReceiveMarkupExtension&quot; /&gt;.">能夠處理可以提供屬性值的標記延伸。 請勿用於 .NET Framework 4 實作，請參閱 <see cref="T:System.Windows.Markup.IReceiveMarkupExtension" />。</summary>
      <param name="property" vsli:raw="The name of the target property.">目標屬性的名稱。</param>
      <param name="markupExtension" vsli:raw="The markup extension instance of the incoming data.">傳入資料的標記延伸執行個體。</param>
      <param name="serviceProvider" vsli:raw="Can provide additional services that should be performed when processing the markup extension data for a property value.">可以提供應該在處理屬性值之標記延伸資料時執行的其他服務。</param>
    </member>
    <member name="T:System.Windows.Markup.Primitives.MarkupObject">
      <summary vsli:raw="Abstract class that represents an object that can be used to navigate a tree of objects.">抽象類別 (Abstract Class)，表示可用於巡覽物件之樹狀結構的物件。</summary>
    </member>
    <member name="M:System.Windows.Markup.Primitives.MarkupObject.AssignRootContext(System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="When overridden in a derived class, assigns a root context for &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; classes.">在衍生類別中覆寫時，指派 <see cref="T:System.Windows.Markup.ValueSerializer" /> 類別的根內容。</summary>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Markup.IValueSerializerContext&quot; /&gt; to assign a root context for.">要指派根內容的 <see cref="T:System.Windows.Markup.IValueSerializerContext" />。</param>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupObject.Attributes">
      <summary vsli:raw="When overridden in a derived class, gets the attributes associated with this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupObject&quot; /&gt;.">在衍生類別 (Derived Class) 中覆寫時，取得與這個 <see cref="T:System.Windows.Markup.Primitives.MarkupObject" /> 相關聯的屬性。</summary>
      <returns vsli:raw="The collection of attributes.">屬性 (Attribute) 的集合。</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupObject.Instance">
      <summary vsli:raw="When overridden in a derived class, gets the instance of the object represented by this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupObject&quot; /&gt;.">在衍生類別中覆寫時，取得由這個 <see cref="T:System.Windows.Markup.Primitives.MarkupObject" /> 表示之物件的執行個體。</summary>
      <returns vsli:raw="The instance of the object.">物件的執行個體。</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupObject.ObjectType">
      <summary vsli:raw="When overridden in a derived class, gets the type of the &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupObject&quot; /&gt; instance.">在衍生類別中覆寫時，取得 <see cref="T:System.Windows.Markup.Primitives.MarkupObject" /> 執行個體的型別。</summary>
      <returns vsli:raw="The type of the object.">物件的類型。</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupObject.Properties">
      <summary vsli:raw="When overridden in a derived class, gets the properties of this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupObject&quot; /&gt; instance that should be written to XAML.">在衍生類別中覆寫時，取得這個 <see cref="T:System.Windows.Markup.Primitives.MarkupObject" /> 執行個體的屬性，該執行個體應寫入 XAML。</summary>
      <returns vsli:raw="The properties.">屬性。</returns>
    </member>
    <member name="T:System.Windows.Markup.Primitives.MarkupProperty">
      <summary vsli:raw="Abstract class that provides a property description to be used while writing to markup which encapsulates access to properties and their values.">抽象類別 (Abstract Class)，提供寫入標記時要使用的屬性描述，該標記可封裝對屬性及其值的存取。</summary>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Attributes">
      <summary vsli:raw="When overridden in a derived class, gets the attributes associated with this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt;.">在衍生類別 (Derived Class) 中覆寫時，取得與這個 <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> 相關聯的屬性。</summary>
      <returns vsli:raw="The collection of attributes.">屬性 (Attribute) 的集合。</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty">
      <summary vsli:raw="When overridden in a derived class, gets the &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt; identifier for the markup property if the property is implemented as a dependency property.">在衍生類別中覆寫時，如果屬性是實作為相依性屬性，則取得標記屬性的 <see cref="T:System.Windows.DependencyProperty" /> 識別項。</summary>
      <returns vsli:raw="The dependency property identifier.">相依性屬性識別項。</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsAttached">
      <summary vsli:raw="When overridden in a derived class, determines whether this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; is an attached &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt;.">在衍生類別中覆寫時，決定這個 <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> 是否為附加 <see cref="T:System.Windows.DependencyProperty" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property is an attached &lt;see cref=&quot;T:System.Windows.DependencyProperty&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果屬性是附加 <see cref="T:System.Windows.DependencyProperty" /> 則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsComposite">
      <summary vsli:raw="When overridden in a derived class, determines whether this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; is a composite property.">在衍生類別中覆寫時，決定這個 <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> 是否為複合屬性。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; is this property is a composite property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果這個屬性是複合屬性則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsConstructorArgument">
      <summary vsli:raw="When overridden in a derived class, determines whether this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; represents a constructor argument.">在衍生類別中覆寫時，決定這個 <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> 是否表示建構函式 (Constructor) 引數。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this property represents a constructor argument; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果這個屬性表示建構函式引數則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsContent">
      <summary vsli:raw="When overridden in a derived class, determines whether this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; represents direct content of a collection.">在衍生類別中覆寫時，決定這個 <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> 是否表示集合的直接內容。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property represents direct content; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果屬性表示直接內容則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsKey">
      <summary vsli:raw="When overridden in a derived class, determines whether this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; represents the key used by the &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupObject&quot; /&gt; to store the item in a dictionary.">在衍生類別中覆寫時，決定這個 <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> 是否表示由 <see cref="T:System.Windows.Markup.Primitives.MarkupObject" /> 使用的索引鍵，以將項目儲存到字典中。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this property represents a key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果這個屬性表示索引鍵則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.IsValueAsString">
      <summary vsli:raw="When overridden in a derived class, determines whether this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; represents text which is passed to a type converter to create an instance of the property or if a constructor should be used.">在衍生類別中覆寫時，決定這個 <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> 是否表示傳遞至型別轉換子 (Type Converter) 的文字，以建立屬性的執行個體，或是否應使用建構函式。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; represents a string; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果這個 <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> 表示字串則為<see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Items">
      <summary vsli:raw="When overridden in a derived class, gets the items that make up the value of this property.">在衍生類別中覆寫時，取得組成這個屬性值的項目。</summary>
      <returns vsli:raw="The items that make up the value of this property.">組成此屬性之值的項目。</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Name">
      <summary vsli:raw="When overridden in a derived class, gets a name that is used for diagnostics and error reporting.">在衍生類別中覆寫時，取得用於診斷和錯誤報告的名稱。</summary>
      <returns vsli:raw="The identifier property name.">識別項屬性名稱。</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor">
      <summary vsli:raw="When overridden in a derived class, gets the &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; for the markup property.">在衍生類別中覆寫時，取得標記屬性的 <see cref="T:System.ComponentModel.PropertyDescriptor" />。</summary>
      <returns vsli:raw="The property descriptor.">屬性描述元。</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.PropertyType">
      <summary vsli:raw="When overridden in a derived class, gets the CLR type of the property.">在衍生類別中覆寫時，取得屬性的 CLR 型別。</summary>
      <returns vsli:raw="The CLR type.">CLR 型別。</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.StringValue">
      <summary vsli:raw="When overridden in a derived class, gets the string value of this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt;.">在衍生類別中覆寫時，取得這個 <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> 的字串值。</summary>
      <returns vsli:raw="The string value.">字串值。</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.TypeReferences">
      <summary vsli:raw="When overridden in a derived class, gets the set of types that this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt; will reference when it serializes its value as a string.">在衍生類別中覆寫時，取得這個 <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> 在將其值序列化為字串時要參考的型別集。</summary>
      <returns vsli:raw="The set of types.">型別集。</returns>
    </member>
    <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Value">
      <summary vsli:raw="When overridden in a derived class, gets the current value of this &lt;see cref=&quot;T:System.Windows.Markup.Primitives.MarkupProperty&quot; /&gt;.">在衍生類別中覆寫時，取得這個 <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> 的目前值。</summary>
      <returns vsli:raw="The current value.">目前的值。</returns>
    </member>
    <member name="T:System.Windows.Markup.ServiceProviders">
      <summary vsli:raw="Provides an implementation for the &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; interface with methods that enable adding services.">提供 <see cref="T:System.IServiceProvider" /> 介面的實作，其方法可啟用加入服務。</summary>
    </member>
    <member name="M:System.Windows.Markup.ServiceProviders.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ServiceProviders&quot; /&gt; class.">初始化 <see cref="T:System.Windows.Markup.ServiceProviders" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Windows.Markup.ServiceProviders.AddService(System.Type,System.Object)">
      <summary vsli:raw="Adds a service to the list.">將服務加入至清單。</summary>
      <param name="serviceType" vsli:raw="Service type of the new service.">新服務的服務型別。</param>
      <param name="service" vsli:raw="The service implementation class.">服務實作類別。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serviceType&quot; /&gt; or &lt;paramref name=&quot;service&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serviceType" /> 或 <paramref name="service" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Attempted to add a service that already exists in the dictionary.">嘗試加入字典中已存在的服務。</exception>
    </member>
    <member name="M:System.Windows.Markup.ServiceProviders.GetService(System.Type)">
      <summary vsli:raw="Gets the service object of the specified type.">取得指定型別的服務物件。</summary>
      <param name="serviceType" vsli:raw="The type of service object to get.">要取得之服務物件的類型。</param>
      <returns vsli:raw="A service implementation for the type &lt;paramref name=&quot;serviceType&quot; /&gt;. May be &lt;see langword=&quot;null&quot; /&gt; if there is no service stored for type &lt;paramref name=&quot;serviceType&quot; /&gt;.">
        <paramref name="serviceType" /> 型別的服務實作。 如果沒有針對 <paramref name="serviceType" /> 型別儲存任何服務，則可能為 <see langword="null" />。</returns>
    </member>
    <member name="T:System.Windows.Media.Converters.MatrixValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">將 <see cref="T:System.String" /> 執行個體轉換為 <see cref="T:System.Windows.Media.Matrix" /> 執行個體，以及反向操作。</summary>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Media.Converters.MatrixValueSerializer&quot; /&gt; class.">初始化 <see cref="T:System.Windows.Media.Converters.MatrixValueSerializer" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if conversion from a given &lt;see cref=&quot;T:System.String&quot; /&gt; to an instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; is possible.">判斷是否可將指定的 <see cref="T:System.String" /> 轉換成 <see cref="T:System.Windows.Media.Matrix" /> 的執行個體。</summary>
      <param name="value" vsli:raw="String to evaluate for conversion.">要評估以進行轉換的字串。</param>
      <param name="context" vsli:raw="Context information used for conversion.">用於轉換的內容資訊。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value can be converted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果可以轉換值，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if an instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">判斷 <see cref="T:System.Windows.Media.Matrix" /> 的執行個體是否可轉換為 <see cref="T:System.String" />。</summary>
      <param name="value" vsli:raw="Instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to evaluate for conversion.">要評估以進行轉換之 <see cref="T:System.Windows.Media.Matrix" /> 的執行個體。</param>
      <param name="context" vsli:raw="Context information used for conversion.">用於轉換的內容資訊。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="value" /> 可以轉換為 <see cref="T:System.String" />，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Occurs when &lt;paramref name=&quot;value&quot; /&gt; is not a &lt;see cref=&quot;T:System.Windows.Media.Int32Collection&quot; /&gt;.">
        <paramref name="value" /> 不是 <see cref="T:System.Windows.Media.Int32Collection" /> 時發生。</exception>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">將 <see cref="T:System.String" /> 轉換成 <see cref="T:System.Windows.Media.Matrix" />。</summary>
      <param name="value" vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt; value to convert into a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">要轉換成 <see cref="T:System.String" /> 的 <see cref="T:System.Windows.Media.Matrix" /> 值。</param>
      <param name="context" vsli:raw="Context information used for conversion.">用於轉換的內容資訊。</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">根據所提供 <paramref name="value" /> 的新 <see cref="T:System.Windows.Media.Matrix" /> 執行個體。</returns>
    </member>
    <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">將 <see cref="T:System.Windows.Media.Matrix" /> 的執行個體轉換成 <see cref="T:System.String" />。</summary>
      <param name="value" vsli:raw="Instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to evaluate for conversion.">要評估以進行轉換之 <see cref="T:System.Windows.Media.Matrix" /> 的執行個體。</param>
      <param name="context" vsli:raw="Context information used for conversion.">用於轉換的內容資訊。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; representation of the supplied &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; object.">所提供 <see cref="T:System.String" /> 物件的 <see cref="T:System.Windows.Media.Matrix" /> 表示。</returns>
    </member>
    <member name="T:System.Windows.Media.DisableDpiAwarenessAttribute">
      <summary vsli:raw="Allows WPF applications to disable dots per inch (dpi) awareness for all user interface elements.">允許 WPF 應用程式停用所有使用者介面項目的 DPI 感知。</summary>
    </member>
    <member name="M:System.Windows.Media.DisableDpiAwarenessAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of &lt;see cref=&quot;T:System.Windows.Media.DisableDpiAwarenessAttribute&quot; /&gt;.">初始化 <see cref="T:System.Windows.Media.DisableDpiAwarenessAttribute" /> 的新執行個體。</summary>
    </member>
    <member name="T:System.Windows.Media.Matrix">
      <summary vsli:raw="Represents a 3x3 affine transformation matrix used for transformations in 2-D space.">表示 3x3 仿射轉換矩陣，可用於 2-D 空間中的轉換。</summary>
    </member>
    <member name="M:System.Windows.Media.Matrix.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">初始化 <see cref="T:System.Windows.Media.Matrix" /> 結構的新執行個體。</summary>
      <param name="m11" vsli:raw="The new &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Media.Matrix.M11&quot; /&gt; coefficient.">新 <see cref="T:System.Windows.Media.Matrix" /> 結構的 <see cref="P:System.Windows.Media.Matrix.M11" /> 係數。</param>
      <param name="m12" vsli:raw="The new &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Media.Matrix.M12&quot; /&gt; coefficient.">新 <see cref="T:System.Windows.Media.Matrix" /> 結構的 <see cref="P:System.Windows.Media.Matrix.M12" /> 係數。</param>
      <param name="m21" vsli:raw="The new &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Media.Matrix.M21&quot; /&gt; coefficient.">新 <see cref="T:System.Windows.Media.Matrix" /> 結構的 <see cref="P:System.Windows.Media.Matrix.M21" /> 係數。</param>
      <param name="m22" vsli:raw="The new &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Media.Matrix.M22&quot; /&gt; coefficient.">新 <see cref="T:System.Windows.Media.Matrix" /> 結構的 <see cref="P:System.Windows.Media.Matrix.M22" /> 係數。</param>
      <param name="offsetX" vsli:raw="The new &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Media.Matrix.OffsetX&quot; /&gt; coefficient.">新 <see cref="T:System.Windows.Media.Matrix" /> 結構的 <see cref="P:System.Windows.Media.Matrix.OffsetX" /> 係數。</param>
      <param name="offsetY" vsli:raw="The new &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Media.Matrix.OffsetY&quot; /&gt; coefficient.">新 <see cref="T:System.Windows.Media.Matrix" /> 結構的 <see cref="P:System.Windows.Media.Matrix.OffsetY" /> 係數。</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Append(System.Windows.Media.Matrix)">
      <summary vsli:raw="Appends the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">在這個 <see cref="T:System.Windows.Media.Matrix" /> 結構之後加上指定的 <see cref="T:System.Windows.Media.Matrix" /> 結構。</summary>
      <param name="matrix" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to append to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">要在這個 <see cref="T:System.Windows.Media.Matrix" /> 結構之後加上的 <see cref="T:System.Windows.Media.Matrix" /> 結構。</param>
    </member>
    <member name="P:System.Windows.Media.Matrix.Determinant">
      <summary vsli:raw="Gets the determinant of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">取得這個 <see cref="T:System.Windows.Media.Matrix" /> 結構的行列式。</summary>
      <returns vsli:raw="The determinant of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">這個 <see cref="T:System.Windows.Media.Matrix" /> 的行列式。</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure that is identical to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">判斷所指定 <see cref="T:System.Object" /> 的 <see cref="T:System.Windows.Media.Matrix" /> 結構是否與這個 <see cref="T:System.Windows.Media.Matrix" /> 相同。</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare.">要比較的 <see cref="T:System.Object" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure that is identical to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="o" /> 的 <see cref="T:System.Windows.Media.Matrix" /> 結構與這個 <see cref="T:System.Windows.Media.Matrix" /> 結構相同則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure is identical to this instance.">判斷指定的 <see cref="T:System.Windows.Media.Matrix" /> 結構是否與這個執行個體相同。</summary>
      <param name="value" vsli:raw="The instance of &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to compare to this instance.">要與這個執行個體 (Instance) 比較的 <see cref="T:System.Windows.Media.Matrix" /> 執行個體。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if instances are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果執行個體相等，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary vsli:raw="Determines whether the two specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structures are identical.">判斷兩個指定的 <see cref="T:System.Windows.Media.Matrix" /> 結構是否相同。</summary>
      <param name="matrix1" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to compare.">要比較的第一個 <see cref="T:System.Windows.Media.Matrix" /> 結構。</param>
      <param name="matrix2" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to compare.">要比較的第二個 <see cref="T:System.Windows.Media.Matrix" /> 結構。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;matrix1&quot; /&gt; and &lt;paramref name=&quot;matrix2&quot; /&gt; are identical; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="matrix1" /> 和 <paramref name="matrix2" /> 相同則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">傳回這個 <see cref="T:System.Windows.Media.Matrix" /> 結構的雜湊程式碼。</summary>
      <returns vsli:raw="The hash code for this instance.">這個執行個體的雜湊碼。</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.HasInverse">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure is invertible.">取得值，這個值表示這個 <see cref="T:System.Windows.Media.Matrix" /> 結構是否可以反轉。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; has an inverse; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">如果 <see cref="T:System.Windows.Media.Matrix" /> 具有反轉則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.Identity">
      <summary vsli:raw="Gets an identity &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">取得單位 <see cref="T:System.Windows.Media.Matrix" />。</summary>
      <returns vsli:raw="An identity matrix.">單位矩陣。</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Invert">
      <summary vsli:raw="Inverts this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">反轉這個 <see cref="T:System.Windows.Media.Matrix" /> 結構。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure is not invertible.">
        <see cref="T:System.Windows.Media.Matrix" /> 結構是不可以反轉的。</exception>
    </member>
    <member name="P:System.Windows.Media.Matrix.IsIdentity">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure is an identity matrix.">取得值，這個值表示這個 <see cref="T:System.Windows.Media.Matrix" /> 結構是否為單位矩陣。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure is an identity matrix; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">如果 <see cref="T:System.Windows.Media.Matrix" /> 結構是單位矩陣則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M11">
      <summary vsli:raw="Gets or sets the value of the first row and first column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">取得或設定這個 <see cref="T:System.Windows.Media.Matrix" /> 之結構第一列第一行的值。</summary>
      <returns vsli:raw="The value of the first row and first column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;. The default value is 1.">這個 <see cref="T:System.Windows.Media.Matrix" /> 之第一列第一行的值。 預設值為 1。</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M12">
      <summary vsli:raw="Gets or sets the value of the first row and second column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">取得或設定這個 <see cref="T:System.Windows.Media.Matrix" /> 結構之第一列第二行的值。</summary>
      <returns vsli:raw="The value of the first row and second column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;. The default value is 0.">這個 <see cref="T:System.Windows.Media.Matrix" /> 之第一列第二行的值。 預設值為 0。</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M21">
      <summary vsli:raw="Gets or sets the value of the second row and first column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">取得或設定這個 <see cref="T:System.Windows.Media.Matrix" /> 結構之第二列第一行的值。</summary>
      <returns vsli:raw="The value of the second row and first column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;. The default value is 0.">這個 <see cref="T:System.Windows.Media.Matrix" /> 之第二列第一行的值。 預設值為 0。</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.M22">
      <summary vsli:raw="Gets or sets the value of the second row and second column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">取得或設定這個 <see cref="T:System.Windows.Media.Matrix" /> 結構之第二列第二行的值。</summary>
      <returns vsli:raw="The value of the second row and second column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure. The default value is 1.">這個 <see cref="T:System.Windows.Media.Matrix" /> 結構之第二列第二行的值。 預設值為 1。</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary vsli:raw="Multiplies a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure by another &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">將 <see cref="T:System.Windows.Media.Matrix" /> 結構乘以另一個 <see cref="T:System.Windows.Media.Matrix" /> 結構。</summary>
      <param name="trans1" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to multiply.">要相乘的第一個 <see cref="T:System.Windows.Media.Matrix" /> 結構。</param>
      <param name="trans2" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to multiply.">要相乘的第二個 <see cref="T:System.Windows.Media.Matrix" /> 結構。</param>
      <returns vsli:raw="The result of multiplying &lt;paramref name=&quot;trans1&quot; /&gt; by &lt;paramref name=&quot;trans2&quot; /&gt;.">
        <paramref name="trans1" /> 乘以 <paramref name="trans2" /> 的結果。</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.OffsetX">
      <summary vsli:raw="Gets or sets the value of the third row and first column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">取得或設定這個 <see cref="T:System.Windows.Media.Matrix" /> 結構之第三列第一行的值。</summary>
      <returns vsli:raw="The value of the third row and first column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure. The default value is 0.">這個 <see cref="T:System.Windows.Media.Matrix" /> 結構之第三列第一行的值。 預設值為 0。</returns>
    </member>
    <member name="P:System.Windows.Media.Matrix.OffsetY">
      <summary vsli:raw="Gets or sets the value of the third row and second column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">取得或設定這個 <see cref="T:System.Windows.Media.Matrix" /> 結構之第三列第二行的值。</summary>
      <returns vsli:raw="The value of the third row and second column of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure. The default value is 0.">這個 <see cref="T:System.Windows.Media.Matrix" /> 結構之第三列第二行的值。 預設值為 0。</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.op_Equality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary vsli:raw="Determines whether the two specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structures are identical.">判斷兩個指定的 <see cref="T:System.Windows.Media.Matrix" /> 結構是否相同。</summary>
      <param name="matrix1" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to compare.">要比較的第一個 <see cref="T:System.Windows.Media.Matrix" /> 結構。</param>
      <param name="matrix2" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to compare.">要比較的第二個 <see cref="T:System.Windows.Media.Matrix" /> 結構。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;matrix1&quot; /&gt; and &lt;paramref name=&quot;matrix2&quot; /&gt; are identical; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="matrix1" /> 和 <paramref name="matrix2" /> 相同則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.op_Inequality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary vsli:raw="Determines whether the two specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structures are not identical.">判斷兩個指定的 <see cref="T:System.Windows.Media.Matrix" /> 結構是否不同。</summary>
      <param name="matrix1" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to compare.">要比較的第一個 <see cref="T:System.Windows.Media.Matrix" /> 結構。</param>
      <param name="matrix2" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to compare.">要比較的第二個 <see cref="T:System.Windows.Media.Matrix" /> 結構。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;matrix1&quot; /&gt; and &lt;paramref name=&quot;matrix2&quot; /&gt; are not identical; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="matrix1" /> 和 <paramref name="matrix2" /> 不同則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.op_Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
      <summary vsli:raw="Multiplies a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure by another &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">將 <see cref="T:System.Windows.Media.Matrix" /> 結構乘以另一個 <see cref="T:System.Windows.Media.Matrix" /> 結構。</summary>
      <param name="trans1" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to multiply.">要相乘的第一個 <see cref="T:System.Windows.Media.Matrix" /> 結構。</param>
      <param name="trans2" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to multiply.">要相乘的第二個 <see cref="T:System.Windows.Media.Matrix" /> 結構。</param>
      <returns vsli:raw="The result of multiplying &lt;paramref name=&quot;trans1&quot; /&gt; by &lt;paramref name=&quot;trans2&quot; /&gt;.">
        <paramref name="trans1" /> 乘以 <paramref name="trans2" /> 的結果。</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Parse(System.String)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; representation of a matrix into the equivalent &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">將矩陣的 <see cref="T:System.String" /> 表示轉換為對等的 <see cref="T:System.Windows.Media.Matrix" /> 結構。</summary>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; representation of the matrix.">矩陣的 <see cref="T:System.String" /> 表示。</param>
      <returns vsli:raw="The equivalent &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">對等的 <see cref="T:System.Windows.Media.Matrix" /> 結構。</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Prepend(System.Windows.Media.Matrix)">
      <summary vsli:raw="Prepends the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure onto this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">在這個 <see cref="T:System.Windows.Media.Matrix" /> 結構之前加上指定的 <see cref="T:System.Windows.Media.Matrix" /> 結構。</summary>
      <param name="matrix" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure to prepend to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">要在這個 <see cref="T:System.Windows.Media.Matrix" /> 結構之前加上的 <see cref="T:System.Windows.Media.Matrix" /> 結構。</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Rotate(System.Double)">
      <summary vsli:raw="Applies a rotation of the specified angle about the origin of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">使這個 <see cref="T:System.Windows.Media.Matrix" /> 結構繞著原點旋轉指定的角度。</summary>
      <param name="angle" vsli:raw="The angle of rotation.">旋轉的角度。</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.RotateAt(System.Double,System.Double,System.Double)">
      <summary vsli:raw="Rotates this matrix about the specified point.">繞著指定的點旋轉這個矩陣。</summary>
      <param name="angle" vsli:raw="The angle, in degrees, by which to rotate this matrix.">這個矩陣的旋轉角度 (以度數為單位)。</param>
      <param name="centerX" vsli:raw="The x-coordinate of the point about which to rotate this matrix.">這個矩陣的旋轉中心點 X 座標。</param>
      <param name="centerY" vsli:raw="The y-coordinate of the point about which to rotate this matrix.">這個矩陣的旋轉中心點 Y 座標。</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.RotateAtPrepend(System.Double,System.Double,System.Double)">
      <summary vsli:raw="Prepends a rotation of the specified angle at the specified point to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">在這個 <see cref="T:System.Windows.Media.Matrix" /> 結構之前加上繞著指定的點進行的所指定角度的旋轉。</summary>
      <param name="angle" vsli:raw="The rotation angle, in degrees.">旋轉角度 (以度數為單位)。</param>
      <param name="centerX" vsli:raw="The x-coordinate of the rotation center.">旋轉中心的 X 座標。</param>
      <param name="centerY" vsli:raw="The y-coordinate of the rotation center.">旋轉中心的 Y 座標。</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.RotatePrepend(System.Double)">
      <summary vsli:raw="Prepends a rotation of the specified angle to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">在這個 <see cref="T:System.Windows.Media.Matrix" /> 結構之前加上所指定角度的旋轉。</summary>
      <param name="angle" vsli:raw="The angle of rotation to prepend.">要在前面加上的旋轉角度。</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Scale(System.Double,System.Double)">
      <summary vsli:raw="Appends the specified scale vector to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">在這個 <see cref="T:System.Windows.Media.Matrix" /> 結構之前加上指定的縮放向量。</summary>
      <param name="scaleX" vsli:raw="The value by which to scale this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the x-axis.">要沿著 X 軸縮放這個 <see cref="T:System.Windows.Media.Matrix" /> 的值。</param>
      <param name="scaleY" vsli:raw="The value by which to scale this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the y-axis.">要沿著 Y 軸縮放這個 <see cref="T:System.Windows.Media.Matrix" /> 的值。</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.ScaleAt(System.Double,System.Double,System.Double,System.Double)">
      <summary vsli:raw="Scales this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; by the specified amount about the specified point.">以指定的點為中心，將這個 <see cref="T:System.Windows.Media.Matrix" /> 縮放指定的量。</summary>
      <param name="scaleX" vsli:raw="The amount by which to scale this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the x-axis.">要沿著 X 軸縮放這個 <see cref="T:System.Windows.Media.Matrix" /> 的量。</param>
      <param name="scaleY" vsli:raw="The amount by which to scale this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the y-axis.">要沿著 Y 軸縮放這個 <see cref="T:System.Windows.Media.Matrix" /> 的量。</param>
      <param name="centerX" vsli:raw="The x-coordinate of the scale operation's center point.">縮放作業中心點的 X 座標。</param>
      <param name="centerY" vsli:raw="The y-coordinate of the scale operation's center point.">縮放作業中心點的 Y 座標。</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.ScaleAtPrepend(System.Double,System.Double,System.Double,System.Double)">
      <summary vsli:raw="Prepends the specified scale about the specified point of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">在這個 <see cref="T:System.Windows.Media.Matrix" /> 前面加上以指定的點為中心的所指定縮放。</summary>
      <param name="scaleX" vsli:raw="The x-axis scale factor.">X 軸的縮放因數。</param>
      <param name="scaleY" vsli:raw="The y-axis scale factor.">Y 軸的縮放因數。</param>
      <param name="centerX" vsli:raw="The x-coordinate of the point about which the scale operation is performed.">要做為縮放作業中心點的 X 座標。</param>
      <param name="centerY" vsli:raw="The y-coordinate of the point about which the scale operation is performed.">要做為縮放作業中心點的 Y 座標。</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.ScalePrepend(System.Double,System.Double)">
      <summary vsli:raw="Prepends the specified scale vector to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">在這個 <see cref="T:System.Windows.Media.Matrix" /> 結構之前加上指定的縮放向量。</summary>
      <param name="scaleX" vsli:raw="The value by which to scale this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure along the x-axis.">要沿著 X 軸縮放這個 <see cref="T:System.Windows.Media.Matrix" /> 結構的值。</param>
      <param name="scaleY" vsli:raw="The value by which to scale this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure along the y-axis.">要沿著 Y 軸縮放這個 <see cref="T:System.Windows.Media.Matrix" /> 結構的值。</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.SetIdentity">
      <summary vsli:raw="Changes this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure into an identity matrix.">將這個 <see cref="T:System.Windows.Media.Matrix" /> 結構變更為單位矩陣。</summary>
    </member>
    <member name="M:System.Windows.Media.Matrix.Skew(System.Double,System.Double)">
      <summary vsli:raw="Appends a skew of the specified degrees in the x and y dimensions to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">在這個 <see cref="T:System.Windows.Media.Matrix" /> 結構之後加上指定的 X 和 Y 維度度數的扭曲。</summary>
      <param name="skewX" vsli:raw="The angle in the x dimension by which to skew this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">用來扭曲這個 <see cref="T:System.Windows.Media.Matrix" /> 的 X 維度角度。</param>
      <param name="skewY" vsli:raw="The angle in the y dimension by which to skew this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">用來扭曲這個 <see cref="T:System.Windows.Media.Matrix" /> 的 Y 維度角度。</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.SkewPrepend(System.Double,System.Double)">
      <summary vsli:raw="Prepends a skew of the specified degrees in the x and y dimensions to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">在這個 <see cref="T:System.Windows.Media.Matrix" /> 結構之前加上指定的 X 和 Y 維度度數的扭曲。</summary>
      <param name="skewX" vsli:raw="The angle in the x dimension by which to skew this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">用來扭曲這個 <see cref="T:System.Windows.Media.Matrix" /> 的 X 維度角度。</param>
      <param name="skewY" vsli:raw="The angle in the y dimension by which to skew this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">用來扭曲這個 <see cref="T:System.Windows.Media.Matrix" /> 的 Y 維度角度。</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Formats the value of the current instance using the specified format.">使用指定的格式，格式化目前執行個體的值。</summary>
      <param name="format" vsli:raw="The format to use.  &#xA;  &#xA; -or-  &#xA;  &#xA; A null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) to use the default format defined for the type of the &lt;see cref=&quot;T:System.IFormattable&quot; /&gt; implementation.">要使用的格式。  
-或- 
若要使用為 <see cref="T:System.IFormattable" /> 實作類型所定義的預設格式，則為 Null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</param>
      <param name="provider" vsli:raw="The provider to use to format the value.  &#xA;  &#xA; -or-  &#xA;  &#xA; A null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.">要用來格式化值的提供者。  
-或- 
Null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)，用於取得作業系統目前地區設定中的數值格式資訊。</param>
      <returns vsli:raw="The value of the current instance in the specified format.">目前執行個體的值，使用指定的格式。</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.ToString">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.String&quot; /&gt; representation of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">建立這個 <see cref="T:System.String" /> 結構的 <see cref="T:System.Windows.Media.Matrix" /> 表示。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the &lt;see cref=&quot;P:System.Windows.Media.Matrix.M11&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.M12&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.M21&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.M22&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.OffsetX&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Media.Matrix.OffsetY&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">
        <see cref="T:System.String" />，包含這個 <see cref="P:System.Windows.Media.Matrix.M11" /> 的 <see cref="P:System.Windows.Media.Matrix.M12" />、<see cref="P:System.Windows.Media.Matrix.M21" />、<see cref="P:System.Windows.Media.Matrix.M22" />、<see cref="P:System.Windows.Media.Matrix.OffsetX" />、<see cref="P:System.Windows.Media.Matrix.OffsetY" /> 和 <see cref="T:System.Windows.Media.Matrix" /> 值。</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.ToString(System.IFormatProvider)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.String&quot; /&gt; representation of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure with culture-specific formatting information.">使用文化特性特定格式資訊，建立這個 <see cref="T:System.String" /> 結構的 <see cref="T:System.Windows.Media.Matrix" /> 表示。</summary>
      <param name="provider" vsli:raw="The culture-specific formatting information.">特定文化特性的格式資訊。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the &lt;see cref=&quot;P:System.Windows.Media.Matrix.M11&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.M12&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.M21&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.M22&quot; /&gt;, &lt;see cref=&quot;P:System.Windows.Media.Matrix.OffsetX&quot; /&gt;, and &lt;see cref=&quot;P:System.Windows.Media.Matrix.OffsetY&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">
        <see cref="T:System.String" />，包含這個 <see cref="P:System.Windows.Media.Matrix.M11" /> 的 <see cref="P:System.Windows.Media.Matrix.M12" />、<see cref="P:System.Windows.Media.Matrix.M21" />、<see cref="P:System.Windows.Media.Matrix.M22" />、<see cref="P:System.Windows.Media.Matrix.OffsetX" />、<see cref="P:System.Windows.Media.Matrix.OffsetY" /> 和 <see cref="T:System.Windows.Media.Matrix" /> 值。</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Point)">
      <summary vsli:raw="Transforms the specified point by the &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; and returns the result.">依 <see cref="T:System.Windows.Media.Matrix" /> 轉換指定的點，然後傳回結果。</summary>
      <param name="point" vsli:raw="The point to transform.">要轉換的點。</param>
      <returns vsli:raw="The result of transforming &lt;paramref name=&quot;point&quot; /&gt; by this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">依這個 <see cref="T:System.Windows.Media.Matrix" /> 轉換 <paramref name="point" /> 的結果。</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Point[])">
      <summary vsli:raw="Transforms the specified points by this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">依這個 <see cref="T:System.Windows.Media.Matrix" /> 轉換指定的點。</summary>
      <param name="points" vsli:raw="The points to transform. The original points in the array are replaced by their transformed values.">要轉換的點。 陣列中的原始點由其轉換值取代。</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Vector)">
      <summary vsli:raw="Transforms the specified vector by this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">依這個 <see cref="T:System.Windows.Media.Matrix" /> 轉換指定的向量。</summary>
      <param name="vector" vsli:raw="The vector to transform.">要轉換的向量。</param>
      <returns vsli:raw="The result of transforming &lt;paramref name=&quot;vector&quot; /&gt; by this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">依這個 <see cref="T:System.Windows.Media.Matrix" /> 轉換 <paramref name="vector" /> 的結果。</returns>
    </member>
    <member name="M:System.Windows.Media.Matrix.Transform(System.Windows.Vector[])">
      <summary vsli:raw="Transforms the specified vectors by this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">依這個 <see cref="T:System.Windows.Media.Matrix" /> 轉換指定的向量。</summary>
      <param name="vectors" vsli:raw="The vectors to transform. The original vectors in the array are replaced by their transformed values.">要轉換的向量。 陣列中的原始向量會以轉換後的值取代。</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.Translate(System.Double,System.Double)">
      <summary vsli:raw="Appends a translation of the specified offsets to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">在這個 <see cref="T:System.Windows.Media.Matrix" /> 結構之後加上所指定位移的轉換。</summary>
      <param name="offsetX" vsli:raw="The amount to offset this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the x-axis.">要沿著 X 軸移離這個 <see cref="T:System.Windows.Media.Matrix" /> 的位移量。</param>
      <param name="offsetY" vsli:raw="The amount to offset this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the y-axis.">要沿著 Y 軸移離這個 <see cref="T:System.Windows.Media.Matrix" /> 的位移量。</param>
    </member>
    <member name="M:System.Windows.Media.Matrix.TranslatePrepend(System.Double,System.Double)">
      <summary vsli:raw="Prepends a translation of the specified offsets to this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">在這個 <see cref="T:System.Windows.Media.Matrix" /> 結構之前加上所指定位移的轉換。</summary>
      <param name="offsetX" vsli:raw="The amount to offset this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the x-axis.">要沿著 X 軸移離這個 <see cref="T:System.Windows.Media.Matrix" /> 的位移量。</param>
      <param name="offsetY" vsli:raw="The amount to offset this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; along the y-axis.">要沿著 Y 軸移離這個 <see cref="T:System.Windows.Media.Matrix" /> 的位移量。</param>
    </member>
    <member name="T:System.Windows.Media.MatrixConverter">
      <summary vsli:raw="Converts instances of other types to and from a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">在其他型別的執行個體和 <see cref="T:System.Windows.Media.Matrix" /> 之間來回轉換。</summary>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of &lt;see cref=&quot;T:System.Windows.Media.MatrixConverter&quot; /&gt;.">初始化 <see cref="T:System.Windows.Media.MatrixConverter" /> 的新執行個體。</summary>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object can be converted from a specific type to an instance of a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">判斷物件是否可以從特定型別轉換為 <see cref="T:System.Windows.Media.Matrix" /> 的執行個體。</summary>
      <param name="context" vsli:raw="The context information of a type.">型別的內容資訊。</param>
      <param name="sourceType" vsli:raw="The type of the source that is being evaluated for conversion.">正在評估以進行轉換之來源的型別。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type can be converted to a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果型別可轉換為 <see cref="T:System.Windows.Media.Matrix" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; can be converted to a different type.">判斷 <see cref="T:System.Windows.Media.Matrix" /> 的執行個體是否可轉換成不同型別。</summary>
      <param name="context" vsli:raw="The context information of a type.">型別的內容資訊。</param>
      <param name="destinationType" vsli:raw="The desired type this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; is being evaluated for conversion.">要評估這個 <see cref="T:System.Windows.Media.Matrix" /> 是否能轉換到的型別。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; can be converted to &lt;paramref name=&quot;destinationType&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果這個 <see cref="T:System.Windows.Media.Matrix" /> 可轉換為 <paramref name="destinationType" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified object to a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">嘗試將指定的物件轉換為 <see cref="T:System.Windows.Media.Matrix" />。</summary>
      <param name="context" vsli:raw="The context information of a type.">型別的內容資訊。</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; of the type being converted.">正被轉換類型的 <see cref="T:System.Globalization.CultureInfo" />。</param>
      <param name="value" vsli:raw="The object being converted.">要轉換的物件。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; created from converting &lt;paramref name=&quot;value&quot; /&gt;.">轉換 <paramref name="value" /> 時建立的 <see cref="T:System.Windows.Media.Matrix" />。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The specified object is null or is a type that cannot be converted to a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">指定的物件是 null，或屬於無法轉換為 <see cref="T:System.Windows.Media.Matrix" /> 的型別。</exception>
    </member>
    <member name="M:System.Windows.Media.MatrixConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to a specified type.">嘗試將 <see cref="T:System.Windows.Media.Matrix" /> 轉換為指定的型別。</summary>
      <param name="context" vsli:raw="The context information of a type.">型別的內容資訊。</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; of the type being converted.">正被轉換類型的 <see cref="T:System.Globalization.CultureInfo" />。</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to convert.">要進行轉換的 <see cref="T:System.Windows.Media.Matrix" />。</param>
      <param name="destinationType" vsli:raw="The type to convert this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; to.">要將這個 <see cref="T:System.Windows.Media.Matrix" /> 轉換成的型別。</param>
      <returns vsli:raw="The object created from converting this &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">轉換這個 <see cref="T:System.Windows.Media.Matrix" /> 時建立的物件。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; is null or is not a &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;, or the &lt;paramref name=&quot;destinationType&quot; /&gt; is not a valid conversion type.">
        <paramref name="value" /> 是 null 或不是 <see cref="T:System.Windows.Media.Matrix" />，或者 <paramref name="destinationType" /> 不是有效的轉換型別。</exception>
    </member>
    <member name="T:System.Windows.Media.TextFormattingMode">
      <summary vsli:raw="Defines the formatting methods supported by the &lt;see cref=&quot;T:System.Windows.Media.TextFormatting.TextFormatter&quot; /&gt; class.">定義由 <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> 類別支援的格式化方法。</summary>
    </member>
    <member name="F:System.Windows.Media.TextFormattingMode.Display">
      <summary vsli:raw="Indicates that the &lt;see cref=&quot;T:System.Windows.Media.TextFormatting.TextFormatter&quot; /&gt; lays out text by using GDI-compatible font metrics.">指出 <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> 使用 GDI 相容的字型度量資訊來配置文字。</summary>
    </member>
    <member name="F:System.Windows.Media.TextFormattingMode.Ideal">
      <summary vsli:raw="Indicates that the &lt;see cref=&quot;T:System.Windows.Media.TextFormatting.TextFormatter&quot; /&gt; lays out text by using ideal font metrics.">指出 <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> 使用理想字型度量資訊來配置文字。</summary>
    </member>
    <member name="T:System.Windows.NameScope">
      <summary vsli:raw="Implements base WPF support for the &lt;see cref=&quot;T:System.Windows.Markup.INameScope&quot; /&gt; methods that store or retrieve name-object mappings into a particular XAML namescope. Adds attached property support to make it simpler to get or set XAML namescope names dynamically at the element level.">實作 <see cref="T:System.Windows.Markup.INameScope" /> 方法的基礎 WPF 支援，這些方法可將「名稱-物件」對應儲存或擷取至特定 XAML 名稱範圍中。 新增附加屬性支援，以簡化在項目層級動態取得或設定 XAML 名稱範圍名稱。</summary>
    </member>
    <member name="M:System.Windows.NameScope.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; class.">初始化 <see cref="T:System.Windows.NameScope" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Windows.NameScope.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary vsli:raw="Adds an item to the collection.">將項目加入至集合。</summary>
      <param name="item" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; (key is &lt;see cref=&quot;T:System.String&quot; /&gt;, value is &lt;see cref=&quot;T:System.Object&quot; /&gt;) that represents the name mapping to add to the XAML namescope.">
        <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (索引鍵為 <see cref="T:System.String" />，值為 <see cref="T:System.Object" />)，表示要新增至 XAML 名稱範圍的名稱對應。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="Either or both components of &lt;paramref name=&quot;item&quot; /&gt; are &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="item" /> 的其中一個或兩個元件是 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Windows.NameScope.Add(System.String,System.Object)">
      <summary vsli:raw="Adds an item to the collection.">將項目加入至集合。</summary>
      <param name="key" vsli:raw="The string key, which is the name of the XAML namescope mapping to add.">字串索引鍵，這是要加入之 XAML 名稱範圍對應的名稱。</param>
      <param name="value" vsli:raw="The object value, which is the object reference of the XAML namescope mapping to add.">物件值，這是要加入之 XAML 名稱範圍對應的物件參考。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> 或 <paramref name="value" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Windows.NameScope.Clear">
      <summary vsli:raw="Removes all items from the collection.">移除集合的所有項目。</summary>
    </member>
    <member name="M:System.Windows.NameScope.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary vsli:raw="Determines whether the collection contains a specified item.">判斷集合是否包含指定的項目。</summary>
      <param name="item" vsli:raw="The item to find in the collection, specified as a &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; (key is &lt;see cref=&quot;T:System.String&quot; /&gt;, value is &lt;see cref=&quot;T:System.Object&quot; /&gt;).">要在集合中尋找的項目，指定為 <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (索引鍵為 <see cref="T:System.String" />，值為 <see cref="T:System.Object" />)。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; identifies an existing mapping in this &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; . &lt;see langword=&quot;false&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; does not exist in the current &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt;.">如果指定的 <see cref="T:System.Collections.Generic.KeyValuePair`2" /> 可識別這個 <see cref="T:System.Windows.NameScope" /> 中現有的對應，則為 <see langword="true" />。 如果指定的 <see cref="T:System.Collections.Generic.KeyValuePair`2" /> 於目前的 <see cref="T:System.Windows.NameScope" /> 中不存在，則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Windows.NameScope.ContainsKey(System.String)">
      <summary vsli:raw="Returns whether a provided name already exists in this &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt;.">傳回提供的名稱是否已經存在這個 <see cref="T:System.Windows.NameScope" /> 中。</summary>
      <param name="key" vsli:raw="The string key to find.">要尋找的字串索引鍵。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;paramref name=&quot;key&quot; /&gt; identifies a name for an existing mapping in this &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt;. &lt;see langword=&quot;false&quot; /&gt; if the specified &lt;paramref name=&quot;key&quot; /&gt; does not exist in the current &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt;.">如果指定的 <paramref name="key" /> 可識別這個 <see cref="T:System.Windows.NameScope" /> 中現有對應的名稱，則為 <see langword="true" />。 如果指定的 <paramref name="key" /> 於目前的 <see cref="T:System.Windows.NameScope" /> 中不存在，則為 <see langword="false" />。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Windows.NameScope.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary vsli:raw="Copies the elements of the collection to an array, starting at a particular array index.">從特定的陣列索引開始，將集合的項目複製到陣列。</summary>
      <param name="array" vsli:raw="The one-dimensional array that is the destination of the elements copied from the collection The array must have zero-based indexing.">一維陣列，是從集合複製元素的目的端。此陣列必須具有以零起始的索引。</param>
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">
        <paramref name="array" /> 中以零起始的索引，即開始複製的位置。</param>
    </member>
    <member name="P:System.Windows.NameScope.Count">
      <summary vsli:raw="Returns the number of items in the collection of mapped names in this &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt;.">傳回這個 <see cref="T:System.Windows.NameScope" /> 中對應之名稱的集合內之項目數。</summary>
      <returns vsli:raw="The number of items in the collection.">集合中的項目數目</returns>
    </member>
    <member name="M:System.Windows.NameScope.FindName(System.String)">
      <summary vsli:raw="Returns the corresponding object in the XAML namescope maintained by this &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt;, based on a provided name string.">根據提供的名稱字串，傳回 <see cref="T:System.Windows.NameScope" /> 在 XAML 名稱範圍所維護的對應物件。</summary>
      <param name="name" vsli:raw="Name portion of an existing mapping to retrieve the object portion for.">要為其擷取物件部分之現有對應的名稱部分。</param>
      <returns vsli:raw="The requested object that is mapped with &lt;paramref name=&quot;name&quot; /&gt;. Can return &lt;see langword=&quot;null&quot; /&gt; if &lt;paramref name=&quot;name&quot; /&gt; was provided as &lt;see langword=&quot;null&quot; /&gt; or empty string, or if no matching object was found.">與 <paramref name="name" /> 相對應的要求物件。 若 <paramref name="name" /> 以 <see langword="null" /> 或空白字串形式提供，或找不到相符的物件，則可以傳回 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.NameScope.GetNameScope(System.Windows.DependencyObject)">
      <summary vsli:raw="Provides the attached property get accessor for the &lt;see cref=&quot;P:System.Windows.NameScope.NameScope&quot; /&gt; attached property.">為 <see cref="P:System.Windows.NameScope.NameScope" /> 附加屬性提供附加屬性 get 存取子。</summary>
      <param name="dependencyObject" vsli:raw="The object to get the XAML namescope from.">要從中取得 XAML 名稱範圍的物件。</param>
      <returns vsli:raw="A XAML namescope, as an &lt;see cref=&quot;T:System.Windows.Markup.INameScope&quot; /&gt; instance.">作為 <see cref="T:System.Windows.Markup.INameScope" /> 執行個體的 XAML 名稱範圍。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dependencyObject&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dependencyObject" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Windows.NameScope.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the collection is read-only.">取得值，表示集合是否為唯讀。</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;false&quot; /&gt;.">一律傳回 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.NameScope.Item(System.String)">
      <summary vsli:raw="Gets or sets the item with the specified key.">取得或設定具有指定之索引鍵的項目。</summary>
      <param name="key" vsli:raw="The string name for the XAML name mapping to get or set.">要取得或設定之 XAML 名稱對應的字串名稱。</param>
      <returns vsli:raw="The value of the object mapped by the XAML name provided as &lt;paramref name=&quot;key&quot; /&gt;.">由 XAML 名稱 (提供為 <paramref name="key" />) 所對應之物件的值。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is provided as &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;value&quot; /&gt; is provided as &lt;see langword=&quot;null&quot; /&gt; for a set operation.">
        <paramref name="key" /> 提供做為 <see langword="null" />。  
-或- 
 所提供的 <paramref name="value" /> (<see langword="null" />) 適用於設定作業。</exception>
    </member>
    <member name="P:System.Windows.NameScope.Keys">
      <summary vsli:raw="Gets a collection of the keys in the &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; dictionary.">取得 <see cref="T:System.Windows.NameScope" /> 字典中索引鍵的集合。</summary>
      <returns vsli:raw="A collection of the keys in the &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; dictionary.">
        <see cref="T:System.Windows.NameScope" /> 字典中索引鍵的集合。</returns>
    </member>
    <member name="P:System.Windows.NameScope.NameScope">
      <summary vsli:raw="Gets or sets dynamically attached &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; instances.">取得或設定動態附加的 <see cref="T:System.Windows.NameScope" /> 執行個體。</summary>
    </member>
    <member name="F:System.Windows.NameScope.NameScopeProperty">
      <summary vsli:raw="Identifies the &lt;see cref=&quot;P:System.Windows.NameScope.NameScope&quot; /&gt; attached property.">識別 <see cref="P:System.Windows.NameScope.NameScope" /> 附加屬性。</summary>
    </member>
    <member name="M:System.Windows.NameScope.RegisterName(System.String,System.Object)">
      <summary vsli:raw="Registers a new name-object pair into the current XAML namescope.">將新的名稱-物件組註冊到目前的 XAML 名稱範圍。</summary>
      <param name="name" vsli:raw="The name to use for mapping the given object.">要用於對應指定物件的名稱。</param>
      <param name="scopedElement" vsli:raw="The object to be mapped to the provided name.">要對應至所提供名稱的物件。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; or &lt;paramref name=&quot;scopedElement&quot; /&gt; was provided as &lt;see langword=&quot;null&quot; /&gt;.">提供了 <paramref name="name" /> 或 <paramref name="scopedElement" /> 作為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; was provided as empty string  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;name&quot; /&gt; provided was rejected by the parser, because it contained characters that are invalid for a XAML name  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;name&quot; /&gt; provided would result in a duplicate name registration.">提供了 <paramref name="name" /> 作為空字串 
-或- 
 因為提供的 <paramref name="name" /> 包含無效 XAML 名稱字元，所以被剖析器拒絕 
-或- 
 提供的 <paramref name="name" /> 可能會導致重複名稱註冊。</exception>
    </member>
    <member name="M:System.Windows.NameScope.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary vsli:raw="Removes the specific object from the collection.">從集合中移除指定的物件。</summary>
      <param name="item" vsli:raw="The object to remove from the collection, specified as a &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; (key is &lt;see cref=&quot;T:System.String&quot; /&gt;, value is &lt;see cref=&quot;T:System.Object&quot; /&gt;).">要從集合移除的物件，指定為 <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (索引鍵為 <see cref="T:System.String" />，值為 <see cref="T:System.Object" />)。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if item was successfully removed from the collection, otherwise &lt;see langword=&quot;false&quot; /&gt;. Also returns &lt;see langword=&quot;false&quot; /&gt; if the item was not found in the collection.">如果從集合成功移除項目則為 <see langword="true" />，否則為 <see langword="false" />。 如果集合中找不到項目，也會傳回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.NameScope.Remove(System.String)">
      <summary vsli:raw="Removes a mapping for a specified name from the collection.">從集合移除指定之名稱的對應。</summary>
      <param name="key" vsli:raw="The string key, which is the name of the XAML namescope mapping to remove.">字串索引鍵，這是要移除之 XAML 名稱範圍對應的名稱。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if item was successfully removed from the collection, otherwise &lt;see langword=&quot;false&quot; /&gt;. Also returns &lt;see langword=&quot;false&quot; /&gt; if the item was not found in the collection.">如果從集合成功移除項目則為 <see langword="true" />，否則為 <see langword="false" />。 如果集合中找不到項目，也會傳回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.NameScope.SetNameScope(System.Windows.DependencyObject,System.Windows.Markup.INameScope)">
      <summary vsli:raw="Provides the attached property set accessor for the &lt;see cref=&quot;P:System.Windows.NameScope.NameScope&quot; /&gt; attached property.">為 <see cref="P:System.Windows.NameScope.NameScope" /> 附加屬性提供附加屬性 set 存取子。</summary>
      <param name="dependencyObject" vsli:raw="Object to change XAML namescope for.">要變更 XAML 名稱範圍的物件。</param>
      <param name="value" vsli:raw="The new XAML namescope, using an interface cast.">使用介面轉換的新 XAML 名稱範圍。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dependencyObject&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dependencyObject" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Windows.NameScope.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through a collection.">傳回逐一查看集合的列舉值。</summary>
      <returns vsli:raw="An enumerator that iterates through a collection.">逐一查看集合的列舉值。</returns>
    </member>
    <member name="M:System.Windows.NameScope.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through a collection.">傳回逐一查看集合的列舉值。</summary>
      <returns vsli:raw="An enumerator that iterates through a collection.">逐一查看集合的列舉值。</returns>
    </member>
    <member name="M:System.Windows.NameScope.TryGetValue(System.String,System.Object@)">
      <summary vsli:raw="Gets the value associated with the specified key.">取得與指定索引鍵關聯的值。</summary>
      <param name="key" vsli:raw="The key of the value to get.">要取得之值的索引鍵。</param>
      <param name="value" vsli:raw="When this method returns, contains the value associated with the specified key, if the key is found; otherwise, a null object. This parameter is passed uninitialized.">這個方法傳回時，如果找到索引鍵，則包含與指定之索引鍵關聯的值，否則為 null 物件。 這個參數會以未初始化的狀態傳遞。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; contains a mapping for the name provided as &lt;paramref name=&quot;key&quot; /&gt;. Otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Windows.NameScope" /> 包含提供為 <paramref name="key" /> 之名稱的對應則為 true， 否則為 false。</returns>
    </member>
    <member name="M:System.Windows.NameScope.UnregisterName(System.String)">
      <summary vsli:raw="Removes a name-object mapping from the XAML namescope.">從 XAML NameScope 中移除名稱/物件對應。</summary>
      <param name="name" vsli:raw="The name of the mapping to remove.">要移除之對應的名稱。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; was provided as empty string.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;name&quot; /&gt; provided had not been registered.">
        <paramref name="name" /> 已提供為空字串。  
-或- 
 尚未註冊提供的 <paramref name="name" />。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Windows.NameScope.Values">
      <summary vsli:raw="Gets a collection of the values in the &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; dictionary.">取得 <see cref="T:System.Windows.NameScope" /> 字典中值的集合。</summary>
      <returns vsli:raw="A collection of the values in the &lt;see cref=&quot;T:System.Windows.NameScope&quot; /&gt; dictionary.">
        <see cref="T:System.Windows.NameScope" /> 字典中值的集合。</returns>
    </member>
    <member name="T:System.Windows.Point">
      <summary vsli:raw="Represents an x- and y-coordinate pair in two-dimensional space.">代表在二維空間中的 X 和 Y 座標組。</summary>
    </member>
    <member name="M:System.Windows.Point.#ctor(System.Double,System.Double)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure that contains the specified coordinates.">建立新的 <see cref="T:System.Windows.Point" /> 結構，包含指定的座標。</summary>
      <param name="x" vsli:raw="The x-coordinate of the new &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">新 <see cref="T:System.Windows.Point" /> 結構的 X 座標。</param>
      <param name="y" vsli:raw="The y-coordinate of the new &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">新 <see cref="T:System.Windows.Point" /> 結構的 Y 座標。</param>
    </member>
    <member name="M:System.Windows.Point.Add(System.Windows.Point,System.Windows.Vector)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; to a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and returns the result as a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">將 <see cref="T:System.Windows.Vector" /> 加入至 <see cref="T:System.Windows.Point" />，並傳回結果做為 <see cref="T:System.Windows.Point" /> 結構。</summary>
      <param name="point" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure to add.">要相加的 <see cref="T:System.Windows.Point" /> 結構。</param>
      <param name="vector" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure to add.">要相加的 <see cref="T:System.Windows.Vector" /> 結構。</param>
      <returns vsli:raw="Returns the sum of &lt;paramref name=&quot;point&quot; /&gt; and &lt;paramref name=&quot;vector&quot; /&gt;.">傳回 <paramref name="point" /> 和 <paramref name="vector" /> 的總和。</returns>
    </member>
    <member name="M:System.Windows.Point.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and whether it contains the same coordinates as this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">判斷指定的 <see cref="T:System.Object" /> 是否為 <see cref="T:System.Windows.Point" />，以及它包含的座標是否與這個 <see cref="T:System.Windows.Point" /> 相同。</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare.">要比較的 <see cref="T:System.Object" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and contains the same &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; values as this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="o" /> 是 <see cref="T:System.Windows.Point" /> 而且包含的 <see cref="P:System.Windows.Point.X" /> 和 <see cref="P:System.Windows.Point.Y" /> 值與這個 <see cref="T:System.Windows.Point" /> 相同，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Point.Equals(System.Windows.Point)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structures for equality.">比較兩個 <see cref="T:System.Windows.Point" /> 結構是否相等。</summary>
      <param name="value" vsli:raw="The point to compare to this instance.">要與這個執行個體比較的點。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if both &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structures contain the same &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果兩個 <see cref="T:System.Windows.Point" /> 結構都包含相同的 <see cref="P:System.Windows.Point.X" /> 和 <see cref="P:System.Windows.Point.Y" /> 值則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Point.Equals(System.Windows.Point,System.Windows.Point)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structures for equality.">比較兩個 <see cref="T:System.Windows.Point" /> 結構是否相等。</summary>
      <param name="point1" vsli:raw="The first point to compare.">要比較的第一個點。</param>
      <param name="point2" vsli:raw="The second point to compare.">要比較的第二個點。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;point1&quot; /&gt; and &lt;paramref name=&quot;point2&quot; /&gt; contain the same &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="point1" /> 和 <paramref name="point2" /> 包含相同的 <see cref="P:System.Windows.Point.X" /> 和 <see cref="P:System.Windows.Point.Y" /> 值則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Point.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">傳回這個 <see cref="T:System.Windows.Point" /> 的雜湊程式碼。</summary>
      <returns vsli:raw="The hash code for this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">這個 <see cref="T:System.Windows.Point" /> 結構的雜湊程式碼。</returns>
    </member>
    <member name="M:System.Windows.Point.Multiply(System.Windows.Point,System.Windows.Media.Matrix)">
      <summary vsli:raw="Transforms the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure by the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt; structure.">使用指定的 <see cref="T:System.Windows.Point" /> 結構轉換指定的 <see cref="T:System.Windows.Media.Matrix" /> 結構。</summary>
      <param name="point" vsli:raw="The point to transform.">要轉換的點。</param>
      <param name="matrix" vsli:raw="The transformation matrix.">轉換矩陣。</param>
      <returns vsli:raw="The transformed point.">已轉換的點。</returns>
    </member>
    <member name="M:System.Windows.Point.Offset(System.Double,System.Double)">
      <summary vsli:raw="Offsets a point's &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; coordinates by the specified amounts.">將點的 <see cref="P:System.Windows.Point.X" /> 和 <see cref="P:System.Windows.Point.Y" /> 座標位移指定的數量。</summary>
      <param name="offsetX" vsli:raw="The amount to offset the point's &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; coordinate.">點 <see cref="P:System.Windows.Point.X" /> 座標的位移量。</param>
      <param name="offsetY" vsli:raw="The amount to offset the point's &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; coordinate.">點 <see cref="P:System.Windows.Point.Y" /> 座標的位移量。</param>
    </member>
    <member name="M:System.Windows.Point.op_Addition(System.Windows.Point,System.Windows.Vector)">
      <summary vsli:raw="Translates the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; by the specified &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; and returns the result.">依指定的 <see cref="T:System.Windows.Point" /> 平移指定的 <see cref="T:System.Windows.Vector" />，然後傳回結果。</summary>
      <param name="point" vsli:raw="The point to translate.">要平移的點。</param>
      <param name="vector" vsli:raw="The amount by which to translate &lt;paramref name=&quot;point&quot; /&gt;.">要平移 <paramref name="point" /> 的數量。</param>
      <returns vsli:raw="The result of translating the specified point by the specified vector.">依指定的向量平移指定的點之結果。</returns>
    </member>
    <member name="M:System.Windows.Point.op_Equality(System.Windows.Point,System.Windows.Point)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structures for equality.">比較兩個 <see cref="T:System.Windows.Point" /> 結構是否相等。</summary>
      <param name="point1" vsli:raw="The first &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure to compare.">要比較的第一個 <see cref="T:System.Windows.Point" /> 結構。</param>
      <param name="point2" vsli:raw="The second &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure to compare.">要比較的第二個 <see cref="T:System.Windows.Point" /> 結構。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if both the &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; coordinates of &lt;paramref name=&quot;point1&quot; /&gt; and &lt;paramref name=&quot;point2&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="point1" /> 和 <paramref name="point2" /> 的 <see cref="P:System.Windows.Point.X" /> 和 <see cref="P:System.Windows.Point.Y" /> 座標相等則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Point.op_Explicit(System.Windows.Point)~System.Windows.Size">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure with a &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; equal to this point's &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; value and a &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; equal to this point's &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; value.">建立 <see cref="T:System.Windows.Size" /> 結構，其 <see cref="P:System.Windows.Size.Width" /> 等於這個點的 <see cref="P:System.Windows.Point.X" /> 值且 <see cref="P:System.Windows.Size.Height" /> 等於這個點的 <see cref="P:System.Windows.Point.Y" /> 值。</summary>
      <param name="point" vsli:raw="The point to convert.">要轉換的點。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure with a &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; equal to this point's &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; value and a &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; equal to this point's &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; value.">
        <see cref="T:System.Windows.Size" /> 結構，其 <see cref="P:System.Windows.Size.Width" /> 等於這個點的 <see cref="P:System.Windows.Point.X" /> 值且 <see cref="P:System.Windows.Size.Height" /> 等於這個點的 <see cref="P:System.Windows.Point.Y" /> 值。</returns>
    </member>
    <member name="M:System.Windows.Point.op_Explicit(System.Windows.Point)~System.Windows.Vector">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure with an &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; value equal to the point's &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; value and a &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; value equal to the point's &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; value.">建立 <see cref="T:System.Windows.Vector" /> 結構，其 <see cref="P:System.Windows.Vector.X" /> 值等於這個點的 <see cref="P:System.Windows.Point.X" /> 值且 <see cref="P:System.Windows.Vector.Y" /> 值等於這個點的 <see cref="P:System.Windows.Point.Y" /> 值。</summary>
      <param name="point" vsli:raw="The point to convert.">要轉換的點。</param>
      <returns vsli:raw="A vector with an &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; value equal to the point's &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; value and a &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; value equal to the point's &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; value.">向量，其 <see cref="P:System.Windows.Vector.X" /> 值等於這個點的 <see cref="P:System.Windows.Point.X" /> 值且 <see cref="P:System.Windows.Vector.Y" /> 值等於這個點的 <see cref="P:System.Windows.Point.Y" /> 值。</returns>
    </member>
    <member name="M:System.Windows.Point.op_Inequality(System.Windows.Point,System.Windows.Point)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structures for inequality.">比較兩個 <see cref="T:System.Windows.Point" /> 結構是否相等。</summary>
      <param name="point1" vsli:raw="The first point to compare.">要比較的第一個點。</param>
      <param name="point2" vsli:raw="The second point to compare.">要比較的第二個點。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;point1&quot; /&gt; and &lt;paramref name=&quot;point2&quot; /&gt; have different &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; or &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; coordinates; &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;point1&quot; /&gt; and &lt;paramref name=&quot;point2&quot; /&gt; have the same &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; coordinates.">如果 <paramref name="point1" /> 和 <paramref name="point2" /> 具有不同的 <see cref="P:System.Windows.Point.X" /> 或 <see cref="P:System.Windows.Point.Y" /> 座標，則為 <see langword="true" />；如果 <paramref name="point1" /> 和 <paramref name="point2" /> 具有相同的 <see cref="P:System.Windows.Point.X" /> 和 <see cref="P:System.Windows.Point.Y" /> 座標，則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Point.op_Multiply(System.Windows.Point,System.Windows.Media.Matrix)">
      <summary vsli:raw="Transforms the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; by the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">依指定的 <see cref="T:System.Windows.Point" /> 轉換指定的 <see cref="T:System.Windows.Media.Matrix" />。</summary>
      <param name="point" vsli:raw="The point to transform.">要轉換的點。</param>
      <param name="matrix" vsli:raw="The transformation matrix.">轉換矩陣。</param>
      <returns vsli:raw="The result of transforming the specified point using the specified matrix.">使用指定的矩陣轉換指定的點之結果。</returns>
    </member>
    <member name="M:System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Point)">
      <summary vsli:raw="Subtracts the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; from another specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and returns the difference as a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">從指定的 <see cref="T:System.Windows.Point" /> 減去另一個指定的 <see cref="T:System.Windows.Point" /> 並以 <see cref="T:System.Windows.Vector" /> 傳回差數。</summary>
      <param name="point1" vsli:raw="The point from which &lt;paramref name=&quot;point2&quot; /&gt; is subtracted.">減去 <paramref name="point2" /> 的點。</param>
      <param name="point2" vsli:raw="The point to subtract from &lt;paramref name=&quot;point1&quot; /&gt;.">要從 <paramref name="point1" /> 減去的點。</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;point1&quot; /&gt; and &lt;paramref name=&quot;point2&quot; /&gt;.">
        <paramref name="point1" /> 與 <paramref name="point2" /> 之間的差數。</returns>
    </member>
    <member name="M:System.Windows.Point.op_Subtraction(System.Windows.Point,System.Windows.Vector)">
      <summary vsli:raw="Subtracts the specified &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; from the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and returns the resulting &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">從指定的 <see cref="T:System.Windows.Vector" /> 減去指定的 <see cref="T:System.Windows.Point" /> 並傳回產生的 <see cref="T:System.Windows.Point" />。</summary>
      <param name="point" vsli:raw="The point from which &lt;paramref name=&quot;vector&quot; /&gt; is subtracted.">減去 <paramref name="vector" /> 的點。</param>
      <param name="vector" vsli:raw="The vector to subtract from &lt;paramref name=&quot;point1&quot; /&gt;.">要從 <paramref name="point1" /> 減去的向量。</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;point&quot; /&gt; and &lt;paramref name=&quot;vector&quot; /&gt;.">
        <paramref name="point" /> 與 <paramref name="vector" /> 之間的差數。</returns>
    </member>
    <member name="M:System.Windows.Point.Parse(System.String)">
      <summary vsli:raw="Constructs a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; from the specified &lt;see cref=&quot;T:System.String&quot; /&gt;.">從指定的 <see cref="T:System.Windows.Point" /> 建構 <see cref="T:System.String" />。</summary>
      <param name="source" vsli:raw="A string representation of a point.">點的字串表示。</param>
      <returns vsli:raw="The equivalent &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">對等的 <see cref="T:System.Windows.Point" /> 結構。</returns>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is not composed of two comma- or space-delimited double values.">
        <paramref name="source" /> 不是由兩個以逗號或空格分隔的雙精度浮點數值所組成。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; does not contain two numbers.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;source&quot; /&gt; contains too many delimiters.">
        <paramref name="source" /> 不包含兩個數字。  
-或- 
 <paramref name="source" /> 含有太多分隔符號。</exception>
    </member>
    <member name="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Point)">
      <summary vsli:raw="Subtracts the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; from another specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and returns the difference as a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">從指定的 <see cref="T:System.Windows.Point" /> 減去另一個指定的 <see cref="T:System.Windows.Point" /> 並以 <see cref="T:System.Windows.Vector" /> 傳回差數。</summary>
      <param name="point1" vsli:raw="The point from which &lt;paramref name=&quot;point2&quot; /&gt; is subtracted.">減去 <paramref name="point2" /> 的點。</param>
      <param name="point2" vsli:raw="The point to subtract from &lt;paramref name=&quot;point1&quot; /&gt;.">要從 <paramref name="point1" /> 減去的點。</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;point1&quot; /&gt; and &lt;paramref name=&quot;point2&quot; /&gt;.">
        <paramref name="point1" /> 與 <paramref name="point2" /> 之間的差數。</returns>
    </member>
    <member name="M:System.Windows.Point.Subtract(System.Windows.Point,System.Windows.Vector)">
      <summary vsli:raw="Subtracts the specified &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; from the specified &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; and returns the resulting &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">從指定的 <see cref="T:System.Windows.Vector" /> 減去指定的 <see cref="T:System.Windows.Point" /> 並傳回產生的 <see cref="T:System.Windows.Point" />。</summary>
      <param name="point" vsli:raw="The point from which &lt;paramref name=&quot;vector&quot; /&gt; is subtracted.">減去 <paramref name="vector" /> 的點。</param>
      <param name="vector" vsli:raw="The &lt;paramref name=&quot;vector&quot; /&gt; to subtract from &lt;paramref name=&quot;point&quot; /&gt;.">要從 <paramref name="vector" /> 中減去的 <paramref name="point" />。</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;point&quot; /&gt; and &lt;paramref name=&quot;vector&quot; /&gt;.">
        <paramref name="point" /> 與 <paramref name="vector" /> 之間的差數。</returns>
    </member>
    <member name="M:System.Windows.Point.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. For a description of this member, see &lt;see cref=&quot;M:System.IFormattable.ToString(System.String,System.IFormatProvider)&quot; /&gt;.">這個成員支援 Windows Presentation Foundation (WPF) 基礎結構，但是您不可以從程式碼直接使用它。 如需這個成員的說明，請參閱 <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />。</summary>
      <param name="format" vsli:raw="The string specifying the format to use.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; to use the default format defined for the type of the &lt;see cref=&quot;T:System.IFormattable&quot; /&gt; implementation.">指定要使用之格式的字串。  
-或- 
 <see langword="null" />，使用定義給 <see cref="T:System.IFormattable" /> 實作 (Implementation) 類型的預設格式。</param>
      <param name="provider" vsli:raw="The &lt;see langword=&quot;IFormatProvider&quot; /&gt; to use to format the value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; to obtain the numeric format information from the current locale setting of the operating system.">
        <see langword="IFormatProvider" />，用來格式化數值。  
-或- 
<see langword="null" />，用來從作業系統的目前地區設定 (Locale) 取得數值格式資訊。</param>
      <returns vsli:raw="A string containing the value of the current instance in the specified format.">字串，包含目前執行個體的值，且該值採用指定的格式。</returns>
    </member>
    <member name="M:System.Windows.Point.ToString">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.String&quot; /&gt; representation of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">建立這個 <see cref="T:System.String" /> 的 <see cref="T:System.Windows.Point" /> 表示。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">
        <see cref="T:System.String" />，包含這個 <see cref="P:System.Windows.Point.X" /> 結構的 <see cref="P:System.Windows.Point.Y" /> 和 <see cref="T:System.Windows.Point" /> 值。</returns>
    </member>
    <member name="M:System.Windows.Point.ToString(System.IFormatProvider)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.String&quot; /&gt; representation of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">建立這個 <see cref="T:System.String" /> 的 <see cref="T:System.Windows.Point" /> 表示。</summary>
      <param name="provider" vsli:raw="Culture-specific formatting information.">文化特性 (Culture) 特有的格式資訊。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">
        <see cref="T:System.String" />，包含這個 <see cref="P:System.Windows.Point.X" /> 結構的 <see cref="P:System.Windows.Point.Y" /> 和 <see cref="T:System.Windows.Point" /> 值。</returns>
    </member>
    <member name="P:System.Windows.Point.X">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt;-coordinate value of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.">取得或設定這個 <see cref="P:System.Windows.Point.X" /> 結構的 <see cref="T:System.Windows.Point" /> 座標。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt;-coordinate value of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.  The default value is &lt;c&gt;0&lt;/c&gt;.">這個 <see cref="P:System.Windows.Point.X" /> 結構的 <see cref="T:System.Windows.Point" /> 座標值。  預設值為<c>0</c>。</returns>
    </member>
    <member name="P:System.Windows.Point.Y">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt;-coordinate value of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">取得或設定這個 <see cref="P:System.Windows.Point.Y" /> 的 <see cref="T:System.Windows.Point" /> 座標值。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt;-coordinate value of this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; structure.  The default value is &lt;c&gt;0&lt;/c&gt;.">這個 <see cref="P:System.Windows.Point.Y" /> 結構的 <see cref="T:System.Windows.Point" /> 座標值。  預設值為<c>0</c>。</returns>
    </member>
    <member name="T:System.Windows.PointConverter">
      <summary vsli:raw="Converts instances of other types to and from a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">在其他型別的執行個體和 <see cref="T:System.Windows.Point" /> 之間來回轉換。</summary>
    </member>
    <member name="M:System.Windows.PointConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.PointConverter&quot; /&gt; class.">初始化 <see cref="T:System.Windows.PointConverter" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Windows.PointConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object can be converted from a given type to an instance of a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">判斷物件是否可從指定的型別轉換為 <see cref="T:System.Windows.Point" /> 的執行個體。</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">描述類型的內容資訊。</param>
      <param name="sourceType" vsli:raw="The type of the source that is being evaluated for conversion.">正在評估以進行轉換之來源的型別。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type can be converted to a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果型別可轉換為 <see cref="T:System.Windows.Point" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.PointConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; can be converted to a different type.">判斷 <see cref="T:System.Windows.Point" /> 的執行個體是否可轉換成不同型別。</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">描述類型的內容資訊。</param>
      <param name="destinationType" vsli:raw="The desired type this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; is being evaluated for conversion.">要評估這個 <see cref="T:System.Windows.Point" /> 是否能轉換到的型別。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; can be converted to &lt;paramref name=&quot;destinationType&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果這個 <see cref="T:System.Windows.Point" /> 可轉換為 <paramref name="destinationType" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.PointConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified object to a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">嘗試將指定的物件轉換為 <see cref="T:System.Windows.Point" />。</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">提供轉換所需的內容資訊。</param>
      <param name="culture" vsli:raw="Cultural information to respect during conversion.">轉換期間應遵守的文化特性資訊。</param>
      <param name="value" vsli:raw="The object being converted.">要轉換的物件。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; created from converting &lt;paramref name=&quot;value&quot; /&gt;.">轉換 <paramref name="value" /> 時建立的 <see cref="T:System.Windows.Point" />。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The specified object is NULL or is a type that cannot be converted to a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">如果指定的物件為 NULL 或屬於無法轉換為 <see cref="T:System.Windows.Point" /> 的型別，則會擲回。</exception>
    </member>
    <member name="M:System.Windows.PointConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; to a specified type.">嘗試將 <see cref="T:System.Windows.Point" /> 轉換為指定的型別。</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">提供轉換所需的內容資訊。</param>
      <param name="culture" vsli:raw="Cultural information to respect during conversion.">轉換期間應遵守的文化特性資訊。</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; to convert.">要進行轉換的 <see cref="T:System.Windows.Point" />。</param>
      <param name="destinationType" vsli:raw="The type to convert this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; to.">要將這個 <see cref="T:System.Windows.Point" /> 轉換成的型別。</param>
      <returns vsli:raw="The object created from converting this &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">轉換這個 <see cref="T:System.Windows.Point" /> 時建立的物件。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or is not a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;, or &lt;paramref name=&quot;destinationType&quot; /&gt; is not one of the valid types for conversion.">如果 <paramref name="value" /> 不是 <see langword="null" /> 而且也不是 <see cref="T:System.Windows.Point" />，或者若 <paramref name="destinationType" /> 不是其中一個有效的轉換型別，則會擲回。</exception>
    </member>
    <member name="T:System.Windows.PropertyChangedCallback">
      <summary vsli:raw="Represents the callback that is invoked when the effective property value of a dependency property changes.">表示相依性屬性的有效屬性值變更時所要叫用的回呼。</summary>
      <param name="d" vsli:raw="The &lt;see cref=&quot;T:System.Windows.DependencyObject&quot; /&gt; on which the property has changed value.">屬性值變更的 <see cref="T:System.Windows.DependencyObject" />。</param>
      <param name="e" vsli:raw="Event data that is issued by any event that tracks changes to the effective value of this property.">追蹤這個屬性有效值變更之任何事件所發出的事件資料。</param>
    </member>
    <member name="T:System.Windows.PropertyMetadata">
      <summary vsli:raw="Defines certain behavior aspects of a dependency property as it is applied to a specific type, including conditions it was registered with.">在特定行為方面定義相依性屬性，因為它會套用到特定的類型，包括註冊時所用的條件。</summary>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.PropertyMetadata&quot; /&gt; class.">初始化 <see cref="T:System.Windows.PropertyMetadata" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.PropertyMetadata&quot; /&gt; class with a specified default value for the dependency property that this metadata will be applied to.">使用要套用這個中繼資料之相依性屬性的指定預設值，初始化 <see cref="T:System.Windows.PropertyMetadata" /> 類別的新執行個體。</summary>
      <param name="defaultValue" vsli:raw="The default value to specify for a dependency property, usually provided as a value of some specific type.">指定相依性屬性的預設值，通常做為某些特定型別的值提供。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;defaultValue&quot; /&gt; cannot be set to the value &lt;see cref=&quot;F:System.Windows.DependencyProperty.UnsetValue&quot; /&gt;.">
        <paramref name="defaultValue" /> 無法設定為值 <see cref="F:System.Windows.DependencyProperty.UnsetValue" />。</exception>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.PropertyMetadata&quot; /&gt; class with the specified default value and &lt;see cref=&quot;T:System.Windows.PropertyChangedCallback&quot; /&gt; implementation reference.">使用指定的預設值和 <see cref="T:System.Windows.PropertyMetadata" /> 實作參考，初始化 <see cref="T:System.Windows.PropertyChangedCallback" /> 類別的新執行個體。</summary>
      <param name="defaultValue" vsli:raw="The default value of the dependency property, usually provided as a value of some specific type.">相依性屬性的預設值，通常是做為某些特定型別的值提供。</param>
      <param name="propertyChangedCallback" vsli:raw="Reference to a handler implementation that is to be called by the property system whenever the effective value of the property changes.">處理常式實作的參考，當屬性的有效值變更時會由屬性系統呼叫。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;defaultValue&quot; /&gt; cannot be set to the value &lt;see cref=&quot;F:System.Windows.DependencyProperty.UnsetValue&quot; /&gt;.">
        <paramref name="defaultValue" /> 無法設定為值 <see cref="F:System.Windows.DependencyProperty.UnsetValue" />。</exception>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.PropertyMetadata&quot; /&gt; class with the specified default value and callbacks.">使用指定的預設值和回呼，初始化 <see cref="T:System.Windows.PropertyMetadata" /> 類別的新執行個體。</summary>
      <param name="defaultValue" vsli:raw="The default value of the dependency property, usually provided as a value of some specific type.">相依性屬性的預設值，通常是做為某些特定型別的值提供。</param>
      <param name="propertyChangedCallback" vsli:raw="Reference to a handler implementation that is to be called by the property system whenever the effective value of the property changes.">處理常式實作的參考，當屬性的有效值變更時會由屬性系統呼叫。</param>
      <param name="coerceValueCallback" vsli:raw="Reference to a handler implementation that is to be called whenever the property system calls &lt;see cref=&quot;M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)&quot; /&gt; against this property.">處理常式實作的參考，當屬性系統針對這個屬性呼叫 <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" /> 時便會呼叫。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;defaultValue&quot; /&gt; cannot be set to the value &lt;see cref=&quot;F:System.Windows.DependencyProperty.UnsetValue&quot; /&gt;.">
        <paramref name="defaultValue" /> 無法設定為值 <see cref="F:System.Windows.DependencyProperty.UnsetValue" />。</exception>
    </member>
    <member name="M:System.Windows.PropertyMetadata.#ctor(System.Windows.PropertyChangedCallback)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.PropertyMetadata&quot; /&gt; class with the specified &lt;see cref=&quot;T:System.Windows.PropertyChangedCallback&quot; /&gt; implementation reference.">使用指定的 <see cref="T:System.Windows.PropertyMetadata" /> 實作參考，初始化 <see cref="T:System.Windows.PropertyChangedCallback" /> 類別的新執行個體。</summary>
      <param name="propertyChangedCallback" vsli:raw="Reference to a handler implementation that is to be called by the property system whenever the effective value of the property changes.">處理常式實作的參考，當屬性的有效值變更時會由屬性系統呼叫。</param>
    </member>
    <member name="P:System.Windows.PropertyMetadata.CoerceValueCallback">
      <summary vsli:raw="Gets or sets a reference to a &lt;see cref=&quot;T:System.Windows.CoerceValueCallback&quot; /&gt; implementation specified in this metadata.">取得或設定在這個中繼資料中指定之 <see cref="T:System.Windows.CoerceValueCallback" /> 實作的參考。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.CoerceValueCallback&quot; /&gt; implementation reference.">
        <see cref="T:System.Windows.CoerceValueCallback" /> 實作參考。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Cannot set a metadata property once it is applied to a dependency property operation.">一旦套用至相依性屬性作業，便無法設定中繼資料屬性。</exception>
    </member>
    <member name="P:System.Windows.PropertyMetadata.DefaultValue">
      <summary vsli:raw="Gets or sets the default value of the dependency property.">取得或設定相依性屬性的預設值。</summary>
      <returns vsli:raw="The default value of the property. The default value on a &lt;see cref=&quot;T:System.Windows.PropertyMetadata&quot; /&gt; instance created with the parameterless constructor will be &lt;see cref=&quot;F:System.Windows.DependencyProperty.UnsetValue&quot; /&gt;.">屬性的預設值。 以無參數的函<see cref="T:System.Windows.PropertyMetadata" />式建立之實例上的預設值<see cref="F:System.Windows.DependencyProperty.UnsetValue" />將會是。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="Cannot be set to the value &lt;see cref=&quot;F:System.Windows.DependencyProperty.UnsetValue&quot; /&gt; once created.">一旦建立，便無法設定為值 <see cref="F:System.Windows.DependencyProperty.UnsetValue" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Cannot set a metadata property once it is applied to a dependency property operation.">一旦套用至相依性屬性作業，便無法設定中繼資料屬性。</exception>
    </member>
    <member name="P:System.Windows.PropertyMetadata.IsSealed">
      <summary vsli:raw="Gets a value that determines whether the metadata has been applied to a property in some way, resulting in the immutable state of that metadata instance.">取得值，這個值判斷中繼資料是否已經以某種方式套用至屬性，導致中繼資料執行個體的不可變狀態。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the metadata instance is immutable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果中繼資料執行個體是不可變的則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.PropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)">
      <summary vsli:raw="Merges this metadata with the base metadata.">合併這個中繼資料和基底中繼資料。</summary>
      <param name="baseMetadata" vsli:raw="The base metadata to merge with this instance's values.">要與這個執行個體值合併的基底中繼資料。</param>
      <param name="dp" vsli:raw="The dependency property to which this metadata is being applied.">要套用這個中繼資料的相依性屬性。</param>
    </member>
    <member name="M:System.Windows.PropertyMetadata.OnApply(System.Windows.DependencyProperty,System.Type)">
      <summary vsli:raw="Called when this metadata has been applied to a property, which indicates that the metadata is being sealed.">在這個中繼資料已套用至屬性時呼叫，表示要密封中繼資料。</summary>
      <param name="dp" vsli:raw="The dependency property to which the metadata has been applied.">已套用這個中繼資料的相依性屬性。</param>
      <param name="targetType" vsli:raw="The type associated with this metadata if this is type-specific metadata. If this is default metadata, this value is a null reference.">如果這是型別特定的中繼資料，則為與這個中繼資料相關聯的型別。 如果這是預設中繼資料，則該值是 null 參考。</param>
    </member>
    <member name="P:System.Windows.PropertyMetadata.PropertyChangedCallback">
      <summary vsli:raw="Gets or sets a reference to a &lt;see cref=&quot;T:System.Windows.PropertyChangedCallback&quot; /&gt; implementation specified in this metadata.">取得或設定在這個中繼資料中指定之 <see cref="T:System.Windows.PropertyChangedCallback" /> 實作的參考。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.PropertyChangedCallback&quot; /&gt; implementation reference.">
        <see cref="T:System.Windows.PropertyChangedCallback" /> 實作參考。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Cannot set a metadata property once it is applied to a dependency property operation.">一旦套用至相依性屬性作業，便無法設定中繼資料屬性。</exception>
    </member>
    <member name="T:System.Windows.Rect">
      <summary vsli:raw="Describes the width, height, and location of a rectangle.">描述矩形的寬度、高度和位置。</summary>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure that has the specified x-coordinate, y-coordinate, width, and height.">初始化 <see cref="T:System.Windows.Rect" /> 結構的新執行個體，這個執行個體具有指定的 X 座標、Y 座標、寬度和高度。</summary>
      <param name="x" vsli:raw="The x-coordinate of the top-left corner of the rectangle.">矩形左上角的 X 座標。</param>
      <param name="y" vsli:raw="The y-coordinate of the top-left corner of the rectangle.">矩形左上角的 Y 座標。</param>
      <param name="width" vsli:raw="The width of the rectangle.">矩形的寬度。</param>
      <param name="height" vsli:raw="The height of the rectangle.">矩形的高度。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;width&quot; /&gt; is a negative value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;height&quot; /&gt; is a negative value.">
        <paramref name="width" /> 是負值。  
-或- 
 <paramref name="height" /> 是負值。</exception>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Point)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure that is exactly large enough to contain the two specified points.">初始化 <see cref="T:System.Windows.Rect" /> 結構的新執行個體，這個執行個體剛好可以包含兩個指定的點。</summary>
      <param name="point1" vsli:raw="The first point that the new rectangle must contain.">新矩形必須包含的第一個點。</param>
      <param name="point2" vsli:raw="The second point that the new rectangle must contain.">新矩形必須包含的第二個點。</param>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Size)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure that has the specified top-left corner location and the specified width and height.">初始化 <see cref="T:System.Windows.Rect" /> 結構的新執行個體，這個執行個體具有指定的左上角位置和指定的寬度及高度。</summary>
      <param name="location" vsli:raw="A point that specifies the location of the top-left corner of the rectangle.">指定矩形左上角之位置的點。</param>
      <param name="size" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure that specifies the width and height of the rectangle.">
        <see cref="T:System.Windows.Size" /> 結構，指定矩形的高度和寬度。</param>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Vector)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure that is exactly large enough to contain the specified point and the sum of the specified point and the specified vector.">初始化 <see cref="T:System.Windows.Rect" /> 結構的新執行個體，這個執行個體剛好可以包含指定的點以及所指定點和所指定向量的總和。</summary>
      <param name="point" vsli:raw="The first point the rectangle must contain.">矩形必須包含的第一個點。</param>
      <param name="vector" vsli:raw="The amount to offset the specified point. The resulting rectangle will be exactly large enough to contain both points.">要位移 (Offset) 所指定點的數量。 產生的矩形剛好可以包含兩個點。</param>
    </member>
    <member name="M:System.Windows.Rect.#ctor(System.Windows.Size)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure that is of the specified size and is located at (0,0).">初始化 <see cref="T:System.Windows.Rect" /> 類別的新執行個體，這個執行個體是所指定的大小而且位在 (0,0)。</summary>
      <param name="size" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure that specifies the width and height of the rectangle.">
        <see cref="T:System.Windows.Size" /> 結構，指定矩形的高度和寬度。</param>
    </member>
    <member name="P:System.Windows.Rect.Bottom">
      <summary vsli:raw="Gets the y-axis value of the bottom of the rectangle.">取得矩形底端的 Y 軸值。</summary>
      <returns vsli:raw="The y-axis value of the bottom of the rectangle. If the rectangle is empty, the value is &lt;see cref=&quot;F:System.Double.NegativeInfinity&quot; /&gt; .">矩形底端的 Y 軸值。 如果矩形是空的，則值為 <see cref="F:System.Double.NegativeInfinity" />。</returns>
    </member>
    <member name="P:System.Windows.Rect.BottomLeft">
      <summary vsli:raw="Gets the position of the bottom-left corner of the rectangle.">取得矩形左下角的位置。</summary>
      <returns vsli:raw="The position of the bottom-left corner of the rectangle.">矩形左下角的位置。</returns>
    </member>
    <member name="P:System.Windows.Rect.BottomRight">
      <summary vsli:raw="Gets the position of the bottom-right corner of the rectangle.">取得矩形右下角的位置。</summary>
      <returns vsli:raw="The position of the bottom-right corner of the rectangle.">矩形右下角的位置。</returns>
    </member>
    <member name="M:System.Windows.Rect.Contains(System.Double,System.Double)">
      <summary vsli:raw="Indicates whether the rectangle contains the specified x-coordinate and y-coordinate.">表示矩形是否包含指定的 X 座標和 Y 座標。</summary>
      <param name="x" vsli:raw="The x-coordinate of the point to check.">要檢查之點的 X 座標。</param>
      <param name="y" vsli:raw="The y-coordinate of the point to check.">要檢查之點的 Y 座標。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if (&lt;paramref name=&quot;x&quot; /&gt;, &lt;paramref name=&quot;y&quot; /&gt;) is contained by the rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果矩形包含 (<paramref name="x" />, <paramref name="y" />) 則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Rect.Contains(System.Windows.Point)">
      <summary vsli:raw="Indicates whether the rectangle contains the specified point.">表示矩形是否包含指定的點。</summary>
      <param name="point" vsli:raw="The point to check.">要檢查的點。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the rectangle contains the specified point; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果矩形包含指定的點，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Rect.Contains(System.Windows.Rect)">
      <summary vsli:raw="Indicates whether the rectangle contains the specified rectangle.">表示矩形是否包含指定的矩形。</summary>
      <param name="rect" vsli:raw="The rectangle to check.">要檢查的矩形。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;rect&quot; /&gt; is entirely contained by the rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果矩形整個包含 <paramref name="rect" /> 則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Rect.Empty">
      <summary vsli:raw="Gets a special value that represents a rectangle with no position or area.">取得特殊值，這個值表示沒有位置或區域的矩形。</summary>
      <returns vsli:raw="The empty rectangle, which has &lt;see cref=&quot;P:System.Windows.Rect.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Y&quot; /&gt; property values of &lt;see cref=&quot;F:System.Double.PositiveInfinity&quot; /&gt;, and has &lt;see cref=&quot;P:System.Windows.Rect.Width&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Height&quot; /&gt; property values of &lt;see cref=&quot;F:System.Double.NegativeInfinity&quot; /&gt;.">空白矩形 (<see cref="P:System.Windows.Rect.X" /> 和 <see cref="P:System.Windows.Rect.Y" /> 屬性值為 <see cref="F:System.Double.PositiveInfinity" /> 而且 <see cref="P:System.Windows.Rect.Width" /> 和 <see cref="P:System.Windows.Rect.Height" /> 屬性值為 <see cref="F:System.Double.NegativeInfinity" />)。</returns>
    </member>
    <member name="M:System.Windows.Rect.Equals(System.Object)">
      <summary vsli:raw="Indicates whether the specified object is equal to the current rectangle.">表示指定的物件是否等於目前矩形。</summary>
      <param name="o" vsli:raw="The object to compare to the current rectangle.">要與目前矩形相比較的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; and has the same &lt;see cref=&quot;P:System.Windows.Rect.Location&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Size&quot; /&gt; values as the current rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="o" /> 是 <see cref="T:System.Windows.Rect" /> 而且具有與目前矩形相同的 <see cref="P:System.Windows.Rect.Location" /> 和 <see cref="P:System.Windows.Rect.Size" /> 值則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Rect.Equals(System.Windows.Rect)">
      <summary vsli:raw="Indicates whether the specified rectangle is equal to the current rectangle.">表示指定的矩形是否等於目前矩形。</summary>
      <param name="value" vsli:raw="The rectangle to compare to the current rectangle.">要與目前矩形相比較的矩形。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified rectangle has the same &lt;see cref=&quot;P:System.Windows.Rect.Location&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Size&quot; /&gt; values as the current rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的矩形具有與目前矩形相同的 <see cref="P:System.Windows.Rect.Location" /> 和 <see cref="P:System.Windows.Rect.Size" /> 值則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)">
      <summary vsli:raw="Indicates whether the specified rectangles are equal.">表示指定的矩形是否相等。</summary>
      <param name="rect1" vsli:raw="The first rectangle to compare.">要比較的第一個矩形。</param>
      <param name="rect2" vsli:raw="The second rectangle to compare.">要比較的第二個矩形。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the rectangles have the same &lt;see cref=&quot;P:System.Windows.Rect.Location&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Size&quot; /&gt; values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果矩形具有相同的 <see cref="P:System.Windows.Rect.Location" /> 和 <see cref="P:System.Windows.Rect.Size" /> 值則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Rect.GetHashCode">
      <summary vsli:raw="Creates a hash code for the rectangle.">建立矩形的雜湊程式碼。</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure.">目前 <see cref="T:System.Windows.Rect" /> 結構的雜湊程式碼。</returns>
    </member>
    <member name="P:System.Windows.Rect.Height">
      <summary vsli:raw="Gets or sets the height of the rectangle.">取得或設定矩形的高度。</summary>
      <returns vsli:raw="A positive number that represents the height of the rectangle. The default is 0.">表示矩形高度的正數。 預設值為 0。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Height&quot; /&gt; is set to a negative value.">
        <see cref="P:System.Windows.Rect.Height" /> 設為負數值。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Height&quot; /&gt; is set on an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <see cref="P:System.Windows.Rect.Height" /> 是在 <see cref="P:System.Windows.Rect.Empty" /> 矩形上設定。</exception>
    </member>
    <member name="M:System.Windows.Rect.Inflate(System.Double,System.Double)">
      <summary vsli:raw="Expands or shrinks the rectangle by using the specified width and height amounts, in all directions.">使用所指定寬度和高度數量，往所有方向展開或壓縮矩形。</summary>
      <param name="width" vsli:raw="The amount by which to expand or shrink the left and right sides of the rectangle.">用來展開或壓縮矩形左右兩邊的數量。</param>
      <param name="height" vsli:raw="The amount by which to expand or shrink the top and bottom sides of the rectangle.">用來展開或壓縮矩形上下兩邊的數量。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This method is called on the &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">這個方法是在 <see cref="P:System.Windows.Rect.Empty" /> 矩形上呼叫。</exception>
    </member>
    <member name="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)">
      <summary vsli:raw="Creates a rectangle that results from expanding or shrinking the specified rectangle by the specified width and height amounts, in all directions.">建立矩形，這個矩形是以指定的寬度和高度數量往所有方向展開或壓縮指定的矩形而產生的矩形。</summary>
      <param name="rect" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure to modify.">要修改的 <see cref="T:System.Windows.Rect" /> 結構。</param>
      <param name="width" vsli:raw="The amount by which to expand or shrink the left and right sides of the rectangle.">用來展開或壓縮矩形左右兩邊的數量。</param>
      <param name="height" vsli:raw="The amount by which to expand or shrink the top and bottom sides of the rectangle.">用來展開或壓縮矩形上下兩邊的數量。</param>
      <returns vsli:raw="The resulting rectangle.">產生的矩形。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;rect&quot; /&gt; is an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <paramref name="rect" /> 是一種 <see cref="P:System.Windows.Rect.Empty" /> 矩形。</exception>
    </member>
    <member name="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)">
      <summary vsli:raw="Returns the rectangle that results from expanding the specified rectangle by the specified &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;, in all directions.">傳回矩形，這個矩形是以指定的 <see cref="T:System.Windows.Size" /> 往所有方向展開所指定矩形而產生的矩形。</summary>
      <param name="rect" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; structure to modify.">要修改的 <see cref="T:System.Windows.Rect" /> 結構。</param>
      <param name="size" vsli:raw="Specifies the amount to expand the rectangle. The &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; property specifies the amount to increase the rectangle's &lt;see cref=&quot;P:System.Windows.Rect.Left&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Right&quot; /&gt; properties. The &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; property specifies the amount to increase the rectangle's &lt;see cref=&quot;P:System.Windows.Rect.Top&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Bottom&quot; /&gt; properties.">指定展開矩形的數量。 <see cref="T:System.Windows.Size" /> 結構的 <see cref="P:System.Windows.Size.Width" /> 屬性會指定增加矩形 <see cref="P:System.Windows.Rect.Left" /> 和 <see cref="P:System.Windows.Rect.Right" /> 屬性的數量。 <see cref="T:System.Windows.Size" /> 結構的 <see cref="P:System.Windows.Size.Height" /> 屬性會指定增加矩形 <see cref="P:System.Windows.Rect.Top" /> 和 <see cref="P:System.Windows.Rect.Bottom" /> 屬性的數量。</param>
      <returns vsli:raw="The resulting rectangle.">產生的矩形。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;rect&quot; /&gt; is an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <paramref name="rect" /> 是一種 <see cref="P:System.Windows.Rect.Empty" /> 矩形。</exception>
    </member>
    <member name="M:System.Windows.Rect.Inflate(System.Windows.Size)">
      <summary vsli:raw="Expands the rectangle by using the specified &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;, in all directions.">使用指定的 <see cref="T:System.Windows.Size" /> 往所有方向展開矩形。</summary>
      <param name="size" vsli:raw="Specifies the amount to expand the rectangle. The &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; property specifies the amount to increase the rectangle's &lt;see cref=&quot;P:System.Windows.Rect.Left&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Right&quot; /&gt; properties. The &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure's &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; property specifies the amount to increase the rectangle's &lt;see cref=&quot;P:System.Windows.Rect.Top&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Bottom&quot; /&gt; properties.">指定展開矩形的數量。 <see cref="T:System.Windows.Size" /> 結構的 <see cref="P:System.Windows.Size.Width" /> 屬性會指定增加矩形 <see cref="P:System.Windows.Rect.Left" /> 和 <see cref="P:System.Windows.Rect.Right" /> 屬性的數量。 <see cref="T:System.Windows.Size" /> 結構的 <see cref="P:System.Windows.Size.Height" /> 屬性會指定增加矩形 <see cref="P:System.Windows.Rect.Top" /> 和 <see cref="P:System.Windows.Rect.Bottom" /> 屬性的數量。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This method is called on the &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">這個方法是在 <see cref="P:System.Windows.Rect.Empty" /> 矩形上呼叫。</exception>
    </member>
    <member name="M:System.Windows.Rect.Intersect(System.Windows.Rect)">
      <summary vsli:raw="Finds the intersection of the current rectangle and the specified rectangle, and stores the result as the current rectangle.">尋找目前矩形與所指定矩形的交集，並將結果儲存為目前的矩形。</summary>
      <param name="rect" vsli:raw="The rectangle to intersect with the current rectangle.">與目前矩形交集的矩形。</param>
    </member>
    <member name="M:System.Windows.Rect.Intersect(System.Windows.Rect,System.Windows.Rect)">
      <summary vsli:raw="Returns the intersection of the specified rectangles.">傳回兩個指定之矩形的交集。</summary>
      <param name="rect1" vsli:raw="The first rectangle to compare.">要比較的第一個矩形。</param>
      <param name="rect2" vsli:raw="The second rectangle to compare.">要比較的第二個矩形。</param>
      <returns vsli:raw="The intersection of the two rectangles, or &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; if no intersection exists.">兩個矩形的交集，如果沒有交集則為 <see cref="P:System.Windows.Rect.Empty" />。</returns>
    </member>
    <member name="M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)">
      <summary vsli:raw="Indicates whether the specified rectangle intersects with the current rectangle.">表示指定的矩形是否與目前矩形交集。</summary>
      <param name="rect" vsli:raw="The rectangle to check.">要檢查的矩形。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified rectangle intersects with the current rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的矩形與目前矩形交集則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Rect.IsEmpty">
      <summary vsli:raw="Gets a value that indicates whether the rectangle is the &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">取得值，這個值表示矩形是否為 <see cref="P:System.Windows.Rect.Empty" /> 矩形。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the rectangle is the &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果矩形是 <see cref="P:System.Windows.Rect.Empty" /> 矩形則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Rect.Left">
      <summary vsli:raw="Gets the x-axis value of the left side of the rectangle.">取得矩形左側的 X 軸值。</summary>
      <returns vsli:raw="The x-axis value of the left side of the rectangle.">矩形左側的 X 軸值。</returns>
    </member>
    <member name="P:System.Windows.Rect.Location">
      <summary vsli:raw="Gets or sets the position of the top-left corner of the rectangle.">取得或設定矩形左上角的位置。</summary>
      <returns vsli:raw="The position of the top-left corner of the rectangle. The default is (0, 0).">矩形左上角的位置。 預設為 (0,0)。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Location&quot; /&gt; is set on an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <see cref="P:System.Windows.Rect.Location" /> 是在 <see cref="P:System.Windows.Rect.Empty" /> 矩形上設定。</exception>
    </member>
    <member name="M:System.Windows.Rect.Offset(System.Double,System.Double)">
      <summary vsli:raw="Moves the rectangle by the specified horizontal and vertical amounts.">以指定的水平和垂直數量移動矩形。</summary>
      <param name="offsetX" vsli:raw="The amount to move the rectangle horizontally.">要水平移動矩形的數量。</param>
      <param name="offsetY" vsli:raw="The amount to move the rectangle vertically.">要垂直移動矩形的數量。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This method is called on the &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">這個方法是在 <see cref="P:System.Windows.Rect.Empty" /> 矩形上呼叫。</exception>
    </member>
    <member name="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Double,System.Double)">
      <summary vsli:raw="Returns a rectangle that is offset from the specified rectangle by using the specified horizontal and vertical amounts.">傳回矩形，這個矩形是使用所指定水平和垂直數量從指定之矩形位移的矩形。</summary>
      <param name="rect" vsli:raw="The rectangle to move.">要移動的矩形。</param>
      <param name="offsetX" vsli:raw="The horizontal offset for the new rectangle.">新矩形的水平位移。</param>
      <param name="offsetY" vsli:raw="The vertical offset for the new rectangle.">新矩形的垂直位移。</param>
      <returns vsli:raw="The resulting rectangle.">產生的矩形。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;rect&quot; /&gt; is &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt;.">
        <paramref name="rect" /> 為 <see cref="P:System.Windows.Rect.Empty" />。</exception>
    </member>
    <member name="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Windows.Vector)">
      <summary vsli:raw="Returns a rectangle that is offset from the specified rectangle by using the specified vector.">傳回矩形，這個矩形是使用所指定向量從指定之矩形位移的矩形。</summary>
      <param name="rect" vsli:raw="The original rectangle.">原始矩形。</param>
      <param name="offsetVector" vsli:raw="A vector that specifies the horizontal and vertical offsets for the new rectangle.">指定新矩形的水平和垂直位移的向量。</param>
      <returns vsli:raw="The resulting rectangle.">產生的矩形。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;rect&quot; /&gt; is &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt;.">
        <paramref name="rect" /> 為 <see cref="P:System.Windows.Rect.Empty" />。</exception>
    </member>
    <member name="M:System.Windows.Rect.Offset(System.Windows.Vector)">
      <summary vsli:raw="Moves the rectangle by the specified vector.">以指定的向量移動矩形。</summary>
      <param name="offsetVector" vsli:raw="A vector that specifies the horizontal and vertical amounts to move the rectangle.">向量，指定用來移動矩形的水平和垂直數量。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This method is called on the &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">這個方法是在 <see cref="P:System.Windows.Rect.Empty" /> 矩形上呼叫。</exception>
    </member>
    <member name="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)">
      <summary vsli:raw="Compares two rectangles for exact equality.">比較兩個矩形是否完全相等。</summary>
      <param name="rect1" vsli:raw="The first rectangle to compare.">要比較的第一個矩形。</param>
      <param name="rect2" vsli:raw="The second rectangle to compare.">要比較的第二個矩形。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the rectangles have the same &lt;see cref=&quot;P:System.Windows.Rect.Location&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Size&quot; /&gt; values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果矩形具有相同的 <see cref="P:System.Windows.Rect.Location" /> 和 <see cref="P:System.Windows.Rect.Size" /> 值則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)">
      <summary vsli:raw="Compares two rectangles for inequality.">比較兩個矩形是否不相等。</summary>
      <param name="rect1" vsli:raw="The first rectangle to compare.">要比較的第一個矩形。</param>
      <param name="rect2" vsli:raw="The second rectangle to compare.">要比較的第二個矩形。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the rectangles do not have the same &lt;see cref=&quot;P:System.Windows.Rect.Location&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Rect.Size&quot; /&gt; values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果矩形沒有相同的 <see cref="P:System.Windows.Rect.Location" /> 和 <see cref="P:System.Windows.Rect.Size" /> 值則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Rect.Parse(System.String)">
      <summary vsli:raw="Creates a new rectangle from the specified string representation.">從指定的字串表示建立新矩形。</summary>
      <param name="source" vsli:raw="The string representation of the rectangle, in the form &quot;x, y, width, height&quot;.">矩形的字串表示，格式為 "x, y, width, height"。</param>
      <returns vsli:raw="The resulting rectangle.">產生的矩形。</returns>
    </member>
    <member name="P:System.Windows.Rect.Right">
      <summary vsli:raw="Gets the x-axis value of the right side of the rectangle.">取得矩形右側的 X 軸值。</summary>
      <returns vsli:raw="The x-axis value of the right side of the rectangle.">矩形右側的 X 軸值。</returns>
    </member>
    <member name="M:System.Windows.Rect.Scale(System.Double,System.Double)">
      <summary vsli:raw="Multiplies the size of the current rectangle by the specified x and y values.">將目前矩形大小乘上指定的 X 和 Y 值。</summary>
      <param name="scaleX" vsli:raw="The scale factor in the x-direction.">X 方向的縮放因數。</param>
      <param name="scaleY" vsli:raw="The scale factor in the y-direction.">Y 方向的縮放因數。</param>
    </member>
    <member name="P:System.Windows.Rect.Size">
      <summary vsli:raw="Gets or sets the width and height of the rectangle.">取得或設定矩形的寬度和高度。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure that specifies the width and height of the rectangle.">
        <see cref="T:System.Windows.Size" /> 結構，指定矩形的高度和寬度。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Size&quot; /&gt; is set on an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <see cref="P:System.Windows.Rect.Size" /> 是在 <see cref="P:System.Windows.Rect.Empty" /> 矩形上設定。</exception>
    </member>
    <member name="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="Formats the value of the current instance using the specified format.">使用指定的格式，格式化目前執行個體的值。</summary>
      <param name="format" vsli:raw="The format to use.  &#xA;  &#xA; -or-  &#xA;  &#xA; A null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) to use the default format defined for the type of the &lt;see cref=&quot;T:System.IFormattable&quot; /&gt; implementation.">要使用的格式。  
-或- 
若要使用為 <see cref="T:System.IFormattable" /> 實作類型所定義的預設格式，則為 Null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</param>
      <param name="provider" vsli:raw="The provider to use to format the value.  &#xA;  &#xA; -or-  &#xA;  &#xA; A null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.">要用來格式化值的提供者。  
-或- 
Null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)，用於取得作業系統目前地區設定中的數值格式資訊。</param>
      <returns vsli:raw="A string representation of the rectangle.">矩形的字串表示。</returns>
    </member>
    <member name="P:System.Windows.Rect.Top">
      <summary vsli:raw="Gets the y-axis position of the top of the rectangle.">取得矩形頂端的 Y 軸位置。</summary>
      <returns vsli:raw="The y-axis position of the top of the rectangle.">矩形頂端的 Y 軸位置。</returns>
    </member>
    <member name="P:System.Windows.Rect.TopLeft">
      <summary vsli:raw="Gets the position of the top-left corner of the rectangle.">取得矩形左上角的位置。</summary>
      <returns vsli:raw="The position of the top-left corner of the rectangle.">矩形左上角的位置。</returns>
    </member>
    <member name="P:System.Windows.Rect.TopRight">
      <summary vsli:raw="Gets the position of the top-right corner of the rectangle.">取得矩形右上角的位置。</summary>
      <returns vsli:raw="The position of the top-right corner of the rectangle.">矩形右上角的位置。</returns>
    </member>
    <member name="M:System.Windows.Rect.ToString">
      <summary vsli:raw="Returns a string representation of the rectangle.">傳回矩形的字串表示。</summary>
      <returns vsli:raw="A string representation of the current rectangle. The string has the following form: &quot;&lt;see cref=&quot;P:System.Windows.Rect.X&quot; /&gt;,&lt;see cref=&quot;P:System.Windows.Rect.Y&quot; /&gt;,&lt;see cref=&quot;P:System.Windows.Rect.Width&quot; /&gt;,&lt;see cref=&quot;P:System.Windows.Rect.Height&quot; /&gt;&quot;.">目前矩形的字串表示。 字串的格式如下："<see cref="P:System.Windows.Rect.X" />,<see cref="P:System.Windows.Rect.Y" />,<see cref="P:System.Windows.Rect.Width" />,<see cref="P:System.Windows.Rect.Height" />"。</returns>
    </member>
    <member name="M:System.Windows.Rect.ToString(System.IFormatProvider)">
      <summary vsli:raw="Returns a string representation of the rectangle by using the specified format provider.">使用指定的格式提供者，傳回矩形的字串表示。</summary>
      <param name="provider" vsli:raw="Culture-specific formatting information.">文化特性 (Culture) 特有的格式資訊。</param>
      <returns vsli:raw="A string representation of the current rectangle that is determined by the specified format provider.">目前矩形的字串表示，透過指定的格式提供者進行判斷。</returns>
    </member>
    <member name="M:System.Windows.Rect.Transform(System.Windows.Media.Matrix)">
      <summary vsli:raw="Transforms the rectangle by applying the specified matrix.">套用指定的矩陣轉換矩形。</summary>
      <param name="matrix" vsli:raw="A matrix that specifies the transformation to apply.">指定要套用轉換的矩陣。</param>
    </member>
    <member name="M:System.Windows.Rect.Transform(System.Windows.Rect,System.Windows.Media.Matrix)">
      <summary vsli:raw="Returns the rectangle that results from applying the specified matrix to the specified rectangle.">傳回矩形，這個矩形是將所指定矩陣套用至指定的矩形而產生。</summary>
      <param name="rect" vsli:raw="A rectangle that is the basis for the transformation.">做為轉換基礎的矩形。</param>
      <param name="matrix" vsli:raw="A matrix that specifies the transformation to apply.">指定要套用轉換的矩陣。</param>
      <returns vsli:raw="The rectangle that results from the operation.">因這個作業而產生的矩形。</returns>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Point)">
      <summary vsli:raw="Expands the current rectangle exactly enough to contain the specified point.">將目前矩形展開為剛好可以包含指定的點。</summary>
      <param name="point" vsli:raw="The point to include.">要包含的點。</param>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Rect)">
      <summary vsli:raw="Expands the current rectangle exactly enough to contain the specified rectangle.">將目前矩形展開為剛好可以包含指定的矩形。</summary>
      <param name="rect" vsli:raw="The rectangle to include.">要包含的矩形。</param>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Point)">
      <summary vsli:raw="Creates a rectangle that is exactly large enough to include the specified rectangle and the specified point.">建立矩形，這個矩形剛好可以包含指定的矩形和指定的點。</summary>
      <param name="rect" vsli:raw="The rectangle to include.">要包含的矩形。</param>
      <param name="point" vsli:raw="The point to include.">要包含的點。</param>
      <returns vsli:raw="A rectangle that is exactly large enough to contain the specified rectangle and the specified point.">矩形，剛好可以包含指定的矩形和指定的點。</returns>
    </member>
    <member name="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Rect)">
      <summary vsli:raw="Creates a rectangle that is exactly large enough to contain the two specified rectangles.">建立矩形，這個矩形剛好可以包含兩個指定的矩形。</summary>
      <param name="rect1" vsli:raw="The first rectangle to include.">要包含的第一個矩形。</param>
      <param name="rect2" vsli:raw="The second rectangle to include.">要包含的第二個矩形。</param>
      <returns vsli:raw="The resulting rectangle.">產生的矩形。</returns>
    </member>
    <member name="P:System.Windows.Rect.Width">
      <summary vsli:raw="Gets or sets the width of the rectangle.">取得或設定矩形的寬度。</summary>
      <returns vsli:raw="A positive number that represents the width of the rectangle. The default is 0.">表示矩形寬度的正數。 預設值為 0。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Width&quot; /&gt; is set to a negative value.">
        <see cref="P:System.Windows.Rect.Width" /> 設為負數值。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Width&quot; /&gt; is set on an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <see cref="P:System.Windows.Rect.Width" /> 是在 <see cref="P:System.Windows.Rect.Empty" /> 矩形上設定。</exception>
    </member>
    <member name="P:System.Windows.Rect.X">
      <summary vsli:raw="Gets or sets the x-axis value of the left side of the rectangle.">取得或設定矩形左側的 X 軸值。</summary>
      <returns vsli:raw="The x-axis value of the left side of the rectangle.">矩形左側的 X 軸值。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.X&quot; /&gt; is set on an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <see cref="P:System.Windows.Rect.X" /> 是在 <see cref="P:System.Windows.Rect.Empty" /> 矩形上設定。</exception>
    </member>
    <member name="P:System.Windows.Rect.Y">
      <summary vsli:raw="Gets or sets the y-axis value of the top side of the rectangle.">取得或設定矩形上方的 Y 軸值。</summary>
      <returns vsli:raw="The y-axis value of the top side of the rectangle.">矩形上方的 Y 軸值。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Rect.Y&quot; /&gt; is set on an &lt;see cref=&quot;P:System.Windows.Rect.Empty&quot; /&gt; rectangle.">
        <see cref="P:System.Windows.Rect.Y" /> 是在 <see cref="P:System.Windows.Rect.Empty" /> 矩形上設定。</exception>
    </member>
    <member name="T:System.Windows.RectConverter">
      <summary vsli:raw="Converts instances of other types to and from instances of &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">將其他類型的執行個體轉換成 <see cref="T:System.Windows.Rect" /> 執行個體，以及反向操作。</summary>
    </member>
    <member name="M:System.Windows.RectConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.RectConverter&quot; /&gt; class.">初始化 <see cref="T:System.Windows.RectConverter" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Windows.RectConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object can be converted from a given type to an instance of &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">判斷物件是否可從指定的型別轉換為 <see cref="T:System.Windows.Rect" /> 的執行個體。</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">提供轉換所需的內容資訊。</param>
      <param name="sourceType" vsli:raw="The type of the source that is being evaluated for conversion.">正在評估以進行轉換之來源的型別。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type can be converted to a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果型別可轉換為 <see cref="T:System.Windows.Rect" />，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.RectConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; can be converted to the specified type.">判斷 <see cref="T:System.Windows.Rect" /> 是否可轉換為指定的型別。</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">提供轉換所需的內容資訊。</param>
      <param name="destinationType" vsli:raw="The desired type this &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; is being evaluated for conversion.">要評估這個 <see cref="T:System.Windows.Rect" /> 是否能轉換到的型別。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; can be converted to &lt;paramref name=&quot;destinationType&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果可將 <see cref="T:System.Windows.Rect" /> 轉換為 <paramref name="destinationType" /> 則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.RectConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified object to a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">嘗試將指定的物件轉換為 <see cref="T:System.Windows.Rect" />。</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">提供轉換所需的內容資訊。</param>
      <param name="culture" vsli:raw="Cultural information which is respected when converting.">轉換時遵守的文化特性資訊。</param>
      <param name="value" vsli:raw="The object being converted.">要轉換的物件。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; created from converting &lt;paramref name=&quot;value&quot; /&gt;.">轉換 <paramref name="value" /> 時建立的 <see cref="T:System.Windows.Rect" />。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="The specified object is NULL or is a type that cannot be converted to a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">如果指定的物件為 NULL 或屬於無法轉換為 <see cref="T:System.Windows.Rect" /> 的型別，則會擲回。</exception>
    </member>
    <member name="M:System.Windows.RectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; to the specified type.">嘗試將 <see cref="T:System.Windows.Rect" /> 轉換為指定的型別。</summary>
      <param name="context" vsli:raw="Provides contextual information required for conversion.">提供轉換所需的內容資訊。</param>
      <param name="culture" vsli:raw="Cultural information which is respected during conversion.">轉換期間遵守的文化特性資訊。</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; to convert.">要進行轉換的 <see cref="T:System.Windows.Rect" />。</param>
      <param name="destinationType" vsli:raw="The type to convert this &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt; to.">要將這個 <see cref="T:System.Windows.Rect" /> 轉換成的型別。</param>
      <returns vsli:raw="The object created from converting this &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.">轉換這個 <see cref="T:System.Windows.Rect" /> 時建立的物件。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;value&quot; /&gt; is not a &lt;see cref=&quot;T:System.Windows.Rect&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; The &lt;paramref name=&quot;destinationType&quot; /&gt; is not one of the valid types for conversion.">
        <paramref name="value" /> 為 <see langword="null" />。  
-或- 
 <paramref name="value" /> 不是 <see cref="T:System.Windows.Rect" />。  
-或- 
<paramref name="destinationType" /> 不是其中一個有效的轉換型別。</exception>
    </member>
    <member name="T:System.Windows.Size">
      <summary vsli:raw="Implements a structure that is used to describe the &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; of an object.">實作用來描述 <see cref="T:System.Windows.Size" /> 物件的結構。</summary>
    </member>
    <member name="M:System.Windows.Size.#ctor(System.Double,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; structure and assigns it an initial &lt;paramref name=&quot;width&quot; /&gt; and &lt;paramref name=&quot;height&quot; /&gt;.">初始化 <see cref="T:System.Windows.Size" /> 結構的新執行個體，並對其指派初始 <paramref name="width" /> 及 <paramref name="height" />。</summary>
      <param name="width" vsli:raw="The initial width of the instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">
        <see cref="T:System.Windows.Size" /> 之執行個體的初始寬度。</param>
      <param name="height" vsli:raw="The initial height of the instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">
        <see cref="T:System.Windows.Size" /> 之執行個體的初始高度。</param>
    </member>
    <member name="P:System.Windows.Size.Empty">
      <summary vsli:raw="Gets a value that represents a static empty &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">取得值，表示靜態的空 <see cref="T:System.Windows.Size" />。</summary>
      <returns vsli:raw="An empty instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">
        <see cref="T:System.Windows.Size" /> 的空執行個體。</returns>
    </member>
    <member name="M:System.Windows.Size.Equals(System.Object)">
      <summary vsli:raw="Compares an object to an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; for equality.">比較物件與 <see cref="T:System.Windows.Size" /> 執行個體是否相等。</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare.">要比較的 <see cref="T:System.Object" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the sizes are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果大小相等則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Size.Equals(System.Windows.Size)">
      <summary vsli:raw="Compares a value to an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; for equality.">比較值與 <see cref="T:System.Windows.Size" /> 執行個體是否相等。</summary>
      <param name="value" vsli:raw="The size to compare to this current instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">要與 <see cref="T:System.Windows.Size" /> 目前這個執行個體相比較的大小。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Windows.Size" /> 的執行個體相等，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Size.Equals(System.Windows.Size,System.Windows.Size)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; for equality.">比較 <see cref="T:System.Windows.Size" /> 的兩個執行個體是否相等。</summary>
      <param name="size1" vsli:raw="The first instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to compare.">所要比較的第一個 <see cref="T:System.Windows.Size" /> 執行個體。</param>
      <param name="size2" vsli:raw="The second instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to compare.">要比較的第二個 <see cref="T:System.Windows.Size" /> 執行個體。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Windows.Size" /> 的執行個體相等，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Size.GetHashCode">
      <summary vsli:raw="Gets the hash code for this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">取得 <see cref="T:System.Windows.Size" /> 之這個執行個體的雜湊程式碼。</summary>
      <returns vsli:raw="The hash code for this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">這個 <see cref="T:System.Windows.Size" /> 執行個體的雜湊程式碼。</returns>
    </member>
    <member name="P:System.Windows.Size.Height">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; of this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">取得或設定這個 <see cref="P:System.Windows.Size.Height" /> 執行個體的 <see cref="T:System.Windows.Size" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; of this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;. The default is 0. The value cannot be negative.">這個 <see cref="P:System.Windows.Size.Height" /> 執行個體的 <see cref="T:System.Windows.Size" />。 預設值為 0。 值不能為負。</returns>
    </member>
    <member name="P:System.Windows.Size.IsEmpty">
      <summary vsli:raw="Gets a value that indicates whether this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; is &lt;see cref=&quot;P:System.Windows.Size.Empty&quot; /&gt;.">取得值，表示 <see cref="T:System.Windows.Size" /> 的這個執行個體是否為 <see cref="P:System.Windows.Size.Empty" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this instance of size is &lt;see cref=&quot;P:System.Windows.Size.Empty&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果 size 的這個執行個體為 <see cref="P:System.Windows.Size.Empty" /> 則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Size.op_Equality(System.Windows.Size,System.Windows.Size)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; for equality.">比較 <see cref="T:System.Windows.Size" /> 的兩個執行個體是否相等。</summary>
      <param name="size1" vsli:raw="The first instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to compare.">所要比較的第一個 <see cref="T:System.Windows.Size" /> 執行個體。</param>
      <param name="size2" vsli:raw="The second instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to compare.">要比較的第二個 <see cref="T:System.Windows.Size" /> 執行個體。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; are equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Windows.Size" /> 類別的兩個執行個體相等，則為 true，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Size.op_Explicit(System.Windows.Size)~System.Windows.Point">
      <summary vsli:raw="Explicitly converts an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to an instance of &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt;.">將 <see cref="T:System.Windows.Size" /> 的執行個體明確轉換成 <see cref="T:System.Windows.Point" /> 的執行個體。</summary>
      <param name="size" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; value to be converted.">要被轉換的 <see cref="T:System.Windows.Size" /> 值。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; equal in value to this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">
        <see cref="T:System.Windows.Point" /> 的值與 <see cref="T:System.Windows.Size" /> 的這個執行個體相等。</returns>
    </member>
    <member name="M:System.Windows.Size.op_Explicit(System.Windows.Size)~System.Windows.Vector">
      <summary vsli:raw="Explicitly converts an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to an instance of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">將 <see cref="T:System.Windows.Size" /> 的執行個體明確轉換成 <see cref="T:System.Windows.Vector" /> 的執行個體。</summary>
      <param name="size" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; value to be converted.">要被轉換的 <see cref="T:System.Windows.Size" /> 值。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; equal in value to this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">
        <see cref="T:System.Windows.Vector" /> 的值與 <see cref="T:System.Windows.Size" /> 的這個執行個體相等。</returns>
    </member>
    <member name="M:System.Windows.Size.op_Inequality(System.Windows.Size,System.Windows.Size)">
      <summary vsli:raw="Compares two instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; for inequality.">比較 <see cref="T:System.Windows.Size" /> 的兩個執行個體是否不相等。</summary>
      <param name="size1" vsli:raw="The first instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to compare.">所要比較的第一個 <see cref="T:System.Windows.Size" /> 執行個體。</param>
      <param name="size2" vsli:raw="The second instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to compare.">所要比較的第二個 <see cref="T:System.Windows.Size" /> 執行個體。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instances of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; are not equal; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Windows.Size" /> 的執行個體不相等則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Size.Parse(System.String)">
      <summary vsli:raw="Returns an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; from a converted &lt;see cref=&quot;T:System.String&quot; /&gt;.">從轉換的  <see cref="T:System.Windows.Size" /> 傳回 <see cref="T:System.String" /> 的執行個體。</summary>
      <param name="source" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; value to parse to a &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; value.">要剖析為 <see cref="T:System.String" /> 值的 <see cref="T:System.Windows.Size" /> 值。</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">
        <see cref="T:System.Windows.Size" /> 的執行個體。</returns>
    </member>
    <member name="M:System.Windows.Size.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.">這個類型或成員支援 Windows Presentation Foundation (WPF) 基礎結構，而且不能從程式碼直接使用。</summary>
      <param name="format" vsli:raw="The format to use.">要使用的格式。</param>
      <param name="provider" vsli:raw="The provider to use to format the value.">要用來格式化值的提供者。</param>
      <returns vsli:raw="The value of the current instance in the specified format.">目前執行個體的值，使用指定的格式。</returns>
    </member>
    <member name="M:System.Windows.Size.ToString">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.String&quot; /&gt; that represents this &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; object.">傳回 <see cref="T:System.String" />，表示這個 <see cref="T:System.Windows.Size" /> 物件。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that specifies the width followed by the height.">
        <see cref="T:System.String" />，這會指定寬度，後面再接著高度。</returns>
    </member>
    <member name="M:System.Windows.Size.ToString(System.IFormatProvider)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.String&quot; /&gt; that represents this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">傳回 <see cref="T:System.String" />，表示 <see cref="T:System.Windows.Size" /> 的這個執行個體。</summary>
      <param name="provider" vsli:raw="An object that provides a way to control formatting.">可提供控制格式之方法的物件。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that represents this &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; object.">
        <see cref="T:System.String" />，表示這個 <see cref="T:System.Windows.Size" /> 物件。</returns>
    </member>
    <member name="P:System.Windows.Size.Width">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; of this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">取得或設定這個 <see cref="P:System.Windows.Size.Width" /> 執行個體的 <see cref="T:System.Windows.Size" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; of this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;. The default value is &lt;c&gt;0&lt;/c&gt;. The value cannot be negative.">這個 <see cref="P:System.Windows.Size.Width" /> 執行個體的 <see cref="T:System.Windows.Size" />。 預設值為<c>0</c>。 值不能為負。</returns>
    </member>
    <member name="T:System.Windows.SizeConverter">
      <summary vsli:raw="Converts instances of other types to and from instances of the &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; class.">將其他型別的執行個體來回轉換成 <see cref="T:System.Windows.Size" /> 類別的執行個體。</summary>
    </member>
    <member name="M:System.Windows.SizeConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.SizeConverter&quot; /&gt; class.">初始化 <see cref="T:System.Windows.SizeConverter" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Windows.SizeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether a class can be converted from a given type to an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">判斷類別是否可以從指定的型別轉換為 <see cref="T:System.Windows.Size" /> 的執行個體。</summary>
      <param name="context" vsli:raw="Provides contextual information about a component.">提供有關元件的內容資訊。</param>
      <param name="sourceType" vsli:raw="Identifies the data type to evaluate for conversion.">識別資料型別，以評估轉換。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;sourceType&quot; /&gt; can be converted to an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="sourceType" /> 可以轉換為 <see cref="T:System.Windows.Size" /> 的執行個體 (Instance) 則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.SizeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; can be converted to a different type.">判斷 <see cref="T:System.Windows.Size" /> 的執行個體是否可轉換成不同型別。</summary>
      <param name="context" vsli:raw="Provides contextual information about a component.">提供有關元件的內容資訊。</param>
      <param name="destinationType" vsli:raw="Identifies the data type to evaluate for conversion.">識別資料型別，以評估轉換。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; can be converted to the &lt;paramref name=&quot;destinationType&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果這個 <see cref="T:System.Windows.Size" /> 執行個體可以轉換為 <paramref name="destinationType" /> 則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.SizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert a specified object to an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">嘗試將指定的物件轉換為 <see cref="T:System.Windows.Size" /> 的執行個體。</summary>
      <param name="context" vsli:raw="Provides contextual information about a component.">提供有關元件的內容資訊。</param>
      <param name="culture" vsli:raw="Culture-specific information that should be respected during conversion.">轉換期間應該遵守的特定文性特性 (Culture) 資訊。</param>
      <param name="value" vsli:raw="The source object that is being converted.">正要轉換的來源物件。</param>
      <returns vsli:raw="The instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; that is created from the converted &lt;paramref name=&quot;source&quot; /&gt;.">
        <see cref="T:System.Windows.Size" /> 的執行個體，從轉換後的 <paramref name="source" /> 所建立。</returns>
    </member>
    <member name="M:System.Windows.SizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to a specified type.">嘗試將 <see cref="T:System.Windows.Size" /> 的執行個體轉換為指定的型別。</summary>
      <param name="context" vsli:raw="Provides contextual information about a component.">提供有關元件的內容資訊。</param>
      <param name="culture" vsli:raw="Culture-specific information that should be respected during conversion.">轉換期間應該遵守的特定文性特性 (Culture) 資訊。</param>
      <param name="value" vsli:raw="The instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; to convert.">要轉換的 <see cref="T:System.Windows.Size" /> 執行個體。</param>
      <param name="destinationType" vsli:raw="The type that this instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; is converted to.">這個 <see cref="T:System.Windows.Size" /> 執行個體轉換成的型別。</param>
      <returns vsli:raw="The object that is created from the converted instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;.">從已轉換的 <see cref="T:System.Windows.Size" /> 執行個體建立的物件。</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or is not an instance of &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt;, or if the &lt;paramref name=&quot;destinationType&quot; /&gt; is not one of the valid destination types.">
        <paramref name="value" /> 是 <see langword="null" /> 或不是 <see cref="T:System.Windows.Size" /> 的執行個體，或者 <paramref name="destinationType" /> 不是其中一個有效的目的型別。</exception>
    </member>
    <member name="T:System.Windows.SplashScreen">
      <summary vsli:raw="Provides a startup screen for a Windows Presentation Foundation (WPF) application.">提供 Windows Presentation Foundation (WPF) 應用程式的啟動畫面。</summary>
    </member>
    <member name="M:System.Windows.SplashScreen.#ctor(System.Reflection.Assembly,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.SplashScreen&quot; /&gt; class with the specified resource assembly.">使用指定的資源組件，初始化 <see cref="T:System.Windows.SplashScreen" /> 類別的新執行個體。</summary>
      <param name="resourceAssembly" vsli:raw="The assembly that contains the embedded resource.">包含內嵌資源的組件。</param>
      <param name="resourceName" vsli:raw="The name of the embedded resource.">內嵌資源的名稱。</param>
    </member>
    <member name="M:System.Windows.SplashScreen.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.SplashScreen&quot; /&gt; class with the specified resource.">利用指定的資源檔，初始化 <see cref="T:System.Windows.SplashScreen" /> 類別的新執行個體。</summary>
      <param name="resourceName" vsli:raw="The name of the embedded resource.">內嵌資源的名稱。</param>
    </member>
    <member name="M:System.Windows.SplashScreen.Close(System.TimeSpan)">
      <summary vsli:raw="Closes the splash screen.">會關閉啟動顯示畫面。</summary>
      <param name="fadeoutDuration" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; that specifies how long it will take for the splash screen to fade after the close operation has been initiated.">指定關閉作業啟始後，啟動顯示畫面要用多少時間淡出的 <see cref="T:System.TimeSpan" />。</param>
    </member>
    <member name="M:System.Windows.SplashScreen.Show(System.Boolean)">
      <summary vsli:raw="Displays the splash screen.">會顯示啟動顯示畫面。</summary>
      <param name="autoClose" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to automatically close the splash screen; &lt;see langword=&quot;false&quot; /&gt; to close the splash screen manually.">
        <see langword="true" /> 表示要自動關閉啟動顯示畫面，<see langword="false" /> 則表示要手動關閉啟動顯示畫面。</param>
      <exception cref="T:System.IO.IOException" vsli:raw="The resource specified in the constructor could not be found.">找不到建構函式中指定的資源。</exception>
    </member>
    <member name="M:System.Windows.SplashScreen.Show(System.Boolean,System.Boolean)">
      <summary vsli:raw="Displays the splash screen.">會顯示啟動顯示畫面。</summary>
      <param name="autoClose" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to automatically close the splash screen; &lt;see langword=&quot;false&quot; /&gt; to close the splash screen manually.">
        <see langword="true" /> 表示要自動關閉啟動顯示畫面，<see langword="false" /> 則表示要手動關閉啟動顯示畫面。</param>
      <param name="topMost" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the splash screen window should use the WS_EX_TOPMOST style; otherwise &lt;see langword=&quot;false&quot; /&gt;.">如果啟動顯示畫面視窗應該使用 WS_EX_TOPMOST 樣式，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
    </member>
    <member name="T:System.Windows.Threading.Dispatcher">
      <summary vsli:raw="Provides services for managing the queue of work items for a thread.">提供管理執行緒之工作項目佇列的服務。</summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Object[])">
      <summary vsli:raw="Executes the specified delegate asynchronously with the specified arguments on the thread that the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; was created on.">在其中有建立 <see cref="T:System.Windows.Threading.Dispatcher" /> 的執行緒上，使用指定的引數非同步地執行指定的委派。</summary>
      <param name="method" vsli:raw="The delegate to a method that takes parameters specified in &lt;paramref name=&quot;args&quot; /&gt;, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">接受 <paramref name="args" /> 中指定之參數之方法的委派，它會被推入至 <see cref="T:System.Windows.Threading.Dispatcher" /> 事件佇列。</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method. Can be &lt;see langword=&quot;null&quot; /&gt;.">做為引數傳遞至指定方法的物件陣列。 可以是 <see langword="null" />。</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">物件，此物件是在呼叫 <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> 之後立即傳回的，可用來與在事件佇列中暫止執行的委派進行互動。</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Windows.Threading.DispatcherPriority,System.Object[])">
      <summary vsli:raw="Executes the specified delegate asynchronously with the specified arguments, at the specified priority, on the thread that the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; was created on.">在其中有建立 <see cref="T:System.Windows.Threading.Dispatcher" /> 的執行緒上，依據指定的優先順序，使用指定的引數非同步地執行指定的委派。</summary>
      <param name="method" vsli:raw="The delegate to a method that takes parameters specified in &lt;paramref name=&quot;args&quot; /&gt;, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">接受 <paramref name="args" /> 中指定之參數之方法的委派，它會被推入至 <see cref="T:System.Windows.Threading.Dispatcher" /> 事件佇列。</param>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">相對於 <see cref="T:System.Windows.Threading.Dispatcher" /> 事件佇列中其他暫止的作業，會先叫用指定的方法。</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method. Can be &lt;see langword=&quot;null&quot; /&gt;.">做為引數傳遞至指定方法的物件陣列。 可以是 <see langword="null" />。</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">物件，此物件是在呼叫 <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> 之後立即傳回的，可用來與在事件佇列中暫止執行的委派進行互動。</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate)">
      <summary vsli:raw="Executes the specified delegate asynchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">在 <see cref="T:System.Windows.Threading.Dispatcher" /> 關聯的執行緒上使用指定優先權以非同步方式執行指定的委派。</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">相對於 <see cref="T:System.Windows.Threading.Dispatcher" /> 事件佇列中其他暫止的作業，會先叫用指定的方法。</param>
      <param name="method" vsli:raw="The delegate to a method that takes no arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">未採用任何引數的方法委派，此委派會推入至 <see cref="T:System.Windows.Threading.Dispatcher" /> 事件佇列。</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">物件，此物件是在呼叫 <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> 之後立即傳回的，可用來與在事件佇列中暫止執行的委派進行互動。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriority&quot; /&gt;.">
        <paramref name="priority" /> 不是有效的 <see cref="T:System.Windows.Threading.DispatcherPriority" />。</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object)">
      <summary vsli:raw="Executes the specified delegate asynchronously at the specified priority and with the specified argument on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">在 <see cref="T:System.Windows.Threading.Dispatcher" /> 關聯的執行緒上使用指定優先權和指定引數以非同步方式執行指定的委派。</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">相對於 <see cref="T:System.Windows.Threading.Dispatcher" /> 事件佇列中其他暫止的作業，會先叫用指定的方法。</param>
      <param name="method" vsli:raw="A delegate to a method that takes one argument, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">採用一個引數的方法委派，此委派會推入至 <see cref="T:System.Windows.Threading.Dispatcher" /> 事件佇列。</param>
      <param name="arg" vsli:raw="The object to pass as an argument to the specified method.">做為引數傳遞至指定方法的物件。</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">物件，此物件是在呼叫 <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> 之後立即傳回的，可用來與在事件佇列中暫止執行的委派進行互動。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriority&quot; /&gt;.">
        <paramref name="priority" /> 不是有效的 <see cref="T:System.Windows.Threading.DispatcherPriority" />。</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object,System.Object[])">
      <summary vsli:raw="Executes the specified delegate asynchronously at the specified priority and with the specified array of arguments on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">在 <see cref="T:System.Windows.Threading.Dispatcher" /> 關聯的執行緒上使用指定優先權和指定引數陣列以非同步方式執行指定的委派。</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">相對於 <see cref="T:System.Windows.Threading.Dispatcher" /> 事件佇列中其他暫止的作業，會先叫用指定的方法。</param>
      <param name="method" vsli:raw="A delegate to a method that takes multiple arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">採用多個引數的方法委派，此委派會推入至 <see cref="T:System.Windows.Threading.Dispatcher" /> 事件佇列。</param>
      <param name="arg" vsli:raw="The object to pass as an argument to the specified method.">做為引數傳遞至指定方法的物件。</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the specified method.">做為引數傳遞至指定方法的物件陣列。</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue.">物件，此物件是在呼叫 <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> 之後立即傳回的，可用來與在 <see cref="T:System.Windows.Threading.Dispatcher" /> 佇列中暫止執行的委派進行互動。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriority&quot; /&gt; is not a valid priority.">
        <see cref="T:System.Windows.Threading.DispatcherPriority" /> 不是有效的優先權。</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.BeginInvokeShutdown(System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Initiates shutdown of the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; asynchronously.">以非同步方式初始化 <see cref="T:System.Windows.Threading.Dispatcher" /> 的關閉程序。</summary>
      <param name="priority" vsli:raw="The priority at which to begin shutting down the dispatcher.">用來開始關閉發送器的優先權。</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.CheckAccess">
      <summary vsli:raw="Determines whether the calling thread is the thread associated with this &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">判斷呼叫的執行緒是否為與這個 <see cref="T:System.Windows.Threading.Dispatcher" /> 關聯的執行緒。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the calling thread is the thread associated with this &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果呼叫的執行緒為與這個 <see cref="T:System.Windows.Threading.Dispatcher" /> 關聯的執行緒則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.CurrentDispatcher">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; for the thread currently executing and creates a new &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; if one is not already associated with the thread.">取得目前執行之執行緒的 <see cref="T:System.Windows.Threading.Dispatcher" /> 並建立新的 <see cref="T:System.Windows.Threading.Dispatcher" /> (如果尚未與執行緒產生關聯)。</summary>
      <returns vsli:raw="The dispatcher associated with the current thread.">與目前執行緒關聯的發送器。</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.DisableProcessing">
      <summary vsli:raw="Disables processing of the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue.">停用 <see cref="T:System.Windows.Threading.Dispatcher" /> 佇列的處理。</summary>
      <returns vsli:raw="A structure used to re-enable dispatcher processing.">用來重新啟用發送器處理的結構。</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.ExitAllFrames">
      <summary vsli:raw="Requests that all frames exit, including nested frames.">會要求結束所有框架，包括巢狀框架。</summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.FromThread(System.Threading.Thread)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; for the specified thread.">取得指定執行緒的 <see cref="T:System.Windows.Threading.Dispatcher" />。</summary>
      <param name="thread" vsli:raw="The thread to obtain the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; from.">要從中取得 <see cref="T:System.Windows.Threading.Dispatcher" /> 的執行緒。</param>
      <returns vsli:raw="The dispatcher for &lt;paramref name=&quot;thread&quot; /&gt;.">
        <paramref name="thread" /> 的發送器。</returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.HasShutdownFinished">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; has finished shutting down.">判斷 <see cref="T:System.Windows.Threading.Dispatcher" /> 是否已完成關閉程序。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the dispatcher has finished shutting down; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果發送器已完成關閉程序則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.HasShutdownStarted">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is shutting down.">判斷 <see cref="T:System.Windows.Threading.Dispatcher" /> 是否已關閉。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; has started shutting down; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Windows.Threading.Dispatcher" /> 已開始關閉程序則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.Hooks">
      <summary vsli:raw="Gets the collection of hooks that provide additional event information about the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">取得提供 <see cref="T:System.Windows.Threading.Dispatcher" /> 額外事件資訊的攔截集合。</summary>
      <returns vsli:raw="The hooks associated with this &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">與這個 <see cref="T:System.Windows.Threading.Dispatcher" /> 關聯的攔截。</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Action)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">在與 <see cref="T:System.Action" /> 相關聯的執行緒上，同步執行指定的 <see cref="T:System.Windows.Threading.Dispatcher" />。</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">要透過發送器叫用的委派。</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; synchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">在與 <see cref="T:System.Action" /> 相關聯的執行緒上使用指定優先權同步執行指定的 <see cref="T:System.Windows.Threading.Dispatcher" />。</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">要透過發送器叫用的委派。</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">優先權，會決定以何種順序叫用指定的回呼，相對於 <see cref="T:System.Windows.Threading.Dispatcher" /> 中其他擱置中的作業。</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; synchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">在與 <see cref="T:System.Action" /> 相關聯的執行緒上使用指定優先權同步執行指定的 <see cref="T:System.Windows.Threading.Dispatcher" />。</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">要透過發送器叫用的委派。</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">優先權，會決定以何種順序叫用指定的回呼，相對於 <see cref="T:System.Windows.Threading.Dispatcher" /> 中其他擱置中的作業。</param>
      <param name="cancellationToken" vsli:raw="An object that indicates whether to cancel the action.">表示是否要取消動作的物件。</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken,System.TimeSpan)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; synchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">在與 <see cref="T:System.Action" /> 相關聯的執行緒上使用指定優先權同步執行指定的 <see cref="T:System.Windows.Threading.Dispatcher" />。</summary>
      <param name="callback" vsli:raw="An Action delegate to invoke through the dispatcher.">要透過發送器叫用的委派。</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">優先權，會決定以何種順序叫用指定的回呼，相對於 <see cref="T:System.Windows.Threading.Dispatcher" /> 中其他擱置中的作業。</param>
      <param name="cancellationToken" vsli:raw="An object that indicates whether to cancel the action.">表示是否要取消動作的物件。</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. Once the operation has started, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">等待作業開始的最短時間。</param>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.Object[])">
      <summary vsli:raw="Executes the specified delegate with the specified arguments synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">在與 <see cref="T:System.Windows.Threading.Dispatcher" /> 相關聯的執行緒上，使用指定的引數同步地執行指定的委派。</summary>
      <param name="method" vsli:raw="A delegate to a method that takes parameters specified in &lt;paramref name=&quot;args&quot; /&gt;, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">接受 <paramref name="args" /> 中指定之參數之方法的委派，它會被推入至 <see cref="T:System.Windows.Threading.Dispatcher" /> 事件佇列。</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method. Can be &lt;see langword=&quot;null&quot; /&gt;.">做為引數傳遞至指定方法的物件陣列。 可以是 <see langword="null" />。</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">來自所叫用的委派的傳回值，或者如果委派沒有任何傳回值，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.TimeSpan,System.Object[])">
      <summary vsli:raw="Executes the specified delegate within the designated time span at the specified priority with the specified arguments synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">在與 <see cref="T:System.Windows.Threading.Dispatcher" /> 有關聯的執行緒上，在指定的時間範圍內依據指定優先順序，使用指定之引數同步地執行指定的委派。</summary>
      <param name="method" vsli:raw="A delegate to a method that takes parameters specified in &lt;paramref name=&quot;args&quot; /&gt;, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">接受 <paramref name="args" /> 中指定之參數之方法的委派，它會被推入至 <see cref="T:System.Windows.Threading.Dispatcher" /> 事件佇列。</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. However, once the operation starts, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">等待作業完成的最長時間。</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method. Can be &lt;see langword=&quot;null&quot; /&gt; if no arguments are needed.">做為引數傳遞至指定方法的物件陣列。 可以是 <see langword="null" />。</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">來自所叫用的委派的傳回值，或者如果委派沒有任何傳回值，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.Object[])">
      <summary vsli:raw="Executes the specified delegate within the designated time span at the specified priority with the specified arguments synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">在與 <see cref="T:System.Windows.Threading.Dispatcher" /> 有關聯的執行緒上，在指定的時間範圍內依據指定優先順序，使用指定之引數同步地執行指定的委派。</summary>
      <param name="method" vsli:raw="A delegate to a method that takes parameters specified in &lt;paramref name=&quot;args&quot; /&gt;, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">接受 <paramref name="args" /> 中指定之參數之方法的委派，它會被推入至 <see cref="T:System.Windows.Threading.Dispatcher" /> 事件佇列。</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. Once the operation has started, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">等待作業完成的最長時間。</param>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">相對於 <see cref="T:System.Windows.Threading.Dispatcher" /> 事件佇列中其他暫止的作業，會先叫用指定的方法。</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method. Can be &lt;see langword=&quot;null&quot; /&gt;.">做為引數傳遞至指定方法的物件陣列。 可以是 <see langword="null" />。</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">來自所叫用的委派的傳回值，或者如果委派沒有任何傳回值，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.Windows.Threading.DispatcherPriority,System.Object[])">
      <summary vsli:raw="Executes the specified delegate at the specified priority with the specified arguments synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">在 <see cref="T:System.Windows.Threading.Dispatcher" /> 關聯的執行緒上使用指定優先權和指定引數以同步方式執行指定的委派。</summary>
      <param name="method" vsli:raw="A delegate to a method that takes parameters specified in &lt;paramref name=&quot;args&quot; /&gt;, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">接受 <paramref name="args" /> 中指定之參數之方法的委派，它會被推入至 <see cref="T:System.Windows.Threading.Dispatcher" /> 事件佇列。</param>
      <param name="priority" vsli:raw="The priority with which the specified method is invoked, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">相對於 <see cref="T:System.Windows.Threading.Dispatcher" /> 事件佇列中其他暫止的作業，會先叫用指定的方法。</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method. Can be &lt;see langword=&quot;null&quot; /&gt;.">做為引數傳遞至指定方法的物件陣列。 可以是 <see langword="null" />。</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">來自所叫用的委派的傳回值，或者如果委派沒有任何傳回值，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate)">
      <summary vsli:raw="Executes the specified delegate synchronously at the specified priority on the thread that the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">在 <see cref="T:System.Windows.Threading.Dispatcher" /> 關聯的執行緒上使用指定優先權以同步方式執行指定的委派。</summary>
      <param name="priority" vsli:raw="The priority with which the specified method is invoked, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">相對於 <see cref="T:System.Windows.Threading.Dispatcher" /> 事件佇列中其他暫止的作業，會先叫用指定的方法。</param>
      <param name="method" vsli:raw="A delegate to a method that takes no arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">未採用任何引數的方法委派，此委派會推入至 <see cref="T:System.Windows.Threading.Dispatcher" /> 事件佇列。</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">來自所叫用的委派的傳回值，或者如果委派沒有任何傳回值，則為 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherPriority.Inactive&quot; /&gt;.">
        <paramref name="priority" /> 等於 <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid priority.">
        <paramref name="priority" /> 不是有效的優先權。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object)">
      <summary vsli:raw="Executes the specified delegate at the specified priority with the specified argument synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">在 <see cref="T:System.Windows.Threading.Dispatcher" /> 關聯的執行緒上使用指定優先權和指定引數以同步方式執行指定的委派。</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">相對於 <see cref="T:System.Windows.Threading.Dispatcher" /> 事件佇列中其他暫止的作業，會先叫用指定的方法。</param>
      <param name="method" vsli:raw="A delegate to a method that takes one argument, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">採用一個引數的方法委派，此委派會推入至 <see cref="T:System.Windows.Threading.Dispatcher" /> 事件佇列。</param>
      <param name="arg" vsli:raw="An object to pass as an argument to the given method.">做為引數傳遞至指定方法的物件。</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">來自所叫用的委派的傳回值，或者如果委派沒有任何傳回值，則為 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherPriority.Inactive&quot; /&gt;.">
        <paramref name="priority" /> 等於 <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid priority.">
        <paramref name="priority" /> 不是有效的優先權。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object,System.Object[])">
      <summary vsli:raw="Executes the specified delegate at the specified priority with the specified arguments synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">在 <see cref="T:System.Windows.Threading.Dispatcher" /> 關聯的執行緒上使用指定優先權和指定引數以同步方式執行指定的委派。</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">相對於 <see cref="T:System.Windows.Threading.Dispatcher" /> 事件佇列中其他暫止的作業，會先叫用指定的方法。</param>
      <param name="method" vsli:raw="A delegate to a method that takes multiple arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">採用多個引數的方法委派，此委派會推入至 <see cref="T:System.Windows.Threading.Dispatcher" /> 事件佇列。</param>
      <param name="arg" vsli:raw="An object to pass as an argument to the given method.">做為引數傳遞至指定方法的物件。</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the given method.">做為引數傳遞至指定方法的物件陣列。</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">來自所叫用的委派的傳回值，或者如果委派沒有任何傳回值，則為 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherPriority.Inactive&quot; /&gt;.">
        <paramref name="priority" /> 等於 <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid priority.">
        <paramref name="priority" /> 不是有效的優先權。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate)">
      <summary vsli:raw="Executes the specified delegate synchronously at the specified priority and with the specified time-out value on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; was created.">在建立 <see cref="T:System.Windows.Threading.Dispatcher" /> 的執行緒上使用指定優先權和指定逾時值以同步方式執行指定的委派。</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">相對於 <see cref="T:System.Windows.Threading.Dispatcher" /> 事件佇列中其他暫止的作業，會先叫用指定的方法。</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. Once the operation has started, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">等待直到作業完成的最長時間。</param>
      <param name="method" vsli:raw="The delegate to a method that takes no arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">未採用任何引數的方法委派，此委派會推入至 <see cref="T:System.Windows.Threading.Dispatcher" /> 事件佇列。</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">來自所叫用的委派的傳回值，或者如果委派沒有任何傳回值，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate,System.Object)">
      <summary vsli:raw="Executes the specified delegate at the specified priority with the specified argument synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">在 <see cref="T:System.Windows.Threading.Dispatcher" /> 關聯的執行緒上使用指定優先權和指定引數以同步方式執行指定的委派。</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">相對於 <see cref="T:System.Windows.Threading.Dispatcher" /> 事件佇列中其他暫止的作業，會先叫用指定的方法。</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. Once the operation has started, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">等待直到作業完成的最長時間。</param>
      <param name="method" vsli:raw="A delegate to a method that takes multiple arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">採用多個引數的方法委派，此委派會推入至 <see cref="T:System.Windows.Threading.Dispatcher" /> 事件佇列。</param>
      <param name="arg" vsli:raw="An object to pass as an argument to the given method. This can be &lt;see langword=&quot;null&quot; /&gt; if no arguments are needed.">做為引數傳遞至指定方法的物件。 如果不需要引數，則這個可為 <see langword="null" />。</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">來自所叫用的委派的傳回值，或者如果委派沒有任何傳回值，則為 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherPriority.Inactive&quot; /&gt;.">
        <paramref name="priority" /> 等於 <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid priority.">
        <paramref name="priority" /> 不是有效的優先權。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate,System.Object,System.Object[])">
      <summary vsli:raw="Executes the specified delegate at the specified priority with the specified arguments synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">在 <see cref="T:System.Windows.Threading.Dispatcher" /> 關聯的執行緒上使用指定優先權和指定引數以同步方式執行指定的委派。</summary>
      <param name="priority" vsli:raw="The priority, relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue, with which the specified method is invoked.">相對於 <see cref="T:System.Windows.Threading.Dispatcher" /> 事件佇列中其他暫止的作業，會先叫用指定的方法。</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. Once the operation has started, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">等待直到作業完成的最長時間。</param>
      <param name="method" vsli:raw="A delegate to a method that takes multiple arguments, which is pushed onto the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; event queue.">採用多個引數的方法委派，此委派會推入至 <see cref="T:System.Windows.Threading.Dispatcher" /> 事件佇列。</param>
      <param name="arg" vsli:raw="An object to pass as an argument to the specified method.">做為引數傳遞至指定方法的物件。</param>
      <param name="args" vsli:raw="An array of objects to pass as arguments to the specified method.">做為引數傳遞至指定方法的物件陣列。</param>
      <returns vsli:raw="The return value from the delegate being invoked or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">來自所叫用的委派的傳回值，或者如果委派沒有任何傳回值，則為 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherPriority.Inactive&quot; /&gt;.">
        <paramref name="priority" /> 等於 <see cref="F:System.Windows.Threading.DispatcherPriority.Inactive" />。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriority&quot; /&gt;.">
        <paramref name="priority" /> 不是有效的 <see cref="T:System.Windows.Threading.DispatcherPriority" />。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0})">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; synchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">在與 <see cref="T:System.Func`1" /> 相關聯的執行緒上，同步執行指定的 <see cref="T:System.Windows.Threading.Dispatcher" />。</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">要透過發送器叫用的委派。</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">指定的委派的傳回值型別。</typeparam>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; synchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">在與 <see cref="T:System.Func`1" /> 相關聯的執行緒上使用指定優先權同步執行指定的 <see cref="T:System.Windows.Threading.Dispatcher" />。</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">要透過發送器叫用的委派。</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">優先權，會決定以何種順序叫用指定的回呼，相對於 <see cref="T:System.Windows.Threading.Dispatcher" /> 中其他擱置中的作業。</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">指定的委派的傳回值型別。</typeparam>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; synchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">在與 <see cref="T:System.Func`1" /> 相關聯的執行緒上使用指定優先權同步執行指定的 <see cref="T:System.Windows.Threading.Dispatcher" />。</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">要透過發送器叫用的委派。</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">優先權，會決定以何種順序叫用指定的回呼，相對於 <see cref="T:System.Windows.Threading.Dispatcher" /> 中其他擱置中的作業。</param>
      <param name="cancellationToken" vsli:raw="An object that indicates whether to cancel the operation.">表示是否要取消作業的物件。</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">指定的委派的傳回值型別。</typeparam>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Invoke``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken,System.TimeSpan)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; synchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">在與 <see cref="T:System.Func`1" /> 相關聯的執行緒上使用指定優先權同步執行指定的 <see cref="T:System.Windows.Threading.Dispatcher" />。</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">要透過發送器叫用的委派。</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">優先權，會決定以何種順序叫用指定的回呼，相對於 <see cref="T:System.Windows.Threading.Dispatcher" /> 中其他擱置中的作業。</param>
      <param name="cancellationToken" vsli:raw="An object that indicates whether to cancel the operation.">表示是否要取消作業的物件。</param>
      <param name="timeout" vsli:raw="The maximum amount of time to wait for the operation to start. Once the operation has started, it will complete before this method returns. To specify an infinite wait, use a value of -1. In a same-thread call, any other negative value is converted to -1, resulting in an infinite wait. In a cross-thread call, any other negative value throws an &lt;see cref=&quot;T:System.ArgumentOutOfRangeException&quot; /&gt;.">等待作業開始的最短時間。</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">指定的委派的傳回值型別。</typeparam>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; asynchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">在與 <see cref="T:System.Action" /> 相關聯的執行緒上，以非同步方式執行指定的 <see cref="T:System.Windows.Threading.Dispatcher" />。</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">要透過發送器叫用的委派。</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">物件，此物件是在呼叫 <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action)" /> 之後立即傳回的，可用來與在事件佇列中暫止執行的委派進行互動。</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; asynchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">在與 <see cref="T:System.Action" /> 相關聯的執行緒上使用指定優先權以非同步方式執行指定的 <see cref="T:System.Windows.Threading.Dispatcher" />。</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">要透過發送器叫用的委派。</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">優先權，會決定以何種順序叫用指定的回呼，相對於 <see cref="T:System.Windows.Threading.Dispatcher" /> 中其他擱置中的作業。</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">物件，此物件是在呼叫 <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority)" /> 之後立即傳回的，可用來與在事件佇列中暫止執行的委派進行互動。</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Action&quot; /&gt; asynchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">在與 <see cref="T:System.Action" /> 相關聯的執行緒上使用指定優先權以非同步方式執行指定的 <see cref="T:System.Windows.Threading.Dispatcher" />。</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">要透過發送器叫用的委派。</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">優先權，會決定以何種順序叫用指定的回呼，相對於 <see cref="T:System.Windows.Threading.Dispatcher" /> 中其他擱置中的作業。</param>
      <param name="cancellationToken" vsli:raw="An object that indicates whether to cancel the action.">表示是否要取消動作的物件。</param>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">物件，此物件是在呼叫 <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync(System.Action,System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" /> 之後立即傳回的，可用來與在事件佇列中暫止執行的委派進行互動。</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; asynchronously on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">在與 <see cref="T:System.Func`1" /> 相關聯的執行緒上，以非同步方式執行指定的 <see cref="T:System.Windows.Threading.Dispatcher" />。</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">要透過發送器叫用的委派。</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">指定的委派的傳回值型別。</typeparam>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">物件，此物件是在呼叫 <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0})" /> 之後立即傳回的，可用來與在事件佇列中暫止執行的委派進行互動。</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; asynchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">在與 <see cref="T:System.Func`1" /> 相關聯的執行緒上使用指定優先權以非同步方式執行指定的 <see cref="T:System.Windows.Threading.Dispatcher" />。</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">要透過發送器叫用的委派。</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">優先權，會決定以何種順序叫用指定的回呼，相對於 <see cref="T:System.Windows.Threading.Dispatcher" /> 中其他擱置中的作業。</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">指定的委派的傳回值型別。</typeparam>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">物件，此物件是在呼叫 <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority)" /> 之後立即傳回的，可用來與在事件佇列中暫止執行的委派進行互動。</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)">
      <summary vsli:raw="Executes the specified &lt;see cref=&quot;T:System.Func`1&quot; /&gt; asynchronously at the specified priority on the thread the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">在與 <see cref="T:System.Func`1" /> 相關聯的執行緒上使用指定優先權以非同步方式執行指定的 <see cref="T:System.Windows.Threading.Dispatcher" />。</summary>
      <param name="callback" vsli:raw="A delegate to invoke through the dispatcher.">要透過發送器叫用的委派。</param>
      <param name="priority" vsli:raw="The priority that determines the order in which the specified callback is invoked relative to the other pending operations in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">優先權，會決定以何種順序叫用指定的回呼，相對於 <see cref="T:System.Windows.Threading.Dispatcher" /> 中其他擱置中的作業。</param>
      <param name="cancellationToken" vsli:raw="An object that indicates whether to cancel the operation.">表示是否要取消作業的物件。</param>
      <typeparam name="TResult" vsli:raw="The return value type of the specified delegate.">指定的委派的傳回值型別。</typeparam>
      <returns vsli:raw="An object, which is returned immediately after &lt;see cref=&quot;M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)&quot; /&gt; is called, that can be used to interact with the delegate as it is pending execution in the event queue.">物件，此物件是在呼叫 <see cref="M:System.Windows.Threading.Dispatcher.InvokeAsync``1(System.Func{``0},System.Windows.Threading.DispatcherPriority,System.Threading.CancellationToken)" /> 之後立即傳回的，可用來與在事件佇列中暫止執行的委派進行互動。</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.InvokeShutdown">
      <summary vsli:raw="Initiates the shutdown process of the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; synchronously.">以同步方式初始化 <see cref="T:System.Windows.Threading.Dispatcher" /> 的關閉程序。</summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.PushFrame(System.Windows.Threading.DispatcherFrame)">
      <summary vsli:raw="Enters an execute loop.">會進入執行迴圈。</summary>
      <param name="frame" vsli:raw="The frame for the dispatcher to process.">要處理的發送器框架。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;frame&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="frame" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Threading.Dispatcher.HasShutdownFinished&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;frame&quot; /&gt; is running on a different &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; Dispatcher processing has been disabled.">
        <see cref="P:System.Windows.Threading.Dispatcher.HasShutdownFinished" /> 是 <see langword="true" />  
-或- 
 <paramref name="frame" /> 是在不同的 <see cref="T:System.Windows.Threading.Dispatcher" /> 上執行。  
-或- 
已經停用發送器處理。</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Run">
      <summary vsli:raw="Pushes the main execution frame on the event queue of the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">推入 <see cref="T:System.Windows.Threading.Dispatcher" /> 事件佇列上的主執行框架。</summary>
    </member>
    <member name="E:System.Windows.Threading.Dispatcher.ShutdownFinished">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; finishes shutting down.">發生於 <see cref="T:System.Windows.Threading.Dispatcher" /> 完成關閉時。</summary>
    </member>
    <member name="E:System.Windows.Threading.Dispatcher.ShutdownStarted">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; begins to shut down.">發生於 <see cref="T:System.Windows.Threading.Dispatcher" /> 開始關閉時。</summary>
    </member>
    <member name="P:System.Windows.Threading.Dispatcher.Thread">
      <summary vsli:raw="Gets the thread this &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; is associated with.">取得與這個 <see cref="T:System.Windows.Threading.Dispatcher" /> 關聯的執行緒。</summary>
      <returns vsli:raw="The thread.">執行緒。</returns>
    </member>
    <member name="E:System.Windows.Threading.Dispatcher.UnhandledException">
      <summary vsli:raw="Occurs when a thread exception is thrown and uncaught during execution of a delegate by way of &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.Invoke&quot; /&gt; or &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt;.">發生於當擲回執行緒例外狀況且透過 <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> 或 <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> 執行委派期間無法攔截時。</summary>
    </member>
    <member name="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter">
      <summary vsli:raw="Occurs when a thread exception is thrown and uncaught during execution of a delegate by way of &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.Invoke&quot; /&gt; or &lt;see cref=&quot;Overload:System.Windows.Threading.Dispatcher.BeginInvoke&quot; /&gt; when in the filter stage.">發生於在篩選階段擲回執行緒例外狀況且透過 <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> 或 <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> 執行委派期間無法攔截時。</summary>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.ValidatePriority(System.Windows.Threading.DispatcherPriority,System.String)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriority&quot; /&gt; is a valid priority.">判斷指定的 <see cref="T:System.Windows.Threading.DispatcherPriority" /> 是否為有效的優先權。</summary>
      <param name="priority" vsli:raw="The priority to check.">要檢查的優先權。</param>
      <param name="parameterName" vsli:raw="A string that will be returned by the exception that occurs if the priority is invalid.">如果優先權無效，所發生之例外狀況將傳回的字串。</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="&lt;paramref name=&quot;priority&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriority&quot; /&gt;.">
        <paramref name="priority" /> 不是有效的 <see cref="T:System.Windows.Threading.DispatcherPriority" />。</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.VerifyAccess">
      <summary vsli:raw="Determines whether the calling thread has access to this &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">判斷呼叫的執行是否可以存取這個 <see cref="T:System.Windows.Threading.Dispatcher" />。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The calling thread does not have access to this &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">呼叫執行緒無法存取這個 <see cref="T:System.Windows.Threading.Dispatcher" />。</exception>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Yield">
      <summary vsli:raw="Creates an awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.">建立 awaitable 物件，這個物件會以非同步方式讓出控制權給目前的發送器，並提供機會給發送器以處理其他事件。</summary>
      <returns vsli:raw="An awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.">Awaitable 物件，會以非同步方式讓出控制權給目前的發送器，並提供機會給發送器以處理其他事件。</returns>
    </member>
    <member name="M:System.Windows.Threading.Dispatcher.Yield(System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Creates an awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.  The work that occurs when control returns to the code awaiting the result of this method is scheduled with the specified priority.">建立 awaitable 物件，這個物件會以非同步方式讓出控制權給目前的發送器，並提供機會給發送器以處理其他事件。  在控制權回到等候此方法之結果的程式碼時進行的工作會以指定的優先權來排定。</summary>
      <param name="priority" vsli:raw="The priority at which to schedule the continuation.">做為排程接續依據的優先權。</param>
      <returns vsli:raw="An awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.">Awaitable 物件，會以非同步方式讓出控制權給目前的發送器，並提供機會給發送器以處理其他事件。</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherEventArgs">
      <summary vsli:raw="Provides event data for &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; related events.">提供 <see cref="T:System.Windows.Threading.Dispatcher" /> 相關事件的事件資料。</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherEventArgs.Dispatcher">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; associated with this event.">與這個事件關聯的 <see cref="T:System.Windows.Threading.Dispatcher" />。</summary>
      <returns vsli:raw="The dispatcher.">發送器。</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherFrame">
      <summary vsli:raw="Represents an execution loop in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">表示 <see cref="T:System.Windows.Threading.Dispatcher" /> 中的例外狀況迴圈。</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherFrame.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherFrame&quot; /&gt; class.">初始化 <see cref="T:System.Windows.Threading.DispatcherFrame" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherFrame.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherFrame&quot; /&gt; class, by using the specified exit request flag.">使用指定的結束要求旗標，初始化 <see cref="T:System.Windows.Threading.DispatcherFrame" /> 類別的新執行個體。</summary>
      <param name="exitWhenRequested" vsli:raw="Indicates whether this frame will exit when all frames are requested to exit.">表示當要求所有框架結束時這個框架是否連同結束。</param>
    </member>
    <member name="P:System.Windows.Threading.DispatcherFrame.Continue">
      <summary vsli:raw="Gets or sets a value that indicates whether this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherFrame&quot; /&gt; should continue.">取得或設定值，這個值表示這個 <see cref="T:System.Windows.Threading.DispatcherFrame" /> 是否應繼續。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the frame should continue; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  The default value is &lt;see langword=&quot;true&quot; /&gt;.">如果框架應繼續則為 <see langword="true" />，否則為 <see langword="false" />。  預設值為 <see langword="true" />。</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherHookEventArgs">
      <summary vsli:raw="Provides event data for &lt;see cref=&quot;T:System.Windows.Threading.DispatcherHooks&quot; /&gt; events.">提供 <see cref="T:System.Windows.Threading.DispatcherHooks" /> 事件的事件資料。</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherHookEventArgs.#ctor(System.Windows.Threading.DispatcherOperation)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherHookEventArgs&quot; /&gt; class.">初始化 <see cref="T:System.Windows.Threading.DispatcherHookEventArgs" /> 類別的新執行個體。</summary>
      <param name="operation" vsli:raw="The operation associated with the event.">與事件相關的作業。</param>
    </member>
    <member name="P:System.Windows.Threading.DispatcherHookEventArgs.Dispatcher">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; associated with this event.">取得與這個事件相關聯的 <see cref="T:System.Windows.Threading.Dispatcher" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; associated with this event.">與這個事件關聯的 <see cref="T:System.Windows.Threading.Dispatcher" />。</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherHookEventArgs.Operation">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherOperation&quot; /&gt; associated with this event.">取得與這個事件相關聯的 <see cref="T:System.Windows.Threading.DispatcherOperation" />。</summary>
      <returns vsli:raw="The operation.">作業。</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherHookEventHandler">
      <summary vsli:raw="Represents the method that will handle &lt;see cref=&quot;T:System.Windows.Threading.DispatcherHooks&quot; /&gt; related events.">表示將處理 <see cref="T:System.Windows.Threading.DispatcherHooks" /> 相關事件的方法。</summary>
      <param name="sender" vsli:raw="The source of the event.">事件的來源。</param>
      <param name="e" vsli:raw="The event data.">事件資料。</param>
    </member>
    <member name="T:System.Windows.Threading.DispatcherHooks">
      <summary vsli:raw="Provides additional event information about &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; processing.">提供 <see cref="T:System.Windows.Threading.Dispatcher" /> 處理的其他事件資訊。</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.DispatcherInactive">
      <summary vsli:raw="Occurs when the dispatcher has no more operations to process.">發生於發送器沒有其他作業要處理時。</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationAborted">
      <summary vsli:raw="Occurs when an operation is aborted.">發生於作業已中止時。</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationCompleted">
      <summary vsli:raw="Occurs when an operation completes.">發生於作業已經完成時。</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationPosted">
      <summary vsli:raw="Occurs when an operation is posted to the dispatcher.">發生於將作業張貼至發送器時。</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationPriorityChanged">
      <summary vsli:raw="Occurs when the priority of an operation is changed.">發生於作業優先權變更時。</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherHooks.OperationStarted">
      <summary vsli:raw="Occurs when an operation is invoked.">在叫用作業時發生。</summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherObject">
      <summary vsli:raw="Represents an object that is associated with a &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">表示與 <see cref="T:System.Windows.Threading.Dispatcher" /> 關聯的物件。</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherObject.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherObject&quot; /&gt; class.">初始化 <see cref="T:System.Windows.Threading.DispatcherObject" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherObject.CheckAccess">
      <summary vsli:raw="Determines whether the calling thread has access to this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherObject&quot; /&gt;.">判斷呼叫的執行是否可以存取這個 <see cref="T:System.Windows.Threading.DispatcherObject" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the calling thread has access to this object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果呼叫的執行緒可以存取這個物件則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherObject.Dispatcher">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherObject&quot; /&gt; is associated with.">取得與這個 <see cref="T:System.Windows.Threading.Dispatcher" /> 關聯的 <see cref="T:System.Windows.Threading.DispatcherObject" />。</summary>
      <returns vsli:raw="The dispatcher.">發送器。</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherObject.VerifyAccess">
      <summary vsli:raw="Enforces that the calling thread has access to this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherObject&quot; /&gt;.">請強制執行可以存取這個 <see cref="T:System.Windows.Threading.DispatcherObject" /> 的呼叫執行緒。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="the calling thread does not have access to this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherObject&quot; /&gt;.">呼叫執行緒無法存取這個 <see cref="T:System.Windows.Threading.DispatcherObject" />。</exception>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperation">
      <summary vsli:raw="Represents an object that is used to interact with an operation that has been posted to the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue.">表示物件，這個物件可用來與已張貼至 <see cref="T:System.Windows.Threading.Dispatcher" /> 佇列的作業互動。</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.Abort">
      <summary vsli:raw="Aborts the operation.">中止作業。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the operation was aborted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果已中止作業則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="E:System.Windows.Threading.DispatcherOperation.Aborted">
      <summary vsli:raw="Occurs when the operation is aborted.">發生於作業已中止時。</summary>
    </member>
    <member name="E:System.Windows.Threading.DispatcherOperation.Completed">
      <summary vsli:raw="Occurs when the operation has completed.">發生於作業已經完成時。</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Dispatcher">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; that the operation was posted to.">取得張貼作業所至的 <see cref="T:System.Windows.Threading.Dispatcher" />。</summary>
      <returns vsli:raw="The dispatcher.">發送器。</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.GetAwaiter">
      <summary vsli:raw="Returns an object that is notified when the asynchronous operation is finished.">傳回非同步作業完成時會通知的物件。</summary>
      <returns vsli:raw="An object that is notified when the asynchronous operation is finished.">在非同步作業完成時接獲通知的物件。</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.InvokeDelegateCore">
      <summary vsli:raw="Begins the operation that is associated with this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherOperation&quot; /&gt;.">開始與這個 <see cref="T:System.Windows.Threading.DispatcherOperation" /> 相關聯的作業。</summary>
      <returns vsli:raw="&lt;see langword=&quot;null&quot; /&gt; in all cases.">所有情況下都是 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Priority">
      <summary vsli:raw="Gets or sets the priority of the operation in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue.">取得或設定作業在 <see cref="T:System.Windows.Threading.Dispatcher" /> 佇列中的優先權。</summary>
      <returns vsli:raw="The priority of the delegate on the queue.">委派在佇列中的優先權。</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Result">
      <summary vsli:raw="Gets the result of the operation after it has completed.">取得作業完成後的結果。</summary>
      <returns vsli:raw="The result of the operation -or- &lt;see langword=&quot;null&quot; /&gt; if the operation has not completed.">作業結果，如果作業未完成則為 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Status">
      <summary vsli:raw="Gets the current status of the operation.">取得作業的目前狀態。</summary>
      <returns vsli:raw="The status of the operation.">作業的狀態。</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation.Task">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; that represents the current operation.">取得 <see cref="T:System.Threading.Tasks.Task`1" /> 物件，表示目前的作業。</summary>
      <returns vsli:raw="An object that represents the current operation.">表示目前作業的物件。</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.Wait">
      <summary vsli:raw="Waits for the operation to complete.">等待作業完成</summary>
      <returns vsli:raw="The status of the operation.">作業的狀態。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Threading.DispatcherOperation.Status&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherOperationStatus.Executing&quot; /&gt;.  This can occur when waiting for an operation that is already executing on the same thread.">
        <see cref="P:System.Windows.Threading.DispatcherOperation.Status" /> 等於 <see cref="F:System.Windows.Threading.DispatcherOperationStatus.Executing" />。  發生於等待在相同執行緒上執行的作業時。</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation.Wait(System.TimeSpan)">
      <summary vsli:raw="Waits for the operation to complete in the specified period of time.">等待作業在指定的時間內完成。</summary>
      <param name="timeout" vsli:raw="The maximum period of time to wait.">等待的最長時間。</param>
      <returns vsli:raw="The status of the operation.">作業的狀態。</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Windows.Threading.DispatcherOperation.Status&quot; /&gt; is equal to &lt;see cref=&quot;F:System.Windows.Threading.DispatcherOperationStatus.Executing&quot; /&gt;.  This can occur when waiting for an operation that is already executing on the same thread.">
        <see cref="P:System.Windows.Threading.DispatcherOperation.Status" /> 等於 <see cref="F:System.Windows.Threading.DispatcherOperationStatus.Executing" />。  發生於等待在相同執行緒上執行的作業時。</exception>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperation`1">
      <summary vsli:raw="Represents an object that is used to interact with an operation that has been posted to the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue and contains a &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt;.">表示物件，這個物件可用來與已張貼至 <see cref="T:System.Windows.Threading.Dispatcher" /> 佇列並包含 <see cref="T:System.Threading.Tasks.Task`1" /> 的作業互動。</summary>
      <typeparam name="TResult" vsli:raw="The type that is returned by the &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt;.">
        <see cref="T:System.Threading.Tasks.Task`1" /> 傳回的型別。</typeparam>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation`1.GetAwaiter">
      <summary vsli:raw="Returns an object that awaits an asynchronous operation that returns a result.">傳回等候傳回結果之非同步作業的物件。</summary>
      <returns vsli:raw="An object that awaits an asynchronous operation that returns a result.">等候傳回結果之非同步作業的物件。</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherOperation`1.InvokeDelegateCore">
      <summary vsli:raw="Begins the operation that is associated with this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherOperation&quot; /&gt;.">開始與這個 <see cref="T:System.Windows.Threading.DispatcherOperation" /> 相關聯的作業。</summary>
      <returns vsli:raw="The result of the operation.">運算的結果。</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation`1.Result">
      <summary vsli:raw="Gets the result of the operation after it has completed.">取得作業完成後的結果。</summary>
      <returns vsli:raw="The result of the operation.">運算的結果。</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherOperation`1.Task">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; that represents the current operation.">取得 <see cref="T:System.Threading.Tasks.Task`1" /> 物件，表示目前的作業。</summary>
      <returns vsli:raw="An object that represents the current operation.">表示目前作業的物件。</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperationCallback">
      <summary vsli:raw="Represents a delegate to use for dispatcher operations.">代表要用於發送器作業的委派。</summary>
      <param name="arg" vsli:raw="An argument passed to the callback.">傳遞至回撥的引數。</param>
      <returns vsli:raw="The object returned by the callback.">回呼傳回的物件。</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherOperationStatus">
      <summary vsli:raw="Describes the possible values for the status of a &lt;see cref=&quot;T:System.Windows.Threading.DispatcherOperation&quot; /&gt;.">描述 <see cref="T:System.Windows.Threading.DispatcherOperation" /> 狀態的可能值。</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherOperationStatus.Aborted">
      <summary vsli:raw="The operation has aborted.">已中止作業。</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherOperationStatus.Completed">
      <summary vsli:raw="The operation is completed.">已完成作業。</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherOperationStatus.Executing">
      <summary vsli:raw="The operation started executing, but has not completed.">已開始執行作業，但尚未完成。</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherOperationStatus.Pending">
      <summary vsli:raw="The operation is pending and is still in the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue.">作業處於暫止狀態且仍在 <see cref="T:System.Windows.Threading.Dispatcher" /> 佇列中。</summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherPriority">
      <summary vsli:raw="Describes the priorities at which operations can be invoked by way of the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">描述使用 <see cref="T:System.Windows.Threading.Dispatcher" /> 叫用作業的優先權。</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.ApplicationIdle">
      <summary vsli:raw="The enumeration value is 2. Operations are processed when the application is idle.">列舉值為 2。  在應用程式閒置時處理作業。</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Background">
      <summary vsli:raw="The enumeration value is 4. Operations are processed after all other non-idle operations are completed.">列舉值為 4。  在完成所有其他的非閒置作業後處理作業。</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.ContextIdle">
      <summary vsli:raw="The enumeration value is 3. Operations are processed after background operations have completed.">列舉值為 3。  在完成背景作業後處理作業。</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.DataBind">
      <summary vsli:raw="The enumeration value is 8. Operations are processed at the same priority as data binding.">列舉值為 8。  以同等於資料繫結的優先權處理作業。</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Inactive">
      <summary vsli:raw="The enumeration value is 0. Operations are not processed.">列舉值為 0。  未處理作業。</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Input">
      <summary vsli:raw="The enumeration value is 5. Operations are processed at the same priority as input.">列舉值為 5。  以同等於輸入的優先權處理作業。</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Invalid">
      <summary vsli:raw="The enumeration value is -1. This is an invalid priority.">列舉值為 -1。  優先權無效。</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Loaded">
      <summary vsli:raw="The enumeration value is 6. Operations are processed when layout and render has finished but just before items at input priority are serviced. Specifically this is used when raising the Loaded event.">列舉值為 6。  在完成配置和轉譯時，但剛好於輸入優先權項目接受服務之前處理作業。 當引發載入事件時特別會使用此項目。</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Normal">
      <summary vsli:raw="The enumeration value is 9. Operations are processed at normal priority. This is the typical application priority.">列舉值為 9。  以一般優先權處理作業。  這是一般的應用程式優先權。</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Render">
      <summary vsli:raw="The enumeration value is 7. Operations processed at the same priority as rendering.">列舉值為 7。  以同等於轉譯的優先權處理作業。</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.Send">
      <summary vsli:raw="The enumeration value is 10. Operations are processed before other asynchronous operations. This is the highest priority.">列舉值為 10。  在其他非同步作業之前處理作業。  這是最高的優先權。</summary>
    </member>
    <member name="F:System.Windows.Threading.DispatcherPriority.SystemIdle">
      <summary vsli:raw="The enumeration value is 1. Operations are processed when the system is idle.">列舉值為 1。  在系統閒置時處理作業。</summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherPriorityAwaitable">
      <summary vsli:raw="Represents an awaitable object that asynchronously yields control back to the current dispatcher and provides an opportunity for the dispatcher to process other events.">代表可等候物件，會以非同步方式讓出控制權給目前的發送器，並提供機會讓發送器處理其他事件</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherPriorityAwaitable.GetAwaiter">
      <summary vsli:raw="Returns an object that waits for the completion of an asynchronous task.">傳回等候非同步工作完成的物件。</summary>
      <returns vsli:raw="An object that waits for the completion of an asynchronous task.">等候非同步工作完成的物件。</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherPriorityAwaiter">
      <summary vsli:raw="Represents an object that waits for the completion of an asynchronous task.">表示等候非同步工作完成的物件。</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherPriorityAwaiter.GetResult">
      <summary vsli:raw="Ends the wait for the completion of the asynchronous task.">結束對非同步工作完成的等候。</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherPriorityAwaiter.IsCompleted">
      <summary vsli:raw="Gets a value that indicates whether the asynchronous task has completed.">取得值，指出非同步工作是否已經完成。</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; in all cases.">所有情況下都是 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherPriorityAwaiter.OnCompleted(System.Action)">
      <summary vsli:raw="Sets the action to perform when the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherPriorityAwaiter&quot; /&gt; object stops waiting for the asynchronous task to complete.">設定 <see cref="T:System.Windows.Threading.DispatcherPriorityAwaiter" /> 物件停止等待非同步工作完成時要執行時的動作。</summary>
      <param name="continuation" vsli:raw="The action to perform when the wait operation completes.">等候作業完成時要執行的動作。</param>
    </member>
    <member name="T:System.Windows.Threading.DispatcherProcessingDisabled">
      <summary vsli:raw="Represents the Dispatcher when it is in a disable state and provides a means to re-enable dispatcher processing.">表示停用狀態的發送器並提供重新啟用發送器處理的方法。</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.Dispose">
      <summary vsli:raw="Re-enables dispatcher processing.">重新啟用發送器處理。</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; object is equal to this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; object.">判斷指定的 <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> 物件是否等於這個 <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> 物件。</summary>
      <param name="obj" vsli:raw="The object to evaluate for equality.">要評估是否相等的物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified object is equal to this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的物件和這個 <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> 物件相等則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.GetHashCode">
      <summary vsli:raw="Gets a hash code for this instance.">取得這個執行個體的雜湊碼。</summary>
      <returns vsli:raw="A signed 32-bit integer hash code.">帶正負號的 32 位元整數雜湊程式碼。</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.op_Equality(System.Windows.Threading.DispatcherProcessingDisabled,System.Windows.Threading.DispatcherProcessingDisabled)">
      <summary vsli:raw="Determines whether two &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; objects are equal.">判斷兩個 <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> 物件是否相等。</summary>
      <param name="left" vsli:raw="The first object to compare.">要比較的第一個物件。</param>
      <param name="right" vsli:raw="The second object to compare.">要比較的第二個物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; objects are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> 物件相等則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.op_Inequality(System.Windows.Threading.DispatcherProcessingDisabled,System.Windows.Threading.DispatcherProcessingDisabled)">
      <summary vsli:raw="Determines whether two &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; objects are not equal.">判斷兩個 <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> 物件是否不相等。</summary>
      <param name="left" vsli:raw="The first object to compare.">要比較的第一個物件。</param>
      <param name="right" vsli:raw="The second object to compare.">要比較的第二個物件。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherProcessingDisabled&quot; /&gt; objects are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Windows.Threading.DispatcherProcessingDisabled" /> 物件不相等則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherSynchronizationContext">
      <summary vsli:raw="Provides a synchronization context for Windows Presentation Foundation (WPF).">提供 Windows Presentation Foundation (WPF) 的同步處理內容。</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; class by using the current &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">使用目前的 <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> 來初始化 <see cref="T:System.Windows.Threading.Dispatcher" /> 類別的執行個體。</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.#ctor(System.Windows.Threading.Dispatcher)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; class by using the specified &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">使用指定的 <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> 來初始化 <see cref="T:System.Windows.Threading.Dispatcher" /> 類別的新執行個體。</summary>
      <param name="dispatcher" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; to associate this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; with.">與這個 <see cref="T:System.Windows.Threading.Dispatcher" /> 相關聯的 <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dispatcher&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dispatcher" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.#ctor(System.Windows.Threading.Dispatcher,System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; class by using the specified &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">使用指定的 <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> 來初始化 <see cref="T:System.Windows.Threading.Dispatcher" /> 類別的新執行個體。</summary>
      <param name="dispatcher" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; to associate this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt; with.">與這個 <see cref="T:System.Windows.Threading.Dispatcher" /> 相關聯的 <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" />。</param>
      <param name="priority" vsli:raw="The priority used to send and post callback methods.">用來傳送和張貼回呼方法的優先權。</param>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.CreateCopy">
      <summary vsli:raw="Creates a copy of this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherSynchronizationContext&quot; /&gt;.">建立這個 <see cref="T:System.Windows.Threading.DispatcherSynchronizationContext" /> 的複本。</summary>
      <returns vsli:raw="The copy of this synchronization context.">這個同步處理內容的複本。</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)">
      <summary vsli:raw="Invokes the callback in the synchronization context asynchronously.">在同步處理內容中以非同步方式叫用回呼。</summary>
      <param name="d" vsli:raw="The delegate to call.">要呼叫的委派。</param>
      <param name="state" vsli:raw="The object passed to the delegate.">傳送至委派的物件。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;d&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="d" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)">
      <summary vsli:raw="Invokes the callback in the synchronization context synchronously.">在同步處理內容中以同步方式叫用回呼。</summary>
      <param name="d" vsli:raw="The delegate to call.">要呼叫的委派。</param>
      <param name="state" vsli:raw="The object passed to the delegate.">傳送至委派的物件。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;d&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="d" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)">
      <summary vsli:raw="Waits for any or all the elements in the specified array to receive a signal.">等候指定陣列中的任何元素或所有元素接收信號。</summary>
      <param name="waitHandles" vsli:raw="An array that contains the native operating system handles.">包含原生作業系統控制代碼的陣列。</param>
      <param name="waitAll" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to wait for all handles; &lt;see langword=&quot;false&quot; /&gt; to wait for any handle.">
        <see langword="true" /> 表示等候所有控制代碼，<see langword="false" /> 則表示等候任何控制代碼。</param>
      <param name="millisecondsTimeout" vsli:raw="The number of milliseconds to wait, or &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt; (-1) to wait indefinitely.">要等候的毫秒數，如果要無限期等候，則為 <see cref="F:System.Threading.Timeout.Infinite" /> (-1)。</param>
      <returns vsli:raw="The array index of the object that satisfied the wait.">滿足等候條件之物件的陣列索引。</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherTimer">
      <summary vsli:raw="A timer that is integrated into the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; queue which is processed at a specified interval of time and at a specified priority.">整合至 <see cref="T:System.Windows.Threading.Dispatcher" /> 佇列中的計時器，會在指定的時間間隔以指定的優先權處理這個佇列。</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt; class.">初始化 <see cref="T:System.Windows.Threading.DispatcherTimer" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor(System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.EventHandler,System.Windows.Threading.Dispatcher)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt; class which uses the specified time interval, priority, event handler, and &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;.">初始化這個 <see cref="T:System.Windows.Threading.DispatcherTimer" /> 類別的新執行個體，這個類別會使用指定的時間間隔、優先權、事件處理常式和 <see cref="T:System.Windows.Threading.Dispatcher" />。</summary>
      <param name="interval" vsli:raw="The period of time between ticks.">刻度之間的時間間隔。</param>
      <param name="priority" vsli:raw="The priority at which to invoke the timer.">叫用計時器的優先權。</param>
      <param name="callback" vsli:raw="The event handler to call when the &lt;see cref=&quot;E:System.Windows.Threading.DispatcherTimer.Tick&quot; /&gt; event occurs.">發生 <see cref="E:System.Windows.Threading.DispatcherTimer.Tick" /> 事件時要呼叫的事件處理常式。</param>
      <param name="dispatcher" vsli:raw="The dispatcher the timer is associated with.">與計時器關聯的發送器。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;callback&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;dispatcher&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="callback" /> 為 <see langword="null" />。
-或-
      &lt;code data-dev-comment-type="paramref"&gt;dispatcher&lt;/code&gt; 為 &lt;code data-dev-comment-type="langword"&gt;null&lt;/code&gt;。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;interval&quot; /&gt; is less than 0 or greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">
        <paramref name="interval" /> 小於 0 或大於 <see cref="F:System.Int32.MaxValue" />。</exception>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt; class which processes timer events at the specified priority.">初始化 <see cref="T:System.Windows.Threading.DispatcherTimer" /> 類別的新執行個體，這個類別會以指定的優先權處理計時器事件。</summary>
      <param name="priority" vsli:raw="The priority at which to invoke the timer.">叫用計時器的優先權。</param>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority,System.Windows.Threading.Dispatcher)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt; class which runs on the specified &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; at the specified priority.">初始化 <see cref="T:System.Windows.Threading.DispatcherTimer" /> 類別的新執行個體，這個類別會以指定的優先權執行於指定之 <see cref="T:System.Windows.Threading.Dispatcher" /> 上。</summary>
      <param name="priority" vsli:raw="The priority at which to invoke the timer.">叫用計時器的優先權。</param>
      <param name="dispatcher" vsli:raw="The dispatcher the timer is associated with.">與計時器關聯的發送器。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dispatcher&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dispatcher" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.Dispatcher">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt; associated with this &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt;.">取得與這個 <see cref="T:System.Windows.Threading.Dispatcher" /> 關聯的 <see cref="T:System.Windows.Threading.DispatcherTimer" />。</summary>
      <returns vsli:raw="The dispatcher.">發送器。</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.Interval">
      <summary vsli:raw="Gets or sets the period of time between timer ticks.">取得或設定計時器刻度之間的時間間隔。</summary>
      <returns vsli:raw="The period of time between ticks. The default is 00:00:00.">刻度之間的時間間隔。 預設為 00:00:00。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;interval&quot; /&gt; is less than 0 or greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; milliseconds.">
        <paramref name="interval" /> 小於零，或大於 <see cref="F:System.Int32.MaxValue" /> 毫秒。</exception>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.IsEnabled">
      <summary vsli:raw="Gets or sets a value that indicates whether the timer is running.">取得或設定值，這個值表示計時器是否正在執行。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the timer is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.  The default is &lt;see langword=&quot;false&quot; /&gt;.">如果已啟用計時器，則為 <see langword="true" />，否則為 <see langword="false" />。  預設為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.Start">
      <summary vsli:raw="Starts the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt;.">啟動 <see cref="T:System.Windows.Threading.DispatcherTimer" />。</summary>
    </member>
    <member name="M:System.Windows.Threading.DispatcherTimer.Stop">
      <summary vsli:raw="Stops the &lt;see cref=&quot;T:System.Windows.Threading.DispatcherTimer&quot; /&gt;.">停止 <see cref="T:System.Windows.Threading.DispatcherTimer" />。</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherTimer.Tag">
      <summary vsli:raw="Gets or sets a user-defined data object.">取得或設定使用者定義的資料物件。</summary>
      <returns vsli:raw="The user-defined data.  The default is &lt;see langword=&quot;null&quot; /&gt;.">使用者定義的資料。  預設為 <see langword="null" />。</returns>
    </member>
    <member name="E:System.Windows.Threading.DispatcherTimer.Tick">
      <summary vsli:raw="Occurs when the timer interval has elapsed.">發生於計時器間隔已耗用時。</summary>
    </member>
    <member name="T:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;&lt;see cref=&quot;E:System.Windows.Threading.Dispatcher.UnhandledException&quot; /&gt; event.">提供 <see cref="T:System.Windows.Threading.Dispatcher" /><see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" /> 事件的資料。</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Exception">
      <summary vsli:raw="Gets the exception that was raised when executing code by way of the dispatcher.">取得使用發送器執行程式碼時引發的例外狀況。</summary>
      <returns vsli:raw="The exception.">例外狀況。</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Handled">
      <summary vsli:raw="Gets or sets whether the exception event has been handled.">取得或設定值，這個值表示是否已處理例外狀況事件。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the exception was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果例外狀況已處理則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherUnhandledExceptionEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Windows.Threading.Dispatcher.UnhandledException&quot; /&gt; event.">代表將處理 <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" /> 事件的方法。</summary>
      <param name="sender" vsli:raw="The source of the event.">事件的來源。</param>
      <param name="e" vsli:raw="The event data.">事件資料。</param>
    </member>
    <member name="T:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;T:System.Windows.Threading.Dispatcher&quot; /&gt;&lt;see cref=&quot;E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter&quot; /&gt; event.">提供 <see cref="T:System.Windows.Threading.Dispatcher" /><see cref="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter" /> 事件的資料。</summary>
    </member>
    <member name="P:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.Exception">
      <summary vsli:raw="Gets the exception that was raised when executing code by way of the dispatcher.">取得使用發送器執行程式碼時引發的例外狀況。</summary>
      <returns vsli:raw="The exception.">例外狀況。</returns>
    </member>
    <member name="P:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch">
      <summary vsli:raw="Gets or sets whether the exception should be caught and the event handlers called.">取得或設定值，這個值表示是否應攔截例外狀況並呼叫事件處理常式。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;E:System.Windows.Threading.Dispatcher.UnhandledException&quot; /&gt; should be raised; otherwise; &lt;see langword=&quot;false&quot; /&gt;.  The default value is &lt;see langword=&quot;true&quot; /&gt;.">如果應該要引發 <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" /> 則為 <see langword="true" />，否則為 <see langword="false" />。  預設值為 <see langword="true" />。</returns>
    </member>
    <member name="T:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter&quot; /&gt; event.">代表將處理 <see cref="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter" /> 事件的方法。</summary>
      <param name="sender" vsli:raw="The source of the event.">事件的來源。</param>
      <param name="e" vsli:raw="The event data.">事件資料。</param>
    </member>
    <member name="T:System.Windows.ValidateValueCallback">
      <summary vsli:raw="Represents a method used as a callback that validates the effective value of a dependency property.">表示作為回呼的方法，該方法可驗證相依性屬性的有效值。</summary>
      <param name="value" vsli:raw="The value to be validated.">要驗證的值。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value was validated; &lt;see langword=&quot;false&quot; /&gt; if the submitted value was invalid.">如果值已驗證則為 <see langword="true" />，如果提交的值無效則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Windows.Vector">
      <summary vsli:raw="Represents a displacement in 2-D space.">表示 2D 空間中的移動。</summary>
    </member>
    <member name="M:System.Windows.Vector.#ctor(System.Double,System.Double)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure.">初始化 <see cref="T:System.Windows.Vector" /> 結構的新執行個體。</summary>
      <param name="x" vsli:raw="The &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt;-offset of the new &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">新 <see cref="P:System.Windows.Vector.X" /> 的 <see cref="T:System.Windows.Vector" /> 位移 (Offset)。</param>
      <param name="y" vsli:raw="The &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt;-offset of the new &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">新 <see cref="P:System.Windows.Vector.Y" /> 的 <see cref="T:System.Windows.Vector" /> 位移 (Offset)。</param>
    </member>
    <member name="M:System.Windows.Vector.Add(System.Windows.Vector,System.Windows.Point)">
      <summary vsli:raw="Translates the specified point by the specified vector and returns the resulting point.">依指定的向量平移指定的點，並傳回產生的點。</summary>
      <param name="vector" vsli:raw="The amount to translate the specified point.">要將指定的點平移的數量。</param>
      <param name="point" vsli:raw="The point to translate.">要平移的點。</param>
      <returns vsli:raw="The result of translating &lt;paramref name=&quot;point&quot; /&gt; by &lt;paramref name=&quot;vector&quot; /&gt;.">依 <paramref name="point" /> 轉換 <paramref name="vector" /> 的結果。</returns>
    </member>
    <member name="M:System.Windows.Vector.Add(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Adds two vectors and returns the result as a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure.">將兩個向量相加，並傳回結果做為 <see cref="T:System.Windows.Vector" /> 結構。</summary>
      <param name="vector1" vsli:raw="The first vector to add.">要相加的第一個向量。</param>
      <param name="vector2" vsli:raw="The second vector to add.">要相加的第二個向量。</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;.">
        <paramref name="vector1" /> 和 <paramref name="vector2" /> 的總和。</returns>
    </member>
    <member name="M:System.Windows.Vector.AngleBetween(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Retrieves the angle, expressed in degrees, between the two specified vectors.">擷取兩個所指定向量之間的角度 (以度數表示)。</summary>
      <param name="vector1" vsli:raw="The first vector to evaluate.">要評估的第一個向量。</param>
      <param name="vector2" vsli:raw="The second vector to evaluate.">要評估的第二個向量。</param>
      <returns vsli:raw="The angle, in degrees, between &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;.">
        <paramref name="vector1" /> 與 <paramref name="vector2" /> 之間的角度 (以度數為單位)。</returns>
    </member>
    <member name="M:System.Windows.Vector.CrossProduct(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Calculates the cross product of two vectors.">計算兩個向量的叉積。</summary>
      <param name="vector1" vsli:raw="The first vector to evaluate.">要評估的第一個向量。</param>
      <param name="vector2" vsli:raw="The second vector to evaluate.">要評估的第二個向量。</param>
      <returns vsli:raw="The cross product of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;. The following formula is used to calculate the cross product:  &#xA;  &#xA; &lt;c&gt;(Vector1.X * Vector2.Y) - (Vector1.Y * Vector2.X)&lt;/c&gt;">
        <paramref name="vector1" /> 與 <paramref name="vector2" /> 的叉積 (Cross Product)。 下列公式可用來計算叉積： 
 <c>(Vector1.X * Vector2.Y) - (Vector1.Y * Vector2.X)</c></returns>
    </member>
    <member name="M:System.Windows.Vector.Determinant(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Calculates the determinant of two vectors.">計算兩個向量的行列式。</summary>
      <param name="vector1" vsli:raw="The first vector to evaluate.">要評估的第一個向量。</param>
      <param name="vector2" vsli:raw="The second vector to evaluate.">要評估的第二個向量。</param>
      <returns vsli:raw="The determinant of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;.">
        <paramref name="vector1" /> 與 <paramref name="vector2" /> 的行列式。</returns>
    </member>
    <member name="M:System.Windows.Vector.Divide(System.Windows.Vector,System.Double)">
      <summary vsli:raw="Divides the specified vector by the specified scalar and returns the result as a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">將指定的向量除以指定的純量，並傳回結果做為 <see cref="T:System.Windows.Vector" />。</summary>
      <param name="vector" vsli:raw="The vector structure to divide.">要被除的向量結構。</param>
      <param name="scalar" vsli:raw="The amount by which &lt;paramref name=&quot;vector&quot; /&gt; is divided.">
        <paramref name="vector" /> 要除以的數量。</param>
      <returns vsli:raw="The result of dividing &lt;paramref name=&quot;vector&quot; /&gt; by &lt;paramref name=&quot;scalar&quot; /&gt;.">
        <paramref name="vector" /> 除以 <paramref name="scalar" /> 的結果。</returns>
    </member>
    <member name="M:System.Windows.Vector.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure and, if it is, whether it has the same &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values as this vector.">判斷指定的 <see cref="T:System.Object" /> 是否為 <see cref="T:System.Windows.Vector" /> 結構，如果是，則它的 <see cref="P:System.Windows.Vector.X" /> 和 <see cref="P:System.Windows.Vector.Y" /> 值是否與這個向量相同。</summary>
      <param name="o" vsli:raw="The vector to compare.">要比較的向量。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; and has the same &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values as this vector; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="o" /> 是 <see cref="T:System.Windows.Vector" /> 而且具有的 <see cref="P:System.Windows.Vector.X" /> 和 <see cref="P:System.Windows.Vector.Y" /> 值與這個向量相同，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Vector.Equals(System.Windows.Vector)">
      <summary vsli:raw="Compares two vectors for equality.">比較兩個向量是否相等。</summary>
      <param name="value" vsli:raw="The vector to compare with this vector.">要與這個向量比較的向量。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; has the same &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values as this vector; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="value" /> 具有的 <see cref="P:System.Windows.Vector.X" /> 和 <see cref="P:System.Windows.Vector.Y" /> 值與這個向量相同則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Vector.Equals(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Compares the two specified vectors for equality.">比較兩個指定的向量是否相等。</summary>
      <param name="vector1" vsli:raw="The first vector to compare.">要比較的第一個向量。</param>
      <param name="vector2" vsli:raw="The second vector to compare.">要比較的第二個向量。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; components of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="vector1" /> 和 <paramref name="vector2" /> 的 <see cref="P:System.Windows.Vector.X" /> 和 <see cref="P:System.Windows.Vector.Y" /> 元件相等則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Vector.GetHashCode">
      <summary vsli:raw="Returns the hash code for this vector.">傳回這個向量的雜湊程式碼。</summary>
      <returns vsli:raw="The hash code for this instance.">這個執行個體的雜湊碼。</returns>
    </member>
    <member name="P:System.Windows.Vector.Length">
      <summary vsli:raw="Gets the length of this vector.">取得這個向量的長度。</summary>
      <returns vsli:raw="The length of this vector.">這個向量的長度。</returns>
    </member>
    <member name="P:System.Windows.Vector.LengthSquared">
      <summary vsli:raw="Gets the square of the length of this vector.">取得這個向量的長度平方。</summary>
      <returns vsli:raw="The square of the &lt;see cref=&quot;P:System.Windows.Vector.Length&quot; /&gt; of this vector.">這個向量的 <see cref="P:System.Windows.Vector.Length" /> 平方。</returns>
    </member>
    <member name="M:System.Windows.Vector.Multiply(System.Double,System.Windows.Vector)">
      <summary vsli:raw="Multiplies the specified scalar by the specified vector and returns the resulting &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">將指定的純量乘以指定的向量，並傳回產生的 <see cref="T:System.Windows.Vector" />。</summary>
      <param name="scalar" vsli:raw="The scalar to multiply.">要相乘的純量。</param>
      <param name="vector" vsli:raw="The vector to multiply.">要相乘的向量。</param>
      <returns vsli:raw="The result of multiplying &lt;paramref name=&quot;scalar&quot; /&gt; and &lt;paramref name=&quot;vector&quot; /&gt;.">
        <paramref name="scalar" /> 和 <paramref name="vector" /> 相乘的乘積。</returns>
    </member>
    <member name="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Double)">
      <summary vsli:raw="Multiplies the specified vector by the specified scalar and returns the resulting &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">將指定的向量乘以指定的純量，並傳回產生的 <see cref="T:System.Windows.Vector" />。</summary>
      <param name="vector" vsli:raw="The vector to multiply.">要相乘的向量。</param>
      <param name="scalar" vsli:raw="The scalar to multiply.">要相乘的純量。</param>
      <returns vsli:raw="The result of multiplying &lt;paramref name=&quot;vector&quot; /&gt; and &lt;paramref name=&quot;scalar&quot; /&gt;.">
        <paramref name="vector" /> 和 <paramref name="scalar" /> 相乘的乘積。</returns>
    </member>
    <member name="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Windows.Media.Matrix)">
      <summary vsli:raw="Transforms the coordinate space of the specified vector using the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">使用指定的 <see cref="T:System.Windows.Media.Matrix" /> 轉換所指定向量的座標空間。</summary>
      <param name="vector" vsli:raw="The vector structure to transform.">要轉換的向量結構。</param>
      <param name="matrix" vsli:raw="The transformation to apply to &lt;paramref name=&quot;vector&quot; /&gt;.">要套用至 <paramref name="vector" /> 的轉換。</param>
      <returns vsli:raw="The result of transforming &lt;paramref name=&quot;vector&quot; /&gt; by &lt;paramref name=&quot;matrix&quot; /&gt;.">依 <paramref name="vector" /> 轉換 <paramref name="matrix" /> 的結果。</returns>
    </member>
    <member name="M:System.Windows.Vector.Multiply(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Calculates the dot product of the two specified vectors and returns the result as a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">計算兩個所指定向量的點積，並傳回結果做為 <see cref="T:System.Double" />。</summary>
      <param name="vector1" vsli:raw="The first vector to multiply.">要相乘的第一個向量。</param>
      <param name="vector2" vsli:raw="The second vector structure to multiply.">要相乘的第二個向量結構。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Double&quot; /&gt; containing the scalar dot product of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;, which is calculated using the following formula:  &#xA;  &#xA; &lt;c&gt;(vector1.X * vector2.X) + (vector1.Y * vector2.Y)&lt;/c&gt;">
        <see cref="T:System.Double" />，包含 <paramref name="vector1" /> 與 <paramref name="vector2" /> 的純量點積 (Dot Product)，這是使用下列公式計算而來： 
 <c>(vector1.X * vector2.X) + (vector1.Y * vector2.Y)</c></returns>
    </member>
    <member name="M:System.Windows.Vector.Negate">
      <summary vsli:raw="Negates this vector. The vector has the same magnitude as before, but its direction is now opposite.">將這個向量加上負號。 向量的大小和之前一樣，但是現在方向相反。</summary>
    </member>
    <member name="M:System.Windows.Vector.Normalize">
      <summary vsli:raw="Normalizes this vector.">將這個向量標準化。</summary>
    </member>
    <member name="M:System.Windows.Vector.op_Addition(System.Windows.Vector,System.Windows.Point)">
      <summary vsli:raw="Translates a point by the specified vector and returns the resulting point.">依指定的向量平移點，並傳回產生的點。</summary>
      <param name="vector" vsli:raw="The vector used to translate &lt;paramref name=&quot;point&quot; /&gt;.">用來平移 <paramref name="point" /> 的向量。</param>
      <param name="point" vsli:raw="The point to translate.">要平移的點。</param>
      <returns vsli:raw="The result of translating &lt;paramref name=&quot;point&quot; /&gt; by &lt;paramref name=&quot;vector&quot; /&gt;.">依 <paramref name="point" /> 轉換 <paramref name="vector" /> 的結果。</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Addition(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Adds two vectors and returns the result as a vector.">將兩個向量相加，並傳回結果做為向量。</summary>
      <param name="vector1" vsli:raw="The first vector to add.">要相加的第一個向量。</param>
      <param name="vector2" vsli:raw="The second vector to add.">要相加的第二個向量。</param>
      <returns vsli:raw="The sum of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;.">
        <paramref name="vector1" /> 和 <paramref name="vector2" /> 的總和。</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Division(System.Windows.Vector,System.Double)">
      <summary vsli:raw="Divides the specified vector by the specified scalar and returns the resulting vector.">將指定的向量除以指定的純量，並傳回產生的向量。</summary>
      <param name="vector" vsli:raw="The vector to divide.">要被除的向量。</param>
      <param name="scalar" vsli:raw="The scalar by which &lt;paramref name=&quot;vector&quot; /&gt; will be divided.">
        <paramref name="vector" /> 要除以的純量。</param>
      <returns vsli:raw="The result of dividing &lt;paramref name=&quot;vector&quot; /&gt; by &lt;paramref name=&quot;scalar&quot; /&gt;.">
        <paramref name="vector" /> 除以 <paramref name="scalar" /> 的結果。</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Equality(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Compares two vectors for equality.">比較兩個向量是否相等。</summary>
      <param name="vector1" vsli:raw="The first vector to compare.">要比較的第一個向量。</param>
      <param name="vector2" vsli:raw="The second vector to compare.">要比較的第二個向量。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; components of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="vector1" /> 和 <paramref name="vector2" /> 的 <see cref="P:System.Windows.Vector.X" /> 和 <see cref="P:System.Windows.Vector.Y" /> 元件相等則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Explicit(System.Windows.Vector)~System.Windows.Point">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Windows.Point&quot; /&gt; with the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values of this vector.">使用這個向量的 <see cref="T:System.Windows.Point" /> 和 <see cref="P:System.Windows.Vector.X" /> 值建立 <see cref="P:System.Windows.Vector.Y" />。</summary>
      <param name="vector" vsli:raw="The vector to convert.">要轉換的向量。</param>
      <returns vsli:raw="A point with &lt;see cref=&quot;P:System.Windows.Point.X&quot; /&gt;- and &lt;see cref=&quot;P:System.Windows.Point.Y&quot; /&gt;-coordinate values equal to the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; offset values of &lt;paramref name=&quot;vector&quot; /&gt;.">一點，其 <see cref="P:System.Windows.Point.X" /> 和 <see cref="P:System.Windows.Point.Y" /> 座標值等於 <paramref name="vector" /> 的 <see cref="P:System.Windows.Vector.X" /> 和 <see cref="P:System.Windows.Vector.Y" /> 位移值。</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Explicit(System.Windows.Vector)~System.Windows.Size">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; from the offsets of this vector.">從這個向量的位移建立 <see cref="T:System.Windows.Size" />。</summary>
      <param name="vector" vsli:raw="The vector to convert.">要轉換的向量。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Size&quot; /&gt; with a &lt;see cref=&quot;P:System.Windows.Size.Width&quot; /&gt; equal to the absolute value of this vector's &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; property and a &lt;see cref=&quot;P:System.Windows.Size.Height&quot; /&gt; equal to the absolute value of this vector's &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; property.">
        <see cref="T:System.Windows.Size" />，其 <see cref="P:System.Windows.Size.Width" /> 等於這個向量之 <see cref="P:System.Windows.Vector.X" /> 屬性的絕對值，而其 <see cref="P:System.Windows.Size.Height" /> 等於這個向量之 <see cref="P:System.Windows.Vector.Y" /> 屬性的絕對值</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Inequality(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Compares two vectors for inequality.">比較兩個向量是否不相等。</summary>
      <param name="vector1" vsli:raw="The first vector to compare.">要比較的第一個向量。</param>
      <param name="vector2" vsli:raw="The second vector to compare.">要比較的第二個向量。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; components of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt; are different; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="vector1" /> 和 <paramref name="vector2" /> 的 <see cref="P:System.Windows.Vector.X" /> 和 <see cref="P:System.Windows.Vector.Y" /> 元件不同則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Multiply(System.Double,System.Windows.Vector)">
      <summary vsli:raw="Multiplies the specified scalar by the specified vector and returns the resulting vector.">將指定的純量乘以指定的向量，並傳回產生的向量。</summary>
      <param name="scalar" vsli:raw="The scalar to multiply.">要相乘的純量。</param>
      <param name="vector" vsli:raw="The vector to multiply.">要相乘的向量。</param>
      <returns vsli:raw="The result of multiplying &lt;paramref name=&quot;scalar&quot; /&gt; and &lt;paramref name=&quot;vector&quot; /&gt;.">
        <paramref name="scalar" /> 和 <paramref name="vector" /> 相乘的乘積。</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Double)">
      <summary vsli:raw="Multiplies the specified vector by the specified scalar and returns the resulting vector.">將指定的向量乘以指定的純量，並傳回產生的向量。</summary>
      <param name="vector" vsli:raw="The vector to multiply.">要相乘的向量。</param>
      <param name="scalar" vsli:raw="The scalar to multiply.">要相乘的純量。</param>
      <returns vsli:raw="The result of multiplying &lt;paramref name=&quot;vector&quot; /&gt; and &lt;paramref name=&quot;scalar&quot; /&gt;.">
        <paramref name="vector" /> 和 <paramref name="scalar" /> 相乘的乘積。</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Windows.Media.Matrix)">
      <summary vsli:raw="Transforms the coordinate space of the specified vector using the specified &lt;see cref=&quot;T:System.Windows.Media.Matrix&quot; /&gt;.">使用指定的 <see cref="T:System.Windows.Media.Matrix" /> 轉換所指定向量的座標空間。</summary>
      <param name="vector" vsli:raw="The vector to transform.">要轉換的向量。</param>
      <param name="matrix" vsli:raw="The transformation to apply to &lt;paramref name=&quot;vector&quot; /&gt;.">要套用至 <paramref name="vector" /> 的轉換。</param>
      <returns vsli:raw="The result of transforming &lt;paramref name=&quot;vector&quot; /&gt; by &lt;paramref name=&quot;matrix&quot; /&gt;.">依 <paramref name="vector" /> 轉換 <paramref name="matrix" /> 的結果。</returns>
    </member>
    <member name="M:System.Windows.Vector.op_Multiply(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Calculates the dot product of the two specified vector structures and returns the result as a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">計算兩個所指定向量結構的點積，並傳回結果做為 <see cref="T:System.Double" />。</summary>
      <param name="vector1" vsli:raw="The first vector to multiply.">要相乘的第一個向量。</param>
      <param name="vector2" vsli:raw="The second vector to multiply.">要相乘的第二個向量。</param>
      <returns vsli:raw="Returns a &lt;see cref=&quot;T:System.Double&quot; /&gt; containing the scalar dot product of &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;, which is calculated using the following formula:  &#xA;  &#xA; &lt;c&gt;vector1.X * vector2.X + vector1.Y * vector2.Y&lt;/c&gt;">傳回 <see cref="T:System.Double" />，包含 <paramref name="vector1" /> 與 <paramref name="vector2" /> 的純量點積，這是使用下列公式計算而來： 
 <c>vector1.X * vector2.X + vector1.Y * vector2.Y</c></returns>
    </member>
    <member name="M:System.Windows.Vector.op_Subtraction(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Subtracts one specified vector from another.">將某個指定的向量減去另一個指定的向量。</summary>
      <param name="vector1" vsli:raw="The vector from which &lt;paramref name=&quot;vector2&quot; /&gt; is subtracted.">要減去 <paramref name="vector2" /> 的向量。</param>
      <param name="vector2" vsli:raw="The vector to subtract from &lt;paramref name=&quot;vector1&quot; /&gt;.">要從 <paramref name="vector1" /> 減去的向量。</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;.">
        <paramref name="vector1" /> 與 <paramref name="vector2" /> 之間的差數。</returns>
    </member>
    <member name="M:System.Windows.Vector.op_UnaryNegation(System.Windows.Vector)">
      <summary vsli:raw="Negates the specified vector.">將指定的向量變換正負號。</summary>
      <param name="vector" vsli:raw="The vector to negate.">要變換正負號的向量。</param>
      <returns vsli:raw="A vector with &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values opposite of the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values of &lt;paramref name=&quot;vector&quot; /&gt;.">
        <see cref="P:System.Windows.Vector.X" /> 和 <see cref="P:System.Windows.Vector.Y" /> 值與 <paramref name="vector" /> 的 <see cref="P:System.Windows.Vector.X" /> 和 <see cref="P:System.Windows.Vector.Y" /> 值正負號相反的向量。</returns>
    </member>
    <member name="M:System.Windows.Vector.Parse(System.String)">
      <summary vsli:raw="Converts a string representation of a vector into the equivalent &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure.">將向量的字串表示轉換為對等的 <see cref="T:System.Windows.Vector" /> 結構。</summary>
      <param name="source" vsli:raw="The string representation of the vector.">向量的字串表示。</param>
      <returns vsli:raw="The equivalent &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure.">對等的 <see cref="T:System.Windows.Vector" /> 結構。</returns>
    </member>
    <member name="M:System.Windows.Vector.Subtract(System.Windows.Vector,System.Windows.Vector)">
      <summary vsli:raw="Subtracts the specified vector from another specified vector.">將指定的向量從另一個指定的向量減去。</summary>
      <param name="vector1" vsli:raw="The vector from which &lt;paramref name=&quot;vector2&quot; /&gt; is subtracted.">要減去 <paramref name="vector2" /> 的向量。</param>
      <param name="vector2" vsli:raw="The vector to subtract from &lt;paramref name=&quot;vector1&quot; /&gt;.">要從 <paramref name="vector1" /> 減去的向量。</param>
      <returns vsli:raw="The difference between &lt;paramref name=&quot;vector1&quot; /&gt; and &lt;paramref name=&quot;vector2&quot; /&gt;.">
        <paramref name="vector1" /> 與 <paramref name="vector2" /> 之間的差數。</returns>
    </member>
    <member name="M:System.Windows.Vector.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary vsli:raw="This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. For a description of this member, see &lt;see cref=&quot;M:System.IFormattable.ToString(System.String,System.IFormatProvider)&quot; /&gt;.">這個成員支援 Windows Presentation Foundation (WPF) 基礎結構，但是您不可以從程式碼直接使用它。 如需這個成員的說明，請參閱 <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />。</summary>
      <param name="format" vsli:raw="The string specifying the format to use.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; to use the default format defined for the type of the &lt;see cref=&quot;T:System.IFormattable&quot; /&gt; implementation.">指定要使用之格式的字串。  
-或- 
 <see langword="null" />，使用定義給 <see cref="T:System.IFormattable" /> 實作 (Implementation) 類型的預設格式。</param>
      <param name="provider" vsli:raw="The &lt;see langword=&quot;IFormatProvider&quot; /&gt; to use to format the value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; to obtain the numeric format information from the current locale setting of the operating system.">
        <see langword="IFormatProvider" />，用來格式化數值。  
-或- 
<see langword="null" />，用來從作業系統的目前地區設定 (Locale) 取得數值格式資訊。</param>
      <returns vsli:raw="A string containing the value of the current instance in the specified format.">字串，包含目前執行個體的值，且該值採用指定的格式。</returns>
    </member>
    <member name="M:System.Windows.Vector.ToString">
      <summary vsli:raw="Returns the string representation of this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure.">傳回這個 <see cref="T:System.Windows.Vector" /> 結構的字串表示。</summary>
      <returns vsli:raw="A string that represents the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">字串，表示這個 <see cref="P:System.Windows.Vector.X" /> 的 <see cref="P:System.Windows.Vector.Y" /> 和 <see cref="T:System.Windows.Vector" /> 值。</returns>
    </member>
    <member name="M:System.Windows.Vector.ToString(System.IFormatProvider)">
      <summary vsli:raw="Returns the string representation of this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure with the specified formatting information.">使用指定的格式資訊，傳回這個 <see cref="T:System.Windows.Vector" /> 結構的字串表示。</summary>
      <param name="provider" vsli:raw="The culture-specific formatting information.">特定文化特性的格式資訊。</param>
      <returns vsli:raw="A string that represents the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; and &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; values of this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">字串，表示這個 <see cref="P:System.Windows.Vector.X" /> 的 <see cref="P:System.Windows.Vector.Y" /> 和 <see cref="T:System.Windows.Vector" /> 值。</returns>
    </member>
    <member name="P:System.Windows.Vector.X">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; component of this vector.">取得或設定這個向量的 <see cref="P:System.Windows.Vector.X" /> 元件。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Windows.Vector.X&quot; /&gt; component of this vector. The default value is 0.">這個向量的 <see cref="P:System.Windows.Vector.X" /> 元件。 預設值為 0。</returns>
    </member>
    <member name="P:System.Windows.Vector.Y">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; component of this vector.">取得或設定這個向量的 <see cref="P:System.Windows.Vector.Y" /> 元件。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Windows.Vector.Y&quot; /&gt; component of this vector. The default value is 0.">這個向量的 <see cref="P:System.Windows.Vector.Y" /> 元件。 預設值為 0。</returns>
    </member>
    <member name="T:System.Windows.VectorConverter">
      <summary vsli:raw="Converts instances of other types to and from a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">在其他型別的執行個體和 <see cref="T:System.Windows.Vector" /> 之間來回轉換。</summary>
    </member>
    <member name="M:System.Windows.VectorConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; structure.">初始化 <see cref="T:System.Windows.Vector" /> 結構的新執行個體。</summary>
    </member>
    <member name="M:System.Windows.VectorConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Indicates whether an object can be converted from a given type to an instance of a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">指出物件是否可從指定的型別轉換為 <see cref="T:System.Windows.Vector" /> 的執行個體。</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">描述類型的內容資訊。</param>
      <param name="sourceType" vsli:raw="The source &lt;see cref=&quot;T:System.Type&quot; /&gt; that is being queried for conversion support.">查詢是否支援轉換的來源 <see cref="T:System.Type" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if objects of the specified type can be converted to a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定之型別的物件可以轉換成 <see cref="T:System.Windows.Vector" /> 則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.VectorConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether instances of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; can be converted to the specified type.">判斷 <see cref="T:System.Windows.Vector" /> 的執行個體是否可轉換為指定的型別。</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">描述類型的內容資訊。</param>
      <param name="destinationType" vsli:raw="The desired type this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; is being evaluated for conversion.">要評估這個 <see cref="T:System.Windows.Vector" /> 是否能轉換到的型別。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if instances of &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; can be converted to &lt;paramref name=&quot;destinationType&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Windows.Vector" /> 的執行個體可以轉換成 <paramref name="destinationType" /> 則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.VectorConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts the specified object to a &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">將指定物件轉換為 <see cref="T:System.Windows.Vector" />。</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">描述類型的內容資訊。</param>
      <param name="culture" vsli:raw="Describes the &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; of the type being converted.">描述正要轉換之型別的 <see cref="T:System.Globalization.CultureInfo" />。</param>
      <param name="value" vsli:raw="The object being converted.">要轉換的物件。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; created from converting &lt;paramref name=&quot;value&quot; /&gt;.">轉換 <paramref name="value" /> 時建立的 <see cref="T:System.Windows.Vector" />。</returns>
    </member>
    <member name="M:System.Windows.VectorConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts the specified &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; to the specified type.">將指定的 <see cref="T:System.Windows.Vector" /> 轉換為指定的型別。</summary>
      <param name="context" vsli:raw="Describes the context information of a type.">描述類型的內容資訊。</param>
      <param name="culture" vsli:raw="Describes the &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; of the type being converted.">描述正要轉換之型別的 <see cref="T:System.Globalization.CultureInfo" />。</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; to convert.">要進行轉換的 <see cref="T:System.Windows.Vector" />。</param>
      <param name="destinationType" vsli:raw="The type to convert this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt; to.">要將這個 <see cref="T:System.Windows.Vector" /> 轉換成的型別。</param>
      <returns vsli:raw="The object created from converting this &lt;see cref=&quot;T:System.Windows.Vector&quot; /&gt;.">轉換這個 <see cref="T:System.Windows.Vector" /> 時建立的物件。</returns>
    </member>
    <member name="T:System.Windows.WeakEventManager">
      <summary vsli:raw="Provides a base class for the event manager that is used in the weak event pattern. The manager adds and removes listeners for events (or callbacks) that also use the pattern.">為「弱式事件模式」中所使用的事件管理員提供基底類別。 管理員會針對也使用該模式的事件 (或回呼) 加入或移除接聽程式。</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.#ctor">
      <summary vsli:raw="Initializes base class values when it is used as the initializer by the constructor of a derived class.">由衍生類別的建構函式當做初始設定式使用時，初始化基底類別值。</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)">
      <summary vsli:raw="Delivers the event being managed to each listener.">將受管理的事件傳遞給每一個接聽程式。</summary>
      <param name="sender" vsli:raw="The object on which the event is being handled.">正在其上處理事件的物件。</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data for the event to deliver.">
        <see cref="T:System.EventArgs" />，包含要傳遞之事件的事件資料。</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)">
      <summary vsli:raw="Delivers the event being managed to each listener in the provided list.">將受管理的事件傳遞給所提供清單中的每一個接聽程式。</summary>
      <param name="sender" vsli:raw="The object on which the event is being handled.">正在其上處理事件的物件。</param>
      <param name="args" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
      <param name="list" vsli:raw="The provided &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">提供的 <see cref="T:System.Windows.WeakEventManager.ListenerList" />。</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.GetCurrentManager(System.Type)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation that is used for the provided type.">傳回用於所提供型別的 <see cref="T:System.Windows.WeakEventManager" /> 實作。</summary>
      <param name="managerType" vsli:raw="The type to obtain the &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; for.">要取得其 <see cref="T:System.Windows.WeakEventManager" /> 的型別。</param>
      <returns vsli:raw="The matching &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; implementation.">相符的 <see cref="T:System.Windows.WeakEventManager" /> 實作。</returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.Item(System.Object)">
      <summary vsli:raw="Gets or sets the data being stored for the specified source.">取得或設定要為指定的來源儲存的資料。</summary>
      <param name="source" vsli:raw="The zero-based index of the requested source.">所要求來源之以零為起始的索引。</param>
      <returns vsli:raw="Data being stored by the manager for this source.">管理員為此來源儲存的資料。</returns>
    </member>
    <member name="T:System.Windows.WeakEventManager.ListenerList">
      <summary vsli:raw="Provides a built-in collection list for storing listeners for a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt;.">提供內建的集合清單以用於儲存 <see cref="T:System.Windows.WeakEventManager" /> 的接聽程式。</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; class.">初始化 <see cref="T:System.Windows.WeakEventManager.ListenerList" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; class with the specified initial capacity.">使用指定的初始容量，初始化 <see cref="T:System.Windows.WeakEventManager.ListenerList" /> 類別的新執行個體。</summary>
      <param name="capacity" vsli:raw="The number of items that should be allocated in the initial list.">初始清單中應該配置的項目數目。</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.Add(System.Windows.IWeakEventListener)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Windows.IWeakEventListener&quot; /&gt; object to the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">將 <see cref="T:System.Windows.IWeakEventListener" /> 物件加入至 <see cref="T:System.Windows.WeakEventManager.ListenerList" />。</summary>
      <param name="listener" vsli:raw="The listener element to add to the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">要加入至 <see cref="T:System.Windows.WeakEventManager.ListenerList" /> 的接聽程式項目。</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.AddHandler(System.Delegate)">
      <summary vsli:raw="Adds an event handler to the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">將事件處理常式加入至 <see cref="T:System.Windows.WeakEventManager.ListenerList" />。</summary>
      <param name="handler" vsli:raw="The event handler to add to the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">要加入至 <see cref="T:System.Windows.WeakEventManager.ListenerList" /> 的事件處理常式。</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.BeginUse">
      <summary vsli:raw="Declares the list to be in use. This prevents direct changes to the list during iterations of the list items.">宣告清單為使用中。 這樣可避免在清單項目重覆時對清單做出直接變更。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the list was already declared to be in use; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果已經宣告清單為使用中則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.Clone">
      <summary vsli:raw="Creates a modifiable clone of this &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">建立這個 <see cref="T:System.Windows.WeakEventManager.ListenerList" /> 的可修改複製品。</summary>
      <returns vsli:raw="A modifiable clone of the current object.">目前物件的可修改複本。</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.CopyTo(System.Windows.WeakEventManager.ListenerList)">
      <summary vsli:raw="Copies the current &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; to the specified &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">將目前的 <see cref="T:System.Windows.WeakEventManager.ListenerList" /> 複製到指定的 <see cref="T:System.Windows.WeakEventManager.ListenerList" />。</summary>
      <param name="newList" vsli:raw="The object to copy to.">要做為複製目標的物件。</param>
    </member>
    <member name="P:System.Windows.WeakEventManager.ListenerList.Count">
      <summary vsli:raw="Gets the number of items contained in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">取得 <see cref="T:System.Windows.WeakEventManager.ListenerList" /> 中所含的項目數。</summary>
      <returns vsli:raw="The number of items contained in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">
        <see cref="T:System.Windows.WeakEventManager.ListenerList" /> 中所含的項目數。</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.DeliverEvent(System.Object,System.EventArgs,System.Type)">
      <summary vsli:raw="Delivers the event being managed to each listener in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">將受管理的事件傳遞給 <see cref="T:System.Windows.WeakEventManager.ListenerList" /> 中的每一個接聽程式。</summary>
      <param name="sender" vsli:raw="The object that raised the event.">引發事件的物件。</param>
      <param name="args" vsli:raw="An object that contains the event data.">包含事件資料的物件。</param>
      <param name="managerType" vsli:raw="The type of the &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; that calls this method.">呼叫這個方法的 <see cref="T:System.Windows.WeakEventManager" /> 的型別。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any of the listeners in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; refer to an object that has been garbage collected; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果在 <see cref="T:System.Windows.WeakEventManager.ListenerList" /> 中有任何接聽程式會參考已記憶體回收的物件，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.ListenerList.Empty">
      <summary vsli:raw="Gets a value that represents an empty list for purposes of comparisons.">取得值，這個值表示用於比較的空白清單。</summary>
      <returns vsli:raw="The empty list representation.">空白清單表示。</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.EndUse">
      <summary vsli:raw="Unlocks the locked state initiated by &lt;see cref=&quot;M:System.Windows.WeakEventManager.ListenerList.BeginUse&quot; /&gt;.">解除鎖定 <see cref="M:System.Windows.WeakEventManager.ListenerList.BeginUse" /> 所初始化的鎖定狀態。</summary>
    </member>
    <member name="P:System.Windows.WeakEventManager.ListenerList.IsEmpty">
      <summary vsli:raw="Gets a value that declares whether this &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; is empty.">取得值，宣告這個 <see cref="T:System.Windows.WeakEventManager.ListenerList" /> 是否為空白。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the list is empty; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果該清單為空則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.ListenerList.Item(System.Int32)">
      <summary vsli:raw="Gets or sets a specific listener item in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; .">取得或設定 <see cref="T:System.Windows.WeakEventManager.ListenerList" /> 中的指定接聽程式項目。</summary>
      <param name="index" vsli:raw="The zero-based index of the listener in the list.">清單中接聽程式之以零起始的索引。</param>
      <returns vsli:raw="The item at that index, or a null reference if no item was at that index.">位於該索引中的項目，如果該索引中沒有任何項目則為 null 參考。</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.PrepareForWriting(System.Windows.WeakEventManager.ListenerList@)">
      <summary vsli:raw="Checks to see whether the provided list is in use, and if so, sets the list reference parameter to a copy of that list rather than the original.">查看提供的清單是否為使用中，如果為使用中則將清單參考參數設定成清單複本，而不是原始清單。</summary>
      <param name="list" vsli:raw="The list to check for use state and potentially copy.">要查看使用狀態並且可能複製的清單。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the provided list was in use at the time of call and therefore the &lt;paramref name=&quot;list&quot; /&gt; parameter reference was reset to be a copy. &lt;see langword=&quot;false&quot; /&gt; if the provided list was not in use, in which case the &lt;paramref name=&quot;list&quot; /&gt; parameter reference remains unaltered.">如果提供的清單在呼叫期間為使用中，而且 <paramref name="list" /> 參數參考已重設為複本，則為 <see langword="true" />。 如果提供的清單不在使用中，而 <paramref name="list" /> 參數參考也保持不變，則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.Purge">
      <summary vsli:raw="Removes all entries from the list where the underlying reference target is a null reference.">將基礎參考目標為 null 參考之清單中的所有項目移除。</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if any entries were purged; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果已清除任何項目則傳回 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.Remove(System.Windows.IWeakEventListener)">
      <summary vsli:raw="Removes the first occurrence of a listener item from the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">從 <see cref="T:System.Windows.WeakEventManager.ListenerList" /> 移除第一個相符的接聽程式項目。</summary>
      <param name="listener" vsli:raw="The item to remove.">要移除的項目。</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList.RemoveHandler(System.Delegate)">
      <summary vsli:raw="Removes an event handler from the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">從 <see cref="T:System.Windows.WeakEventManager.ListenerList" /> 移除事件處理常式。</summary>
      <param name="handler" vsli:raw="The event handler to remove from the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;.">要從 <see cref="T:System.Windows.WeakEventManager.ListenerList" /> 移除的事件處理常式。</param>
    </member>
    <member name="T:System.Windows.WeakEventManager.ListenerList`1">
      <summary vsli:raw="Provides a type-safe collection list for storing listeners for a &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt;. This class defines a type parameter for the event data that is used.">提供型別安全集合清單以用於儲存 <see cref="T:System.Windows.WeakEventManager" /> 的接聽程式。 這個類別會為所使用的事件資料定義型別參數。</summary>
      <typeparam name="TEventArgs" vsli:raw="The type that holds the event data.">保留事件資料的型別。</typeparam>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList`1.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList`1&quot; /&gt; class.">初始化 <see cref="T:System.Windows.WeakEventManager.ListenerList`1" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList`1.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList`1&quot; /&gt; class with the specified initial capacity.">使用指定的初始容量，初始化 <see cref="T:System.Windows.WeakEventManager.ListenerList`1" /> 類別的新執行個體。</summary>
      <param name="capacity" vsli:raw="The number of items that should be allocated in the initial list.">初始清單中應該配置的項目數目。</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList`1.Clone">
      <summary vsli:raw="Creates a modifiable clone of this &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt;, making deep copies of the values.">建立這個 <see cref="T:System.Windows.WeakEventManager.ListenerList" /> 的可修改複製品，製作該值的深層複本。</summary>
      <returns vsli:raw="A modifiable clone of the current object. The cloned object's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property will be &lt;see langword=&quot;false&quot; /&gt; even if the source's &lt;see cref=&quot;P:System.Windows.Freezable.IsFrozen&quot; /&gt; property was &lt;see langword=&quot;true&quot; /&gt;.">目前物件的可修改複本。 即使來源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 屬性為 <see langword="false" />，複製物件的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 屬性將仍為 <see langword="true" />。</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ListenerList`1.DeliverEvent(System.Object,System.EventArgs,System.Type)">
      <summary vsli:raw="Delivers the event being managed to each listener in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList`1&quot; /&gt;.">將受管理的事件傳遞給 <see cref="T:System.Windows.WeakEventManager.ListenerList`1" /> 中的每一個接聽程式。</summary>
      <param name="sender" vsli:raw="The object that raised the event.">引發事件的物件。</param>
      <param name="e" vsli:raw="An object that contains the event data.">包含事件資料的物件。</param>
      <param name="managerType" vsli:raw="The type of the &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; that calls this method.">呼叫這個方法的 <see cref="T:System.Windows.WeakEventManager" /> 的型別。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any of the listeners in the &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList`1&quot; /&gt; refer to an object that has been garbage collected; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果在 <see cref="T:System.Windows.WeakEventManager.ListenerList`1" /> 中有任何接聽程式會參考已記憶體回收的物件，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to an event.">傳回新的物件，包含事件的接聽程式。</summary>
      <returns vsli:raw="A new object to contain listeners to an event.">包含事件之接聽程式的新物件。</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.ProtectedAddHandler(System.Object,System.Delegate)">
      <summary vsli:raw="Adds the specified delegate as an event handler of the specified source.">加入指定的委派做為指定之來源的事件處理常式。</summary>
      <param name="source" vsli:raw="The source object that the handler delegate subscribes to.">處理常式委派所訂閱的來源物件。</param>
      <param name="handler" vsli:raw="The delegate that handles the event that is raised by &lt;paramref name=&quot;source&quot; /&gt;.">處理 <paramref name="source" /> 引發事件的委派。</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ProtectedAddListener(System.Object,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Adds the provided listener to the provided source for the event being managed.">將提供的接聽程式加入至所提供的受管理事件來源。</summary>
      <param name="source" vsli:raw="The source to attach listeners to.">要附加接聽程式的目標來源。</param>
      <param name="listener" vsli:raw="The listening class (which must implement &lt;see cref=&quot;T:System.Windows.IWeakEventListener&quot; /&gt;).">接聽的類別 (必須實作 <see cref="T:System.Windows.IWeakEventListener" />)。</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ProtectedRemoveHandler(System.Object,System.Delegate)">
      <summary vsli:raw="Removes the previously added handler from the specified source.">從指定的來源移除先前新增的處理常式。</summary>
      <param name="source" vsli:raw="The source to remove the handler from.">要從中移除處理常式的來源。</param>
      <param name="handler" vsli:raw="The delegate to remove from &lt;paramref name=&quot;source&quot; /&gt;.">要從 <paramref name="source" /> 移除的委派。</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ProtectedRemoveListener(System.Object,System.Windows.IWeakEventListener)">
      <summary vsli:raw="Removes a previously added listener from the provided source.">從提供的來源移除先前加入的接聽程式。</summary>
      <param name="source" vsli:raw="The source to remove listeners from.">要從中移除接聽程式的來源。</param>
      <param name="listener" vsli:raw="The listening class (which must implement &lt;see cref=&quot;T:System.Windows.IWeakEventListener&quot; /&gt;).">接聽的類別 (必須實作 <see cref="T:System.Windows.IWeakEventListener" />)。</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.Purge(System.Object,System.Object,System.Boolean)">
      <summary vsli:raw="Removes inactive listener entries from the data list for the provided source. Returns &lt;see langword=&quot;true&quot; /&gt; if some entries were actually removed from the list.">從所提供來源的資料清單中移除非現用接聽程式項目。 如果從清單中實際移除了一些項目，則會傳回 <see langword="true" />。</summary>
      <param name="source" vsli:raw="The source for events being listened to.">正在接聽之事件的來源。</param>
      <param name="data" vsli:raw="The data to check. This object is expected to be a &lt;see cref=&quot;T:System.Windows.WeakEventManager.ListenerList&quot; /&gt; implementation.">要檢查的資料。 這個物件必須是 <see cref="T:System.Windows.WeakEventManager.ListenerList" /> 實作。</param>
      <param name="purgeAll" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to stop listening to &lt;paramref name=&quot;source&quot; /&gt;, and completely remove all entries from &lt;paramref name=&quot;data&quot; /&gt;.">
        <see langword="true" /> 表示停止接聽 <paramref name="source" />，並完全移除 <paramref name="data" /> 中的所有項目。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if some entries were actually removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果已實際移除某些項目則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.WeakEventManager.ReadLock">
      <summary vsli:raw="Establishes a read-lock on the underlying data table, and returns an &lt;see cref=&quot;T:System.IDisposable&quot; /&gt;.">在基礎資料表上建立讀取鎖定，並傳回 <see cref="T:System.IDisposable" />。</summary>
      <returns vsli:raw="An object that can be used to establish a lock on the data table members and then be appropriately disposed with a &lt;see langword=&quot;using&quot; /&gt; construct.">物件，可用來在資料表成員上建立鎖定，然後以 <see langword="using" /> 建構適當處置。</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager.Remove(System.Object)">
      <summary vsli:raw="Removes all listeners for the specified source.">移除指定來源的所有接聽程式。</summary>
      <param name="source" vsli:raw="The source to remove listener information for.">要移除其接聽程式資訊的來源。</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.ScheduleCleanup">
      <summary vsli:raw="Requests that a purge of unused entries in the underlying listener list be performed on a lower priority thread.">要求在較低優先權執行緒上執行基礎接聽程式清單中未使用項目的清除動作。</summary>
    </member>
    <member name="M:System.Windows.WeakEventManager.SetCurrentManager(System.Type,System.Windows.WeakEventManager)">
      <summary vsli:raw="Sets the current manager for the specified manager type.">為指定管理員型別設定目前管理員。</summary>
      <param name="managerType" vsli:raw="The type to set the new event manager.">要用來設定新事件管理員的型別。</param>
      <param name="manager" vsli:raw="The new event manager.">新的事件管理員。</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.StartListening(System.Object)">
      <summary vsli:raw="When overridden in a derived class, starts listening for the event being managed. After the &lt;see cref=&quot;M:System.Windows.WeakEventManager.StartListening(System.Object)&quot; /&gt; method is first called, the manager should be in the state of calling &lt;see cref=&quot;M:System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)&quot; /&gt; or &lt;see cref=&quot;M:System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)&quot; /&gt; whenever the relevant event from the provided source is handled.">在衍生類別中覆寫時，開始接聽受管理的事件。 在最初呼叫 <see cref="M:System.Windows.WeakEventManager.StartListening(System.Object)" /> 方法之後，每當處理了所提供來源中的相關事件時，管理員都應處於呼叫 <see cref="M:System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)" /> 或 <see cref="M:System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)" /> 的狀態。</summary>
      <param name="source" vsli:raw="The source to begin listening on.">要開始接聽的來源。</param>
    </member>
    <member name="M:System.Windows.WeakEventManager.StopListening(System.Object)">
      <summary vsli:raw="When overridden in a derived class, stops listening on the provided source for the event being managed.">在衍生類別中覆寫時，停止在所提供來源上接聽受管理的事件。</summary>
      <param name="source" vsli:raw="The source to stop listening on.">要停止接聽的來源。</param>
    </member>
    <member name="P:System.Windows.WeakEventManager.WriteLock">
      <summary vsli:raw="Establishes a write-lock on the underlying data table, and returns an &lt;see cref=&quot;T:System.IDisposable&quot; /&gt;.">在基礎資料表上建立寫入鎖定，並傳回 <see cref="T:System.IDisposable" />。</summary>
      <returns vsli:raw="An object that can be used to establish a lock on the data table members and then be appropriately disposed with a &lt;see langword=&quot;using&quot; /&gt; construct.">物件，可用來在資料表成員上建立鎖定，然後以 <see langword="using" /> 建構適當處置。</returns>
    </member>
    <member name="T:System.Windows.WeakEventManager`2">
      <summary vsli:raw="Provides a type-safe &lt;see cref=&quot;T:System.Windows.WeakEventManager&quot; /&gt; that enables you to specify the event handler to use for the &quot;weak event listener&quot; pattern. This class defines a type parameter for the source of the event and a type parameter for the event data that is used.">提供型別安全的 <see cref="T:System.Windows.WeakEventManager" />，讓您指定要用於「弱式事件接聽程式」(Weak Event Listener) 模式的事件接聽程式。 這個類別會為事件的來源定義型別參數，以及為所使用的事件資料定義型別參數。</summary>
      <typeparam name="TEventSource" vsli:raw="The type that raises the event.">引發事件的型別。</typeparam>
      <typeparam name="TEventArgs" vsli:raw="The type that holds the event data.">保留事件資料的型別。</typeparam>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.AddHandler(`0,System.String,System.EventHandler{`1})">
      <summary vsli:raw="Adds the specified event handler to the specified event.">將指定的事件處理常式加入至指定的事件。</summary>
      <param name="source" vsli:raw="The source object that raises the specified event.">引發指定事件的來源物件。</param>
      <param name="eventName" vsli:raw="The name of the event to subscribe to.">要訂閱的事件的名稱。</param>
      <param name="handler" vsli:raw="The delegate that handles the event.">處理事件的委派。</param>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.NewListenerList">
      <summary vsli:raw="Returns a new object to contain listeners to an event.">傳回新的物件，包含事件的接聽程式。</summary>
      <returns vsli:raw="A new object to contain listeners to an event.">包含事件之接聽程式的新物件。</returns>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.RemoveHandler(`0,System.String,System.EventHandler{`1})">
      <summary vsli:raw="Removes the specified event handler from the specified event.">從指定的事件中移除指定的事件處理常式。</summary>
      <param name="source" vsli:raw="The source object that raises the specified event.">引發指定事件的來源物件。</param>
      <param name="eventName" vsli:raw="The name of the event to remove the handler from.">要從處理常式中移除的事件的名稱。</param>
      <param name="handler" vsli:raw="The delegate to remove.">要移除的委派。</param>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.StartListening(System.Object)">
      <summary vsli:raw="Starts listening for the event on the specified object.">開始接聽指定之物件上的事件。</summary>
      <param name="source" vsli:raw="The object to that raises the event.">要對其引發事件的物件。</param>
    </member>
    <member name="M:System.Windows.WeakEventManager`2.StopListening(System.Object)">
      <summary vsli:raw="Stops listening for the event on the specified object.">停止接聽指定之物件上的事件。</summary>
      <param name="source" vsli:raw="The object to that raises the event.">要對其引發事件的物件。</param>
    </member>
  </members>
</doc>