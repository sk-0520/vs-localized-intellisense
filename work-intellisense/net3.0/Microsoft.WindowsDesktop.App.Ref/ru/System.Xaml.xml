<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Xaml</name>
  </assembly>
  <members>
    <member name="T:System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute">
      <summary vsli:raw="Notates types for legacy reporting of XAML markup extension characteristics.">Указывает типы для устаревших отчетов по характеристикам расширения разметки XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute" />.</summary>
      <param name="type" vsli:raw="The return type that this attribute reports.">Возвращаемый тип, сообщаемый этим атрибутом.</param>
    </member>
    <member name="P:System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute.Type">
      <summary vsli:raw="Gets or sets the return type that this attribute reports.">Получает или задает возвращаемый тип, сообщаемый этим атрибутом.</summary>
      <returns vsli:raw="The return type that this attribute reports.">Возвращаемый тип, сообщаемый этим атрибутом.</returns>
    </member>
    <member name="T:System.Windows.Markup.AmbientAttribute">
      <summary vsli:raw="Specifies that a property or type should be treated as ambient. The ambient concept relates to how XAML processors determine type owners of members.">Указывает, что свойство или тип должны обрабатываться как свойство окружения. Концепция окружения относится к тому, как обработчики XAML определяют владельцев типов членов.</summary>
    </member>
    <member name="M:System.Windows.Markup.AmbientAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.AmbientAttribute&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.AmbientAttribute" />.</summary>
    </member>
    <member name="T:System.Windows.Markup.ArrayExtension">
      <summary vsli:raw="Implements &lt;see langword=&quot;x:Array&quot; /&gt; support for .NET XAML Services.">Реализует поддержку <see langword="x:Array" /> для служб .NET Framework XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ArrayExtension&quot; /&gt; class. This creates an empty array.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.ArrayExtension" />. Создает пустой массив.</summary>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.#ctor(System.Array)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ArrayExtension&quot; /&gt; class based on the provided raw array.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.ArrayExtension" /> на основе предоставленного необработанного массива.</summary>
      <param name="elements" vsli:raw="The array content that populates the created array.">Содержимое, которое заполняет созданный массив.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;elements&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="elements" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ArrayExtension&quot; /&gt; class and initializes the type of the array.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.ArrayExtension" /> и инициализирует тип массива.</summary>
      <param name="arrayType" vsli:raw="The object type of the new array.">Тип объекта нового массива.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;arrayType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="arrayType" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.AddChild(System.Object)">
      <summary vsli:raw="Appends the supplied object to the end of the array.">Добавляет предоставленный объект в конец массива.</summary>
      <param name="value" vsli:raw="The object to add to the end of the array.">Объект, который добавляется в конец массива.</param>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.AddText(System.String)">
      <summary vsli:raw="Adds a text node as a new array item.">Добавляет текстовый узел как новый элемент массива.</summary>
      <param name="text" vsli:raw="The text to add to the end of the array.">Текст, добавляемый в конец массива.</param>
    </member>
    <member name="P:System.Windows.Markup.ArrayExtension.Items">
      <summary vsli:raw="Gets the contents of the array. Settable in XAML through XAML collection syntax.">Получает содержимое массива. Можно задать в XAML посредством синтаксиса коллекции XAML.</summary>
      <returns vsli:raw="The array contents.">Содержимое массива.</returns>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.ProvideValue(System.IServiceProvider)">
      <summary vsli:raw="Returns an array that is sized to the number of objects supplied in the &lt;see cref=&quot;P:System.Windows.Markup.ArrayExtension.Items&quot; /&gt; values.">Возвращает массив, размер которого соответствует количеству объектов, предоставленных в значениях <see cref="P:System.Windows.Markup.ArrayExtension.Items" />.</summary>
      <param name="serviceProvider" vsli:raw="An object that can provide services for the markup extension.">Объект, способный предоставлять службы для расширения разметки.</param>
      <returns vsli:raw="The created array, or null.">Созданный массив или значение null.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Processed an array that did not provide a valid &lt;see cref=&quot;P:System.Windows.Markup.ArrayExtension.Type&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; There is a type mismatch between the declared &lt;see cref=&quot;P:System.Windows.Markup.ArrayExtension.Type&quot; /&gt; of the array and one or more of its &lt;see cref=&quot;P:System.Windows.Markup.ArrayExtension.Items&quot; /&gt; values.">Обработан массив, который не предоставил допустимый тип <see cref="P:System.Windows.Markup.ArrayExtension.Type" />.  

или - 
Несоответствие типов между объявленным типом <see cref="P:System.Windows.Markup.ArrayExtension.Type" /> массива и одним или более значениями его элементов <see cref="P:System.Windows.Markup.ArrayExtension.Items" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.ArrayExtension.Type">
      <summary vsli:raw="Gets or sets the type of array to be created when calling &lt;see cref=&quot;M:System.Windows.Markup.ArrayExtension.ProvideValue(System.IServiceProvider)&quot; /&gt;.">Получает или задает тип массива, создаваемого при вызове <see cref="M:System.Windows.Markup.ArrayExtension.ProvideValue(System.IServiceProvider)" />.</summary>
      <returns vsli:raw="The type of the array.">Тип массива.</returns>
    </member>
    <member name="T:System.Windows.Markup.ConstructorArgumentAttribute">
      <summary vsli:raw="Specifies that an object can be initialized by using a non-parameterless constructor syntax, and that a property of the specified name supplies construction information.  This information is primarily for XAML serialization.">Указывает, что объект может быть инициализирован с помощью синтаксиса конструктора, не являющегося конструктором без параметров, и что информация о конструкции предоставляется свойством указанного имени.  Эта информация предназначена главным образом для сериализации XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.ConstructorArgumentAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ConstructorArgumentAttribute&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.ConstructorArgumentAttribute" />.</summary>
      <param name="argumentName" vsli:raw="The name of the constructor that will initialize the associated property.">Имя конструктора, который будет инициализировать связанное свойство.</param>
    </member>
    <member name="P:System.Windows.Markup.ConstructorArgumentAttribute.ArgumentName">
      <summary vsli:raw="Gets the name parameter of the constructor that will initialize the associated property.">Получает имя параметра конструктора, который будет инициализировать связанное свойство.</summary>
      <returns vsli:raw="The name of the constructor. Assuming CLR backing, this corresponds to the &lt;see cref=&quot;P:System.Reflection.ParameterInfo.Name&quot; /&gt; of the relevant constructor parameter.">Имя конструктора. При резервировании среды CLR соответствует классу <see cref="P:System.Reflection.ParameterInfo.Name" /> подходящего параметра конструктора.</returns>
    </member>
    <member name="T:System.Windows.Markup.ContentPropertyAttribute">
      <summary vsli:raw="Indicates which property of a type is the XAML content property. A XAML processor uses this information when processing XAML child elements of XAML representations of the attributed type.">Показывает, какое свойство типа является свойством содержимого XAML. Обработчик XAML использует эту информацию, обрабатывая дочерние элементы XAML представлений XAML типа атрибута.</summary>
    </member>
    <member name="M:System.Windows.Markup.ContentPropertyAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ContentPropertyAttribute&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.ContentPropertyAttribute" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.ContentPropertyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ContentPropertyAttribute&quot; /&gt; class, by using the specified name.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.ContentPropertyAttribute" />, используя указанное имя.</summary>
      <param name="name" vsli:raw="The property name for the property that is the content property.">Имя свойства, которое является свойством содержимого.</param>
    </member>
    <member name="P:System.Windows.Markup.ContentPropertyAttribute.Name">
      <summary vsli:raw="Gets the name of the property that is the content property.">Получает или задает имя свойства, которое является свойством содержимого.</summary>
      <returns vsli:raw="The name of the property that is the content property.">Имя свойства, которое является свойством содержимого.</returns>
    </member>
    <member name="T:System.Windows.Markup.ContentWrapperAttribute">
      <summary vsli:raw="Specifies one or more types on the associated collection type that will be used to wrap foreign content.">Указывает один или несколько типов для типа связанной коллекции, которая будет использоваться как оболочка для внешнего содержимого.</summary>
    </member>
    <member name="M:System.Windows.Markup.ContentWrapperAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ContentWrapperAttribute&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.ContentWrapperAttribute" />.</summary>
      <param name="contentWrapper" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that is declared as a content wrapper for the collection type.">Тип <see cref="T:System.Type" />, объявленный как оболочка содержимого для типа коллекции.</param>
    </member>
    <member name="P:System.Windows.Markup.ContentWrapperAttribute.ContentWrapper">
      <summary vsli:raw="Gets the type that is declared as a content wrapper for the collection type associated with this attribute.">Возвращает тип, объявленный как оболочка содержимого для типа коллекции, связанного с этим атрибутом.</summary>
      <returns vsli:raw="The type that is declared as a content wrapper for the collection type.">Тип, объявленный как оболочка содержимого для типа коллекции.</returns>
    </member>
    <member name="M:System.Windows.Markup.ContentWrapperAttribute.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Markup.ContentWrapperAttribute&quot; /&gt; is equivalent this &lt;see cref=&quot;T:System.Windows.Markup.ContentWrapperAttribute&quot; /&gt; by comparing the &lt;see cref=&quot;P:System.Windows.Markup.ContentWrapperAttribute.ContentWrapper&quot; /&gt; properties.">Определяет, эквивалентен ли указанный атрибут <see cref="T:System.Windows.Markup.ContentWrapperAttribute" /> этому атрибуту <see cref="T:System.Windows.Markup.ContentWrapperAttribute" />, сравнивая свойства <see cref="P:System.Windows.Markup.ContentWrapperAttribute.ContentWrapper" />.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Markup.ContentWrapperAttribute&quot; /&gt; to compare.">Сравниваемый шаблон <see cref="T:System.Windows.Markup.ContentWrapperAttribute" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.Windows.Markup.ContentWrapperAttribute.ContentWrapper&quot; /&gt; properties are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если свойства <see cref="P:System.Windows.Markup.ContentWrapperAttribute.ContentWrapper" /> равны; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.ContentWrapperAttribute.GetHashCode">
      <summary vsli:raw="Gets a hash code for this instance.">Получает хэш-код для данного экземпляра.</summary>
      <returns vsli:raw="An integer hash code.">Целочисленный хэш-код.</returns>
    </member>
    <member name="P:System.Windows.Markup.ContentWrapperAttribute.TypeId">
      <summary vsli:raw="Gets a unique identifier for this attribute.">Возвращает уникальный идентификатор для этого атрибута.</summary>
      <returns vsli:raw="A unique identifier for the attribute.">Уникальный идентификатор для атрибута.</returns>
    </member>
    <member name="T:System.Windows.Markup.DateTimeValueSerializer">
      <summary vsli:raw="Converts instances of &lt;see cref=&quot;T:System.String&quot; /&gt; to and from instances of &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Преобразует экземпляры <see cref="T:System.String" /> в экземпляры <see cref="T:System.DateTime" /> и наоборот.</summary>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.DateTimeValueSerializer&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.DateTimeValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be convert to an instance of &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Определяет, можно ли преобразовать указанную строку <see cref="T:System.String" /> в экземпляр <see cref="T:System.DateTime" />.</summary>
      <param name="value" vsli:raw="The string to evaluate for conversion.">Строка, для которой требуется проверить возможность преобразования.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Контекстная информация, используемая при выполнении преобразования.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value can be converted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если значение можно преобразовать; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Determines if the specified object can be converted to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Определяет, можно ли преобразовать указанный объект в <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">Объект, для которого необходимо проверить возможность преобразования.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Контекстная информация, используемая при выполнении преобразования.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если <paramref name="value" /> можно преобразовать в <see cref="T:System.String" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; into a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Преобразует <see cref="T:System.String" /> в <see cref="T:System.DateTime" />.</summary>
      <param name="value" vsli:raw="The string to convert into a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Строка, преобразуемая в <see cref="T:System.DateTime" />.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Контекстная информация, используемая при выполнении преобразования.</param>
      <returns vsli:raw="A new instance of &lt;see cref=&quot;T:System.DateTime&quot; /&gt; based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Новый экземпляр класса <see cref="T:System.DateTime" /> на основе предоставленного параметра <paramref name="value" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Converts an instance of &lt;see cref=&quot;T:System.DateTime&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Преобразует экземпляр <see cref="T:System.DateTime" /> в <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to convert into a string.">Объект, преобразуемый в строку.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Контекстная информация, используемая при выполнении преобразования.</param>
      <returns vsli:raw="A string representation of the specified &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Строковое представление указанного <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is not a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; or is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> не является <see cref="T:System.DateTime" /> или является <see langword="null" />.</exception>
    </member>
    <member name="T:System.Windows.Markup.DependsOnAttribute">
      <summary vsli:raw="Indicates that the attributed property is dependent on the value of another property.">Указывает, что свойство с атрибутом зависит от значения другого свойства.</summary>
    </member>
    <member name="M:System.Windows.Markup.DependsOnAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.DependsOnAttribute&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.DependsOnAttribute" />.</summary>
      <param name="name" vsli:raw="The property that the property associated with this &lt;see cref=&quot;T:System.Windows.Markup.DependsOnAttribute&quot; /&gt; depends on.">Свойство, от которого зависит свойство, связанное с данным <see cref="T:System.Windows.Markup.DependsOnAttribute" />.</param>
    </member>
    <member name="P:System.Windows.Markup.DependsOnAttribute.Name">
      <summary vsli:raw="Gets the name of the related property declared in this &lt;see cref=&quot;T:System.Windows.Markup.DependsOnAttribute&quot; /&gt;.">Получает имя связанного свойства, объявленного в его классе <see cref="T:System.Windows.Markup.DependsOnAttribute" />.</summary>
      <returns vsli:raw="The name of the related property.">Имя связанного свойства.</returns>
    </member>
    <member name="P:System.Windows.Markup.DependsOnAttribute.TypeId">
      <summary vsli:raw="Gets a unique identifier for this &lt;see cref=&quot;T:System.Windows.Markup.DependsOnAttribute&quot; /&gt;.">Получает уникальный идентификатор для класса <see cref="T:System.Windows.Markup.DependsOnAttribute" />.</summary>
      <returns vsli:raw="The unique identifier.">Уникальный идентификатор.</returns>
    </member>
    <member name="T:System.Windows.Markup.DictionaryKeyPropertyAttribute">
      <summary vsli:raw="Specifies a property of the associated class that provides the implicit key value. Implicit keys are used for keys rather than explicit &lt;see langword=&quot;x:Key&quot; /&gt; attributes defined in XAML for an item in &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; collections.">Задает свойство связанного класса, который предоставляет значение неявного ключа. Неявные ключи используются в качестве ключей, а не в качестве явных атрибутов <see langword="x:Key" />, определенных в XAML для элементов коллекций <see cref="T:System.Collections.IDictionary" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.DictionaryKeyPropertyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.DictionaryKeyPropertyAttribute&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.DictionaryKeyPropertyAttribute" />.</summary>
      <param name="name" vsli:raw="The name of the property that provides the implicit key value.">Имя свойства, которое предоставляет значение неявного ключа.</param>
    </member>
    <member name="P:System.Windows.Markup.DictionaryKeyPropertyAttribute.Name">
      <summary vsli:raw="Gets the name of the property that provides the implicit key value.">Возвращает имя свойства, которое предоставляет значение неявного ключа.</summary>
      <returns vsli:raw="The name of the property that provides the implicit key value.">Имя свойства, которое предоставляет значение неявного ключа.</returns>
    </member>
    <member name="T:System.Windows.Markup.IComponentConnector">
      <summary vsli:raw="Provides markup compile and tools support for named XAML elements and for attaching event handlers to them.">Предоставляет поддержку компиляции разметки и соответствующих средств для именованных элементов XAML и для присоединения к ним обработчиков событий.</summary>
    </member>
    <member name="M:System.Windows.Markup.IComponentConnector.Connect(System.Int32,System.Object)">
      <summary vsli:raw="Attaches events and names to compiled content.">Присоединяет события и имена к скомпилированному содержимому.</summary>
      <param name="connectionId" vsli:raw="An identifier token to distinguish calls.">Токен идентификации, чтобы различать вызовы.</param>
      <param name="target" vsli:raw="The target to connect events and names to.">Целевой объект для подключения событий и имен.</param>
    </member>
    <member name="M:System.Windows.Markup.IComponentConnector.InitializeComponent">
      <summary vsli:raw="Loads the compiled page of a component.">Загружает откомпилированную страницу компонента.</summary>
    </member>
    <member name="T:System.Windows.Markup.INameScope">
      <summary vsli:raw="Defines a contract for how names of elements should be accessed within a particular XAML namescope, and how to enforce uniqueness of names within that XAML namescope.">Определяет контракт для способа доступа к именам элементов в определенной области имен XAML, а также способа обеспечения уникальности имен в этой области имен XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.INameScope.FindName(System.String)">
      <summary vsli:raw="Returns an object that has the provided identifying name.">Возвращает объект, имеющий предоставленное идентифицирующее имя.</summary>
      <param name="name" vsli:raw="The name identifier for the object being requested.">Идентификатор имени для запрашиваемого объекта.</param>
      <returns vsli:raw="The object, if found. Returns &lt;see langword=&quot;null&quot; /&gt; if no object of that name was found.">Данный объект, если он найден. Возвращает <see langword="null" />, если объект с таким именем не найден.</returns>
    </member>
    <member name="M:System.Windows.Markup.INameScope.RegisterName(System.String,System.Object)">
      <summary vsli:raw="Registers the provided name into the current XAML namescope.">Регистрирует предоставленное имя в текущей области имен XAML.</summary>
      <param name="name" vsli:raw="The name to register.">Регистрируемое имя.</param>
      <param name="scopedElement" vsli:raw="The specific element that the provided &lt;paramref name=&quot;name&quot; /&gt; refers to.">Элемент, на который ссылается предоставленное имя <paramref name="name" />.</param>
    </member>
    <member name="M:System.Windows.Markup.INameScope.UnregisterName(System.String)">
      <summary vsli:raw="Unregisters the provided name from the current XAML namescope.">Отменяет регистрацию предоставленного имени в текущей области имен XAML.</summary>
      <param name="name" vsli:raw="The name to unregister.">Имя, регистрация которого отменяется.</param>
    </member>
    <member name="T:System.Windows.Markup.INameScopeDictionary">
      <summary vsli:raw="Unifies enumerable, collection, and dictionary support that are useful for exposing a dictionary of names in a XAML namescope.">Унифицирует поддержку перечисляемых типов, коллекций и словарей, которые полезны для предоставления словаря имен в пространстве имен XAML.</summary>
    </member>
    <member name="T:System.Windows.Markup.IProvideValueTarget">
      <summary vsli:raw="Represents a service that reports situational object-property relationships for markup extension evaluation.">Представляет службу, которая сообщает информацию о ситуационных отношениях "объект-свойство" для оценки расширения разметки.</summary>
    </member>
    <member name="P:System.Windows.Markup.IProvideValueTarget.TargetObject">
      <summary vsli:raw="Gets the target object being reported.">Получает сообщаемый целевой объект.</summary>
      <returns vsli:raw="The target object being reported.">Сообщаемый целевой объект.</returns>
    </member>
    <member name="P:System.Windows.Markup.IProvideValueTarget.TargetProperty">
      <summary vsli:raw="Gets an identifier for the target property being reported.">Получает идентификатор сообщаемого целевого свойства.</summary>
      <returns vsli:raw="An identifier for the target property being reported.">Идентификатор сообщаемого целевого свойства.</returns>
    </member>
    <member name="T:System.Windows.Markup.IQueryAmbient">
      <summary vsli:raw="Queries for whether a specified property should be treated as ambient in the current scope.">Запрашивает, должно ли заданное свойство в текущей области обрабатываться как свойство окружения.</summary>
    </member>
    <member name="M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)">
      <summary vsli:raw="Queries for whether a specified named property can be considered ambient in the current scope.">Запрашивает, можно ли считать заданное именованное свойство в текущей области свойством окружения.</summary>
      <param name="propertyName" vsli:raw="The name of the property to check for ambience state.">Имя свойства, состояние окружения которого необходимо проверить.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the requested property can be considered ambient; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если запрашиваемое свойство можно считать свойством окружения; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Markup.IUriContext">
      <summary vsli:raw="Represents a service that can use application context to resolve a provided relative URI to an absolute URI.">Представляет службу, которая может использовать контекст приложения для разрешения предоставленного относительного URI в абсолютный URI.</summary>
    </member>
    <member name="P:System.Windows.Markup.IUriContext.BaseUri">
      <summary vsli:raw="Gets or sets the base URI of the current application context.">Возвращает или задает базовый универсальный идентификатор ресурса (URI) текущего контекста приложения.</summary>
      <returns vsli:raw="The base URI of the application context.">Базовый универсальный идентификатор ресурса (URI) контекста приложения.</returns>
    </member>
    <member name="T:System.Windows.Markup.IValueSerializerContext">
      <summary vsli:raw="Defines a context that is provided to a &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt;. The context can be used to enable special cases of serialization or different modes of serialization.">Определяет контекст, который предоставляется интерфейсу <see cref="T:System.Windows.Markup.ValueSerializer" />. Контекст может быть использован для разрешения особых случаев сериализации или других режимов сериализации.</summary>
    </member>
    <member name="M:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; for the given property descriptor.">Получает <see cref="T:System.Windows.Markup.ValueSerializer" /> для заданного дескриптора свойства.</summary>
      <param name="descriptor" vsli:raw="The descriptor of the property being converted.">Дескриптор преобразуемого свойства.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; capable of serializing the specified property.">
        <see cref="T:System.Windows.Markup.ValueSerializer" />, способный сериализовать заданное свойство.</returns>
    </member>
    <member name="M:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor(System.Type)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; associated with the specified type.">Получает <see cref="T:System.Windows.Markup.ValueSerializer" />, связанный с заданным типом.</summary>
      <param name="type" vsli:raw="The type of the value being converted.">Тип преобразуемого значения.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; capable of serializing the specified type.">
        <see cref="T:System.Windows.Markup.ValueSerializer" />, способный сериализовать заданный тип.</returns>
    </member>
    <member name="T:System.Windows.Markup.IXamlTypeResolver">
      <summary vsli:raw="Represents a service that resolves from named elements in XAML markup to the appropriate CLR type.">Представляет службу, которая преобразует именованные элементы разметки XAML в соответствующий тип среды CLR.</summary>
    </member>
    <member name="M:System.Windows.Markup.IXamlTypeResolver.Resolve(System.String)">
      <summary vsli:raw="Resolves a named XAML type to the corresponding CLR &lt;see cref=&quot;T:System.Type&quot; /&gt;.">Разрешает именованный тип XAML в соответствующий тип <see cref="T:System.Type" /> среды CLR.</summary>
      <param name="qualifiedTypeName" vsli:raw="The XAML type name to resolve. The type name is optionally qualified by the prefix for a XML namespace. Otherwise the current default XML namespace is assumed.">Имя разрешаемого типа XAML. Имя типа также определяется префиксом пространства имен XML. Иначе предполагается текущее пространство имен XML по умолчанию.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that &lt;paramref name=&quot;qualifiedTypeName&quot; /&gt; resolves to.">Класс <see cref="T:System.Type" />, в который разрешается параметр <paramref name="qualifiedTypeName" /></returns>
    </member>
    <member name="T:System.Windows.Markup.MarkupExtension">
      <summary vsli:raw="Provides a base class for XAML markup extension implementations that can be supported by .NET XAML Services and other XAML readers and XAML writers.">Предоставляет базовый класс для реализаций расширений разметки XAML, который может поддерживаться службами XAML платформы .NET Framework и другими средствами чтения и записи XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtension.#ctor">
      <summary vsli:raw="Initializes a new instance of a class derived from &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtension&quot; /&gt;.">Инициализирует новый экземпляр класса, производного от класса <see cref="T:System.Windows.Markup.MarkupExtension" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
      <summary vsli:raw="When implemented in a derived class, returns an object that is provided as the value of the target property for this markup extension.">При реализации в производном классе возвращает объект, предоставляемый как значение целевого свойства для данного расширения разметки.</summary>
      <param name="serviceProvider" vsli:raw="A service provider helper that can provide services for the markup extension.">Вспомогательный объект поставщика служб, способный предоставлять службы для расширения разметки.</param>
      <returns vsli:raw="The object value to set on the property where the extension is applied.">Значение объекта, которое необходимо присвоить свойству, где применяется расширение.</returns>
    </member>
    <member name="T:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute">
      <summary vsli:raw="Reports the bracket characters that a markup extension can return.">Сообщает символы скобок, которые может возвращать расширение разметки.</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute.#ctor(System.Char,System.Char)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute&quot; /&gt; class using the provided characters.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute" />, используя указанные символы.</summary>
      <param name="openingBracket" vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; that defines the opening bracket character.">Объект <see cref="T:System.Char" />, определяющий символ открывающей скобки.</param>
      <param name="closingBracket" vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; that defines the closing bracket character.">Объект <see cref="T:System.Char" />, определяющий символ закрывающей скобки.</param>
    </member>
    <member name="P:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute.ClosingBracket">
      <summary vsli:raw="Specifies the character to be used as the closing delimiter in a &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtension&quot; /&gt;.">Определяет символ, используемый как закрывающий разделитель в <see cref="T:System.Windows.Markup.MarkupExtension" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; representing the character.">Объект <see cref="T:System.Char" />, представляющий символ.</returns>
    </member>
    <member name="P:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute.OpeningBracket">
      <summary vsli:raw="Specifies the character to be used as the opening delimiter in a &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtension&quot; /&gt;.">Определяет символ, используемый как открывающий разделитель в <see cref="T:System.Windows.Markup.MarkupExtension" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Char&quot; /&gt; representing the character.">Объект <see cref="T:System.Char" />, представляющий символ.</returns>
    </member>
    <member name="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute">
      <summary vsli:raw="Reports the type that a markup extension can return.">Сообщает о типе, который может возвращать расширение разметки.</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute&quot; /&gt; class using the provided &lt;see cref=&quot;T:System.Type&quot; /&gt;.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute" /> с использованием предоставленного типа <see cref="T:System.Type" />.</summary>
      <param name="returnType" vsli:raw="The return type that this attribute reports.">Возвращаемый тип, сообщаемый этим атрибутом.</param>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.#ctor(System.Type,System.Type)">
      <summary vsli:raw="Deprecated; do not use.">Не рекомендуется; не использовать.</summary>
      <param name="returnType" vsli:raw="The return type that this  .NET Framework attribute reports.">Тип возвращаемого значения, о котором сообщает Атрибут .NET Framework.</param>
      <param name="expressionType" vsli:raw="Deprecated; do not use.">Не рекомендуется; не использовать.</param>
    </member>
    <member name="P:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.ExpressionType">
      <summary vsli:raw="Deprecated; do not use.">Не рекомендуется; не использовать.</summary>
      <returns vsli:raw="Deprecated; do not use.">Не рекомендуется; не использовать.</returns>
    </member>
    <member name="P:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.ReturnType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtension&quot; /&gt; return type that this .NET Framework attribute reports.">Получает возвращаемый тип <see cref="T:System.Windows.Markup.MarkupExtension" />, сообщаемый этим Атрибут .NET Framework.</summary>
      <returns vsli:raw="The type-safe return type of the specific &lt;see cref=&quot;M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)&quot; /&gt; implementation of the markup extension where the &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute&quot; /&gt; .NET Framework attribute is applied.">Типобезопасный возвращаемый тип конкретной реализации <see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /> расширения разметки, где применяется <see cref="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute" /> Атрибут .NET Framework .</returns>
    </member>
    <member name="T:System.Windows.Markup.MemberDefinition">
      <summary vsli:raw="Provides the base class that is used for a markup technique of defining members of a class in declarative XAML.">Предоставляет базовый класс, используемый для методики разметки, предназначенной для определения членов класса в декларативной XAML-разметке.</summary>
    </member>
    <member name="M:System.Windows.Markup.MemberDefinition.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.MemberDefinition&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.MemberDefinition" />.</summary>
    </member>
    <member name="P:System.Windows.Markup.MemberDefinition.Name">
      <summary vsli:raw="When implemented in a derived class, gets or sets the name of the member to define.">При реализации в производном классе получает или задает имя определяемого члена.</summary>
      <returns vsli:raw="The name of the member to define.">Имя определяемого члена.</returns>
    </member>
    <member name="T:System.Windows.Markup.NameReferenceConverter">
      <summary vsli:raw="Provides type conversion to convert a string name into an object reference to the object with that name, or to return the name of an object from the object graph.">Предоставляет преобразование типов для преобразования строкового имени в ссылку на объект с этим именем или для возврата имени объекта из графа объекта.</summary>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.NameReferenceConverter&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.NameReferenceConverter" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Returns whether this converter can convert an object of one type to another object.">Возвращает значение, указывающее, может ли данный преобразователь выполнять преобразование объекта одного типа в другой объект.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий контекст формата.</param>
      <param name="sourceType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the type you want to convert from.">Объект <see cref="T:System.Type" />, представляющий тип, из которого нужно выполнить преобразование.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this converter can perform the conversion; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Имеет значение <see langword="true" />, если преобразователь может выполнить преобразование, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Returns a value that indicates whether the converter can convert an object to the specified destination type.">Возвращает значение, указывающее, может ли данный преобразователь преобразовать объект в указанный тип назначения.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий контекст формата.</param>
      <param name="destinationType" vsli:raw="The type to convert to.">Целевой тип преобразования.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the converter can perform the conversion; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если преобразователь может выполнить преобразование; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts the provided object to another object, using the specified context and culture information.">Преобразует данный объект в другой объект, используя заданный контекст и сведения о языке и региональных параметрах.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий контекст формата.</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; to use as the current culture.">Объект <see cref="T:System.Globalization.CultureInfo" />, используемый в качестве текущего языка и региональных параметров.</param>
      <param name="value" vsli:raw="The reference name string to convert.">Строка имени ссылки для преобразования.</param>
      <returns vsli:raw="The returned object, which is potentially any object that is type-mapped in the relevant backing assemblies and capable of being declared in XAML with a XAML name reference.">Возвращаемый объект, которым может быть любой объект с сопоставлением типов в соответствующих резервных сборках, который может быть объявлен в XAML со ссылкой на XAML-имя.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is a null string or empty string.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see cref=&quot;T:System.Xaml.IXamlNameResolver&quot; /&gt; service is missing or invalid.">Значение <paramref name="value" /> равно строке null или пустой строке.  

или - 
Служба <see cref="T:System.Xaml.IXamlNameResolver" /> отсутствует или является недопустимой.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;context&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="context" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts an object to the specified type. This is intended to return XAML reference names for objects in an object graph.">Преобразовывает объект в указанный тип. Предназначен для возврата имен ссылок XAML для объектов в графе объекта.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that provides a format context.">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий контекст формата.</param>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; to use as the current culture.">Объект <see cref="T:System.Globalization.CultureInfo" />, используемый в качестве текущего языка и региональных параметров.</param>
      <param name="value" vsli:raw="The object to retrieve the reference name for.">Объект, для которого следует извлечь имя ссылки.</param>
      <param name="destinationType" vsli:raw="The type to return. You should always reference the &lt;see cref=&quot;T:System.String&quot; /&gt; type.">Возвращаемый тип. Следует всегда ссылаться на тип <see cref="T:System.String" />.</param>
      <returns vsli:raw="The reference name of the input &lt;paramref name=&quot;value&quot; /&gt; object.">Имя ссылки входного объекта <paramref name="value" />.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;T:System.Xaml.IXamlNameProvider&quot; /&gt; service is missing or invalid.">Служба <see cref="T:System.Xaml.IXamlNameProvider" /> отсутствует или является недопустимой.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;context&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="context" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="T:System.Windows.Markup.NameScopePropertyAttribute">
      <summary vsli:raw="Specifies a property of the associated class that provides the XAML namescope value.">Задает свойство связанного класса, который предоставляет значение пространства имен XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.NameScopePropertyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.NameScopePropertyAttribute&quot; /&gt; class with the specified name.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.NameScopePropertyAttribute" /> с указанным именем.</summary>
      <param name="name" vsli:raw="The name of the property on the attributed type that provides the XAML namescope.">Имя свойства для типа атрибута, который предоставляет пространство имен XAML.</param>
    </member>
    <member name="M:System.Windows.Markup.NameScopePropertyAttribute.#ctor(System.String,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.NameScopePropertyAttribute&quot; /&gt; class with the specified name and type.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.NameScopePropertyAttribute" /> с заданными именем и типом.</summary>
      <param name="name" vsli:raw="The name of the attachable member that provides the XAML name scope.">Имя присоединяемого элемента, который предоставляет область имен XAML.</param>
      <param name="type" vsli:raw="The owner type of the attachable member that provides the XAML name scope.">Тип владельца присоединяемого элемента, который предоставляет область имен XAML.</param>
    </member>
    <member name="P:System.Windows.Markup.NameScopePropertyAttribute.Name">
      <summary vsli:raw="Gets the name of the property that provides the XAML namescope.">Возвращает имя свойства, которое предоставляет пространство имен XAML.</summary>
      <returns vsli:raw="A string value that is the name of the property that provides the XAML namescope.">Строковое значение, являющееся именем свойства, которое предоставляет пространство имен XAML.</returns>
    </member>
    <member name="P:System.Windows.Markup.NameScopePropertyAttribute.Type">
      <summary vsli:raw="Gets the owner type of the attached property that provides the XAML namescope support.">Получает тип владельца вложенного свойства зависимостей, предоставляющего поддержку области имен XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; value that is the owner type of the attached property that provides the XAML namescope support, or &lt;see langword=&quot;null&quot; /&gt;.">Значение <see cref="T:System.Type" />, представляющее собой тип владельца вложенного свойства зависимостей, которое предоставляет поддержку области имен XAML, или значение <see langword="null" />.</returns>
    </member>
    <member name="T:System.Windows.Markup.NullExtension">
      <summary vsli:raw="Implements a XAML markup extension in order to return a null object, which you can use to explicitly set values to null in XAML.">Реализует расширение разметки XAML, чтобы вернуть объект со значением NULL, который можно использовать для явного задания значений NULL в XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.NullExtension.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.NullExtension&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.NullExtension" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.NullExtension.ProvideValue(System.IServiceProvider)">
      <summary vsli:raw="Provides &lt;see langword=&quot;null&quot; /&gt; to use as a value as the output of this markup extension.">Предоставляет значение <see langword="null" /> для использования в качестве выходного значения данного расширения разметки.</summary>
      <param name="serviceProvider" vsli:raw="An object that can provide services for the markup extension implementation.">Объект, способный предоставлять службы для реализации расширения разметки.</param>
      <returns vsli:raw="A null reference.">Пустая ссылка.</returns>
    </member>
    <member name="T:System.Windows.Markup.PropertyDefinition">
      <summary vsli:raw="Supports a markup technique of defining properties of a class in declarative XAML.">Поддерживает методику разметки, используемую для определения свойств класса в декларативной XAML-разметке.</summary>
    </member>
    <member name="M:System.Windows.Markup.PropertyDefinition.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.PropertyDefinition&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.PropertyDefinition" />.</summary>
    </member>
    <member name="P:System.Windows.Markup.PropertyDefinition.Attributes">
      <summary vsli:raw="Gets a list of associated CLR attributes.">Получает список связанных атрибутов среды CLR.</summary>
      <returns vsli:raw="A list of associated attributes.">Список связанных атрибутов.</returns>
    </member>
    <member name="P:System.Windows.Markup.PropertyDefinition.Modifier">
      <summary vsli:raw="Gets or sets the access level of the defined property.">Получает или задает уровень доступа определенного свойства.</summary>
      <returns vsli:raw="The access level of the defined property, as a string.">Уровень доступа определенного свойства в строковом формате.</returns>
    </member>
    <member name="P:System.Windows.Markup.PropertyDefinition.Name">
      <summary vsli:raw="Gets or sets the name of the property to define.">Получает или задает имя определяемого свойства.</summary>
      <returns vsli:raw="The name of the property to define.">Имя определяемого свойства.</returns>
    </member>
    <member name="P:System.Windows.Markup.PropertyDefinition.Type">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the property to define.">Получает или задает <see cref="T:System.Xaml.XamlType" /> определяемого свойства.</summary>
      <returns vsli:raw="The XAML type identifier of the property to define.">Идентификатор XAML-типа определяемого свойства.</returns>
    </member>
    <member name="T:System.Windows.Markup.Reference">
      <summary vsli:raw="Implements the &lt;c&gt;{x:Reference}&lt;/c&gt; markup extension.">Реализует расширение разметки <c>{x:Reference}</c>.</summary>
    </member>
    <member name="M:System.Windows.Markup.Reference.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.Reference&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.Reference" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.Reference.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.Reference&quot; /&gt; class with the &lt;paramref name=&quot;name&quot; /&gt; argument.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.Reference" /> с аргументом <paramref name="name" />.</summary>
      <param name="name" vsli:raw="The XAML name of the element to reference.">XAML-имя элемента для ссылки.</param>
    </member>
    <member name="P:System.Windows.Markup.Reference.Name">
      <summary vsli:raw="Gets or sets the XAML name to obtain the reference for.">Получает или задает XAML-имя, для которого нужно получить ссылку.</summary>
      <returns vsli:raw="The XAML name of the element to obtain the reference for.">XAML-имя элемента, для которого нужно получить ссылку.</returns>
    </member>
    <member name="M:System.Windows.Markup.Reference.ProvideValue(System.IServiceProvider)">
      <summary vsli:raw="Returns an object that is the value of the target property. For the &lt;see cref=&quot;T:System.Windows.Markup.Reference&quot; /&gt; type, this is the object that the provided &lt;see cref=&quot;P:System.Windows.Markup.Reference.Name&quot; /&gt; references.">Возвращает объект, являющийся значением целевого свойства. Для типа <see cref="T:System.Windows.Markup.Reference" /> используется объект, на который ссылается предоставляемое свойство <see cref="P:System.Windows.Markup.Reference.Name" />.</summary>
      <param name="serviceProvider" vsli:raw="A class that implements the &lt;see cref=&quot;T:System.Xaml.IXamlNameResolver&quot; /&gt; service.">Класс, реализующий службу <see cref="T:System.Xaml.IXamlNameResolver" />.</param>
      <returns vsli:raw="The value of the target property. This is potentially any object that is type-mapped in the relevant backing assemblies.">Значение целевого свойства. Им может быть любой объект с сопоставлением типов в соответствующих резервных сборках.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;serviceProvider&quot; /&gt; value does not implement the &lt;see cref=&quot;T:System.Xaml.IXamlNameResolver&quot; /&gt; service.&#xA;&#xA; -or-&#xA;&#xA; &lt;see cref=&quot;P:System.Windows.Markup.Reference.Name&quot; /&gt; value has not been set through construction or positional usage.">Значение <paramref name="serviceProvider" /> не реализует службу <see cref="T:System.Xaml.IXamlNameResolver" />.  

или - 
Значение <see cref="P:System.Windows.Markup.Reference.Name" /> не было задано при создании или позиционном использовании.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serviceProvider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serviceProvider" /> — <see langword="null" />.</exception>
    </member>
    <member name="T:System.Windows.Markup.RootNamespaceAttribute">
      <summary vsli:raw="Represents an assembly level attribute that is used to identify the value of the &lt;see langword=&quot;RootNamespace&quot; /&gt; property in a Visual Studio project file.">Представляет атрибут уровня сборки, используемый для определения значения свойства <see langword="RootNamespace" /> в файле проекта Visual Studio.</summary>
    </member>
    <member name="M:System.Windows.Markup.RootNamespaceAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.RootNamespaceAttribute&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.RootNamespaceAttribute" />.</summary>
      <param name="nameSpace" vsli:raw="The root namespace value.">Корневое значение пространства имен.</param>
    </member>
    <member name="P:System.Windows.Markup.RootNamespaceAttribute.Namespace">
      <summary vsli:raw="Gets the string that corresponds to the value of the &lt;see langword=&quot;RootNamespace&quot; /&gt; property in a Visual Studio project file.">Получает строку, соответствующую значению свойства <see langword="RootNamespace" /> в файле проекта Visual Studio.</summary>
      <returns vsli:raw="The string that corresponds to the value of the &lt;see langword=&quot;RootNamespace&quot; /&gt; property in a Visual Studio project file.">Строка, соответствующая значению <see langword="RootNamespace" /> свойства в файле проекта Visual Studio.</returns>
    </member>
    <member name="T:System.Windows.Markup.RuntimeNamePropertyAttribute">
      <summary vsli:raw="Represents a type-level attribute that reports which property of the type maps to the XAML x:Name attribute.">Представляет атрибут уровня типа, который сообщает, какое свойство типа сопоставляется с атрибутом XAML x:Name.</summary>
    </member>
    <member name="M:System.Windows.Markup.RuntimeNamePropertyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.RuntimeNamePropertyAttribute&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.RuntimeNamePropertyAttribute" />.</summary>
      <param name="name" vsli:raw="The name of the property to use as the &lt;see langword=&quot;x:Name&quot; /&gt; equivalent of the class.">Имя свойства, используемого в качестве свойства <see langword="x:Name" />, эквивалентного классу.</param>
    </member>
    <member name="P:System.Windows.Markup.RuntimeNamePropertyAttribute.Name">
      <summary vsli:raw="Gets the name of the runtime name property that is specified by this &lt;see cref=&quot;T:System.Windows.Markup.RuntimeNamePropertyAttribute&quot; /&gt;.">Получает или задает имя свойства времени выполнения, заданное данным <see cref="T:System.Windows.Markup.RuntimeNamePropertyAttribute" />.</summary>
      <returns vsli:raw="The name of the property.">Имя свойства.</returns>
    </member>
    <member name="T:System.Windows.Markup.StaticExtension">
      <summary vsli:raw="Implements a markup extension that returns static field and property references.">Реализует расширение разметки, возвращающее ссылки на статическое поле и свойство.</summary>
    </member>
    <member name="M:System.Windows.Markup.StaticExtension.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.StaticExtension&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.StaticExtension" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.StaticExtension.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.StaticExtension&quot; /&gt; class using the provided &lt;paramref name=&quot;member&quot; /&gt; string.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.StaticExtension" /> с использованием предоставленной строки <paramref name="member" />.</summary>
      <param name="member" vsli:raw="A string that identifies the member to make a reference to. This string uses the format &lt;c&gt;prefix:typeName.fieldOrPropertyName&lt;/c&gt;. &lt;c&gt;prefix&lt;/c&gt; is the mapping prefix for a XAML namespace, and is only required to reference static values that are not mapped to the default XAML namespace.">Строка, идентифицирующая член, на который делается ссылка. В этой строке используется формат <c>prefix:typeName.fieldOrPropertyName</c>. <c>prefix</c> — префикс сопоставления для пространства имен XAML, требуемый только для ссылки на статические значения, которые не сопоставляются с пространством имен XAML по умолчанию.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;member&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="member" /> — <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.StaticExtension.Member">
      <summary vsli:raw="Gets or sets a member name string that is used to resolve a static field or property based on the service-provided type resolver.">Получает или задает имя строки элемента, который используется для разрешения статического поля или свойства, основанного на распознавателе типов с предоставленными службами.</summary>
      <returns vsli:raw="A string that identifies the member to make a reference to.">Строка, идентифицирующая член, на который делается ссылка.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Attempted to set &lt;see cref=&quot;P:System.Windows.Markup.StaticExtension.Member&quot; /&gt; to &lt;see langword=&quot;null&quot; /&gt;.">Попытка установить <see cref="P:System.Windows.Markup.StaticExtension.Member" /> в значение <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.StaticExtension.MemberType">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Type&quot; /&gt; that defines the static member to return.">Получает или задает класс <see cref="T:System.Type" />, который определяет возвращаемый статический элемент.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that defines the static member to return.">Класс <see cref="T:System.Type" />, который определяет возвращаемый статический элемент.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Attempted to set &lt;see cref=&quot;P:System.Windows.Markup.StaticExtension.MemberType&quot; /&gt; to &lt;see langword=&quot;null&quot; /&gt;.">Попытка установить <see cref="P:System.Windows.Markup.StaticExtension.MemberType" /> в значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.StaticExtension.ProvideValue(System.IServiceProvider)">
      <summary vsli:raw="Returns an object value to set on the property where you apply this extension. For &lt;see cref=&quot;T:System.Windows.Markup.StaticExtension&quot; /&gt;, the return value is the static value that is evaluated for the requested static member.">Возвращает значение объекта, которое следует задать свойству при применении данного расширения. Для класса <see cref="T:System.Windows.Markup.StaticExtension" /> возвращаемое значение является статическим и вычисляется для запрошенного статического члена.</summary>
      <param name="serviceProvider" vsli:raw="An object that can provide services for the markup extension. The service provider is expected to provide a service that implements a type resolver (&lt;see cref=&quot;T:System.Windows.Markup.IXamlTypeResolver&quot; /&gt;).">Объект, способный предоставлять службы для расширения разметки. Предполагается, что поставщик предоставит службу, которая реализует распознаватель типов (<see cref="T:System.Windows.Markup.IXamlTypeResolver" />).</param>
      <returns vsli:raw="The static value to set on the property where the extension is applied.">Статическое значение, которое следует задать свойству при применении расширения.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;member&quot; /&gt; value for the extension is &lt;see langword=&quot;null&quot; /&gt; at the time of evaluation.">Во время оценки значением <paramref name="member" /> для расширения является <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Some part of the &lt;paramref name=&quot;member&quot; /&gt; string did not parse properly  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;serviceProvider&quot; /&gt; did not provide a service for &lt;see cref=&quot;T:System.Windows.Markup.IXamlTypeResolver&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;member&quot; /&gt; value did not resolve to a static member.">Некоторые части строки <paramref name="member" /> не были правильно проанализированы. 

или - 
<paramref name="serviceProvider" /> не предоставляет службу для <see cref="T:System.Windows.Markup.IXamlTypeResolver" />.  

-или- 
 Значение <paramref name="member" /> не разрешается как статический член.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serviceProvider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="serviceProvider" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="T:System.Windows.Markup.TrimSurroundingWhitespaceAttribute">
      <summary vsli:raw="Indicates to XAML processors that the whitespace surrounding elements of the type in markup should be trimmed when serializing.">Указывает обработчикам XAML, что пробелы вокруг элементов типа в разметке должны быть сокращены при сериализации.</summary>
    </member>
    <member name="M:System.Windows.Markup.TrimSurroundingWhitespaceAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.TrimSurroundingWhitespaceAttribute&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.TrimSurroundingWhitespaceAttribute" />.</summary>
    </member>
    <member name="T:System.Windows.Markup.TypeExtension">
      <summary vsli:raw="Implements a markup extension that returns a &lt;see cref=&quot;T:System.Type&quot; /&gt; based on a string input.">Реализует расширение разметки, которое возвращает класс <see cref="T:System.Type" />, основанный на вводе строки.</summary>
    </member>
    <member name="M:System.Windows.Markup.TypeExtension.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.TypeExtension&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.TypeExtension" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.TypeExtension.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.TypeExtension&quot; /&gt; class, initializing the &lt;see cref=&quot;P:System.Windows.Markup.TypeExtension.TypeName&quot; /&gt; value based on the provided &lt;paramref name=&quot;typeName&quot; /&gt; string.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.TypeExtension" />, инициализируя значение <see cref="P:System.Windows.Markup.TypeExtension.TypeName" /> на основе предоставленной строки <paramref name="typeName" />.</summary>
      <param name="typeName" vsli:raw="A string that identifies the type to make a reference to. This string uses the format &lt;c&gt;prefix:className&lt;/c&gt;. &lt;c&gt;prefix&lt;/c&gt; is the mapping prefix for a XAML namespace, and is only required to reference types that are not mapped to the default XAML namespace.">Строка, идентифицирующая тип, на который делается ссылка. В этой строке используется формат <c>префикс:имяКласса</c>. <c>prefix</c> — это префикс сопоставления для пространства имен XAML, требуемый только для ссылки на типы, которые не сопоставляются с пространством имен XAML по умолчанию.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Attempted to specify &lt;paramref name=&quot;typeName&quot; /&gt; as &lt;see langword=&quot;null&quot; /&gt;.">Попытка указать свойство <paramref name="typeName" /> как <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.TypeExtension.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.TypeExtension&quot; /&gt; class, declaring the type directly.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.TypeExtension" />, непосредственно объявляя данный тип.</summary>
      <param name="type" vsli:raw="The type to be represented by this &lt;see cref=&quot;T:System.Windows.Markup.TypeExtension&quot; /&gt;.">Тип, который должен быть представлен данным <see cref="T:System.Windows.Markup.TypeExtension" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;">
        <paramref name="type" /> равно <see langword="null" /></exception>
    </member>
    <member name="M:System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)">
      <summary vsli:raw="Returns an object that should be set on the property where this extension is applied. For &lt;see cref=&quot;T:System.Windows.Markup.TypeExtension&quot; /&gt; , this is the &lt;see cref=&quot;T:System.Type&quot; /&gt; value as evaluated for the requested type name.">Возвращает объект, который следует задать на свойстве, в отношении которого применяется данное расширение. Для <see cref="T:System.Windows.Markup.TypeExtension" /> это значение <see cref="T:System.Type" />, как оно оценено для запрошенного имени типа.</summary>
      <param name="serviceProvider" vsli:raw="Object that can provide services for the markup extension. The provider is expected to provide a service for &lt;see cref=&quot;T:System.Windows.Markup.IXamlTypeResolver&quot; /&gt;.">Объект, способный предоставлять службы для расширения разметки. Предполагается, что поставщик предоставит службу для интерфейса <see cref="T:System.Windows.Markup.IXamlTypeResolver" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to set on the property where the extension is applied.">Класс <see cref="T:System.Type" />, который следует задать свойству при применении расширения.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;member&quot; /&gt; value for the extension is &lt;see langword=&quot;null&quot; /&gt;.">Значением <paramref name="member" /> для данного расширения является <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Some part of the &lt;paramref name=&quot;typeName&quot; /&gt; string did not parse properly.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;serviceProvider&quot; /&gt; did not provide a service for &lt;see cref=&quot;T:System.Windows.Markup.IXamlTypeResolver&quot; /&gt;  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;typeName&quot; /&gt; value did not resolve to a type.">Некоторые части строки <paramref name="typeName" /> не анализируются правильно.  
-или- 
 <paramref name="serviceProvider" /> не предоставляет службу для <see cref="T:System.Windows.Markup.IXamlTypeResolver" />.  
-или- 
 Значение <paramref name="typeName" /> не удалось распознать на тип.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serviceProvider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;">
        <paramref name="serviceProvider" /> равно <see langword="null" /></exception>
    </member>
    <member name="P:System.Windows.Markup.TypeExtension.Type">
      <summary vsli:raw="Gets or sets the type information for this extension.">Получает или задает сведения о типе для данного расширения.</summary>
      <returns vsli:raw="The established type. For runtime purposes, this may be &lt;see langword=&quot;null&quot; /&gt; for get access, but cannot be set to &lt;see langword=&quot;null&quot; /&gt;.">Устанавливаемый тип. В среде выполнения это может быть значение <see langword="null" /> для метода доступа Get, однако значение <see langword="null" /> задать невозможно.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Attempted to set to &lt;see langword=&quot;null&quot; /&gt;.">Попытка задать значение <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.TypeExtension.TypeName">
      <summary vsli:raw="Gets or sets the type name represented by this markup extension.">Получает или задает имя типа, представленного данным расширением разметки.</summary>
      <returns vsli:raw="A string that identifies the type. This string uses the format prefix&lt;c&gt;:&lt;/c&gt;className. (prefix is the mapping prefix for an XML namespace and is only required to reference types that are not mapped to the default XML namespace for WPF (&lt;c&gt;http://schemas.microsoft.com/winfx/2006/xaml/presentation&lt;/c&gt;).">Строка, определяющая тип. В этой строке используется префиксформата<c>:</c>className. префикс — это префикс сопоставления для пространства имен XML, требуемый только для ссылки на типы, которые не сопоставляются с пространством имен XML по умолчанию для WPF (http://schemas.microsoft.com/winfx/2006/xaml/presentation).</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Attempted to set to &lt;see langword=&quot;null&quot; /&gt;.">Попытка установить значение <see langword="null" />.</exception>
    </member>
    <member name="T:System.Windows.Markup.UidPropertyAttribute">
      <summary vsli:raw="Indicates the CLR property of a class that provides the x:Uid Directive value.">Указывает свойство CLR класса, предоставляющего значение x:Uid Directive.</summary>
    </member>
    <member name="M:System.Windows.Markup.UidPropertyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.UidPropertyAttribute&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.UidPropertyAttribute" />.</summary>
      <param name="name" vsli:raw="The name of the property that provides the &lt;see langword=&quot;x:Uid&quot; /&gt; value.">Имя свойства, предоставляющее значение <see langword="x:Uid" />.</param>
    </member>
    <member name="P:System.Windows.Markup.UidPropertyAttribute.Name">
      <summary vsli:raw="Gets the name of the CLR property that represents the x:Uid Directive value.">Получает имя свойства CLR, которое представляет значение x:Uid Directive.</summary>
      <returns vsli:raw="The name of the CLR property that represents x:Uid Directive.">Получает имя свойства CLR, которое представляет x:Uid Directive.</returns>
    </member>
    <member name="T:System.Windows.Markup.UsableDuringInitializationAttribute">
      <summary vsli:raw="Indicates whether this type is built top-down during XAML object graph creation.">Указывает, строится ли этот тип сверху вниз в ходе создания графа объекта XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.UsableDuringInitializationAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.UsableDuringInitializationAttribute&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.UsableDuringInitializationAttribute" />.</summary>
      <param name="usable" vsli:raw="Defines whether the associated class is usable during initialization.">Определяет, можно ли использовать связанный класс во время инициализации или нет.</param>
    </member>
    <member name="P:System.Windows.Markup.UsableDuringInitializationAttribute.Usable">
      <summary vsli:raw="Gets a value that indicates whether the associated class is usable during initialization.">Возвращает значение, которое показывает, можно ли использовать связанный класс во время инициализации.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the associated class is usable during initialization; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение<see langword="true" /> , если связанный класс можно использовать во время инициализации; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Markup.ValueSerializer">
      <summary vsli:raw="Abstract class that defines conversion behavior for serialization from an object representation.">Абстрактный класс, который определяет поведение преобразования сериализации из представления объекта.</summary>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.ValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="When overridden in a derived class, determines whether the specified &lt;see cref=&quot;T:System.String&quot; /&gt; can be converted to an instance of the type that the implementation of &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; supports.">При переопределении в производном классе определяет, может ли указанный класс <see cref="T:System.String" /> быть преобразован в экземпляр типа, который поддерживается реализацией класса <see cref="T:System.Windows.Markup.ValueSerializer" />.</summary>
      <param name="value" vsli:raw="The string to evaluate for conversion.">Строка, для которой требуется проверить возможность преобразования.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Контекстная информация, используемая при выполнении преобразования.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value can be converted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если значение можно преобразовать; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="When overridden in a derived class, determines whether the specified object can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Если переопределено в производном классе, определяет, можно ли преобразовать указанный объект в <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to evaluate for conversion.">Объект, для которого необходимо проверить возможность преобразования.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Контекстная информация, используемая при выполнении преобразования.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;value&quot; /&gt; can be converted into a &lt;see cref=&quot;T:System.String&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если <paramref name="value" /> можно преобразовать в <see cref="T:System.String" />; в противном случае — значение <see langword="false." /></returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="When overridden in a derived class, converts a &lt;see cref=&quot;T:System.String&quot; /&gt; to an instance of the type that the implementation of &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; supports.">При переопределении в производном классе преобразует <see cref="T:System.String" /> в экземпляр типа, который поддерживает реализация <see cref="T:System.Windows.Markup.ValueSerializer" />.</summary>
      <param name="value" vsli:raw="The string to convert.">Преобразуемая строка.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Контекстная информация, используемая при выполнении преобразования.</param>
      <returns vsli:raw="A new instance of the type that the implementation of &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; supports based on the supplied &lt;paramref name=&quot;value&quot; /&gt;.">Новый экземпляр типа, который поддерживает реализация <see cref="T:System.Windows.Markup.ValueSerializer" />, на основе предоставленного <paramref name="value" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be converted.">
        <paramref name="value" /> невозможно преобразовать.</exception>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="When overridden in a derived class, converts the specified object to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Если переопределено в производном классе, преобразует указанный объект в <see cref="T:System.String" />.</summary>
      <param name="value" vsli:raw="The object to convert into a string.">Объект, преобразуемый в строку.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Контекстная информация, используемая при выполнении преобразования.</param>
      <returns vsli:raw="A string representation of the specified object.">Представление строки указанного объекта.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be converted.">
        <paramref name="value" /> невозможно преобразовать.</exception>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetConvertFromException(System.Object)">
      <summary vsli:raw="Returns an exception to throw when a conversion cannot be performed.">Возвращает исключение, возникающее, если преобразование не может быть выполнено.</summary>
      <param name="value" vsli:raw="The object that could not be converted.">Объект, который не удалось преобразовать.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; object for the exception to throw when a &lt;see langword=&quot;ConvertFrom&quot; /&gt; conversion cannot be performed.">Объект <see cref="T:System.Exception" /> для исключения, которое необходимо создать, если невозможно выполнить преобразование <see langword="ConvertFrom" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetConvertToException(System.Object,System.Type)">
      <summary vsli:raw="Returns an exception to throw when a conversion cannot be performed.">Возвращает исключение, возникающее, если преобразование не может быть выполнено.</summary>
      <param name="value" vsli:raw="The object that could not be converted.">Объект, который не удалось преобразовать.</param>
      <param name="destinationType" vsli:raw="A type that represents the type the conversion was trying to convert to.">Тип, представляющий тип, в который осуществлялось преобразование.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; object for the exception to throw when a &lt;see langword=&quot;ConvertTo&quot; /&gt; conversion cannot be performed.">Объект <see cref="T:System.Exception" /> для исключения, которое необходимо создать, если невозможно выполнить преобразование <see langword="ConvertTo" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; declared for a property, by passing a CLR property descriptor for the property.">Получает класс <see cref="T:System.Windows.Markup.ValueSerializer" />, объявленный для свойства, путем передачи свойству дескриптора свойства среды CLR.</summary>
      <param name="descriptor" vsli:raw="The CLR property descriptor for the property to be serialized.">Дескриптор свойства CLR сериализуемого свойства.</param>
      <returns vsli:raw="The serializer associated with the specified property. May return &lt;see langword=&quot;null&quot; /&gt;.">Сериализатор, связанный с заданным свойством. Может возвращать значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;descriptor&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="descriptor" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; declared for the specified property, using the specified context.">Получает <see cref="T:System.Windows.Markup.ValueSerializer" />, объявленный для заданного свойства с использованием заданного контекста.</summary>
      <param name="descriptor" vsli:raw="Descriptor for the property to be serialized.">Дескриптор сериализуемого свойства.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Контекстная информация, используемая при выполнении преобразования.</param>
      <returns vsli:raw="The serializer associated with the specified property.">Сериализатор, связанный с заданным свойством.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;descriptor&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="descriptor" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; declared for the specified type.">Получает <see cref="T:System.Windows.Markup.ValueSerializer" />, объявленный для заданного типа.</summary>
      <param name="type" vsli:raw="The type to get the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; for.">Тип, для которого требуется получить <see cref="T:System.Windows.Markup.ValueSerializer" />.</param>
      <returns vsli:raw="The serializer associated with the specified type. May return &lt;see langword=&quot;null&quot; /&gt;.">Сериализатор, связанный с заданным типом. Может возвращать значение <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; declared for the specified type, using the specified context.">Получает <see cref="T:System.Windows.Markup.ValueSerializer" />, объявленный для заданного типа с использованием заданного контекста.</summary>
      <param name="type" vsli:raw="The type to get the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; for.">Тип, для которого требуется получить <see cref="T:System.Windows.Markup.ValueSerializer" />.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Контекстная информация, используемая при выполнении преобразования.</param>
      <returns vsli:raw="The serializer associated with the specified type.">Сериализатор, связанный с заданным типом.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="type" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.TypeReferences(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary vsli:raw="Gets an enumeration of the types referenced by the &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt;.">Получает перечисление типов, на которые ссылается <see cref="T:System.Windows.Markup.ValueSerializer" />.</summary>
      <param name="value" vsli:raw="The value being serialized.">Сериализуемое значение.</param>
      <param name="context" vsli:raw="Context information that is used for conversion.">Контекстная информация, используемая при выполнении преобразования.</param>
      <returns vsli:raw="The types converted by this serializer.">Типы, преобразуемые данным сериализатором.</returns>
    </member>
    <member name="T:System.Windows.Markup.ValueSerializerAttribute">
      <summary>Определяет класс <see cref="T:System.Windows.Markup.ValueSerializer" />, который должен использоваться типом или свойством при его сериализации.</summary>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializerAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.ValueSerializerAttribute" /> строкой имени типа, в которой указывается сборка.</summary>
      <param name="valueSerializerTypeName">Строка с именем искомого типа с указанием сборки для использования класса <see cref="T:System.Windows.Markup.ValueSerializer" />.</param>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializerAttribute.#ctor(System.Type)">
      <summary>Инициализация нового экземпляра класса <see cref="T:System.Windows.Markup.ValueSerializerAttribute" /> с помощью указанного типа.</summary>
      <param name="valueSerializerType">Тип, представляющий тип класса <see cref="T:System.Windows.Markup.ValueSerializer" />.</param>
    </member>
    <member name="P:System.Windows.Markup.ValueSerializerAttribute.ValueSerializerType">
      <summary>Получает тип класса <see cref="T:System.Windows.Markup.ValueSerializer" />, объявленный этим атрибутом.</summary>
      <returns>Тип <see cref="T:System.Windows.Markup.ValueSerializer" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.ValueSerializerAttribute.ValueSerializerTypeName">
      <summary>Получает полное имя сборки типа <see cref="T:System.Windows.Markup.ValueSerializer" /> для данного типа или свойства.</summary>
      <returns>Имя искомого типа с указанием сборки.</returns>
    </member>
    <member name="T:System.Windows.Markup.WhitespaceSignificantCollectionAttribute">
      <summary vsli:raw="Indicates that a collection type should be processed as being whitespace significant by a XAML processor.">Обозначает, что тип коллекции должен быть обработан обработчиком XAML как значимый пробел.</summary>
    </member>
    <member name="M:System.Windows.Markup.WhitespaceSignificantCollectionAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.WhitespaceSignificantCollectionAttribute&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.WhitespaceSignificantCollectionAttribute" />.</summary>
    </member>
    <member name="T:System.Windows.Markup.XamlDeferLoadAttribute">
      <summary vsli:raw="Indicates that a class or property has a deferred load usage for XAML (such as a template behavior), and reports the class that enables the deferring behavior and its destination/content type.">Указывает, что классу или свойству соответствует использование отложенной загрузки для XAML (в частности, поведение шаблона), и сообщает о классе, включающем задержку, и о его типе назначения/содержимого.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlDeferLoadAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XamlDeferLoadAttribute&quot; /&gt; class, using string names of types.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.XamlDeferLoadAttribute" /> строковыми именами типов.</summary>
      <param name="loaderType" vsli:raw="The string name of the type for the implementation to use for the defer load behavior.">Строковое имя типа для реализации, используемой для задержки загрузки.</param>
      <param name="contentType" vsli:raw="The string name of the type for the destination/content type of the defer load behavior.">Строковое имя типа назначения/содержимого для задержки загрузки.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;loaderType&quot; /&gt; or &lt;paramref name=&quot;contentType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="loaderType" /> или <paramref name="contentType" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlDeferLoadAttribute.#ctor(System.Type,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XamlDeferLoadAttribute&quot; /&gt; class, using CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; values.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.XamlDeferLoadAttribute" /> значениями <see cref="T:System.Type" /> среды CLR.</summary>
      <param name="loaderType" vsli:raw="The CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; value for the implementation to use for the defer load behavior.">Значение <see cref="T:System.Type" /> среды CLR для реализации, используемой для задержки загрузки.</param>
      <param name="contentType" vsli:raw="The CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; value for the destination/content type of the defer load behavior.">Значение <see cref="T:System.Type" /> среды CLR для типа назначения/содержимого для задержки загрузки.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;loaderType&quot; /&gt; or &lt;paramref name=&quot;contentType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="loaderType" /> или <paramref name="contentType" /> — <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.XamlDeferLoadAttribute.ContentType">
      <summary vsli:raw="Gets the CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; value for the destination/content type of the defer load behavior.">Получает значение <see cref="T:System.Type" /> среды CLR для типа назначения/содержимого для задержки загрузки.</summary>
      <returns vsli:raw="The CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; value for the destination/content type of the defer load behavior.">Значение <see cref="T:System.Type" /> среды CLR для типа назначения/содержимого для задержки загрузки.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlDeferLoadAttribute.ContentTypeName">
      <summary vsli:raw="Gets the string name of the type for the implementation to use for the defer load behavior.">Получает строковое имя типа для реализации, используемой для задержки загрузки.</summary>
      <returns vsli:raw="The string name of the type for the converter to use for the defer load behavior.">Строковое имя типа для преобразователя, используемого для задержки загрузки.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlDeferLoadAttribute.LoaderType">
      <summary vsli:raw="Gets the CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; value for the implementation to use for the defer load behavior.">Получает значение <see cref="T:System.Type" /> среды CLR для реализации, используемой для задержки загрузки.</summary>
      <returns vsli:raw="The CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; value for the implementation to use for the defer load behavior.">Значение <see cref="T:System.Type" /> среды CLR для реализации, используемой для задержки загрузки.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlDeferLoadAttribute.LoaderTypeName">
      <summary vsli:raw="Gets the string name of the type for the destination/content type of the defer load behavior.">Получает строковое имя типа назначения/содержимого для задержки загрузки.</summary>
      <returns vsli:raw="The string name of the type for the destination/content type of the defer load behavior.">Строковое имя типа назначения/содержимого для задержки загрузки.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetMarkupExtensionAttribute">
      <summary vsli:raw="Indicates that a class can use a markup extension to provide a value, and references a handler to use for markup extension set operations.">Указывает, что класс может использовать расширение разметки для предоставления значения, и ссылается на обработчик, используемый для операций установки расширения разметки.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetMarkupExtensionAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetMarkupExtensionAttribute&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.XamlSetMarkupExtensionAttribute" />.</summary>
      <param name="xamlSetMarkupExtensionHandler" vsli:raw="The name of the handler to use for markup extension set operations.">Имя обработчика, используемого для операций установки расширения разметки.</param>
    </member>
    <member name="P:System.Windows.Markup.XamlSetMarkupExtensionAttribute.XamlSetMarkupExtensionHandler">
      <summary vsli:raw="Gets the name of the handler to use for markup extension set operations.">Получает имя обработчика, используемого для операций установки расширения разметки.</summary>
      <returns vsli:raw="The name of the handler to use for markup extension set operations.">Имя обработчика, используемого для операций установки расширения разметки.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs">
      <summary vsli:raw="Provides data for callbacks that are invoked when a XAML object writer sets a value using a markup extension.">Предоставляет данные для обратных вызовов, происходящих, когда модуль записи объектов XAML задает значение с использованием расширения разметки.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetMarkupExtensionEventArgs.#ctor(System.Xaml.XamlMember,System.Windows.Markup.MarkupExtension,System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />.</summary>
      <param name="member" vsli:raw="XAML type system / schema information for the member being set.">Устанавливаемая для члена информация о системе/схеме типов XAML.</param>
      <param name="value" vsli:raw="The markup extension reference to provide for the member being set.">Ссылка расширения разметки, предоставляемая для устанавливаемого члена.</param>
      <param name="serviceProvider" vsli:raw="Service provider information passed to the markup extension.">Сведения о поставщике услуг, передаваемые в расширение разметки.</param>
    </member>
    <member name="M:System.Windows.Markup.XamlSetMarkupExtensionEventArgs.CallBase">
      <summary vsli:raw="Provides a way to invoke a callback as defined on a base class of the current acting type.">Предоставляет способ инициирования обратного вызова в соответствии с определением в базовом классе текущего действующего типа.</summary>
    </member>
    <member name="P:System.Windows.Markup.XamlSetMarkupExtensionEventArgs.MarkupExtension">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtension&quot; /&gt; reference that is relevant to this &lt;see cref=&quot;T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs&quot; /&gt;.">Получает ссылку <see cref="T:System.Windows.Markup.MarkupExtension" />, относящуюся к данному объекту <see cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />.</summary>
      <returns vsli:raw="The markup extension reference that is relevant to this &lt;see cref=&quot;T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs&quot; /&gt;.">Ссылка расширения разметки, относящегося к данному объекту <see cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetMarkupExtensionEventArgs.ServiceProvider">
      <summary vsli:raw="Gets service provider information that was passed to the markup extension.">Получает сведения о поставщике услуг, которые были переданы в расширение разметки.</summary>
      <returns vsli:raw="Service provider information that was passed to the markup extension.">Сведения о поставщике услуг, которые были переданы в расширение разметки.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetTypeConverterAttribute">
      <summary vsli:raw="Indicates that a class can use a type converter to provide a value, and references a handler to use for type converter setting cases.">Указывает, что класс может использовать преобразователь типов для предоставления значения, и ссылается на обработчик, используемый для вариантов установки преобразователя типов.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetTypeConverterAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetTypeConverterAttribute&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.XamlSetTypeConverterAttribute" />.</summary>
      <param name="xamlSetTypeConverterHandler" vsli:raw="The name of the handler to use for type converter setting operations.">Имя обработчика, используемого для операций настройки преобразователя типов.</param>
    </member>
    <member name="P:System.Windows.Markup.XamlSetTypeConverterAttribute.XamlSetTypeConverterHandler">
      <summary vsli:raw="Gets the &lt;paramref name=&quot;xamlSetTypeConverterHandler&quot; /&gt; initialization value (the handler name) specified in the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetTypeConverterAttribute&quot; /&gt;.">Получает значение инициализации (имя обработчика) <paramref name="xamlSetTypeConverterHandler" />, заданное в <see cref="T:System.Windows.Markup.XamlSetTypeConverterAttribute" />.</summary>
      <returns vsli:raw="The &lt;paramref name=&quot;xamlSetTypeConverterHandler&quot; /&gt; value specified in the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetTypeConverterAttribute&quot; /&gt;.">Значение <paramref name="xamlSetTypeConverterHandler" />, заданное в <see cref="T:System.Windows.Markup.XamlSetTypeConverterAttribute" />.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetTypeConverterEventArgs">
      <summary vsli:raw="Provides data for callbacks that are invoked when a XAML writer sets a value using a type converter call.">Предоставляет данные для обратных вызовов, происходящих, когда модуль записи XAML задает значение с использованием вызова преобразователя типов.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetTypeConverterEventArgs.#ctor(System.Xaml.XamlMember,System.ComponentModel.TypeConverter,System.Object,System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetTypeConverterEventArgs&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.XamlSetTypeConverterEventArgs" />.</summary>
      <param name="member" vsli:raw="XAML type system / schema information for the member being set.">Устанавливаемая для члена информация о системе/схеме типов XAML.</param>
      <param name="typeConverter" vsli:raw="The specific type converter instance being invoked.">Вызываемый экземпляр преобразователя определенного типа.</param>
      <param name="value" vsli:raw="The value to provide for the member being set.">Значение, предоставляемое для задаваемого члена.</param>
      <param name="serviceProvider" vsli:raw="Service provider information that can be used by the &lt;paramref name=&quot;typeConverter&quot; /&gt; class.">Сведения о поставщике услуг, которые могут использоваться классом <paramref name="typeConverter" />.</param>
      <param name="cultureInfo" vsli:raw="Culture information that can be used by the &lt;paramref name=&quot;typeConverter&quot; /&gt; class when calling &lt;see cref=&quot;M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)&quot; /&gt; and other methods.">Сведения о языке и региональных параметрах, которые могут использоваться классом <paramref name="typeConverter" /> при вызове метода <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" /> и других методов.</param>
    </member>
    <member name="M:System.Windows.Markup.XamlSetTypeConverterEventArgs.CallBase">
      <summary vsli:raw="Provides a way to invoke a callback as defined on a base class of the current acting type.">Предоставляет способ инициирования обратного вызова в соответствии с определением в базовом классе текущего действующего типа.</summary>
    </member>
    <member name="P:System.Windows.Markup.XamlSetTypeConverterEventArgs.CultureInfo">
      <summary vsli:raw="Gets &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; information that can be used by the type converter class when calling &lt;see cref=&quot;M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)&quot; /&gt; and other methods.">Получает сведения <see cref="T:System.Globalization.CultureInfo" />, которые могут использоваться классом преобразователя типов при вызове метода <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" /> и других методов.</summary>
      <returns vsli:raw="Culture information that can be used by the type converter class.">Сведения о языке и региональных параметрах, которые могут использоваться классом преобразователя типов</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetTypeConverterEventArgs.ServiceProvider">
      <summary vsli:raw="Gets &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; information that can be used by the type converter class.">Получает сведения <see cref="T:System.IServiceProvider" />, которые могут использоваться классом преобразователя типов.</summary>
      <returns vsli:raw="Service provider information that can be used by the &lt;paramref name=&quot;typeConverter&quot; /&gt; class.">Сведения о поставщике услуг, которые могут использоваться классом <paramref name="typeConverter" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetTypeConverterEventArgs.TypeConverter">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; instance that is invoked and provides type conversion behavior.">Получает вызываемый экземпляр <see cref="T:System.ComponentModel.TypeConverter" />, предоставляющий поведение преобразования.</summary>
      <returns vsli:raw="The type converter that provides type conversion behavior.">Преобразователь типов, предоставляющий поведение преобразования.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetValueEventArgs">
      <summary vsli:raw="Provides data for callbacks that are invoked when a &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; sets certain values.">Предоставляет данные для обратных вызовов, инициируемых, когда <see cref="T:System.Xaml.XamlObjectWriter" /> задает определенные значения.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetValueEventArgs.#ctor(System.Xaml.XamlMember,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetValueEventArgs&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</summary>
      <param name="member" vsli:raw="XAML type system / schema information for the member being set.">Устанавливаемая для члена информация о системе/схеме типов XAML.</param>
      <param name="value" vsli:raw="The value to provide for the member.">Значение, предоставляемое для члена.</param>
    </member>
    <member name="M:System.Windows.Markup.XamlSetValueEventArgs.CallBase">
      <summary vsli:raw="When overridden in a derived class, provides a way to invoke a &lt;see langword=&quot;SetValue&quot; /&gt; callback as defined on a base class of the current acting type.">При переопределении в производном классе предоставляет способ инициирования обратного вызова <see langword="SetValue" /> в соответствии с определением в базовом классе текущего действующего типа.</summary>
    </member>
    <member name="P:System.Windows.Markup.XamlSetValueEventArgs.Handled">
      <summary vsli:raw="Gets or sets a value that determines whether a caller that is using the &lt;see cref=&quot;T:System.Windows.Markup.XamlSetValueEventArgs&quot; /&gt; can use the values without having to call &lt;see cref=&quot;M:System.Windows.Markup.XamlSetValueEventArgs.CallBase&quot; /&gt;.">Получает или задает значение, определяющее, может ли вызывающий объект, использующий <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />, использовать значения без вызова <see cref="M:System.Windows.Markup.XamlSetValueEventArgs.CallBase" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the values were useful and calling &lt;see cref=&quot;M:System.Windows.Markup.XamlSetValueEventArgs.CallBase&quot; /&gt; is not necessary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если значения могут быть использованы и вызов метода <see cref="M:System.Windows.Markup.XamlSetValueEventArgs.CallBase" /> необязателен; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetValueEventArgs.Member">
      <summary vsli:raw="Gets XAML type system and XAML schema information for the member being set.">Получает информацию о системе типов XAML и схеме XAML для задаваемого члена.</summary>
      <returns vsli:raw="XAML type system and XAML schema information for the member being set.">Информация о системе типов XAML и схеме XAML для задаваемого члена.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetValueEventArgs.Value">
      <summary vsli:raw="Gets the value to provide for the member being set.">Получает значение, предоставляемое для задаваемого члена.</summary>
      <returns vsli:raw="The value to provide for the member being set.">Значение, предоставляемое для задаваемого члена.</returns>
    </member>
    <member name="T:System.Windows.Markup.XData">
      <summary vsli:raw="Represents literal data that can appear as the value for a &lt;see langword=&quot;Value&quot; /&gt; node.">Представляет литеральные данные, которые могут отображаться в качестве значения узла <see langword="Value" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.XData.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XData&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.XData" />.</summary>
    </member>
    <member name="P:System.Windows.Markup.XData.Text">
      <summary vsli:raw="Gets or sets the literal value string that this &lt;see cref=&quot;T:System.Windows.Markup.XData&quot; /&gt; wraps.">Получает или задает строку литерального значения, для которого <see cref="T:System.Windows.Markup.XData" /> служит оболочкой.</summary>
      <returns vsli:raw="The literal value string.">Строка литерального значения.</returns>
    </member>
    <member name="P:System.Windows.Markup.XData.XmlReader">
      <summary vsli:raw="Gets or sets a reader for the literal data.">Получает или задает модуль чтения литеральных данных.</summary>
      <returns vsli:raw="A reader for the literal data.">Модуль чтения литеральных данных.</returns>
    </member>
    <member name="T:System.Windows.Markup.XmlLangPropertyAttribute">
      <summary vsli:raw="Identifies the property to associate with the xml:lang attribute.">Определяет свойство, которое нужно связать с атрибутом xml:lang.</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlLangPropertyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XmlLangPropertyAttribute&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.XmlLangPropertyAttribute" />.</summary>
      <param name="name" vsli:raw="The property name to associate with the &lt;see langword=&quot;xml:lang&quot; /&gt; attribute.">Имя свойства для связи с атрибутом <see langword="xml:lang" />.</param>
    </member>
    <member name="P:System.Windows.Markup.XmlLangPropertyAttribute.Name">
      <summary vsli:raw="Gets the name of the property that is specified in this attribute.">Получает имя свойства, которое указывается в этом атрибуте.</summary>
      <returns vsli:raw="The name of the property.">Имя свойства.</returns>
    </member>
    <member name="T:System.Windows.Markup.XmlnsCompatibleWithAttribute">
      <summary vsli:raw="Specifies that a XAML namespace can be subsumed by another XAML namespace. Typically, the subsuming XAML namespace is indicated in a previously defined &lt;see cref=&quot;T:System.Windows.Markup.XmlnsDefinitionAttribute&quot; /&gt;.">Указывает, что пространство имен XAML может быть включено в другое пространство имен XAML. Как правило, поглощающее пространство имен XAML указывается в определенном ранее <see cref="T:System.Windows.Markup.XmlnsDefinitionAttribute" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlnsCompatibleWithAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XmlnsCompatibleWithAttribute&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.XmlnsCompatibleWithAttribute" />.</summary>
      <param name="oldNamespace" vsli:raw="The reference XAML namespace identifier.">Идентификатор поглощаемого пространства имен XAML.</param>
      <param name="newNamespace" vsli:raw="The subsuming XAML namespace identifier.">Идентификатор поглощающего пространства имен XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;oldNamespace&quot; /&gt; or &lt;paramref name=&quot;newNamespace&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="oldNamespace" /> или <paramref name="newNamespace" /> — это <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlnsCompatibleWithAttribute.NewNamespace">
      <summary vsli:raw="Gets the subsuming namespace identifier reported by this attribute.">Получает идентификатор поглощающего пространства имен, переданный в этом атрибуте.</summary>
      <returns vsli:raw="The subsuming namespace identifier reported in the attribute.">Идентификатор поглощающего пространства имен, переданный в атрибуте.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsCompatibleWithAttribute.OldNamespace">
      <summary vsli:raw="Gets the reference namespace identifier reported by this attribute.">Получает идентификатор поглощаемого пространства имен, переданный в этом атрибуте.</summary>
      <returns vsli:raw="The reference namespace identifier.">Идентификатор поглощаемого пространства имен.</returns>
    </member>
    <member name="T:System.Windows.Markup.XmlnsDefinitionAttribute">
      <summary vsli:raw="Specifies a mapping on a per-assembly basis between a XAML namespace and a CLR namespace, which is then used for type resolution by a XAML object writer or XAML schema context.">Указывает сопоставление для каждой сборки между пространством имен XAML и пространством имен CLR, которое затем используется для разрешения типов модулем записи объектов XAML или контекстом схемы XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDefinitionAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XmlnsDefinitionAttribute&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.XmlnsDefinitionAttribute" />.</summary>
      <param name="xmlNamespace" vsli:raw="The XAML namespace identifier.">Идентификатор пространства имен XAML.</param>
      <param name="clrNamespace" vsli:raw="A string that references a CLR namespace name.">Строка, ссылающаяся на пространство имен CLR.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlNamespace&quot; /&gt; or &lt;paramref name=&quot;clrNamespace&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xmlNamespace" /> или <paramref name="clrNamespace" /> — это <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDefinitionAttribute.AssemblyName">
      <summary vsli:raw="Gets or sets the name of the assembly associated with the attribute.">Получает или задает имя сборки, связанной с атрибутом.</summary>
      <returns vsli:raw="The assembly name.">Имя сборки.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDefinitionAttribute.ClrNamespace">
      <summary vsli:raw="Gets the string name of the CLR namespace specified in this attribute.">Получает строковое имя пространства имен CLR, указанное в этом атрибуте</summary>
      <returns vsli:raw="The CLR namespace, specified as a string.">Пространство имен среды CLR, заданное в виде строки.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDefinitionAttribute.XmlNamespace">
      <summary vsli:raw="Gets the XAML namespace identifier specified in this attribute.">Получает указанный в этом атрибуте идентификатор пространства имен XAML.</summary>
      <returns vsli:raw="The XAML namespace identifier.">Идентификатор пространства имен XAML.</returns>
    </member>
    <member name="T:System.Windows.Markup.XmlnsPrefixAttribute">
      <summary vsli:raw="Identifies a recommended prefix to associate with a XAML namespace for XAML usage, when writing elements and attributes in a XAML file (serialization) or when interacting with a design environment that has XAML editing features.">Определяет рекомендуемый префикс, связываемый с пространством имен XAML для использования XAML при записи элементов и атрибутов в файл XAML (сериализация) или при взаимодействии со средой разработки, поддерживающей функции редактирования XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlnsPrefixAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Markup.XmlnsPrefixAttribute&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.XmlnsPrefixAttribute" />.</summary>
      <param name="xmlNamespace" vsli:raw="The XAML namespace identifier.">Идентификатор пространства имен XAML.</param>
      <param name="prefix" vsli:raw="The recommended prefix string.">Рекомендуемая строка префикса.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlNamespace&quot; /&gt; or &lt;paramref name=&quot;prefix&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="xmlNamespace" /> или <paramref name="prefix" /> — <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlnsPrefixAttribute.Prefix">
      <summary vsli:raw="Gets the recommended prefix associated with this attribute.">Получает рекомендуемый префикс, связанный с этим атрибутом.</summary>
      <returns vsli:raw="The recommended prefix string.">Рекомендуемая строка префикса.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsPrefixAttribute.XmlNamespace">
      <summary vsli:raw="Gets the XAML namespace identifier associated with this attribute.">Получает связанный с этим атрибутом идентификатор пространства имен XAML.</summary>
      <returns vsli:raw="The XAML namespace identifier.">Идентификатор пространства имен XAML.</returns>
    </member>
    <member name="T:System.Xaml.AmbientPropertyValue">
      <summary vsli:raw="Reports information about an ambient property, as part of an &lt;see cref=&quot;T:System.Xaml.IAmbientProvider&quot; /&gt; implementation.">Сообщает сведения о внешнем свойстве как части реализации объекта <see cref="T:System.Xaml.IAmbientProvider" />.</summary>
    </member>
    <member name="M:System.Xaml.AmbientPropertyValue.#ctor(System.Xaml.XamlMember,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.AmbientPropertyValue&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.AmbientPropertyValue" />.</summary>
      <param name="property" vsli:raw="The identifier that represents the ambient property.">Идентификатор, представляющий внешнее свойство.</param>
      <param name="value" vsli:raw="The value to report.">Сообщаемое значение.</param>
    </member>
    <member name="P:System.Xaml.AmbientPropertyValue.RetrievedProperty">
      <summary vsli:raw="Gets the XAML type system identifier (&lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;) that represents the ambient property.">Получает системный идентификатор типов XAML (<see cref="T:System.Xaml.XamlMember" />), представляющий внешнее свойство.</summary>
      <returns vsli:raw="The identifier that represents the ambient property.">Идентификатор, представляющий внешнее свойство.</returns>
    </member>
    <member name="P:System.Xaml.AmbientPropertyValue.Value">
      <summary vsli:raw="Gets the value of the ambient property.">Получает значение внешнего свойства.</summary>
      <returns vsli:raw="The value of the ambient property.">Значение внешнего свойства.</returns>
    </member>
    <member name="T:System.Xaml.AttachableMemberIdentifier">
      <summary vsli:raw="Provides a XAML type system identifier representation for attachable members. The identifier structure parallels the &lt;paramref name=&quot;declaringType&quot; /&gt;&lt;see langword=&quot;.&quot; /&gt;&lt;paramref name=&quot;memberName&quot; /&gt; string form for attachable member usage.">Предоставляет представление идентификаторов присоединяемых членов системы типов XAML. Структура идентификатора присоединяемого члена представляется в форме строки <paramref name="declaringType" /><see langword="." /><paramref name="memberName" />.</summary>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.#ctor(System.Type,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</summary>
      <param name="declaringType" vsli:raw="The &lt;paramref name=&quot;declaringType&quot; /&gt; component of the identifier, which should match the name of the declaring &lt;see cref=&quot;P:System.Xaml.XamlMember.Type&quot; /&gt;.">Компонент <paramref name="declaringType" /> идентификатора, который должен соответствовать имени объявляющего типа <see cref="P:System.Xaml.XamlMember.Type" />.</param>
      <param name="memberName" vsli:raw="The &lt;paramref name=&quot;memberName&quot; /&gt; component of the identifier, which should match the &lt;see cref=&quot;P:System.Xaml.XamlMember.Name&quot; /&gt;.">Компонент <paramref name="memberName" /> идентификатора, который должен соответствовать имени <see cref="P:System.Xaml.XamlMember.Name" />.</param>
    </member>
    <member name="P:System.Xaml.AttachableMemberIdentifier.DeclaringType">
      <summary vsli:raw="Gets or sets the &lt;paramref name=&quot;declaringType&quot; /&gt; component value of the &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">Получает или задает значение компонента <paramref name="declaringType" /> объекта <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</summary>
      <returns vsli:raw="The &lt;paramref name=&quot;declaringType&quot; /&gt; component value of the &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">Значение компонента <paramref name="declaringType" /> объекта <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.Equals(System.Object)">
      <summary vsli:raw="Determines whether this instance of &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; and a specified object have the same value.">Определяет, равны ли значения этого экземпляра <see cref="T:System.Xaml.AttachableMemberIdentifier" /> и указанного объекта.</summary>
      <param name="obj" vsli:raw="The object to compare with the current &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">Объект, который требуется сравнить с текущим объектом <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is an &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; and if its value is the same as this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если параметр <paramref name="obj" /> является объектом <see cref="T:System.Xaml.AttachableMemberIdentifier" /> и его значение совпадает со значением данного экземпляра; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.Equals(System.Xaml.AttachableMemberIdentifier)">
      <summary vsli:raw="Determines whether this instance and another specified &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; object have the same value.">Определяет, равны ли значения этого экземпляра и указанного объекта <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; to compare with the current &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">Объект <see cref="T:System.Xaml.AttachableMemberIdentifier" />, с которым сравнивается текущий объект <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the objects have the same value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если значения объектов совпадают; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">Возвращает хэш-код для модуля чтения данных <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</summary>
      <returns vsli:raw="An integer hash code.">Целочисленный хэш-код.</returns>
    </member>
    <member name="P:System.Xaml.AttachableMemberIdentifier.MemberName">
      <summary vsli:raw="Gets or sets the &lt;paramref name=&quot;memberName&quot; /&gt; component value of the &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">Получает или задает значение компонента <paramref name="memberName" /> объекта <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</summary>
      <returns vsli:raw="The &lt;paramref name=&quot;memberName&quot; /&gt; component value of the &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">Значение компонента <paramref name="memberName" /> объекта <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.op_Equality(System.Xaml.AttachableMemberIdentifier,System.Xaml.AttachableMemberIdentifier)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; objects have the same value.">Определяет, совпадают ли значения двух указанных объектов <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</summary>
      <param name="left" vsli:raw="An &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.AttachableMemberIdentifier" /> или <see langword="null" />.</param>
      <param name="right" vsli:raw="An &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.AttachableMemberIdentifier" /> или <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;left&quot; /&gt; is the same as the value of &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если значение параметра <paramref name="left" /> совпадает со значением <paramref name="right" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.op_Inequality(System.Xaml.AttachableMemberIdentifier,System.Xaml.AttachableMemberIdentifier)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; objects have different values.">Определяет, различаются ли значения двух указанных объектов <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</summary>
      <param name="left" vsli:raw="An &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.AttachableMemberIdentifier" /> или <see langword="null" />.</param>
      <param name="right" vsli:raw="An &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.AttachableMemberIdentifier" /> или <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;left&quot; /&gt; differs from the value of &lt;paramref name=&quot;right&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если значение параметра <paramref name="left" /> отличается от значения параметра <paramref name="right" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.ToString">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the current &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">Возвращает строку <see cref="T:System.String" />, которая представляет текущий объект <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the current &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt;.">Объект <see cref="T:System.String" />. представляющий текущий объект <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</returns>
    </member>
    <member name="T:System.Xaml.AttachablePropertyServices">
      <summary vsli:raw="Provides static helper methods that obtain values and accessor method information from an attachable property and that work with an attached property store.">Предоставляет статические вспомогательные методы, получающие значения и сведения о методах доступа из свойства, допускающего присоединение, и работающие с хранилищем присоединяемых свойств.</summary>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.CopyPropertiesTo(System.Object,System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)">
      <summary vsli:raw="Copies all attachable property/value pairs from a specified attachable property store and into a destination array.">Копирует все пары "присоединяемое свойство-значение" из заданного хранилища присоединяемых свойств в целевой массив.</summary>
      <param name="instance" vsli:raw="A specific attachable property store that implements &lt;see cref=&quot;T:System.Xaml.IAttachedPropertyStore&quot; /&gt;; or any non-null object to access a static default attachable property store.">Определенное хранилище присоединяемых свойств, которое реализует интерфейс <see cref="T:System.Xaml.IAttachedPropertyStore" />, или любой отличный от NULL объект, используемый для доступа к статическому хранилищу присоединяемых свойств по умолчанию.</param>
      <param name="array" vsli:raw="The destination array. The array is a generic array, should be passed undimensioned, and should have components of &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; and &lt;see langword=&quot;object&quot; /&gt;.">Массив назначения. Этот универсальный массив должен передаваться без указания размерности, и в нем должны содержаться компоненты <see cref="T:System.Xaml.AttachableMemberIdentifier" /> и <see langword="object" />.</param>
      <param name="index" vsli:raw="The source index into which to copy.">Исходный индекс, по которому выполняется копирование.</param>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.GetAttachedPropertyCount(System.Object)">
      <summary vsli:raw="Returns the count of the attachable property entries that are in the specified store.">Возвращает количество записей присоединяемых свойств в указанном хранилище.</summary>
      <param name="instance" vsli:raw="A specific attachable property store that implements &lt;see cref=&quot;T:System.Xaml.IAttachedPropertyStore&quot; /&gt;; or any non-null object to access a static default attachable property store.">Определенное хранилище присоединяемых свойств, которое реализует интерфейс <see cref="T:System.Xaml.IAttachedPropertyStore" />, или любой отличный от NULL объект, используемый для доступа к статическому хранилищу присоединяемых свойств по умолчанию.</param>
      <returns vsli:raw="The integer count of entries in the store.">Количество записей в хранилище в виде целого значения.</returns>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.RemoveProperty(System.Object,System.Xaml.AttachableMemberIdentifier)">
      <summary vsli:raw="Removes the entry for the specified attachable property from the specified store.">Удаляет запись для указанного присоединяемого свойства из указанного хранилища.</summary>
      <param name="instance" vsli:raw="A specific attachable property store that implements &lt;see cref=&quot;T:System.Xaml.IAttachedPropertyStore&quot; /&gt;; or any non-null object to access a static default attachable property store.">Определенное хранилище присоединяемых свойств, которое реализует интерфейс <see cref="T:System.Xaml.IAttachedPropertyStore" />, или любой отличный от NULL объект, используемый для доступа к статическому хранилищу присоединяемых свойств по умолчанию.</param>
      <param name="name" vsli:raw="The identifier for the attachable property entry to remove from the store.">Идентификатор удаляемой из хранилища записи присоединяемого свойства.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attachable property entry for &lt;paramref name=&quot;name&quot; /&gt; was found in the store and removed from it; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если запись присоединяемого свойства для имени <paramref name="name" /> была найдена в хранилище и удалена; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.SetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object)">
      <summary vsli:raw="Sets a value for the specified attachable property in the specified store.">Задает значение для указанного присоединяемого свойства в указанном хранилище.</summary>
      <param name="instance" vsli:raw="A specific attachable property store that implements &lt;see cref=&quot;T:System.Xaml.IAttachedPropertyStore&quot; /&gt;; or any non-null object to use a static default attachable property store.">Определенное хранилище присоединяемых свойств, которое реализует интерфейс <see cref="T:System.Xaml.IAttachedPropertyStore" />, или любой объект, отличный от NULL, который будет использоваться в качестве статического хранилища присоединяемых свойств по умолчанию.</param>
      <param name="name" vsli:raw="The identifier of the attachable property entry for which to set a value.">Идентификатор записи присоединяемого свойства в хранилище, для которой нужно установить значение.</param>
      <param name="value" vsli:raw="The value to set.">Задаваемое значение.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A value could not be set in the store.">Не удалось задать значение в хранилище.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="name" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.TryGetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object@)">
      <summary vsli:raw="Attempts to get a value for the specified attachable property in the specified store. Does not throw an exception if the specific attachable property does not exist in the store.">Пытается получить значение для указанного присоединяемого свойства в указанном хранилище. Не создает исключение, если указанное присоединяемое свойство не существует в хранилище.</summary>
      <param name="instance" vsli:raw="A specific attachable property store that implements &lt;see cref=&quot;T:System.Xaml.IAttachedPropertyStore&quot; /&gt;; or any non-null object to use a static default attachable property store.">Определенное хранилище присоединяемых свойств, которое реализует интерфейс <see cref="T:System.Xaml.IAttachedPropertyStore" />, или любой объект, отличный от NULL, который будет использоваться в качестве статического хранилища присоединяемых свойств по умолчанию.</param>
      <param name="name" vsli:raw="The identifier of the attachable property entry for which to get a value.">Идентификатор записи присоединяемого свойства в хранилище, для которой нужно получить значение.</param>
      <param name="value" vsli:raw="Out parameter. When this method returns, contains the destination object for the value if &lt;paramref name=&quot;name&quot; /&gt; exists in the store and has a value.">Выходной параметр. Если объект <paramref name="name" /> существует в хранилище и имеет значение, этот параметр, возвращаемый данным методом, содержит целевой объект для значения.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attachable property entry for &lt;paramref name=&quot;name&quot; /&gt; was found in the store and a value was posted to &lt;paramref name=&quot;value&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если запись присоединяемого свойства для имени <paramref name="name" /> была найдена в хранилище и параметру <paramref name="value" /> было передано значение; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.TryGetProperty``1(System.Object,System.Xaml.AttachableMemberIdentifier,``0@)">
      <summary vsli:raw="Attempts to get a value for the specified attachable property in the specified store, returning a generic output form. Does not throw an exception if the specific attachable property does not exist in the store.">Пытается получить значение для указанного присоединяемого свойства в указанном хранилище, возвращая универсальную выходную форму. Не создает исключение, если указанное присоединяемое свойство не существует в хранилище.</summary>
      <param name="instance" vsli:raw="A specific attachable property store that implements &lt;see cref=&quot;T:System.Xaml.IAttachedPropertyStore&quot; /&gt;; or any non-null object to access a static default attachable property store.">Определенное хранилище присоединяемых свойств, которое реализует интерфейс <see cref="T:System.Xaml.IAttachedPropertyStore" />, или любой отличный от NULL объект, используемый для доступа к статическому хранилищу присоединяемых свойств по умолчанию.</param>
      <param name="name" vsli:raw="The identifier of the attachable property entry for which to get a value.">Идентификатор записи присоединяемого свойства в хранилище, для которой нужно получить значение.</param>
      <param name="value" vsli:raw="Out parameter. When this method returns, contains the destination object for the value if &lt;paramref name=&quot;name&quot; /&gt; exists in the store and has a value.">Выходной параметр. Если объект <paramref name="name" /> существует в хранилище и имеет значение, этот параметр, возвращаемый данным методом, содержит целевой объект для значения.</param>
      <typeparam name="T" vsli:raw="The expected type of the output.">Ожидаемый тип вывода.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attachable property entry for &lt;paramref name=&quot;name&quot; /&gt; was found in the store and a value was posted to &lt;paramref name=&quot;value&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если запись присоединяемого свойства для имени <paramref name="name" /> была найдена в хранилище и параметру <paramref name="value" /> было передано значение; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xaml.IAmbientProvider">
      <summary vsli:raw="Represents a service that can return information items about ambient properties or ambient types to type converters and markup extensions.">Представляет службу, которая может возвращать элементы сведений о внешних свойствах или внешних типах преобразователям типов и расширениям разметки.</summary>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Boolean,System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])">
      <summary vsli:raw="Returns an enumerable set of ambient property information items for the requested set of types and properties.">Возвращает перечислимый набор информационных элементов внешнего свойства для запрошенного набора типов и свойств.</summary>
      <param name="ceilingTypes" vsli:raw="Specifies one or more types that should stop the evaluation when they are encountered traversing upward in the object graph. This type holds the desired ambient property. May be &lt;see langword=&quot;null&quot; /&gt;.">Задает один или несколько типов, на которых должна останавливаться обработка, когда эти типы встречаются при перемещении вверх по графу объектов. Эти типы содержат требуемое внешнее свойство. Может иметь значение <see langword="null" />.</param>
      <param name="searchLiveStackOnly" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to not use a saved context; &lt;see langword=&quot;false&quot; /&gt; to use a saved context. The default is &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, чтобы не использовать сохраненный контекст; значение <see langword="false" />, чтобы использовать сохраненный контекст. Значение по умолчанию — <see langword="false" />.</param>
      <param name="types" vsli:raw="Specifies one or more type identifier objects that identify the types to be considered ambient.">Указывает один или несколько объектов идентификатора типа, которые определяют типы как внешние.</param>
      <param name="properties" vsli:raw="Specifies one or more property identifier objects that identify the properties to be considered ambient.">Задает один или несколько объектов идентификатора свойств, которые определяют свойства как внешние.</param>
      <returns vsli:raw="An enumerable set of ambient property information items for the requested set of types and properties. The property information for each &lt;see cref=&quot;T:System.Xaml.AmbientPropertyValue&quot; /&gt; that is returned will match one of the input &lt;paramref name=&quot;types&quot; /&gt; or &lt;paramref name=&quot;properties&quot; /&gt;.">Перечислимый набор информационных элементов внешнего свойства для запрошенного набора типов и свойств. Сведения о свойстве для каждого возвращенного объекта <see cref="T:System.Xaml.AmbientPropertyValue" /> будут соответствовать одному из типов (<paramref name="types" />) или свойств (<paramref name="properties" />).</returns>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])">
      <summary vsli:raw="Returns an enumerable set of ambient property information items for the requested set of properties.">Возвращает перечислимый набор информационных элементов внешнего свойства для запрошенного набора свойств.</summary>
      <param name="ceilingTypes" vsli:raw="Specifies one or more types that should stop the evaluation when they are encountered traversing upward in the object graph. This type holds the desired ambient property. May be &lt;see langword=&quot;null&quot; /&gt;.">Задает один или несколько типов, на которых должна останавливаться обработка, когда эти типы встречаются при перемещении вверх по графу объектов. Эти типы содержат требуемое внешнее свойство. Может иметь значение <see langword="null" />.</param>
      <param name="properties" vsli:raw="Specifies one or more property identifier objects that identify the properties to be considered ambient.">Задает один или несколько объектов идентификатора свойств, которые определяют свойства как внешние.</param>
      <returns vsli:raw="An enumerable set of ambient property information items for the requested set of properties. The property information for each &lt;see cref=&quot;T:System.Xaml.AmbientPropertyValue&quot; /&gt; that is returned will match one of the input &lt;paramref name=&quot;properties&quot; /&gt;.">Перечисляемый набор элементов сведений о внешних свойствах для запрошенного набора свойств. Сведения о свойстве для каждого возвращенного объекта <see cref="T:System.Xaml.AmbientPropertyValue" /> будут соответствовать одному из входных свойств <paramref name="properties" />.</returns>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Xaml.XamlType[])">
      <summary vsli:raw="Returns an enumerable set of object instances of possible ambient types for the requested types.">Возвращает перечислимый набор экземпляров объектов возможных внешних типов для запрошенных типов.</summary>
      <param name="types" vsli:raw="The set of types from which to retrieve ambient type information.">Набор типов, из которого извлекаются сведения о внешних типах.</param>
      <returns vsli:raw="An enumerable set of objects that represent the values for the requested set of &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; identifiers.">Перечисляемый набор объектов, представляющих значения для запрошенного набора идентификаторов <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])">
      <summary vsli:raw="Returns a single ambient property information item from the requested set of properties, based on which property is first encountered.">Возвращает один информационный элемент внешнего типа или свойства из запрошенного набора свойств на основе того, какое из свойств встретилось первым.</summary>
      <param name="ceilingTypes" vsli:raw="Specifies one or more types that should stop the evaluation when they are encountered traversing upward in the object graph. This type holds the desired ambient property.">Задает один или несколько типов, на которых должна останавливаться обработка, когда эти типы встречаются при перемещении вверх по графу объектов. Эти типы содержат требуемое внешнее свойство.</param>
      <param name="properties" vsli:raw="Specifies one or more objects that identify the properties to be considered ambient.">Задает один или несколько объектов, идентифицирующих свойства, которые должны рассматриваться как внешние.</param>
      <returns vsli:raw="A single ambient property information item for the first ambient property value from the &lt;paramref name=&quot;properties&quot; /&gt; list that is found.">Один элемент сведений о внешних свойствах для первого значения внешнего свойства, найденного в списке <paramref name="properties" />.</returns>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Xaml.XamlType[])">
      <summary vsli:raw="Returns the first matching object that is a possible ambient type for the requested types.">Возвращает первый соответствующий объект, являющийся возможным внешним типом для запрошенных типов.</summary>
      <param name="types" vsli:raw="The set of types from which to retrieve ambient type information.">Набор типов, из которого извлекаются сведения о внешних типах.</param>
      <returns vsli:raw="The first result object for the requested set.">Первый результирующий объект для запрошенного набора.</returns>
    </member>
    <member name="T:System.Xaml.IAttachedPropertyStore">
      <summary vsli:raw="Represents an attachable member store for an object where attachable members are set. This attachable member store can then be referenced with &lt;see cref=&quot;T:System.Xaml.AttachablePropertyServices&quot; /&gt;.">Представляет присоединяемое хранилище членов для объекта, в котором заданы присоединяемые члены. На это хранилище присоединяемых членов можно ссылаться с помощью объекта <see cref="T:System.Xaml.AttachablePropertyServices" />.</summary>
    </member>
    <member name="M:System.Xaml.IAttachedPropertyStore.CopyPropertiesTo(System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)">
      <summary vsli:raw="Copies all attachable member/value pairs from this attachable member store into a destination array.">Копирует все пары "присоединяемый член/значение" из заданного хранилища присоединяемых членов в конечный массив.</summary>
      <param name="array" vsli:raw="The destination array. The array is a generic array, should be passed undimensioned, and should have components of &lt;see cref=&quot;T:System.Xaml.AttachableMemberIdentifier&quot; /&gt; and &lt;see langword=&quot;object&quot; /&gt;.">Массив назначения. Этот универсальный массив должен передаваться без указания размерности, и в нем должны содержаться компоненты <see cref="T:System.Xaml.AttachableMemberIdentifier" /> и <see langword="object" />.</param>
      <param name="index" vsli:raw="The source index where copying should begin.">Исходный индекс, с которого необходимо начать копирование.</param>
    </member>
    <member name="P:System.Xaml.IAttachedPropertyStore.PropertyCount">
      <summary vsli:raw="Gets the count of the attachable member entries in this attachable member store.">Получает количество записей присоединяемых членов в данном хранилище присоединяемых членов.</summary>
      <returns vsli:raw="The integer count of entries in the store.">Количество записей в хранилище в виде целого значения.</returns>
    </member>
    <member name="M:System.Xaml.IAttachedPropertyStore.RemoveProperty(System.Xaml.AttachableMemberIdentifier)">
      <summary vsli:raw="Removes the entry for the specified attachable member from this attachable member store.">Удаляет запись для указанного присоединяемого члена из указанного хранилища присоединяемых членов.</summary>
      <param name="attachableMemberIdentifier" vsli:raw="The XAML type system identifier for the attachable member entry to remove.">Системный идентификатор типа XAML для удаляемой записи присоединяемого члена.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attachable member entry for &lt;paramref name=&quot;attachableMemberIdentifier&quot; /&gt; was found in the store and removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если запись присоединяемого члена для имени <paramref name="attachableMemberIdentifier" /> была найдена в хранилище и удалена; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.IAttachedPropertyStore.SetProperty(System.Xaml.AttachableMemberIdentifier,System.Object)">
      <summary vsli:raw="Sets a value for the specified attachable member in the specified store.">Задает значение для указанного присоединяемого члена в указанном хранилище.</summary>
      <param name="attachableMemberIdentifier" vsli:raw="The XAML type system identifier for the attachable member entry to set.">Системный идентификатор типа XAML для задаваемой записи присоединяемого члена.</param>
      <param name="value" vsli:raw="The value to set.">Задаваемое значение.</param>
    </member>
    <member name="M:System.Xaml.IAttachedPropertyStore.TryGetProperty(System.Xaml.AttachableMemberIdentifier,System.Object@)">
      <summary vsli:raw="Attempts to get a value for the specified attachable member in the specified store.">Пытается получить значение для указанного присоединяемого члена в указанном хранилище.</summary>
      <param name="attachableMemberIdentifier" vsli:raw="The XAML type system identifier for the attachable member entry to get.">Системный идентификатор типа XAML для получаемой записи присоединяемого члена.</param>
      <param name="value" vsli:raw="Out parameter. When this method returns, contains the destination object for the value if &lt;paramref name=&quot;attachableMemberIdentifier&quot; /&gt; exists in the store and has a value.">Выходной параметр. Если объект <paramref name="attachableMemberIdentifier" /> существует в хранилище и имеет значение, этот параметр, возвращаемый данным методом, содержит целевой объект для значения.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attachable member entry for &lt;paramref name=&quot;attachableMemberIdentifier&quot; /&gt; was found in the store and a value was posted to &lt;paramref name=&quot;value&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если запись присоединяемого члена для имени <paramref name="attachableMemberIdentifier" /> была найдена в хранилище и параметру <paramref name="value" /> было передано значение; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xaml.IDestinationTypeProvider">
      <summary vsli:raw="Represents a service that can return a CLR type system identifier for the destination type. The destination type is relevant when the destination type for a property-setting operation is indirectly reported by reflection or other mechanisms.">Представляет службу, которая возвращает идентификатор системы типов среды CLR для целевого типа. Целевой тип используется, если о целевом типе для операции задания свойства сообщается косвенно через отражение или другие механизмы.</summary>
    </member>
    <member name="M:System.Xaml.IDestinationTypeProvider.GetDestinationType">
      <summary vsli:raw="Returns the CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; that identifies the destination type for the relevant type converter or markup extension.">Возвращает тип <see cref="T:System.Type" /> среды CLR, который определяет целевой тип для соответствующего преобразователя типов или расширения разметки.</summary>
      <returns vsli:raw="A CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; value for the destination type.">Значение <see cref="T:System.Type" /> среды CLR для целевого типа.</returns>
    </member>
    <member name="T:System.Xaml.INamespacePrefixLookup">
      <summary vsli:raw="Represents a service that can return the recommended prefix for a XAML namespace mapping to consumers. Consumers might include design environments or serializers.">Представляет службу, которая может возвращать рекомендуемый префикс для сопоставления пространства имен XAML с потребителями. В число потребителей могут входить среды разработки и сериализаторы.</summary>
    </member>
    <member name="M:System.Xaml.INamespacePrefixLookup.LookupPrefix(System.String)">
      <summary vsli:raw="Returns the recommended prefix for a specified XAML namespace identifier.">Возвращает рекомендуемый префикс для заданного идентификатора пространства имен XAML.</summary>
      <param name="ns" vsli:raw="The XAML namespace identifier string for which to obtain a prefix.">Строка идентификатора пространства имен XAML, для которого необходимо получить префикс.</param>
      <returns vsli:raw="The recommended prefix.">Рекомендуемый префикс.</returns>
    </member>
    <member name="T:System.Xaml.IRootObjectProvider">
      <summary vsli:raw="Describes a service that can return the root object of markup being parsed.">Описывает службу, которая может возвращать корневой объект анализируемой разметки.</summary>
    </member>
    <member name="P:System.Xaml.IRootObjectProvider.RootObject">
      <summary vsli:raw="Gets the root object from markup or from an object graph.">Получает корневой объект из разметки или графа объектов.</summary>
      <returns vsli:raw="The root object.">Корневой объект.</returns>
    </member>
    <member name="T:System.Xaml.IXamlIndexingReader">
      <summary vsli:raw="Provides a service that represents indexed node control for a simple implementation of a node-based XAML reader.">Предоставляет службу, которая представляет собой элемент управления индексированными узлами для простой реализации средства чтения XAML, основанного на узлах.</summary>
    </member>
    <member name="P:System.Xaml.IXamlIndexingReader.Count">
      <summary vsli:raw="Gets the number of nodes in the current external node set.">Получает число узлов в текущем наборе внешних узлов.</summary>
      <returns vsli:raw="The number of nodes in the current external node set.">Число узлов в текущем наборе внешних узлов.</returns>
    </member>
    <member name="P:System.Xaml.IXamlIndexingReader.CurrentIndex">
      <summary vsli:raw="Gets or sets the index number of the current reader position for the indexed list view of XAML nodes.">Получает или задает индексный номер, показывающий текущее положение средства чтения для представления индексированного списка узлов XAML.</summary>
      <returns vsli:raw="The index number of the current reader position.">Индексный номер текущего положения средства чтения.</returns>
    </member>
    <member name="T:System.Xaml.IXamlLineInfo">
      <summary vsli:raw="Describes a service for reporting text line information in XAML reader implementations.">Описывает службу для передачи сведений о текстовой строке в реализации средства чтения XAML.</summary>
    </member>
    <member name="P:System.Xaml.IXamlLineInfo.HasLineInfo">
      <summary vsli:raw="Gets a value that specifies whether line information is available.">Получает значение, указывающее, доступны ли сведения о строке.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if line information is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если сведения о строке доступны; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.IXamlLineInfo.LineNumber">
      <summary vsli:raw="Gets the line number to report.">Получает сообщаемый номер строки.</summary>
      <returns vsli:raw="The line number to report.">Сообщаемый номер строки.</returns>
    </member>
    <member name="P:System.Xaml.IXamlLineInfo.LinePosition">
      <summary vsli:raw="Gets the line position to report.">Получает сообщаемое положение в строке.</summary>
      <returns vsli:raw="The line position to report.">Сообщаемое положение в строке.</returns>
    </member>
    <member name="T:System.Xaml.IXamlLineInfoConsumer">
      <summary vsli:raw="Describes a service where a XAML writer can use reported line information and then include the information in the output.">Описывает службу, в которой средство записи XAML может использовать сообщенные сведения о строке и включать их в выходные данные.</summary>
    </member>
    <member name="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)">
      <summary vsli:raw="Collects line information.">Собирает сведения о строке.</summary>
      <param name="lineNumber" vsli:raw="The line number to use in the output.">Номер строки для использования в выходных данных.</param>
      <param name="linePosition" vsli:raw="The line position to use in the output.">Положение в строке для использования в выходных данных.</param>
    </member>
    <member name="P:System.Xaml.IXamlLineInfoConsumer.ShouldProvideLineInfo">
      <summary vsli:raw="Gets a value that determines whether a line information service should provide values and therefore, should also call &lt;see cref=&quot;M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)&quot; /&gt; when relevant.">Получает значение, которое определяет, должна ли служба сведений о строке предоставлять значения и, как следствие, при необходимости вызывать метод <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if line information is used by the implementation; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если сведения о строке используются реализацией; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xaml.IXamlNameProvider">
      <summary vsli:raw="Provides a service that is used during save and write operations to input an object and return a XAML name.">Предоставляет службу, которая используется во время операций сохранения и записи для ввода объекта и возвращения имени XAML.</summary>
    </member>
    <member name="M:System.Xaml.IXamlNameProvider.GetName(System.Object)">
      <summary vsli:raw="Retrieves the XAML name of the specified object.">Извлекает имя XAML для указанного объекта.</summary>
      <param name="value" vsli:raw="The object to get the name for.">Объект, имя которого требуется получить.</param>
      <returns vsli:raw="The XAML name value of the requested object.">Значение имени XAML запрошенного объекта.</returns>
    </member>
    <member name="T:System.Xaml.IXamlNameResolver">
      <summary vsli:raw="Describes a service that can return objects that are specified by XAML name, or alternatively, returns a token that defers name resolution. The service can also return an enumerable set of all named objects that are in the XAML namescope.">Описывает службу, которая может возвращать объекты, указанные по имени XAML, или возвращает токен, который откладывает разрешение имен. Служба может также возвращать перечисляемый набор всех именованных объектов из области имен XAML.</summary>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.GetAllNamesAndValuesInScope">
      <summary vsli:raw="Returns an enumerable set of all named objects in the XAML namescope.">Возвращает перечисляемый набор всех именованных объектов из области имен XAML.</summary>
      <returns vsli:raw="An enumerable set of &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt; objects. For each &lt;see cref=&quot;T:System.Collections.Generic.KeyValuePair`2&quot; /&gt;, the &lt;see cref=&quot;P:System.Collections.Generic.KeyValuePair`2.Key&quot; /&gt; component is a string, and the &lt;see cref=&quot;P:System.Collections.Generic.KeyValuePair`2.Value&quot; /&gt; component is the object that uses the &lt;see cref=&quot;P:System.Collections.Generic.KeyValuePair`2.Key&quot; /&gt; name in the XAML namescope.">Перечисляемый набор объектов <see cref="T:System.Collections.Generic.KeyValuePair`2" />. Для каждого объекта <see cref="T:System.Collections.Generic.KeyValuePair`2" /> компонент <see cref="P:System.Collections.Generic.KeyValuePair`2.Key" /> является строкой, а компонент <see cref="P:System.Collections.Generic.KeyValuePair`2.Value" /> является объектом, использующим имя <see cref="P:System.Collections.Generic.KeyValuePair`2.Key" /> в области имен XAML.</returns>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String})">
      <summary vsli:raw="Returns an object that can correct for certain markup patterns that produce forward references.">Возвращает объект, который может корректировать определенные шаблоны разметки, формирующие ссылки вперед.</summary>
      <param name="names" vsli:raw="A collection of names that are possible forward references.">Коллекция имен, которые могут являться ссылками вперед.</param>
      <returns vsli:raw="An object that provides a token for lookup behavior to be evaluated later.">Объект, предоставляющий токен для поведения поиска, подлежащий обработке в будущем.</returns>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
      <summary vsli:raw="Returns an object that can correct for certain markup patterns that produce forward references.">Возвращает объект, который может корректировать определенные шаблоны разметки, формирующие ссылки вперед.</summary>
      <param name="names" vsli:raw="A collection of names that are possible forward references.">Коллекция имен, которые могут являться ссылками вперед.</param>
      <param name="canAssignDirectly" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to immediately assign the resolved name reference to the target property. &lt;see langword=&quot;false&quot; /&gt; to call the user code for a reparse. The default behavior is &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" /> для немедленного присвоения целевому свойству разрешенной ссылки на имя. Значение <see langword="false" /> для вызова пользовательского кода для повторного синтаксического анализа. Поведение по умолчанию — значение <see langword="false" />.</param>
      <returns vsli:raw="An object that provides a token for lookup behavior to be evaluated later.">Объект, предоставляющий токен для поведения поиска, подлежащий обработке в будущем.</returns>
    </member>
    <member name="P:System.Xaml.IXamlNameResolver.IsFixupTokenAvailable">
      <summary vsli:raw="Gets a value that determines whether calling &lt;see cref=&quot;M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)&quot; /&gt; is available in order to resolve a name into a token for forward resolution.">Получает значение, определяющее, доступен ли вызов метода <see cref="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" /> для разрешения имени в токен для разрешения ссылок вперед.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)&quot; /&gt; is available as an implementation that returns a useful token for forward resolution; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если метод <see cref="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" /> доступен в виде реализации, возвращающей полезный токен для разрешения ссылок вперед; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="E:System.Xaml.IXamlNameResolver.OnNameScopeInitializationComplete">
      <summary vsli:raw="Occurs when a XAML processor has registered all the relevant names to the backing XAML namescope.">Происходит, когда обработчик XAML зарегистрировал все соответствующие имена в резервной области имен XAML.</summary>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.Resolve(System.String)">
      <summary vsli:raw="Resolves an object from a name reference.">Разрешает объект из ссылки на имя.</summary>
      <param name="name" vsli:raw="The name reference to resolve.">Ссылка на имя, которую требуется разрешить.</param>
      <returns vsli:raw="The resolved object; or null.">Разрешенный объект или значение NULL.</returns>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.Resolve(System.String,System.Boolean@)">
      <summary vsli:raw="Resolves an object from a name reference, and provides a tracking value that reports whether the object is fully initialized for object graph purposes.">Разрешает объект по ссылке на имя и предоставляет значение отслеживания, указывающее, полностью ли инициализирован объект для целей графа объекта.</summary>
      <param name="name" vsli:raw="The name reference to resolve.">Ссылка на имя, которую требуется разрешить.</param>
      <param name="isFullyInitialized" vsli:raw="When this method returns, &lt;see langword=&quot;true&quot; /&gt; if the returned object has any dependencies on unresolved references; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">При возвращении данного метода значение <see langword="true" />, если возвращенный объект имеет какие-либо зависимости от неразрешенных ссылок; в противном случае — значение <see langword="false" />.</param>
      <returns vsli:raw="An object that provides a token for lookup behavior to be evaluated later.">Объект, предоставляющий токен для поведения поиска, подлежащий обработке в будущем.</returns>
    </member>
    <member name="T:System.Xaml.IXamlNamespaceResolver">
      <summary vsli:raw="Describes a service that can return a XAML namespace that is based on its prefix as it is mapped in XAML markup.">Описывает службу, которая может возвращать пространство имен XAML на основе его префикса в соответствии с сопоставлением в разметке XAML.</summary>
    </member>
    <member name="M:System.Xaml.IXamlNamespaceResolver.GetNamespace(System.String)">
      <summary vsli:raw="Retrieves a XAML namespace identifier for the specified prefix string.">Извлекает идентификатор пространства имен XAML для указанной строки префикса.</summary>
      <param name="prefix" vsli:raw="The prefix for which to retrieve the XAML namespace information.">Префикс, для которого требуется извлечь сведения о пространстве имен XAML.</param>
      <returns vsli:raw="The requested XAML namespace identifier, as a string.">Запрошенный идентификатор пространств имен XAML, представленный в виде строки.</returns>
    </member>
    <member name="M:System.Xaml.IXamlNamespaceResolver.GetNamespacePrefixes">
      <summary vsli:raw="Returns all the possible prefix-to-XAML namespace mappings (&lt;see cref=&quot;T:System.Xaml.NamespaceDeclaration&quot; /&gt; values) that are available in the active XAML schema context.">Возвращает все возможные сопоставления префиксов с пространствами имен XAML (значения <see cref="T:System.Xaml.NamespaceDeclaration" />), доступные в активном контексте схемы XAML.</summary>
      <returns vsli:raw="An enumerable set of &lt;see cref=&quot;T:System.Xaml.NamespaceDeclaration&quot; /&gt; values. To get all the prefix strings, get the &lt;see cref=&quot;P:System.Xaml.NamespaceDeclaration.Prefix&quot; /&gt; value from each value in the returned set. To get prefixes for specific XAML namespaces, process any return value that has the desired &lt;see cref=&quot;P:System.Xaml.NamespaceDeclaration.Namespace&quot; /&gt; value.">Перечисляемый набор значений <see cref="T:System.Xaml.NamespaceDeclaration" />. Чтобы получить все строки префикса, необходимо получить значение <see cref="P:System.Xaml.NamespaceDeclaration.Prefix" /> из каждого значения в наборе возвращаемых значений. Для получения префиксов для определенных пространств имен XAML необходимо обработать все возвращаемые значения, содержащие требуемое значение свойства <see cref="P:System.Xaml.NamespaceDeclaration.Namespace" />.</returns>
    </member>
    <member name="T:System.Xaml.IXamlObjectWriterFactory">
      <summary vsli:raw="Represents a service that generates a &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; that is based on the current internal parser context.">Представляет службу, которая создает объект <see cref="T:System.Xaml.XamlObjectWriter" /> на основе текущего контекста внутреннего средства синтаксического анализа.</summary>
    </member>
    <member name="M:System.Xaml.IXamlObjectWriterFactory.GetParentSettings">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; from the original internal parser context.">Возвращает объект <see cref="T:System.Xaml.XamlObjectWriterSettings" /> из исходного контекста внутреннего средства синтаксического анализа.</summary>
      <returns vsli:raw="The settings from the original internal parser context.">Параметры из исходного контекста внутреннего средства синтаксического анализа.</returns>
    </member>
    <member name="M:System.Xaml.IXamlObjectWriterFactory.GetXamlObjectWriter(System.Xaml.XamlObjectWriterSettings)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; that is based on active XAML schema context.">Возвращает объект <see cref="T:System.Xaml.XamlObjectWriter" />, основанный на активном контексте схемы XAML.</summary>
      <param name="settings" vsli:raw="The settings to use for construction and initialization of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;.">Параметры, используемые для создания и инициализации объекта <see cref="T:System.Xaml.XamlObjectWriter" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; that has the specified settings.">Объект <see cref="T:System.Xaml.XamlObjectWriter" /> с указанными параметрами.</returns>
    </member>
    <member name="T:System.Xaml.IXamlSchemaContextProvider">
      <summary vsli:raw="Represents a service that provides XAML schema context information to type converters and markup extensions.">Представляет службу, предоставляющую сведения о контексте схимы XAML преобразователям типов и расширениям разметки.</summary>
    </member>
    <member name="P:System.Xaml.IXamlSchemaContextProvider.SchemaContext">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; that is reported by the service context.">Получает объект <see cref="T:System.Xaml.XamlSchemaContext" />, сообщенный контекстом службы.</summary>
      <returns vsli:raw="The XAML schema context that is reported by the service context.">Контекст схемы XAML, сообщенный контекстом службы.</returns>
    </member>
    <member name="T:System.Xaml.NamespaceDeclaration">
      <summary vsli:raw="Declares the identifier and the prefix of a XAML namespace by storing these string values as separate properties.">Объявляет идентификатор и префикс для пространства имен XAML, сохраняя эти строковые значения в виде отдельных свойств.</summary>
    </member>
    <member name="M:System.Xaml.NamespaceDeclaration.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.NamespaceDeclaration&quot; /&gt; class using initial property values.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.NamespaceDeclaration" />, используя исходные значения свойств.</summary>
      <param name="ns" vsli:raw="The XAML namespace identifier, as a string.">Идентификатор пространства имен среды XAML, заданный в виде строки.</param>
      <param name="prefix" vsli:raw="The string prefix that is used for the namespace in prefix mappings.">Строковый префикс, используемый для пространства имен в сопоставлениях префикса.</param>
    </member>
    <member name="P:System.Xaml.NamespaceDeclaration.Namespace">
      <summary vsli:raw="Gets the identifier component of a &lt;see cref=&quot;T:System.Xaml.NamespaceDeclaration&quot; /&gt;.">Получает компонент идентификатора объявления <see cref="T:System.Xaml.NamespaceDeclaration" />.</summary>
      <returns vsli:raw="The identifier of the XAML namespace declaration.">Идентификатор объявления пространства имен XAML.</returns>
    </member>
    <member name="P:System.Xaml.NamespaceDeclaration.Prefix">
      <summary vsli:raw="Gets the prefix that is used as the XAML namespace mapping prefix for a &lt;see cref=&quot;T:System.Xaml.NamespaceDeclaration&quot; /&gt;.">Получает префикс, используемый в качестве префикса сопоставления пространства имен XAML для объявления <see cref="T:System.Xaml.NamespaceDeclaration" />.</summary>
      <returns vsli:raw="The prefix string for this &lt;see cref=&quot;T:System.Xaml.NamespaceDeclaration&quot; /&gt;.">Строка префикса для этого объявления <see cref="T:System.Xaml.NamespaceDeclaration" />.</returns>
    </member>
    <member name="T:System.Xaml.Permissions.XamlAccessLevel">
      <summary>Определяет управление доступом к сборкам и типам для загрузки XAML.</summary>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(System.Reflection.Assembly)">
      <summary>Возвращает экземпляр <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> на основе сборки, запрашиваемой объектом <see cref="T:System.Reflection.Assembly" />.</summary>
      <param name="assembly">Сборка для запроса.</param>
      <returns>Экземпляр <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> со значением <paramref name="assembly" />, используемый в качестве исходной информации для <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assembly" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(System.Reflection.AssemblyName)">
      <summary>Возвращает экземпляр <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> на основе сборки, запрашиваемой объектом <see cref="T:System.Reflection.AssemblyName" />.</summary>
      <param name="assemblyName">Имя сборки для запроса.</param>
      <returns>Экземпляр <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> со значением <paramref name="assemblyName" />, используемый в качестве исходной информации для <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="assemblyName" /> не является допустимым полным именем сборки.</exception>
    </member>
    <member name="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName">
      <summary>Получает имя <see cref="T:System.Reflection.AssemblyName" /> сборки, для которой данный объект <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> определяет разрешения.</summary>
      <returns>Имя <see cref="T:System.Reflection.AssemblyName" /> сборки, для которой данный объект <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> определяет разрешения.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.String)">
      <summary>Возвращает экземпляр <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> на основе определенного типа, указанного с помощью полного имени.</summary>
      <param name="assemblyQualifiedTypeName">Строка, анализируемая как имя типа в сборке.</param>
      <returns>Экземпляр <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> со значением <paramref name="assemblyQualifiedTypeName" />, используемым в качестве исходной информации для <see cref="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName" />, и <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" />, определяемым по отражению для типа.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="assemblyQualifiedTypeName" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="assemblyQualifiedTypeName" /> не является допустимым именем типа с указанием сборки.  
-или- 
Имя сборки в <paramref name="assemblyQualifiedTypeName" /> не является допустимым именем сборки.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.Type)">
      <summary>Возвращает экземпляр <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> на основе определенного типа, заданного объектом <see cref="T:System.Type" />.</summary>
      <param name="type">Объект <see cref="T:System.Type" />, к которому запрашивается доступ.</param>
      <returns>Экземпляр <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> со значением <paramref name="type" />, используемым в качестве исходной информации для <see cref="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName" />, и <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" />, определяемым по отражению для типа.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> — <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName">
      <summary>Получает неполное строковое имя типа, для которого данный объект <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> определяет разрешения.</summary>
      <returns>Неполное строковое имя типа, для которого данный объект <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> определяет разрешения.</returns>
    </member>
    <member name="T:System.Xaml.Permissions.XamlLoadPermission">
      <summary>Объявляет разрешения для типов загрузки из сборок, используемые модулем чтения или записи XAML.</summary>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Collections.Generic.IEnumerable{System.Xaml.Permissions.XamlAccessLevel})">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />, используя перечисляемый набор значений <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />.</summary>
      <param name="allowedAccess">Перечисляемый набор значений <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="allowedAccess" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="allowedAccess" /> содержал недопустимые данные, такие как элемент null.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />, используя существующие разрешения.</summary>
      <param name="state">Значение перечисления <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Xaml.Permissions.XamlAccessLevel)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />, используя одиночное значение <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />.</summary>
      <param name="allowedAccess">Определяющее значение <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="allowedAccess" /> — <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess">
      <summary>Получает список всех значений <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />, представляемых данным объектом <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</summary>
      <returns>Доступный только для чтения список значений <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> или <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Copy">
      <summary>Создает и возвращает идентичную копию текущего разрешения <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</summary>
      <returns>Копия текущего <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Equals(System.Object)">
      <param name="obj" />
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.FromXml(System.Security.SecurityElement)">
      <summary>Восстанавливает объект безопасности с указанным состоянием из кодировки XML.</summary>
      <param name="elem">Кодировка XML, используемая для восстановления объекта безопасности.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="elem" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elem" /> не содержит кодировку XML для <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.  

или - 
Атрибут версии в <paramref name="elem" /> не поддерживается.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.GetHashCode" />
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Includes(System.Xaml.Permissions.XamlAccessLevel)">
      <summary>Возвращает значение, указывающее, включает ли данное разрешение <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> заданный уровень доступа <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> в своем списке <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" />.</summary>
      <param name="requestedAccess">Проверяемый уровень доступа <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />.</param>
      <returns>Значение <see langword="true" />, если <paramref name="requestedAccess" /> существует в виде элемента списка <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" /> текущего разрешения <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />. В противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="requestedAccess" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Intersect(System.Security.IPermission)">
      <summary>Создает и возвращает разрешение <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />, представляющее собой пересечение текущего разрешения <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> и заданного разрешения.</summary>
      <param name="target">Объект <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />, используемый для пересечения с текущим объектом <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />. Может иметь значение <see langword="null" />.</param>
      <returns>Новое разрешение, представляющее собой пересечение текущего разрешения <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> и заданного разрешения <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />. Это новое разрешение равно <see langword="null" />, если пересечение является пустым.</returns>
      <exception cref="T:System.ArgumentException">Значение <paramref name="target" /> не равно <see langword="null" /> или не является объектом <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Определяет, является ли текущее разрешение <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> подмножеством указанного разрешения.</summary>
      <param name="target">Разрешение, для которого требуется проверить отношение подмножества. Может иметь значение <see langword="null" />.</param>
      <returns>
        <see langword="true" />, если текущее разрешение является подмножеством заданного разрешения <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />, в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Значение <paramref name="target" /> не равно <see langword="null" /> или не является объектом <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted">
      <summary>Возвращает значение, которое определяет, указывает ли данный объект <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> на неограниченные разрешения.</summary>
      <returns>Значение <see langword="true" />, если данный объект <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> указывает на неограниченные разрешения. Значение <see langword="false" />, если данный объект <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> имеет определенные ограничения уровня доступа в <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" /> или не содержит разрешений.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.ToXml">
      <summary>Создает кодировку XML данного разрешения <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> и его текущего состояния.</summary>
      <returns>Кодировка XML данного разрешения <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />, включающая все сведения о состоянии.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Union(System.Security.IPermission)">
      <summary>Создает разрешение, представляющее собой объединение текущего разрешения <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> и заданного разрешения.</summary>
      <param name="other">Объект <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />, используемый в сочетании с текущим объектом <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />. Может иметь значение <see langword="null" />.</param>
      <returns>Новый объект <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />, представляющий собой объединение текущего набора <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> и указанного набора <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</returns>
      <exception cref="T:System.ArgumentException">Значение <paramref name="other" /> не равно <see langword="null" /> или не является объектом <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</exception>
    </member>
    <member name="T:System.Xaml.Schema.AllowedMemberLocations">
      <summary vsli:raw="Specifies the syntax restrictions enforced on a property when it is set in XAML, as reported by a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">Задает ограничения синтаксиса, принудительно применяемые для свойства при его назначении в XAML, в соответствии с <see cref="T:System.Xaml.XamlDirective" />.</summary>
    </member>
    <member name="F:System.Xaml.Schema.AllowedMemberLocations.Any">
      <summary vsli:raw="Property can be set in either &lt;see cref=&quot;F:System.Xaml.Schema.AllowedMemberLocations.Attribute&quot; /&gt; or &lt;see cref=&quot;F:System.Xaml.Schema.AllowedMemberLocations.MemberElement&quot; /&gt; location. (This enumeration member is defined as the combination of those values.)">Свойство может быть задано в <see cref="F:System.Xaml.Schema.AllowedMemberLocations.Attribute" /> или <see cref="F:System.Xaml.Schema.AllowedMemberLocations.MemberElement" />. (Данный член перечисления определен как комбинация этих значений.)</summary>
    </member>
    <member name="F:System.Xaml.Schema.AllowedMemberLocations.Attribute">
      <summary vsli:raw="Property can be set in XAML attribute syntax.">Свойство может быть установлено в синтаксисе атрибутов XAML.</summary>
    </member>
    <member name="F:System.Xaml.Schema.AllowedMemberLocations.MemberElement">
      <summary vsli:raw="Property can be set in XAML property element syntax.">Свойство может быть установлено в синтаксисе элемента XAML-свойства.</summary>
    </member>
    <member name="F:System.Xaml.Schema.AllowedMemberLocations.None">
      <summary vsli:raw="Property cannot be set in XAML at all. This is the default.">Свойство вообще не может быть установлено в XAML. Задано по умолчанию.</summary>
    </member>
    <member name="T:System.Xaml.Schema.ShouldSerializeResult">
      <summary vsli:raw="Defines serialization behavior as reported by a &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;.">Определяет поведение сериализации, сообщаемое объектом <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
    </member>
    <member name="F:System.Xaml.Schema.ShouldSerializeResult.Default">
      <summary vsli:raw="Unknown, defer to the type of the member.">Неизвестно, используется тип члена.</summary>
    </member>
    <member name="F:System.Xaml.Schema.ShouldSerializeResult.False">
      <summary vsli:raw="Do not serialize the result.">Результат без сериализации.</summary>
    </member>
    <member name="F:System.Xaml.Schema.ShouldSerializeResult.True">
      <summary vsli:raw="Serialize the result.">Результат с сериализацией.</summary>
    </member>
    <member name="T:System.Xaml.Schema.XamlCollectionKind">
      <summary vsli:raw="Describes the collection metaphor (if any) used by a XAML member.">Описывает метафору коллекции (если есть), используемые членом XAML.</summary>
    </member>
    <member name="F:System.Xaml.Schema.XamlCollectionKind.Array">
      <summary vsli:raw="XAML member supports an array collection.">Член XAML поддерживает массив-коллекцию.</summary>
    </member>
    <member name="F:System.Xaml.Schema.XamlCollectionKind.Collection">
      <summary vsli:raw="XAML member supports a list or a collection.">Член XAML поддерживает список или коллекцию.</summary>
    </member>
    <member name="F:System.Xaml.Schema.XamlCollectionKind.Dictionary">
      <summary vsli:raw="XAML member supports a dictionary (key-value pairs).">Член XAML поддерживает словарь (пары ключ-значение).</summary>
    </member>
    <member name="F:System.Xaml.Schema.XamlCollectionKind.None">
      <summary vsli:raw="XAML member does not support a collection.">Член XAML не поддерживает коллекцию.</summary>
    </member>
    <member name="T:System.Xaml.Schema.XamlMemberInvoker">
      <summary vsli:raw="Provides an extension point that can access member characteristics of a XAML member through techniques other than reflection.">Предоставляет точку расширения, которая может осуществлять доступ к характеристикам XAML-члена с использованием методик, отличных от отражения.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.#ctor(System.Xaml.XamlMember)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; class, based on a provided &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Инициализирует новый экземпляр <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> на основе заданного <see cref="T:System.Xaml.XamlMember" />.</summary>
      <param name="member" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; value for the specific XAML member relevant to this &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;.">Значение <see cref="T:System.Xaml.XamlMember" /> для определенного XAML-члена, соответствующего данному объекту <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;member&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="member" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)">
      <summary vsli:raw="Gets a value of the relevant property from an instance.">Получает значение соответствующего свойства из элемента.</summary>
      <param name="instance" vsli:raw="An instance of the owner type for the member.">Экземпляр типа владельца для члена.</param>
      <returns vsli:raw="The requested property value.">Запрашиваемое значение свойства.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> — <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; that is based on an unknown &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; Invoked this method on a write-only member.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Вызывает этот метод в объекте <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, основанном на неизвестном типе <see cref="T:System.Xaml.XamlMember" />.  
 -или-  
Этот метод вызван для члена, доступного только на запись.  
 -или-  
 Свойство <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)">
      <summary vsli:raw="Sets a value of the relevant property on an instance.">Задает значение соответствующего свойства в элементе.</summary>
      <param name="instance" vsli:raw="An instance of the owner type for the member.">Экземпляр типа владельца для члена.</param>
      <param name="value" vsli:raw="The property value to set.">Задаваемое значение свойства.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="instance" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; that is based on an unknown &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; Invoked this method on a read-only member.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Вызывает этот метод в объекте <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, основанном на неизвестном типе <see cref="T:System.Xaml.XamlMember" />.  
 -или-  
Этот метод вызван для члена, доступного только для чтения.  
 -или-  
 Свойство <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue(System.Object)">
      <summary vsli:raw="Indicates whether the value needs to be persisted by serialization processes.">Указывает, нужно ли сохранять значение с помощью процессов сериализации.</summary>
      <param name="instance" vsli:raw="The instance with the property to be examined for persistence.">Экземпляр со свойством, возможность сохранения которого нужно проверить.</param>
      <returns vsli:raw="A value of the enumeration.">Значение перечисления.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the CLR method that gets values for the property that is relevant for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;.">Получает <see cref="T:System.Reflection.MethodInfo" /> для метода CLR, который получает значения свойства, соответствующего данному объекту <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the CLR method that gets values for the property that is relevant for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Reflection.MethodInfo" /> для метода CLR, который получает значения свойства, соответствующего данному объекту <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, или <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the CLR method that sets values for the property that is relevant for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;.">Получает <see cref="T:System.Reflection.MethodInfo" /> для метода CLR, который задает значения свойства, соответствующего данному объекту <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the CLR method that sets values for the property that is relevant for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Reflection.MethodInfo" /> для метода CLR, который задает значения свойства, соответствующего данному объекту <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, или <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker">
      <summary vsli:raw="Provides a static value that represents an unknown, not fully implemented &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;.">Предоставляет статическое значение, представляющее неизвестный, не реализованный полностью <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <returns vsli:raw="A static value that represents an unknown, not fully implemented &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt;.">Статическое значение, представляющее неизвестный, не реализованный полностью <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</returns>
    </member>
    <member name="T:System.Xaml.Schema.XamlTypeInvoker">
      <summary vsli:raw="Provides an extension point that can construct instances of a XAML type through techniques other than reflection and constructors.">Предоставляет точку расширения, которая может осуществлять построение экземпляров типа XAML с использованием методик, отличных от отражения и конструкторов.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.#ctor(System.Xaml.XamlType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; class, based on a provided &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Инициализирует новый экземпляр <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> на основе заданного <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; value for the specific XAML type relevant to this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Значение <see cref="T:System.Xaml.XamlType" /> для определенного XAML-типа, соответствующего данному объекту <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.AddToCollection(System.Object,System.Object)">
      <summary vsli:raw="Adds the provided item to an instance of the type that is relevant to this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Добавляет указанный элемент в экземпляр типа, относящегося к этому объекту <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</summary>
      <param name="instance" vsli:raw="An instance of the type specified by the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; used for constructing this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Экземпляр типа, заданного объектом <see cref="T:System.Xaml.XamlType" />, который используется для построения данного объекта <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</param>
      <param name="item" vsli:raw="The item to add.">Добавляемый элемент.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; that is based on an unknown &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; where the relevant type is not a collection.">Вызывает этот метод в объекте <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />, основанном на неизвестном типе <see cref="T:System.Xaml.XamlType" />.  
 -или-  
Этот метод вызван для <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />, где соответствующий тип не является коллекцией.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="instance" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Xaml.XamlSchemaException" vsli:raw="&lt;see cref=&quot;M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; returns &lt;see langword=&quot;null&quot; /&gt;.">Метод <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> для этого объекта <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> возвращает значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary(System.Object,System.Object,System.Object)">
      <summary vsli:raw="Adds the provided key and item value to an instance of the type that is relevant to this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Добавляет предоставленный ключ и значение элемента в экземпляр типа, который относится к этому элементу <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</summary>
      <param name="instance" vsli:raw="An instance of the type specified by the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; used for constructing this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Экземпляр типа, указанного параметром <see cref="T:System.Xaml.XamlType" />, который используется для создания этого объекта <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</param>
      <param name="key" vsli:raw="Dictionary key for the item to add.">Ключ словаря для добавления элемента.</param>
      <param name="item" vsli:raw="The item value to add.">Добавляемое значение элемента.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; that is based on an unknown &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; where the relevant type is not a dictionary.">Вызывает этот метод в объекте <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />, основанном на неизвестном типе <see cref="T:System.Xaml.XamlType" />.  
 -или-  
Этот метод вызван для <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />, где соответствующий тип не является словарем.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="instance" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Xaml.XamlSchemaException" vsli:raw="&lt;see cref=&quot;M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; returns &lt;see langword=&quot;null&quot; /&gt;.">Метод <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> для этого объекта <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> возвращает значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.CreateInstance(System.Object[])">
      <summary vsli:raw="Creates an object instance based on the construction-initiated &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Создает экземпляр объекта на основе <see cref="T:System.Xaml.XamlType" />, инициируемого при конструкции для данного <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</summary>
      <param name="arguments" vsli:raw="An array of objects that supply the &lt;see langword=&quot;x:ConstructorArgs&quot; /&gt; for the instance. May be &lt;see langword=&quot;null&quot; /&gt; for types that do not require or use &lt;see langword=&quot;x:ConstructorArgs&quot; /&gt;.">Массив объектов, которые предоставляют аргументы <see langword="x:ConstructorArgs" /> для экземпляра. Может быть <see langword="null" /> для типов, не требующих использования <see langword="x:ConstructorArgs" />.</param>
      <returns vsli:raw="The created instance based on the construction-initiated &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Созданный экземпляр объекта на основе <see cref="T:System.Xaml.XamlType" />, инициируемого при конструкции для данного <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</returns>
      <exception cref="T:System.MissingMethodException" vsli:raw="Could not resolve a constructor.">Не удалось разрешить конструктор.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)">
      <summary vsli:raw="Returns the relevant &lt;see langword=&quot;Add&quot; /&gt; method for a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; that is relevant to a collection or dictionary.">Возвращает соответствующий метод <see langword="Add" /> для объекта <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />, соответствующего коллекции или словарю.</summary>
      <param name="contentType" vsli:raw="&lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the item type that is used by the &lt;see langword=&quot;Add&quot; /&gt; method.">
        <see cref="T:System.Xaml.XamlType" /> для типа элемента, используемого методом <see langword="Add" />.</param>
      <returns vsli:raw="CLR &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; information for the &lt;see langword=&quot;Add&quot; /&gt; method, or null.">Сведения <see cref="T:System.Reflection.MethodInfo" /> в среде CLR для метода <see langword="Add" />, или null.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;contentType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="contentType" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod">
      <summary vsli:raw="Returns an object representing a method that can enumerate over items.">Возвращает объект, представляющий метод, который может осуществлять перечисление по элементам.</summary>
      <returns vsli:raw="&lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for an enumerator method, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Reflection.MethodInfo" /> для метода перечислителя, или <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.GetItems(System.Object)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object representing the set of items.">Возвращает объект <see cref="T:System.Collections.IEnumerator" />, представляющий набор элементов.</summary>
      <param name="instance" vsli:raw="An instance of the type specified by the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; used for constructing this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Экземпляр типа, указанного параметром <see cref="T:System.Xaml.XamlType" />, который используется для создания этого объекта <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object, or &lt;see langword=&quot;null&quot; /&gt;.">Объект <see cref="T:System.Collections.IEnumerator" /> или <see langword="null" />.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; that is based on an unknown &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.&#xA;&#xA; -or-&#xA;&#xA; Invoked this method on a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; where the relevant type is not a collection or dictionary.">Вызывает этот метод в объекте <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />, основанном на неизвестном типе <see cref="T:System.Xaml.XamlType" />.  
 -или-  
Этот метод вызван для <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />, где соответствующий тип не является коллекцией или словарем.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instance" /> — <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler">
      <summary vsli:raw="Gets the handler to use when a &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; calls into an implemented &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtension&quot; /&gt;.">Получает обработчик, который необходимо использовать при вызове реализованного объекта <see cref="T:System.Xaml.XamlObjectWriter" /> объектом <see cref="T:System.Windows.Markup.MarkupExtension" />.</summary>
      <returns vsli:raw="A handler implementation that handles this case.">Реализация обработчика, обрабатывающая такой случай.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler">
      <summary vsli:raw="Gets the handler to use when a &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; calls into a CLR-implemented &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt;.">Получает обработчик, используемый, когда <see cref="T:System.Xaml.XamlObjectWriter" /> вызывает реализованный в среде CLR метод <see cref="T:System.ComponentModel.TypeConverter" />.</summary>
      <returns vsli:raw="A handler implementation that handles this case.">Реализация обработчика, обрабатывающая такой случай.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker">
      <summary vsli:raw="Provides a static value that represents an unknown, not fully implemented &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Предоставляет статическое значение, представляющее неизвестный, не реализованный полностью <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</summary>
      <returns vsli:raw="A static value that represents an unknown, not fully implemented &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt;.">Статическое значение, представляющее неизвестный, не реализованный полностью <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</returns>
    </member>
    <member name="T:System.Xaml.Schema.XamlTypeName">
      <summary vsli:raw="Provides a means to specify a XAML type in terms of name and namespace.">Предоставляет средства для указания XAML-типа в терминах имени и пространства имен.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.Schema.XamlTypeName" />.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; class, based on name and namespace strings.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.Schema.XamlTypeName" /> на основе имени и пространства имен.</summary>
      <param name="xamlNamespace" vsli:raw="The XAML namespace that contains name.">Пространство имен XAML, содержащее имя.</param>
      <param name="name" vsli:raw="The name of the type to create a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; for.">Имя типа, для которого необходимо создать <see cref="T:System.Xaml.Schema.XamlTypeName" />.</param>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Xaml.Schema.XamlTypeName})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; class, based on name and namespace strings as well as an array of type arguments.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.Schema.XamlTypeName" /> на основе строк имени и пространства имен, а также массива аргументов типов.</summary>
      <param name="xamlNamespace" vsli:raw="The XAML namespace that contains &lt;paramref name=&quot;name&quot; /&gt;.">Пространство имен XAML, содержащее <paramref name="name" />.</param>
      <param name="name" vsli:raw="The name of the type to create a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; for.">Имя типа, для которого необходимо создать <see cref="T:System.Xaml.Schema.XamlTypeName" />.</param>
      <param name="typeArguments" vsli:raw="An array of type arguments, each of which must be a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt;.">Массив аргументов типов, каждый из которых должен иметь значение <see cref="T:System.Xaml.Schema.XamlTypeName" />.</param>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.#ctor(System.Xaml.XamlType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; class, based on an existing &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.Schema.XamlTypeName" /> на основе существующего объекта <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="xamlType" vsli:raw="An existing &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Существующий <see cref="T:System.Xaml.XamlType" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="xamlType" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeName.Name">
      <summary vsli:raw="Gets the name used to construct this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt;.">Получает имя, используемое для построения данного имени <see cref="T:System.Xaml.Schema.XamlTypeName" />.</summary>
      <returns vsli:raw="The name of the type.">Имя типа.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeName.Namespace">
      <summary vsli:raw="Gets the XAML namespace identifier used to construct this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt;.">Получает идентификатор пространства имен XAML, используемый для построения данного имени <see cref="T:System.Xaml.Schema.XamlTypeName" />.</summary>
      <returns vsli:raw="The XAML namespace identifier.">Идентификатор пространства имен XAML.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.Parse(System.String,System.Xaml.IXamlNamespaceResolver)">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; value based on a type name and an object that can resolve a markup prefix into a namespace.">Предоставляет значение <see cref="T:System.Xaml.Schema.XamlTypeName" /> на основе имени типа и объекта, который может разрешить префикс разметки в пространство имен.</summary>
      <param name="typeName" vsli:raw="The type name to create a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; value for.">Имя типа, для которого необходимо создать значение <see cref="T:System.Xaml.Schema.XamlTypeName" />.</param>
      <param name="namespaceResolver" vsli:raw="An object or service provider that implements &lt;see cref=&quot;T:System.Xaml.IXamlNamespaceResolver&quot; /&gt;.">Объект или поставщик услуг, реализующий <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</param>
      <returns vsli:raw="The created &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt;.">Созданный <see cref="T:System.Xaml.Schema.XamlTypeName" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;typeName&quot; /&gt; or &lt;paramref name=&quot;namespaceResolver&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="typeName" /> или <paramref name="namespaceResolver" /> — <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="String cannot be parsed.">Строка не может быть проанализирована.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.ParseList(System.String,System.Xaml.IXamlNamespaceResolver)">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; value based on a string that can specify multiple type names, and an object that can resolve a markup prefix into a namespace.">Предоставляет значение <see cref="T:System.Xaml.Schema.XamlTypeName" /> на основе строки, в которой может указываться несколько имен типов, и объекта, который может разрешить префикс разметки в пространство имен.</summary>
      <param name="typeNameList" vsli:raw="A string that contains multiple types.">Строка, содержащая несколько типов.</param>
      <param name="namespaceResolver" vsli:raw="An object or service provider that implements &lt;see cref=&quot;T:System.Xaml.IXamlNamespaceResolver&quot; /&gt;.">Объект или поставщик услуг, реализующий <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</param>
      <returns vsli:raw="The created &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt;.">Созданный <see cref="T:System.Xaml.Schema.XamlTypeName" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;typeNameList&quot; /&gt; or &lt;paramref name=&quot;namespaceResolver&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="typeNameList" /> или <paramref name="namespaceResolver" /> — <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="String cannot be parsed.">Строка не может быть проанализирована.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.ToString">
      <summary vsli:raw="Converts the value of this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; to its equivalent string representation.">Преобразует значение данного объекта <see cref="T:System.Xaml.Schema.XamlTypeName" /> в эквивалентное ему строковое представление.</summary>
      <returns vsli:raw="The equivalent string representation of this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt;.">Эквивалентное строковое представление этого объекта <see cref="T:System.Xaml.Schema.XamlTypeName" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.ToString(System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName},System.Xaml.INamespacePrefixLookup)">
      <summary vsli:raw="Converts the value of this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; to its equivalent string representation, which can be used in markup syntax for an object element usage of multiple types.">Преобразует значение данного объекта <see cref="T:System.Xaml.Schema.XamlTypeName" /> в эквивалентное ему строковое представление, которое может использоваться в синтаксисе разметки для использования элементов объектов нескольких типов.</summary>
      <param name="typeNameList" vsli:raw="A list of types.">Список типов.</param>
      <param name="prefixLookup" vsli:raw="A service reference for prefix lookup.">Ссылка на службу для поиска префикса.</param>
      <returns vsli:raw="A concatenated string of all type results.">Объединенная строка, содержащая результаты по всем типам.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;prefixLookup&quot; /&gt; or &lt;paramref name=&quot;typeNameList&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="prefixLookup" /> или <paramref name="typeNameList" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.ToString(System.Xaml.INamespacePrefixLookup)">
      <summary vsli:raw="Converts the value of this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; to its equivalent string representation, which can be used in markup syntax for an object element usage of a type.">Преобразует значение данного объекта <see cref="T:System.Xaml.Schema.XamlTypeName" /> в эквивалентное ему строковое представление, которое может использоваться в синтаксисе разметки для использования элементов объектов определенного типа.</summary>
      <param name="prefixLookup" vsli:raw="A service reference for prefix lookup.">Ссылка на службу для поиска префикса.</param>
      <returns vsli:raw="A prefixed usage string.">Строка с использованием префикса.</returns>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Xaml.Schema.XamlTypeName.Namespace&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Xaml.Schema.XamlTypeName.Name&quot; /&gt; is not valid.  &#xA;  &#xA; -or-  &#xA;  &#xA; Could not look up the prefix.">
        <see cref="P:System.Xaml.Schema.XamlTypeName.Namespace" /> для этого <see cref="T:System.Xaml.Schema.XamlTypeName" /> равно <see langword="null" />.  

или - 
Недопустимый параметр <see cref="P:System.Xaml.Schema.XamlTypeName.Name" />.  

или - 
Не удалось найти префикс.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.TryParse(System.String,System.Xaml.IXamlNamespaceResolver,System.Xaml.Schema.XamlTypeName@)">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; value based on a type name and an object that can resolve a markup prefix into a namespace.">Предоставляет значение <see cref="T:System.Xaml.Schema.XamlTypeName" /> на основе имени типа и объекта, который может разрешить префикс разметки в пространство имен.</summary>
      <param name="typeName" vsli:raw="The type name to create a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; value for.">Имя типа, для которого необходимо создать значение <see cref="T:System.Xaml.Schema.XamlTypeName" />.</param>
      <param name="namespaceResolver" vsli:raw="An object or service provider that implements &lt;see cref=&quot;T:System.Xaml.IXamlNamespaceResolver&quot; /&gt;.">Объект или поставщик услуг, реализующий <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</param>
      <param name="result" vsli:raw="Out parameter that contains the created &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; if the return value is &lt;see langword=&quot;true&quot; /&gt;.">Выходной параметр, содержащий созданное имя <see cref="T:System.Xaml.Schema.XamlTypeName" /> при возвращаемом значении <see langword="true" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the parse was successful and &lt;paramref name=&quot;result&quot; /&gt; contains a useful value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если анализ был выполнен успешно и <paramref name="result" /> содержит полезное значение; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;typeName&quot; /&gt; or &lt;paramref name=&quot;namespaceResolver&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="typeName" /> или <paramref name="namespaceResolver" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.TryParseList(System.String,System.Xaml.IXamlNamespaceResolver,System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}@)">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; value based on a string that can specify multiple type names, and an object that can resolve a markup prefix into a namespace.">Предоставляет значение <see cref="T:System.Xaml.Schema.XamlTypeName" /> на основе строки, в которой может указываться несколько имен типов, и объекта, который может разрешить префикс разметки в пространство имен.</summary>
      <param name="typeNameList" vsli:raw="A string that contains multiple types.">Строка, содержащая несколько типов.</param>
      <param name="namespaceResolver" vsli:raw="An object or service provider that implements &lt;see cref=&quot;T:System.Xaml.IXamlNamespaceResolver&quot; /&gt;.">Объект или поставщик услуг, реализующий <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</param>
      <param name="result" vsli:raw="Out parameter that contains the created &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt; if the return value is &lt;see langword=&quot;true&quot; /&gt;.">Выходной параметр, содержащий созданное имя <see cref="T:System.Xaml.Schema.XamlTypeName" /> при возвращаемом значении <see langword="true" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the parse was successful and &lt;paramref name=&quot;result&quot; /&gt; contains a useful value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если анализ был выполнен успешно и <paramref name="result" /> содержит полезное значение; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;typeNameList&quot; /&gt; or &lt;paramref name=&quot;namespaceResolver&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="typeNameList" /> или <paramref name="namespaceResolver" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeName.TypeArguments">
      <summary vsli:raw="Gets the type arguments used to construct this &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeName&quot; /&gt;.">Получает аргументы типов, используемые для построения данного имени <see cref="T:System.Xaml.Schema.XamlTypeName" />.</summary>
      <returns vsli:raw="The type arguments, if any. May be null.">Аргументы типов (если есть). Может принимать значение NULL.</returns>
    </member>
    <member name="T:System.Xaml.Schema.XamlTypeTypeConverter">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object to and from a string that represents the type name. This functionality is used for XAML extensibility by markup definitions, via &lt;see cref=&quot;T:System.Windows.Markup.PropertyDefinition&quot; /&gt;.">Преобразует объект <see cref="T:System.Xaml.XamlType" /> в строку, представляющую имя типа, и из нее. Эта функция используется для расширения XAML с помощью определений разметки через <see cref="T:System.Windows.Markup.PropertyDefinition" />.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeTypeConverter&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.Schema.XamlTypeTypeConverter" />.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an object of the specified type can be converted to an instance of &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;, using the specified context.">Определяет, может ли объект заданного типа быть преобразован в экземпляр типа <see cref="T:System.Xaml.XamlType" /> с использованием заданного контекста.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Контекст форматирования, содержащий информацию о среде, из которой вызывается данный преобразователь.</param>
      <param name="sourceType" vsli:raw="The type being evaluated for conversion.">Тип, для которого определяется возможность преобразования.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this converter can perform the operation; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если данный преобразователь может выполнить операцию, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether an instance of &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; can be converted to the specified type, using the specified context.">Определяет, может ли экземпляр типа <see cref="T:System.Xaml.XamlType" /> быть преобразован к заданному типу с использованием заданного контекста.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Контекст форматирования, содержащий информацию о среде, из которой вызывается данный преобразователь.</param>
      <param name="destinationType" vsli:raw="The type being evaluated for conversion.">Тип, для которого определяется возможность преобразования.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this converter can perform the operation; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если данный преобразователь может выполнить операцию, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Attempts to convert the specified object to a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;, using the specified context.">Пытается преобразовать указанный объект в <see cref="T:System.Xaml.XamlType" />, используя заданный контекст.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Контекст форматирования, содержащий информацию о среде, из которой вызывается данный преобразователь.</param>
      <param name="culture" vsli:raw="Culture specific information.">Сведения, связанные с языком и региональными параметрами.</param>
      <param name="value" vsli:raw="The object to convert.">Преобразуемый объект.</param>
      <returns vsli:raw="The converted object.">Преобразованный объект.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be converted.">
        <paramref name="value" /> невозможно преобразовать.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Attempts to convert a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; to the specified type, using the specified context.">Пытается преобразовать объект <see cref="T:System.Xaml.XamlType" /> к заданному типу, используя заданный контекст.</summary>
      <param name="context" vsli:raw="A format context that provides information about the environment from which this converter is being invoked.">Контекст форматирования, содержащий информацию о среде, из которой вызывается данный преобразователь.</param>
      <param name="culture" vsli:raw="Culture specific information.">Сведения, связанные с языком и региональными параметрами.</param>
      <param name="value" vsli:raw="The object to convert.">Преобразуемый объект.</param>
      <param name="destinationType" vsli:raw="The type to convert the object to.">Тип, в который требуется преобразовать объект.</param>
      <returns vsli:raw="The converted object.">Преобразованный объект.</returns>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be converted.">
        <paramref name="value" /> невозможно преобразовать.</exception>
    </member>
    <member name="T:System.Xaml.Schema.XamlValueConverter`1">
      <summary vsli:raw="Provides a common API surface for techniques that generate initialization or serialization values for XAML based on input other than the eventual destination type. This includes markup extensions and type converters.">Предоставляет общую область API для всех методик, генерирующих значения инициализации или сериализации XAML на основе входных значений, отличных от конечного целевого типа. Это включает расширения разметки и преобразователи типов.</summary>
      <typeparam name="TConverterBase" vsli:raw="The CLR base class for the particular converter that this &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; represents. Typically this is one of the following: &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt;; &lt;see cref=&quot;T:System.Windows.Markup.MarkupExtension&quot; /&gt;; &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt;.">Базовый класс CLR для определенного преобразователя, представляемого данным объектом <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />. Обычно это один из следующих параметров: <see cref="T:System.ComponentModel.TypeConverter" />; <see cref="T:System.Windows.Markup.MarkupExtension" />; <see cref="T:System.Windows.Markup.ValueSerializer" />;</typeparam>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; class, based on a converter implementing &lt;see cref=&quot;T:System.Type&quot; /&gt; and the target/destination type of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> на основе преобразователя, реализующего <see cref="T:System.Type" />, и целевого типа <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</summary>
      <param name="converterType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that implements the converter behavior.">
        <see cref="T:System.Type" />, реализующий поведение преобразователя.</param>
      <param name="targetType" vsli:raw="The target/destination &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">Целевой тип <see cref="T:System.Xaml.XamlType" /> объекта <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</param>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; class, based on a converter implementing &lt;see cref=&quot;T:System.Type&quot; /&gt; the target/destination type of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;, and a string name.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> на основе преобразователя, реализующего <see cref="T:System.Type" />, целевого типа <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> и строкового имени.</summary>
      <param name="converterType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that implements the converter behavior.">
        <see cref="T:System.Type" />, реализующий поведение преобразователя.</param>
      <param name="targetType" vsli:raw="The target/destination &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">Целевой тип <see cref="T:System.Xaml.XamlType" /> объекта <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</param>
      <param name="name" vsli:raw="The string name.">Имя строки.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="All three parameters are &lt;see langword=&quot;null&quot; /&gt; (at least one is required to be non-null).">Все три параметра имеют значение <see langword="null" /> (по крайней мере один должен отличаться от null).</exception>
    </member>
    <member name="P:System.Xaml.Schema.XamlValueConverter`1.ConverterInstance">
      <summary vsli:raw="Gets a created instance of the converter implementation.">Получает созданный экземпляр реализации преобразователя.</summary>
      <returns vsli:raw="A created instance of the converter implementation, or &lt;see langword=&quot;null&quot; /&gt;.">Созданный экземпляр реализации преобразователя, или <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlValueConverter`1.ConverterType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Type&quot; /&gt; for the class that implements the converter behavior.">Получает тип <see cref="T:System.Type" /> для класса, который реализует поведение преобразователя.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; for the class that implements the converter behavior.">Тип <see cref="T:System.Type" /> для класса, который реализует поведение преобразователя.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.CreateInstance">
      <summary vsli:raw="Returns an instance of the converter implementation.">Возвращает экземпляр реализации преобразователя.</summary>
      <returns vsli:raw="An instance of the converter implementation, or &lt;see langword=&quot;null&quot; /&gt;.">Экземпляр реализации преобразователя, или <see langword="null" />.</returns>
      <exception cref="T:System.Xaml.XamlSchemaException" vsli:raw="Converter did not implement the correct base type.">Преобразователь не реализовал правильный базовый тип.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.Equals(System.Object)">
      <summary vsli:raw="Determines whether this instance of &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; and a specified object, which must also be a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object, have the same value.">Определяет, равны ли значения этого экземпляра <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> и указанного объекта, который также должен быть объектом <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</summary>
      <param name="obj" vsli:raw="The object to compare.">Объект для сравнения.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; and its value is the same as this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если объект <paramref name="obj" /> имеет тип <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> и его значение совпадает со значением данного экземпляра; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.Equals(System.Xaml.Schema.XamlValueConverter{`0})">
      <summary vsli:raw="Determines whether this instance of &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; and another &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object have the same value.">Определяет, равны ли значения данного экземпляра <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> и другого объекта <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</summary>
      <param name="other" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; to compare.">Сравниваемый шаблон <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;other&quot; /&gt; is a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; and its value is the same as this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если <paramref name="other" /> имеет тип <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> и его значение совпадает со значением данного экземпляра; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.GetHashCode">
      <summary vsli:raw="Returns the hash code for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">Возвращает хэш-код для модуля чтения данных <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</summary>
      <returns vsli:raw="An integer hash code.">Целочисленный хэш-код.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlValueConverter`1.Name">
      <summary vsli:raw="Gets a string name for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">Получает строковое имя данного <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</summary>
      <returns vsli:raw="A string name for this &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">Строковое имя данного <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.op_Equality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; objects have the same value.">Определяет, совпадают ли значения двух указанных объектов <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</summary>
      <param name="converter1" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> или <see langword="null" />.</param>
      <param name="converter2" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> или <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;converter1&quot; /&gt; is the same as the value of &lt;paramref name=&quot;converter2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если значение параметра <paramref name="converter1" /> совпадает со значением <paramref name="converter2" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.op_Inequality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; objects have different values.">Определяет, различаются ли значения двух указанных объектов <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</summary>
      <param name="converter1" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> или <see langword="null" />.</param>
      <param name="converter2" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> или <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;converter1&quot; /&gt; is different than the value of &lt;paramref name=&quot;converter2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если значение <paramref name="converter1" /> отличается от значения <paramref name="converter2" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlValueConverter`1.TargetType">
      <summary vsli:raw="Gets the target/destination &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">Получает целевой тип <see cref="T:System.Xaml.XamlType" /> объекта <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</summary>
      <returns vsli:raw="The target/destination &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">Целевой тип <see cref="T:System.Xaml.XamlType" /> объекта <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.ToString">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.String&quot; /&gt; that represents this &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">Возвращает строку <see cref="T:System.String" />, которая представляет данный объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that represents this &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt;.">Строка <see cref="T:System.String" />, представляющая этот курсор <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlBackgroundReader">
      <summary vsli:raw="Implements a double-buffered &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; that can split reading and writing to different threads.">Реализует класс <see cref="T:System.Xaml.XamlReader" /> с двойной буферизацией, который может разделять чтение и запись на различные потоки.</summary>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.#ctor(System.Xaml.XamlReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlBackgroundReader&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlBackgroundReader" />.</summary>
      <param name="wrappedReader" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; that this &lt;see cref=&quot;T:System.Xaml.XamlBackgroundReader&quot; /&gt; is based on.">Класс <see cref="T:System.Xaml.XamlReader" />, на котором основан класс <see cref="T:System.Xaml.XamlBackgroundReader" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;wrappedReader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="wrappedReader" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Xaml.XamlBackgroundReader&quot; /&gt; and optionally releases the managed resources.">Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Xaml.XamlBackgroundReader" />, а при необходимости освобождает также управляемые ресурсы.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release managed resources; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если необходимо освободить управляемые ресурсы; в противном случае — значение <see langword="false" />.</param>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.HasLineInfo">
      <summary vsli:raw="Gets a value that specifies whether line information is available.">Получает значение, указывающее, доступны ли сведения о строке.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if line information is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если сведения о строке доступны; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.IsEof">
      <summary vsli:raw="Gets a value that reports whether the reader position is at end-of-file.">Получает значение, определяющее, находится ли позиция средства чтения в конце файла.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the position is at end-of-file; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если позиция находится в конце файла; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.LineNumber">
      <summary vsli:raw="Gets the line number to report.">Получает сообщаемый номер строки.</summary>
      <returns vsli:raw="The line number to report.">Сообщаемый номер строки.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.LinePosition">
      <summary vsli:raw="Gets the line position to report.">Получает сообщаемое положение в строке.</summary>
      <returns vsli:raw="The line position to report.">Сообщаемое положение в строке.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.Member">
      <summary vsli:raw="Gets the current member at the reader position, if the reader position is on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.StartMember&quot; /&gt;.">Получает текущий член в положении средства чтения, если положение средства чтения находится в объекте <see cref="F:System.Xaml.XamlNodeType.StartMember" />.</summary>
      <returns vsli:raw="The current member; or &lt;see langword=&quot;null&quot; /&gt;, if the position is not on a member.">Текущий член или значение <see langword="null" />, если позиция не находится в члене.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.Namespace">
      <summary vsli:raw="Gets the XAML namespace from the current node.">Получает пространство имен XAML из текущего узла.</summary>
      <returns vsli:raw="The XAML namespace, if it is available; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Пространство имен XAML, если оно доступны; в противном случае — значение <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.NodeType">
      <summary vsli:raw="Gets the type of the current node.">Возвращает тип текущего узла.</summary>
      <returns vsli:raw="A value of the &lt;see cref=&quot;T:System.Xaml.XamlNodeType&quot; /&gt; enumeration.">Значение перечисления <see cref="T:System.Xaml.XamlNodeType" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.Read">
      <summary vsli:raw="Provides the next XAML node from the source, if a node is available.">Предоставляет следующий узел XAML из источника, если такой узел имеется.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a node is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если узел доступен; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.SchemaContext">
      <summary vsli:raw="Gets an object that provides schema context information for the information set.">Получает объект, предоставляющий сведения о контексте схемы для данного набора сведений.</summary>
      <returns vsli:raw="An object that provides schema context information for the information set.">Объект, предоставляющий сведения о контексте схемы для данного набора сведений.</returns>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.StartThread">
      <summary vsli:raw="Creates and starts a new &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; (constructed from &lt;see cref=&quot;T:System.Threading.ParameterizedThreadStart&quot; /&gt;) that handles a named thread for the &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt;.">Создает и запускает новый объект <see cref="T:System.Threading.Thread" /> (созданный из объекта <see cref="T:System.Threading.ParameterizedThreadStart" />), который обрабатывает именованный поток для объекта <see cref="T:System.Xaml.XamlReader" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The thread is already started.">Поток уже запущен.</exception>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.StartThread(System.String)">
      <summary vsli:raw="Creates and starts a new &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; (constructed from &lt;see cref=&quot;T:System.Threading.ParameterizedThreadStart&quot; /&gt;) that handles a named thread for the &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt;. You specify the thread name as a parameter.">Создает и запускает новый объект <see cref="T:System.Threading.Thread" /> (созданный из объекта <see cref="T:System.Threading.ParameterizedThreadStart" />), который обрабатывает именованный поток для объекта <see cref="T:System.Xaml.XamlReader" />. Имя потока задается как параметр.</summary>
      <param name="threadName" vsli:raw="The name for the thread.">Имя потока.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The thread is already started.">Поток уже запущен.</exception>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.Type">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the current node.">Получает объект <see cref="T:System.Xaml.XamlType" /> текущего узла.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the current node; or &lt;see langword=&quot;null&quot; /&gt;, if the current reader position is not on an object.">Объект <see cref="T:System.Xaml.XamlType" /> текущего узла или значение <see langword="null" />, если текущая позиция средства чтения находится не в объекте.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.Value">
      <summary vsli:raw="Gets the value of the current node.">Получает значение текущего узла.</summary>
      <returns vsli:raw="The value of the current node; or &lt;see langword=&quot;null&quot; /&gt;, if the current reader position is not on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.Value&quot; /&gt; node type.">Значение текущего узла или значение <see langword="null" />, если текущая позиция средства чтения находится не в типе узла <see cref="F:System.Xaml.XamlNodeType.Value" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlDeferringLoader">
      <summary vsli:raw="Represents a XAML reader behavior that loads and returns deferred content.">Представляет поведение средства чтения XAML, загружающего и возвращающего отложенное содержимое.</summary>
    </member>
    <member name="M:System.Xaml.XamlDeferringLoader.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDeferringLoader&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlDeferringLoader" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlDeferringLoader.Load(System.Xaml.XamlReader,System.IServiceProvider)">
      <summary vsli:raw="Loads XAML content in a deferred mode, which is based on a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; and certain required services from a service provider.">Загружает XAML-содержимое в отложенном режиме на основе объекта <see cref="T:System.Xaml.XamlReader" /> и некоторых обязательных служб, предоставленных поставщиком служб.</summary>
      <param name="xamlReader" vsli:raw="The initiating reader that is returned on calls to &lt;see cref=&quot;M:System.Xaml.XamlDeferringLoader.Save(System.Object,System.IServiceProvider)&quot; /&gt;.">Инициирующее средство чтения, возвращаемое при вызовах метода <see cref="M:System.Xaml.XamlDeferringLoader.Save(System.Object,System.IServiceProvider)" />.</param>
      <param name="serviceProvider" vsli:raw="The service provider for the required services.">Поставщик служб для необходимых служб.</param>
      <returns vsli:raw="The root object that is produced by the input &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt;.">Корневой объект, созданный входным объектом <see cref="T:System.Xaml.XamlReader" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDeferringLoader.Save(System.Object,System.IServiceProvider)">
      <summary vsli:raw="Commits a value for deferred loading.">Фиксирует значение для отложенной загрузки.</summary>
      <param name="value" vsli:raw="The input value to commit for deferred loading.">Входное значение для фиксации при отложенной загрузке.</param>
      <param name="serviceProvider" vsli:raw="The service provider for the required services.">Поставщик служб для необходимых служб.</param>
      <returns vsli:raw="A XAML reader that can be used to obtain the deferred value as XAML node information.">Средство чтения XAML, которое может использоваться для получения отложенного значения в виде сведений узла XAML.</returns>
    </member>
    <member name="T:System.Xaml.XamlDirective">
      <summary vsli:raw="Provides the XAML type system identifier for a member if the member is also a XAML directive. XAML readers and XAML writers use the &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; identifier during processing of member nodes. The identifier is used when the XAML reader is positioned on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.StartMember&quot; /&gt; and &lt;see cref=&quot;P:System.Xaml.XamlMember.IsDirective&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;.">Предоставляет системный идентификатор типа XAML для члена, если он также является директивой XAML. Средства чтения и записи XAML используют идентификатор <see cref="T:System.Xaml.XamlDirective" /> при обработке узлов членов. Идентификатор используется, когда средство чтения XAML размещается на объект <see cref="F:System.Xaml.XamlNodeType.StartMember" /> и свойство <see cref="P:System.Xaml.XamlMember.IsDirective" /> имеет значение <see langword="true" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; class, specifying values for each per-case value of a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlDirective" />, указывая значения для каждого из возможных значений по вариантам объекта <see cref="T:System.Xaml.XamlDirective" />.</summary>
      <param name="xamlNamespaces" vsli:raw="A set of XAML namespaces where this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; can exist, passed as an enumerable set of the identifier strings.">Набор пространств имен XAML, в которых может существовать данный объект <see cref="T:System.Xaml.XamlDirective" />, переданный в виде перечисляемого набора строк идентификатора.</param>
      <param name="name" vsli:raw="The identifying name of the &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">Идентификационное имя объекта <see cref="T:System.Xaml.XamlDirective" />.</param>
      <param name="xamlType" vsli:raw="The XAML type that backs the &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">Тип XAML, лежащий в основе объекта <see cref="T:System.Xaml.XamlDirective" />.</param>
      <param name="typeConverter" vsli:raw="The type converter that this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; uses for text syntax conversion.">Преобразователь типов, используемый данным объектом <see cref="T:System.Xaml.XamlDirective" /> для преобразования синтаксиса текста.</param>
      <param name="allowedLocation" vsli:raw="A value of the &lt;see cref=&quot;T:System.Xaml.Schema.AllowedMemberLocations&quot; /&gt; enumeration.">Значение перечисления <see cref="T:System.Xaml.Schema.AllowedMemberLocations" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;xamlType&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="xamlType" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlDirective.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; class, specifying values for a name and a single XAML namespace. Use this signature only when you want or expect &lt;see cref=&quot;P:System.Xaml.XamlMember.IsUnknown&quot; /&gt; to report &lt;see langword=&quot;true&quot; /&gt; for the directive.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlDirective" />, указывая значения имени и единственного пространства имен XAML. Используйте эту сигнатуру, если вы хотите, чтобы для этой директивы свойство <see cref="P:System.Xaml.XamlMember.IsUnknown" /> имело значение <see langword="true" />, или ожидаете этого.</summary>
      <param name="xamlNamespace" vsli:raw="The primary XAML namespace where this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; can exist.">Первичное пространство имен XAML, в котором может существовать данный объект <see cref="T:System.Xaml.XamlDirective" />.</param>
      <param name="name" vsli:raw="The identifying name of the &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">Идентификационное имя объекта <see cref="T:System.Xaml.XamlDirective" />.</param>
    </member>
    <member name="P:System.Xaml.XamlDirective.AllowedLocation">
      <summary vsli:raw="Gets a value that specifies the XAML node types where the directive can be specified.">Возвращает значение, указывающее типы узлов XAML, в которых может быть задана эта директива.</summary>
      <returns vsli:raw="A value of the enumeration. The default is the enumeration default, which is &lt;see cref=&quot;F:System.Xaml.Schema.AllowedMemberLocations.None&quot; /&gt;.">Значение перечисления. Значение по умолчанию — значение перечисления по умолчанию, то есть <see cref="F:System.Xaml.Schema.AllowedMemberLocations.None" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.GetHashCode">
      <summary vsli:raw="Returns the hash code for this object.">Возвращает хэш-код для этого объекта.</summary>
      <returns vsli:raw="An integer hash code.">Целочисленный хэш-код.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.GetXamlNamespaces">
      <summary vsli:raw="Returns a list of XAML namespaces where this XAML member can exist.">Возвращает список пространств имен XAML, в которых может существовать этот член XAML.</summary>
      <returns vsli:raw="A list of XAML namespace identifiers, as strings.">Список идентификаторов пространства имен XAML в виде строк.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupCustomAttributeProvider">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; implementation. This implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">Возвращает реализацию объекта <see cref="T:System.Reflection.ICustomAttributeProvider" />. Данная реализация всегда возвращает значение <see langword="null" />.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;null&quot; /&gt;.">Всегда возвращает значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupDeferringLoader">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object, which is used during deferred loading of XAML-declared objects. This implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">Возвращает объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, используемый в ходе отложенной загрузки объектов, объявленных в XAML. Данная реализация всегда возвращает значение <see langword="null" />.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;null&quot; /&gt;.">Всегда возвращает значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupDependsOn">
      <summary vsli:raw="Returns a list of &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; objects. The list reports the members where dependency relationships for initialization order exist relative to this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;. This implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">Возвращает список объектов <see cref="T:System.Xaml.XamlMember" />. Список сообщает об членах, в которых существуют отношения зависимости для порядка инициализации относительно данного объекта <see cref="T:System.Xaml.XamlMember" />. Данная реализация всегда возвращает значение <see langword="null" />.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;null&quot; /&gt;.">Всегда возвращает значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupInvoker">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; that is associated with a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">Возвращает объект <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, связанный с директивой <see cref="T:System.Xaml.XamlDirective" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; information for this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Сведения <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> для данного объекта <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsAmbient">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is reported as an ambient property.">Возвращает значение, указывающее, рассматривается ли данный объект <see cref="T:System.Xaml.XamlMember" /> как внешнее свойство.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;false&quot; /&gt;.">Всегда возвращает значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsEvent">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; represents an event.">Возвращает значение, указывающее, представляет ли данный объект <see cref="T:System.Xaml.XamlDirective" /> событие.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;false&quot; /&gt;.">Всегда возвращает значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsReadOnly">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; represents an intended read-only property.">Возвращает значение, указывающее, представляет ли объект <see cref="T:System.Xaml.XamlDirective" /> требуемое свойство только для чтения.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;false&quot; /&gt;.">Всегда возвращает значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsReadPublic">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; represents a property that has a public &lt;see langword=&quot;get&quot; /&gt; accessor.">Возвращает значение, указывающее, представляет ли объект <see cref="T:System.Xaml.XamlDirective" /> свойство, имеющее открытый метод доступа <see langword="get" />.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Всегда возвращает значение <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsUnknown">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; represents a member that is not resolvable by the backing system that is used for type and member resolution.">Возвращает значение, указывающее, представляет ли данный объект <see cref="T:System.Xaml.XamlDirective" /> член, который не может быть разрешен в базовой системе, используемой для разрешения типов и членов.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; represents a non-resolvable member; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если данный объект <see cref="T:System.Xaml.XamlDirective" /> представляет неразрешимый член; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsWriteOnly">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; represents an intended write-only property.">Возвращает значение, указывающее, представляет ли объект <see cref="T:System.Xaml.XamlDirective" /> требуемое свойство, доступное только на запись.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;false&quot; /&gt;.">Всегда возвращает значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsWritePublic">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; represents a property that has a public &lt;see langword=&quot;set&quot; /&gt; accessor.">Возвращает значение, указывающее, представляет ли объект <see cref="T:System.Xaml.XamlDirective" /> свойство, имеющее открытый метод доступа <see langword="set" />.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;true&quot; /&gt;.">Всегда возвращает значение <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupTargetType">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type where the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; can exist. This implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">Возвращает объект <see cref="T:System.Xaml.XamlType" /> того типа, в котором может существовать объект <see cref="T:System.Xaml.XamlMember" />. Данная реализация всегда возвращает значение <see langword="null" />.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;null&quot; /&gt;.">Всегда возвращает значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupType">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type that is used by the member.">Возвращает объект <see cref="T:System.Xaml.XamlType" /> того типа, который используется данным членом.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type that is used by the member.">Объект <see cref="T:System.Xaml.XamlType" /> того типа, который используется данным членом.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupTypeConverter">
      <summary vsli:raw="Returns a type converter implementation that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">Возвращает реализацию преобразователя типов, связанного с данным объектом <see cref="T:System.Xaml.XamlDirective" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; instance that has &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; constraint; or &lt;see langword=&quot;null&quot; /&gt;.">Экземпляр <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, связанный ограничением <see cref="T:System.ComponentModel.TypeConverter" /> или значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupUnderlyingGetter">
      <summary vsli:raw="Returns a &lt;see langword=&quot;get&quot; /&gt; accessor that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;. This implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">Возвращает метод доступа <see langword="get" />, связанный с данным объектом <see cref="T:System.Xaml.XamlDirective" />. Данная реализация всегда возвращает значение <see langword="null" />.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;null&quot; /&gt;.">Всегда возвращает значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupUnderlyingMember">
      <summary vsli:raw="Returns a CLR reflection &lt;see cref=&quot;T:System.Reflection.MemberInfo&quot; /&gt; that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;. This implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">Возвращает отражение среды CLR <see cref="T:System.Reflection.MemberInfo" />, связанное с данным объектом <see cref="T:System.Xaml.XamlDirective" />. Данная реализация всегда возвращает значение <see langword="null" />.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;null&quot; /&gt;.">Всегда возвращает значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupUnderlyingSetter">
      <summary vsli:raw="Returns a &lt;see langword=&quot;set&quot; /&gt; accessor that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;. This implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">Возвращает метод доступа <see langword="set" />, связанный с данным объектом <see cref="T:System.Xaml.XamlDirective" />. Данная реализация всегда возвращает значение <see langword="null" />.</summary>
      <returns vsli:raw="Always returns &lt;see langword=&quot;null&quot; /&gt;.">Всегда возвращает значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.ToString">
      <summary vsli:raw="Returns a string representation of this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">Возвращает строковое представление данного объекта <see cref="T:System.Xaml.XamlDirective" />.</summary>
      <returns vsli:raw="A string representation of this &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt;.">Строковое представление данного объекта <see cref="T:System.Xaml.XamlDirective" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlDuplicateMemberException">
      <summary vsli:raw="The exception that is thrown when a XAML writer attempts to write a value for a duplicate member into the same object node.">Исключение, создаваемое, когда средство записи XAML пытается записать значение для дублирующего члена в этом же узле объекта.</summary>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDuplicateMemberException&quot; /&gt; class with a system-supplied message that describes the error.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlDuplicateMemberException" /> с системным сообщением, содержащим описание ошибки.</summary>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDuplicateMemberException&quot; /&gt; class with serialized data.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlDuplicateMemberException" /> с сериализованными данными.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Объект, содержащий сериализованные данные объекта.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Контекстные сведения об источнике или назначении.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="info" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDuplicateMemberException&quot; /&gt; class with a specified message that describes the error.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlDuplicateMemberException" /> с использованием заданного сообщения, содержащего описание ошибки.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Сообщение с описанием исключения. Код, вызывающий этот конструктор, должен обеспечить локализацию данной строки в соответствии с текущим языком и региональными параметрами системы.</param>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDuplicateMemberException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlDuplicateMemberException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Сообщение с описанием исключения. Код, вызывающий этот конструктор, должен обеспечить локализацию данной строки в соответствии с текущим языком и региональными параметрами системы.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Исключение, которое является причиной текущего исключения. Если значение параметра <paramref name="innerException" /> не равно <see langword="null" />, текущее исключение сгенерировано в блоке <see langword="catch" />, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.Xaml.XamlMember,System.Xaml.XamlType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDuplicateMemberException&quot; /&gt; class with the relevant member and type information to report.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlDuplicateMemberException" /> с соответствующими сообщаемыми сведениями об члене и типе.</summary>
      <param name="member" vsli:raw="The XAML member identifier to report.">Сообщаемый идентификатор члена XAML.</param>
      <param name="type" vsli:raw="The XAML type identifier to report as the parent type.">Идентификатор типа XAML, сообщаемый как родительский тип.</param>
    </member>
    <member name="P:System.Xaml.XamlDuplicateMemberException.DuplicateMember">
      <summary vsli:raw="Gets or sets the XAML member identifier for the property to report as a duplicate.">Получает или задает идентификатор члена XAML для свойства, о котором сообщается как о дубликате.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; object (XAML member identifier) to report.">Объект <see cref="T:System.Xaml.XamlMember" /> (идентификатор члена XAML), о котором необходимо сообщить.</returns>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlDuplicateMemberException&quot; /&gt; class with serialized data.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlDuplicateMemberException" /> с сериализованными данными.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Объект, содержащий сериализованные данные объекта.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Контекстные сведения об источнике или назначении.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="info" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlDuplicateMemberException.ParentType">
      <summary vsli:raw="Gets or sets the XAML type identifier to report as the parent type.">Получает или задает идентификатор типа XAML, сообщаемый как родительский тип.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object (XAML type identifier) to report as the parent type.">Объект <see cref="T:System.Xaml.XamlType" /> (идентификатор типа XAML), о котором необходимо сообщить как о родительском типе.</returns>
    </member>
    <member name="T:System.Xaml.XamlException">
      <summary vsli:raw="The exception that is thrown for a general XAML reader or XAML writer exception.">Исключение, которое создается для исключения в универсальном средстве чтения XAML или средстве записи XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlException&quot; /&gt; class. The instance contains a system-supplied message that describes the error.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlException" />. Данный экземпляр содержит системное сообщение, которое описывает ошибку.</summary>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlException&quot; /&gt; class with serialized data.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlException" /> с сериализованными данными.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Объект, содержащий сериализованные данные объекта.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Контекстные сведения об источнике или назначении.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlException&quot; /&gt; class. The instance contains a specified message that describes the error.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlException" />. Данный экземпляр содержит заданное сообщение, которое описывает ошибку.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor must make sure that this string has been localized for the current system culture.">Сообщение с описанием исключения. Вызывающему объекту этого конструктора необходимо убедиться, что эта строка локализована для текущего языка и региональных параметров системы.</param>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlException&quot; /&gt; class. The instance contains a specified error message and a reference to the inner exception that is the cause of this exception.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlException" />. Этот экземпляр содержит указанное сообщение об ошибке и ссылку на внутреннее исключение, которое стало причиной данного исключения.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor must make sure that this string has been localized for the current system culture.">Сообщение с описанием исключения. Вызывающему объекту этого конструктора необходимо убедиться, что эта строка локализована для текущего языка и региональных параметров системы.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Исключение, которое является причиной текущего исключения. Если значение параметра <paramref name="innerException" /> не равно <see langword="null" />, текущее исключение сгенерировано в блоке <see langword="catch" />, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlException&quot; /&gt; class. The instance contains a specified error message, inner exception, and line information.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlException" />. Этот экземпляр содержит заданное сообщение об ошибке, внутреннее исключение и информацию о строке.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor must make sure that this string has been localized for the current system culture.">Сообщение с описанием исключения. Вызывающему объекту этого конструктора необходимо убедиться, что эта строка локализована для текущего языка и региональных параметров системы.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception.">Исключение, которое является причиной текущего исключения.</param>
      <param name="lineNumber" vsli:raw="The line number to report to debugging or to line information consumers.">Номер строки для передачи в средства отладки или потребителям сведений о строке.</param>
      <param name="linePosition" vsli:raw="The line position to report to debugging or line information consumers.">Положение в строке для передачи в средства отладки или потребителям сведений о строке.</param>
    </member>
    <member name="M:System.Xaml.XamlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Implements &lt;see cref=&quot;M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)&quot; /&gt; and provides serialization support for the line information data.">Реализует метод <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> и обеспечивает поддержку сериализации для данных о строке.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Объект, содержащий сериализованные данные объекта.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Контекстные сведения об источнике или назначении.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="info" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlException.LineNumber">
      <summary vsli:raw="Gets or sets the line number component of XAML text line information that the exception reports.">Получает или задает компонент номера строки сведений о текстовой строке XAML, переданных из исключения.</summary>
      <returns vsli:raw="The line number component of the XAML text line information.">Компонент номера строки сведений о текстовой строке XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlException.LinePosition">
      <summary vsli:raw="Gets or sets the line position component of XAML text line information that the exception reports.">Получает или задает компонент положения в строке сведений о текстовой строке XAML, переданных из исключения.</summary>
      <returns vsli:raw="The line position component of XAML text line information.">Компонент положения в строке сведений о текстовой строке XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlException.Message">
      <summary vsli:raw="Gets or sets the exception message, and if line information is available, appends the line information to the message.">Получает или задает сообщение исключения и присоединяет к нему сведения о строке, если они доступны.</summary>
      <returns vsli:raw="The exception message that includes the appended line information.">Сообщение исключения, включающее присоединенные сведения о строке.</returns>
    </member>
    <member name="T:System.Xaml.XamlInternalException">
      <summary vsli:raw="The exception that is thrown for internal inconsistencies that occur during XAML reading and XAML writing.">Исключение, которое создается в случаях внутренних несоответствий, возникающих во время чтения и записи XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlInternalException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlInternalException&quot; /&gt; class with a system-supplied message that describes the error.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlInternalException" /> с системным сообщением, содержащим описание ошибки.</summary>
    </member>
    <member name="M:System.Xaml.XamlInternalException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlInternalException&quot; /&gt; class with serialized data.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlInternalException" /> с сериализованными данными.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Объект, содержащий сериализованные данные объекта.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.Xaml.XamlInternalException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlInternalException&quot; /&gt; class with a specified message that describes the error.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlInternalException" /> с использованием заданного сообщения, содержащего описание ошибки.</summary>
      <param name="message" vsli:raw="The message that describes the exception.">Сообщение с описанием исключения.</param>
    </member>
    <member name="M:System.Xaml.XamlInternalException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlInternalException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlInternalException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message" vsli:raw="The message that describes the exception.">Сообщение с описанием исключения.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Исключение, которое является причиной текущего исключения. Если значение параметра <paramref name="innerException" /> не равно <see langword="null" />, текущее исключение сгенерировано в блоке <see langword="catch" />, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.Xaml.XamlLanguage">
      <summary vsli:raw="Defines constants that provide strings or objects that are useful for XAML markup or for programming with XAML types. These strings or objects are relevant to XAML language concepts, to the implementation of XAML language concepts in .NET XAML Services, or to both.">Определяет константы, предоставляющие строки или объекты, которые полезны для разметки XAML или программирования с типами XAML. Эти строки или объекты относятся к концепциям языка XAML, к реализации концепций языка XAML в службах XAML платформы .NET Framework или к тому и другому.</summary>
    </member>
    <member name="P:System.Xaml.XamlLanguage.AllDirectives">
      <summary vsli:raw="Gets a read-only generic collection of each &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; identifier that is defined by .NET XAML Services.">Получает доступную только для чтения универсальную коллекцию каждого идентификатора <see cref="T:System.Xaml.XamlDirective" />, определенного службами XAML платформы .NET Framework.</summary>
      <returns vsli:raw="A read-only generic collection of each &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; identifier that is defined by .NET XAML Services.">Доступная только для чтения универсальная коллекция каждого идентификатора <see cref="T:System.Xaml.XamlDirective" />, определенного службами XAML платформы .NET Framework.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.AllTypes">
      <summary vsli:raw="Gets a read-only generic collection of individual &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; values that match, or alias, a XAML language intrinsic that is defined by .NET XAML Services.">Получает доступную только для чтения универсальную коллекцию индивидуальных значений <see cref="T:System.Xaml.XamlType" />, соответствующих или связанных псевдонимами с внутренним элементом языка XAML, определенным службами XAML платформы .NET Framework.</summary>
      <returns vsli:raw="A read-only generic collection of each &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that matches a XAML language intrinsic.">Доступная только для чтения универсальная коллекция каждого типа <see cref="T:System.Xaml.XamlType" />, соответствующего внутреннему элементу XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Arguments">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Arguments&quot; /&gt; of a factory method or a generic usage.">Получает объект <see cref="T:System.Xaml.XamlDirective" /> для аргументов <see langword="Arguments" /> заводского метода или универсального использования.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Arguments&quot; /&gt; of a factory method or generic usage.">Объект <see cref="T:System.Xaml.XamlDirective" /> для аргументов <see langword="Arguments" /> заводского метода или универсального использования.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Array">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Array&quot; /&gt; XAML language intrinsic.">Получает объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML <see langword="Array" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Array&quot; /&gt; XAML language intrinsic.">Объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML <see langword="Array" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.AsyncRecords">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;AsyncRecords&quot; /&gt; pseudomember.">Получает объект <see cref="T:System.Xaml.XamlDirective" /> для псевдочлена <see langword="AsyncRecords" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;AsyncRecords&quot; /&gt; pseudomember.">Объект <see cref="T:System.Xaml.XamlDirective" /> для псевдочлена <see langword="AsyncRecords" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Base">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;base&quot; /&gt; directive from XML.">Получает объект <see cref="T:System.Xaml.XamlDirective" /> для директивы <see langword="base" /> из XML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;base&quot; /&gt; directive from XML.">Объект <see cref="T:System.Xaml.XamlDirective" /> для директивы <see langword="base" /> из XML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Boolean">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Boolean&quot; /&gt; XAML language intrinsic.">Получает объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML <see langword="Boolean" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Boolean&quot; /&gt; XAML language intrinsic.">Объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML <see langword="Boolean" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Byte">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Byte&quot; /&gt; XAML language intrinsic.">Получает объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML <see langword="Byte" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Byte&quot; /&gt; XAML language intrinsic.">Объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML <see langword="Byte" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Char">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Char&quot; /&gt; XAML language intrinsic.">Получает объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML <see langword="Char" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Char&quot; /&gt; XAML language intrinsic.">Объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML <see langword="Char" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Class">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Class&quot; /&gt; directive from XAML.">Получает объект <see cref="T:System.Xaml.XamlDirective" /> для директивы <see langword="Class" /> из XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Class&quot; /&gt; directive from XAML.">Объект <see cref="T:System.Xaml.XamlDirective" /> для директивы <see langword="Class" /> из XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.ClassAttributes">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;ClassAttributes&quot; /&gt; directive from XAML.">Получает объект <see cref="T:System.Xaml.XamlDirective" /> для директивы <see langword="ClassAttributes" /> из XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;ClassAttributes&quot; /&gt; directive from XAML.">Объект <see cref="T:System.Xaml.XamlDirective" /> для директивы <see langword="ClassAttributes" /> из XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.ClassModifier">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;ClassModifier&quot; /&gt; directive from XAML.">Получает объект <see cref="T:System.Xaml.XamlDirective" /> для директивы <see langword="ClassModifier" /> из XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;ClassModifier&quot; /&gt; directive from XAML.">Объект <see cref="T:System.Xaml.XamlDirective" /> для директивы <see langword="ClassModifier" /> из XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Code">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for &lt;see langword=&quot;Code&quot; /&gt; as detailed in [MS-XAML].">Получает объект <see cref="T:System.Xaml.XamlDirective" /> для кода <see langword="Code" />, как описано в [MS-XAML].</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for &lt;see langword=&quot;Code&quot; /&gt; as detailed in [MS-XAML].">Объект <see cref="T:System.Xaml.XamlDirective" /> для кода <see langword="Code" />, как описано в [MS-XAML].</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.ConnectionId">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; that identifies a connection point for wiring events to handlers.">Получает объект <see cref="T:System.Xaml.XamlDirective" />, идентифицирующий точку подключения для привязки событий к обработчикам.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; that identifies a connection point for wiring events to handlers.">Объект <see cref="T:System.Xaml.XamlDirective" />, идентифицирующий точку подключения для привязки событий к обработчикам.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Decimal">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Decimal&quot; /&gt; XAML language intrinsic.">Получает объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML <see langword="Decimal" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Decimal&quot; /&gt; XAML language intrinsic.">Объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML <see langword="Decimal" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Double">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Double&quot; /&gt; XAML language intrinsic.">Получает объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML <see langword="Double" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Double&quot; /&gt; XAML language intrinsic.">Объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML <see langword="Double" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.FactoryMethod">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; that identifies a factory method for XAML.">Получает объект <see cref="T:System.Xaml.XamlDirective" />, идентифицирующий заводской метод для XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; that identifies a factory method for XAML.">Объект <see cref="T:System.Xaml.XamlDirective" />, идентифицирующий заводской метод для XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.FieldModifier">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;FieldModifier&quot; /&gt; directive from XAML.">Получает объект <see cref="T:System.Xaml.XamlDirective" /> для директивы <see langword="FieldModifier" /> из XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;FieldModifier&quot; /&gt; directive from XAML.">Объект <see cref="T:System.Xaml.XamlDirective" /> для директивы <see langword="FieldModifier" /> из XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Initialization">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Initialization&quot; /&gt; directive from XAML.">Получает объект <see cref="T:System.Xaml.XamlDirective" /> для директивы <see langword="Initialization" /> из XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Initialization&quot; /&gt; directive from XAML.">Объект <see cref="T:System.Xaml.XamlDirective" /> для директивы <see langword="Initialization" /> из XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Int16">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see cref=&quot;T:System.Int16&quot; /&gt; XAML language intrinsic.">Получает объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML <see langword="Int16" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see cref=&quot;T:System.Int16&quot; /&gt; XAML language intrinsic.">Объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML <see langword="Int16" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Int32">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see cref=&quot;T:System.Int32&quot; /&gt; XAML language intrinsic.">Получает объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML <see langword="Int32" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see cref=&quot;T:System.Int32&quot; /&gt; XAML language intrinsic.">Объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML <see langword="Int32" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Int64">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see cref=&quot;T:System.Int64&quot; /&gt; XAML language intrinsic.">Получает объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML <see langword="Int64" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see cref=&quot;T:System.Int64&quot; /&gt; XAML language intrinsic.">Объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML <see langword="Int64" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Items">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Items&quot; /&gt; directive from XAML.">Получает объект <see cref="T:System.Xaml.XamlDirective" /> для директивы <see langword="Items" /> из XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Items&quot; /&gt; directive from XAML.">Объект <see cref="T:System.Xaml.XamlDirective" /> для директивы <see langword="Items" /> из XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Key">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Key&quot; /&gt; directive from XAML.">Получает объект <see cref="T:System.Xaml.XamlDirective" /> для директивы <see langword="Key" /> из XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Key&quot; /&gt; directive from XAML.">Объект <see cref="T:System.Xaml.XamlDirective" /> для директивы <see langword="Key" /> из XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Lang">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;lang&quot; /&gt; directive from XML.">Получает объект <see cref="T:System.Xaml.XamlDirective" /> для директивы <see langword="lang" /> из XML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;lang&quot; /&gt; directive from XML.">Объект <see cref="T:System.Xaml.XamlDirective" /> для директивы <see langword="lang" /> из XML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Member">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the type that is the item type of &lt;see cref=&quot;P:System.Xaml.XamlLanguage.Members&quot; /&gt;.">Получает объект <see cref="T:System.Xaml.XamlType" /> для типа, являющегося типом элемента свойства <see cref="P:System.Xaml.XamlLanguage.Members" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the type that is the item type of &lt;see cref=&quot;P:System.Xaml.XamlLanguage.Members&quot; /&gt;.">Объект <see cref="T:System.Xaml.XamlType" /> для типа, являющегося типом элемента свойства <see cref="P:System.Xaml.XamlLanguage.Members" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Members">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Members&quot; /&gt; concept in XAML.">Получает объект <see cref="T:System.Xaml.XamlDirective" /> для концепции <see langword="Members" /> в XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Members&quot; /&gt; concept in XAML.">Объект <see cref="T:System.Xaml.XamlDirective" /> для концепции <see langword="Members" /> в XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Name">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Name&quot; /&gt; directive from XAML.">Получает объект <see cref="T:System.Xaml.XamlDirective" /> для директивы <see langword="Name" /> из XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Name&quot; /&gt; directive from XAML.">Объект <see cref="T:System.Xaml.XamlDirective" /> для директивы <see langword="Name" /> из XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Null">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Null&quot; /&gt; or &lt;see langword=&quot;NullExtension&quot; /&gt; XAML language intrinsic.">Получает объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML <see langword="Null" /> или <see langword="NullExtension" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Null&quot; /&gt;/&lt;see langword=&quot;NullExtension&quot; /&gt; XAML language intrinsic.">ДлявстроенногоязыкаXAML.<see cref="T:System.Xaml.XamlType" /><see langword="Null" /> / <see langword="NullExtension" /></returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Object">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Object&quot; /&gt; XAML language concept.">Получает объект <see cref="T:System.Xaml.XamlType" /> для концепции языка XAML <see langword="Object" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Object&quot; /&gt; XAML language concept.">Объект <see cref="T:System.Xaml.XamlType" /> для концепции языка XAML <see langword="Object" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.PositionalParameters">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;PositionalParameters&quot; /&gt; directive from XAML.">Получает объект <see cref="T:System.Xaml.XamlDirective" /> для директивы <see langword="PositionalParameters" /> из XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;PositionalParameters&quot; /&gt; directive from XAML.">Объект <see cref="T:System.Xaml.XamlDirective" /> для директивы <see langword="PositionalParameters" /> из XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Property">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Property&quot; /&gt; concept in XAML.">Получает объект <see cref="T:System.Xaml.XamlType" /> для концепции <see langword="Property" /> в XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Property&quot; /&gt; concept in XAML.">Объект <see cref="T:System.Xaml.XamlType" /> для концепции <see langword="Property" /> в XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Reference">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that represents a &lt;see langword=&quot;Reference&quot; /&gt; for XAML.">Получает объект <see cref="T:System.Xaml.XamlType" />, представляющий <see langword="Reference" /> для XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that represents a &lt;see langword=&quot;Reference&quot; /&gt; for XAML.">Объект <see cref="T:System.Xaml.XamlType" />, представляющий <see langword="Reference" /> для XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Shared">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Shared&quot; /&gt; directive for XAML.">Получает объект <see cref="T:System.Xaml.XamlDirective" /> для директивы <see langword="Shared" /> для XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Shared&quot; /&gt; directive for XAML.">Объект <see cref="T:System.Xaml.XamlDirective" /> для директивы <see langword="Shared" /> для XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Single">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;c&gt;Single&lt;/c&gt; XAML language intrinsic.">Получает объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML <see langword="Single" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;c&gt;Single&lt;/c&gt; XAML language intrinsic.">Объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML <see langword="Single" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Space">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;space&quot; /&gt; directive from XML.">Получает объект <see cref="T:System.Xaml.XamlDirective" /> для директивы <see langword="space" /> из XML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;space&quot; /&gt; directive from XML.">Объект <see cref="T:System.Xaml.XamlDirective" /> для директивы <see langword="space" /> из XML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Static">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Static&quot; /&gt;/&lt;see langword=&quot;StaticExtension&quot; /&gt; XAML language intrinsic.">Получает объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML <see langword="Static" />/<see langword="StaticExtension" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Static&quot; /&gt;/&lt;see langword=&quot;StaticExtension&quot; /&gt; XAML language intrinsic.">ДлявстроенногоязыкаXAML.<see cref="T:System.Xaml.XamlType" /><see langword="Static" /> / <see langword="StaticExtension" /></returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.String">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;String&quot; /&gt; XAML language intrinsic.">Получает объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML <see langword="String" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;String&quot; /&gt; XAML language intrinsic.">Объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML <see langword="String" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Subclass">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Subclass&quot; /&gt; directive from XAML.">Получает объект <see cref="T:System.Xaml.XamlDirective" /> для директивы <see langword="Subclass" /> из XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Subclass&quot; /&gt; directive from XAML.">Объект <see cref="T:System.Xaml.XamlDirective" /> для директивы <see langword="Subclass" /> из XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.SynchronousMode">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; that enables loading XAML asynchronously if the XAML processor supports such a mode.">Получает объект <see cref="T:System.Xaml.XamlDirective" />, обеспечивающий асинхронную загрузку XAML, если обработчик XAML поддерживает такой режим.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; that enables loading XAML asynchronously.">Объект <see cref="T:System.Xaml.XamlDirective" />, обеспечивающий асинхронную загрузку XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.TimeSpan">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;TimeSpan&quot; /&gt; concept in XAML language.">Получает объект <see cref="T:System.Xaml.XamlType" /> для концепции <see langword="TimeSpan" /> языка XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;TimeSpan&quot; /&gt; XAML language concept.">Объект <see cref="T:System.Xaml.XamlType" /> для концепции языка XAML <see langword="TimeSpan" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Type">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Type&quot; /&gt;/&lt;see langword=&quot;TypeExtension&quot; /&gt; XAML language intrinsic.">Получает объект <see cref="T:System.Xaml.XamlType" /> для внутреннего элемента языка XAML <see langword="Type" />/<see langword="TypeExtension" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Type&quot; /&gt;/&lt;see langword=&quot;TypeExtension&quot; /&gt; XAML language intrinsic.">ДлявстроенногоязыкаXAML.<see cref="T:System.Xaml.XamlType" /><see langword="Type" /> / <see langword="TypeExtension" /></returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.TypeArguments">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;TypeArguments&quot; /&gt; directive from XAML.">Получает объект <see cref="T:System.Xaml.XamlDirective" /> для директивы <see langword="TypeArguments" /> из XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;TypeArguments&quot; /&gt; directive from XAML.">Объект <see cref="T:System.Xaml.XamlDirective" /> для директивы <see langword="TypeArguments" /> из XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Uid">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Uid&quot; /&gt; directive from XAML.">Получает объект <see cref="T:System.Xaml.XamlDirective" /> для директивы <see langword="Uid" /> из XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;Uid&quot; /&gt; directive from XAML.">Объект <see cref="T:System.Xaml.XamlDirective" /> для директивы <see langword="Uid" /> из XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.UnknownContent">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;UnknownContent&quot; /&gt; directive from XAML.">Получает объект <see cref="T:System.Xaml.XamlDirective" /> для директивы <see langword="UnknownContent" /> из XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; for the &lt;see langword=&quot;UnknownContent&quot; /&gt; directive from XAML.">Объект <see cref="T:System.Xaml.XamlDirective" /> для директивы <see langword="UnknownContent" /> из XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Uri">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Uri&quot; /&gt; XAML language concept.">Получает объект <see cref="T:System.Xaml.XamlType" /> для концепции языка XAML <see langword="Uri" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the &lt;see langword=&quot;Uri&quot; /&gt; XAML language concept.">Объект <see cref="T:System.Xaml.XamlType" /> для концепции языка XAML <see langword="Uri" />.</returns>
    </member>
    <member name="F:System.Xaml.XamlLanguage.Xaml2006Namespace">
      <summary vsli:raw="Gets a string value for the string that identifies the XAML (2006) language namespace. That namespace corresponds to the XAML (2006) &quot;x&quot; prefixed namespace as defined in [MS-XAML] Section 5.1.1.">Получает строковое значение для строки, определяющей пространство имен языка XAML (2006). Это пространство имен соответствует пространству имен языка XAML (2006) с префиксом "x", как определено в документе [MS-XAML], раздел 5.1.1.</summary>
    </member>
    <member name="P:System.Xaml.XamlLanguage.XamlNamespaces">
      <summary vsli:raw="Gets a collection of the namespace identifiers for XAML.">Получает коллекцию идентификаторов пространства имен для XAML.</summary>
      <returns vsli:raw="A collection of the namespace identifiers for XAML.">Коллекция идентификаторов пространства имен для XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.XData">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the XAML type that backs an &lt;see langword=&quot;XData&quot; /&gt; block in XAML.">Получает объект <see cref="T:System.Xaml.XamlType" /> для типа XAML, поддерживающего блок <see langword="XData" /> в XAML.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the XAML type that backs an &lt;see langword=&quot;XData&quot; /&gt; block. See [MS-XAML] Section 5.2.23.">Объект <see cref="T:System.Xaml.XamlType" /> для типа XAML, поддерживающего блок <see langword="XData" />. См. раздел [MS-XAML] 5.2.23.</returns>
    </member>
    <member name="F:System.Xaml.XamlLanguage.Xml1998Namespace">
      <summary vsli:raw="Gets a string value for the string that identifies the XML (1998) language namespace. That namespace corresponds to the XML &quot;xml&quot; prefixed namespace as referenced in [MS-XAML] Section 5.1.2.">Получает строковое значение для строки, идентифицирующей пространство имен языка XML (1998). Это пространство имен соответствует пространству имен языка XML с префиксом "xml", как указано в документе [MS-XAML], раздел 5.1.2.</summary>
    </member>
    <member name="P:System.Xaml.XamlLanguage.XmlNamespaces">
      <summary vsli:raw="Gets a collection of the namespace identifiers for XML.">Получает коллекцию идентификаторов пространства имен для XML.</summary>
      <returns vsli:raw="A collection of the namespace identifiers for XML.">Коллекция идентификаторов пространства имен для XML.</returns>
    </member>
    <member name="T:System.Xaml.XamlMember">
      <summary vsli:raw="Provides the XAML type system identifier for members of XAML types. The identifier is used by XAML readers and XAML writers during processing of member nodes (when the XAML reader is positioned on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.StartMember&quot; /&gt;) and also for general XAML type system logic.">Предоставляет системный идентификатор типа языка XAML для членов типов XAML. Этот идентификатор используется средствами чтения и записи XAML во время обработки узлов членов (когда средство чтения XAML находится в поле <see cref="F:System.Xaml.XamlNodeType.StartMember" />). Кроме того, он используется для общей логики системы типов XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class using CLR type system &lt;see cref=&quot;T:System.Reflection.EventInfo&quot; /&gt; and a &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt;.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlMember" /> объектами <see cref="T:System.Reflection.EventInfo" /> и <see cref="T:System.Xaml.XamlSchemaContext" /> системы типов среды CLR.</summary>
      <param name="eventInfo" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.EventInfo&quot; /&gt; that represents the event member.">Объект <see cref="T:System.Reflection.EventInfo" /> системы типов среды CLR, представляющий член события.</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">Контекст <see cref="T:System.Xaml.XamlSchemaContext" />, определяющий член.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class using CLR type system &lt;see cref=&quot;T:System.Reflection.EventInfo&quot; /&gt; and a &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt;, including &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; information.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlMember" /> объектами <see cref="T:System.Reflection.EventInfo" /> и <see cref="T:System.Xaml.XamlSchemaContext" /> системы типов среды CLR, включая сведения объекта <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <param name="eventInfo" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.EventInfo&quot; /&gt; that represents the event member.">Объект <see cref="T:System.Reflection.EventInfo" /> системы типов среды CLR, представляющий член события.</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">Контекст <see cref="T:System.Xaml.XamlSchemaContext" />, определяющий член.</param>
      <param name="invoker" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; implementation that handles run-time reflection calls against the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Реализация <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, которая обрабатывает вызовы отражения во время выполнения, адресованные объекту <see cref="T:System.Xaml.XamlMember" />.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class using CLR type system &lt;see cref=&quot;T:System.Reflection.PropertyInfo&quot; /&gt; and a &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt;.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlMember" /> объектами <see cref="T:System.Reflection.PropertyInfo" /> и <see cref="T:System.Xaml.XamlSchemaContext" /> системы типов среды CLR.</summary>
      <param name="propertyInfo" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.PropertyInfo&quot; /&gt; that represents the property member.">Объект <see cref="T:System.Reflection.PropertyInfo" /> системы типов среды CLR, представляющий член свойства.</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">Контекст <see cref="T:System.Xaml.XamlSchemaContext" />, определяющий член.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class using reflection &lt;see cref=&quot;T:System.Reflection.PropertyInfo&quot; /&gt; and a &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt;, including &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; information.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlMember" /> объектами <see cref="T:System.Reflection.PropertyInfo" /> и <see cref="T:System.Xaml.XamlSchemaContext" /> отражения, включая сведения объекта <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <param name="propertyInfo" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.PropertyInfo&quot; /&gt; that represents the property member.">Объект <see cref="T:System.Reflection.PropertyInfo" /> системы типов среды CLR, представляющий член свойства.</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">Контекст <see cref="T:System.Xaml.XamlSchemaContext" />, определяющий член.</param>
      <param name="invoker" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; implementation that handles run-time invocation calls against the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Реализация <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, которая обрабатывает вызовы времени выполнения, адресованные объекту <see cref="T:System.Xaml.XamlMember" />.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class for a &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; that represents an attachable property.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlMember" /> для объекта <see cref="T:System.Xaml.XamlMember" />, представляющего присоединяемое свойство.</summary>
      <param name="attachablePropertyName" vsli:raw="The string name of the attachable property.">Строковое имя присоединяемого свойства.</param>
      <param name="getter" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the &lt;see langword=&quot;get&quot; /&gt; accessor of the attachable member's backing implementation.">Объект <see cref="T:System.Reflection.MethodInfo" /> системы типов среды CLR для метода доступа <see langword="get" /> базовой реализации присоединяемого члена.</param>
      <param name="setter" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the &lt;see langword=&quot;set&quot; /&gt; accessor of the attachable member's backing implementation.">Объект <see cref="T:System.Reflection.MethodInfo" /> системы типов среды CLR для метода доступа <see langword="set" /> базовой реализации присоединяемого члена.</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">Контекст <see cref="T:System.Xaml.XamlSchemaContext" />, определяющий член.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class for a &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; that represents an attachable property, including &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; information.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlMember" /> для объекта <see cref="T:System.Xaml.XamlMember" />, представляющего присоединяемое свойство, включая сведения объекта <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <param name="attachablePropertyName" vsli:raw="The string name of the attachable property.">Строковое имя присоединяемого свойства.</param>
      <param name="getter" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the &lt;see langword=&quot;get&quot; /&gt; accessor of the attachable member's backing implementation.">Объект <see cref="T:System.Reflection.MethodInfo" /> системы типов среды CLR для метода доступа <see langword="get" /> базовой реализации присоединяемого члена.</param>
      <param name="setter" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the &lt;see langword=&quot;set&quot; /&gt; accessor of the attachable member's backing implementation.">Объект <see cref="T:System.Reflection.MethodInfo" /> системы типов среды CLR для метода доступа <see langword="set" /> базовой реализации присоединяемого члена.</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">Контекст <see cref="T:System.Xaml.XamlSchemaContext" />, определяющий член.</param>
      <param name="invoker" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; implementation that handles run-time invocation calls against the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Реализация <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, которая обрабатывает вызовы времени выполнения, адресованные объекту <see cref="T:System.Xaml.XamlMember" />.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class for a &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; that represents an attachable event.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlMember" /> для объекта <see cref="T:System.Xaml.XamlMember" />, представляющего присоединяемое событие.</summary>
      <param name="attachableEventName" vsli:raw="The string name of the attachable event.">Строковое имя присоединяемого события.</param>
      <param name="adder" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the handler &lt;see langword=&quot;Add&quot; /&gt; method of the attachable member's backing implementation.">Объект <see cref="T:System.Reflection.MethodInfo" /> системы типов среды CLR для метода <see langword="Add" /> обработчика базовой реализации присоединяемого члена.</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">Контекст <see cref="T:System.Xaml.XamlSchemaContext" />, определяющий член.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class for a &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; that represents an attachable event, including &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; information.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlMember" /> для объекта <see cref="T:System.Xaml.XamlMember" />, представляющего присоединяемое событие, включая сведения объекта <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <param name="attachableEventName" vsli:raw="The string name of the attachable event.">Строковое имя присоединяемого события.</param>
      <param name="adder" vsli:raw="The CLR type system &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the handler &lt;see langword=&quot;Add&quot; /&gt; method of the attachable member's backing implementation.">Объект <see cref="T:System.Reflection.MethodInfo" /> системы типов среды CLR для метода <see langword="Add" /> обработчика базовой реализации присоединяемого члена.</param>
      <param name="schemaContext" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; context that qualifies the member.">Контекст <see cref="T:System.Xaml.XamlSchemaContext" />, определяющий член.</param>
      <param name="invoker" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; implementation that handles run-time invocation calls against the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Реализация <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, которая обрабатывает вызовы времени выполнения, адресованные объекту <see cref="T:System.Xaml.XamlMember" />.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; class using a string name and declaring &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; information. A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; that is constructed with this signature has significant limitations.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlMember" />, используя строковое имя и сведения об объявляющем типе <see cref="T:System.Xaml.XamlType" />. Объект <see cref="T:System.Xaml.XamlMember" />, созданный с данной сигнатурой, имеет значительные ограничения.</summary>
      <param name="name" vsli:raw="The string name of the member.">Строковое имя члена.</param>
      <param name="declaringType" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; information for the declaring type.">Сведения <see cref="T:System.Xaml.XamlType" /> для объявляемого типа.</param>
      <param name="isAttachable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the member is attachable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если необходимо указать, что член является присоединяемым; в противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; or &lt;paramref name=&quot;declaringType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="name" /> или <paramref name="declaringType" /> — <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlMember.DeclaringType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the type that declares the member that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Получает объект <see cref="T:System.Xaml.XamlType" /> для типа, который объявляет член, связанный с этим объектом <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the type that declares the member that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Объект <see cref="T:System.Xaml.XamlType" /> для типа, который объявляет член, связанный с этим объектом <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.DeferringLoader">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object, which is used for deferred loading of XAML declared objects.">Получает объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, используемый для отложенной загрузки объектов, объявленных в языке XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.Xaml.XamlDeferringLoader&quot; /&gt; constraint on the generic.">Объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.Xaml.XamlDeferringLoader" /> для универсального класса.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.DependsOn">
      <summary vsli:raw="Gets a list of &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; objects. These report the members where dependency relationships for initialization order exist relative to this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Получает список объектов <see cref="T:System.Xaml.XamlMember" />. Эти объекты сообщают о членах, в которых существуют отношения зависимости для порядка инициализации относительно данного объекта <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="A list of &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; objects.">Список объектов <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.Equals(System.Object)">
      <summary vsli:raw="Indicates whether the current object is equal to another object.">Позволяет определить, равен ли текущий объект другому объекту.</summary>
      <param name="obj" vsli:raw="The object to compare with this object.">Объект, который требуется сравнить с данным объектом.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current object is equal to the &lt;paramref name=&quot;obj&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если текущий объект равен параметру <paramref name="obj" />, в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)">
      <summary vsli:raw="Indicates whether the current object is equal to another object of the same type.">Указывает, равен ли текущий объект другому объекту того же типа.</summary>
      <param name="other" vsli:raw="An object to compare with this object.">Объект, который требуется сравнить с данным объектом.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current object is equal to the &lt;paramref name=&quot;other&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если текущий объект равен параметру <paramref name="other" />, в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.GetHashCode">
      <summary vsli:raw="Returns the hash code for this object.">Возвращает хэш-код для этого объекта.</summary>
      <returns vsli:raw="An integer hash code.">Целочисленный хэш-код.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.GetXamlNamespaces">
      <summary vsli:raw="Returns a list of XAML namespaces where this XAML member can exist.">Возвращает список пространств имен XAML, в которых может существовать этот член XAML.</summary>
      <returns vsli:raw="A list of XAML namespace identifiers as strings.">Список идентификаторов пространства имен XAML в виде строк.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.Invoker">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; implementation that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Получает реализацию объекта <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, связанную с данным типом <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; implementation that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Реализация объекта <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, связанная с данным типом <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsAmbient">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is reported as an ambient property.">Получает значение, указывающее, представляет ли этот объект <see cref="T:System.Xaml.XamlMember" /> внешнее свойство.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is reported as an ambient property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если об объекте <see cref="T:System.Xaml.XamlMember" /> сообщается, что он является внешним свойством; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsAttachable">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is an attachable member.">Получает значение, указывающее, является ли этот объект <see cref="T:System.Xaml.XamlMember" /> присоединяемым членом.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is an attachable member; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если этот объект <see cref="T:System.Xaml.XamlMember" /> является присоединяемым членом; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsDirective">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is a XAML directive.">Получает значение, указывающее, является ли этот объект <see cref="T:System.Xaml.XamlMember" /> директивой XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is a XAML directive; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если объект <see cref="T:System.Xaml.XamlMember" /> является директивой XAML; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsEvent">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents an event member.">Получает значение, указывающее, действительно ли этот объект <see cref="T:System.Xaml.XamlMember" /> представляет член события.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents an event; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если этот объект <see cref="T:System.Xaml.XamlMember" /> представляет событие; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsNameValid">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is initialized with a valid &lt;see langword=&quot;xamlName&quot; /&gt; string as its &lt;see cref=&quot;P:System.Xaml.XamlMember.Name&quot; /&gt;.">Получает значение, указывающее, инициализирован ли этот объект <see cref="T:System.Xaml.XamlMember" /> допустимой строкой <see langword="xamlName" /> в качестве значения его свойства <see cref="P:System.Xaml.XamlMember.Name" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is initialized with a valid &lt;see langword=&quot;xamlName&quot; /&gt; string; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если этот объект <see cref="T:System.Xaml.XamlMember" /> инициализирован допустимой строкой <see langword="xamlName" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a read-only member.">Получает значение, указывающее, действительно ли этот объект <see cref="T:System.Xaml.XamlMember" /> представляет член, доступный только для чтения.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a read-only member; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если этот объект <see cref="T:System.Xaml.XamlMember" /> представляет член, доступный только для чтения; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsReadPublic">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a member with a callable public &lt;see langword=&quot;get&quot; /&gt; accessor.">Получает значение, указывающее, представляет ли объект <see cref="T:System.Xaml.XamlMember" /> член с доступным для вызова открытым методом доступа <see langword="get" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a callable public &lt;see langword=&quot;get&quot; /&gt; accessor; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если этот объект <see cref="T:System.Xaml.XamlMember" /> представляет доступный для вызова открытый метод доступа <see langword="get" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsUnknown">
      <summary vsli:raw="Gets a value that indicates whether the member is not resolvable by the backing system that is used for type and member resolution.">Получает значение, указывающее, является ли этот член неразрешимым в базовой системе, используемой для разрешения типов и членов.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the member is not resolvable; &lt;see langword=&quot;false&quot; /&gt; if the member is resolvable.">Значение <see langword="true" />, если этот член невозможно разрешить; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsWriteOnly">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a write-only member.">Получает значение, указывающее, действительно ли этот объект <see cref="T:System.Xaml.XamlMember" /> представляет член, доступный только для записи.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a write-only member; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если этот объект <see cref="T:System.Xaml.XamlMember" /> представляет член, доступный только для записи; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsWritePublic">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a member that has a callable public &lt;see langword=&quot;set&quot; /&gt; accessor.">Получает значение, указывающее, представляет ли объект <see cref="T:System.Xaml.XamlMember" /> член с доступным для вызова открытым методом доступа <see langword="set" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a callable public &lt;see langword=&quot;set&quot; /&gt; accessor; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если этот объект <see cref="T:System.Xaml.XamlMember" /> представляет доступный для вызова открытый метод доступа <see langword="set" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupCustomAttributeProvider">
      <summary vsli:raw="When implemented in a derived class, returns an &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; implementation.">При реализации в производном классе возвращает реализацию класса <see cref="T:System.Reflection.ICustomAttributeProvider" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; implementation.">Реализация <see cref="T:System.Reflection.ICustomAttributeProvider" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupDeferringLoader">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object, which is used for deferred loading of XAML declared objects.">Возвращает объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, используемый для отложенной загрузки объектов, объявленных в XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; that has a &lt;see cref=&quot;T:System.Xaml.XamlDeferringLoader&quot; /&gt; constraint on the generic.">Объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.Xaml.XamlDeferringLoader" /> на универсальный класс.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupDependsOn">
      <summary vsli:raw="Returns a list of &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; objects. Items in the list report the members where dependency relationships for initialization order exist relative to this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Возвращает список объектов <see cref="T:System.Xaml.XamlMember" />. Элементы списка сообщают о членах, в которых существуют отношения зависимости для порядка инициализации относительно данного объекта <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="A list of &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; objects.">Список объектов <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupInvoker">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Возвращает объект <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, связанный с данным типом <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlMemberInvoker&quot; /&gt; information for this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;; or &lt;see langword=&quot;null&quot; /&gt;.">Сведения объекта <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> для этого объекта <see cref="T:System.Xaml.XamlMember" /> или значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsAmbient">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; is reported as an ambient property.">Возвращает значение, указывающее, рассматривается ли данный объект <see cref="T:System.Xaml.XamlMember" /> как внешнее свойство.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to report this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; as an ambient property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если необходимо объявить этот объект <see cref="T:System.Xaml.XamlMember" /> внешним свойством; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsEvent">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents an event.">Возвращает значение, указывающее, представляет ли данный объект <see cref="T:System.Xaml.XamlMember" /> событие.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to report that this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents an event; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если необходимо объявить, что этот объект <see cref="T:System.Xaml.XamlMember" /> представляет событие; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsReadOnly">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents an intended read-only property.">Возвращает значение, указывающее, представляет ли объект <see cref="T:System.Xaml.XamlMember" /> требуемое свойство только для чтения.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to report this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; as an intended read-only property; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если необходимо объявить, что этот объект <see cref="T:System.Xaml.XamlMember" /> представляет ожидаемое свойство, доступное только для чтения; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsReadPublic">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a property that has a public &lt;see langword=&quot;get&quot; /&gt; accessor.">Возвращает значение, указывающее, представляет ли объект <see cref="T:System.Xaml.XamlMember" /> свойство, имеющее открытый метод доступа <see langword="get" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a property that has a public &lt;see langword=&quot;get&quot; /&gt; accessor; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если этот объект <see cref="T:System.Xaml.XamlMember" /> представляет свойство, имеющее открытый метод доступа <see langword="get" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsUnknown">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a member that is not resolvable by the backing system that is used for type and member resolution.">Возвращает значение, указывающее, представляет ли данный объект <see cref="T:System.Xaml.XamlMember" /> член, который не может быть разрешен в базовой системе, используемой для разрешения типов и членов.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a non-resolvable member; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если данный объект <see cref="T:System.Xaml.XamlMember" /> представляет неразрешимый член; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsWriteOnly">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a member that has a public &lt;see langword=&quot;set&quot; /&gt; accessor but not a public &lt;see langword=&quot;get&quot; /&gt; accessor.">Возвращает значение, указывающее, действительно ли этот объект <see cref="T:System.Xaml.XamlMember" /> представляет член, имеющий открытый метод доступа <see langword="set" />, но не имеющий открытого метода доступа <see langword="get" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a write-only member; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если этот объект <see cref="T:System.Xaml.XamlMember" /> представляет член, доступный только для записи; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsWritePublic">
      <summary vsli:raw="Returns whether this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a member that has a public &lt;see langword=&quot;set&quot; /&gt; accessor.">Возвращает значение, указывающее, действительно ли этот объект <see cref="T:System.Xaml.XamlMember" /> представляет член, имеющий открытый метод доступа <see langword="set" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; represents a writable member; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если этот объект <see cref="T:System.Xaml.XamlMember" /> представляет член, доступный для записи; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupMarkupExtensionBracketCharacters">
      <summary vsli:raw="Returns the opening and closing bracket characters for a markup extension.">Возвращает символы открывающей и закрывающей скобок для расширения разметки.</summary>
      <returns vsli:raw="A collection containing the opening and closing bracket characters.">Коллекция, содержащая символы открывающих и закрывающих скобок.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupTargetType">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type where the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; can exist.">Возвращает объект <see cref="T:System.Xaml.XamlType" /> того типа, в котором может существовать объект <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="The type where the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; can exist.">Тип, в котором может существовать объект <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupType">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type that is used by the member.">Возвращает объект <see cref="T:System.Xaml.XamlType" /> того типа, который используется данным членом.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type that is used by the member.">Объект <see cref="T:System.Xaml.XamlType" /> того типа, который используется данным членом.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupTypeConverter">
      <summary vsli:raw="Returns a type converter implementation that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Возвращает реализацию преобразователя типов, связанного с данным объектом <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; instance with &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; constraint; or &lt;see langword=&quot;null&quot; /&gt;.">Экземпляр <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.ComponentModel.TypeConverter" /> или значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupUnderlyingGetter">
      <summary vsli:raw="Returns a &lt;see langword=&quot;get&quot; /&gt; accessor that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Возвращает метод доступа <see langword="get" />, связанный с данным объектом <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the associated &lt;see langword=&quot;get&quot; /&gt; accessor; or &lt;see langword=&quot;null&quot; /&gt;.">Объект <see cref="T:System.Reflection.MethodInfo" /> для связанного метода доступа <see langword="get" /> или значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupUnderlyingMember">
      <summary vsli:raw="Returns a CLR type system &lt;see cref=&quot;T:System.Reflection.MemberInfo&quot; /&gt; that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Возвращает объект <see cref="T:System.Reflection.MemberInfo" /> системы типов среды CLR, связанный с данным объектом <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="A CLR type system &lt;see cref=&quot;T:System.Reflection.MemberInfo&quot; /&gt; object that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;; or &lt;see langword=&quot;null&quot; /&gt;.">Объект <see cref="T:System.Reflection.MemberInfo" /> системы типов среды CLR, связанный с данным объектом <see cref="T:System.Xaml.XamlMember" />, или значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupUnderlyingSetter">
      <summary vsli:raw="Returns a &lt;see langword=&quot;set&quot; /&gt; accessor that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Возвращает метод доступа <see langword="set" />, связанный с данным объектом <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; for the associated &lt;see langword=&quot;set&quot; /&gt; accessor; or &lt;see langword=&quot;null&quot; /&gt;.">Объект <see cref="T:System.Reflection.MethodInfo" /> для связанного метода доступа <see langword="set" /> или значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupValueSerializer">
      <summary vsli:raw="Returns a value serializer implementation that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Возвращает реализацию сериализатора значений, связанную с данным объектом <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; instance with &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; constraint, or &lt;see langword=&quot;null&quot; /&gt;.">Экземпляр <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.Windows.Markup.ValueSerializer" /> или <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.MarkupExtensionBracketCharacters">
      <summary vsli:raw="Defines the opening and closing bracket characters for a markup extension.">Определяет символы открывающей и закрывающей скобок для расширения разметки.</summary>
      <returns vsli:raw="A collection containing the opening and closing bracket characters.">Коллекция, содержащая символы открывающих и закрывающих скобок.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.Name">
      <summary vsli:raw="Gets the &lt;see langword=&quot;xamlName&quot; /&gt; name string that declares this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Получает строковое представление имени <see langword="xamlName" />, объявляющего этот объект <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;xamlName&quot; /&gt; name string that declares this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Строковое представление имени <see langword="xamlName" />, объявляющего этот объект <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; objects have the same value.">Определяет, совпадают ли значения двух указанных объектов <see cref="T:System.Xaml.XamlMember" />.</summary>
      <param name="xamlMember1" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlMember" /> или <see langword="null" />.</param>
      <param name="xamlMember2" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlMember" /> или <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;xamlMember1&quot; /&gt; is the same as the value of &lt;paramref name=&quot;xamlMember2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если значение параметра <paramref name="xamlMember1" /> совпадает со значением <paramref name="xamlMember2" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; objects have different values.">Определяет, различаются ли значения двух указанных объектов <see cref="T:System.Xaml.XamlMember" />.</summary>
      <param name="xamlMember1" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlMember" /> или <see langword="null" />.</param>
      <param name="xamlMember2" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlMember" /> или <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;xamlMember1&quot; /&gt; differs from the value of &lt;paramref name=&quot;xamlMember2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если значение параметра <paramref name="xamlMember1" /> отличается от значения параметра <paramref name="xamlMember2" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.PreferredXamlNamespace">
      <summary vsli:raw="Gets the single XAML namespace URI that identifies the primary XAML namespace for this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Получает URI одного пространства имен XAML, определяющий первичное пространство имен XAML для этого объекта <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="The identifier for the primary XAML namespace for this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;, as a string.">Идентификатор первичного пространства имен XAML для этого объекта <see cref="T:System.Xaml.XamlMember" /> в виде строки.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.SerializationVisibility">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.DesignerSerializationVisibility&quot; /&gt; value, which indicates how a visual designer should process the member.">Получает значение <see cref="T:System.ComponentModel.DesignerSerializationVisibility" />, указывающее, как визуальный конструктор должен обрабатывать этот член.</summary>
      <returns vsli:raw="A value of the &lt;see cref=&quot;T:System.ComponentModel.DesignerSerializationVisibility&quot; /&gt; enumeration. The default is &lt;see cref=&quot;F:System.ComponentModel.DesignerSerializationVisibility.Visible&quot; /&gt;.">Значение перечисления <see cref="T:System.ComponentModel.DesignerSerializationVisibility" />. Значение по умолчанию — <see cref="F:System.ComponentModel.DesignerSerializationVisibility.Visible" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.TargetType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type where the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; can exist.">Получает объект <see cref="T:System.Xaml.XamlType" /> того типа, в котором может существовать объект <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="The type where the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; can exist.">Тип, в котором может существовать объект <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.ToString">
      <summary vsli:raw="Returns a string representation of this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Возвращает строковое представление данного объекта <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns vsli:raw="A string representation of this &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">Строковое представление данного объекта <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.Type">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type that is used by the member.">Получает объект <see cref="T:System.Xaml.XamlType" /> того типа, который используется данным членом.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the type that is used by the member.">Объект <see cref="T:System.Xaml.XamlType" /> того типа, который используется данным членом.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.TypeConverter">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object, which can be used for type conversion construction of XAML declared objects.">Получает объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, который может использоваться для создания конструкции преобразователя типов для объектов, объявленных в языке XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; value, with a &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; constraint on the generic.">Значение <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.ComponentModel.TypeConverter" /> для универсального класса.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.UnderlyingMember">
      <summary vsli:raw="Gets the CLR type system &lt;see cref=&quot;T:System.Reflection.MemberInfo&quot; /&gt; that is available for a member that is constructed by &lt;see cref=&quot;T:System.Reflection.PropertyInfo&quot; /&gt;, &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt;, or &lt;see cref=&quot;T:System.Reflection.EventInfo&quot; /&gt;.">Получает объект <see cref="T:System.Reflection.MemberInfo" /> системы типов среды CLR, доступный для члена, который создан объектом <see cref="T:System.Reflection.PropertyInfo" />, <see cref="T:System.Reflection.MethodInfo" /> или <see cref="T:System.Reflection.EventInfo" />.</summary>
      <returns vsli:raw="CLR type system &lt;see cref=&quot;T:System.Reflection.MemberInfo&quot; /&gt; information, as cast from the initial constructor parameters. A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; that is constructed with the &lt;see cref=&quot;M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)&quot; /&gt; signature returns &lt;see langword=&quot;null&quot; /&gt;.">Сведения объекта <see cref="T:System.Reflection.MemberInfo" /> системы типов среды CLR, преобразованные из исходных параметров конструктора. Объект <see cref="T:System.Xaml.XamlMember" />, созданный с сигнатурой <see cref="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" />, возвращает значение <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.ValueSerializer">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object, which is used for value serialization of XAML declared objects.">Получает объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, используемый для сериализации значений объектов, объявленных в языке XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; constraint on the generic.">Объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.Windows.Markup.ValueSerializer" /> для универсального класса.</returns>
    </member>
    <member name="T:System.Xaml.XamlNodeList">
      <summary vsli:raw="Provides a list of XAML nodes, which can be used for scenarios such as writing XAML nodes in a deferred manner.">Предоставляет список узлов XAML, который можно использовать для таких целей, как отложенная запись узлов XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlNodeList.#ctor(System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlNodeList&quot; /&gt; class, using a provided schema context.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlNodeList" /> предоставленным контекстом схемы.</summary>
      <param name="schemaContext" vsli:raw="The schema context to use for node operations.">Контекст схемы, который следует использовать для операций с узлами.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="schemaContext" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlNodeList.#ctor(System.Xaml.XamlSchemaContext,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlNodeList&quot; /&gt; class, using a provided schema context and list size.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlNodeList" />, используя предоставленные контекст схемы и размер списка.</summary>
      <param name="schemaContext" vsli:raw="The schema context to use for node operations.">Контекст схемы, который следует использовать для операций с узлами.</param>
      <param name="size" vsli:raw="The intended item count of the list.">Целевое количество элементов в списке.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="schemaContext" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlNodeList.Clear">
      <summary vsli:raw="Clears the items in this list.">Очищает элементы в этом списке.</summary>
    </member>
    <member name="P:System.Xaml.XamlNodeList.Count">
      <summary vsli:raw="Gets the number of nodes in this &lt;see cref=&quot;T:System.Xaml.XamlNodeList&quot; /&gt;.">Получает число узлов в данном объекте <see cref="T:System.Xaml.XamlNodeList" />.</summary>
      <returns vsli:raw="The number of nodes in this &lt;see cref=&quot;T:System.Xaml.XamlNodeList&quot; /&gt;.">Количество узлов в этом объекте <see cref="T:System.Xaml.XamlNodeList" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlNodeList.GetReader">
      <summary vsli:raw="Returns a XAML reader implementation delegate.">Возвращает делегат реализации средства чтения XAML.</summary>
      <returns vsli:raw="A XAML reader implementation delegate.">Делегат реализации средства чтения XAML.</returns>
      <exception cref="T:System.Xaml.XamlException" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlNodeList&quot; /&gt; is still in Write mode.  &#xA;  &#xA; -or-  &#xA;  &#xA; The writer that is used for the node list has no schema context.">
        <see cref="T:System.Xaml.XamlNodeList" /> по-прежнему находится в режиме записи.  

или - 
Средство записи, используемое для списка узлов, не имеет контекста схемы.</exception>
    </member>
    <member name="P:System.Xaml.XamlNodeList.Writer">
      <summary vsli:raw="Gets the associated XAML writer.">Получает связанное средство записи XAML.</summary>
      <returns vsli:raw="The associated XAML writer.">Связанное средство записи XAML.</returns>
    </member>
    <member name="T:System.Xaml.XamlNodeQueue">
      <summary vsli:raw="Provides a buffer for writing nodes and reading them again.">Предоставляет буфер для записи узлов и их повторного чтения.</summary>
    </member>
    <member name="M:System.Xaml.XamlNodeQueue.#ctor(System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlNodeQueue&quot; /&gt; class using a provided XAML schema context.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlNodeQueue" /> предоставленным контекстом схемы XAML.</summary>
      <param name="schemaContext" vsli:raw="The schema context to use for node operations.">Контекст схемы, который следует использовать для операций с узлами.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlSchemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xamlSchemaContext" /> — <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlNodeQueue.Count">
      <summary vsli:raw="Gets the number of nodes in the &lt;see cref=&quot;T:System.Xaml.XamlNodeQueue&quot; /&gt;.">Получает число узлов в объекте <see cref="T:System.Xaml.XamlNodeQueue" />.</summary>
      <returns vsli:raw="The number of nodes in the &lt;see cref=&quot;T:System.Xaml.XamlNodeQueue&quot; /&gt;.">Число узлов в объекте <see cref="T:System.Xaml.XamlNodeQueue" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlNodeQueue.IsEmpty">
      <summary vsli:raw="Gets a value that determines whether this &lt;see cref=&quot;T:System.Xaml.XamlNodeQueue&quot; /&gt; does not contain nodes.">Получает значение, определяющее, действительно ли данный объект <see cref="T:System.Xaml.XamlNodeQueue" /> не содержит узлы.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlNodeQueue&quot; /&gt; does not contain nodes; &lt;see langword=&quot;false&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlNodeQueue&quot; /&gt; contains nodes.">Значение <see langword="true" />, если данный объект <see cref="T:System.Xaml.XamlNodeQueue" /> не содержит узлов. Значение <see langword="false" />, если данный объект <see cref="T:System.Xaml.XamlNodeQueue" /> содержит узлы.</returns>
    </member>
    <member name="P:System.Xaml.XamlNodeQueue.Reader">
      <summary vsli:raw="Gets a XAML reader implementation delegate.">Получает делегат реализации средства чтения XAML.</summary>
      <returns vsli:raw="A XAML reader implementation delegate.">Делегат реализации средства чтения XAML.</returns>
      <exception cref="T:System.Xaml.XamlException" vsli:raw="The XAML writer that is used for the node list has no valid XAML schema context.">Средство записи XAML, используемое для списка узлов, не имеющих допустимого контекста схемы XAML.</exception>
    </member>
    <member name="P:System.Xaml.XamlNodeQueue.Writer">
      <summary vsli:raw="Gets the associated XAML writer.">Получает связанное средство записи XAML.</summary>
      <returns vsli:raw="The associated XAML writer.">Связанное средство записи XAML.</returns>
    </member>
    <member name="T:System.Xaml.XamlNodeType">
      <summary vsli:raw="Describes the type of the node that is currently being processed by a XAML reader.">Описывает тип узла, обрабатываемого в данный момент средством чтения XAML.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.EndMember">
      <summary vsli:raw="The reader is at the end of a member node.">Средство чтения находится в конце узла члена.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.EndObject">
      <summary vsli:raw="The reader is at the end of an object node.">Средство чтения находится в конце узла объекта.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.GetObject">
      <summary vsli:raw="The reader is within an object node and writing a default or implicit value, instead of being a specified object value.">Средство чтения находится в пределах узла объекта и записывает значение по умолчанию или неявное значение, а не заданное значение объекта.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.NamespaceDeclaration">
      <summary vsli:raw="The reader is within an XML namespace declaration.">Средство чтения находится в объявлении пространства имен XML.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.None">
      <summary vsli:raw="The reader is not positioned at a true node (for example, the reader might be at end-of-file).">Средство чтения не находится на настоящем узле (например, средство чтения может находится в конце файла).</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.StartMember">
      <summary vsli:raw="The reader is at the start of a member node.">Средство чтения находится в начале узла члена.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.StartObject">
      <summary vsli:raw="The reader is at the start of an object node.">Средство чтения находится в начале узла объекта.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.Value">
      <summary vsli:raw="The reader is within a node and processing a value.">Средство чтения находится в пределах узла и обрабатывает значение.</summary>
    </member>
    <member name="T:System.Xaml.XamlObjectEventArgs">
      <summary vsli:raw="Provides data for callbacks that can be inserted in the sequence for object initialization and property setting. This influences the object graph that is produced by &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;.">Предоставляет данные для обратных вызовов, которые могут быть вставлены в последовательность для инициализации объекта и задания его свойств. Это приводит к изменению графа объекта, создаваемого средством записи <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectEventArgs.#ctor(System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectEventArgs&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlObjectEventArgs" />.</summary>
      <param name="instance" vsli:raw="The object instance that is relevant to the event data.">Экземпляр объекта, соответствующий данным события.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;instance&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="instance" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlObjectEventArgs.ElementLineNumber">
      <summary vsli:raw="Gets or sets the line number of the relevant object instance.">Получает или задает номер строки соответствующего экземпляра объекта.</summary>
      <returns vsli:raw="The line number of the element.">Номер строки элемента.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectEventArgs.ElementLinePosition">
      <summary vsli:raw="Gets or sets the position in the line of the relevant object instance.">Получает или задает положение в строке соответствующего экземпляра объекта.</summary>
      <returns vsli:raw="The position in the line of the element.">Положение элемента в строке.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectEventArgs.Instance">
      <summary vsli:raw="Gets the object instance that is relevant to the event data.">Получает экземпляр объекта, соответствующего данным события.</summary>
      <returns vsli:raw="The object instance that is relevant to the event data.">Экземпляр объекта, соответствующий данным события.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectEventArgs.SourceBamlUri">
      <summary vsli:raw="Gets or sets the BAML URI of the relevant object instance.">Получает или задает URI BAML соответствующего экземпляра объекта.</summary>
      <returns vsli:raw="The BAML URI of the relevant object instance.">URI BAML соответствующего экземпляра объекта.</returns>
    </member>
    <member name="T:System.Xaml.XamlObjectReader">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; implementation that reads object graphs and generates a XAML node stream.">Предоставляет реализацию <see cref="T:System.Xaml.XamlReader" />, которая считывает графы объектов и создает поток узла XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.#ctor(System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReader&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlObjectReader" />.</summary>
      <param name="instance" vsli:raw="The root of the object tree / object graph to read.">Корень считываемого дерева/графа объектов.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.#ctor(System.Object,System.Xaml.XamlObjectReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReader&quot; /&gt; class with the specified reader settings.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlObjectReader" /> с указанными параметрами средства чтения.</summary>
      <param name="instance" vsli:raw="The root of the object tree to read.">Корень считываемого дерева объектов.</param>
      <param name="settings" vsli:raw="A settings object.">Объект параметров.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.#ctor(System.Object,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReader&quot; /&gt; class with the specified schema context.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlObjectReader" /> с заданным контекстом схемы.</summary>
      <param name="instance" vsli:raw="The root of the object tree to read.">Корень считываемого дерева объектов.</param>
      <param name="schemaContext" vsli:raw="The schema context for the reader to use.">Контекст схемы для использования средством чтения.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="schemaContext" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.#ctor(System.Object,System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReader&quot; /&gt; class with the specified schema context and reader settings.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlObjectReader" /> с заданным контекстом схемы и параметрами средства чтения.</summary>
      <param name="instance" vsli:raw="The root of the object tree to read.">Корень считываемого дерева объектов.</param>
      <param name="schemaContext" vsli:raw="The schema context for the reader to use.">Контекст схемы для использования средством чтения.</param>
      <param name="settings" vsli:raw="A settings object.">Объект параметров.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="schemaContext" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Instance">
      <summary vsli:raw="Gets the object instance that is available at the current reader position.">Получает экземпляр объекта, доступный в текущей позиции средства чтения.</summary>
      <returns vsli:raw="The object instance at the current reader position; or &lt;see langword=&quot;null&quot; /&gt; if the reader position is not on an object.">Экземпляр объекта в текущей позиции средства чтения или <see langword="null" />, если текущая позиция средства чтения не находится на объекте.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.IsEof">
      <summary vsli:raw="Gets a value that reports whether the reader position is at the end of the file.">Получает значение, определяющее, расположено ли средство чтения в конце файла.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader position is at the end of the file; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если средство чтения расположено в конце файла; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Member">
      <summary vsli:raw="Gets the current &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; at the reader position, if the reader position is on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.StartMember&quot; /&gt;.">Получает текущий объект <see cref="T:System.Xaml.XamlMember" /> в положении средства чтения, если положение средства чтения находится на объекте <see cref="F:System.Xaml.XamlNodeType.StartMember" />.</summary>
      <returns vsli:raw="The current member; or &lt;see langword=&quot;null&quot; /&gt; if the reader position is not on a member.">Текущий член или <see langword="null" />, если положение средства чтения не находится на члене.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Namespace">
      <summary vsli:raw="Gets the XAML namespace declaration from the current reader position.">Получает объявление пространства имен XAML из текущей позиции средства чтения.</summary>
      <returns vsli:raw="The XAML namespace declaration if the reader is positioned on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.NamespaceDeclaration&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Объявление пространства имен XAML, если средство чтения расположено в объекте <see cref="F:System.Xaml.XamlNodeType.NamespaceDeclaration" />; в противном случае — значение <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.NodeType">
      <summary vsli:raw="Gets the type of the current node.">Возвращает тип текущего узла.</summary>
      <returns vsli:raw="The type of the current node.">Тип текущего узла.</returns>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.Read">
      <summary vsli:raw="Provides the next XAML node from the source object graph, if a node is available.">Предоставляет следующий узел XAML из исходного графа объекта, если такой узел имеется.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a node is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если узел доступен; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.SchemaContext">
      <summary vsli:raw="Gets an object that provides schema information for the information set.">Получает объект, предоставляющий сведения о схеме для данного набора сведений.</summary>
      <returns vsli:raw="An object that provides schema information for the information set.">Объект, предоставляющий сведения о схеме для данного набора сведений.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Type">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the object at the current reader position.">Получает тип <see cref="T:System.Xaml.XamlType" /> объекта в текущем положении средства чтения.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the object at the current reader position; or &lt;see langword=&quot;null&quot; /&gt; if the position is not on an object.">Тип <see cref="T:System.Xaml.XamlType" /> объекта в текущем положении средства чтения или значение <see langword="null" />, если положение не находится в объекте.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Value">
      <summary vsli:raw="Gets the value of the node at the current reader position.">Получает значение узла в текущей позиции средства чтения.</summary>
      <returns vsli:raw="The value of the current node; or &lt;see langword=&quot;null&quot; /&gt;, if the reader position is not on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.Value&quot; /&gt; node type.">Значение текущего узла или <see langword="null" />, если положение средства чтения не находится на узле типа <see cref="F:System.Xaml.XamlNodeType.Value" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlObjectReaderException">
      <summary vsli:raw="The exception that is thrown by several &lt;see cref=&quot;T:System.Xaml.XamlObjectReader&quot; /&gt; internal helper APIs.">Исключение, создаваемое несколькими внутренними вспомогательными программными интерфейсами приложений (API) <see cref="T:System.Xaml.XamlObjectReader" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReaderException&quot; /&gt; class with a system-supplied message that describes the error.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlObjectReaderException" /> с системным сообщением, содержащим описание ошибки.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReaderException&quot; /&gt; class with serialized data.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlObjectReaderException" /> с сериализованными данными.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Объект, содержащий сериализованные данные объекта.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReaderException&quot; /&gt; class with a specified message that describes the error.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlObjectReaderException" /> с использованием заданного сообщения, содержащего описание ошибки.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Сообщение с описанием исключения. Код, вызывающий этот конструктор, должен обеспечить локализацию данной строки в соответствии с текущим языком и региональными параметрами системы.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReaderException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlObjectReaderException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Сообщение с описанием исключения. Код, вызывающий этот конструктор, должен обеспечить локализацию данной строки в соответствии с текущим языком и региональными параметрами системы.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Исключение, которое является причиной текущего исключения. Если значение параметра <paramref name="innerException" /> не равно <see langword="null" />, текущее исключение сгенерировано в блоке <see langword="catch" />, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.Xaml.XamlObjectReaderSettings">
      <summary vsli:raw="Specifies processing rules or option settings for a &lt;see cref=&quot;T:System.Xaml.XamlObjectReader&quot; /&gt;.">Задает правила обработки или значения параметров для класса <see cref="T:System.Xaml.XamlObjectReader" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectReaderSettings&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlObjectReaderSettings" />.</summary>
    </member>
    <member name="P:System.Xaml.XamlObjectReaderSettings.RequireExplicitContentVisibility">
      <summary vsli:raw="Gets or sets a value that determines whether writers that use the associated &lt;see cref=&quot;T:System.Xaml.XamlObjectReader&quot; /&gt; for context should use designer settings for writing content explicitly.">Получает или задает значение, определяющее, должны ли средства записи, использующие для контекста связанный класс <see cref="T:System.Xaml.XamlObjectReader" />, явно использовать параметры конструктора при записи содержимого.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that writers that use this context should use designer settings for writing any output content in cases where &lt;see cref=&quot;P:System.Xaml.XamlMember.IsWritePublic&quot; /&gt; reports &lt;see langword=&quot;false&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; if designer settings should be ignored.">Значение <see langword="true" />, если средства записи, использующие этот контекст, должны использовать параметры конструктора для записи выходных данных в случаях, когда свойство <see cref="P:System.Xaml.XamlMember.IsWritePublic" /> имеет значение <see langword="false" />; значение <see langword="false" />, если параметры конструктора должны пропускаться.</returns>
    </member>
    <member name="T:System.Xaml.XamlObjectWriter">
      <summary vsli:raw="Creates an object graph from a source XAML node stream.">Создает граф объектов из исходного потока узлов XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; class using  the XAML schema context that is used by a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt;.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlObjectWriter" />, используя контекст схемы XAML, применяемый объектом <see cref="T:System.Xaml.XamlReader" />.</summary>
      <param name="schemaContext" vsli:raw="A XAML schema context that is shared with the XAML reader that provides nodes for writing.">Контекст схемы XAML, общий со средством чтения XAML. Этот контекст предоставляет узлы для записи.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="schemaContext" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectWriterSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; class using the context that is used by a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; and its settings.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlObjectWriter" /> контекстом, используемым объектом <see cref="T:System.Xaml.XamlReader" /> и его параметрами.</summary>
      <param name="schemaContext" vsli:raw="A XAML schema context that is shared with the XAML reader that provides nodes for writing.">Контекст схемы XAML, общий со средством чтения XAML. Этот контекст предоставляет узлы для записи.</param>
      <param name="settings" vsli:raw="A settings object that specifies certain options for &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; behavior and output.">Объект параметров, задающий определенные параметры для поведения и вывода объекта <see cref="T:System.Xaml.XamlObjectWriter" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="schemaContext" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.Clear">
      <summary vsli:raw="Resets all possible frames and clears the object graph.">Сбрасывает все возможные кадры и очищает граф объектов.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;, and optionally, releases the managed resources.">Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Xaml.XamlObjectWriter" />, а при необходимости освобождает также управляемые ресурсы.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release the managed resources; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если необходимо освободить управляемые ресурсы; в противном случае — значение <see langword="false" />.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnAfterBeginInit(System.Object)">
      <summary vsli:raw="Invokes any &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler&quot; /&gt; method that is associated with &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;.">Вызывает любой метод <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler" />, связанный с объектом <see cref="T:System.Xaml.XamlObjectWriterSettings" />, для данного объекта <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
      <param name="value" vsli:raw="The object to report on. The object is packaged into &lt;see cref=&quot;T:System.Xaml.XamlObjectEventArgs&quot; /&gt; when the handler is invoked.">Объект, о котором требуется отчет. При вызове обработчика объект упакован в <see cref="T:System.Xaml.XamlObjectEventArgs" />.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnAfterEndInit(System.Object)">
      <summary vsli:raw="Invokes any &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler&quot; /&gt; method that is associated with &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;.">Вызывает любой метод <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler" />, связанный с объектом <see cref="T:System.Xaml.XamlObjectWriterSettings" />, для данного объекта <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
      <param name="value" vsli:raw="The object to report on. The value  is packaged into &lt;see cref=&quot;T:System.Xaml.XamlObjectEventArgs&quot; /&gt; when the handler is invoked.">Объект, о котором требуется отчет. При вызове обработчика значение упаковывается в объект <see cref="T:System.Xaml.XamlObjectEventArgs" />.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnAfterProperties(System.Object)">
      <summary vsli:raw="Invokes any &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler&quot; /&gt; referenced method that is associated with &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;.">Вызывает любой метод <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler" />, на который имеется ссылка и который связан с <see cref="T:System.Xaml.XamlObjectWriterSettings" />, для данного объекта <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
      <param name="value" vsli:raw="The object to report on. This is packaged into &lt;see cref=&quot;T:System.Xaml.XamlObjectEventArgs&quot; /&gt; when the handler is invoked.">Объект, о котором требуется отчет. При вызове обработчика он упакован в объект <see cref="T:System.Xaml.XamlObjectEventArgs" />.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnBeforeProperties(System.Object)">
      <summary vsli:raw="Invokes any &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler&quot; /&gt; referenced method that is associated with &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; for this &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;.">Вызывает любой метод <see cref="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler" />, на который имеется ссылка и который связан с <see cref="T:System.Xaml.XamlObjectWriterSettings" />, для данного объекта <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
      <param name="value" vsli:raw="The value to pass through &lt;see cref=&quot;T:System.Xaml.XamlObjectEventArgs&quot; /&gt; when the handler is invoked.">Значение, передаваемое при вызове обработчика через объект <see cref="T:System.Xaml.XamlObjectEventArgs" />.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)">
      <summary vsli:raw="Invokes any &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler&quot; /&gt; referenced method that is associated with &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; for this writer, as long as &lt;paramref name=&quot;handled&quot; /&gt; in &lt;see cref=&quot;T:System.Windows.Markup.XamlSetValueEventArgs&quot; /&gt; event data is not &lt;see langword=&quot;true&quot; /&gt;.">Вызывает любой метод <see cref="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler" />, на который имеется ссылка и который связан с <see cref="T:System.Xaml.XamlObjectWriterSettings" />, для этого средства записи при условии, что параметр <paramref name="handled" /> в данных события <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" /> имеет значение, отличное от <see langword="true" />.</summary>
      <param name="eventSender" vsli:raw="The object to report as the source to the handler.">Объект, передаваемый в обработчик в качестве источника.</param>
      <param name="member" vsli:raw="The name of the property to set, which is passed to the handler as part of &lt;see cref=&quot;T:System.Windows.Markup.XamlSetValueEventArgs&quot; /&gt;.">Имя задаваемого свойства, передаваемое обработчику в составе объекта <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</param>
      <param name="value" vsli:raw="The value to provide for the property that is named by &lt;paramref name=&quot;property&quot; /&gt;. The value is passed to the handler as part of &lt;see cref=&quot;T:System.Windows.Markup.XamlSetValueEventArgs&quot; /&gt;.">Значение, которое нужно предоставить свойству, определенному параметром <paramref name="property" />. Значение передается обработчику в составе объекта <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</param>
      <returns vsli:raw="A Boolean value that is set by any associated handler; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Логическое значение, заданное любым связанным обработчиком; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriter.Result">
      <summary vsli:raw="Gets the last object that was written. Typically only called when the node stream is at its end and the object graph is complete.">Получает последний записанный объект. Вызывается, только когда поток узла достиг конца и граф объекта завершен.</summary>
      <returns vsli:raw="The last object written, or &lt;see langword=&quot;null&quot; /&gt;.">Последний записанный объект или <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriter.RootNameScope">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Markup.INameScope&quot; /&gt; service that maintains the XAML namescope for the absolute node root of the XAML object writer.">Получает службу <see cref="T:System.Windows.Markup.INameScope" />, которая поддерживает область имен XAML для абсолютного корня узла средства записи объекта XAML.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Markup.INameScope&quot; /&gt; service that maintains the XAML namescope for the current root of the object writer.">Служба <see cref="T:System.Windows.Markup.INameScope" />, которая поддерживает область имен XAML для текущего корня средства записи объекта.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriter.SchemaContext">
      <summary vsli:raw="Gets the active XAML schema context.">Получает активный контекст схемы XAML.</summary>
      <returns vsli:raw="The XAML schema context.">Контекст схемы XAML.</returns>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.SetLineInfo(System.Int32,System.Int32)">
      <summary vsli:raw="Implements &lt;see cref=&quot;M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)&quot; /&gt; and provides line information for exceptions.">Реализует метод <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /> и предоставляет сведения о строке для исключений.</summary>
      <param name="lineNumber" vsli:raw="The line number from the reader.">Номер строки от средства чтения.</param>
      <param name="linePosition" vsli:raw="The line position from the reader.">Положение в строке от средства чтения.</param>
    </member>
    <member name="P:System.Xaml.XamlObjectWriter.ShouldProvideLineInfo">
      <summary vsli:raw="Gets a value that reports whether a line information service should provide values and therefore, should also call the &lt;see cref=&quot;M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)&quot; /&gt; method when it is relevant.">Получает значение, которое сообщает, должна ли служба сведений о строке предоставлять значения и, следовательно, вызывать метод <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" />, когда это требуется.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if line information is used by the writer; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если сведения о строке используются средством записи; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteEndMember">
      <summary vsli:raw="Closes the current member scope, and may write the value of the member scope while it closes. The new scope becomes the parent object scope of the member.">Закрывает область текущего члена и может при закрытии записать значение области члена. Новая область становится областью родительского объекта этого члена.</summary>
      <exception cref="T:System.Xaml.XamlObjectWriterException" vsli:raw="Failed to create member value from a value node that is encountered between this call and a previous &lt;see langword=&quot;StartMember&quot; /&gt;.">Не удалось создать значение элемента из узла значения, который встречается между этим вызовом и предыдущим <see langword="StartMember" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteEndObject">
      <summary vsli:raw="Closes the current object scope in the writer. The new object scope becomes the parent member scope.">Закрывает текущую область объекта в средстве записи. Новой областью объекта становится область родительского члена.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteGetObject">
      <summary vsli:raw="Writes the conceptual &lt;see langword=&quot;StartObject&quot; /&gt; into the object graph when the specified object is a default or implicit value of the parent property. The implicit value comes from information that is obtained from the XAML schema context and backing type information, instead of being specified as an object value in the input XAML node set.">Записывает концептуальный <see langword="StartObject" /> в граф объекта, если заданный объект является значением по умолчанию или неявным значением родительского свойства. Неявное значение получается из сведений, полученных из контекста схемы XAML и информации базовых типов, а не задается в виде значения объекта во входном наборе узлов XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
      <summary vsli:raw="Defines a namespace declaration that applies to the next object scope or member scope.">Определяет объявление пространства имен, которое применяется к следующей области объекта или члена.</summary>
      <param name="namespaceDeclaration" vsli:raw="The namespace declaration to write.">Объявление пространства имен для записи.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;namespaceDeclaration&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="namespaceDeclaration" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="A component of &lt;paramref name=&quot;namespaceDeclaration&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Компонент <paramref name="namespaceDeclaration" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Xaml.XamlObjectReaderException" vsli:raw="Tried to write a XAML namespace node in an invalid scope.">Попытка записи узла пространства имен XAML в недопустимую область.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)">
      <summary vsli:raw="Writes a new member node into the current object scope, and the scope becomes a new member scope.">Записывает новый узел члена в текущую область объекта, и эта область становится новой областью члена.</summary>
      <param name="property" vsli:raw="The XAML property to write. Typically you obtain this value from a XAML reader through the XAML node stream intermediate.">Записываемое свойство XAML. Это значение, как правило, получается из средства чтения XAML посредством промежуточного потока узлов XAML.</param>
      <exception cref="T:System.Xaml.XamlObjectWriterException" vsli:raw="&lt;paramref name=&quot;property&quot; /&gt; has &lt;see cref=&quot;P:System.Xaml.XamlMember.IsUnknown&quot; /&gt; set to &lt;see langword=&quot;true&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see cref=&quot;P:System.Xaml.XamlLanguage.UnknownContent&quot; /&gt; passed, which indicates that the XAML node stream contained content for an object that does not support content.  &#xA;  &#xA; -or-  &#xA;  &#xA; Attempted to write a start member in an invalid scope.">Для свойства <paramref name="property" /> значение <see cref="P:System.Xaml.XamlMember.IsUnknown" /> установлено равным <see langword="true" />.  

или - 
Свойство переданное <see cref="P:System.Xaml.XamlLanguage.UnknownContent" />, которое указывает, что поток узлов XAML, содержащий содержимое для объекта, который не поддерживает содержимое.  

-или- 
Попытка записи начального члена в недопустимой области действия.</exception>
      <exception cref="T:System.Xaml.XamlDuplicateMemberException" vsli:raw="&lt;paramref name=&quot;property&quot; /&gt; specifies a property that is already explicitly set in the parent object scope.">
        <paramref name="property" /> задает свойство, которое уже явно задано в области родительского объекта.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;property&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="property" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteStartObject(System.Xaml.XamlType)">
      <summary vsli:raw="Writes an object node into the current scope, and sets the scope to a new object scope.">Записывает узел объекта в текущую область, и задает эту область для области нового объекта.</summary>
      <param name="xamlType" vsli:raw="The type to write. Typically you obtain this value from a XAML reader.">Записываемый тип. Обычно это значение получается из средства чтения XAML.</param>
      <exception cref="T:System.Xaml.XamlObjectWriterException" vsli:raw="Processing an &lt;see cref=&quot;P:System.Xaml.XamlType.IsUnknown&quot; /&gt; type and cannot create an object.  &#xA;  &#xA; -or-  &#xA;  &#xA; Attempted to write a start object in an invalid scope.">Обработка типа <see cref="P:System.Xaml.XamlType.IsUnknown" />, не удается создать объект.  

или - 
Попытка записи начального объекта в недопустимой области действия.</exception>
      <exception cref="T:System.Xaml.XamlParseException" vsli:raw="Attempted to write a root object when the root object was already provided in the settings.">Попытка записи корневого объекта, когда корневой объект уже был предоставлен в настройках.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="xamlType" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteValue(System.Object)">
      <summary vsli:raw="Writes a value to the current member scope. If the current scope is inside a collection, dictionary, or array object, the value should be added to the collection, dictionary, or array.">Выполняет запись значения в область текущего члена. Если текущая область находится в объекте коллекции, словаря или массива, это значение необходимо добавить в коллекцию, словарь или массив.</summary>
      <param name="value" vsli:raw="The value to write.">Значение для записи.</param>
      <exception cref="T:System.Xaml.XamlObjectWriterException" vsli:raw="Attempted to write a value in an invalid scope.">Попытка записи значения в недопустимой области действия.</exception>
    </member>
    <member name="T:System.Xaml.XamlObjectWriterException">
      <summary vsli:raw="The exception that is thrown when a XAML writer (such as the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; class) encounters an error while attempting to produce object graphs from a XAML node stream.">Исключение, создаваемое, когда средство записи XAML (например, класс <see cref="T:System.Xaml.XamlObjectWriter" />) обнаруживает ошибку при попытке создать графы объектов из потока узлов XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterException&quot; /&gt; class with a system-supplied message that describes the error.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlObjectWriterException" /> с системным сообщением, содержащим описание ошибки.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterException&quot; /&gt; class with serialized data.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlObjectWriterException" /> с сериализованными данными.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Объект, содержащий сериализованные данные объекта.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterException&quot; /&gt; class with a specified message that describes the error.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlObjectWriterException" /> с использованием заданного сообщения, содержащего описание ошибки.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Сообщение с описанием исключения. Код, вызывающий этот конструктор, должен обеспечить локализацию данной строки в соответствии с текущим языком и региональными параметрами системы.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlObjectWriterException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Сообщение с описанием исключения. Код, вызывающий этот конструктор, должен обеспечить локализацию данной строки в соответствии с текущим языком и региональными параметрами системы.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Исключение, которое является причиной текущего исключения. Если значение параметра <paramref name="innerException" /> не равно <see langword="null" />, текущее исключение сгенерировано в блоке <see langword="catch" />, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.Xaml.XamlObjectWriterSettings">
      <summary vsli:raw="Provides specific XAML writer settings for &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt;.">Предоставляет определенные параметры средства записи XAML для объекта <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlObjectWriterSettings" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterSettings.#ctor(System.Xaml.XamlObjectWriterSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriterSettings&quot; /&gt; class that is based on the copy of an existing instance.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlObjectWriterSettings" /> на основе копии существующего экземпляра.</summary>
      <param name="settings" vsli:raw="The settings instance to copy.">Копируемый экземпляр параметров.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;settings&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="settings" /> — <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.AccessLevel">
      <summary vsli:raw="Gets or sets &lt;see cref=&quot;T:System.Xaml.Permissions.XamlAccessLevel&quot; /&gt; permissions that the XAML writer observes.">Получает или задает разрешения <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />, которые соблюдает средство чтения XAML.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Permissions.XamlAccessLevel&quot; /&gt; permissions.">Разрешения <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler">
      <summary vsli:raw="Gets or sets a reference to a callback that is invoked by the XAML writer at the &lt;see cref=&quot;M:System.ComponentModel.ISupportInitialize.BeginInit&quot; /&gt; phase of the object lifetime for each created object.">Получает или задает ссылку на обратный вызов, который вызывается средством записи XAML на этапе <see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" /> времени существования объекта для каждого созданного объекта.</summary>
      <returns vsli:raw="A callback that is invoked by the XAML writer at the &lt;see cref=&quot;M:System.ComponentModel.ISupportInitialize.BeginInit&quot; /&gt; phase of object lifetime.">Обратный вызов, вызываемый средством записи XAML на этапе <see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" /> времени существования объекта.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler">
      <summary vsli:raw="Gets or sets a reference to a callback that is invoked by the XAML writer at the &lt;see cref=&quot;M:System.ComponentModel.ISupportInitialize.EndInit&quot; /&gt; phase of the object lifetime for each created object.">Получает или задает ссылку на обратный вызов, который вызывается средством записи XAML на этапе <see cref="M:System.ComponentModel.ISupportInitialize.EndInit" /> времени существования объекта для каждого созданного объекта.</summary>
      <returns vsli:raw="A callback that is invoked by the XAML writer at the &lt;see cref=&quot;M:System.ComponentModel.ISupportInitialize.EndInit&quot; /&gt; phase of object lifetime.">Обратный вызов, вызываемый средством записи XAML на этапе <see cref="M:System.ComponentModel.ISupportInitialize.EndInit" /> времени существования объекта.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler">
      <summary vsli:raw="Gets or sets a reference to a callback that is invoked by the XAML writer at the post-member-write phase of the object lifetime for each created object.">Получает или задает ссылку на обратный вызов, который вызывается средством записи XAML на этапе "запись после члена" времени существования объекта для каждого созданного объекта.</summary>
      <returns vsli:raw="A callback that is invoked by the XAML writer at the post-member-write phase of object lifetime.">Обратный вызов, вызываемый средством чтения XAML на этапе "запись после члена" времени существования объекта.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler">
      <summary vsli:raw="Gets or sets a reference to a callback that is invoked by the XAML writer at the pre-member-write phase of the object lifetime for each created object.">Получает или задает ссылку на обратный вызов, который вызывается средством записи XAML на этапе "запись перед членом" времени существования объекта для каждого созданного объекта.</summary>
      <returns vsli:raw="A callback that is invoked by the XAML writer at the pre-member-write phase of object lifetime.">Обратный вызов, вызываемый средством записи XAML на этапе "запись перед членом" времени существования объекта.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope">
      <summary vsli:raw="Gets or sets the XAML namescope to use for registering names from the XAML writer if &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;.">Получает или задает пространство имен XAML для регистрации имен из средства записи XAML, если свойство <see cref="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope" /> имеет значение <see langword="true" />.</summary>
      <returns vsli:raw="The XAML namescope to use for registering names. The default is &lt;see langword=&quot;null&quot; /&gt;.">Область имен XAML, которую следует использовать для регистрации имен. Значение по умолчанию — <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.IgnoreCanConvert">
      <summary vsli:raw="Gets or sets a value that specifies whether the XAML writer should ignore (not call) &lt;see cref=&quot;M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)&quot; /&gt; implementations on a &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; in type-converter situations.">Получает или задает значение, указывающее, должно ли средство записи XAML игнорировать (не вызывать) реализации метода <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" /> для объекта <see cref="T:System.ComponentModel.TypeConverter" /> в ситуациях, связанных с преобразованием типов.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the XAML writer ignores &lt;see cref=&quot;M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)&quot; /&gt; implementations; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если средство записи XAML игнорирует реализации метода <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.PreferUnconvertedDictionaryKeys">
      <summary vsli:raw="Gets or sets a value that determines whether to disable a default &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; feature that runs type conversion on the &lt;paramref name=&quot;K&quot; /&gt; component of a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; before writing the object graph representation.">Получает или задает значение, которое определяет, следует ли отключить функцию <see cref="T:System.Xaml.XamlObjectWriter" /> по умолчанию, выполняющую преобразование типа компонента <paramref name="K" /> объекта <see cref="T:System.Collections.Generic.Dictionary`2" /> перед записью представления графа объекта.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;K&quot; /&gt; type conversion for a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; object should be disabled. &lt;see langword=&quot;false&quot; /&gt; if performing &lt;paramref name=&quot;K&quot; /&gt; type conversion for a &lt;see cref=&quot;T:System.Collections.Generic.Dictionary`2&quot; /&gt; object applies. The default is &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если необходимо отключить преобразование типа <paramref name="K" /> для объекта <see cref="T:System.Collections.Generic.Dictionary`2" />. Значение <see langword="false" /> для применения преобразования типа <paramref name="K" /> для объекта <see cref="T:System.Collections.Generic.Dictionary`2" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope">
      <summary vsli:raw="Gets or sets a value that determines whether name registration should occur against the specified &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope&quot; /&gt;.">Получает или задает значение, определяющее, должна ли выполняться регистрация имен в соответствии с заданным свойством <see cref="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if name registration should occur against the &lt;see cref=&quot;P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; if name registration should occur into the parent XAML namescope. The default is &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если регистрация имен должна выполняться в соответствии с заданным свойством <see cref="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" />; значение <see langword="false" />, если регистрация имен должна выполняться в родительской области имен XAML. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.RootObjectInstance">
      <summary vsli:raw="Gets or sets a preexisting root object for &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; operations.">Получает или задает ранее созданный корневой объект для операций объекта <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
      <returns vsli:raw="A preexisting root object for &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; operations.">Ранее созданный корневой объект для операций объекта <see cref="T:System.Xaml.XamlObjectWriter" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.SkipDuplicatePropertyCheck">
      <summary vsli:raw="Gets or sets a value that determines whether the XAML writer omits to check for the code path that checks for duplicate properties.">Получает или задает значение, определяющее, пропускает ли средство записи XAML проверку пути кода, который проверяет наличие дублирующихся свойств.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the duplicate property check should be omitted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если проверку дублирующихся свойство нужно пропустить; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.SkipProvideValueOnRoot">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; should omit to call &lt;see langword=&quot;ProvideValue&quot; /&gt; on a markup extension, which is relevant when the markup extension represents the root of an object graph.">Получает или задает значение, указывающее, должен ли объект <see cref="T:System.Xaml.XamlObjectWriter" /> пропускать вызов <see langword="ProvideValue" /> для расширения разметки, что имеет значение, если расширение разметки представляет корень графа объекта.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xaml.XamlObjectWriter&quot; /&gt; should omit to call &lt;see langword=&quot;ProvideValue&quot; /&gt; on a markup extension; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если объект <see cref="T:System.Xaml.XamlObjectWriter" /> должен пропускать вызов <see langword="ProvideValue" /> для расширения разметки; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.SourceBamlUri">
      <summary vsli:raw="Used in the &lt;see langword=&quot;BeginInitHandler&quot; /&gt; in place of the actual &lt;see langword=&quot;BaseUri&quot; /&gt;.">Используется в <see langword="BeginInitHandler" /> вместо фактического <see langword="BaseUri" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Uri&quot; /&gt; to be used in place of the actual &lt;see langword=&quot;BaseUri&quot; /&gt;.">
        <see cref="T:System.Uri" /> для использования вместо фактического <see langword="BaseUri" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler">
      <summary vsli:raw="Gets or sets the handler to use when the object writer calls into a CLR-implemented &lt;see langword=&quot;SetValue&quot; /&gt; for dependency properties.">Получает или задает обработчик, используемый, когда средство записи объекта вызывает реализованный в среде CLR метод <see langword="SetValue" /> для свойств зависимостей.</summary>
      <returns vsli:raw="A handler implementation that handles this case.">Реализация обработчика, обрабатывающая такой случай.</returns>
    </member>
    <member name="T:System.Xaml.XamlParseException">
      <summary vsli:raw="The exception that is thrown when a XAML reader cannot process elements of the XAML reader source into a XAML node stream.">Исключение, которое вызывается, когда средству чтения XAML не удается преобразовать элементы источника средства чтения XAML в поток узлов XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlParseException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlParseException&quot; /&gt; class with a system-supplied message that describes the error.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlParseException" /> с системным сообщением, содержащим описание ошибки.</summary>
    </member>
    <member name="M:System.Xaml.XamlParseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlParseException&quot; /&gt; class with serialized data.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlParseException" /> с сериализованными данными.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Объект, содержащий сериализованные данные объекта.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.Xaml.XamlParseException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlParseException&quot; /&gt; class with a specified message that describes the error.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlParseException" /> с использованием заданного сообщения, содержащего описание ошибки.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Сообщение с описанием исключения. Код, вызывающий этот конструктор, должен обеспечить локализацию данной строки в соответствии с текущим языком и региональными параметрами системы.</param>
    </member>
    <member name="M:System.Xaml.XamlParseException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlParseException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlParseException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Сообщение с описанием исключения. Код, вызывающий этот конструктор, должен обеспечить локализацию данной строки в соответствии с текущим языком и региональными параметрами системы.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Исключение, которое является причиной текущего исключения. Если значение параметра <paramref name="innerException" /> не равно <see langword="null" />, текущее исключение сгенерировано в блоке <see langword="catch" />, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.Xaml.XamlReader">
      <summary vsli:raw="Provides base definitions for classes that consume XAML input and produce XAML node streams.">Предоставляет базовые определения для классов, получающих входные данные XAML и создающих потоки узлов XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlReader.#ctor">
      <summary vsli:raw="Initializes the &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; class.">Инициализирует класс <see cref="T:System.Xaml.XamlReader" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlReader.Close">
      <summary vsli:raw="Closes the XAML node stream.">Закрывает поток узлов XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlReader.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt;, and optionally, releases the managed resources.">Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Xaml.XamlReader" />, а при необходимости освобождает также управляемые ресурсы.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release the managed resources; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если необходимо освободить управляемые ресурсы; в противном случае — значение <see langword="false" />.</param>
    </member>
    <member name="P:System.Xaml.XamlReader.IsDisposed">
      <summary vsli:raw="Gets whether &lt;see cref=&quot;M:System.Xaml.XamlReader.Dispose(System.Boolean)&quot; /&gt; has been called.">Получает сведения о том, вызывался ли метод <see cref="M:System.Xaml.XamlReader.Dispose(System.Boolean)" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.Xaml.XamlReader.Dispose(System.Boolean)&quot; /&gt; has been called; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если метод <see cref="M:System.Xaml.XamlReader.Dispose(System.Boolean)" /> вызван; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.IsEof">
      <summary vsli:raw="When implemented in a derived class, gets a value that reports whether the reader position is at end-of-file.">При реализации в производном классе получает значение, показывающее, расположено ли средство чтения в конце файла.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the position is at the conceptual end-of-file of the XAML node stream; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если средство расположено в концептуальном конце файла потока узлов XAML; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.Member">
      <summary vsli:raw="When implemented in a derived class, gets the current member at the reader position, if the reader position is on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.StartMember&quot; /&gt;.">При реализации в производном классе получает текущий член в положении средства чтения, если эта положении находится в объекте <see cref="F:System.Xaml.XamlNodeType.StartMember" />.</summary>
      <returns vsli:raw="The current member; or &lt;see langword=&quot;null&quot; /&gt;, if the reader position is not on a member.">Текущий член или <see langword="null" />, если положение средства чтения не находится на члене.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.Namespace">
      <summary vsli:raw="When implemented in a derived class, gets the XAML namespace information from the current node.">При реализации в производном классе получает сведения о пространстве имен XAML из текущего узла.</summary>
      <returns vsli:raw="The XAML namespace information, if it is available; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Сведения о пространстве имен XAML, если они доступны; в противном случае — значение <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.NodeType">
      <summary vsli:raw="When implemented in a derived class, gets the type of the current node.">При реализации в производном классе получает тип текущего узла.</summary>
      <returns vsli:raw="A value of the &lt;see cref=&quot;T:System.Xaml.XamlNodeType&quot; /&gt; enumeration.">Значение перечисления <see cref="T:System.Xaml.XamlNodeType" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlReader.Read">
      <summary vsli:raw="When implemented in a derived class, provides the next XAML node from the source, if a node is available.">При реализации в производном классе предоставляет следующий узел XAML из источника, если он имеется.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a node is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если узел доступен; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlReader.ReadSubtree">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; that is based on the current &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt;, where the returned &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; is used to iterate through a subtree of the XAML node structure.">Возвращает объект <see cref="T:System.Xaml.XamlReader" />, основанный на текущем объекте <see cref="T:System.Xaml.XamlReader" />, где возвращенный объект <see cref="T:System.Xaml.XamlReader" /> используется для перебора поддерева структуры узлов XAML.</summary>
      <returns vsli:raw="A new XAML reader instance for the subtree.">Новый экземпляр средства чтения XAML для данного поддерева.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.SchemaContext">
      <summary vsli:raw="When implemented in a derived class, gets an object that provides XAML schema context information for the information set.">При реализации в производном классе получает объект, предоставляющий сведения о контексте схемы XAML для данного набора сведений.</summary>
      <returns vsli:raw="An object that provides XAML schema context information for the information set.">Объект, предоставляющий сведения о контексте схемы XAML для данного набора сведений.</returns>
    </member>
    <member name="M:System.Xaml.XamlReader.Skip">
      <summary vsli:raw="Skips the current node and advances the reader position to the next node.">Пропускает текущий узел и перемещает позицию средства чтения на следующий узел.</summary>
    </member>
    <member name="M:System.Xaml.XamlReader.System#IDisposable#Dispose">
      <summary vsli:raw="Releases all resources used by the current instance of the &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; class.">Освобождает все ресурсы, используемые текущим экземпляром класса <see cref="T:System.Xaml.XamlReader" />.</summary>
    </member>
    <member name="P:System.Xaml.XamlReader.Type">
      <summary vsli:raw="When implemented in a derived class, gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the current node.">При реализации в производном классе получает объект <see cref="T:System.Xaml.XamlType" /> текущего узла.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the current node; or &lt;see langword=&quot;null&quot; /&gt;, if the current reader position is not on an object.">Объект <see cref="T:System.Xaml.XamlType" /> текущего узла или значение <see langword="null" />, если текущая позиция средства чтения находится не в объекте.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.Value">
      <summary vsli:raw="When implemented in a derived class, gets the value of the current node.">При реализации в производном классе получает значение текущего узла.</summary>
      <returns vsli:raw="The value of the current node; or &lt;see langword=&quot;null&quot; /&gt;, if the current reader position is not on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.Value&quot; /&gt; node type.">Значение текущего узла или значение <see langword="null" />, если текущая позиция средства чтения находится не в типе узла <see cref="F:System.Xaml.XamlNodeType.Value" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlReaderSettings">
      <summary vsli:raw="Specifies processing rules or option settings for a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; implementation.">Задает правила обработки или значения параметров для реализации <see cref="T:System.Xaml.XamlReader" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlReaderSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlReaderSettings&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlReaderSettings" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlReaderSettings.#ctor(System.Xaml.XamlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlReaderSettings&quot; /&gt; class based on values in another &lt;see cref=&quot;T:System.Xaml.XamlReaderSettings&quot; /&gt; object.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlReaderSettings" /> на основе значений другого объекта <see cref="T:System.Xaml.XamlReaderSettings" />.</summary>
      <param name="settings" vsli:raw="An existing &lt;see cref=&quot;T:System.Xaml.XamlReaderSettings&quot; /&gt; object.">Существующий объект <see cref="T:System.Xaml.XamlReaderSettings" />.</param>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.AllowProtectedMembersOnRoot">
      <summary vsli:raw="Gets or sets a value that indicates whether the root object may include members that have a protected code access model when it reports the XAML type representation.">Получает или задает значение, показывающее, может ли корневой объект содержать члены с моделью доступа к защищенному коду при сообщении о представлении типа XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the root object may include members that have a protected code access model; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если корневой объект может содержать члены с моделью доступа к защищенному коду; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.BaseUri">
      <summary vsli:raw="Gets or sets the base URI that is used to resolve relative paths.">Получает или задает базовый универсальный код ресурса (URI), используемый для разрешения относительных путей.</summary>
      <returns vsli:raw="The base URI to use. The default is &lt;see langword=&quot;null&quot; /&gt;.">Используемый базовый универсальный код ресурса (URI). Значение по умолчанию — <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.IgnoreUidsOnPropertyElements">
      <summary vsli:raw="Gets or sets a value that specifies whether the XAML reader should ignore values for &lt;see langword=&quot;x:Uid&quot; /&gt; attributes that exist on property elements.">Получает или задает значение, указывающее, должно ли средство чтения XAML пропускать значения атрибутов <see langword="x:Uid" />, уже заданные для элементов свойств.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader should ignore values for &lt;see langword=&quot;x:Uid&quot; /&gt; attributes on property elements. &lt;see langword=&quot;false&quot; /&gt; if the reader should process &lt;see langword=&quot;x:Uid&quot; /&gt; attributes on property elements. The default is &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если средство чтения должно пропускать значения атрибутов <see langword="x:Uid" /> для свойств элементов. Значение <see langword="false" />, если средство чтения должно обрабатывать значения атрибутов <see langword="x:Uid" /> для свойств элементов. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.LocalAssembly">
      <summary vsli:raw="Gets or sets the object that represents the current local assembly for processing. This assembly information is used for calls to helper APIs such as &lt;see cref=&quot;M:System.Xaml.XamlType.GetAllMembers&quot; /&gt;.">Получает или задает объект, представляющий текущую локальную сборку для обработки. Эти сведения о сборке используются для вызовов вспомогательных программных интерфейсов приложений (API), таких как метод <see cref="M:System.Xaml.XamlType.GetAllMembers" />.</summary>
      <returns vsli:raw="A CLR reflection &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; object.">Объект отражения <see cref="T:System.Reflection.Assembly" /> среды CLR.</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.ProvideLineInfo">
      <summary vsli:raw="Gets or sets a value that specifies whether the reader can provide line number and position.">Получает или задает значение, указывающее, может ли средство чтения предоставлять номер строки и положение в ней.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader can provide line number and position information; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если средство чтения может предоставлять сведения о номере строки и положении в ней; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.ValuesMustBeString">
      <summary vsli:raw="Gets or sets a value that specifies whether the reader enforces that all &lt;see langword=&quot;Value&quot; /&gt; nodes are processed as a &lt;see langword=&quot;String&quot; /&gt; type.">Получает или задает значение, определяющее, действительно ли средство чтения принудительно указывает обрабатывать узлы <see langword="Value" /> как значения типа <see langword="String" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader enforces that only &lt;see langword=&quot;String&quot; /&gt; is contained in &lt;see langword=&quot;Value&quot; /&gt; nodes; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если средство чтения принудительно указывает, что в узлах <see langword="String" /> содержатся только значения типа <see langword="Value" />; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlSchemaContext">
      <summary vsli:raw="Defines a reusable context for interpreting or mapping XAML types, and the types in the assemblies that underlie them.">Определяет контекст с возможностью многократного использования для интерпретации или сопоставления типов XAML и типов в базовых сборках.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlSchemaContext" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; class, based on a set of reference assemblies.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlSchemaContext" /> на основе набора базовых сборок.</summary>
      <param name="referenceAssemblies" vsli:raw="An enumerable set of assembly information items. Each assembly information item is specified by an &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; value.">Перечисляемый набор элементов сведений о сборках. Каждый элемент сведений о сборках определяется значением <see cref="T:System.Reflection.Assembly" />.</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Xaml.XamlSchemaContextSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; class, based on a set of reference assemblies and a settings object.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlSchemaContext" /> на основе набора базовых сборок и объекта параметров.</summary>
      <param name="referenceAssemblies" vsli:raw="An enumerable set of assembly information. Each assembly information item is specified by an &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; value.">Перечисляемый набор сведений о сборках. Каждый элемент сведений о сборках определяется значением <see cref="T:System.Reflection.Assembly" />.</param>
      <param name="settings" vsli:raw="The settings object to use to construct the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt;.">Объект параметров, используемый для создания объекта <see cref="T:System.Xaml.XamlSchemaContext" />.</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.#ctor(System.Xaml.XamlSchemaContextSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; class, based on a settings object.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlSchemaContext" /> на основе объекта параметров.</summary>
      <param name="settings" vsli:raw="The settings object to use to construct the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt;.">Объект параметров, используемый для создания объекта <see cref="T:System.Xaml.XamlSchemaContext" />.</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.Finalize">
      <summary vsli:raw="Provides a nonstandard &lt;see langword=&quot;Finalize&quot; /&gt; implementation that does not invoke &lt;see langword=&quot;Dispose&quot; /&gt;.">Предоставляет нестандартную реализацию метода <see langword="Finalize" />, которая не вызывает метод <see langword="Dispose" />.</summary>
    </member>
    <member name="P:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces">
      <summary vsli:raw="Gets a value that specifies whether a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup API.">Получает значение, указывающее, использует ли схема XAML и ее контекст полные имена сборок в значениях, возвращаемых API поиска.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup APIs; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если схема XAML и ее контекст используют полные имена сборок в значениях, возвращаемых API поиска; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces">
      <summary vsli:raw="Searches the assemblies that are held by this &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; and returns a set of namespaces.">Производит поиск в сборках, содержащихся в этом объекте <see cref="T:System.Xaml.XamlSchemaContext" />, и возвращает набор пространств имен.</summary>
      <returns vsli:raw="An enumerable set of namespace identifiers. These identifiers are provided as strings.">Перечислимый набор идентификаторов пространств имен. Эти идентификаторы предоставляются в виде строк.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetAllXamlTypes(System.String)">
      <summary vsli:raw="Searches the assemblies that are held by this &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; and returns a set of types from the specified XAML namespace.">Производит поиск в сборках, содержащихся в этом объекте <see cref="T:System.Xaml.XamlSchemaContext" />, и возвращает набор типов из указанного пространства имен XAML.</summary>
      <param name="xamlNamespace" vsli:raw="The XAML namespace to return types for.">Пространство имен XAML, для которого требуется вернуть типы.</param>
      <returns vsli:raw="An enumerable set of XAML types. Each XAML type in the set is represented by a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object.">Перечисляемый набор типов XAML. Каждый тип XAML в наборе представляется объектом <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)">
      <summary vsli:raw="Gets a string that is reported as the preferred prefix for consumers to use when they map the specified XAML namespace.">Получает строку, которая предоставляется как предпочтительный префикс для использования потребителями при сопоставлении указанного пространства имен XAML.</summary>
      <param name="xmlns" vsli:raw="The XAML namespace to get the preferred prefix for.">Пространство имен XAML, для которого требуется получить предпочтительный префикс.</param>
      <returns vsli:raw="A string that consumers should use when they map the specified XAML namespace for markup use.">Строка, которую потребители должны использовать при сопоставлении указанного пространства имен XAML для целей разметки.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlns&quot; /&gt; is null.">Параметр <paramref name="xmlns" /> имеет значение null.</exception>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetValueConverter``1(System.Type,System.Xaml.XamlType)">
      <summary vsli:raw="Returns a value converter that can convert to the requested &lt;paramref name=&quot;targetType&quot; /&gt;.">Возвращает преобразователь значений, который может производить преобразование в запрошенный тип <paramref name="targetType" />.</summary>
      <param name="converterType" vsli:raw="The converter implementation.">Реализация преобразователя.</param>
      <param name="targetType" vsli:raw="The desired destination type for the converter.">Требуемый тип назначения для преобразователя.</param>
      <typeparam name="TConverterBase" vsli:raw="The specific converter base class.">Базовый класс конкретного преобразователя.</typeparam>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with a constraint that matches the constraint that is put on the method call.">Объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением, соответствующим ограничению, наложенному при вызове метода.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; value that represents a directive, either for the XAML language or for a particular implementation.">Возвращает значение <see cref="T:System.Xaml.XamlDirective" />, представляющее директиву для языка XAML или для конкретной реализации.</summary>
      <param name="xamlNamespace" vsli:raw="The XAML namespace that contains the named directive.">Пространство имен XAML, содержащее именованную директиву.</param>
      <param name="name" vsli:raw="The name of the directive to obtain.">Имя получаемой директивы.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlDirective&quot; /&gt; object that represents the requested directive.">Объект <see cref="T:System.Xaml.XamlDirective" />, представляющий запрашиваемую директиву.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlNamespace&quot; /&gt; or &lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="xamlNamespace" /> или <paramref name="name" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that is based on a XAML namespace and a string for the type name. This signature can specify the type arguments for cases where the desired type is a generic type.">Возвращает тип <see cref="T:System.Xaml.XamlType" /> на основе пространства имен XAML и строки имени типа. Данная сигнатура может указывать аргументы типа в случаях, когда целевой тип является универсальным.</summary>
      <param name="xamlNamespace" vsli:raw="The XAML namespace that contains the desired type.">Пространство имен XAML, содержащее необходимый тип.</param>
      <param name="name" vsli:raw="The string name of the desired type.">Строковое представление имени требуемого типа.</param>
      <param name="typeArguments" vsli:raw="The initialization type arguments for a generic type.">Аргументы типа инициализации для универсального типа.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that matches the input criteria.">Объект <see cref="T:System.Xaml.XamlType" />, соответствующий входным критериям.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Type)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that is based on a CLR type identifier.">Возвращает тип <see cref="T:System.Xaml.XamlType" />, основанный на идентификаторе типа среды CLR.</summary>
      <param name="type" vsli:raw="The type to get a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for.">Тип, для которого требуется получить объект <see cref="T:System.Xaml.XamlType" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that matches the input &lt;paramref name=&quot;type&quot; /&gt;.">Тип <see cref="T:System.Xaml.XamlType" />, соответствующий входному параметру <paramref name="type" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="type" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Xaml.Schema.XamlTypeName)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that is based on a XAML system type name.">Возвращает объект <see cref="T:System.Xaml.XamlType" />, основанный на имени системного типа XAML.</summary>
      <param name="xamlTypeName" vsli:raw="The XAML type name to get a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for.">Имя типа XAML, для которого требуется получить объект <see cref="T:System.Xaml.XamlType" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that matches the input &lt;paramref name=&quot;xamlTypeName&quot; /&gt;.">Тип <see cref="T:System.Xaml.XamlType" />, соответствующий входному параметру <paramref name="xamlTypeName" />.</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="A component of &lt;paramref name=&quot;xamlTypeName&quot; /&gt; (&lt;see cref=&quot;P:System.Xaml.Schema.XamlTypeName.Name&quot; /&gt; or &lt;see cref=&quot;P:System.Xaml.Schema.XamlTypeName.Namespace&quot; /&gt;) is &lt;see langword=&quot;null&quot; /&gt;.">Компонент <paramref name="xamlTypeName" /> (<see cref="P:System.Xaml.Schema.XamlTypeName.Name" /> или <see cref="P:System.Xaml.Schema.XamlTypeName.Namespace" />) имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlTypeName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="xamlTypeName" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)">
      <summary vsli:raw="Called when operations use this schema context to resolve an assembly that is required in order to resolve the XAML namespaces that it contains.">Вызывается, когда операции используют этот контекст схемы для разрешения сборки, необходимой для разрешения содержащихся в ней пространств имен XAML.</summary>
      <param name="assemblyName" vsli:raw="The name of the assembly to load.">Имя загружаемой сборки.</param>
      <returns vsli:raw="The resolved assembly.">Разрешаемая сборка.</returns>
    </member>
    <member name="P:System.Xaml.XamlSchemaContext.ReferenceAssemblies">
      <summary vsli:raw="Gets an enumerable set of reference assemblies for the XAML schema context.">Возвращает перечисляемый набор базовых сборок для контекста схемы XAML.</summary>
      <returns vsli:raw="An enumerable set of reference assemblies for the schema context. Each assembly information item is specified by an &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; value.">Перечислимый набор базовых сборок для контекста схемы. Каждый элемент сведений о сборках определяется значением <see cref="T:System.Reflection.Assembly" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
      <summary vsli:raw="Gets a value that specifies whether a XAML schema and its context support markup extensions that have two constructors with the same arity (number of input parameters).">Получает значение, указывающее, поддерживают ли схема XAML и ее контекст расширения разметки, имеющие два конструктора с одинаковой арностью (количеством входных параметров).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the schema context permits markup extensions that have duplicate arity; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если контекст схемы допускает расширения разметки с дублирующей арностью; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
      <summary vsli:raw="Returns the success or failure of a request for a compatible XAML namespace. A successful request reports that XAML namespace as an out parameter.">Возвращает данные об успехе или неудаче запроса для совместимого пространства имен XAML. Успешный запрос сообщает пространство имен XAML в виде параметра вывода.</summary>
      <param name="xamlNamespace" vsli:raw="The &lt;see langword=&quot;xmlns&quot; /&gt; string for the XAML namespace to be checked for a compatible result.">Строка <see langword="xmlns" /> для пространства имен XAML, которое требуется проверить на совместимый результат.</param>
      <param name="compatibleNamespace" vsli:raw="When this method returns, the &lt;see langword=&quot;xmlns&quot; /&gt; string for a compatible XAML namespace request. This might be identical to &lt;paramref name=&quot;xamlNamespace&quot; /&gt; if the method returns &lt;see langword=&quot;false&quot; /&gt;.">При возвращении данного метода содержит строку <see langword="xmlns" /> для запроса совместимого пространства имен XAML. Если метод возвращает значение <see langword="false" />, эта строка может быть идентична строке <paramref name="xamlNamespace" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;compatibleNamespace&quot; /&gt; contains a usable result; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если параметр <paramref name="compatibleNamespace" /> содержит пригодный к использованию результат; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlNamespace&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="xamlNamespace" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="T:System.Xaml.XamlSchemaContextSettings">
      <summary vsli:raw="Provides optional settings for a &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt;.">Предоставляет необязательные параметры для объекта <see cref="T:System.Xaml.XamlSchemaContext" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaContextSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContextSettings&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlSchemaContextSettings" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaContextSettings.#ctor(System.Xaml.XamlSchemaContextSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaContextSettings&quot; /&gt; class by copying the values of an existing &lt;see cref=&quot;T:System.Xaml.XamlSchemaContextSettings&quot; /&gt; instance.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlSchemaContextSettings" />, копируя значения существующего экземпляра класса <see cref="T:System.Xaml.XamlSchemaContextSettings" />.</summary>
      <param name="settings" vsli:raw="An existing &lt;see cref=&quot;T:System.Xaml.XamlSchemaContextSettings&quot; /&gt;.">Существующий <see cref="T:System.Xaml.XamlSchemaContextSettings" />.</param>
    </member>
    <member name="P:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces">
      <summary vsli:raw="Gets or sets a value that specifies whether a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup API.">Получает или задает значение, указывающее, использует ли схема XAML и ее контекст полные имена сборок в значениях, возвращаемых API поиска.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup APIs; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если схема XAML и ее контекст используют полные имена сборок в значениях, возвращаемых API поиска; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity">
      <summary vsli:raw="Gets or sets a value that specifies whether a XAML schema context allows for markup extensions that have two constructors with the same arity (number of input parameters).">Получает или задает значение, указывающее, поддерживает ли контекст схемы XAML расширения разметки, имеющие два конструктора с одинаковой арностью (количеством входных параметров).</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the schema context allows for markup extensions that have duplicate arity; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если контекст схемы поддерживает расширения разметки с двойной арностью; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlSchemaException">
      <summary vsli:raw="The exception that is thrown when a binding system or another schema representation system for XAML reports an exception to the schema context.">Исключение, возникающее, когда система привязки или другая система представления схемы для XAML сообщает об исключении контексту схемы.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaException&quot; /&gt; class with a system-supplied message that describes the error.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlSchemaException" /> с системным сообщением, содержащим описание ошибки.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaException&quot; /&gt; class with serialized data.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlSchemaException" /> с сериализованными данными.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Объект, содержащий сериализованные данные объекта.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaException&quot; /&gt; class with a specified message that describes the error.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlSchemaException" /> с использованием заданного сообщения, содержащего описание ошибки.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Сообщение с описанием исключения. Код, вызывающий этот конструктор, должен обеспечить локализацию данной строки в соответствии с текущим языком и региональными параметрами системы.</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlSchemaException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlSchemaException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Сообщение с описанием исключения. Код, вызывающий этот конструктор, должен обеспечить локализацию данной строки в соответствии с текущим языком и региональными параметрами системы.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Исключение, которое является причиной текущего исключения. Если значение параметра <paramref name="innerException" /> не равно <see langword="null" />, текущее исключение сгенерировано в блоке <see langword="catch" />, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.Xaml.XamlServices">
      <summary vsli:raw="Provides higher-level services (static methods) for the common XAML tasks of reading XAML and writing an object graph; or reading an object graph and writing XAML file output for serialization purposes.">Предоставляет службы высокого уровня (статические методы) для распространенных при работе с XAML задач чтения XAML и записи графа объектов или чтения графа объектов и записи выходного файла XAML для целей сериализации.</summary>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.IO.Stream)">
      <summary vsli:raw="Loads a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; source for a XAML reader and writes its output as an object graph.">Загружает источник <see cref="T:System.IO.Stream" /> для средства чтения XAML и записывает его вывод в виде графа объекта.</summary>
      <param name="stream" vsli:raw="The stream to load as input.">Поток, загружаемый как входные данные.</param>
      <returns vsli:raw="The object graph that is written as output.">Граф объекта, который записывается как вывод.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="stream" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.IO.TextReader)">
      <summary vsli:raw="Creates a XAML reader from a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;, and returns an object graph.">Создает средство чтения XAML на основе <see cref="T:System.IO.TextReader" /> и возвращает граф объекта.</summary>
      <param name="textReader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; to use as the basis for the created &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Объект <see cref="T:System.IO.TextReader" /> для использования в качестве основы для созданного <see cref="T:System.Xml.XmlReader" />.</param>
      <returns vsli:raw="The object graph that is returned.">Возвращаемый граф объекта.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;textReader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="textReader" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.String)">
      <summary vsli:raw="Loads a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; source for a XAML reader and returns an object graph.">Загружает источник <see cref="T:System.IO.Stream" /> для средства чтения XAML и возвращает граф объекта.</summary>
      <param name="fileName" vsli:raw="The file name to load and use as source.">Имя файла для загрузки и использования в качестве источника.</param>
      <returns vsli:raw="The object graph that is returned.">Возвращаемый граф объекта.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">Входное значение <paramref name="fileName" /> равно <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.Xaml.XamlReader)">
      <summary vsli:raw="Loads a specific XAML reader implementation and returns an object graph.">Загружает конкретную реализацию средства чтения XAML и возвращает граф объектов.</summary>
      <param name="xamlReader" vsli:raw="The XAML reader implementation to use as the reader for this &lt;see langword=&quot;Load&quot; /&gt; operation.">Реализация средства чтения XAML, которую следует использовать в качестве средства чтения для этой операции <see langword="Load" />.</param>
      <returns vsli:raw="The object graph that is returned.">Возвращаемый граф объекта.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlReader&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">Входное значение <paramref name="xamlReader" /> равно <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.Xml.XmlReader)">
      <summary vsli:raw="Loads a specific XML reader implementation and returns an object graph.">Загружает конкретную реализацию средства чтения XML и возвращает граф объектов.</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; implementation to use as the reader for this &lt;see langword=&quot;Load&quot; /&gt; operation.">Реализация объекта <see cref="T:System.Xml.XmlReader" />, которую следует использовать в качестве средства чтения для этой операции <see langword="Load" />.</param>
      <returns vsli:raw="The output object graph.">Выходной граф объектов.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlReader&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">Входное значение <paramref name="xamlReader" /> равно <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Parse(System.String)">
      <summary vsli:raw="Reads XAML as string output and returns an object graph.">Считывает XAML в виде строковых выходных данных и возвращает граф объектов.</summary>
      <param name="xaml" vsli:raw="The XAML string input to parse.">Строка XAML, вводимая для синтаксического анализа.</param>
      <returns vsli:raw="The object graph that is returned.">Возвращаемый граф объекта.</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xaml&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">Входное значение <paramref name="xaml" /> равно <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.IO.Stream,System.Object)">
      <summary vsli:raw="Processes a provided object graph into a XAML node representation and then into an output stream for serialization.">Преобразует предоставленный граф объектов в представление узлов XAML, а затем в выходной поток для сериализации.</summary>
      <param name="stream" vsli:raw="The destination stream.">Конечный поток.</param>
      <param name="instance" vsli:raw="The root of the object graph to process.">Корень обрабатываемого графа объектов.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">Входное значение <paramref name="stream" /> равно <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.IO.TextWriter,System.Object)">
      <summary vsli:raw="Processes a provided object graph into a XAML node representation and then into an output that goes to the provided &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;.">Преобразует предоставленный граф объектов в представление узлов XAML, а затем в выходные данные, передаваемые предоставленному объекту <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; that writes the output.">Объект <see cref="T:System.IO.TextWriter" />, записывающий выходные данные.</param>
      <param name="instance" vsli:raw="The root of the object graph to process.">Корень обрабатываемого графа объектов.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;writer&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">Входное значение <paramref name="writer" /> равно <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.Object)">
      <summary vsli:raw="Processes a provided object tree into a XAML node representation, and returns a string representation of the output XAML.">Преобразует предоставленное дерево объектов в представление узлов XAML и возвращает строковое представление выходного кода XAML.</summary>
      <param name="instance" vsli:raw="The root of the object graph to process.">Корень обрабатываемого графа объектов.</param>
      <returns vsli:raw="The XAML markup output as a string.">Разметка XAML, выводимая в виде строки.</returns>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.String,System.Object)">
      <summary vsli:raw="Processes a provided object graph into a XAML node representation and then writes it to an output file at a provided location.">Преобразует предоставленный граф объектов в представление узлов XAML, а затем записывает его в выходной файл в указанном расположении.</summary>
      <param name="fileName" vsli:raw="The name and location of the file to write the output to.">Имя и расположение файла, в который записываются выходные данные.</param>
      <param name="instance" vsli:raw="The root of the object graph to process.">Корень обрабатываемого графа объектов.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; is an empty string.">Параметр <paramref name="fileName" /> равен пустой строке.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="fileName" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.Xaml.XamlWriter,System.Object)">
      <summary vsli:raw="Processes a provided object graph into a XAML node representation and then writes it to the provided XAML writer.">Преобразует предоставленный граф объектов в представление узлов XAML, а затем записывает его в предоставленное средство записи XAML.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; implementation to use.">Используемая реализация объекта <see cref="T:System.Xaml.XamlWriter" />.</param>
      <param name="instance" vsli:raw="The root of the object graph to process.">Корень обрабатываемого графа объектов.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;writer&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">Входное значение <paramref name="writer" /> равно <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Processes a provided object graph into a XAML node representation and then writes it to the provided &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Преобразует предоставленный граф объектов в представление узлов XAML, а затем записывает его в предоставленный объект <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; implementation to use.">Используемая реализация объекта <see cref="T:System.Xml.XmlWriter" />.</param>
      <param name="instance" vsli:raw="The root of the object graph to process.">Корень обрабатываемого графа объектов.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;writer&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">Входное значение <paramref name="writer" /> равно <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter)">
      <summary vsli:raw="Connects a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; and a &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; to use a common XAML node set intermediary. Potentially transforms the content, depending on the types of readers and writers that are provided.">Связывает объект <see cref="T:System.Xaml.XamlReader" /> с объектом <see cref="T:System.Xaml.XamlWriter" /> для использования общего промежуточного узла XAML. Может преобразовывать содержимое в зависимости от типов предоставленных средств чтения и средств записи.</summary>
      <param name="xamlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; implementation to use.">Используемая реализация объекта <see cref="T:System.Xaml.XamlReader" />.</param>
      <param name="xamlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; to use.">Используемый <see cref="T:System.Xaml.XamlWriter" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlReader&quot; /&gt; or &lt;paramref name=&quot;xamlWriter&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">Входные данные параметра <paramref name="xamlReader" /> или <paramref name="xamlWriter" /> представляют собой значение <see langword="null" />.</exception>
      <exception cref="T:System.Xaml.XamlException" vsli:raw="The XAML schema context does not match between the provided &lt;paramref name=&quot;xamlReader&quot; /&gt; and &lt;paramref name=&quot;xamlWriter&quot; /&gt;.">Контекст схемы XAML не находится между предоставленными <paramref name="xamlReader" /> и <paramref name="xamlWriter" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter,System.Boolean)">
      <summary vsli:raw="Connects a &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; and a &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; to use a common XAML node set intermediary. Potentially transforms the content, depending on the types of readers and writers that are provided. Provides a parameter for specifying whether to close the writer after the call is completed.">Связывает объект <see cref="T:System.Xaml.XamlReader" /> с объектом <see cref="T:System.Xaml.XamlWriter" /> для использования общего промежуточного узла XAML. Может преобразовывать содержимое в зависимости от типов предоставленных средств чтения и средств записи. Предоставляет параметр для указания, требуется ли после завершения вызова закрывать средство записи.</summary>
      <param name="xamlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlReader&quot; /&gt; implementation to use.">Используемая реализация объекта <see cref="T:System.Xaml.XamlReader" />.</param>
      <param name="xamlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; to use.">Используемый <see cref="T:System.Xaml.XamlWriter" />.</param>
      <param name="closeWriter" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to close the writer after the call is complete; &lt;see langword=&quot;false&quot; /&gt; to leave the writer active at the last written position.">Значение <see langword="true" />, чтобы закрыть средство записи после завершения вызова; значение <see langword="false" />, чтобы после записи последней позиции оставить средство записи открытым.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xamlReader&quot; /&gt; or &lt;paramref name=&quot;xamlWriter&quot; /&gt; input is &lt;see langword=&quot;null&quot; /&gt;.">Входные данные параметра <paramref name="xamlReader" /> или <paramref name="xamlWriter" /> представляют собой значение <see langword="null" />.</exception>
      <exception cref="T:System.Xaml.XamlException" vsli:raw="The XAML schema context does not match between the provided &lt;paramref name=&quot;xamlReader&quot; /&gt; and &lt;paramref name=&quot;xamlWriter&quot; /&gt;.">Контекст схемы XAML не находится между предоставленными <paramref name="xamlReader" /> и <paramref name="xamlWriter" />.</exception>
    </member>
    <member name="T:System.Xaml.XamlType">
      <summary vsli:raw="Reports information about XAML types as part of the overall XAML system that is implemented in .NET XAML Services.">Сообщает сведения о типах языка XAML в составе общей системы языка XAML, реализованной в службах XAML платформы .NET Framework.</summary>
    </member>
    <member name="M:System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; class based on a string name for the type.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlType" /> на основе строки имени для типа.</summary>
      <param name="typeName" vsli:raw="The name of the type to create.">Имя создаваемого типа.</param>
      <param name="typeArguments" vsli:raw="The type arguments for a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that represents a generic type. Can be (and often is) &lt;see langword=&quot;null&quot; /&gt;, which indicates that the represented type is not a generic type.">Аргументы типа для объекта <see cref="T:System.Xaml.XamlType" />, представляющего универсальный тип. Может (нередко) иметь значение <see langword="null" />, указывающее, что представленный тип не является универсальным.</param>
      <param name="schemaContext" vsli:raw="XAML schema context for XAML readers and XAML writers.">Контекст схемы XAML для средств чтения и записи XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or more of &lt;paramref name=&quot;typeName&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; are &lt;see langword=&quot;null&quot; /&gt;.">Одно или несколько значений <paramref name="typeName" /> или <paramref name="schemaContext" /> равны <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; class based on the XAML namespace and a string name for the type. This constructor is exclusively for analysis and XAML-node recording of type usages that are known to not have backing in the supporting type system and XAML schema context.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlType" /> на основе пространства имен XAML и строки имени для типа. Этот конструктор предназначен исключительно для анализа и записи в узлы XAML использований типов, о которых известно, что они не зарезервированы в базовой системе типов и контексте схемы XAML.</summary>
      <param name="unknownTypeNamespace" vsli:raw="The XAML namespace for the type, as a string.">Пространство имен XAML для типа в виде строки.</param>
      <param name="unknownTypeName" vsli:raw="The name of the type in the provided &lt;paramref name=&quot;unknownTypeNamespace&quot; /&gt; XAML namespace.">Имя типа в предоставленном пространстве имен XAML <paramref name="unknownTypeNamespace" />.</param>
      <param name="typeArguments" vsli:raw="The type arguments for a &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; that represents a generic type. Can be (and often is) &lt;see langword=&quot;null&quot; /&gt;, which indicates that the represented type is not a generic type.">Аргументы типа для объекта <see cref="T:System.Xaml.XamlType" />, представляющего универсальный тип. Может (нередко) иметь значение <see langword="null" />, указывающее, что представленный тип не является универсальным.</param>
      <param name="schemaContext" vsli:raw="XAML schema context for XAML readers or XAML writers.">Контекст схемы XAML для средств чтения и записи XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or more of &lt;paramref name=&quot;unknownTypeNamespace&quot; /&gt;, &lt;paramref name=&quot;unknownTypeName&quot; /&gt;, or &lt;paramref name=&quot;schemaContext&quot; /&gt; are &lt;see langword=&quot;null&quot; /&gt;.">Одно или несколько значений <paramref name="unknownTypeNamespace" />, <paramref name="unknownTypeName" /> или <paramref name="schemaContext" /> равны <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; class based on the underlying CLR type information.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlType" /> на основе сведений о базовом типе среды CLR.</summary>
      <param name="underlyingType" vsli:raw="The underlying CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; for the XAML type to construct.">Базовый тип среды CLR <see cref="T:System.Type" /> для создаваемого типа XAML.</param>
      <param name="schemaContext" vsli:raw="XAML schema context for XAML readers or XAML writers.">Контекст схемы XAML для средств чтения и записи XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or more of &lt;paramref name=&quot;underlyingType&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; are &lt;see langword=&quot;null&quot; /&gt;.">Одно или несколько значений <paramref name="underlyingType" /> или <paramref name="schemaContext" /> равны <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; class based on underlying type information and a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; implementation.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlType" /> на основе сведений о базовом типе и реализации <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</summary>
      <param name="underlyingType" vsli:raw="The underlying type for the XAML type to construct.">Базовый тип для создаваемого типа языка XAML.</param>
      <param name="schemaContext" vsli:raw="XAML schema context for the XAML reader.">Контекст схемы XAML для средства чтения XAML.</param>
      <param name="invoker" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; implementation that handles run-time reflection calls against the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Реализация <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />, которая обрабатывает вызовы отражения во время выполнения, адресованные объекту <see cref="T:System.Xaml.XamlType" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or more of &lt;paramref name=&quot;underlyingType&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; are &lt;see langword=&quot;null&quot; /&gt;.">Одно или несколько значений <paramref name="underlyingType" /> или <paramref name="schemaContext" /> равны <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlType.AllowedContentTypes">
      <summary vsli:raw="Gets a read-only collection of the types that are usable as the &lt;see cref=&quot;P:System.Xaml.XamlType.ContentProperty&quot; /&gt; value for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Получает коллекцию только для чтения, содержащую типы, которые могут использоваться в качестве значения свойства <see cref="P:System.Xaml.XamlType.ContentProperty" /> для этого класса <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A read-only collection of possible content types.">Доступная только для чтения коллекция возможных типов содержимого.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.BaseType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the immediate base type of this XAML type. Determination of this value is based on the underlying type of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; and schema context.">Получает тип <see cref="T:System.Xaml.XamlType" /> для непосредственного базового типа данного типа XAML. Определение этого значения основано на базовом типе данного типа <see cref="T:System.Xaml.XamlType" /> и контексте схемы.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the immediate base type of this XAML type.">Тип <see cref="T:System.Xaml.XamlType" /> для непосредственного базового типа данного типа XAML.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)">
      <summary vsli:raw="Returns a value that indicates whether an instance of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; has the specified &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; in its list of assignable types.">Возвращает значение, указывающее, содержит ли экземпляр данного типа <see cref="T:System.Xaml.XamlType" /> заданный тип <see cref="T:System.Xaml.XamlType" /> в своем списке присваиваемых типов.</summary>
      <param name="xamlType" vsli:raw="The type to check against the current &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; .">Тип, который надо сравнить с текущим типом <see cref="T:System.Xaml.XamlType" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;xamlType&quot; /&gt; is in the assignable types list; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если тип <paramref name="xamlType" /> содержится в списке присваиваемых типов; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ConstructionRequiresArguments">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; must have arguments (generic constraints through &lt;see langword=&quot;x:TypeArguments&quot; /&gt;, initialization text, or other XAML techniques) to construct a valid instance of the type.">Получает значение, указывающее, должен ли данный тип <see cref="T:System.Xaml.XamlType" /> иметь аргументы (универсальные ограничения с использованием <see langword="x:TypeArguments" />, текста инициализации или других технологии языка XAML) для создания допустимого экземпляра этого типа.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if construction of an instance requires some argument value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если для создания экземпляра требуется некоторое значение аргумента; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ContentProperty">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; information for the content property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Получает сведения <see cref="T:System.Xaml.XamlMember" /> для свойства содержимого данного типа <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="&lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; information for the content property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;. May be &lt;see langword=&quot;null&quot; /&gt; if no content property exists.">Сведения <see cref="T:System.Xaml.XamlMember" /> для свойства содержимого данного типа <see cref="T:System.Xaml.XamlType" />. Может принимать значение <see langword="null" />, если свойство содержимого отсутствует.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ContentWrappers">
      <summary vsli:raw="Gets the types that are used to wrap content for a content property when it is not a strict type match, such as strings in a strongly typed &lt;see langword=&quot;Collection&amp;lt;T&amp;gt;&quot; /&gt;.">Получает типы, используемые для создания оболочки свойства содержимого, если оно не удовлетворяет требованию строгого соответствия типов, например строки в строго типизированной коллекции <see langword="Collection&lt;T&gt;" />.</summary>
      <returns vsli:raw="A read-only collection of possible content wrapper types; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Доступная только для чтения коллекция возможных типов оболочки содержимого или значение <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.DeferringLoader">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; that represents the deferred loading conversion behavior for this type.">Получает объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, представляющий поведение преобразования отложенной загрузки для этого типа.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.Xaml.XamlDeferringLoader&quot; /&gt; constraint that represents the deferred loading behavior for this type.">Объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.Xaml.XamlDeferringLoader" />, представляющим поведение отложенной загрузки для данного типа.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.Equals(System.Object)">
      <summary vsli:raw="Indicates whether the current object is equal to another object.">Позволяет определить, равен ли текущий объект другому объекту.</summary>
      <param name="obj" vsli:raw="The object to compare with this object.">Объект, который требуется сравнить с данным объектом.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current object is equal to the &lt;paramref name=&quot;obj&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если текущий объект равен параметру <paramref name="obj" />, в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.Equals(System.Xaml.XamlType)">
      <summary vsli:raw="Indicates whether the current object is equal to another object of the same type.">Указывает, равен ли текущий объект другому объекту того же типа.</summary>
      <param name="other" vsli:raw="An object to compare with this object.">Объект, который требуется сравнить с данным объектом.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current object is equal to the &lt;paramref name=&quot;other&quot; /&gt; parameter; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если текущий объект равен параметру <paramref name="other" />, в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetAliasedProperty(System.Xaml.XamlDirective)">
      <summary vsli:raw="Returns the XAML member that is aliased to a XAML directive by this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Возвращает элемент XAML, который связан псевдонимом с директивой XAML посредством данного типа <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="directive" vsli:raw="The directive for which to find the aliased member.">Директива, для которой требуется найти член с псевдонимом.</param>
      <returns vsli:raw="The aliased member, if found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Член с псевдонимом, если он найден; в противном случае — значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetAllAttachableMembers">
      <summary vsli:raw="Returns a collection that contains all the attachable properties that are exposed by this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Возвращает коллекцию, содержащую все присоединяемые свойства, предоставляемые этим классом <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A collection that contains zero or more &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; values.">Коллекция, содержащая ноль или более значений <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetAllMembers">
      <summary vsli:raw="Returns a collection that contains all the members that are exposed by this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Возвращает коллекцию, содержащую все члены, предоставляемые данным объектом <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A collection that contains zero or more &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; values.">Коллекция, содержащая ноль или более значений <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetAttachableMember(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; representing a specific named attachable member of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Возвращает элемент <see cref="T:System.Xaml.XamlMember" />, который представляет определенный именованный присоединяемый элемент <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="name" vsli:raw="The name of the attachable member to get, in &lt;c&gt;ownerTypeName.MemberName&lt;/c&gt; form.">Имя присоединяемого элемента в следующем формате: <c>ownerTypeName.MemberName</c>.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; object for the requested attachable member; otherwise, &lt;see langword=&quot;null&quot; /&gt;, if no attachable member by that name exists.">Объект <see cref="T:System.Xaml.XamlMember" /> для запрошенного присоединяемого элемента или значение <see langword="null" />, если присоединяемого элемента с таким именем не существует.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetHashCode">
      <summary vsli:raw="Returns the hash code for this object.">Возвращает хэш-код для этого объекта.</summary>
      <returns vsli:raw="An integer hash code.">Целочисленный хэш-код.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetMember(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; for a specific named member from this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Возвращает член <see cref="T:System.Xaml.XamlMember" /> для определенного именованного члена из данного типа <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="name" vsli:raw="The name of the member to get (as a string).">Имя (в виде строки) члена, который требуется получить.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; information for the member, if such a member was found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Сведения <see cref="T:System.Xaml.XamlMember" /> для члена, если он найден; в противном случае — значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetPositionalParameters(System.Int32)">
      <summary vsli:raw="For markup extension types, returns the types of the positional parameters that are supported in a specific markup extension usage for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Для типов расширения разметки возвращает типы позиционных параметров, поддерживаемых в конкретном употреблении расширения разметки для данного типа <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="parameterCount" vsli:raw="The count (arity) of the particular syntax or constructor mode that you want information about.">Количество (арность) определенного режима синтаксиса или конструктора, о котором требуется получить сведения.</param>
      <returns vsli:raw="A list of &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; values, where each &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is the type for that position in the syntax. You must specify the types in the same order when you supply markup input for the markup extension.">Список значений <see cref="T:System.Xaml.XamlType" />, где каждый объект <see cref="T:System.Xaml.XamlType" /> является типом для этой позиции в синтаксисе. При передаче входных данных разметки в расширение разметки необходимо задавать типы в том же порядке.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetXamlNamespaces">
      <summary vsli:raw="Returns a list of string identifiers for XAML namespaces that the type is included in.">Возвращает список строковых идентификаторов для пространств имен языка XAML, в которые входит этот тип.</summary>
      <returns vsli:raw="A list of string values, where each string is the URI identifier for a XAML namespace.">Список строковых значений, в котором каждая строка является URI-идентификатором для пространства имен языка XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.Invoker">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; implementation that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Получает реализацию объекта <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />, связанную с данным типом <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; implementation that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Реализация объекта <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />, связанная с данным типом <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsAmbient">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents an ambient type, as per the XAML definition.">Получает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> внешний тип в соответствии с определением языка XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents an ambient type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет внешний тип; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsArray">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents an array.">Получает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> массив.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents an array; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет массив; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsCollection">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a collection.">Получает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> коллекцию.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет коллекцию; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsConstructible">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a constructible type, as per the XAML definition.">Получает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> конструируемый тип в соответствии с определением языка XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a constructible type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет конструируемый тип; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsDictionary">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a dictionary, as per the XAML definition.">Получает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> словарь в соответствии с определением языка XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет словарь; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsGeneric">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a generic type.">Получает значение, указывающее, представляет ли этот данный тип <see cref="T:System.Xaml.XamlType" /> универсальный тип.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a generic type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет универсальный тип; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsMarkupExtension">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a markup extension.">Получает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> расширение разметки.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a markup extension; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если этот класс <see cref="T:System.Xaml.XamlType" /> представляет расширение разметки; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsNameScope">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a XAML namescope, as per the XAML definition.">Получает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> область имен XAML в соответствии с определением языка XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a XAML namescope; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет область имен XAML; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsNameValid">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is initialized by using a valid &lt;see langword=&quot;xamlName&quot; /&gt; string as its &lt;see cref=&quot;P:System.Xaml.XamlType.Name&quot; /&gt;.">Получает значение, указывающее, инициализирован ли данный тип <see cref="T:System.Xaml.XamlType" /> с использованием допустимой строки <see langword="xamlName" /> в качестве его свойства <see cref="P:System.Xaml.XamlType.Name" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is initialized by using a valid &lt;see langword=&quot;xamlName&quot; /&gt; string; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> инициализирован с использованием допустимой строки <see langword="xamlName" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsNullable">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a nullable type, as per the XAML definition.">Получает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> тип, допускающий значение null, в соответствии с определением языка XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a nullable type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет тип, допускающий значение null; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsPublic">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a public type in the relevant type system.">Получает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> открытый тип в соответствующей системе типов.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a public type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет открытый тип; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsUnknown">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a type that cannot be resolved in the underlying type system.">Получает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> тип, который не может быть разрешен в базовой системе типов.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents an unresolvable type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет неразрешимый тип; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsUsableDuringInitialization">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is built top-down during XAML initialization.">Получает значение, которое показывает, выполняется ли построение данного типа <see cref="T:System.Xaml.XamlType" /> сверху вниз во время инициализации XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is built top-down during XAML initialization; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если этот класс <see cref="T:System.Xaml.XamlType" /> строится сверху вниз в ходе инициализации XAML; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsWhitespaceSignificantCollection">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a whitespace significant collection, as per the XML definition.">Получает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> коллекцию значащих символов пробелов в соответствии с определением XML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a whitespace significant collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если этот тип <see cref="T:System.Xaml.XamlType" /> представляет коллекцию значащих символов пробелов; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsXData">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents XML &lt;see langword=&quot;XDATA&quot; /&gt;, as per the XAML definition.">Получает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> XML-<see langword="XDATA" /> в соответствии с определением XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents &lt;see langword=&quot;XDATA&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет <see langword="XDATA" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ItemType">
      <summary vsli:raw="Gets a value that provides the type information for the &lt;see langword=&quot;Items&quot; /&gt; property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Получает значение, предоставляющее сведения о типе для свойства <see langword="Items" /> данного типа <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object for the type of the items in the collection; otherwise, &lt;see langword=&quot;null&quot; /&gt;, if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; does not represent a collection.">Объект <see cref="T:System.Xaml.XamlType" /> для типа элементов в коллекции или значение <see langword="null" />, если данный тип <see cref="T:System.Xaml.XamlType" /> не представляет коллекцию.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.KeyType">
      <summary vsli:raw="Gets a value that provides the type information for the key property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;, if the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a dictionary.">Получает значение, предоставляющее сведения о типе для свойства ключа данного типа <see cref="T:System.Xaml.XamlType" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет словарь.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object for the type of the key for dictionary usage, otherwise, &lt;see langword=&quot;null&quot; /&gt;, if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; does not represent a dictionary.">Объект <see cref="T:System.Xaml.XamlType" /> для типа ключа для использования словаря или значение <see langword="null" />, если данный тип <see cref="T:System.Xaml.XamlType" /> не представляет словарь.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)">
      <summary vsli:raw="Returns the XAML member that is aliased to a XAML directive by this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Возвращает элемент XAML, который связан псевдонимом с директивой XAML посредством данного типа <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="directive" vsli:raw="The directive for which to find the aliased member.">Директива, для которой требуется найти член с псевдонимом.</param>
      <returns vsli:raw="The aliased member, if found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Член с псевдонимом, если он найден; в противном случае — значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAllAttachableMembers">
      <summary vsli:raw="Returns an enumerable set that contains all attachable properties that are exposed by this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Возвращает перечисляемый набор, содержащий все присоединяемые свойства, которые предоставляются данным классом <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="An enumerable set that contains zero or more &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; values; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Перечисляемый набор, содержащий ноль или более значений <see cref="T:System.Xaml.XamlMember" />, или значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAllMembers">
      <summary vsli:raw="Returns an enumerable set that contains all the members that are exposed by this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Возвращает перечисляемый набор, содержащий все члены, предоставляемые данным классом <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="An enumerable set that contains zero or more &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; values.">Перечисляемый набор, содержащий ноль или более значений <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAllowedContentTypes">
      <summary vsli:raw="Returns a list of the types that are usable as the &lt;see cref=&quot;P:System.Xaml.XamlType.ContentProperty&quot; /&gt; value for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Возвращает список типов, которые могут использоваться в качестве значения <see cref="P:System.Xaml.XamlType.ContentProperty" /> для данного типа <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A list of possible content types.">Список возможных типов содержимого.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAttachableMember(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; for a specific named attachable from this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Возвращает <see cref="T:System.Xaml.XamlMember" /> для конкретного именованного присоединяемого элемента из этого <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="name" vsli:raw="The name of the attachable member to get, in &lt;c&gt;ownerTypeName.MemberName&lt;/c&gt; form.">Имя присоединяемого элемента в следующем формате: <c>ownerTypeName.MemberName</c>.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; object for the requested attachable member; otherwise, &lt;see langword=&quot;null&quot; /&gt;, if no attachable member by that name exists.">Объект <see cref="T:System.Xaml.XamlMember" /> для запрошенного присоединяемого элемента или значение <see langword="null" />, если присоединяемого элемента с таким именем не существует.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupBaseType">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the immediate base type of this XAML type. Determination of this value is based on the underlying type of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; and schema context.">Возвращает объект <see cref="T:System.Xaml.XamlType" /> для непосредственного базового типа данного типа XAML. Определение этого значения основано на базовом типе данного типа <see cref="T:System.Xaml.XamlType" /> и контексте схемы.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; for the immediate base type of this XAML type.">Тип <see cref="T:System.Xaml.XamlType" /> для непосредственного базового типа данного типа XAML.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupCollectionKind">
      <summary vsli:raw="Returns a value of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlCollectionKind&quot; /&gt; enumeration that declares which specific collection type this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; uses.">Возвращает значение перечисления <see cref="T:System.Xaml.Schema.XamlCollectionKind" />, объявляющее, какой конкретный тип коллекции используется этим типом <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A value of the &lt;see cref=&quot;T:System.Xaml.Schema.XamlCollectionKind&quot; /&gt; enumeration.">Значение перечисления <see cref="T:System.Xaml.Schema.XamlCollectionKind" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupConstructionRequiresArguments">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; must have arguments (generic constraints through &lt;see langword=&quot;x:TypeArguments&quot; /&gt;, initialization text, or other XAML techniques) to construct a valid instance of the type.">Возвращает значение, указывающее, должен ли этот класс <see cref="T:System.Xaml.XamlType" /> иметь аргументы (универсальные ограничения с помощью <see langword="x:TypeArguments" />, текст инициализации или другие технологии языка XAML) для создания допустимого экземпляра этого типа.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if construction of an instance requires some argument value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если для создания экземпляра требуется некоторое значение аргумента; в противном случае — значение false.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupContentProperty">
      <summary vsli:raw="Returns &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; information for the content property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Возвращает сведения <see cref="T:System.Xaml.XamlMember" /> для свойства содержимого этого класса <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="&lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; information for the content property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;. May be &lt;see langword=&quot;null&quot; /&gt;.">Сведения <see cref="T:System.Xaml.XamlMember" /> для свойства содержимого данного типа <see cref="T:System.Xaml.XamlType" />. Может иметь значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupContentWrappers">
      <summary vsli:raw="Gets a list of &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; values that represent the content wrappers for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Получает список значений <see cref="T:System.Xaml.XamlType" />, представляющих оболочки содержимого для этого класса <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A list of &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; values that represent the content wrappers for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Список значений <see cref="T:System.Xaml.XamlType" />, представляющих оболочки содержимого для этого класса <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupCustomAttributeProvider">
      <summary vsli:raw="When implemented in a derived class, returns an &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; implementation.">При реализации в производном классе возвращает реализацию класса <see cref="T:System.Reflection.ICustomAttributeProvider" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Reflection.ICustomAttributeProvider&quot; /&gt; implementation.">Реализация <see cref="T:System.Reflection.ICustomAttributeProvider" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupDeferringLoader">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; object, which is used for deferred loading of XAML-declared objects.">Возвращает объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, используемый для отложенной загрузки объектов, объявленных в языке XAML.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; that has a &lt;see cref=&quot;T:System.Xaml.XamlDeferringLoader&quot; /&gt; constraint on the generic.">Объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.Xaml.XamlDeferringLoader" /> на универсальный класс.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupInvoker">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; that is associated with this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Возвращает объект <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />, связанный с данным типом <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.Schema.XamlTypeInvoker&quot; /&gt; information for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Сведения <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> для данного типа <see cref="T:System.Xaml.XamlType" />; в противном случае — значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsAmbient">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents an ambient type, as per the XAML definition.">Возвращает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> внешний тип в соответствии с определением языка XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents an ambient type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет внешний тип; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsConstructible">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a constructible type, as per the XAML definition.">Возвращает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> конструируемый тип в соответствии с определением языка XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a constructible type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет конструируемый тип; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsMarkupExtension">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a markup extension.">Возвращает значение, указывающее, представляет ли этот класс <see cref="T:System.Xaml.XamlType" /> расширение разметки.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a markup extension; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если этот класс <see cref="T:System.Xaml.XamlType" /> представляет расширение разметки; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsNameScope">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a XAML namescope, as per the XAML definition.">Возвращает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> область имен XAML в соответствии с определением языка XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a XAML namescope; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет область имен XAML; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsNullable">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a nullable type, as per the XAML definition.">Возвращает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> тип, допускающий значение null, в соответствии с определением языка XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a nullable type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет тип, допускающий значение null; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsPublic">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a public type in the relevant type system.">Возвращает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> открытый тип в соответствующей системе типов.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a public type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет открытый тип; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsUnknown">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a type that cannot be resolved in the underlying type system.">Возвращает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> тип, который не может быть разрешен в базовой системе типов.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a nonresolvable type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если этот тип <see cref="T:System.Xaml.XamlType" /> представляет неразрешимый тип; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a whitespace significant collection, as per the XML definition.">Возвращает значение, указывающее, представляет ли этот тип <see cref="T:System.Xaml.XamlType" /> коллекцию, в которой учитываются символы пробелов, в соответствии с определением XML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a white-space significant collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет коллекцию, в которой учитываются символы пробелов; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsXData">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents XML &lt;see langword=&quot;XDATA&quot; /&gt;, as per the XAML definition.">Возвращает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> XML-<see langword="XDATA" /> в соответствии с определением языка XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents &lt;see langword=&quot;XDATA&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет <see langword="XDATA" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupItemType">
      <summary vsli:raw="Returns a value that provides the type information for the &lt;see langword=&quot;Items&quot; /&gt; property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Возвращает значение, предоставляющее сведения о типе для свойства <see langword="Items" /> данного типа <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object for the type of the items in the collection; otherwise, &lt;see langword=&quot;null&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; does not represent a collection.">Объект <see cref="T:System.Xaml.XamlType" /> для типа членов в коллекции или значение <see langword="null" />, если данный тип <see cref="T:System.Xaml.XamlType" /> не представляет коллекцию.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupKeyType">
      <summary vsli:raw="Returns a value that provides the type information for the key property of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;, if the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a dictionary.">Возвращает значение, предоставляющее сведения о типе для свойства ключа этого класса <see cref="T:System.Xaml.XamlType" />, если этот класс <see cref="T:System.Xaml.XamlType" /> представляет словарь.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object for the type of the key for dictionary usage, or &lt;see langword=&quot;null&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; does not represent a dictionary.">Объект <see cref="T:System.Xaml.XamlType" /> для типа ключа для использования словаря или значение <see langword="null" />, если данный тип <see cref="T:System.Xaml.XamlType" /> не представляет словарь.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupMarkupExtensionReturnType">
      <summary vsli:raw="Returns a value that provides the type information for the returned &lt;see langword=&quot;ProvideValue&quot; /&gt; of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;, if it represents a markup extension.">Возвращает значение, предоставляющее сведения о типе для возвращенного <see langword="ProvideValue" /> данного типа <see cref="T:System.Xaml.XamlType" />, если он представляет расширение разметки.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object for the return type for markup extension usage; otherwise, &lt;see langword=&quot;null&quot; /&gt;, if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; does not represent a markup extension.">Объект <see cref="T:System.Xaml.XamlType" /> для возвращаемого типа для использования расширения разметки или значение <see langword="null" />, если данный тип <see cref="T:System.Xaml.XamlType" /> не представляет расширение разметки.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupMember(System.String,System.Boolean)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; for a specific named member from this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Возвращает член <see cref="T:System.Xaml.XamlMember" /> для определенного именованного члена из данного типа <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="name" vsli:raw="The name of the member to get (as a string).">Имя (в виде строки) члена, который требуется получить.</param>
      <param name="skipReadOnlyCheck" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to return a member even if that member has a &lt;see langword=&quot;true&quot; /&gt; value for &lt;see cref=&quot;P:System.Xaml.XamlMember.IsReadOnly&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; to not return a &lt;see cref=&quot;P:System.Xaml.XamlMember.IsReadOnly&quot; /&gt; member. The default is &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если необходимо возвратить член, даже если в этом члене задано значение <see langword="true" /> для свойства <see cref="P:System.Xaml.XamlMember.IsReadOnly" />. Значение <see langword="false" />, чтобы не возвращать член <see cref="P:System.Xaml.XamlMember.IsReadOnly" />. Значение по умолчанию — <see langword="false" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt; information for the member, if a member was found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Сведения <see cref="T:System.Xaml.XamlMember" /> для члена, если он найден; в противном случае — значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupPositionalParameters(System.Int32)">
      <summary vsli:raw="For markup extension types, returns the types of the positional parameters that are supported in a specific markup extension usage for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Для типов расширения разметки возвращает типы позиционных параметров, поддерживаемых в конкретном употреблении расширения разметки для данного типа <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="parameterCount" vsli:raw="The count (arity) of the particular syntax or constructor mode that you want information about.">Количество (арность) определенного режима синтаксиса или конструктора, о котором требуется получить сведения.</param>
      <returns vsli:raw="A list of &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; values where each such &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is the type for that position in the syntax. You must specify those types in the same order when supplying markup input for the markup extension.">Список значений <see cref="T:System.Xaml.XamlType" />, где каждый такой тип <see cref="T:System.Xaml.XamlType" /> является типом для этой позиции в синтаксисе. При передаче входных данных разметки в расширение разметки необходимо задавать эти типы в том же порядке.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupSetMarkupExtensionHandler">
      <summary vsli:raw="Returns a handler callback to use for the set operations of markup extensions.">Возвращает обратный вызов обработчика, который нужно использовать для операций установки расширений разметки.</summary>
      <returns vsli:raw="A handler callback to use for the set operations of markup extensions.">Обратный вызов обработчика, который нужно использовать для операций установки расширения разметки.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupSetTypeConverterHandler">
      <summary vsli:raw="Returns a handler to use for type converter setting cases.">Возвращает обработчик, используемый для вариантов установки преобразователя типов.</summary>
      <returns vsli:raw="A handler to use for type converter setting cases.">Обработчик, используемый для вариантов установки преобразователя типов.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupTrimSurroundingWhitespace">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; should be serialized using a mode that  trims surrounding whitespace.">Возвращает значение, указывающее, следует ли сериализовать данный <see cref="T:System.Xaml.XamlType" /> с использованием режима, удаляющего окружающие пробелы.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; should be serialized in a mode that trims surrounding whitespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> следует сериализовать в режиме, удаляющем окружающие пробелы; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupTypeConverter">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; that has a &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; constraint, which represents type-conversion behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Возвращает объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.ComponentModel.TypeConverter" />, представляющим поведение преобразования типов для значений данного типа <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; constraint that represents type-conversion behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.ComponentModel.TypeConverter" />, представляющий поведение преобразования типов для значений данного типа <see cref="T:System.Xaml.XamlType" />, или значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupUnderlyingType">
      <summary vsli:raw="Returns the CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; that underlies this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Возвращает среду CLR <see cref="T:System.Type" />, которая является базовой для типа <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="The CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; that underlies this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Среда CLR <see cref="T:System.Type" />, которая является базовой для типа <see cref="T:System.Xaml.XamlType" />, или значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupUsableDuringInitialization">
      <summary vsli:raw="Returns a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is built top-down during XAML initialization.">Возвращает значение, которое показывает, выполняется ли построение этого класса <see cref="T:System.Xaml.XamlType" /> сверху вниз при инициализации языка XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; is built top-down during XAML initialization; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если этот класс <see cref="T:System.Xaml.XamlType" /> строится сверху вниз в ходе инициализации XAML; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupValueSerializer">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; that has a &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; constraint, which represents value serialization behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Возвращает <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.Windows.Markup.ValueSerializer" />, представляющим поведение сериализации значений для значений данного типа <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; constraint that represents value serialization behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.Windows.Markup.ValueSerializer" />, представляющий поведение сериализации значений для значений данного типа <see cref="T:System.Xaml.XamlType" />, или значение <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.MarkupExtensionReturnType">
      <summary vsli:raw="Gets a value that provides the type information for the returned &lt;see langword=&quot;ProvideValue&quot; /&gt; of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;, if it represents a markup extension.">Получает значение, предоставляющее сведения о типе для возвращенного значения <see langword="ProvideValue" /> данного типа <see cref="T:System.Xaml.XamlType" />, если он представляет расширение разметки.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; object for the return type for markup extension usage; otherwise, &lt;see langword=&quot;null&quot; /&gt;, if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; does not represent a markup extension.">Объект <see cref="T:System.Xaml.XamlType" /> для возвращаемого типа для использования расширения разметки или значение <see langword="null" />, если данный тип <see cref="T:System.Xaml.XamlType" /> не представляет расширение разметки.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.Name">
      <summary vsli:raw="Gets the string name of the type that this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents.">Получает строковое имя типа, представляемого данным типом <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="The string name of this XAML type.">Строковое представление имени этого типа XAML.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; objects have the same value.">Определяет, совпадают ли значения двух указанных объектов <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="xamlType1" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlType" /> или <see langword="null" />.</param>
      <param name="xamlType2" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlType" /> или <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;xamlType1&quot; /&gt; is the same as the value of &lt;paramref name=&quot;xamlType2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если значение параметра <paramref name="xamlType1" /> совпадает со значением <paramref name="xamlType2" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)">
      <summary vsli:raw="Determines whether two specified &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; objects have different values.">Определяет, различаются ли значения двух указанных объектов <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="xamlType1" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlType" /> или <see langword="null" />.</param>
      <param name="xamlType2" vsli:raw="A &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Xaml.XamlType" /> или <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of &lt;paramref name=&quot;xamlType1&quot; /&gt; is different from the value of &lt;paramref name=&quot;xamlType2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если значение <paramref name="xamlType1" /> отличается от значения <paramref name="xamlType2" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.PreferredXamlNamespace">
      <summary vsli:raw="Gets the single XAML namespace that is the primary XAML namespace for this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Получает одно пространство имен XAML, являющееся первичным пространством имен XAML для данного типа <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="The identifier, as a string, of the primary XAML namespace for this XAML type.">Идентификатор первичного пространства имен XAML для данного типа XAML в виде строки.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.SchemaContext">
      <summary vsli:raw="Gets the active &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; for processing this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Получает активный контекст <see cref="T:System.Xaml.XamlSchemaContext" /> для обработки этого класса <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="The active &lt;see cref=&quot;T:System.Xaml.XamlSchemaContext&quot; /&gt; for processing this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Активный контекст <see cref="T:System.Xaml.XamlSchemaContext" /> для обработки этого класса <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.ToString">
      <summary vsli:raw="Returns a string representation of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Возвращает строковое представление данного объекта <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A string representation of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Строковое представление данного объекта <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.TrimSurroundingWhitespace">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; has whitespace handling behavior for serialization that trims the surrounding whitespace in its content.">Получает значение, указывающее, имеет ли данный тип <see cref="T:System.Xaml.XamlType" /> поведение обработки пробелов для сериализации, выполняющее удаление окружающих пробелов из его содержимого.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a type that uses whitespace trimming; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если этот класс <see cref="T:System.Xaml.XamlType" /> представляет тип, в котором используется удаление пробелов; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.TypeArguments">
      <summary vsli:raw="Gets a list of type arguments for cases where this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; represents a generic.">Получает список типов аргументов для случаев, в которых данный тип <see cref="T:System.Xaml.XamlType" /> представляет универсальный тип.</summary>
      <returns vsli:raw="A list of type argument types; otherwise, &lt;see langword=&quot;null&quot; /&gt;, if this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; does not represent a generic.">Список типов аргументов или значение <see langword="null" />, если данный тип <see cref="T:System.Xaml.XamlType" /> не представляет универсальный тип.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.TypeConverter">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; constraint that represents type conversion behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Получает объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.ComponentModel.TypeConverter" />, представляющий поведение преобразования типов для значений данного типа <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; constraint that represents type conversion behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.ComponentModel.TypeConverter" />, представляющий поведение преобразования типов для значений данного типа <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.UnderlyingType">
      <summary vsli:raw="Gets the CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; that underlies this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Получает среду CLR <see cref="T:System.Type" />, которая является базовой для типа <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="The CLR &lt;see cref=&quot;T:System.Type&quot; /&gt; that underlies this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Среда CLR <see cref="T:System.Type" />, являющаяся базовой для данного типа <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ValueSerializer">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; constraint that represents value serialization behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">Получает объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.Windows.Markup.ValueSerializer" />, представляющий поведение сериализации значений для значений данного типа <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Schema.XamlValueConverter`1&quot; /&gt; with &lt;see cref=&quot;T:System.Windows.Markup.ValueSerializer&quot; /&gt; constraint that represents value serialization behavior for values of this &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.Windows.Markup.ValueSerializer" />, представляющий поведение сериализации значений для значений данного типа <see cref="T:System.Xaml.XamlType" />, или значение <see langword="null" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlWriter">
      <summary vsli:raw="Provides default implementation and base class definitions for a XAML writer. This is not a working default XAML writer; you must either derive from &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; and implement its abstract members, or use an existing &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; derived class.">Предоставляет определения реализации по умолчанию и базового класса для средства записи XAML. Это средство записи не является рабочим средством записи XAML по умолчанию; необходимо наследовать классу <see cref="T:System.Xaml.XamlWriter" /> и реализовать все его абстрактные члены или использовать существующий производный класс <see cref="T:System.Xaml.XamlWriter" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlWriter" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.Close">
      <summary vsli:raw="Closes the XAML writer object.">Закрывает объект средства записи XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; and optionally releases the managed resources.">Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Xaml.XamlWriter" />, а при необходимости освобождает также управляемые ресурсы.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release the managed resources; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если необходимо освободить управляемые ресурсы; в противном случае — значение <see langword="false" />.</param>
    </member>
    <member name="P:System.Xaml.XamlWriter.IsDisposed">
      <summary vsli:raw="Gets whether &lt;see cref=&quot;M:System.Xaml.XamlWriter.Dispose(System.Boolean)&quot; /&gt; has been called.">Получает сведения о том, вызывался ли метод <see cref="M:System.Xaml.XamlWriter.Dispose(System.Boolean)" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.Xaml.XamlWriter.Dispose(System.Boolean)&quot; /&gt; has been called; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если метод <see cref="M:System.Xaml.XamlWriter.Dispose(System.Boolean)" /> вызван; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlWriter.SchemaContext">
      <summary vsli:raw="When implemented in a derived class, gets the active XAML schema context.">При реализации в производном классе получает активный контекст схемы XAML.</summary>
      <returns vsli:raw="The active XAML schema context.">Активный контекст схемы XAML.</returns>
    </member>
    <member name="M:System.Xaml.XamlWriter.System#IDisposable#Dispose">
      <summary vsli:raw="See &lt;see cref=&quot;M:System.IDisposable.Dispose&quot; /&gt;.">См. раздел <see cref="M:System.IDisposable.Dispose" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteEndMember">
      <summary vsli:raw="When implemented in a derived class, produces the representation of an end member node.">При реализации в производном классе создает представление узла конечного члена.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteEndObject">
      <summary vsli:raw="When implemented in a derived class, produces the representation of an end object node.">При реализации в производном классе создает представление узла конечного объекта.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteGetObject">
      <summary vsli:raw="When implemented in a derived class, produces an object for cases where the object is a default or implicit value of the property being set, instead of being specified as a discrete object value in the input XAML node set.">При реализации в производном классе создает объект для случаев, когда этот объект является значением по умолчанию или неявным значением устанавливаемого свойства, а не задается в виде определенного значения объекта во входном наборе узлов XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
      <summary vsli:raw="When implemented in a derived class, writes a XAML namespace declaration node.">При реализации в производном классе записывает узел объявления пространства имен XAML.</summary>
      <param name="namespaceDeclaration" vsli:raw="The namespace declaration to write.">Объявление пространства имен для записи.</param>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteNode(System.Xaml.XamlReader)">
      <summary vsli:raw="Performs switching based on node type from the XAML reader (&lt;see cref=&quot;P:System.Xaml.XamlReader.NodeType&quot; /&gt;) and calls the relevant &lt;see langword=&quot;Write&quot; /&gt; method for the writer implementation.">Производит переключение на основе типа узла от средства чтения XAML (<see cref="P:System.Xaml.XamlReader.NodeType" />) и вызывает соответствующий метод <see langword="Write" /> для реализации средства записи.</summary>
      <param name="reader" vsli:raw="The reader to use for node determination.">Средство чтения, используемое для определения узла.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;reader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="reader" /> — <see langword="null" />.</exception>
      <exception cref="T:System.NotImplementedException" vsli:raw="The default implementation encountered a &lt;see cref=&quot;T:System.Xaml.XamlNodeType&quot; /&gt; that is not in the default enumeration.">Реализация по умолчанию обнаружила <see cref="T:System.Xaml.XamlNodeType" />, который не входит в перечисление по умолчанию.</exception>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteStartMember(System.Xaml.XamlMember)">
      <summary vsli:raw="When implemented in a derived class, writes the representation of a start member node.">При реализации в производном классе записывает представление узла начального члена.</summary>
      <param name="xamlMember" vsli:raw="The member node to write.">Узел члена для записи.</param>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteStartObject(System.Xaml.XamlType)">
      <summary vsli:raw="When implemented in a derived class, writes the representation of a start object node.">При реализации в производном классе записывает представление узла начального объекта.</summary>
      <param name="type" vsli:raw="The XAML type of the object to write.">Тип XAML записываемого объекта.</param>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteValue(System.Object)">
      <summary vsli:raw="When implemented in a derived class, writes a value node.">При реализации в производном классе записывает узел значения.</summary>
      <param name="value" vsli:raw="The value to write.">Значение для записи.</param>
    </member>
    <member name="T:System.Xaml.XamlWriterSettings">
      <summary vsli:raw="Provides initialization settings for a &lt;see cref=&quot;T:System.Xaml.XamlWriter&quot; /&gt; implementation.">Предоставляет параметры инициализации для реализации класса <see cref="T:System.Xaml.XamlWriter" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriterSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlWriterSettings&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlWriterSettings" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriterSettings.#ctor(System.Xaml.XamlWriterSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlWriterSettings&quot; /&gt; class using another existing settings instance.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlWriterSettings" /> другим существующим экземпляром параметров.</summary>
      <param name="settings" vsli:raw="An existing &lt;see cref=&quot;T:System.Xaml.XamlWriterSettings&quot; /&gt; object.">Существующий объект <see cref="T:System.Xaml.XamlWriterSettings" />.</param>
    </member>
    <member name="T:System.Xaml.XamlXmlReader">
      <summary vsli:raw="Processes XAML markup from XML files by using an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; intermediary, and produces a XAML node stream.">Обрабатывает разметку XAML из XML-файлов, используя промежуточный объект <see cref="T:System.Xml.XmlReader" />, и создает поток узлов XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.Stream)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a stream.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlReader" /> на основе потока.</summary>
      <param name="stream" vsli:raw="The initial stream to load into the reader.">Начальный поток, загружаемый в средство чтения.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="stream" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a stream, and using a supplied XAML schema context.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlReader" /> на основе потока, используя предоставленный контекст схемы XAML.</summary>
      <param name="stream" vsli:raw="The initial stream to load into the reader.">Начальный поток, загружаемый в средство чтения.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">Контекст схемы XAML для обработки XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Параметр <paramref name="stream" /> или <paramref name="schemaContext" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a stream, with a supplied XAML schema context and XAML-specific settings.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlReader" /> на основе потока с предоставленным контекстом схемы XAML и специфичными для XAML параметрами.</summary>
      <param name="stream" vsli:raw="The initial stream to load into the reader.">Начальный поток, загружаемый в средство чтения.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">Контекст схемы XAML для обработки XAML.</param>
      <param name="settings" vsli:raw="The specific reader settings.">Параметры определенного средства чтения.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="stream" /> или <paramref name="schemaContext" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.Stream,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a stream, with XAML-specific settings.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlReader" /> на основе потока, используя параметры определенного средства чтения XAML.</summary>
      <param name="stream" vsli:raw="The initial stream to load into the reader.">Начальный поток, загружаемый в средство чтения.</param>
      <param name="settings" vsli:raw="The specific reader settings.">Параметры определенного средства чтения.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="stream" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.TextReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlReader" /> на основе объекта <see cref="T:System.IO.TextReader" />.</summary>
      <param name="textReader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; to use for initialization.">Объект <see cref="T:System.IO.TextReader" />, используемый для инициализации.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;textReader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="textReader" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.TextReader,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;, with a supplied schema context and XAML-specific settings.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlReader" /> на основе объекта <see cref="T:System.IO.TextReader" />, используя предоставленный контекст схемы и параметры определенного средства чтения XAML.</summary>
      <param name="textReader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; to use for initialization.">Объект <see cref="T:System.IO.TextReader" />, используемый для инициализации.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">Контекст схемы XAML для обработки XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;textReader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="textReader" /> имеет значение <see langword="null" />.  

или - 
Свойство <paramref name="schemaContext" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.TextReader,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;, and using a supplied schema context and XAML-specific settings.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlReader" /> на основе объекта <see cref="T:System.IO.TextReader" />, используя предоставленный контекст схемы и параметры определенного средства чтения XAML.</summary>
      <param name="textReader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; to use for initialization.">Объект <see cref="T:System.IO.TextReader" />, используемый для инициализации.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">Контекст схемы XAML для обработки XAML.</param>
      <param name="settings" vsli:raw="The specific reader settings.">Параметры определенного средства чтения.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;textReader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="textReader" /> имеет значение <see langword="null" />.  

или - 
Свойство <paramref name="schemaContext" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.TextReader,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt;, and using XAML-specific settings.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlReader" /> на основе объекта <see cref="T:System.IO.TextReader" />, используя параметры определенного средства чтения XAML.</summary>
      <param name="textReader" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextReader&quot; /&gt; to use for initialization.">Объект <see cref="T:System.IO.TextReader" />, используемый для инициализации.</param>
      <param name="settings" vsli:raw="The specific reader settings.">Параметры определенного средства чтения.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;textReader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="textReader" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on a file name of a file to load into a default XML reader.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlReader" /> на основе имени файла, который необходимо загрузить в средство чтения XML по умолчанию.</summary>
      <param name="fileName" vsli:raw="The name of the XML file to load.">Имя загружаемого XML-файла.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="fileName" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.String,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on the file name of a file to load into a default XML reader, with a supplied XAML schema context.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlReader" /> на основе имени файла, загружаемого в средство чтения XML по умолчанию, с предоставленным контекстом схемы XAML.</summary>
      <param name="fileName" vsli:raw="The name of the file to load.">Имя загружаемого файла.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">Контекст схемы XAML для обработки XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="fileName" /> или <paramref name="schemaContext" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.String,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on the file name of a file to load into a default XML reader, and using a supplied XAML schema context and XAML-specific reader settings.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlReader" /> на основе имени файла, загружаемого в средство чтения XML по умолчанию, используя предоставленный контекст схемы XAML и параметрами определенного средства чтения XAML.</summary>
      <param name="fileName" vsli:raw="The name of the XML file to load.">Имя загружаемого XML-файла.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">Контекст схемы XAML для обработки XAML.</param>
      <param name="settings" vsli:raw="The specific reader settings.">Параметры определенного средства чтения.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="fileName" /> имеет значение <see langword="null" />.  

или - 
<paramref name="schemaContext" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.String,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, based on the file name of a file to load into a default XML reader, and using XAML-specific reader settings.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlReader" /> на основе имени файла, загружаемого в средство чтения XML по умолчанию, используя параметры определенного средства чтения XAML.</summary>
      <param name="fileName" vsli:raw="The name of the XML file to load.">Имя загружаемого XML-файла.</param>
      <param name="settings" vsli:raw="The specific reader settings.">Параметры определенного средства чтения.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;fileName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="fileName" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.Xml.XmlReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class using the provided &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlReader" /> с использованием предоставленного типа <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to use as the intermediary XML processor.">Объект <see cref="T:System.Xml.XmlReader" />, используемый в качестве промежуточного процессора XML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlReader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="xmlReader" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.Xml.XmlReader,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class using the provided &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and schema context.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlReader" /> предоставленным объектом <see cref="T:System.Xml.XmlReader" /> и контекстом схемы.</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to use as the intermediary XML processor.">Объект <see cref="T:System.Xml.XmlReader" />, используемый в качестве промежуточного процессора XML.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">Контекст схемы XAML для обработки XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlReader&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="xmlReader" /> или <paramref name="schemaContext" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.Xml.XmlReader,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class using the provided &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;, schema context, and reader settings.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlReader" /> предоставленным объектом <see cref="T:System.Xml.XmlReader" />, контекстом схемы и параметрами средства чтения.</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to use as the intermediary XML processor.">Объект <see cref="T:System.Xml.XmlReader" />, используемый в качестве промежуточного процессора XML.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for XAML processing.">Контекст схемы XAML для обработки XAML.</param>
      <param name="settings" vsli:raw="The specific XAML reader settings.">Параметры определенного средства чтения XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlReader&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="xmlReader" /> или <paramref name="schemaContext" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.Xml.XmlReader,System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; class, using the provided &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and reader settings.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlReader" /> предоставленным объектом <see cref="T:System.Xml.XmlReader" /> и параметрами средства чтения.</summary>
      <param name="xmlReader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to use as the intermediary XML processor.">Объект <see cref="T:System.Xml.XmlReader" />, используемый в качестве промежуточного процессора XML.</param>
      <param name="settings" vsli:raw="The specific XAML reader settings.">Параметры определенного средства чтения XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlReader&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="xmlReader" /> или <paramref name="schemaContext" /> — <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.HasLineInfo">
      <summary vsli:raw="Gets a value that specifies whether line information is available.">Получает значение, указывающее, доступны ли сведения о строке.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if line information is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если сведения о строке доступны; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.IsEof">
      <summary vsli:raw="Gets a value that reports whether the reader position in the XAML node stream is at end-of-file.">Получает значение, указывающее, действительно ли позиция средства чтения в потоке узлов XAML находится в конце файла.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the position is at the conceptual end-of-file in the node stream; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если средство расположено в концептуальном конце файла потока узлов; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.LineNumber">
      <summary vsli:raw="Gets the line number to report.">Получает сообщаемый номер строки.</summary>
      <returns vsli:raw="The line number to report.">Сообщаемый номер строки.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.LinePosition">
      <summary vsli:raw="Gets the line position to report.">Получает сообщаемое положение в строке.</summary>
      <returns vsli:raw="The line position to report.">Сообщаемое положение в строке.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.Member">
      <summary vsli:raw="Gets the current member at the reader position, if the current reader position is on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.StartMember&quot; /&gt;.">Получает текущий член в позиции средства чтения, если текущая позиция средства чтения находится в поле <see cref="F:System.Xaml.XamlNodeType.StartMember" />.</summary>
      <returns vsli:raw="The current member; or &lt;see langword=&quot;null&quot; /&gt;, if the current reader position is not on a member.">Текущий член или значение <see langword="null" />, если текущая позиция средства чтения не находится в члене.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.Namespace">
      <summary vsli:raw="Gets the XAML namespace from the current node.">Получает пространство имен XAML из текущего узла.</summary>
      <returns vsli:raw="The XAML namespace from the current node, if it is available; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Пространство имен XAML из текущего узла, если доступно; в противном случае — значение <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.NodeType">
      <summary vsli:raw="Gets the type of the current node.">Возвращает тип текущего узла.</summary>
      <returns vsli:raw="A value of the &lt;see cref=&quot;T:System.Xaml.XamlNodeType&quot; /&gt; enumeration.">Значение перечисления <see cref="T:System.Xaml.XamlNodeType" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.Read">
      <summary vsli:raw="Provides the next XAML node from the loaded source, if a XAML node is available.">Предоставляет следующий узел XAML из загруженного источника, если узел XAML доступен.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a node is available; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если узел доступен; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.SchemaContext">
      <summary vsli:raw="Gets an object that provides schema information for the information set.">Получает объект, предоставляющий сведения о схеме для данного набора сведений.</summary>
      <returns vsli:raw="An object that provides schema information for the information set.">Объект, предоставляющий сведения о схеме для данного набора сведений.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.Type">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the current node.">Получает объект <see cref="T:System.Xaml.XamlType" /> текущего узла.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; of the current node; or &lt;see langword=&quot;null&quot; /&gt;, if the position is not on an object.">Объект <see cref="T:System.Xaml.XamlType" /> текущего узла или значение <see langword="null" />, если позиция не находится в объекте.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.Value">
      <summary vsli:raw="Gets the value of the current node.">Возвращает значение текущего узла.</summary>
      <returns vsli:raw="The value of the current node; or &lt;see langword=&quot;null&quot; /&gt;, if the position is not on a &lt;see cref=&quot;F:System.Xaml.XamlNodeType.Value&quot; /&gt; node type.">Значение текущего узла или значение <see langword="null" />, если позиция не находится в типе узла <see cref="F:System.Xaml.XamlNodeType.Value" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlXmlReaderSettings">
      <summary vsli:raw="Specifies processing rules or option settings for the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; XAML reader implementation.">Задает правила обработки или значения параметров для реализации средства чтения XAML <see cref="T:System.Xaml.XamlXmlReader" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlReaderSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReaderSettings&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlReaderSettings" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlReaderSettings.#ctor(System.Xaml.XamlXmlReaderSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlReaderSettings&quot; /&gt; class by copying settings from an existing &lt;see cref=&quot;T:System.Xaml.XamlXmlReaderSettings&quot; /&gt; object.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlReaderSettings" />, копируя параметры из существующего объекта <see cref="T:System.Xaml.XamlXmlReaderSettings" />.</summary>
      <param name="settings" vsli:raw="The existing &lt;see cref=&quot;T:System.Xaml.XamlXmlReaderSettings&quot; /&gt; object to copy.">Существующий объект <see cref="T:System.Xaml.XamlXmlReaderSettings" />, который требуется скопировать.</param>
    </member>
    <member name="P:System.Xaml.XamlXmlReaderSettings.CloseInput">
      <summary vsli:raw="Gets or sets a value that indicates whether the underlying stream or text reader should be closed when the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; is closed.">Получает или задает значение, указывающее, нужно ли закрыть основной поток или средство чтения текста при закрытии объекта <see cref="T:System.Xaml.XamlXmlReader" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the underlying stream or reader should be closed when the &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; is closed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если следует закрыть основной поток или средство чтения при закрытии объекта <see cref="T:System.Xaml.XamlXmlReader" />; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReaderSettings.SkipXmlCompatibilityProcessing">
      <summary vsli:raw="Gets or sets a value that determines whether the reader should differ from the default &lt;see cref=&quot;T:System.Xaml.XamlXmlReader&quot; /&gt; behavior of how markup compatibility content is processed.">Получает или задает значение, определяющее, должно ли средство чтения отличаться от поведения <see cref="T:System.Xaml.XamlXmlReader" /> по умолчанию при обработке содержимого совместимости разметки.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the initiating reader is directly used, which means that XML compatibility markup is processed as part of the main stream and compatibility is not considered. &lt;see langword=&quot;false&quot; /&gt; if the default behavior is used, which processes XML compatibility separately. The default is &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если инициирующее средство чтения используется напрямую, то есть разметка совместимости XML обрабатывается как часть основного потока и совместимость не учитывается. Значение <see langword="false" />, если используется поведение по умолчанию, то есть совместимость XML обрабатывается отдельно. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReaderSettings.XmlLang">
      <summary vsli:raw="Gets or sets the language setting value that the reader may promote to writers that write &lt;see langword=&quot;xml:lang&quot; /&gt; attributes in nodes.">Получает или задает значение параметра языка, которое средство чтения может передавать средствам записи, записывающим атрибуты <see langword="xml:lang" /> в узлах.</summary>
      <returns vsli:raw="The string to use for possible &lt;see langword=&quot;xml:lang&quot; /&gt; output that is based on the reader.">Строка, которую необходимо использовать для возможного вывода атрибута <see langword="xml:lang" /> на основе средства чтения.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReaderSettings.XmlSpacePreserve">
      <summary vsli:raw="Gets or sets a value that determines whether the XAML reader instructs any XAML writers to write &lt;see langword=&quot;xml:space&quot; /&gt; attributes in nodes. If that behavior is desired, this information is passed through shared XAML schema context.">Получает или задает значение, определяющее, действительно ли средство чтения XAML указывает средствам записи XAML записывать атрибуты <see langword="xml:space" /> в узлах. В случае необходимости использовать такое поведение данная информация передается с помощью общего контекста схемы XAML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if writers that are processing the XAML node stream can write &lt;c&gt;xml:space=&quot;preserve&quot;&lt;/c&gt; in output; &lt;see langword=&quot;false&quot; /&gt; if &lt;see langword=&quot;xml:space&quot; /&gt; attributes cannot be written in nodes.">
        <see langword="true" />Если модули записи, обрабатывающие поток узлов XAML, могут записать <c>XML: Space = "preserve"</c> в выходных данных; значение, если <see langword="xml:space" /> атрибуты не могут быть записаны на узлах. <see langword="false" /></returns>
    </member>
    <member name="T:System.Xaml.XamlXmlWriter">
      <summary vsli:raw="Uses a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; or &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; support class to write a XAML node stream to a text or markup serialized form.">Использует класс поддержки <see cref="T:System.IO.TextWriter" /> или <see cref="T:System.Xml.XmlWriter" /> для записи потока узлов XAML в сериализованную форму текста или разметки.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; class from a stream.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlWriter" /> из потока.</summary>
      <param name="stream" vsli:raw="The stream to write.">Поток для записи.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for the XAML writer.">Контекст схемы XAML для средства записи XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="stream" /> имеет значение <see langword="null" />.  

или - 
Свойство <paramref name="schemaContext" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; class from a stream using a writer settings object.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlWriter" /> из потока, используя объект параметров средства записи.</summary>
      <param name="stream" vsli:raw="The stream to write.">Поток для записи.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for the XAML writer.">Контекст схемы XAML для средства записи XAML.</param>
      <param name="settings" vsli:raw="An instance of &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterSettings&quot; /&gt;, which typically has specific non-default settings.">Экземпляр <see cref="T:System.Xaml.XamlXmlWriterSettings" />, который, как правило, имеет конкретные параметры, отличающиеся от параметров по умолчанию.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;">Параметр <paramref name="stream" /> или <paramref name="schemaContext" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; class from a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; basis.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlWriter" /> на основе объекта <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="textWriter" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; that writes the output.">Объект <see cref="T:System.IO.TextWriter" />, записывающий выходные данные.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for the XAML writer.">Контекст схемы XAML для средства записи XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;textWriter&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="textWriter" /> или <paramref name="schemaContext" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; class from a &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; basis using a settings object.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlWriter" /> на основе объекта <see cref="T:System.IO.TextWriter" />, используя объект параметров.</summary>
      <param name="textWriter" vsli:raw="The &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt; that writes the output.">Объект <see cref="T:System.IO.TextWriter" />, записывающий выходные данные.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for the XAML writer.">Контекст схемы XAML для средства записи XAML.</param>
      <param name="settings" vsli:raw="An instance of &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterSettings&quot; /&gt;, which typically has specific non-default settings.">Экземпляр <see cref="T:System.Xaml.XamlXmlWriterSettings" />, который, как правило, имеет конкретные параметры, отличающиеся от параметров по умолчанию.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;textWriter&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="textWriter" /> или <paramref name="schemaContext" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; class from a &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; basis.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlWriter" /> на основе объекта <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that writes the output.">Объект <see cref="T:System.Xml.XmlWriter" />, записывающий выходные данные.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for the XAML writer.">Контекст схемы XAML для средства записи XAML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlWriter&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="xmlWriter" /> или <paramref name="schemaContext" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; class from a &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; basis using a settings object.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlWriter" /> на основе объекта <see cref="T:System.Xml.XmlWriter" />, используя объект параметров.</summary>
      <param name="xmlWriter" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that writes the output.">Объект <see cref="T:System.Xml.XmlWriter" />, записывающий выходные данные.</param>
      <param name="schemaContext" vsli:raw="The XAML schema context for the XAML writer.">Контекст схемы XAML для средства записи XAML.</param>
      <param name="settings" vsli:raw="An instance of &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterSettings&quot; /&gt;, which typically has specific non-default settings.">Экземпляр <see cref="T:System.Xaml.XamlXmlWriterSettings" />, который, как правило, имеет конкретные параметры, отличающиеся от параметров по умолчанию.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;xmlWriter&quot; /&gt; or &lt;paramref name=&quot;schemaContext&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="xmlWriter" /> или <paramref name="schemaContext" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; and optionally releases the managed resources.">Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Xaml.XamlXmlWriter" />, и при необходимости также освобождает управляемые ресурсы.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release the unmanaged resources; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если необходимо освободить неуправляемые ресурсы; в противном случае — значение <see langword="false" />.</param>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.Flush">
      <summary vsli:raw="Calls the &lt;see langword=&quot;Flush&quot; /&gt; method of the underlying &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;, which writes anything that is currently in the buffer, and then closes the writer.">Вызывает метод <see langword="Flush" /> базового класса <see cref="T:System.Xml.XmlWriter" /> или <see cref="T:System.IO.TextWriter" />, который записывает все данные, содержащиеся в данный момент в буфере, а затем закрывает средство записи.</summary>
    </member>
    <member name="P:System.Xaml.XamlXmlWriter.SchemaContext">
      <summary vsli:raw="Gets the XAML schema context that this &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; uses for processing.">Получает контекст схемы XAML, используемый данным объектом <see cref="T:System.Xaml.XamlXmlWriter" /> для обработки.</summary>
      <returns vsli:raw="The XAML schema context that this &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; uses for XAML processing.">Контекст схемы XAML, используемый данным объектом <see cref="T:System.Xaml.XamlXmlWriter" /> для обработки XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlWriter.Settings">
      <summary vsli:raw="Gets the writer settings that this &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; uses for XAML processing.">Получает параметры средства записи, используемые данным объектом <see cref="T:System.Xaml.XamlXmlWriter" /> для обработки XAML.</summary>
      <returns vsli:raw="The writer settings that this &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; uses for XAML processing.">Параметры средства записи, используемые данным объектом <see cref="T:System.Xaml.XamlXmlWriter" /> для обработки XAML.</returns>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteEndMember">
      <summary vsli:raw="Writes a XAML end member node to the underlying &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. Throws an exception if the current position of the XAML node stream is not within a member, or if the internal writer state does not support writing to an end member.">Записывает узел конечного члена XAML в базовый объект <see cref="T:System.Xml.XmlWriter" /> или <see cref="T:System.IO.TextWriter" />. Создает исключение, если текущая позиция потока узлов XAML не находится внутри члена или если внутреннее состояние средства записи не поддерживает запись в конечный член.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current position of the XAML node stream is not within a member.">Текущая позиция потока узла XAML не находится в пределах члена.</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException" vsli:raw="The current writer state does not support writing an end member.">Текущее состояние средства записи не поддерживает запись конечного члена.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteEndObject">
      <summary vsli:raw="Writes a XAML end object node to the underlying &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. Throws an exception if the current position of the XAML node stream that is being processed is incompatible with writing an end object.">Записывает узел конечного объекта XAML в базовый объект <see cref="T:System.Xml.XmlWriter" /> или <see cref="T:System.IO.TextWriter" />. Создает исключение, если текущая позиция обрабатываемого потока узлов XAML несовместима с записью конечного объекта.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current position of the XAML node stream is not in a scope where an end member can be written.">Текущее положение потока узлов XAML находится вне области записи конечного элемента.</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException" vsli:raw="The current writer state does not support writing an end object.">Текущее состояние средства записи не поддерживает запись конечного объекта.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteGetObject">
      <summary vsli:raw="Writes an object for cases where the specified object is a default or implicit value of the property that is being written, instead of being specified as an object value in the input XAML node set.">Записывает объект для случаев, когда заданный объект является значением по умолчанию или неявным значением свойства, которое записывается в настоящее время, а не задается в виде значения объекта во входном наборе узлов XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
      <summary vsli:raw="Writes namespace information to the underlying &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. May throw an exception for certain states; however, may instead defer writing the namespace information until the writer and the XAML node stream that is being processed reaches a position where a XAML namespace declaration can be inserted.">Записывает сведения о пространстве имен в базовый объект <see cref="T:System.Xml.XmlWriter" /> или <see cref="T:System.IO.TextWriter" />. Может создавать исключения для определенных состояний, но может также и откладывать запись сведений о пространстве имен до тех пор, пока средство записи и обрабатываемый поток узлов XAML не достигнет позиции, позволяющей вставлять объявление пространства имен XAML.</summary>
      <param name="namespaceDeclaration" vsli:raw="The XAML namespace declaration to write.">Объявление пространства имен XAML для записи.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;namespaceDeclaration&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="namespaceDeclaration" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;namespaceDeclaration&quot; /&gt; is not a valid XAML namespace declaration (has a null prefix or null identifier component).">
        <paramref name="namespaceDeclaration" /> не является допустимым объявлением пространства имен XAML (имеет префикс со значением null или компонент идентификатора с таким же значением).</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException" vsli:raw="The current writer state does not support writing a XAML namespace declaration.">Текущее состояние средства записи не поддерживает запись объявления пространства имен XAML.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
      <summary vsli:raw="Writes a XAML start member node to the underlying &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. Throws an exception if the current position of the XAML node stream is within another member, or if it is not in a scope or writer state where a start member can be written.">Записывает узел начального члена XAML в базовый объект <see cref="T:System.Xml.XmlWriter" /> или <see cref="T:System.IO.TextWriter" />. Создает исключение, если текущая позиция потока узлов XAML находится внутри другого члена либо не находится в области или состоянии средства записи, в котором возможна запись начального члена.</summary>
      <param name="property" vsli:raw="The XAML member identifier for the member to write.">Идентификатор члена XAML для записываемого члена.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;property&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="property" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;property&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Xaml.XamlMember&quot; /&gt;.">
        <paramref name="property" /> не является допустимым <see cref="T:System.Xaml.XamlMember" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current position of the XAML node stream is invalid for writing a start member.">Текущее положение потока узлов XAML недопустимо для записи начального члена.</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException" vsli:raw="The writer state is not valid for writing a start member.  &#xA;  &#xA; -or-  &#xA;  &#xA; The XAML writer attempted to write a duplicate member. This exception may have a more precise inner exception.">Состояние записи не является допустимым для написания начала элемента.  

или -  

 Модуль записи XAML попытался произвести запись в повторяющийся элемент. Это исключение может иметь более точное внутреннее исключение.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteStartObject(System.Xaml.XamlType)">
      <summary vsli:raw="Writes a XAML start object node to the underlying &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. Throws an exception if the current position of the XAML node stream is not in a scope where a start object can be written, or if the writer is not in a state that can write a start object.">Записывает узел начального объекта XAML в базовый объект <see cref="T:System.Xml.XmlWriter" /> или <see cref="T:System.IO.TextWriter" />. Создает исключение, если текущая позиция потока узлов XAML не находится в области, в которой возможна запись начального объекта, либо средство записи не находится в состоянии, позволяющем записывать начальный объект.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt; (XAML type identifier) for the object to write.">Объект <see cref="T:System.Xaml.XamlType" /> (идентификатор типа XAML) для записываемого объекта.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Свойство <paramref name="type" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is not a valid &lt;see cref=&quot;T:System.Xaml.XamlType&quot; /&gt;.">
        <paramref name="type" /> не является допустимым <see cref="T:System.Xaml.XamlType" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current position of the XAML node stream is not valid for writing a new start object.">Текущая позиция потока узла XAML недопустима для записи нового начального объекта.</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException" vsli:raw="The state of the XAML writer is not valid for writing a new start object.">Недопустимое состояние записи XAML для записи нового объекта запуска.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteValue(System.Object)">
      <summary vsli:raw="Writes a XAML value node to the underlying &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; or &lt;see cref=&quot;T:System.IO.TextWriter&quot; /&gt;. Throws an exception if the current position of the XAML node stream is invalid for writing a value, or the writer is in a state where a value cannot be written.">Записывает узел значения XAML в базовый объект <see cref="T:System.Xml.XmlWriter" /> или <see cref="T:System.IO.TextWriter" />. Создает исключение, если текущая позиция потока узлов XAML является недопустимой для записи значения или средство записи находится в состоянии, в котором невозможно записать значение.</summary>
      <param name="value" vsli:raw="The value information to write.">Сведения о значении для записи.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current position of the XAML node stream is not valid for writing a value.">Текущая позиция потока узла XAML недопустима для записи значения.</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException" vsli:raw="The XAML writer state does not support the writing of a value node.">Состояние модуля записи XAML не поддерживает запись значения узла.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; specifies a value that is not null or a string.">
        <paramref name="value" /> задает значение, которое не является NULL или строкой.</exception>
    </member>
    <member name="T:System.Xaml.XamlXmlWriterException">
      <summary vsli:raw="The exception that is thrown by certain &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; APIs.">Исключение, вызываемое некоторыми интерфейсами API объекта <see cref="T:System.Xaml.XamlXmlWriter" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterException&quot; /&gt; class with a system-supplied message that describes the error.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlWriterException" /> с системным сообщением, содержащим описание ошибки.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterException&quot; /&gt; class with serialized data.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlWriterException" /> с сериализованными данными.</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">Объект, содержащий сериализованные данные объекта.</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">Контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterException&quot; /&gt; class with a specified message that describes the error.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlWriterException" /> с использованием заданного сообщения, содержащего описание ошибки.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Сообщение с описанием исключения. Код, вызывающий этот конструктор, должен обеспечить локализацию данной строки в соответствии с текущим языком и региональными параметрами системы.</param>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlWriterException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</summary>
      <param name="message" vsli:raw="The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.">Сообщение с описанием исключения. Код, вызывающий этот конструктор, должен обеспечить локализацию данной строки в соответствии с текущим языком и региональными параметрами системы.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Исключение, которое является причиной текущего исключения. Если значение параметра <paramref name="innerException" /> не равно <see langword="null" />, текущее исключение сгенерировано в блоке <see langword="catch" />, обрабатывающем внутреннее исключение.</param>
    </member>
    <member name="T:System.Xaml.XamlXmlWriterSettings">
      <summary vsli:raw="Provides initialization settings for the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; XAML writer implementation.">Предоставляет параметры инициализации для реализации средства чтения XAML на основе класса <see cref="T:System.Xaml.XamlXmlWriter" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterSettings&quot; /&gt; class.">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlXmlWriterSettings" />.</summary>
    </member>
    <member name="P:System.Xaml.XamlXmlWriterSettings.AssumeValidInput">
      <summary vsli:raw="Gets or sets a value that specifies whether the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; should always assume valid XAML input for purposes of duplicate resolution or other error checking.">Получает или задает значение, указывающее, должен ли объект <see cref="T:System.Xaml.XamlXmlWriter" /> всегда предполагать допустимые входные данные XAML для целей разрешения дубликатов или проверки на наличие других ошибок.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; skips certain validation or error checks, such as throwing exceptions on duplicate members. &lt;see langword=&quot;false&quot; /&gt; if the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; throws exceptions when invalid XAML is encountered. The default is &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если объект <see cref="T:System.Xaml.XamlXmlWriter" /> пропускает определенные проверки допустимости или проверки наличия ошибок, такие как создание исключений для дублирующих членов. Значение <see langword="false" />, если объект <see cref="T:System.Xaml.XamlXmlWriter" /> создает исключения при обнаружении ошибок языка XAML. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlWriterSettings.CloseOutput">
      <summary vsli:raw="Gets or sets a value that specifies whether the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; should close immediately on &lt;see langword=&quot;Dispose&quot; /&gt; or other operations, or whether the XAML writer should instead write the buffer output before closing. Use this setting with caution; closing immediately can result in invalid XAML that cannot be loaded again.">Получает или задает значение, указывающее, должен ли объект <see cref="T:System.Xaml.XamlXmlWriter" /> закрываться сразу при вызове метода <see langword="Dispose" /> или других операций или перед закрытием средство записи XAML должно записать выходные данные буфера. Этот параметр следует использовать с особой осторожностью; немедленное закрытие может привести к недопустимому коду XAML, который нельзя будет загрузить еще раз.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; immediately closes on a &lt;see langword=&quot;Dispose&quot; /&gt; or similar operations. &lt;see langword=&quot;false&quot; /&gt; if the remaining buffer output is written before the &lt;see cref=&quot;T:System.Xaml.XamlXmlWriter&quot; /&gt; is released. The default is &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если объект <see cref="T:System.Xaml.XamlXmlWriter" /> закрывается сразу после вызова метода <see langword="Dispose" /> или других аналогичных операций. Значение <see langword="false" />, если перед освобождением объекта <see cref="T:System.Xaml.XamlXmlWriter" /> записываются оставшиеся выходные данные буфера. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterSettings.Copy">
      <summary vsli:raw="Returns a copy of this &lt;see cref=&quot;T:System.Xaml.XamlXmlWriterSettings&quot; /&gt; instance.">Возвращает копию экземпляра данного класса <see cref="T:System.Xaml.XamlXmlWriterSettings" />.</summary>
      <returns vsli:raw="The returned copy.">Возвращаемая копия.</returns>
    </member>
  </members>
</doc>