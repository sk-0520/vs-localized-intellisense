<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Configuration.ConfigurationManager</name>
  </assembly>
  <members>
    <member name="T:System.Configuration.ApplicationScopedSettingAttribute">
      <summary>Определяет, что свойство параметров приложения имеет общее значение для всех пользователей приложения. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Configuration.ApplicationScopedSettingAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ApplicationScopedSettingAttribute" />.</summary>
    </member>
    <member name="T:System.Configuration.ApplicationSettingsBase">
      <summary>Действует, как базовый класс для извлечения конкретных классов-оболочек, чтобы реализовать функцию параметров приложения в приложениях Windows Forms.</summary>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.#ctor">
      <summary>Инициализирует экземпляр класса <see cref="T:System.Configuration.ApplicationSettingsBase" /> в его состояние по умолчанию.</summary>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ApplicationSettingsBase" />, используя предоставленный компонент владельца.</summary>
      <param name="owner">Компонент, который будет действовать, как владелец объекта параметров приложения.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="owner" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ApplicationSettingsBase" />, используя предоставленный компонент владельца и ключ параметров.</summary>
      <param name="owner">Компонент, который будет действовать, как владелец объекта параметров приложения.</param>
      <param name="settingsKey">
        <see cref="T:System.String" />, уникально определяющий отдельные экземпляры класса-оболочки.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="owner" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ApplicationSettingsBase" />, используя предоставленный ключ параметров.</summary>
      <param name="settingsKey">
        <see cref="T:System.String" />, уникально определяющий отдельные экземпляры класса-оболочки.</param>
    </member>
    <member name="P:System.Configuration.ApplicationSettingsBase.Context">
      <summary>Возвращает контекст параметров приложения, связанный с группой параметров.</summary>
      <returns>
        <see cref="T:System.Configuration.SettingsContext" /> связан с группой приложений.</returns>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)">
      <summary>Возвращает значение именованного свойства параметров для предыдущей версии того же приложения.</summary>
      <param name="propertyName">Объект <see cref="T:System.String" />, содержащий имя свойства параметров, значение которого необходимо вернуть.</param>
      <returns>
        <see cref="T:System.Object" />, содержащий значение указанного <see cref="T:System.Configuration.SettingsProperty" />, если он найден; в противном случае — <see langword="null" />.</returns>
      <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">Свойство не существует. Свойство равно нулю или не может быть найдено в хранилище данных.</exception>
    </member>
    <member name="P:System.Configuration.ApplicationSettingsBase.Item(System.String)">
      <summary>Возвращает или задает значение указанного свойства параметров приложения.</summary>
      <param name="propertyName">
        <see cref="T:System.String" />, содержащий имя свойства для доступа.</param>
      <returns>Если найден, то значение именованного свойства параметров; в противном случае — <see langword="null" />.</returns>
      <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">Нет свойств, связанных с текущей программой-оболочкой, или указанное свойство не может быть найдено.</exception>
      <exception cref="T:System.Configuration.SettingsPropertyIsReadOnlyException">Предпринята попытка задать свойство, доступное только для чтения.</exception>
      <exception cref="T:System.Configuration.SettingsPropertyWrongTypeException">Предоставленное значение имеет несовместимый со свойством параметров тип значения во время операции задания.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Не удалось проанализировать файл конфигурации.</exception>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Вызывает событие <see cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Объект <see cref="T:System.ComponentModel.PropertyChangedEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)">
      <summary>Вызывает событие <see cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Объект <see cref="T:System.Configuration.SettingChangingEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)">
      <summary>Вызывает событие <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Объект <see cref="T:System.Configuration.SettingsLoadedEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)">
      <summary>Вызывает событие <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Объект <see cref="T:System.ComponentModel.CancelEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="P:System.Configuration.ApplicationSettingsBase.Properties">
      <summary>Возвращает коллекцию свойств параметров в программе-оболочке.</summary>
      <returns>
        <see cref="T:System.Configuration.SettingsPropertyCollection" />, содержащий все объекты <see cref="T:System.Configuration.SettingsProperty" />, используется в текущей программе-оболочке.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Связанный поставщик параметров не может быть найден или не удалось создать его экземпляр.</exception>
    </member>
    <member name="E:System.Configuration.ApplicationSettingsBase.PropertyChanged">
      <summary>Возникает после изменения свойства параметров приложения.</summary>
    </member>
    <member name="P:System.Configuration.ApplicationSettingsBase.PropertyValues">
      <summary>Возвращает коллекцию значений свойств.</summary>
      <returns>
        <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> значения свойства.</returns>
    </member>
    <member name="P:System.Configuration.ApplicationSettingsBase.Providers">
      <summary>Возвращает коллекцию поставщиков параметров приложения, используемую программой-оболочкой.</summary>
      <returns>
        <see cref="T:System.Configuration.SettingsProviderCollection" /> содержит все объекты <see cref="T:System.Configuration.SettingsProvider" />, используемые свойствами параметров текущей программы-оболочки параметров.</returns>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.Reload">
      <summary>Обновляет значения свойств параметров приложения из постоянного хранилища.</summary>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.Reset">
      <summary>Восстанавливает постоянные значения параметров приложения в их соответствующие свойства по умолчанию.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Не удалось проанализировать файл конфигурации.</exception>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.Save">
      <summary>Сохраняет текущие значения свойств параметров приложения.</summary>
    </member>
    <member name="E:System.Configuration.ApplicationSettingsBase.SettingChanging">
      <summary>Возникает перед изменением значения свойства параметров приложения.</summary>
    </member>
    <member name="P:System.Configuration.ApplicationSettingsBase.SettingsKey">
      <summary>Возвращает или задает ключ параметров для группы параметров приложения.</summary>
      <returns>
        <see cref="T:System.String" /> содержит ключ параметров для текущей группы параметров.</returns>
    </member>
    <member name="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded">
      <summary>Возникает после извлечения параметров приложения из хранилища.</summary>
    </member>
    <member name="E:System.Configuration.ApplicationSettingsBase.SettingsSaving">
      <summary>Возникает перед сохранением значений в хранилище данных.</summary>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.Upgrade">
      <summary>Обновляет параметры приложения в соответствии с последней установкой приложения.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Не удалось проанализировать файл конфигурации.</exception>
    </member>
    <member name="T:System.Configuration.ApplicationSettingsGroup">
      <summary>Представляет группирование разделов связанных приложений в файле конфигурации. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsGroup.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ApplicationSettingsGroup" />.</summary>
    </member>
    <member name="T:System.Configuration.AppSettingsReader">
      <summary>Предоставляет метод для чтения значений определенного типа из конфигурации.</summary>
    </member>
    <member name="M:System.Configuration.AppSettingsReader.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.AppSettingsReader" />.</summary>
    </member>
    <member name="M:System.Configuration.AppSettingsReader.GetValue(System.String,System.Type)">
      <summary>Возвращает значение для указанного ключа из свойства <see cref="P:System.Configuration.ConfigurationSettings.AppSettings" /> и возвращает объект заданного типа, который содержит значение из конфигурации.</summary>
      <param name="key">Ключ, для которого необходимо вернуть значение.</param>
      <param name="type">Тип возвращаемого объекта.</param>
      <returns>Значение заданного ключа.</returns>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="key" /> имеет значение <see langword="null" />.  
-или- 
 Свойство <paramref name="type" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Параметр <paramref name="key" /> отсутствует в разделе конфигурации <see langword="&lt;appSettings&gt;" />.  
-или- 
Значение в разделе конфигурации <see langword="&lt;appSettings&gt;" /> для параметра <paramref name="key" /> имеет тип, отличный от <paramref name="type" />.</exception>
    </member>
    <member name="T:System.Configuration.AppSettingsSection">
      <summary>Обеспечивает поддержку системы конфигурации для разделов конфигурации <see langword="appSettings" />. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Configuration.AppSettingsSection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.AppSettingsSection" />.</summary>
    </member>
    <member name="P:System.Configuration.AppSettingsSection.File">
      <summary>Получает или задает файл конфигурации, предоставляющий дополнительные параметры или переопределяющий параметры, указанные в элементе <see langword="appSettings" />.</summary>
      <returns>Файл конфигурации, предоставляющий дополнительные параметры или переопределяющий параметры, указанные в элементе <see langword="appSettings" />.</returns>
    </member>
    <member name="P:System.Configuration.AppSettingsSection.Settings">
      <summary>Возвращает коллекцию пар "ключ-значение", содержащую параметры приложения.</summary>
      <returns>Коллекция пар ключ/значение, которая содержит параметры приложения из файла конфигурации.</returns>
    </member>
    <member name="T:System.Configuration.CallbackValidator">
      <summary>Предоставляет динамическую проверку объекта.</summary>
    </member>
    <member name="M:System.Configuration.CallbackValidator.#ctor(System.Type,System.Configuration.ValidatorCallback)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.CallbackValidator" />.</summary>
      <param name="type">Тип объекта, подлежащего проверке.</param>
      <param name="callback">
        <see cref="T:System.Configuration.ValidatorCallback" /> используется, как делегат.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="type" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Configuration.CallbackValidator.CanValidate(System.Type)">
      <summary>Определяет, можно ли проверить тип объекта.</summary>
      <param name="type">Тип объекта.</param>
      <returns>
        <see langword="true" /> если параметр <see langword="type" /> совпадает с типом, используемым в качестве первого параметра, при создании экземпляра <see cref="T:System.Configuration.CallbackValidator" />; иначе, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.CallbackValidator.Validate(System.Object)">
      <summary>Определяет, является ли значение объекта допустимым.</summary>
      <param name="value">Значение объекта.</param>
    </member>
    <member name="T:System.Configuration.CallbackValidatorAttribute">
      <summary>Определяет <see cref="T:System.Configuration.CallbackValidator" /> объект, используемый для проверки кода. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Configuration.CallbackValidatorAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.CallbackValidatorAttribute" />.</summary>
    </member>
    <member name="P:System.Configuration.CallbackValidatorAttribute.CallbackMethodName">
      <summary>Возвращает или задает имя вызванного метода.</summary>
      <returns>Имя вызываемого метода.</returns>
    </member>
    <member name="P:System.Configuration.CallbackValidatorAttribute.Type">
      <summary>Возвращает или задает тип проверяющего элемента управления.</summary>
      <returns>
        <see cref="T:System.Type" /> экземпляра атрибута проверяющего элемента управления.</returns>
    </member>
    <member name="P:System.Configuration.CallbackValidatorAttribute.ValidatorInstance">
      <summary>Возвращает экземпляр проверяющего элемента управления.</summary>
      <returns>Текущий экземпляр <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</returns>
      <exception cref="T:System.ArgumentNullException">Значение свойства <see cref="P:System.Configuration.CallbackValidatorAttribute.Type" /> равно <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Configuration.CallbackValidatorAttribute.CallbackMethodName" /> один параметр свойства не установлен в режим "public static void".</exception>
    </member>
    <member name="T:System.Configuration.ClientSettingsSection">
      <summary>Представляют собой группу установок приложений пользователя в файле конфигурации.</summary>
    </member>
    <member name="M:System.Configuration.ClientSettingsSection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ClientSettingsSection" />.</summary>
    </member>
    <member name="P:System.Configuration.ClientSettingsSection.Settings">
      <summary>Возвращает коллекцию установок клиента для раздела.</summary>
      <returns>
        <see cref="T:System.Configuration.SettingElementCollection" /> содержит все установки клиента, найденные в текущем разделе конфигурации.</returns>
    </member>
    <member name="T:System.Configuration.CommaDelimitedStringCollection">
      <summary>Представляет коллекцию строковых элементов, разделенных запятой. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Configuration.CommaDelimitedStringCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.Add(System.String)">
      <summary>Добавляет строку в коллекцию, разделенную запятыми.</summary>
      <param name="value">Строковое значение.</param>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.AddRange(System.String[])">
      <summary>Добавляет все строки из строкового массива в коллекцию.</summary>
      <param name="range">Массив объектов, добавляемых в коллекцию.</param>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.Clear">
      <summary>Очищает коллекцию.</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.Clone">
      <summary>Создает копию коллекции.</summary>
      <returns>Копия объекта <see cref="T:System.Configuration.CommaDelimitedStringCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.Insert(System.Int32,System.String)">
      <summary>Добавляет строковый элемент в коллекцию по указанному индексу.</summary>
      <param name="index">Индекс коллекции, по которому добавляется новый элемент.</param>
      <param name="value">Значение нового элемента, добавляемого в коллекцию.</param>
    </member>
    <member name="P:System.Configuration.CommaDelimitedStringCollection.IsModified">
      <summary>Возвращает значение, указывающее, была ли коллекция изменена.</summary>
      <returns>
        <see langword="true" />, если коллекция <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> была изменена; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.CommaDelimitedStringCollection.IsReadOnly">
      <summary>Возвращает значение, указывающее, является ли объект коллекции доступным только для чтения.</summary>
      <returns>
        <see langword="true" />, если указанный строковый элемент в <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> доступен только для чтения; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.CommaDelimitedStringCollection.Item(System.Int32)">
      <summary>Возвращает или задает строковый элемент в коллекции по указанному индексу.</summary>
      <param name="index">Индекс строкового элемента в коллекции.</param>
      <returns>Строковый элемент в коллекции.</returns>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.Remove(System.String)">
      <summary>Удаляет строковый элемент из коллекции.</summary>
      <param name="value">Удаляемая строка.</param>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.SetReadOnly">
      <summary>Устанавливает коллекцию в режим только для чтения.</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.ToString">
      <summary>Возвращает строковое представление объекта.</summary>
      <returns>Строковое представление объекта.</returns>
    </member>
    <member name="T:System.Configuration.CommaDelimitedStringCollectionConverter">
      <summary>Преобразует строковое значение, разделенное запятыми в объект <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> и обратно. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollectionConverter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.CommaDelimitedStringCollectionConverter" />.</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Преобразует объект <see cref="T:System.String" /> в объект <see cref="T:System.Configuration.CommaDelimitedStringCollection" />.</summary>
      <param name="ctx">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для преобразования типов.</param>
      <param name="ci">Объект <see cref="T:System.Globalization.CultureInfo" />, используемый в процессе преобразования.</param>
      <param name="data">Преобразуемое строковое разделенное запятой значение <see cref="T:System.String" />.</param>
      <returns>Объект <see cref="T:System.Configuration.CommaDelimitedStringCollection" />, содержащий преобразованное значение.</returns>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Преобразует объект <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> в объект <see cref="T:System.String" />.</summary>
      <param name="ctx">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для преобразования типов.</param>
      <param name="ci">Объект <see cref="T:System.Globalization.CultureInfo" />, используемый в процессе преобразования.</param>
      <param name="value">Преобразуемое значение.</param>
      <param name="type">Тип преобразования.</param>
      <returns>Объект <see cref="T:System.String" />, представляющий преобразованный параметр <paramref name="value" />, который является <see cref="T:System.Configuration.CommaDelimitedStringCollection" />.</returns>
    </member>
    <member name="T:System.Configuration.Configuration">
      <summary>Представляет файл конфигурации, применимый к конкретному компьютеру, приложению или ресурсу. Этот класс не наследуется.</summary>
    </member>
    <member name="P:System.Configuration.Configuration.AppSettings">
      <summary>Получает раздел конфигурации из объекта <see cref="T:System.Configuration.AppSettingsSection" />, который применяется к указанному объекту <see cref="T:System.Configuration.Configuration" />.</summary>
      <returns>Объект <see cref="T:System.Configuration.AppSettingsSection" />, представляющий раздел конфигурации <see langword="appSettings" />, который применяется к данному объекту <see cref="T:System.Configuration.Configuration" />.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.AssemblyStringTransformer">
      <summary>Задает делегат функции, используемый для преобразования строк сборки в файлах конфигурации.</summary>
      <returns>Делегат, преобразующий строки типа. Значение по умолчанию — <see langword="null" />.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.ConnectionStrings">
      <summary>Получает раздел конфигурации из объекта <see cref="T:System.Configuration.ConnectionStringsSection" />, который применяется к указанному объекту <see cref="T:System.Configuration.Configuration" />.</summary>
      <returns>Объект раздела конфигурации <see cref="T:System.Configuration.ConnectionStringsSection" />, представляющий раздел конфигурации <see langword="connectionStrings" />, который применяется к данному объекту <see cref="T:System.Configuration.Configuration" />.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.EvaluationContext">
      <summary>Возвращает объект <see cref="T:System.Configuration.ContextInformation" /> для объекта <see cref="T:System.Configuration.Configuration" />.</summary>
      <returns>Объект <see cref="T:System.Configuration.ContextInformation" /> для объекта <see cref="T:System.Configuration.Configuration" />.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.FilePath">
      <summary>Получает физический путь к файлу конфигурации, представленному данным объектом <see cref="T:System.Configuration.Configuration" />.</summary>
      <returns>Физический путь к файлу конфигурации, представленный данным объектом <see cref="T:System.Configuration.Configuration" />.</returns>
    </member>
    <member name="M:System.Configuration.Configuration.GetSection(System.String)">
      <summary>Возвращает указанный объект <see cref="T:System.Configuration.ConfigurationSection" />.</summary>
      <param name="sectionName">Путь к возвращаемому разделу.</param>
      <returns>Указанный объект <see cref="T:System.Configuration.ConfigurationSection" /> или значение <see langword="null" />, если запрошенный раздел не существует.</returns>
    </member>
    <member name="M:System.Configuration.Configuration.GetSectionGroup(System.String)">
      <summary>Получает указанный объект <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</summary>
      <param name="sectionGroupName">Имя пути возвращаемого <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</param>
      <returns>Указанный объект <see cref="T:System.Configuration.ConfigurationSectionGroup" /> или <see langword="null" />, если запрошенная группа разделов не существует.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.HasFile">
      <summary>Получает значение, указывающее, существует ли файл для ресурса, представленного данным объектом <see cref="T:System.Configuration.Configuration" />.</summary>
      <returns>
        <see langword="true" />, если существует файл конфигурации; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.Locations">
      <summary>Получает расположения, определенные в данном объекте <see cref="T:System.Configuration.Configuration" />.</summary>
      <returns>Коллекция <see cref="T:System.Configuration.ConfigurationLocationCollection" />, содержащая расположения, определенные в данном объекте <see cref="T:System.Configuration.Configuration" />.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.NamespaceDeclared">
      <summary>Получает или устанавливает значение, указывающее, содержит ли файл конфигурации пространство имен XML.</summary>
      <returns>
        <see langword="true" />, если файл конфигурации содержит пространство имен XML; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.RootSectionGroup">
      <summary>Получает корень <see cref="T:System.Configuration.ConfigurationSectionGroup" /> для данного объекта <see cref="T:System.Configuration.Configuration" />.</summary>
      <returns>Группа корневого раздела для данного объекта <see cref="T:System.Configuration.Configuration" />.</returns>
    </member>
    <member name="M:System.Configuration.Configuration.Save">
      <summary>Записывает параметры конфигурации, содержащиеся в данном объекте <see cref="T:System.Configuration.Configuration" />, в текущий файл конфигурации XML.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Невозможно записать файл конфигурации.  

или -

 Файл конфигурации был изменен.</exception>
    </member>
    <member name="M:System.Configuration.Configuration.Save(System.Configuration.ConfigurationSaveMode)">
      <summary>Записывает параметры конфигурации, содержащиеся в данном объекте <see cref="T:System.Configuration.Configuration" />, в текущий файл конфигурации XML.</summary>
      <param name="saveMode">Значение <see cref="T:System.Configuration.ConfigurationSaveMode" />, определяющее, какие значения свойств сохранять.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Невозможно записать файл конфигурации.  

или -

 Файл конфигурации был изменен.</exception>
    </member>
    <member name="M:System.Configuration.Configuration.Save(System.Configuration.ConfigurationSaveMode,System.Boolean)">
      <summary>Записывает параметры конфигурации, содержащиеся в данном объекте <see cref="T:System.Configuration.Configuration" />, в текущий файл конфигурации XML.</summary>
      <param name="saveMode">Значение <see cref="T:System.Configuration.ConfigurationSaveMode" />, определяющее, какие значения свойств сохранять.</param>
      <param name="forceSaveAll">
        <see langword="true" /> для сохранения, даже если конфигурация не была изменена; в противном случае — <see langword="false" />.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Невозможно записать файл конфигурации.  

или -

 Файл конфигурации был изменен.</exception>
    </member>
    <member name="M:System.Configuration.Configuration.SaveAs(System.String)">
      <summary>Записывает параметры конфигурации, содержащиеся в данном объекте <see cref="T:System.Configuration.Configuration" />, в указанный файл конфигурации XML.</summary>
      <param name="filename">Полное имя файла, в котором сохраняется файл конфигурации.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Невозможно записать файл конфигурации.  

или -

 Файл конфигурации был изменен.</exception>
    </member>
    <member name="M:System.Configuration.Configuration.SaveAs(System.String,System.Configuration.ConfigurationSaveMode)">
      <summary>Записывает параметры конфигурации, содержащиеся в данном объекте <see cref="T:System.Configuration.Configuration" />, в указанный файл конфигурации XML.</summary>
      <param name="filename">Полное имя файла, в котором сохраняется файл конфигурации.</param>
      <param name="saveMode">Значение <see cref="T:System.Configuration.ConfigurationSaveMode" />, определяющее, какие значения свойств сохранять.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Невозможно записать файл конфигурации.  

или -

 Файл конфигурации был изменен.</exception>
    </member>
    <member name="M:System.Configuration.Configuration.SaveAs(System.String,System.Configuration.ConfigurationSaveMode,System.Boolean)">
      <summary>Записывает параметры конфигурации, содержащиеся в данном объекте <see cref="T:System.Configuration.Configuration" />, в указанный файл конфигурации XML.</summary>
      <param name="filename">Полное имя файла, в котором сохраняется файл конфигурации.</param>
      <param name="saveMode">Значение <see cref="T:System.Configuration.ConfigurationSaveMode" />, определяющее, какие значения свойств сохранять.</param>
      <param name="forceSaveAll">
        <see langword="true" /> для сохранения, даже если конфигурация не была изменена; в противном случае — <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="filename" /> имеет значение null или равен пустой строке ("").</exception>
    </member>
    <member name="P:System.Configuration.Configuration.SectionGroups">
      <summary>Получает коллекцию групп разделов, определенных данной конфигурацией.</summary>
      <returns>Коллекция <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> групп разделов для данного объекта <see cref="T:System.Configuration.Configuration" />.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.Sections">
      <summary>Получает коллекцию разделов, определенную данным объектом <see cref="T:System.Configuration.Configuration" />.</summary>
      <returns>Коллекция разделов, определенная данным объектом <see cref="T:System.Configuration.Configuration" />.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.TargetFramework">
      <summary>Задает целевую версию платформы .NET Framework, если целевой является версия, более ранняя по сравнению с текущей.</summary>
      <returns>Имя целевой версии платформы .NET Framework. Значение по умолчанию — <see langword="null" />, указывающее, что целевой является текущая версия.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.TypeStringTransformer">
      <summary>Задает делегат функции, используемый для преобразования строк типа в файлах конфигурации.</summary>
      <returns>Делегат, преобразующий строки типа. Значение по умолчанию — <see langword="null" />.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationAllowDefinition">
      <summary>Задает расположения в иерархии файла конфигурации, которые могут устанавливать или переопределять свойства, содержащиеся в объекте <see cref="T:System.Configuration.ConfigurationSection" />.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowDefinition.Everywhere">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" /> может быть определено везде.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowDefinition.MachineOnly">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" /> может определяться только в файле Machine.config.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowDefinition.MachineToApplication">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" /> может определяться либо в файле Machine.config, на машинном уровне в файле Web.config, находящемся в той же папке что и Machine.config, либо в файле Web.config приложения более высокого уровня, находящемся в корневом виртуальном каталоге, а не в подкаталогах виртуального корневого каталога.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowDefinition.MachineToWebRoot">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" /> может определяться либо в файле Machine.config, либо на машинном уровне в файле Web.config, находящемся в том же каталоге что и Machine.config, но не в файлах Web.config приложения.</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationAllowExeDefinition">
      <summary>Задает расположения в иерархии файла конфигурации, которые могут устанавливать или переопределять свойства, содержащиеся в объекте <see cref="T:System.Configuration.ConfigurationSection" />.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowExeDefinition.MachineOnly">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" /> может определяться только в файле Machine.config.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowExeDefinition.MachineToApplication">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" /> может определяться либо в файле Machine.config, либо в файле Exe.config в каталоге клиентского приложения. Это значение по умолчанию.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowExeDefinition.MachineToLocalUser">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" /> может определяться в файле Machine.config, в файле Exe.config в каталоге клиентского приложения, в файле User.config в перемещаемом каталоге пользователя или в файле User.config в каталоге локального пользователя.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowExeDefinition.MachineToRoamingUser">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" /> может определяться в файле Machine.config, в файле Exe.config в каталоге клиентского приложения или в файле User.config в перемещаемом каталоге пользователя.</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationCollectionAttribute">
      <summary>Декларативно указывает платформе .NET Framework на необходимость создания коллекции элементов конфигурации. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationCollectionAttribute.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ConfigurationCollectionAttribute" />.</summary>
      <param name="itemType">Создаваемый тип свойства коллекции.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="itemType" /> — <see langword="null" />.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationCollectionAttribute.AddItemName">
      <summary>Возвращает или задает имя элемента конфигурации <see langword="&lt;add&gt;" />.</summary>
      <returns>Имя, которое заменяет стандартное имя add в разделе конфигурации.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationCollectionAttribute.ClearItemsName">
      <summary>Возвращает или задает имя элемента конфигурации <see langword="&lt;clear&gt;" />.</summary>
      <returns>Имя, которое заменяет стандартное имя clear в разделе конфигурации.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationCollectionAttribute.CollectionType">
      <summary>Возвращает или задает тип атрибута <see cref="T:System.Configuration.ConfigurationCollectionAttribute" />.</summary>
      <returns>Тип <see cref="T:System.Configuration.ConfigurationCollectionAttribute" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationCollectionAttribute.ItemType">
      <summary>Возвращает тип элемента коллекции.</summary>
      <returns>Тип элемента коллекции.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationCollectionAttribute.RemoveItemName">
      <summary>Возвращает или задает имя элемента конфигурации <see langword="&lt;remove&gt;" />.</summary>
      <returns>Имя, которое заменяет стандартное имя remove в разделе конфигурации.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationConverterBase">
      <summary>Базовый класс для типов преобразователя конфигурации.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationConverterBase.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ConfigurationConverterBase" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Определяет, разрешено ли преобразование.</summary>
      <param name="ctx">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для преобразований типов.</param>
      <param name="type">Тип <see cref="T:System.Type" />, из которого выполняется преобразование.</param>
      <returns>Значение <see langword="true" />, если преобразование разрешено, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Определяет, разрешено ли преобразование.</summary>
      <param name="ctx">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> используется для преобразования типов.</param>
      <param name="type">Целевой тип преобразования.</param>
      <returns>Значение <see langword="true" />, если преобразование разрешено, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationElement">
      <summary>Представляет элемент конфигурации в файле конфигурации.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.CurrentConfiguration">
      <summary>Возвращает ссылку на экземпляр <see cref="T:System.Configuration.Configuration" /> верхнего уровня, представляющий иерархию конфигурации, к которой относится текущий экземпляр <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <returns>Экземпляр <see cref="T:System.Configuration.Configuration" /> верхнего уровня, к которому относится текущий экземпляр <see cref="T:System.Configuration.ConfigurationElement" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
      <summary>Считывает XML из файла конфигурации.</summary>
      <param name="reader">Модуль чтения <see cref="T:System.Xml.XmlReader" />, считывающий данные из файла конфигурации.</param>
      <param name="serializeCollectionKey">Значение <see langword="true" /> для сериализации только свойств ключа коллекции; в противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Считываемый элемент заблокирован.  
-или-
 Атрибут текущего узла не распознан.  

или -

 Не удается определить состояние блокировки текущего узла.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.ElementInformation">
      <summary>Возвращает объект <see cref="T:System.Configuration.ElementInformation" />, содержащий неизменяемую информацию и функциональность объекта <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <returns>Элемент конфигурации <see cref="T:System.Configuration.ElementInformation" />, содержащий неизменяемую информацию и функциональность объекта <see cref="T:System.Configuration.ConfigurationElement" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.ElementProperty">
      <summary>Возвращает объект <see cref="T:System.Configuration.ConfigurationElementProperty" />, представляющий сам объект <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <returns>Объект <see cref="T:System.Configuration.ConfigurationElementProperty" />, представляющий объект <see cref="T:System.Configuration.ConfigurationElement" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.Equals(System.Object)">
      <summary>Сравнивает текущий экземпляр <see cref="T:System.Configuration.ConfigurationElement" /> с указанным объектом.</summary>
      <param name="compareTo">Объект, с которым выполняется сравнение.</param>
      <returns>Значение <see langword="true" />, если сравниваемый объект равен текущему экземпляру <see cref="T:System.Configuration.ConfigurationElement" />; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.EvaluationContext">
      <summary>Возвращает объект <see cref="T:System.Configuration.ContextInformation" /> для объекта <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <returns>Объект <see cref="T:System.Configuration.ContextInformation" /> для <see cref="T:System.Configuration.ConfigurationElement" />.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Текущий элемент не связан с контекстом.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.GetHashCode">
      <summary>Получает уникальное значение, представляющее текущий экземпляр <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <returns>Уникальное значение, представляющее текущий экземпляр <see cref="T:System.Configuration.ConfigurationElement" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)">
      <summary>Возвращает преобразованную версию указанного имени сборки.</summary>
      <param name="assemblyName">Имя сборки.</param>
      <returns>Преобразованная версия имени сборки. Если доступный преобразователь отсутствует, значение параметра <paramref name="assemblyName" /> возвращается без изменений. Если доступный преобразователь отсутствует, свойство <see cref="P:System.Configuration.Configuration.TypeStringTransformer" /> имеет значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)">
      <summary>Возвращает преобразованную версию указанного имени типа.</summary>
      <param name="typeName">Имя типа.</param>
      <returns>Преобразованная версия указанного имени типа. Если доступный преобразователь отсутствует, значение параметра <paramref name="typeName" /> возвращается без изменений. Если доступный преобразователь отсутствует, свойство <see cref="P:System.Configuration.Configuration.TypeStringTransformer" /> имеет значение <see langword="null" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.HasContext">
      <summary>Возвращает значение, указывающее, имеет ли свойство <see cref="P:System.Configuration.ConfigurationElement.CurrentConfiguration" /> значение <see langword="null" />.</summary>
      <returns>Значение false, если свойство <see cref="P:System.Configuration.ConfigurationElement.CurrentConfiguration" /> имеет значение является <see langword="null" />; в противном случае — значение <see langword="true" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.Init">
      <summary>Задает объект <see cref="T:System.Configuration.ConfigurationElement" /> в исходное состояние.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.InitializeDefault">
      <summary>Используется для инициализации набора значений по умолчанию для объекта <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.IsModified">
      <summary>Указывает, был ли изменен данный элемент конфигурации с момента последнего сохранения или загрузки после реализации в производном классе.</summary>
      <returns>
        <see langword="true" />, если элемент был изменен; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.IsReadOnly">
      <summary>Получает значение, показывающее, является ли объект <see cref="T:System.Configuration.ConfigurationElement" /> доступным только для чтения.</summary>
      <returns>Значение <see langword="true" />, если объект <see cref="T:System.Configuration.ConfigurationElement" /> доступен только для чтения; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)">
      <summary>Возвращает или задает свойство или атрибут данного элемента конфигурации.</summary>
      <param name="prop">Свойство, к которому осуществляется доступ.</param>
      <returns>Указанное свойство, атрибут или дочерний элемент.</returns>
      <exception cref="T:System.Configuration.ConfigurationException">Параметр <paramref name="prop" /> равен <see langword="null" /> или не существует в элементе.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Параметр <paramref name="prop" /> только для чтения или заблокирован.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.Item(System.String)">
      <summary>Получает или задает свойство, атрибут или дочерний элемент данного элемента конфигурации.</summary>
      <param name="propertyName">Имя свойства <see cref="T:System.Configuration.ConfigurationProperty" />, к которому осуществляется доступ.</param>
      <returns>Указанное свойство, атрибут или дочерний элемент.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Параметр <paramref name="prop" /> только для чтения или заблокирован.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)">
      <summary>Добавляет ошибку "недействительное свойство" в данном объекте <see cref="T:System.Configuration.ConfigurationElement" /> и всех его дочерних элементах к переданному списку.</summary>
      <param name="errorList">Объект, реализующий интерфейс <see cref="T:System.Collections.IList" />.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept">
      <summary>Возвращает коллекцию заблокированных атрибутов.</summary>
      <returns>Коллекция <see cref="T:System.Configuration.ConfigurationLockCollection" /> заблокированных атрибутов (свойств) элемента.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.LockAllElementsExcept">
      <summary>Возвращает коллекцию заблокированных элементов.</summary>
      <returns>Коллекция <see cref="T:System.Configuration.ConfigurationLockCollection" /> заблокированных элементов.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.LockAttributes">
      <summary>Возвращает коллекцию заблокированных атрибутов</summary>
      <returns>Коллекция <see cref="T:System.Configuration.ConfigurationLockCollection" /> заблокированных атрибутов (свойств) элемента.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.LockElements">
      <summary>Возвращает коллекцию заблокированных элементов.</summary>
      <returns>Коллекция <see cref="T:System.Configuration.ConfigurationLockCollection" /> заблокированных элементов.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.LockItem">
      <summary>Возвращает или задает значение, указывающее, заблокирован ли элемент.</summary>
      <returns>
        <see langword="true" />, если элемент заблокирован; в противном случае —<see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Элемент уже заблокирован на более высоком уровне конфигурации.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
      <summary>Возвращает значение, указывающее, встретился ли неизвестный атрибут при десериализации.</summary>
      <param name="name">Имя неопознанного атрибута.</param>
      <param name="value">Значение неопознанного атрибута.</param>
      <returns>
        <see langword="true" />, когда неизвестный атрибут встречается при десериализации; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
      <summary>Возвращает значение, указывающее, встретился ли неизвестный элемент при десериализации.</summary>
      <param name="elementName">Имя неизвестного дочернего элемента.</param>
      <param name="reader">Метод <see cref="T:System.Xml.XmlReader" />, используемый для десериализации.</param>
      <returns>
        <see langword="true" />, когда неизвестный элемент встречается при десериализации; в противном случае — <see langword="false" />.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Элемент, идентифицируемый параметром <paramref name="elementName" />, заблокирован.  

или - 
Один или несколько атрибутов элемента заблокированы.  

-или- 
 <paramref name="elementName" /> неопознан, или элемент имеет неопознанный атрибут.  

или - 
Элемент имеет логический атрибут с недопустимым значением.  

или - 
Была предпринята попытка десериализовать свойство более одного раза.  

или - 
Была предпринята попытка десериализовать свойство, не являющееся допустимым членом элемента.  

или - 
Элемент не может содержать CDATA или текстовый элемент.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)">
      <summary>Выдает исключение, если требуемое свойство не найдено.</summary>
      <param name="name">Имя требуемого атрибута, который не был найден.</param>
      <returns>Отсутствует.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Во всех случаях.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.PostDeserialize">
      <summary>Вызывается после десериализации.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)">
      <summary>Вызывается до сериализации.</summary>
      <param name="writer">Метод <see cref="T:System.Xml.XmlWriter" />, который будет использоваться для десериализации <see cref="T:System.Configuration.ConfigurationElement" />.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.Properties">
      <summary>Возвращает коллекцию свойств.</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> свойств элемента.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)">
      <summary>Восстанавливает внутреннее состояние объекта <see cref="T:System.Configuration.ConfigurationElement" />, включая блокировки и коллекции свойств.</summary>
      <param name="parentElement">Родительский узел данного элемента конфигурации.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.ResetModified">
      <summary>Переустанавливает значение метода <see cref="M:System.Configuration.ConfigurationElement.IsModified" /> в <see langword="false" /> при реализации в производном классе.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
      <summary>Записывает содержание данного элемента конфигурации в файл конфигурации при реализации в производном классе.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" />, который выполняет запись в файл конфигурации.</param>
      <param name="serializeCollectionKey">Значение <see langword="true" /> для сериализации только свойств ключа коллекции; в противном случае — значение <see langword="false" />.</param>
      <returns>
        <see langword="true" />, если данные действительно были сериализованы; в противном случае — <see langword="false" />.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Текущий атрибут заблокирован на более высоком уровне конфигурации.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
      <summary>Записывает внешние теги данного элемента конфигурации в файл конфигурации при реализации в производном классе.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" />, который выполняет запись в файл конфигурации.</param>
      <param name="elementName">Имя записываемого элемента конфигурации <see cref="T:System.Configuration.ConfigurationElement" />.</param>
      <returns>Значение <see langword="true" />, если запись была успешной; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.Exception">Элемент имеет несколько дочерних элементов.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)">
      <summary>Задает для свойства указанное значение.</summary>
      <param name="prop">Свойство элемента, которое необходимо задать.</param>
      <param name="value">Значение, присваиваемое свойству.</param>
      <param name="ignoreLocks">Значение <see langword="true" />, если блокировки в свойстве должны игнорироваться; в противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Возникает, если элемент доступен только для чтения или <paramref name="ignoreLocks" /> равно <see langword="true" />, но блокировки не удается игнорировать.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.SetReadOnly">
      <summary>Задает свойство <see cref="M:System.Configuration.ConfigurationElement.IsReadOnly" /> для объекта <see cref="T:System.Configuration.ConfigurationElement" /> и всех подчиненных элементов.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
      <summary>Изменяет объект <see cref="T:System.Configuration.ConfigurationElement" /> для удаления всех значений, которые не должны сохраняться.</summary>
      <param name="sourceElement">Объект <see cref="T:System.Configuration.ConfigurationElement" /> текущего уровня, содержащий объединенную информацию о свойствах.</param>
      <param name="parentElement">Родительский элемент <see cref="T:System.Configuration.ConfigurationElement" /> текущего элемента, или <see langword="null" />, если это верхний уровень.</param>
      <param name="saveMode">Одно из значений перечисления, определяющее, какие значения свойств следует включить.</param>
    </member>
    <member name="T:System.Configuration.ConfigurationElementCollection">
      <summary>Представляет элемент конфигурации, содержащий коллекцию дочерних элементов.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.#ctor(System.Collections.IComparer)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <param name="comparer">Используемый компаратор <see cref="T:System.Collections.IComparer" />.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="comparer" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.AddElementName">
      <summary>Возвращает или устанавливает имя <see cref="T:System.Configuration.ConfigurationElement" />, связанное с операцией добавления в <see cref="T:System.Configuration.ConfigurationElementCollection" /> после переопределения в производном классе.</summary>
      <returns>Имя элемента.</returns>
      <exception cref="T:System.ArgumentException">Избранное значение начинается с зарезервированного префикса config или lock.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)">
      <summary>Добавляет новый элемент конфигурации в <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <param name="element">Добавляемый объект <see cref="T:System.Configuration.ConfigurationElement" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)">
      <summary>Добавляет элемент конфигурации в коллекцию элементов конфигурации.</summary>
      <param name="element">Добавляемый объект <see cref="T:System.Configuration.ConfigurationElement" />.</param>
      <param name="throwIfExists">Значение <see langword="true" />, чтобы выдать исключение, если указанный <see cref="T:System.Configuration.ConfigurationElement" /> уже содержится в <see cref="T:System.Configuration.ConfigurationElementCollection" />; в противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.Exception">Добавляемый <see cref="T:System.Configuration.ConfigurationElement" /> уже существует в <see cref="T:System.Configuration.ConfigurationElementCollection" /> и параметр <paramref name="throwIfExists" /> равен <see langword="true" />.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)">
      <summary>Добавляет элемент конфигурации в коллекцию элементов конфигурации.</summary>
      <param name="index">Расположение индекса, в которое добавляется указанный <see cref="T:System.Configuration.ConfigurationElement" />.</param>
      <param name="element">Добавляемый объект <see cref="T:System.Configuration.ConfigurationElement" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseClear">
      <summary>Удаляет все объекты элементов конфигурации из коллекции.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Конфигурация доступна только для чтения.  
-или-
 Элемент коллекции заблокирован на более высоком уровне конфигурации.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)">
      <summary>Возвращает элемент конфигурации с указанным расположением индекса.</summary>
      <param name="index">Расположение индекса возвращаемого объекта <see cref="T:System.Configuration.ConfigurationElement" />.</param>
      <returns>Параметр <see cref="T:System.Configuration.ConfigurationElement" /> по указанному индексу.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Значение <paramref name="index" /> меньше <see langword="0" />.  

или - 
Не существует объекта <see cref="T:System.Configuration.ConfigurationElement" /> по указанному <paramref name="index" />.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)">
      <summary>Возвращает элемент конфигурации с указанным ключом.</summary>
      <param name="key">Ключ возвращаемого элемента.</param>
      <returns>Объект <see cref="T:System.Configuration.ConfigurationElement" /> с указанным ключом; в противном случае — <see langword="null" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseGetAllKeys">
      <summary>Возвращает массив ключей для всех элементов конфигурации, содержащихся в <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <returns>Массив с ключами для всех объектов <see cref="T:System.Configuration.ConfigurationElement" />, содержащихся в <see cref="T:System.Configuration.ConfigurationElementCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)">
      <summary>Получает ключ объекта <see cref="T:System.Configuration.ConfigurationElement" /> по указанному расположению индекса.</summary>
      <param name="index">Расположение индекса для объекта <see cref="T:System.Configuration.ConfigurationElement" />.</param>
      <returns>Ключ для указанного <see cref="T:System.Configuration.ConfigurationElement" />.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Значение <paramref name="index" /> меньше <see langword="0" />.  

или - 
Не существует объекта <see cref="T:System.Configuration.ConfigurationElement" /> по указанному <paramref name="index" />.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)">
      <summary>Указывает индекс заданного объекта <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <param name="element">Объект <see cref="T:System.Configuration.ConfigurationElement" /> по указанному расположению индекса.</param>
      <returns>Индекс заданного объекта <see cref="T:System.Configuration.ConfigurationElement" />; в противном случае — значение -1.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)">
      <summary>Указывает, удален ли <see cref="T:System.Configuration.ConfigurationElement" /> с указанным ключом из <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <param name="key">Ключ проверяемого элемента.</param>
      <returns>Значение <see langword="true" />, если элемент <see cref="T:System.Configuration.ConfigurationElement" /> с указанным ключом был удален; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)">
      <summary>Удаляет объект <see cref="T:System.Configuration.ConfigurationElement" /> из коллекции.</summary>
      <param name="key">Ключ удаляемого объекта <see cref="T:System.Configuration.ConfigurationElement" />.</param>
      <exception cref="T:System.Exception">В коллекции нет объекта <see cref="T:System.Configuration.ConfigurationElement" /> с указанным ключом. Элемент уже был удален или его не удается удалить, потому что его значение <see cref="P:System.Configuration.ConfigurationProperty.Type" /> не равно <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap" />.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)">
      <summary>Удаляет объект <see cref="T:System.Configuration.ConfigurationElement" /> по указанному расположению индекса.</summary>
      <param name="index">Расположение индекса удаляемого объекта <see cref="T:System.Configuration.ConfigurationElement" />.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Конфигурация доступна только для чтения.  
-или- 
 Значение <paramref name="index" /> меньше <see langword="0" /> или больше числа объектов <see cref="T:System.Configuration.ConfigurationElement" /> в коллекции.  
-или- 
Объект <see cref="T:System.Configuration.ConfigurationElement" /> уже был удален.  
-или- 
Значение объекта <see cref="T:System.Configuration.ConfigurationElement" /> заблокировано на более высоком уровне.  

или - 
Объект <see cref="T:System.Configuration.ConfigurationElement" /> является унаследованным.  

или - 
Значение <see cref="P:System.Configuration.ConfigurationProperty.Type" /> объекта <see cref="T:System.Configuration.ConfigurationElement" /> не равно <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap" /> или <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate" />.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.ClearElementName">
      <summary>Возвращает или задает имя <see cref="T:System.Configuration.ConfigurationElement" />, связанное с операцией очистки в <see cref="T:System.Configuration.ConfigurationElementCollection" /> после переопределения в производном классе.</summary>
      <returns>Имя элемента.</returns>
      <exception cref="T:System.ArgumentException">Избранное значение начинается с зарезервированного префикса config или lock.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.CollectionType">
      <summary>Получает тип объекта <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationElementCollectionType" /> данной коллекции.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)">
      <summary>Копирует содержимое объекта <see cref="T:System.Configuration.ConfigurationElementCollection" /> в массив.</summary>
      <param name="array">Массив, в который копируется содержимое <see cref="T:System.Configuration.ConfigurationElementCollection" />.</param>
      <param name="index">Расположение индекса, с которого начинается копирование.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.Count">
      <summary>Возвращает количество элементов в коллекции.</summary>
      <returns>Количество элементов в коллекции.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.CreateNewElement">
      <summary>При переопределении в производном классе создает новый объект <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <returns>Только что созданный объект <see cref="T:System.Configuration.ConfigurationElement" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)">
      <summary>При переопределении в производном классе создает новый элемент <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <param name="elementName">Имя создаваемого элемента <see cref="T:System.Configuration.ConfigurationElement" />.</param>
      <returns>Новый <see cref="T:System.Configuration.ConfigurationElement" /> с указанным именем.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.ElementName">
      <summary>Получает имя, используемое для данной коллекции элементов в файле конфигурации после переопределения в производном классе.</summary>
      <returns>Имя коллекции; в противном случае — пустая строка. Значение по умолчанию - пустая строка.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.EmitClear">
      <summary>Получает или задает значение, указывающее, была ли коллекция очищена.</summary>
      <returns>
        <see langword="true" />, если элемент был создан; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Конфигурация доступна только для чтения.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)">
      <summary>Сравнивает <see cref="T:System.Configuration.ConfigurationElementCollection" /> с указанным объектом.</summary>
      <param name="compareTo">Объект для сравнения.</param>
      <returns>Значение <see langword="true" />, если сравниваемый объект равен текущему экземпляру <see cref="T:System.Configuration.ConfigurationElementCollection" />; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
      <summary>При переопределении в производном классе возвращает ключ указанного элемента конфигурации.</summary>
      <param name="element">Объект <see cref="T:System.Configuration.ConfigurationElement" />, для которого возвращается ключ.</param>
      <returns>Объект <see cref="T:System.Object" />, используемый в качестве ключа для указанного элемента <see cref="T:System.Configuration.ConfigurationElement" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.GetEnumerator">
      <summary>Получает метод <see cref="T:System.Collections.IEnumerator" />, используемый для итерации по <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <returns>Метод <see cref="T:System.Collections.IEnumerator" />, используемый для итерации по <see cref="T:System.Configuration.ConfigurationElementCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.GetHashCode">
      <summary>Получает уникальное значение, представляющее экземпляр <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <returns>Уникальное значение, представляющее текущий экземпляр <see cref="T:System.Configuration.ConfigurationElementCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.IsElementName(System.String)">
      <summary>Указывает, существует ли указанный <see cref="T:System.Configuration.ConfigurationElement" /> в <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <param name="elementName">Имя проверяемого элемента.</param>
      <returns>Значение <see langword="true" />, если элемент присутствует в коллекции; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)">
      <summary>Указывает, может ли указанный объект <see cref="T:System.Configuration.ConfigurationElement" /> быть удален из <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <param name="element">Проверяемый элемент.</param>
      <returns>Значение <see langword="true" />, если указанный <see cref="T:System.Configuration.ConfigurationElement" /> можно удалить из этой коллекции <see cref="T:System.Configuration.ConfigurationElementCollection" />; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.IsModified">
      <summary>Указывает, был ли изменен <see cref="T:System.Configuration.ConfigurationElementCollection" /> с момента последнего сохранения или загрузки после переопределения в производном классе.</summary>
      <returns>Значение <see langword="true" />, если элемент был изменен; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.IsReadOnly">
      <summary>Указывает, доступен ли объект <see cref="T:System.Configuration.ConfigurationElementCollection" /> только для чтения.</summary>
      <returns>Значение <see langword="true" />, если объект <see cref="T:System.Configuration.ConfigurationElementCollection" /> доступен только для чтения; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.IsSynchronized">
      <summary>Возвращает значение, указывающее, является ли доступ к коллекции синхронизированным.</summary>
      <returns>Значение <see langword="true" />, если доступ к коллекции <see cref="T:System.Configuration.ConfigurationElementCollection" /> является синхронизированным; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
      <summary>Приводит к тому, что система конфигурации выдает исключение.</summary>
      <param name="elementName">Имя неопознанного элемента.</param>
      <param name="reader">Входной поток, который считывает XML из файла конфигурации.</param>
      <returns>Значение <see langword="true" />, если неопознанный элемент был успешно десериализован; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Элемент, указанный в <paramref name="elementName" />, является элементом <see langword="&lt;clear&gt;" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elementName" /> начинается с зарезервированного префикса config или lock.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.RemoveElementName">
      <summary>Получает или задает имя <see cref="T:System.Configuration.ConfigurationElement" />, связанное с операцией удаления в <see cref="T:System.Configuration.ConfigurationElementCollection" /> после переопределения в производном классе.</summary>
      <returns>Имя элемента.</returns>
      <exception cref="T:System.ArgumentException">Избранное значение начинается с зарезервированного префикса config или lock.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)">
      <summary>Сбрасывает <see cref="T:System.Configuration.ConfigurationElementCollection" /> в неизмененное состояние после переопределения в производном классе.</summary>
      <param name="parentElement">Значение <see cref="T:System.Configuration.ConfigurationElement" />, представляющее родительский элемент коллекции (если таковой имеется); в противном случае — значение <see langword="null" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.ResetModified">
      <summary>Переустанавливает значение свойства <see cref="M:System.Configuration.ConfigurationElementCollection.IsModified" /> в <see langword="false" /> при переопределении в производном классе.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
      <summary>Записывает данные конфигурации в XML-элемент в файле конфигурации после переопределения в производном классе.</summary>
      <param name="writer">Выходной поток, записывающий XML в файл конфигурации.</param>
      <param name="serializeCollectionKey">Значение <see langword="true" /> для сериализации ключа коллекции, в противном случае — значение <see langword="false" />.</param>
      <returns>Значение <see langword="true" />, если элемент <see cref="T:System.Configuration.ConfigurationElementCollection" /> был успешно записан в файл конфигурации.</returns>
      <exception cref="T:System.ArgumentException">Один из элементов коллекции был добавлен или изменен и начинается с зарезервированного префикса config или lock.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.SetReadOnly">
      <summary>Устанавливает свойство <see cref="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" /> для объекта <see cref="T:System.Configuration.ConfigurationElementCollection" /> и всех подчиненных элементов.</summary>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.SyncRoot">
      <summary>Получает объект, используемый для синхронизации доступа к <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <returns>Объект, используемый для синхронизации доступа к <see cref="T:System.Configuration.ConfigurationElementCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Копирует <see cref="T:System.Configuration.ConfigurationElementCollection" /> в массив.</summary>
      <param name="arr">Массив, в который копируется данная коллекция <see cref="T:System.Configuration.ConfigurationElementCollection" />.</param>
      <param name="index">Расположение индекса, с которого начинается копирование.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate">
      <summary>Возвращает значение, указывающее выдаст ли исключение попытка добавить дубликат <see cref="T:System.Configuration.ConfigurationElement" /> к <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <returns>
        <see langword="true" />, если попытка добавить дубликат <see cref="T:System.Configuration.ConfigurationElement" /> к данной коллекции <see cref="T:System.Configuration.ConfigurationElementCollection" /> приводит к вызову исключения; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
      <summary>Отменяет эффект слияния данных конфигурации на разных уровнях иерархии конфигурации.</summary>
      <param name="sourceElement">Объект <see cref="T:System.Configuration.ConfigurationElement" /> текущего уровня, содержащий объединенное представление свойств.</param>
      <param name="parentElement">Родительский объект <see cref="T:System.Configuration.ConfigurationElement" /> текущего элемента или <see langword="null" />, если это верхний уровень.</param>
      <param name="saveMode">Одно из значений перечисления, определяющее, какие значения свойств следует включить.</param>
    </member>
    <member name="T:System.Configuration.ConfigurationElementCollectionType">
      <summary>Указывает тип объекта <see cref="T:System.Configuration.ConfigurationElementCollectionType" />.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap">
      <summary>Тип по умолчанию объекта <see cref="T:System.Configuration.ConfigurationElementCollection" />. Коллекции этого типа содержат элементы, которые могут быть объединены в иерархии файлов конфигурации. На любом уровне такой иерархии директивы <see langword="add" />, <see langword="remove" /> и <see langword="clear" /> используются для изменения любых унаследованных свойств и определения новых.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate">
      <summary>То же самое, что и <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap" />, за исключением того, что этот тип заставляет объект <see cref="T:System.Configuration.ConfigurationElementCollection" /> сортировать свое содержимое так, что унаследованные элементы перечисляются последними.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationElementCollectionType.BasicMap">
      <summary>Коллекции этого типа содержат элементы, которые применяются на том уровне, на котором они определены, и на всех дочерних уровнях. Дочерний уровень не может изменить свойства, определенные родительским элементом данного типа.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate">
      <summary>То же самое, что и <see cref="F:System.Configuration.ConfigurationElementCollectionType.BasicMap" />, за исключением того, что этот тип заставляет объект <see cref="T:System.Configuration.ConfigurationElementCollection" /> сортировать свое содержимое так, что унаследованные элементы перечисляются последними.</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationElementProperty">
      <summary>Указывает свойство элемента конфигурации. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElementProperty.#ctor(System.Configuration.ConfigurationValidatorBase)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ConfigurationElementProperty" />, используя предоставленный параметр.</summary>
      <param name="validator">Объект <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="validator" /> — <see langword="null" />.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationElementProperty.Validator">
      <summary>Возвращает объект <see cref="T:System.Configuration.ConfigurationValidatorBase" />, использовавшийся для проверки объекта <see cref="T:System.Configuration.ConfigurationElementProperty" />.</summary>
      <returns>Объект <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationErrorsException">
      <summary>Исключение, которое вызывается в случае ошибки конфигурации.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
      <param name="info">Объект, содержащий сведения о выполнении десериализации.</param>
      <param name="context">Контекстные сведения об источнике или назначении.</param>
      <exception cref="T:System.InvalidOperationException">Текущий тип не является объектом <see cref="T:System.Configuration.ConfigurationException" /> или <see cref="T:System.Configuration.ConfigurationErrorsException" />.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
      <param name="message">Сообщение, описывающее причину возникновения данного исключения <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
      <param name="message">Сообщение, описывающее причину возникновения данного исключения <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <param name="inner">Исключение, которое вызвало исключение <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception,System.String,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
      <param name="message">Сообщение, описывающее причину возникновения данного исключения <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <param name="inner">Внутреннее исключение, которое вызвало данное исключение <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <param name="filename">Путь к файлу конфигурации, который привел к возникновению данного исключения <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <param name="line">Номер строки в файле конфигурации, в которой возникло данное исключение <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception,System.Xml.XmlNode)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
      <param name="message">Сообщение, описывающее причину возникновения данного исключения <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <param name="inner">Внутреннее исключение, которое вызвало данное исключение <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <param name="node">Объект <see cref="T:System.Xml.XmlNode" />, вызвавший данное исключение <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception,System.Xml.XmlReader)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
      <param name="message">Сообщение, описывающее причину возникновения данного исключения <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <param name="inner">Внутреннее исключение, которое вызвало данное исключение <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" />, вызвавший данное исключение <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.String,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
      <param name="message">Сообщение, описывающее причину возникновения данного исключения <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <param name="filename">Путь к файлу конфигурации, который привел к возникновению данного исключения <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <param name="line">Номер строки в файле конфигурации, в которой возникло данное исключение <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Xml.XmlNode)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
      <param name="message">Сообщение, описывающее причину возникновения данного исключения <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <param name="node">Объект <see cref="T:System.Xml.XmlNode" />, вызвавший данное исключение <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Xml.XmlReader)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
      <param name="message">Сообщение, описывающее причину возникновения данного исключения <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" />, вызвавший данное исключение <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationErrorsException.BareMessage">
      <summary>Получает описание причины возникновения данного исключения конфигурации.</summary>
      <returns>Описание причины вызова исключения <see cref="T:System.Configuration.ConfigurationErrorsException" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationErrorsException.Errors">
      <summary>Получает коллекцию ошибок, которые подробно описывают причины возникновения данного исключения <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
      <returns>Объект <see cref="T:System.Collections.ICollection" />, который содержит ошибки, определяющие причины вызова данного исключения <see cref="T:System.Configuration.ConfigurationErrorsException" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationErrorsException.Filename">
      <summary>Получает путь к файлу конфигурации, который привел к возникновению данного исключения конфигурации.</summary>
      <returns>Путь к файлу конфигурации, который привел к вызову данного исключения <see cref="T:System.Configuration.ConfigurationErrorsException" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.GetFilename(System.Xml.XmlNode)">
      <summary>Получает путь к файлу конфигурации, из которого загружался внутренний объект <see cref="T:System.Xml.XmlNode" />, когда возникло данное исключение конфигурации.</summary>
      <param name="node">Объект <see cref="T:System.Xml.XmlNode" />, вызвавший данное исключение <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <returns>Путь к файлу конфигурации, из которого загружался внутренний объект <see cref="T:System.Xml.XmlNode" />, когда возникло данное исключение конфигурации.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.GetFilename(System.Xml.XmlReader)">
      <summary>Получает путь к файлу конфигурации, из которого считывался внутренний объект <see cref="T:System.Xml.XmlReader" />, когда возникло данное исключение конфигурации.</summary>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" />, вызвавший данное исключение <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <returns>Путь к файлу конфигурации, из которого осуществлялся доступ к внутреннему объекту <see cref="T:System.Xml.XmlReader" />, когда возникло данное исключение конфигурации.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.GetLineNumber(System.Xml.XmlNode)">
      <summary>Получает номер строки в файле конфигурации, которую представлял внутренний объект <see cref="T:System.Xml.XmlNode" />, когда возникло данное исключение конфигурации.</summary>
      <param name="node">Объект <see cref="T:System.Xml.XmlNode" />, вызвавший данное исключение <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <returns>Номер строки в файле конфигурации, которую представлял внутренний объект <see cref="T:System.Xml.XmlNode" />, когда возникло данное исключение конфигурации.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.GetLineNumber(System.Xml.XmlReader)">
      <summary>Получает номер строки в файле конфигурации, которую обрабатывал внутренний объект <see cref="T:System.Xml.XmlReader" />, когда возникло данное исключение конфигурации.</summary>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" />, вызвавший данное исключение <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <returns>Номер строки в файле конфигурации, к которой осуществлял доступ объект <see cref="T:System.Xml.XmlReader" />, когда возникло данное исключение конфигурации.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Задает объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> с именем файла и номером строки, в которых возникло данное исключение конфигурации.</summary>
      <param name="info">Объект, содержащий сведения о выполнении сериализации.</param>
      <param name="context">Контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationErrorsException.Line">
      <summary>Получает номер строки в файле конфигурации, в которой возникло данное исключение.</summary>
      <returns>Номер строки в файле конфигурации, в которой возникло данное исключение <see cref="T:System.Configuration.ConfigurationErrorsException" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationErrorsException.Message">
      <summary>Получает расширенное описание причины возникновения данного исключения конфигурации.</summary>
      <returns>Расширенное описание причины вызова данного исключения <see cref="T:System.Configuration.ConfigurationErrorsException" />.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationException">
      <summary>Вызванное исключение при возникновении ошибки в системе конфигурации.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ConfigurationException" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ConfigurationException" />.</summary>
      <param name="info">Объект, содержащий сведения о выполнении десериализации.</param>
      <param name="context">Контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ConfigurationException" />.</summary>
      <param name="message">Сообщение, описывающее причину создания исключения <see cref="T:System.Configuration.ConfigurationException" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ConfigurationException" />.</summary>
      <param name="message">Сообщение, описывающее причину создания исключения <see cref="T:System.Configuration.ConfigurationException" />.</param>
      <param name="inner">Внутреннее исключение, которое вызвало данное исключение <see cref="T:System.Configuration.ConfigurationException" />, если таковое есть.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.String,System.Exception,System.String,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ConfigurationException" />.</summary>
      <param name="message">Сообщение, описывающее причину создания исключения <see cref="T:System.Configuration.ConfigurationException" />.</param>
      <param name="inner">Внутреннее исключение, которое вызвало данное исключение <see cref="T:System.Configuration.ConfigurationException" />, если таковое есть.</param>
      <param name="filename">Путь к файлу конфигурации, который привел к вызову данного исключения <see cref="T:System.Configuration.ConfigurationException" />.</param>
      <param name="line">Номер строки в файле конфигурации, в которой возникло данное исключение <see cref="T:System.Configuration.ConfigurationException" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.String,System.Exception,System.Xml.XmlNode)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ConfigurationException" />.</summary>
      <param name="message">Сообщение, описывающее причину создания исключения <see cref="T:System.Configuration.ConfigurationException" />.</param>
      <param name="inner">Внутреннее исключение, которое вызвало данное исключение <see cref="T:System.Configuration.ConfigurationException" />, если таковое есть.</param>
      <param name="node">Объект <see cref="T:System.Xml.XmlNode" />, который вызвал исключение <see cref="T:System.Configuration.ConfigurationException" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.String,System.String,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ConfigurationException" />.</summary>
      <param name="message">Сообщение, описывающее причину создания исключения <see cref="T:System.Configuration.ConfigurationException" />.</param>
      <param name="filename">Путь к файлу конфигурации, который привел к вызову данного исключения <see cref="T:System.Configuration.ConfigurationException" />.</param>
      <param name="line">Номер строки в файле конфигурации, в которой возникло данное исключение <see cref="T:System.Configuration.ConfigurationException" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.String,System.Xml.XmlNode)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ConfigurationException" />.</summary>
      <param name="message">Сообщение, описывающее причину создания исключения <see cref="T:System.Configuration.ConfigurationException" />.</param>
      <param name="node">Объект <see cref="T:System.Xml.XmlNode" />, который вызвал исключение <see cref="T:System.Configuration.ConfigurationException" />.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationException.BareMessage">
      <summary>Получает описание причины возникновения данного исключения конфигурации.</summary>
      <returns>Описание причины создания исключения <see cref="T:System.Configuration.ConfigurationException" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationException.Filename">
      <summary>Получает путь к файлу конфигурации, который привел к возникновению данного исключения конфигурации.</summary>
      <returns>Путь к файлу конфигурации, который привел к возникновению данного исключения <see cref="T:System.Configuration.ConfigurationException" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Задает объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> с именем файла и номером строки, в которых возникло данное исключение конфигурации.</summary>
      <param name="info">Объект, содержащий сведения о выполнении сериализации.</param>
      <param name="context">Контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.GetXmlNodeFilename(System.Xml.XmlNode)">
      <summary>Получает путь к файлу конфигурации, из которого загружался внутренний объект <see cref="T:System.Xml.XmlNode" />, когда возникло данное исключение конфигурации.</summary>
      <param name="node">Объект <see cref="T:System.Xml.XmlNode" />, который стал причиной создания исключения <see cref="T:System.Configuration.ConfigurationException" />.</param>
      <returns>Объект <see langword="string" />, представляющий имя файла узла.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationException.GetXmlNodeLineNumber(System.Xml.XmlNode)">
      <summary>Получает номер строки в файле конфигурации, которую представлял внутренний объект <see cref="T:System.Xml.XmlNode" />, когда возникло данное исключение конфигурации.</summary>
      <param name="node">Объект <see cref="T:System.Xml.XmlNode" />, который стал причиной создания исключения <see cref="T:System.Configuration.ConfigurationException" />.</param>
      <returns>Значение <see langword="int" />, представляющее номер строки узла.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationException.Line">
      <summary>Получает номер строки в файле конфигурации, в которой возникло данное исключение.</summary>
      <returns>Номер строки в файле конфигурации, в которой возникло данное исключение <see cref="T:System.Configuration.ConfigurationException" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationException.Message">
      <summary>Получает расширенное описание причины возникновения данного исключения конфигурации.</summary>
      <returns>Расширенное описание причины вызова данного исключения <see cref="T:System.Configuration.ConfigurationException" />.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationFileMap">
      <summary>Определяет сопоставление файла конфигурации для файла конфигурации компьютера.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationFileMap.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ConfigurationFileMap" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationFileMap.#ctor(System.String)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Configuration.ConfigurationFileMap" /> согласно указанному параметру.</summary>
      <param name="machineConfigFilename">Имя файла конфигурации компьютера.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationFileMap.Clone">
      <summary>Создает копию существующего объекта <see cref="T:System.Configuration.ConfigurationFileMap" />.</summary>
      <returns>Объект <see cref="T:System.Configuration.ConfigurationFileMap" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationFileMap.MachineConfigFilename">
      <summary>Получает или задает имя файла конфигурации компьютера.</summary>
      <returns>Имя файла конфигурации машины.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationLocation">
      <summary>Представляет элемент <see langword="location" /> в файле конфигурации.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationLocation.OpenConfiguration">
      <summary>Создает экземпляр объекта конфигурации.</summary>
      <returns>Объект конфигурации.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationLocation.Path">
      <summary>Возвращает относительный путь к ресурсу, параметры конфигурации которого представлены данным <see cref="T:System.Configuration.ConfigurationLocation" /> объектом.</summary>
      <returns>Относительный путь к ресурсу, параметры конфигурации которого представлены <see cref="T:System.Configuration.ConfigurationLocation" />.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationLocationCollection">
      <summary>Содержит коллекцию объектов <see cref="T:System.Configuration.ConfigurationLocationCollection" />.</summary>
    </member>
    <member name="P:System.Configuration.ConfigurationLocationCollection.Item(System.Int32)">
      <summary>Возвращает объект <see cref="T:System.Configuration.ConfigurationLocationCollection" /> по указанному индексу.</summary>
      <param name="index">Расположение индекса возвращаемого объекта <see cref="T:System.Configuration.ConfigurationLocationCollection" />.</param>
      <returns>Параметр <see cref="T:System.Configuration.ConfigurationLocationCollection" /> по указанному индексу.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationLockCollection">
      <summary>Содержит коллекцию заблокированных объектов конфигурации. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.Add(System.String)">
      <summary>Блокирует объект конфигурации, добавляя его в коллекцию.</summary>
      <param name="name">Имя объекта конфигурации.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Возникает, если <paramref name="name" /> не совпадает с объектом конфигурации, имеющимся в коллекции.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.AttributeList">
      <summary>Получает список объектов конфигурации, содержащихся в коллекции.</summary>
      <returns>Строка с разделителем-запятой, перечисляющая заблокированных объекты конфигурации в коллекцию.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.Clear">
      <summary>Удаляет все объекты конфигурации из коллекции.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.Contains(System.String)">
      <summary>Проверяет, заблокирован ли указанный объект конфигурации.</summary>
      <param name="name">Имя проверяемого объекта конфигурации.</param>
      <returns>Значение <see langword="true" />, если коллекция <see cref="T:System.Configuration.ConfigurationLockCollection" /> содержит указанный объект конфигурации; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.CopyTo(System.String[],System.Int32)">
      <summary>Копирует всю коллекцию <see cref="T:System.Configuration.ConfigurationLockCollection" /> в совместимый одномерный массив <see cref="T:System.Array" />, начиная с указанного индекса конечного массива.</summary>
      <param name="array">Одномерный массив <see cref="T:System.Array" />, в который копируются элементы из коллекции <see cref="T:System.Configuration.ConfigurationLockCollection" />. Массив <see cref="T:System.Array" /> должен иметь индексацию, начинающуюся с нуля.</param>
      <param name="index">Отсчитываемый от нуля индекс в массиве <paramref name="array" />, указывающий начало копирования.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.Count">
      <summary>Получает число заблокированных объектов конфигурации, содержащихся в коллекции.</summary>
      <returns>Число блокированных объектов конфигурации, содержащихся в коллекции.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.GetEnumerator">
      <summary>Получает <see cref="T:System.Collections.IEnumerator" /> объект, который используется для просмотра этой коллекции <see cref="T:System.Configuration.ConfigurationLockCollection" />.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.HasParentElements">
      <summary>Получает значение, указывающее, содержит ли коллекция заблокированных объектов родительские элементы.</summary>
      <returns>
        <see langword="true" />, если коллекция <see cref="T:System.Configuration.ConfigurationLockCollection" /> имеет родительские элементы; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.IsModified">
      <summary>Получает значение, указывающее, была ли коллекция изменена.</summary>
      <returns>
        <see langword="true" />, если коллекция <see cref="T:System.Configuration.ConfigurationLockCollection" /> была изменена; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.IsReadOnly(System.String)">
      <summary>Проверяет, является ли указанный объект конфигурации доступным только для чтения.</summary>
      <param name="name">Имя проверяемого объекта конфигурации.</param>
      <returns>Значение <see langword="true" />, если указанный объект конфигурации в <see cref="T:System.Configuration.ConfigurationLockCollection" /> доступен только для чтения; в противном случае — значение <see langword="false" />.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Указанный объект в коллекции не найден.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.IsSynchronized">
      <summary>Получает значение, указывающее, синхронизирована ли коллекция.</summary>
      <returns>Значение <see langword="true" />, если коллекция <see cref="T:System.Configuration.ConfigurationLockCollection" />синхронизирована; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.Remove(System.String)">
      <summary>Удаляет объект конфигурации из коллекции.</summary>
      <param name="name">Имя объекта конфигурации.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Возникает, если <paramref name="name" /> не совпадает с объектом конфигурации, имеющимся в коллекции.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.SetFromList(System.String)">
      <summary>Блокирует набор объектов конфигурации согласно представленному списку.</summary>
      <param name="attributeList">Строка с разделителями-запятыми.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Происходит, когда элемент в параметре <paramref name="attributeList" /> не является допустимым блокируемым атрибутом конфигурации.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.SyncRoot">
      <summary>Получает объект, используемый для синхронизации доступа к указанной коллекции <see cref="T:System.Configuration.ConfigurationLockCollection" />.</summary>
      <returns>Объект, используемый для синхронизации доступа к указанной коллекции <see cref="T:System.Configuration.ConfigurationLockCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Копирует всю коллекцию <see cref="T:System.Configuration.ConfigurationLockCollection" /> в совместимый одномерный массив <see cref="T:System.Array" />, начиная с указанного индекса конечного массива.</summary>
      <param name="array">Одномерный массив класса <see cref="T:System.Array" />, который является целевым массивом для элементов, копируемых из коллекции <see cref="T:System.Configuration.ConfigurationLockCollection" />. Массив <see cref="T:System.Array" /> должен иметь индексацию, начинающуюся с нуля.</param>
      <param name="index">Отсчитываемый от нуля индекс в массиве <paramref name="array" />, указывающий начало копирования.</param>
    </member>
    <member name="T:System.Configuration.ConfigurationManager">
      <summary>Предоставляет доступ к файлам конфигурации для клиентских приложений. Этот класс не наследуется.</summary>
    </member>
    <member name="P:System.Configuration.ConfigurationManager.AppSettings">
      <summary>Получает данные <see cref="T:System.Configuration.AppSettingsSection" /> для конфигурации текущего приложения по умолчанию.</summary>
      <returns>Объект, содержащий содержимое <see cref="T:System.Configuration.AppSettingsSection" /> объекта для конфигурации текущего приложения по умолчанию. <see cref="T:System.Collections.Specialized.NameValueCollection" /></returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Не удалось извлечь объект <see cref="T:System.Collections.Specialized.NameValueCollection" /> с параметрами приложения.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationManager.ConnectionStrings">
      <summary>Получает данные <see cref="T:System.Configuration.ConnectionStringsSection" /> для конфигурации текущего приложения по умолчанию.</summary>
      <returns>Объект, содержащий содержимое <see cref="T:System.Configuration.ConnectionStringsSection" /> объекта для конфигурации текущего приложения по умолчанию. <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /></returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Не удалось получить объект <see cref="T:System.Configuration.ConnectionStringSettingsCollection" />.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.GetSection(System.String)">
      <summary>Извлекает указанный раздел конфигурации для конфигурации по умолчанию текущего приложения.</summary>
      <param name="sectionName">Путь и имя раздела конфигурации. Имена узлов разделяются косой чертой, например system.net/mailSettings/smtp.</param>
      <returns>Указанный объект <see cref="T:System.Configuration.ConfigurationSection" /> или значение <see langword="null" />, если раздел не существует.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Не удалось загрузить файл конфигурации.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.Configuration.ConfigurationUserLevel)">
      <summary>Открывает файл конфигурации для текущего приложения в качестве объекта <see cref="T:System.Configuration.Configuration" />.</summary>
      <param name="userLevel">Объект <see cref="T:System.Configuration.ConfigurationUserLevel" />, для которого открывается конфигурация.</param>
      <returns>Объект <see cref="T:System.Configuration.Configuration" />.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Не удалось загрузить файл конфигурации.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.String)">
      <summary>Открывает указанный файл конфигурации клиента в качестве объекта <see cref="T:System.Configuration.Configuration" />.</summary>
      <param name="exePath">Путь к исполняемому файлу (EXE-файлу).</param>
      <returns>Объект <see cref="T:System.Configuration.Configuration" />.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Не удалось загрузить файл конфигурации.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenMachineConfiguration">
      <summary>Открывает файл конфигурации компьютера на текущем компьютере в качестве объекта <see cref="T:System.Configuration.Configuration" />.</summary>
      <returns>Объект <see cref="T:System.Configuration.Configuration" />.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Не удалось загрузить файл конфигурации.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel)">
      <summary>Открывает указанный файл конфигурации клиента в качестве объекта <see cref="T:System.Configuration.Configuration" />, который использует указанные сопоставление файлов и уровень пользователя.</summary>
      <param name="fileMap">Объект <see cref="T:System.Configuration.ExeConfigurationFileMap" />, который ссылается на файл конфигурации, используемый вместо файла конфигурации приложения по умолчанию.</param>
      <param name="userLevel">Объект <see cref="T:System.Configuration.ConfigurationUserLevel" />, для которого открывается конфигурация.</param>
      <returns>Объект конфигурации.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Не удалось загрузить файл конфигурации.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel,System.Boolean)">
      <summary>Открывает указанный файл конфигурации клиента в качестве объекта <see cref="T:System.Configuration.Configuration" />, который использует указанное сопоставление файлов, уровень пользователя и параметр предварительной загрузки.</summary>
      <param name="fileMap">Объект <see cref="T:System.Configuration.ExeConfigurationFileMap" />, который ссылается на файл конфигурации, используемый вместо файла конфигурации приложения по умолчанию.</param>
      <param name="userLevel">Объект <see cref="T:System.Configuration.ConfigurationUserLevel" /> , для которого открывается конфигурация.</param>
      <param name="preLoad">Значение <see langword="true" /> для предварительной загрузки всех групп разделов и разделов; в противном случае — значение <see langword="false" />.</param>
      <returns>Объект конфигурации.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Не удалось загрузить файл конфигурации.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration(System.Configuration.ConfigurationFileMap)">
      <summary>Открывает файл конфигурации компьютера в качестве объекта <see cref="T:System.Configuration.Configuration" />, который использует указанное сопоставление файлов.</summary>
      <param name="fileMap">Объект <see cref="T:System.Configuration.ExeConfigurationFileMap" />, который ссылается на файл конфигурации, используемый вместо файла конфигурации приложения по умолчанию.</param>
      <returns>Объект <see cref="T:System.Configuration.Configuration" />.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Не удалось загрузить файл конфигурации.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.RefreshSection(System.String)">
      <summary>Обновляет раздел с заданным именем, чтобы при следующем извлечении он повторно считывался с диска.</summary>
      <param name="sectionName">Имя раздела конфигурации, или имя пути и раздела конфигурации раздела для обновления.</param>
    </member>
    <member name="T:System.Configuration.ConfigurationProperty">
      <summary>Представляет атрибут или дочерний элемент конфигурации. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ConfigurationProperty" />.</summary>
      <param name="name">Имя сущности конфигурации.</param>
      <param name="type">Тип сущности конфигурации.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ConfigurationProperty" />.</summary>
      <param name="name">Имя сущности конфигурации.</param>
      <param name="type">Тип сущности конфигурации.</param>
      <param name="defaultValue">Значение по умолчанию сущности конфигурации.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ConfigurationProperty" />.</summary>
      <param name="name">Имя сущности конфигурации.</param>
      <param name="type">Тип сущности конфигурации.</param>
      <param name="defaultValue">Значение по умолчанию сущности конфигурации.</param>
      <param name="typeConverter">Тип применяемого преобразователя.</param>
      <param name="validator">Используемый проверяющий элемент управления.</param>
      <param name="options">Одно из значений перечисления <see cref="T:System.Configuration.ConfigurationPropertyOptions" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ConfigurationProperty" />.</summary>
      <param name="name">Имя сущности конфигурации.</param>
      <param name="type">Тип сущности конфигурации.</param>
      <param name="defaultValue">Значение по умолчанию сущности конфигурации.</param>
      <param name="typeConverter">Тип применяемого преобразователя.</param>
      <param name="validator">Используемый проверяющий элемент управления.</param>
      <param name="options">Одно из значений перечисления <see cref="T:System.Configuration.ConfigurationPropertyOptions" />.</param>
      <param name="description">Описание сущности конфигурации.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.Configuration.ConfigurationPropertyOptions)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ConfigurationProperty" />.</summary>
      <param name="name">Имя сущности конфигурации.</param>
      <param name="type">Тип сущности конфигурации.</param>
      <param name="defaultValue">Значение по умолчанию сущности конфигурации.</param>
      <param name="options">Одно из значений перечисления <see cref="T:System.Configuration.ConfigurationPropertyOptions" />.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.Converter">
      <summary>Возвращает объект <see cref="T:System.ComponentModel.TypeConverter" />, используемый для преобразования указанного <see cref="T:System.Configuration.ConfigurationProperty" /> в XML-представление для записи в файл конфигурации.</summary>
      <returns>Объект <see cref="T:System.ComponentModel.TypeConverter" />, используемый для преобразования указанного <see cref="T:System.Configuration.ConfigurationProperty" /> в XML представление для записи в файл конфигурации.</returns>
      <exception cref="T:System.Exception">Это значение <see cref="T:System.Configuration.ConfigurationProperty" /> не удается преобразовать.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.DefaultValue">
      <summary>Возвращает значение по умолчанию для указанного свойства <see cref="T:System.Configuration.ConfigurationProperty" />.</summary>
      <returns>Объект <see cref="T:System.Object" />, который может быть преобразован в тип, указанный свойством <see cref="P:System.Configuration.ConfigurationProperty.Type" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.Description">
      <summary>Возвращает описание, связанное с объектом <see cref="T:System.Configuration.ConfigurationProperty" />.</summary>
      <returns>Значение <see langword="string" />, описывающее свойство.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsAssemblyStringTransformationRequired">
      <summary>Указывает, требуется ли преобразование имени сборки для свойства конфигурации при сериализации для более ранней версии .NET Framework.</summary>
      <returns>Значение <see langword="true" />, если свойство требует преобразования имени сборки; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsDefaultCollection">
      <summary>Возвращает значение, указывающее, является ли свойство коллекцией по умолчанию для элемента.</summary>
      <returns>
        <see langword="true" />, если свойство представляет коллекцию по умолчанию элемента; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsKey">
      <summary>Возвращает значение, указывающее, является ли <see cref="T:System.Configuration.ConfigurationProperty" /> ключом для содержащего объекта <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <returns>
        <see langword="true" />, если указанный объект <see cref="T:System.Configuration.ConfigurationProperty" /> является ключом содержащим элемент; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsRequired">
      <summary>Возвращает значение, указывающее, требуется ли <see cref="T:System.Configuration.ConfigurationProperty" />.</summary>
      <returns>
        <see langword="true" />, если <see cref="T:System.Configuration.ConfigurationProperty" /> требуется; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsTypeStringTransformationRequired">
      <summary>Указывает, требуется ли преобразование имени типа для свойства конфигурации при сериализации для более ранней версии .NET Framework.</summary>
      <returns>Значение <see langword="true" />, если свойство требует преобразования имени типа; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsVersionCheckRequired">
      <summary>Указывает, запрашивается ли во время сериализации родительский раздел конфигурации свойства конфигурации, чтобы определить, нужно ли выполнять сериализацию свойства конфигурации в формат XML.</summary>
      <returns>Значение <see langword="true" />, если нужно запрашивать родительский раздел конфигурации; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.Name">
      <summary>Возвращает имя этого аспекта <see cref="T:System.Configuration.ConfigurationProperty" />.</summary>
      <returns>Имя <see cref="T:System.Configuration.ConfigurationProperty" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.Type">
      <summary>Возвращает тип этого объекта <see cref="T:System.Configuration.ConfigurationProperty" />.</summary>
      <returns>Объект <see cref="T:System.Type" />, представляющий тип указанного объекта <see cref="T:System.Configuration.ConfigurationProperty" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.Validator">
      <summary>Возвращает <see cref="T:System.Configuration.ConfigurationValidatorAttribute" />, используемый для проверки этого объекта <see cref="T:System.Configuration.ConfigurationProperty" />.</summary>
      <returns>Проверяющий элемент управления <see cref="T:System.Configuration.ConfigurationValidatorBase" />, используемый для проверки указанного объекта <see cref="T:System.Configuration.ConfigurationProperty" />.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationPropertyAttribute">
      <summary>Описательно инструктирует платформу .NET Framework о создании экземпляра свойства конфигурации. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyAttribute" />.</summary>
      <param name="name">Имя определенного объекта <see cref="T:System.Configuration.ConfigurationProperty" />.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.DefaultValue">
      <summary>Получает или задает значение по умолчанию для декорированного свойства.</summary>
      <returns>Объект, представляющий значение по умолчанию декорированного свойства элемента конфигурации.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection">
      <summary>Получает или задает значение, указывающее, является ли данная коллекция коллекцией свойств по умолчанию для декорированного свойства конфигурации.</summary>
      <returns>
        <see langword="true" />, если свойство представляет коллекцию по умолчанию элемента, в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.IsKey">
      <summary>Получает или задает значение, указывающее, является ли данное свойство ключевым для декорированного свойства элемента.</summary>
      <returns>
        <see langword="true" />, если данное свойство является ключевым для элемента коллекции, в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.IsRequired">
      <summary>Получает или задает значение, указывающее, требуется ли декорированное свойство элемента.</summary>
      <returns>
        <see langword="true" />, если свойство требуется, в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.Name">
      <summary>Получает имя декорированного свойства элемента конфигурации.</summary>
      <returns>Имя декорированного свойства элемента конфигурации.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.Options">
      <summary>Получает или задает <see cref="T:System.Configuration.ConfigurationPropertyOptions" /> для декорированного свойства элемента конфигурации.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Configuration.ConfigurationPropertyOptions" />, связанных с данным свойством.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationPropertyCollection">
      <summary>Представляет коллекцию свойств элементов конфигурации.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ConfigurationPropertyCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.Add(System.Configuration.ConfigurationProperty)">
      <summary>Добавляет в коллекцию свойство конфигурации.</summary>
      <param name="property">Добавляемый объект <see cref="T:System.Configuration.ConfigurationProperty" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.Clear">
      <summary>Удаляет из коллекции все объекты свойств конфигурации.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.Contains(System.String)">
      <summary>Указывает, содержится ли свойство конфигурации в этой коллекции.</summary>
      <param name="name">Идентификатор для проверяемого свойства <see cref="T:System.Configuration.ConfigurationProperty" />.</param>
      <returns>Значение <see langword="true" />, если указанное свойство <see cref="T:System.Configuration.ConfigurationProperty" /> включено в коллекцию; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.CopyTo(System.Configuration.ConfigurationProperty[],System.Int32)">
      <summary>Копирует ConfigurationPropertyCollection в массив.</summary>
      <param name="array">Массив, в который выполняется копирование.</param>
      <param name="index">Индекс, с которого начинается копирование.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyCollection.Count">
      <summary>Получает количество свойств в коллекции.</summary>
      <returns>Количество свойств в коллекции.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.GetEnumerator">
      <summary>Получает объект <see cref="T:System.Collections.IEnumerator" /> в том виде, в котором он применяется в данной коллекции.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" /> в том виде, в котором он применяется в данной коллекции.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyCollection.IsSynchronized">
      <summary>Возвращает значение, указывающее, является ли доступ к коллекции синхронизированным (потокобезопасным).</summary>
      <returns>Значение <see langword="true" />, если доступ к коллекции <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> является синхронизированным; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyCollection.Item(System.String)">
      <summary>Получает элемент коллекции с указанным именем.</summary>
      <param name="name">Возвращаемое свойство <see cref="T:System.Configuration.ConfigurationProperty" />.</param>
      <returns>Объект <see cref="T:System.Configuration.ConfigurationProperty" /> с указанным именем <paramref name="name" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.Remove(System.String)">
      <summary>Удаляет свойство конфигурации из коллекции.</summary>
      <param name="name">Объект <see cref="T:System.Configuration.ConfigurationProperty" /> для удаления.</param>
      <returns>Значение <see langword="true" />, если указанный объект <see cref="T:System.Configuration.ConfigurationProperty" /> удален; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyCollection.SyncRoot">
      <summary>Получает объект, используемый для синхронизации доступа к коллекции.</summary>
      <returns>Объект, используемый для синхронизации доступа к коллекции.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Копирует данную коллекцию в массив.</summary>
      <param name="array">Массив, в который выполняется копирование.</param>
      <param name="index">Расположение индекса, с которого начинается копирование.</param>
    </member>
    <member name="T:System.Configuration.ConfigurationPropertyOptions">
      <summary>Задает параметры, применяемые к свойству.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsAssemblyStringTransformationRequired">
      <summary>Указывает, требуется ли преобразование имени сборки для свойства конфигурации при сериализации для более ранней версии .NET Framework.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsDefaultCollection">
      <summary>Указывает, что свойство является коллекцией по умолчанию.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsKey">
      <summary>Указывает, что свойство является ключом коллекции.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsRequired">
      <summary>Указывает, что свойство является обязательным.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsTypeStringTransformationRequired">
      <summary>Указывает, требуется ли преобразование имени типа для свойства конфигурации при сериализации для более ранней версии .NET Framework.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsVersionCheckRequired">
      <summary>Указывает, запрашивается ли во время сериализации родительский раздел конфигурации свойства конфигурации, чтобы определить, нужно ли выполнять сериализацию свойства конфигурации в формат XML.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.None">
      <summary>Указывает, что к свойству не применяются параметры.</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationSaveMode">
      <summary>Определяет, какие свойства записываются в файл конфигурации.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationSaveMode.Full">
      <summary>Приводит к записи всех свойств в файл конфигурации. Это полезно при создании информационных файлов конфигурации или перемещении значений конфигурации с одного компьютера на другой.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationSaveMode.Minimal">
      <summary>Обуславливает запись в файл конфигурации только тех свойств, которые не являются унаследованными значениями.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationSaveMode.Modified">
      <summary>Обуславливает запись в файл конфигурации только измененных свойств, даже когда значение совпадает с унаследованным.</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationSection">
      <summary>Представляет раздел в файле конфигурации.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ConfigurationSection" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)">
      <summary>Считывает XML из файла конфигурации.</summary>
      <param name="reader">Объект <see cref="T:System.Xml.XmlReader" />, считывающий данные из файла конфигурации.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="reader" /> не обнаружил ни одного элемента в файле конфигурации.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.GetRuntimeObject">
      <summary>Возвращает пользовательский объект при переопределении в производном классе.</summary>
      <returns>Объект, представляющий раздел.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.IsModified">
      <summary>При реализации в производном классе указывает, был ли изменен данный элемент конфигурации с момента последнего сохранения или загрузки.</summary>
      <returns>
        <see langword="true" />, если элемент был изменен; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.ResetModified">
      <summary>Переустанавливает значение метода <see cref="M:System.Configuration.ConfigurationElement.IsModified" /> в <see langword="false" /> при реализации в производном классе.</summary>
    </member>
    <member name="P:System.Configuration.ConfigurationSection.SectionInformation">
      <summary>Возвращает объект <see cref="T:System.Configuration.SectionInformation" />, содержащий неизменяемую информацию и функциональность объекта <see cref="T:System.Configuration.ConfigurationSection" />.</summary>
      <returns>
        <see cref="T:System.Configuration.SectionInformation" />, содержащий неизменяемую информацию и функциональность объекта <see cref="T:System.Configuration.ConfigurationSection" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)">
      <summary>Создает XML-строку, содержащую разъединенное представление об объекте <see cref="T:System.Configuration.ConfigurationSection" />, как об отдельном разделе, записываемым в файл.</summary>
      <param name="parentElement">Экземпляр <see cref="T:System.Configuration.ConfigurationElement" />, используемый как родительский при выполнении операции разъединения.</param>
      <param name="name">Имя создаваемого раздела.</param>
      <param name="saveMode">Экземпляр <see cref="T:System.Configuration.ConfigurationSaveMode" />, используемый при записи в строку.</param>
      <returns>XML-строка, содержащая разъединенное представление объекта <see cref="T:System.Configuration.ConfigurationSection" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)">
      <summary>Указывает, нужно ли выполнять сериализацию указанного элемента во время сериализации иерархии объекта конфигурации для заданной целевой версии .NET Framework.</summary>
      <param name="element">Объект <see cref="T:System.Configuration.ConfigurationElement" />, для которого рассматривается возможность сериализации.</param>
      <param name="elementName">Имя объекта <see cref="T:System.Configuration.ConfigurationElement" /> в формате XML.</param>
      <param name="targetFramework">Целевая версия .NET Framework.</param>
      <returns>Значение <see langword="true" />, если свойство <paramref name="element" /> должно быть сериализовано; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)">
      <summary>Указывает, нужно ли выполнять сериализацию указанного свойства во время сериализации иерархии объекта конфигурации для заданной целевой версии .NET Framework.</summary>
      <param name="property">Объект <see cref="T:System.Configuration.ConfigurationProperty" />, для которого рассматривается возможность сериализации.</param>
      <param name="propertyName">Имя объекта <see cref="T:System.Configuration.ConfigurationProperty" /> в формате XML.</param>
      <param name="targetFramework">Целевая версия .NET Framework.</param>
      <param name="parentConfigurationElement">Родительский элемент свойства.</param>
      <returns>Значение <see langword="true" />, если свойство <paramref name="property" /> должно быть сериализовано; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)">
      <summary>Указывает, нужно ли выполнять сериализацию текущего экземпляра <see cref="T:System.Configuration.ConfigurationSection" /> во время сериализации иерархии объекта конфигурации для заданной целевой версии .NET Framework.</summary>
      <param name="targetFramework">Целевая версия .NET Framework.</param>
      <returns>Значение <see langword="true" />, если текущий раздел должен быть сериализован; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationSectionCollection">
      <summary>Представляет коллекцию связанных разделов в конфигурационном файле.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.Add(System.String,System.Configuration.ConfigurationSection)">
      <summary>Добавляет объект <see cref="T:System.Configuration.ConfigurationSection" /> в объект <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</summary>
      <param name="name">Имя добавляемого раздела.</param>
      <param name="section">Добавляемый раздел.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.Clear">
      <summary>Очищает данный объект <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.CopyTo(System.Configuration.ConfigurationSection[],System.Int32)">
      <summary>Копирует данный объект <see cref="T:System.Configuration.ConfigurationSectionCollection" /> в массив.</summary>
      <param name="array">Массив, в который копируется объект <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</param>
      <param name="index">Расположение индекса, с которого начинается копирование.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Длина <paramref name="array" /> меньше, чем значение <see cref="P:System.Configuration.ConfigurationSectionCollection.Count" /> плюс <paramref name="index" />.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionCollection.Count">
      <summary>Получает число разделов в данном объекте <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</summary>
      <returns>Целое число, представляющее количество разделов в коллекции.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.Get(System.Int32)">
      <summary>Получает указанный объект <see cref="T:System.Configuration.ConfigurationSection" />, содержащийся в данном объекте <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</summary>
      <param name="index">Индекс возвращаемого объекта <see cref="T:System.Configuration.ConfigurationSection" />.</param>
      <returns>Объект <see cref="T:System.Configuration.ConfigurationSection" />, расположенный по указанному индексу.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.Get(System.String)">
      <summary>Получает указанный объект <see cref="T:System.Configuration.ConfigurationSection" />, содержащийся в данном объекте <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</summary>
      <param name="name">Имя возвращаемого объекта <see cref="T:System.Configuration.ConfigurationSection" />.</param>
      <returns>Объект <see cref="T:System.Configuration.ConfigurationSection" /> с указанным именем.</returns>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="name" /> имеет значение null или равен пустой строке ("").</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.GetEnumerator">
      <summary>Получает перечислитель, который позволяет выполнять перебор элементов объекта <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" />, который позволяет выполнять перебор элементов объекта <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.GetKey(System.Int32)">
      <summary>Получает ключ указанного объекта <see cref="T:System.Configuration.ConfigurationSection" />, содержащегося в данном объекте <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</summary>
      <param name="index">Индекс объекта <see cref="T:System.Configuration.ConfigurationSection" />, ключ которого возвращается.</param>
      <returns>Ключ объекта <see cref="T:System.Configuration.ConfigurationSection" /> по указанному индексу.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Используется системой в процессе сериализации.</summary>
      <param name="info">Подходящий объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context">Подходящий объект <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionCollection.Item(System.Int32)">
      <summary>Получает указанный объект <see cref="T:System.Configuration.ConfigurationSection" />.</summary>
      <param name="index">Индекс возвращаемого объекта <see cref="T:System.Configuration.ConfigurationSection" />.</param>
      <returns>Объект <see cref="T:System.Configuration.ConfigurationSection" />, расположенный по указанному индексу.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionCollection.Item(System.String)">
      <summary>Получает указанный объект <see cref="T:System.Configuration.ConfigurationSection" />.</summary>
      <param name="name">Имя возвращаемого объекта <see cref="T:System.Configuration.ConfigurationSection" />.</param>
      <returns>Объект <see cref="T:System.Configuration.ConfigurationSection" /> с указанным именем.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionCollection.Keys">
      <summary>Получает ключи всем объектам <see cref="T:System.Configuration.ConfigurationSection" />, содержащимся в данном объекте <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</summary>
      <returns>Объект <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" />, содержащий ключи всех разделов в данной коллекции.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.Remove(System.String)">
      <summary>Удаляет указанный объект <see cref="T:System.Configuration.ConfigurationSection" /> из данного объекта <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</summary>
      <param name="name">Имя раздела, подлежащего удалению.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.RemoveAt(System.Int32)">
      <summary>Удаляет указанный объект <see cref="T:System.Configuration.ConfigurationSection" /> из данного объекта <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</summary>
      <param name="index">Индекс раздела, подлежащего удалению.</param>
    </member>
    <member name="T:System.Configuration.ConfigurationSectionGroup">
      <summary>Представляет группу взаимосвязанных разделов в файле конфигурации.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroup.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroup.ForceDeclaration">
      <summary>Вынуждает объявить данный объект <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroup.ForceDeclaration(System.Boolean)">
      <summary>Вынуждает объявить данный объект <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</summary>
      <param name="force">
        <see langword="true" />, если объект <see cref="T:System.Configuration.ConfigurationSectionGroup" /> должен быть прописан в файле, в противном случае — <see langword="false" />.</param>
      <exception cref="T:System.InvalidOperationException">Данный объект <see cref="T:System.Configuration.ConfigurationSectionGroup" /> является корневой группой разделов.  
-или- 
Данный объект <see cref="T:System.Configuration.ConfigurationSectionGroup" /> имеет расположение.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.IsDeclarationRequired">
      <summary>Возвращает значение, которое указывает требуется ли объявление для данного объекта <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</summary>
      <returns>
        <see langword="true" />, если этот <see cref="T:System.Configuration.ConfigurationSectionGroup" /> объявлен, в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.IsDeclared">
      <summary>Возвращает значение, которое указывает является ли объект <see cref="T:System.Configuration.ConfigurationSectionGroup" /> объявленным.</summary>
      <returns>
        <see langword="true" />, если этот <see cref="T:System.Configuration.ConfigurationSectionGroup" /> объявлен, в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.Name">
      <summary>Возвращает имя свойства данного объекта <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</summary>
      <returns>Имя свойства данного объекта <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.SectionGroupName">
      <summary>Возвращает имя группы разделов, связанных с <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</summary>
      <returns>Имя группы разделов этого объекта <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.SectionGroups">
      <summary>Возвращает объект <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" />, который содержит все объекты <see cref="T:System.Configuration.ConfigurationSectionGroup" />, являющиеся производными от данного объекта <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</summary>
      <returns>Объект <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" />, который содержит все объекты <see cref="T:System.Configuration.ConfigurationSectionGroup" />, являющиеся производными от данного объекта <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.Sections">
      <summary>Возвращает объект <see cref="T:System.Configuration.ConfigurationSectionCollection" />, который содержит все объекты <see cref="T:System.Configuration.ConfigurationSection" />, являющиеся производными от данного объекта <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</summary>
      <returns>Объект <see cref="T:System.Configuration.ConfigurationSectionCollection" />, который содержит все объекты <see cref="T:System.Configuration.ConfigurationSection" />, являющиеся производными от данного объекта <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroup.ShouldSerializeSectionGroupInTargetVersion(System.Runtime.Versioning.FrameworkName)">
      <summary>Указывает, нужно ли выполнять сериализацию текущего экземпляра <see cref="T:System.Configuration.ConfigurationSectionGroup" /> во время сериализации иерархии объекта конфигурации для заданной целевой версии .NET Framework.</summary>
      <param name="targetFramework">Целевая версия .NET Framework.</param>
      <returns>Значение <see langword="true" />, если текущая группа разделов должна сериализоваться; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.Type">
      <summary>Возвращает или задает тип для данного объекта <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</summary>
      <returns>Тип данного объекта <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</returns>
      <exception cref="T:System.InvalidOperationException">Данный объект <see cref="T:System.Configuration.ConfigurationSectionGroup" /> является корневой группой разделов.  
-или- 
Данный объект <see cref="T:System.Configuration.ConfigurationSectionGroup" /> имеет расположение.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Раздел или группа уже определены на другом уровне.</exception>
    </member>
    <member name="T:System.Configuration.ConfigurationSectionGroupCollection">
      <summary>Представляет коллекцию объектов <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Add(System.String,System.Configuration.ConfigurationSectionGroup)">
      <summary>Добавляет объект <see cref="T:System.Configuration.ConfigurationSectionGroup" /> к данному объекту <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" />.</summary>
      <param name="name">Имя добавляемого объекта <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</param>
      <param name="sectionGroup">Объект <see cref="T:System.Configuration.ConfigurationSectionGroup" />, который требуется добавить.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Clear">
      <summary>Очищает коллекцию.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.CopyTo(System.Configuration.ConfigurationSectionGroup[],System.Int32)">
      <summary>Копирует данный объект <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> в массив.</summary>
      <param name="array">Массив, в который выполняется копирование объекта.</param>
      <param name="index">Расположение индекса, с которого начинается копирование.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Длина <paramref name="array" /> меньше, чем значение <see cref="P:System.Configuration.ConfigurationSectionGroupCollection.Count" /> плюс <paramref name="index" />.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroupCollection.Count">
      <summary>Возвращает число групп разделов в коллекции.</summary>
      <returns>Целое, представляющее число групп секций в коллекции.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Get(System.Int32)">
      <summary>Возвращает указанный объект <see cref="T:System.Configuration.ConfigurationSectionGroup" />, содержащийся в коллекции.</summary>
      <param name="index">Индекс возвращаемого объекта <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</param>
      <returns>Объект <see cref="T:System.Configuration.ConfigurationSectionGroup" />, расположенный по указанному индексу.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Get(System.String)">
      <summary>Возвращает указанный объект <see cref="T:System.Configuration.ConfigurationSectionGroup" /> из коллекции.</summary>
      <param name="name">Имя возвращаемого объекта <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</param>
      <returns>Объект <see cref="T:System.Configuration.ConfigurationSectionGroup" /> с указанным именем.</returns>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="name" /> имеет значение null или равен пустой строке ("").</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.GetEnumerator">
      <summary>Возвращает перечислитель, который может выполнять итерацию по объекту <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" />.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" />, который может использоваться для итерации по объекту <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.GetKey(System.Int32)">
      <summary>Получает ключ указанного объекта <see cref="T:System.Configuration.ConfigurationSectionGroup" />, содержащегося в данном объекте <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" />.</summary>
      <param name="index">Индекс группы раздела, ключ которой возвращается.</param>
      <returns>Ключ объекта <see cref="T:System.Configuration.ConfigurationSectionGroup" /> по указанному индексу.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Используется системой в процессе сериализации.</summary>
      <param name="info">Подходящий объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context">Подходящий объект <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroupCollection.Item(System.Int32)">
      <summary>Возвращает из коллекции объект <see cref="T:System.Configuration.ConfigurationSectionGroup" /> с указанным индексом.</summary>
      <param name="index">Индекс возвращаемого объекта <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</param>
      <returns>Объект <see cref="T:System.Configuration.ConfigurationSectionGroup" />, расположенный по указанному индексу.  
В C# это свойство является индексатором класса <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroupCollection.Item(System.String)">
      <summary>Возвращает из коллекции объект <see cref="T:System.Configuration.ConfigurationSectionGroup" /> с указанным именем.</summary>
      <param name="name">Имя возвращаемого объекта <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</param>
      <returns>Объект <see cref="T:System.Configuration.ConfigurationSectionGroup" /> с указанным именем.  
В C# это свойство является индексатором класса <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroupCollection.Keys">
      <summary>Получает ключи всем объектам <see cref="T:System.Configuration.ConfigurationSectionGroup" />, содержащимся в данном объекте <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" />.</summary>
      <returns>Объект <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" />, содержащий имена всех групп разделов в коллекции.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Remove(System.String)">
      <summary>Удаляет объект <see cref="T:System.Configuration.ConfigurationSectionGroup" />, имя которого определено из данного объекта <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" />.</summary>
      <param name="name">Имя группы раздела, подлежащей удалению.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.RemoveAt(System.Int32)">
      <summary>Удаляет объект <see cref="T:System.Configuration.ConfigurationSectionGroup" />, индекс которого определен из данного объекта <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" />.</summary>
      <param name="index">Индекс группы раздела, подлежащей удалению.</param>
    </member>
    <member name="T:System.Configuration.ConfigurationSettings">
      <summary>Обеспечивает поддержку рабочих версий 1.0 и 1.1, поддерживающих чтение разделов конфигурации и общих параметров конфигурации.</summary>
    </member>
    <member name="P:System.Configuration.ConfigurationSettings.AppSettings">
      <summary>Устанавливается как доступный только для чтения <see cref="T:System.Collections.Specialized.NameValueCollection" /> в разделе параметров приложения файла конфигурации.</summary>
      <returns>Устанавливается как доступный только для чтения<see cref="T:System.Collections.Specialized.NameValueCollection" /> в разделе параметров приложения файла конфигурации.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSettings.GetConfig(System.String)">
      <summary>Возвращает <see cref="T:System.Configuration.ConfigurationSection" /> объект для проверенного имени и пути раздела конфигурации.</summary>
      <param name="sectionName">Имя и путь конфигурации, такие как system.net/settings.</param>
      <returns>Объект <see cref="T:System.Configuration.ConfigurationSection" /> для проверенного имени и пути раздела конфигурации.  
   
 <see cref="T:System.Configuration.ConfigurationSettings" /> класс обеспечивает только обратную совместимость. Следует использовать <see cref="T:System.Configuration.ConfigurationManager" /> класс, или <see cref="T:System.Web.Configuration.WebConfigurationManager" /> класс, вместо предыдущего.</returns>
      <exception cref="T:System.Configuration.ConfigurationException">Не удалось извлечь запрашиваемый раздел.</exception>
    </member>
    <member name="T:System.Configuration.ConfigurationUserLevel">
      <summary>Используется, чтобы уточнить, какой файл конфигурации будет присутствовать в объекте конфигурации.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationUserLevel.None">
      <summary>Получает <see cref="T:System.Configuration.Configuration" />, применимый ко всем пользователям.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationUserLevel.PerUserRoaming">
      <summary>Получает роуминг <see cref="T:System.Configuration.Configuration" />, применимый к текущему пользователю.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationUserLevel.PerUserRoamingAndLocal">
      <summary>Получает локальный <see cref="T:System.Configuration.Configuration" />, применимый к текущему пользователю.</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationValidatorAttribute">
      <summary>Служит базовым классом для типов атрибутов проверяющего элемента управления <see cref="N:System.Configuration" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationValidatorAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ConfigurationValidatorAttribute" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationValidatorAttribute.#ctor(System.Type)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Configuration.ConfigurationValidatorAttribute" />, используя указанный тип проверяющего элемента управления.</summary>
      <param name="validator">Тип проверяющего элемента управления для использования при создании экземпляра <see cref="T:System.Configuration.ConfigurationValidatorAttribute" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="validator" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Тип <paramref name="validator" /> не является производным объекта <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorInstance">
      <summary>Получает экземпляр атрибута проверяющего элемента управления.</summary>
      <returns>Текущий контекст <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorType">
      <summary>Получает тип атрибута проверяющего элемента управления.</summary>
      <returns>
        <see cref="T:System.Type" /> экземпляра атрибута проверяющего элемента управления.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationValidatorBase">
      <summary>Действует как базовый класс для создания проверочного класса, служащего для проверки значения объекта.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationValidatorBase.#ctor">
      <summary>Инициализирует экземпляр класса <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationValidatorBase.CanValidate(System.Type)">
      <summary>Определяет, можно ли проверить объект по типу.</summary>
      <param name="type">Тип объекта.</param>
      <returns>
        <see langword="true" />, если значение параметра <paramref name="type" /> соответствует ожидаемому <see langword="type" />, в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationValidatorBase.Validate(System.Object)">
      <summary>Определяет, является ли значение объекта допустимым.</summary>
      <param name="value">Значение объекта.</param>
    </member>
    <member name="T:System.Configuration.ConfigXmlDocument">
      <summary>Создает оболочку для соответствующего типа <see cref="T:System.Xml.XmlDocument" />, а также содержит сведения, необходимые для сообщения имени файла и номеров строк.</summary>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ConfigXmlDocument" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateAttribute(System.String,System.String,System.String)">
      <summary>Создает атрибут элемента конфигурации.</summary>
      <param name="prefix">Определение префикса.</param>
      <param name="localName">Имя, которое используется локально.</param>
      <param name="namespaceUri">URL-адрес, назначенный пространству имен.</param>
      <returns>Атрибут <see cref="P:System.Xml.Serialization.XmlAttributes.XmlAttribute" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateCDataSection(System.String)">
      <summary>Создает раздел XML CDATA.</summary>
      <param name="data">Используемые данные.</param>
      <returns>Значение <see cref="T:System.Xml.XmlCDataSection" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateComment(System.String)">
      <summary>Создает комментарий XML.</summary>
      <param name="data">Данные примечания.</param>
      <returns>Значение <see cref="T:System.Xml.XmlComment" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateElement(System.String,System.String,System.String)">
      <summary>Создает элемент конфигурации.</summary>
      <param name="prefix">Определение префикса.</param>
      <param name="localName">Имя, используемое локально.</param>
      <param name="namespaceUri">Пространство имен для URL-адреса.</param>
      <returns>Значение <see cref="T:System.Xml.XmlElement" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateSignificantWhitespace(System.String)">
      <summary>Создает пробелы.</summary>
      <param name="data">Используемые данные.</param>
      <returns>Значение <see cref="T:System.Xml.XmlSignificantWhitespace" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateTextNode(System.String)">
      <summary>Создает текстовый узел.</summary>
      <param name="text">Используемый текст.</param>
      <returns>Значение <see cref="T:System.Xml.XmlText" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateWhitespace(System.String)">
      <summary>Создает пробел.</summary>
      <param name="data">Используемые данные.</param>
      <returns>Значение <see cref="T:System.Xml.XmlWhitespace" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigXmlDocument.Filename">
      <summary>Возвращает имя файла конфигурации.</summary>
      <returns>Имя файла конфигурации.</returns>
    </member>
    <member name="P:System.Configuration.ConfigXmlDocument.LineNumber">
      <summary>Возвращает номер строки текущего узла.</summary>
      <returns>Номер строки текущего узла.</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.Load(System.String)">
      <summary>Загружает файл конфигурации.</summary>
      <param name="filename">Имя файла</param>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.LoadSingleElement(System.String,System.Xml.XmlTextReader)">
      <summary>Загружает один элемент конфигурации.</summary>
      <param name="filename">Имя файла</param>
      <param name="sourceReader">Исходный текст для считывания.</param>
    </member>
    <member name="P:System.Configuration.ConfigXmlDocument.System#Configuration#Internal#IConfigErrorInfo#Filename">
      <summary>Возвращает имя файла конфигурации.</summary>
      <returns>Имя файла.</returns>
    </member>
    <member name="P:System.Configuration.ConfigXmlDocument.System#Configuration#Internal#IConfigErrorInfo#LineNumber">
      <summary>Возвращает номер строки конфигурации.</summary>
      <returns>Номер строки.</returns>
    </member>
    <member name="T:System.Configuration.ConnectionStringSettings">
      <summary>Представляет отдельную именованную строку подключения в разделе строк подключения файла конфигурации.</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettings.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ConnectionStringSettings" />.</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettings.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ConnectionStringSettings" />.</summary>
      <param name="name">Имя строки соединения.</param>
      <param name="connectionString">Строка подключения.</param>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettings.#ctor(System.String,System.String,System.String)">
      <summary>Выполняет инициализацию нового экземпляра объекта <see cref="T:System.Configuration.ConnectionStringSettings" />.</summary>
      <param name="name">Имя строки соединения.</param>
      <param name="connectionString">Строка подключения.</param>
      <param name="providerName">Имя поставщика, используемое в строке подключения.</param>
    </member>
    <member name="P:System.Configuration.ConnectionStringSettings.ConnectionString">
      <summary>Возвращает или задает строку подключения.</summary>
      <returns>Строковое значение, назначенное свойству <see cref="P:System.Configuration.ConnectionStringSettings.ConnectionString" />.</returns>
    </member>
    <member name="P:System.Configuration.ConnectionStringSettings.Name">
      <summary>Возвращает или задает имя <see cref="T:System.Configuration.ConnectionStringSettings" />.</summary>
      <returns>Строковое значение, назначенное свойству <see cref="P:System.Configuration.ConnectionStringSettings.Name" />.</returns>
    </member>
    <member name="P:System.Configuration.ConnectionStringSettings.ProviderName">
      <summary>Возвращает или задает свойство имени поставщика.</summary>
      <returns>Свойство <see cref="P:System.Configuration.ConnectionStringSettings.ProviderName" />.</returns>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettings.ToString">
      <summary>Возвращает строковое представление объекта.</summary>
      <returns>Строковое представление объекта.</returns>
    </member>
    <member name="T:System.Configuration.ConnectionStringSettingsCollection">
      <summary>Содержит коллекцию объектов <see cref="T:System.Configuration.ConnectionStringSettings" />.</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ConnectionStringSettingsCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.Add(System.Configuration.ConnectionStringSettings)">
      <summary>Добавляет объект <see cref="T:System.Configuration.ConnectionStringSettings" /> в коллекцию.</summary>
      <param name="settings">Объект <see cref="T:System.Configuration.ConnectionStringSettings" /> для добавления в коллекцию.</param>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.Clear">
      <summary>Удаляет все объекты <see cref="T:System.Configuration.ConnectionStringSettings" /> из коллекции.</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.IndexOf(System.Configuration.ConnectionStringSettings)">
      <summary>Возвращает индекс коллекции передаваемого объекта <see cref="T:System.Configuration.ConnectionStringSettings" />.</summary>
      <param name="settings">Объект <see cref="T:System.Configuration.ConnectionStringSettings" /> в коллекции.</param>
      <returns>Индекс коллекции указанного объекта <see cref="T:System.Configuration.ConnectionStringSettingsCollection" />.</returns>
    </member>
    <member name="P:System.Configuration.ConnectionStringSettingsCollection.Item(System.Int32)">
      <summary>Возвращает или задает строку подключения в коллекции по указанному индексу.</summary>
      <param name="index">Индекс объекта <see cref="T:System.Configuration.ConnectionStringSettings" /> в коллекции.</param>
      <returns>Объект <see cref="T:System.Configuration.ConnectionStringSettings" />, расположенный по указанному индексу.</returns>
    </member>
    <member name="P:System.Configuration.ConnectionStringSettingsCollection.Item(System.String)">
      <summary>Возвращает или задает объект <see cref="T:System.Configuration.ConnectionStringSettings" /> с указанным именем в коллекции.</summary>
      <param name="name">Имя объекта <see cref="T:System.Configuration.ConnectionStringSettings" /> в коллекции.</param>
      <returns>Объект <see cref="T:System.Configuration.ConnectionStringSettings" /> с указанным именем, в противном случае — <see langword="null" />.</returns>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.Remove(System.Configuration.ConnectionStringSettings)">
      <summary>Удаляет указанный объект <see cref="T:System.Configuration.ConnectionStringSettings" /> из коллекции.</summary>
      <param name="settings">Объект <see cref="T:System.Configuration.ConnectionStringSettings" /> в коллекции.</param>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.Remove(System.String)">
      <summary>Удаляет указанный объект <see cref="T:System.Configuration.ConnectionStringSettings" /> из коллекции.</summary>
      <param name="name">Имя объекта <see cref="T:System.Configuration.ConnectionStringSettings" /> в коллекции.</param>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.RemoveAt(System.Int32)">
      <summary>Удаляет объект <see cref="T:System.Configuration.ConnectionStringSettings" /> по указанному индексу в коллекции.</summary>
      <param name="index">Индекс объекта <see cref="T:System.Configuration.ConnectionStringSettings" /> в коллекции.</param>
    </member>
    <member name="T:System.Configuration.ConnectionStringsSection">
      <summary>Обеспечивает программный доступ к разделу строк подключения файла конфигурации.</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringsSection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ConnectionStringsSection" />.</summary>
    </member>
    <member name="P:System.Configuration.ConnectionStringsSection.ConnectionStrings">
      <summary>Получает коллекцию <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> объектов <see cref="T:System.Configuration.ConnectionStringSettings" />.</summary>
      <returns>Коллекция <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> объектов <see cref="T:System.Configuration.ConnectionStringSettings" />.</returns>
    </member>
    <member name="T:System.Configuration.ContextInformation">
      <summary>Инкапсулирует сведения о контексте, связанные с объектом <see cref="T:System.Configuration.ConfigurationElement" />. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Configuration.ContextInformation.GetSection(System.String)">
      <summary>Предоставляет объект, содержащий информацию о разделе конфигурации, основанную на указанном имени раздела.</summary>
      <param name="sectionName">Имя раздела конфигурации.</param>
      <returns>Объект, содержащий определенный раздел в пределах конфигурации.</returns>
    </member>
    <member name="P:System.Configuration.ContextInformation.HostingContext">
      <summary>Возвращает контекст среды, в которой определяется свойство конфигурации.</summary>
      <returns>Объект определяет среду, в которой было определено свойство конфигурации.</returns>
    </member>
    <member name="P:System.Configuration.ContextInformation.IsMachineLevel">
      <summary>Возвращает значение, указывающее, определяется ли свойство конфигурации на уровне конфигурации компьютера.</summary>
      <returns>
        <see langword="true" />, если свойство конфигурации определено на уровне конфигурации машины, в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="T:System.Configuration.DefaultSection">
      <summary>Представляет собой основной обработчик раздела конфигурации, который выставляет XML-текст раздела конфигурации для доступа как для чтения, так и для записи.</summary>
    </member>
    <member name="M:System.Configuration.DefaultSection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.DefaultSection" />.</summary>
    </member>
    <member name="T:System.Configuration.DefaultSettingValueAttribute">
      <summary>Определяет значение по умолчанию для свойства параметров приложения.</summary>
    </member>
    <member name="M:System.Configuration.DefaultSettingValueAttribute.#ctor(System.String)">
      <summary>Инициализирует экземпляр класса <see cref="T:System.Configuration.DefaultSettingValueAttribute" />.</summary>
      <param name="value">
        <see cref="T:System.String" />, представляющий значение по умолчанию для этого свойства.</param>
    </member>
    <member name="P:System.Configuration.DefaultSettingValueAttribute.Value">
      <summary>Возвращает значение по умолчанию для свойства параметров приложения.</summary>
      <returns>
        <see cref="T:System.String" />, представляющий значение по умолчанию для этого свойства.</returns>
    </member>
    <member name="T:System.Configuration.DefaultValidator">
      <summary>Обеспечивает проверку объекта. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Configuration.DefaultValidator.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.DefaultValidator" />.</summary>
    </member>
    <member name="M:System.Configuration.DefaultValidator.CanValidate(System.Type)">
      <summary>Определяет, можно ли проверить объект по типу.</summary>
      <param name="type">Тип объекта.</param>
      <returns>
        <see langword="true" /> для всех проверяемых типов.</returns>
    </member>
    <member name="M:System.Configuration.DefaultValidator.Validate(System.Object)">
      <summary>Определяет, является ли значение объекта допустимым.</summary>
      <param name="value">Значение объекта.</param>
    </member>
    <member name="T:System.Configuration.DictionarySectionHandler">
      <summary>Предоставляет сведения о парах ключ-значение конфигурации из раздела конфигурации.</summary>
    </member>
    <member name="M:System.Configuration.DictionarySectionHandler.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.DictionarySectionHandler" />.</summary>
    </member>
    <member name="M:System.Configuration.DictionarySectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary>Создает новый обработчик конфигурации и добавляет его к коллекции обработчика раздела на основе указанных параметров.</summary>
      <param name="parent">Родительский объект.</param>
      <param name="context">Объект контекста конфигурации.</param>
      <param name="section">Узел раздела XML.</param>
      <returns>Объект конфигурации.</returns>
    </member>
    <member name="P:System.Configuration.DictionarySectionHandler.KeyAttributeName">
      <summary>Возвращает имя атрибута XML для использования ключа в паре ключ-значение.</summary>
      <returns>Строковое значение, содержащее имя ключевого атрибута.</returns>
    </member>
    <member name="P:System.Configuration.DictionarySectionHandler.ValueAttributeName">
      <summary>Возвращает имя атрибута XML для использования в качестве значения в паре ключ-значение.</summary>
      <returns>Строковое значение, содержащее имя атрибута значения.</returns>
    </member>
    <member name="T:System.Configuration.DpapiProtectedConfigurationProvider">
      <summary>Предоставляет объект <see cref="T:System.Configuration.ProtectedConfigurationProvider" />, использующий защиту данных Windows API (DPAPI) для шифрования данных конфигурации.</summary>
    </member>
    <member name="M:System.Configuration.DpapiProtectedConfigurationProvider.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.DpapiProtectedConfigurationProvider" /> значениями по умолчанию.</summary>
    </member>
    <member name="M:System.Configuration.DpapiProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)">
      <summary>Расшифровывает переданный объект <see cref="T:System.Xml.XmlNode" />.</summary>
      <param name="encryptedNode">Объект <see cref="T:System.Xml.XmlNode" /> для расшифровки.</param>
      <returns>Расшифрованный объект <see cref="T:System.Xml.XmlNode" />.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="encryptedNode" /> не имеет <see cref="P:System.Xml.XmlNode.Name" />, установленный в "EncryptedData", и <see cref="T:System.Xml.XmlNodeType" />, установленный в <see cref="F:System.Xml.XmlNodeType.Element" />.  
-или- 
 <paramref name="encryptedNode" /> не имеет дочернего узла с именем "CipherData" с дочерним узелом "CipherValue".  

или - 
Дочерний узел с именем CipherData является пустым узелом.</exception>
    </member>
    <member name="M:System.Configuration.DpapiProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)">
      <summary>Зашифровывает переданный объект <see cref="T:System.Xml.XmlNode" />.</summary>
      <param name="node">Объект <see cref="T:System.Xml.XmlNode" /> для шифровки.</param>
      <returns>Зашифрованный объект <see cref="T:System.Xml.XmlNode" />.</returns>
    </member>
    <member name="M:System.Configuration.DpapiProtectedConfigurationProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Выполняет инициализацию поставщика параметров по умолчанию.</summary>
      <param name="name">Имя используемого поставщика для объекта.</param>
      <param name="configurationValues">Коллекция значений <see cref="T:System.Collections.Specialized.NameValueCollection" />, используемая при инициализации объекта.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="configurationValues" /> содержит неопознанные установки конфигурации.</exception>
    </member>
    <member name="P:System.Configuration.DpapiProtectedConfigurationProvider.UseMachineProtection">
      <summary>Возвращает значение, указывающее, использует ли объект <see cref="T:System.Configuration.DpapiProtectedConfigurationProvider" /> защиту на уровне машины или учетной записи пользователя.</summary>
      <returns>
        <see langword="true" />, если <see cref="T:System.Configuration.DpapiProtectedConfigurationProvider" /> использует защиту на уровне машины; <see langword="false" />, если используется защита на уровне учетной записи пользователя.</returns>
    </member>
    <member name="T:System.Configuration.ElementInformation">
      <summary>Содержит метаинформацию об индивидуальном элементе в пределах конфигурации. Этот класс не наследуется.</summary>
    </member>
    <member name="P:System.Configuration.ElementInformation.Errors">
      <summary>Возвращает ошибки для связанного элемента и подэлементов.</summary>
      <returns>Коллекция, содержащая ошибки для связанного элемента и подэлементов.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.IsCollection">
      <summary>Возвращает значение, указывающее, является ли связанный объект <see cref="T:System.Configuration.ConfigurationElement" /> коллекцией <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <returns>
        <see langword="true" />, если связанный объект <see cref="T:System.Configuration.ConfigurationElement" /> является коллекцией <see cref="T:System.Configuration.ConfigurationElementCollection" />, иначе <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.IsLocked">
      <summary>Возвращает значение, определяющее, можно ли изменять связанный объект <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <returns>
        <see langword="true" />, если связанный объект <see cref="T:System.Configuration.ConfigurationElement" /> не может быть изменен, иначе <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.IsPresent">
      <summary>Возвращает значение, указывающее, находится ли связанный объект <see cref="T:System.Configuration.ConfigurationElement" /> в файле конфигурации.</summary>
      <returns>
        <see langword="true" />, если связанный объект <see cref="T:System.Configuration.ConfigurationElement" /> находится в файле конфигурации, в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.LineNumber">
      <summary>Возвращает номер строки в файле конфигурации, в котором определен связанный объект <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <returns>Номер строки в файле конфигурации, в котором определен связанный объект <see cref="T:System.Configuration.ConfigurationElement" />.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.Properties">
      <summary>Возвращает коллекцию свойств <see cref="T:System.Configuration.PropertyInformationCollection" /> в связанном объекте <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <returns>Коллекция свойств <see cref="T:System.Configuration.PropertyInformationCollection" /> в связанном объекте <see cref="T:System.Configuration.ConfigurationElement" />.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.Source">
      <summary>Возвращает исходный файл, в котором порожден связанный объект <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <returns>Исходный файл, в котором порожден связанный объект <see cref="T:System.Configuration.ConfigurationElement" />.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.Type">
      <summary>Возвращает тип связанного объекта <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <returns>Тип связанного объекта <see cref="T:System.Configuration.ConfigurationElement" />.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.Validator">
      <summary>Возвращает объект, использовавшийся для проверки связанного объекта <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <returns>Объект, использовавшийся для проверки связанного объекта <see cref="T:System.Configuration.ConfigurationElement" />.</returns>
    </member>
    <member name="T:System.Configuration.ExeConfigurationFileMap">
      <summary>Определяет сопоставление файла конфигурации для EXE-файла приложения. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Configuration.ExeConfigurationFileMap.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ExeConfigurationFileMap" />.</summary>
    </member>
    <member name="M:System.Configuration.ExeConfigurationFileMap.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ExeConfigurationFileMap" />, используя заданное имя файла конфигурации компьютера.</summary>
      <param name="machineConfigFileName">Имя файла конфигурации компьютера, которое содержит полный физический путь (например, <c>c:\Windows\Microsoft.NET\Framework\v2.0.50727\CONFIG\machine.config</c>).</param>
    </member>
    <member name="M:System.Configuration.ExeConfigurationFileMap.Clone">
      <summary>Создает копию существующего объекта <see cref="T:System.Configuration.ExeConfigurationFileMap" />.</summary>
      <returns>Объект <see cref="T:System.Configuration.ExeConfigurationFileMap" />.</returns>
    </member>
    <member name="P:System.Configuration.ExeConfigurationFileMap.ExeConfigFilename">
      <summary>Возвращает или задает имя файла конфигурации.</summary>
      <returns>Имя файла конфигурации.</returns>
    </member>
    <member name="P:System.Configuration.ExeConfigurationFileMap.LocalUserConfigFilename">
      <summary>Возвращает или задает имя файла конфигурации для локального пользователя.</summary>
      <returns>Имя файла конфигурации.</returns>
    </member>
    <member name="P:System.Configuration.ExeConfigurationFileMap.RoamingUserConfigFilename">
      <summary>Возвращает или задает имя файла конфигурации для перемещаемого пользователя.</summary>
      <returns>Имя файла конфигурации.</returns>
    </member>
    <member name="T:System.Configuration.ExeContext">
      <summary>Управляет контекстом пути для текущего приложения. Этот класс не наследуется.</summary>
    </member>
    <member name="P:System.Configuration.ExeContext.ExePath">
      <summary>Возвращает текущий путь к данному приложению.</summary>
      <returns>Строка значения содержит нынешний путь.</returns>
    </member>
    <member name="P:System.Configuration.ExeContext.UserLevel">
      <summary>Возвращает объект, представляющий уровень пути к текущему приложению.</summary>
      <returns>Объект <see cref="T:System.Configuration.ConfigurationUserLevel" />, представляющий уровень пути к текущему приложению.</returns>
    </member>
    <member name="T:System.Configuration.GenericEnumConverter">
      <summary>Преобразует между строковым типом и типом перечисления.</summary>
    </member>
    <member name="M:System.Configuration.GenericEnumConverter.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.GenericEnumConverter" />.</summary>
      <param name="typeEnum">Преобразуемый тип перечисления.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="typeEnum" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Configuration.GenericEnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Преобразует <see cref="T:System.String" /> в тип <see cref="T:System.Enum" />.</summary>
      <param name="ctx">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для преобразований типов.</param>
      <param name="ci">Объект <see cref="T:System.Globalization.CultureInfo" />, используемый в процессе преобразования.</param>
      <param name="data">Преобразуемый объект <see cref="T:System.String" />.</param>
      <returns>Тип <see cref="T:System.Enum" />, представляющий параметр <paramref name="data" />.</returns>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="data" /> имеет значение null или равен пустой строке ("").  

или - 
<paramref name="data" /> начинается с числового символа.  

или - 
<paramref name="data" /> включает пробел.</exception>
    </member>
    <member name="M:System.Configuration.GenericEnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Преобразует тип <see cref="T:System.Enum" /> в значение <see cref="T:System.String" />.</summary>
      <param name="ctx">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для преобразований типов.</param>
      <param name="ci">Объект <see cref="T:System.Globalization.CultureInfo" />, используемый в процессе преобразования.</param>
      <param name="value">Целевое значение преобразования.</param>
      <param name="type">Целевой тип преобразования.</param>
      <returns>
        <see cref="T:System.String" />, представляющий параметр <paramref name="value" />.</returns>
    </member>
    <member name="T:System.Configuration.IApplicationSettingsProvider">
      <summary>Определяет расширенные возможности для поставщиков установок для клиентских приложений.</summary>
    </member>
    <member name="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)">
      <summary>Возвращает значение указанного свойства установок для предыдущей версии того же приложения.</summary>
      <param name="context">Объект <see cref="T:System.Configuration.SettingsContext" />, описывающий текущее использование приложения.</param>
      <param name="property">
        <see cref="T:System.Configuration.SettingsProperty" />, значение которого должно быть возвращено.</param>
      <returns>Объект <see cref="T:System.Configuration.SettingsPropertyValue" />, содержащий значение указанного свойства установок, в том виде, как они были в последний раз установлены в предыдущей версии приложения; или <see langword="null" />, если установки не удается найти.</returns>
    </member>
    <member name="M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)">
      <summary>Возвращает установки, связанные с указанным приложением к значениям по умолчанию.</summary>
      <param name="context">Объект <see cref="T:System.Configuration.SettingsContext" />, описывающий текущее использование приложения.</param>
    </member>
    <member name="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
      <summary>Указывает поставщику, что приложение было модернизировано. Это дает поставщику возможность обновлять хранимые параметры подходящим образом.</summary>
      <param name="context">Объект <see cref="T:System.Configuration.SettingsContext" />, описывающий текущее использование приложения.</param>
      <param name="properties">Объект <see cref="T:System.Configuration.SettingsPropertyCollection" />, содержащий группу свойств параметров, значения которых необходимо извлечь.</param>
    </member>
    <member name="T:System.Configuration.IConfigurationSectionHandler">
      <summary>Обрабатывает доступ к конкретным разделам конфигурации.</summary>
    </member>
    <member name="M:System.Configuration.IConfigurationSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary>Создает обработчик раздела конфигурации.</summary>
      <param name="parent">Родительский объект.</param>
      <param name="configContext">Объект контекста конфигурации.</param>
      <param name="section">Узел раздела XML.</param>
      <returns>Созданный объект обработчика раздела.</returns>
    </member>
    <member name="T:System.Configuration.IConfigurationSystem">
      <summary>Предоставляет методы стандартной конфигурации.</summary>
    </member>
    <member name="M:System.Configuration.IConfigurationSystem.GetConfig(System.String)">
      <summary>Возвращает указанную конфигурацию.</summary>
      <param name="configKey">Ключ конфигурации.</param>
      <returns>Объект, представляющий конфигурацию.</returns>
    </member>
    <member name="M:System.Configuration.IConfigurationSystem.Init">
      <summary>Используется для инициализации.</summary>
    </member>
    <member name="T:System.Configuration.IdnElement">
      <summary>Предоставляет параметры конфигурации для универсального имени домена (IDN) в класс <see cref="T:System.Uri" />.</summary>
    </member>
    <member name="M:System.Configuration.IdnElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.IdnElement" />.</summary>
    </member>
    <member name="P:System.Configuration.IdnElement.Enabled">
      <summary>Получает или задает значение параметра конфигурации <see cref="T:System.Configuration.IdnElement" />.</summary>
      <returns>
        <see cref="T:System.UriIdnScope" />, содержащий параметр текущей конфигурации для обработки IDN.</returns>
    </member>
    <member name="T:System.Configuration.IgnoreSection">
      <summary>Дает определение типа оболочки для разделов конфигурации, которые не обрабатываются типами <see cref="N:System.Configuration" />.</summary>
    </member>
    <member name="M:System.Configuration.IgnoreSection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.IgnoreSection" />.</summary>
    </member>
    <member name="T:System.Configuration.IgnoreSectionHandler">
      <summary>Дает устаревшее определение обработчика раздела для разделов конфигурации, которые не обрабатываются типами <see cref="N:System.Configuration" />.</summary>
    </member>
    <member name="M:System.Configuration.IgnoreSectionHandler.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.IgnoreSectionHandler" />.</summary>
    </member>
    <member name="M:System.Configuration.IgnoreSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary>Создает новый обработчик конфигурации и добавляет указанный объект конфигурации в коллекцию обработчиков раздела.</summary>
      <param name="parent">Параметры конфигурации в соответствующем родительском разделе конфигурации.</param>
      <param name="configContext">Виртуальный путь, для которого обработчик раздела конфигурации вычисляет значения конфигурации. Обычно, этот параметр зарезервирован и хранится как <see langword="null" />.</param>
      <param name="section">
        <see cref="T:System.Xml.XmlNode" /> с обрабатываемыми сведениями о конфигурации. Предоставляет прямой доступ к XML-содержимому раздела конфигурации.</param>
      <returns>Созданный объект обработчика конфигурации.</returns>
    </member>
    <member name="T:System.Configuration.InfiniteIntConverter">
      <summary>Преобразует строку в стандартное бесконечное или целое число и обратно.</summary>
    </member>
    <member name="M:System.Configuration.InfiniteIntConverter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.InfiniteIntConverter" />.</summary>
    </member>
    <member name="M:System.Configuration.InfiniteIntConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Преобразует <see cref="T:System.String" /> в <see cref="T:System.Int32" />.</summary>
      <param name="ctx">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для преобразований типов.</param>
      <param name="ci">Объект <see cref="T:System.Globalization.CultureInfo" />, используемый в процессе преобразования.</param>
      <param name="data">Преобразуемый объект <see cref="T:System.String" />.</param>
      <returns>
        <see cref="F:System.Int32.MaxValue" />, если параметр <paramref name="data" /> равен "бесконечности" <see cref="T:System.String" />; в противном случае — <see cref="T:System.Int32" />, представляющее целое значение параметра <paramref name="data" />.</returns>
    </member>
    <member name="M:System.Configuration.InfiniteIntConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Преобразует <see cref="T:System.Int32" /> в <see cref="T:System.String" />.</summary>
      <param name="ctx">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для преобразований типов.</param>
      <param name="ci">Объект <see cref="T:System.Globalization.CultureInfo" />, используемый в процессе преобразования.</param>
      <param name="value">Целевое значение преобразования.</param>
      <param name="type">Целевой тип преобразования.</param>
      <returns>"Бесконечность" <see cref="T:System.String" />, если значение <paramref name="value" /> равно <see cref="F:System.Int32.MaxValue" />; в противном случае — <see cref="T:System.String" />, представляющее параметр <paramref name="value" />.</returns>
    </member>
    <member name="T:System.Configuration.InfiniteTimeSpanConverter">
      <summary>Преобразует строку в стандартное бесконечное <see cref="T:System.TimeSpan" /> значение и обратно.</summary>
    </member>
    <member name="M:System.Configuration.InfiniteTimeSpanConverter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.InfiniteTimeSpanConverter" />.</summary>
    </member>
    <member name="M:System.Configuration.InfiniteTimeSpanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Преобразует <see cref="T:System.String" /> в <see cref="T:System.TimeSpan" />.</summary>
      <param name="ctx">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для преобразований типов.</param>
      <param name="ci">Объект <see cref="T:System.Globalization.CultureInfo" />, используемый в процессе преобразования.</param>
      <param name="data">Преобразуемый объект <see cref="T:System.String" />.</param>
      <returns>
        <see cref="F:System.TimeSpan.MaxValue" />, если параметр <paramref name="data" /> равен "бесконечности" <see cref="T:System.String" />; в противном случае — <see cref="T:System.TimeSpan" />, представляющее значение параметра <paramref name="data" /> в минутах.</returns>
    </member>
    <member name="M:System.Configuration.InfiniteTimeSpanConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Преобразует <see cref="T:System.TimeSpan" /> в <see cref="T:System.String" />.</summary>
      <param name="ctx">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для преобразований типов.</param>
      <param name="ci">
        <see cref="T:System.Globalization.CultureInfo" />, используемый в процессе преобразования объекта.</param>
      <param name="value">Преобразуемое значение.</param>
      <param name="type">Тип преобразования.</param>
      <returns>
        <see cref="T:System.String" /> "бесконечность", если параметр <paramref name="value" /> равен <see cref="F:System.TimeSpan.MaxValue" />; в противном случае — <see cref="T:System.String" />, представляющее параметр <paramref name="value" /> в минутах.</returns>
    </member>
    <member name="T:System.Configuration.IntegerValidator">
      <summary>Выполняет проверку значения <see cref="T:System.Int32" />.</summary>
    </member>
    <member name="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.IntegerValidator" />.</summary>
      <param name="minValue">Объект <see cref="T:System.Int32" />, который указывает минимальное значение.</param>
      <param name="maxValue">Объект <see cref="T:System.Int32" />, который указывает максимальное значение.</param>
    </member>
    <member name="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.IntegerValidator" />.</summary>
      <param name="minValue">Объект <see cref="T:System.Int32" />, который указывает минимальное значение.</param>
      <param name="maxValue">Объект <see cref="T:System.Int32" />, который указывает максимальное значение.</param>
      <param name="rangeIsExclusive">Значение <see langword="true" /> указывает, что диапазон проверки является эксклюзивным. Инклюзивность означает, что проверяемое значение должно находиться в указанном диапазоне; эксклюзивность означает, что оно должно быть ниже нижней границы или выше верхней границы.</param>
    </member>
    <member name="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.IntegerValidator" />.</summary>
      <param name="minValue">Объект <see cref="T:System.Int32" />, указывающий минимальную длину значения целого числа.</param>
      <param name="maxValue">Объект <see cref="T:System.Int32" />, указывающий максимальную длину значения целого числа.</param>
      <param name="rangeIsExclusive">Значение <see cref="T:System.Boolean" />, указывающее, является ли диапазон проверки эксклюзивным.</param>
      <param name="resolution">Объект <see cref="T:System.Int32" />, указывающий значение для соответствия.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="resolution" /> меньше <see langword="0" />.  

или - 
Значение <paramref name="minValue" /> больше значения <paramref name="maxValue" />.</exception>
    </member>
    <member name="M:System.Configuration.IntegerValidator.CanValidate(System.Type)">
      <summary>Определяет, можно ли проверить тип объекта.</summary>
      <param name="type">Тип объекта.</param>
      <returns>
        <see langword="true" />, если параметр <paramref name="type" /> соответствует значению <see cref="T:System.Int32" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.IntegerValidator.Validate(System.Object)">
      <summary>Определяет, является ли значение объекта допустимым.</summary>
      <param name="value">Значение для оценки.</param>
    </member>
    <member name="T:System.Configuration.IntegerValidatorAttribute">
      <summary>Описательно инструктирует платформу .NET Framework для проверки целого числа свойства конфигурации. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Configuration.IntegerValidatorAttribute.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Configuration.IntegerValidatorAttribute" />.</summary>
    </member>
    <member name="P:System.Configuration.IntegerValidatorAttribute.ExcludeRange">
      <summary>Получает или задает значение, определяющее, включать или исключать целые числа в диапазон, определенный значениями свойств <see cref="P:System.Configuration.IntegerValidatorAttribute.MinValue" /> и <see cref="P:System.Configuration.IntegerValidatorAttribute.MaxValue" />.</summary>
      <returns>
        <see langword="true" />, если значение должно быть исключено; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.IntegerValidatorAttribute.MaxValue">
      <summary>Возвращает или задает максимальное значение, допустимое для свойства.</summary>
      <returns>Целое число, определяющее допустимое максимальное значение.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Выбранное значение меньше <see cref="P:System.Configuration.IntegerValidatorAttribute.MinValue" />.</exception>
    </member>
    <member name="P:System.Configuration.IntegerValidatorAttribute.MinValue">
      <summary>Возвращает или задает минимальное значение, допустимое для свойства.</summary>
      <returns>Целое число, определяющее допустимое минимальное значение.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Выбранное значение больше <see cref="P:System.Configuration.IntegerValidatorAttribute.MaxValue" />.</exception>
    </member>
    <member name="P:System.Configuration.IntegerValidatorAttribute.ValidatorInstance">
      <summary>Возвращает экземпляр класса <see cref="T:System.Configuration.IntegerValidator" />.</summary>
      <returns>Проверяющий экземпляр <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</returns>
    </member>
    <member name="T:System.Configuration.Internal.DelegatingConfigHost">
      <summary>Делегирует всех членов интерфейса <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> в другой экземпляр узла.</summary>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.Internal.DelegatingConfigHost" />.</summary>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.CreateConfigurationContext(System.String,System.String)">
      <summary>Создает новый контекст конфигурации.</summary>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации.</param>
      <param name="locationSubPath">Строка, представляющая вложенный путь расположения.</param>
      <returns>
        <see cref="T:System.Object" /> представляющее новый контекст конфигурации.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.CreateDeprecatedConfigContext(System.String)">
      <summary>Создает устаревший контекст конфигурации.</summary>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации.</param>
      <returns>
        <see cref="T:System.Object" /> представляющее устаревший контекст конфигурации.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.DecryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)">
      <summary>Расшифровывает и зашифровывает раздел конфигурации.</summary>
      <param name="encryptedXml">Зашифрованный раздел файла конфигурации.</param>
      <param name="protectionProvider">Объект <see cref="T:System.Configuration.ProtectedConfigurationProvider" />.</param>
      <param name="protectedConfigSection">Объект <see cref="T:System.Configuration.ProtectedConfigurationSection" />.</param>
      <returns>Строка, представляющая расшифрованный раздел конфигурации.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.DeleteStream(System.String)">
      <summary>Удаляет объект <see cref="T:System.IO.Stream" />, выполняющий операции ввода-вывода при работе с файлом конфигурации.</summary>
      <param name="streamName">Имя объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с файлом конфигурации.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.EncryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)">
      <summary>Зашифровывает раздел объекта конфигурации.</summary>
      <param name="clearTextXml">Незашифрованный раздел конфигурации.</param>
      <param name="protectionProvider">Объект <see cref="T:System.Configuration.ProtectedConfigurationProvider" />.</param>
      <param name="protectedConfigSection">Объект <see cref="T:System.Configuration.ProtectedConfigurationSection" />.</param>
      <returns>Строка, представляющая зашифрованный раздел объекта конфигурации.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetConfigPathFromLocationSubPath(System.String,System.String)">
      <summary>Возвращает путь конфигурации на основании вложенного пути расположения.</summary>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации.</param>
      <param name="locationSubPath">Строка, представляющая вложенный путь расположения.</param>
      <returns>Строка, представляющая путь конфигурации.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetConfigType(System.String,System.Boolean)">
      <summary>Возвращает <see cref="T:System.Type" />, представляющее тип конфигурации.</summary>
      <param name="typeName">Строка, представляющая тип конфигурации.</param>
      <param name="throwOnError">
        <see langword="true" /> если при возникновении ошибки должно создаваться исключение; <see langword="false" /> если при возникновении ошибки исключение не должно создаваться.</param>
      <returns>
        <see cref="T:System.Type" />, представляющее тип конфигурации.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetConfigTypeName(System.Type)">
      <summary>Возвращает строку, представляющую имя типа объекта конфигурации.</summary>
      <param name="t">Объект <see cref="T:System.Type" />.</param>
      <returns>Строка, представляющая имя типа объекта конфигурации.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetRestrictedPermissions(System.Configuration.Internal.IInternalConfigRecord,System.Security.PermissionSet@,System.Boolean@)">
      <summary>Устанавливает набор определенных разрешений в пределах объекта узла (если возможно).</summary>
      <param name="configRecord">Объект <see cref="T:System.Configuration.Internal.IInternalConfigRecord" />.</param>
      <param name="permissionSet">Объект <see cref="T:System.Security.PermissionSet" />.</param>
      <param name="isHostReady">
        <see langword="true" />, если узел закончил инициализацию; в противном случае — <see langword="false" />.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetStreamName(System.String)">
      <summary>Возвращает имя объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с файлом конфигурации.</summary>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации.</param>
      <returns>Строка, представляющая имя объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с файлом конфигурации.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetStreamNameForConfigSource(System.String,System.String)">
      <summary>Возвращает имя объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с источником конфигурации.</summary>
      <param name="streamName">Имя объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с файлом конфигурации.</param>
      <param name="configSource">Строка, представляющая источник конфигурации.</param>
      <returns>Строка, представляющая имя объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с источником конфигурации.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetStreamVersion(System.String)">
      <summary>Возвращает объект <see cref="P:System.Diagnostics.FileVersionInfo.FileVersion" />, представляющий версию объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с файлом конфигурации.</summary>
      <param name="streamName">Имя объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с файлом конфигурации.</param>
      <returns>Объект <see cref="P:System.Diagnostics.FileVersionInfo.FileVersion" />, представляющий версию объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с файлом конфигурации.</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.HasLocalConfig" />
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.HasRoamingConfig" />
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.Host">
      <summary>Возвращает или задает объект <see cref="T:System.Configuration.Internal.IInternalConfigHost" />.</summary>
      <returns>Объект <see cref="T:System.Configuration.Internal.IInternalConfigHost" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.Impersonate">
      <summary>Указывает узлу олицетворить и возвратить объект <see cref="T:System.IDisposable" />, требуемый платформой .NET Framework.</summary>
      <returns>Значение <see cref="T:System.IDisposable" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.Init(System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
      <summary>Инициализирует узел конфигурации.</summary>
      <param name="configRoot">Объект <see cref="T:System.Configuration.Internal.IInternalConfigRoot" />.</param>
      <param name="hostInitParams">Параметр объекта содержит значения, используемые для инициализации узла конфигурации.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.InitForConfiguration(System.String@,System.String@,System.String@,System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
      <summary>Инициализирует узел для конфигурации.</summary>
      <param name="locationSubPath">Строка, представляющая вложенный путь расположения (переданный по ссылке).</param>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации.</param>
      <param name="locationConfigPath">Расположение пути конфигурации.</param>
      <param name="configRoot">Корневой элемент конфигурации.</param>
      <param name="hostInitConfigurationParams">Объект параметра, представляющий параметры, используемые для инициализации узла.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsAboveApplication(System.String)">
      <summary>Возвращает значение, определяющее, будет ли конфигурация выше конфигурации приложения в иерархии конфигурации.</summary>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации.</param>
      <returns>
        <see langword="true" /> если конфигурация выше конфигурации приложения в иерархии конфигурации; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.IsAppConfigHttp" />
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsConfigRecordRequired(System.String)">
      <summary>Возвращает значение, определяющее, требуется ли запись конфигурации для инициализации конфигурации узла.</summary>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации.</param>
      <returns>
        <see langword="true" /> если запись конфигурации требуется для инициализации конфигурации узла; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition)">
      <summary>Ограничивает или разрешает определения в конфигурации узла.</summary>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации.</param>
      <param name="allowDefinition">Объект <see cref="T:System.Configuration.ConfigurationAllowDefinition" />.</param>
      <param name="allowExeDefinition">Объект <see cref="T:System.Configuration.ConfigurationAllowExeDefinition" />.</param>
      <returns>
        <see langword="true" /> если разрешение или ограничение определений в конфигурации узла выполнены успешно; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsFile(System.String)">
      <summary>Возвращает значение, определяющее, является ли путь файла, используемый объектом <see cref="T:System.IO.Stream" /> для чтения файла конфигурации, действительным.</summary>
      <param name="streamName">Имя объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с файлом конфигурации.</param>
      <returns>
        <see langword="true" /> если путь, используемый объектом <see cref="T:System.IO.Stream" /> для чтения файла конфигурации, является действительным; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsFullTrustSectionWithoutAptcaAllowed(System.Configuration.Internal.IInternalConfigRecord)">
      <summary>Возвращает значение, определяющее, будет ли раздел конфигурации требовать уровень полностью достоверного управления доступом для кода и не разрешать атрибуту <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" /> отключать неявные требования к связыванию.</summary>
      <param name="configRecord">Объект <see cref="T:System.Configuration.Internal.IInternalConfigRecord" />.</param>
      <returns>
        <see langword="true" /> если раздел конфигурации требует уровень полностью достоверного управления доступом для кода и не разрешает атрибуту <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" /> отключать неявные требования к связыванию; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsInitDelayed(System.Configuration.Internal.IInternalConfigRecord)">
      <summary>Возвращает значение, определяющее, будет ли инициализация объекта конфигурации считаться отсроченной.</summary>
      <param name="configRecord">Объект <see cref="T:System.Configuration.Internal.IInternalConfigRecord" />.</param>
      <returns>
        <see langword="true" /> если инициализация объекта конфигурации считаться отсроченной; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsLocationApplicable(System.String)">
      <summary>Возвращает значение, определяющее, будет ли объект конфигурации поддерживать теги расположения.</summary>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации.</param>
      <returns>
        <see langword="true" /> если объект конфигурации поддерживает теги расположения; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.IsRemote">
      <summary>Возвращает значение, определяющее, является ли конфигурация удаленной.</summary>
      <returns>
        <see langword="true" /> если конфигурация удаленная; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsSecondaryRoot(System.String)">
      <summary>Возвращает значение, определяющее, является ли путь конфигурации к узлу конфигурации, содержание которого должно обрабатываться как корневое.</summary>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации.</param>
      <returns>
        <see langword="true" /> если путь конфигурации к узлу конфигурации, содержание которого должно обрабатываться как корневое, в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsTrustedConfigPath(System.String)">
      <summary>Возвращает значение, определяющее, будет ли путь конфигурации доверенным.</summary>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации.</param>
      <returns>
        <see langword="true" /> если путь конфигурации доверенный; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.OpenStreamForRead(System.String)">
      <summary>Открывает объект <see cref="T:System.IO.Stream" /> для чтения файла конфигурации.</summary>
      <param name="streamName">Имя объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с файлом конфигурации.</param>
      <returns>Объект, заданный параметром <paramref name="streamName" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.OpenStreamForRead(System.String,System.Boolean)">
      <summary>Открывает объект <see cref="T:System.IO.Stream" /> для чтения файла конфигурации.</summary>
      <param name="streamName">Имя объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с файлом конфигурации.</param>
      <param name="assertPermissions">
        <see langword="true" /> чтобы утвердить разрешения; в противном случае — <see langword="false" />.</param>
      <returns>Объект, заданный параметром <paramref name="streamName" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@)">
      <summary>Открывает объект <see cref="T:System.IO.Stream" /> для записи в файл конфигурации или записи во временный файл, используемый для построения файла конфигурации. Позволяет задавать объект <see cref="T:System.IO.Stream" /> в качестве шаблона для копирования атрибутов файла.</summary>
      <param name="streamName">Имя объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с файлом конфигурации.</param>
      <param name="templateStreamName">Имя объекта <see cref="T:System.IO.Stream" />, из которого атрибуты файла должны быть скопированы как шаблон.</param>
      <param name="writeContext">Запись контекста объекта (переданный по ссылке) <see cref="T:System.IO.Stream" />.</param>
      <returns>Объект <see cref="T:System.IO.Stream" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@,System.Boolean)">
      <summary>Открывает объект <see cref="T:System.IO.Stream" /> для записи в файл конфигурации. Позволяет задавать объект <see cref="T:System.IO.Stream" /> в качестве шаблона для копирования атрибутов файла.</summary>
      <param name="streamName">Имя объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с файлом конфигурации.</param>
      <param name="templateStreamName">Имя объекта <see cref="T:System.IO.Stream" />, из которого атрибуты файла должны быть скопированы как шаблон.</param>
      <param name="writeContext">Запись контекста объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с файлом конфигурации (переданный по ссылке).</param>
      <param name="assertPermissions">
        <see langword="true" /> чтобы утвердить разрешения; в противном случае — <see langword="false" />.</param>
      <returns>Объект, указанный параметром <paramref name="streamName" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.PrefetchAll(System.String,System.String)">
      <summary>Возвращает значение, определяющее, может ли весь файл конфигурации быть прочитан определяемым объектом <see cref="T:System.IO.Stream" />.</summary>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации.</param>
      <param name="streamName">Имя объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с файлом конфигурации.</param>
      <returns>
        <see langword="true" /> если весь файл конфигурации может быть прочитан объектом <see cref="T:System.IO.Stream" /> определенным <paramref name="streamName" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.PrefetchSection(System.String,System.String)">
      <summary>Указывает объект <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> для чтения определенного раздела связанного с ним файла конфигурации.</summary>
      <param name="sectionGroupName">Строка, представляющая имя группы раздела в файле конфигурации.</param>
      <param name="sectionName">Строка, представляющая имя раздела в файле конфигурации.</param>
      <returns>
        <see langword="true" /> если раздел файла конфигурации определенный <paramref name="sectionGroupName" /> и параметры <paramref name="sectionName" /> могут быть прочитаны объектом <see cref="T:System.IO.Stream" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.RefreshConfigPaths" />
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.RequireCompleteInit(System.Configuration.Internal.IInternalConfigRecord)">
      <summary>Указывает, что запись новой конфигурации требует полную инициализацию.</summary>
      <param name="configRecord">Объект <see cref="T:System.Configuration.Internal.IInternalConfigRecord" />.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.StartMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)">
      <summary>Указывает узлу отслеживать связанный объект <see cref="T:System.IO.Stream" /> для изменений в файле конфигурации.</summary>
      <param name="streamName">Имя объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с файлом конфигурации.</param>
      <param name="callback">Объект <see cref="T:System.Configuration.Internal.StreamChangeCallback" /> для получения возвращенных данных, которые представляют изменения в файле конфигурации.</param>
      <returns>Экземпляр <see cref="T:System.Object" />, содержащий измененные параметры конфигурации.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.StopMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)">
      <summary>Указывает объекту узла остановить отслеживание связанного объекта <see cref="T:System.IO.Stream" /> для изменений в файле конфигурации.</summary>
      <param name="streamName">Имя объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с файлом конфигурации.</param>
      <param name="callback">Объект <see cref="T:System.Configuration.Internal.StreamChangeCallback" />.</param>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.SupportsChangeNotifications">
      <summary>Возвращает значение, определяющее, будет ли конфигурация узла поддерживать уведомления изменения.</summary>
      <returns>
        <see langword="true" /> если узел поддерживает уведомления изменения; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.SupportsLocation">
      <summary>Возвращает значение, определяющее, будет ли конфигурация узла поддерживать теги расположения.</summary>
      <returns>
        <see langword="true" /> если узел поддерживает теги расположения; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.SupportsPath">
      <summary>Возвращает значение, определяющее, будет ли конфигурация узла иметь поддержку пути.</summary>
      <returns>
        <see langword="true" />, если конфигурация узла имеет поддержку пути; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.SupportsRefresh">
      <summary>Возвращает значение, определяющее, будет ли конфигурация узла поддерживать обновление.</summary>
      <returns>
        <see langword="true" />, если конфигурация узла поддерживает обновление; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.VerifyDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition,System.Configuration.Internal.IConfigErrorInfo)">
      <summary>Проверяет, что определения конфигурации разрешены для записи конфигурации.</summary>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации.</param>
      <param name="allowDefinition">Объект <see cref="P:System.Configuration.SectionInformation.AllowDefinition" />.</param>
      <param name="allowExeDefinition">Объект <see cref="T:System.Configuration.ConfigurationAllowExeDefinition" />.</param>
      <param name="errorInfo">Объект <see cref="T:System.Configuration.Internal.IConfigErrorInfo" />.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.WriteCompleted(System.String,System.Boolean,System.Object)">
      <summary>Указывает, что все записи в файл конфигурации завершены.</summary>
      <param name="streamName">Имя объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с файлом конфигурации.</param>
      <param name="success">
        <see langword="true" /> если запись в файл конфигурации успешно завершена; в противном случае — <see langword="false" />.</param>
      <param name="writeContext">Запись контекста объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с файлом конфигурации.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.WriteCompleted(System.String,System.Boolean,System.Object,System.Boolean)">
      <summary>Указывает, что все записи в файл конфигурации завершены и определяет, должны ли быть утверждены разрешения.</summary>
      <param name="streamName">Имя объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с файлом конфигурации.</param>
      <param name="success">
        <see langword="true" /> указывает, что запись успешно завершена; в противном случае — <see langword="false" />.</param>
      <param name="writeContext">Запись контекста объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с файлом конфигурации.</param>
      <param name="assertPermissions">
        <see langword="true" /> чтобы утвердить разрешения; в противном случае — <see langword="false" />.</param>
    </member>
    <member name="T:System.Configuration.Internal.IConfigErrorInfo">
      <summary>Определяет интерфейс, используемый платформой .NET Framework, для поддержки записей конфигурации, создающих ошибки.</summary>
    </member>
    <member name="P:System.Configuration.Internal.IConfigErrorInfo.Filename">
      <summary>Возвращает строку, определяющую имя файла, связанного со сведениями о конфигурации.</summary>
      <returns>Строка, определяющая имя файла.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigErrorInfo.LineNumber">
      <summary>Возвращает целочисленное значение, определяющее количество строк, связанных со сведениями о конфигурации.</summary>
      <returns>Целочисленное значение, определяющее количество строк.</returns>
    </member>
    <member name="T:System.Configuration.Internal.IConfigSystem">
      <summary>Определяет интерфейс, используемый платформой .NET Framework, для поддержки инициализации свойств конфигурации.</summary>
    </member>
    <member name="P:System.Configuration.Internal.IConfigSystem.Host">
      <summary>Возвращает узел конфигурации.</summary>
      <returns>Объект <see cref="T:System.Configuration.Internal.IInternalConfigHost" />, который используется платформой .NET Framework для инициализации свойств конфигурации приложения.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IConfigSystem.Init(System.Type,System.Object[])">
      <summary>Инициализирует объект конфигурации.</summary>
      <param name="typeConfigHost">Тип узла конфигурации.</param>
      <param name="hostInitParams">Массив параметров узла конфигурации.</param>
    </member>
    <member name="P:System.Configuration.Internal.IConfigSystem.Root">
      <summary>Возвращает корень иерархии конфигурации.</summary>
      <returns>Объект <see cref="T:System.Configuration.Internal.IInternalConfigRoot" />.</returns>
    </member>
    <member name="T:System.Configuration.Internal.IConfigurationManagerHelper">
      <summary>Определяет интерфейс, используемый платформой .NET Framework, для поддержки управления конфигурации.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IConfigurationManagerHelper.EnsureNetConfigLoaded">
      <summary>Гарантирует, что конфигурация сети загружена.</summary>
    </member>
    <member name="T:System.Configuration.Internal.IConfigurationManagerInternal">
      <summary>Определяет интерфейс, используемый платформой .NET Framework, для инициализации свойств конфигурации.</summary>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ApplicationConfigUri">
      <summary>Возвращает имя файла конфигурации, связанное с путем приложения.</summary>
      <returns>Значение строки, представляющее имя файла конфигурации.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeLocalConfigDirectory">
      <summary>Возвращает локальный каталог конфигурации приложения, основанного на сборке записей.</summary>
      <returns>Строка, представляющая локальный каталог конфигурации.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeLocalConfigPath">
      <summary>Возвращает путь локальной конфигурации приложения, основанного на сборке записей.</summary>
      <returns>Значение строки, представляющее путь перемещаемой конфигурации приложения.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeProductName">
      <summary>Возвращает имя продукта приложения, основанного на сборке записей.</summary>
      <returns>Значение строки, представляющее имя продукта приложения.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeProductVersion">
      <summary>Возвращает версию продукта приложения, основанного на сборке записей.</summary>
      <returns>Значение строки, представляющее версию продукта приложения.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeRoamingConfigDirectory">
      <summary>Возвращает перемещаемый каталог конфигурации приложения, основанного на сборке записей.</summary>
      <returns>Значение строки, представляющее перемещаемый каталог конфигурации приложения.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeRoamingConfigPath">
      <summary>Возвращает путь пользовательской перемещаемой конфигурации на основании сборки записей приложения.</summary>
      <returns>Значение строки, представляющее путь перемещаемой пользовательской конфигурации.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.MachineConfigPath">
      <summary>Возвращает путь конфигурации для файла Machine.config.</summary>
      <returns>Значение строки, представляющее путь к файлу Machine.config file.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.SetConfigurationSystemInProgress">
      <summary>Возвращает значение. представляющее состояние системы конфигурации.</summary>
      <returns>
        <see langword="true" /> если система конфигурации в процессе инициализации, в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.SupportsUserConfig">
      <summary>Возвращает значение, определяющее, поддерживаются ли параметры пользовательской конфигурации.</summary>
      <returns>
        <see langword="true" /> если система конфигурации поддерживает параметры пользовательской конфигурации; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.UserConfigFilename">
      <summary>Возвращает имя файла, используемого для хранения параметров пользовательской конфигурации.</summary>
      <returns>Строка, определяющая имя файла, используемого для хранения пользовательской конфигурации.</returns>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigClientHost">
      <summary>Определяет интерфейсы, которые позволяет внутренней инфраструктуре платформы .NET Framework настраивать конфигурацию.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.GetExeConfigPath">
      <summary>Возвращает путь к файлу конфигурации приложения.</summary>
      <returns>Строка, представляющая путь к файлу конфигурации приложения.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.GetLocalUserConfigPath">
      <summary>Возвращает строку, представляющую путь к известному локальному пользовательскому файлу конфигурации.</summary>
      <returns>Строка, представляющая путь к известному локальному пользовательскому файлу конфигурации.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.GetRoamingUserConfigPath">
      <summary>Возвращает строку, представляющая путь к известному перемещаемому файлу пользовательской конфигурации.</summary>
      <returns>Строка, представляющая путь к известному перемещаемому файлу пользовательской конфигурации.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.IsExeConfig(System.String)">
      <summary>Возвращает значение, определяющее, является ли путь файла конфигурации таким же, как известный на текущий момент путь файла конфигурации.</summary>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации приложения.</param>
      <returns>
        <see langword="true" /> если строка, представляющая путь конфигурации такая же, как путь к файлу конфигурации приложения; <see langword="false" /> если строка, представляющая путь конфигурации не такая же, как путь к файлу конфигурации приложения.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.IsLocalUserConfig(System.String)">
      <summary>Возвращает значение, определяющее, является ли путь файла конфигурации таким же, как путь файла конфигурации для известного на текущий момент локального пользователя.</summary>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации приложения.</param>
      <returns>
        <see langword="true" /> если строка, представляющая путь конфигурации такая же, как путь к известному локальному пользовательскому файлу конфигурации; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.IsRoamingUserConfig(System.String)">
      <summary>Возвращает значение, определяющее, является ли путь файла конфигурации таким же, как путь файла конфигурации для известного на текущий момент перемещаемого пользователя.</summary>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации приложения.</param>
      <returns>
        <see langword="true" /> если строка, представляющая путь конфигурации такая же, как путь к известному перемещаемому файлу пользовательской конфигурации; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigConfigurationFactory">
      <summary>Определяет интерфейсы, используемые внутренним режимом разработки API для создания объекта <see cref="T:System.Configuration.Configuration" />.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigConfigurationFactory.Create(System.Type,System.Object[])">
      <summary>Создает и инициализирует объект <see cref="T:System.Configuration.Configuration" />.</summary>
      <param name="typeConfigHost">
        <see cref="T:System.Type" /> создаваемого объекта <see cref="T:System.Configuration.Configuration" />.</param>
      <param name="hostInitConfigurationParams">Массив параметров <see cref="T:System.Object" />, который содержит параметры, которые применены к созданному объекту <see cref="T:System.Configuration.Configuration" />.</param>
      <returns>Объект <see cref="T:System.Configuration.Configuration" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigConfigurationFactory.NormalizeLocationSubPath(System.String,System.Configuration.Internal.IConfigErrorInfo)">
      <summary>Нормализует вложенный путь расположения пути к файлу конфигурации.</summary>
      <param name="subPath">Строка, представляющая путь к файлу конфигурации.</param>
      <param name="errorInfo">Экземпляр <see cref="T:System.Configuration.Internal.IConfigErrorInfo" /> или <see langword="null" />.</param>
      <returns>Строка нормализованного вложенного пути.</returns>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigHost">
      <summary>Определяет интерфейсы, используемые внутренними структурами .NET, для инициализации свойств конфигурации приложения.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.CreateConfigurationContext(System.String,System.String)">
      <summary>Создает и возвращает объект контекста для <see cref="T:System.Configuration.ConfigurationElement" /> конфигурации приложения.</summary>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации приложения.</param>
      <param name="locationSubPath">Строка, представляющая расположение вложенного пути элемента конфигурации.</param>
      <returns>Объект контекста для объекта <see cref="T:System.Configuration.ConfigurationElement" /> конфигурации приложения.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.CreateDeprecatedConfigContext(System.String)">
      <summary>Создает и возвращает устаревший объект контекста для конфигурации приложения.</summary>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации приложения.</param>
      <returns>Устаревший объект контекста для объекта конфигурации приложения.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.DecryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)">
      <summary>Расшифровывает и зашифровывает раздел конфигурации и возвращает его как строку.</summary>
      <param name="encryptedXml">Зашифрованная XML строка, представляющая раздел конфигурации.</param>
      <param name="protectionProvider">Объект <see cref="T:System.Configuration.ProtectedConfigurationProvider" />.</param>
      <param name="protectedConfigSection">Объект <see cref="T:System.Configuration.ProtectedConfigurationSection" />.</param>
      <returns>Расшифрованный раздел конфигурации как строка.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.DeleteStream(System.String)">
      <summary>Удаляет объект <see cref="T:System.IO.Stream" />, выполняющий операции ввода-вывода при работе с файлом конфигурации приложения.</summary>
      <param name="streamName">Строка, представляющая имя объекта <see cref="T:System.IO.Stream" />, выполняющего задачи ввода-вывода при работе с файлом конфигурации.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.EncryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)">
      <summary>Зашифровывает раздел конфигурации и возвращает его как строку.</summary>
      <param name="clearTextXml">XML строка, представляющая раздел конфигурации для шифрования.</param>
      <param name="protectionProvider">Объект <see cref="T:System.Configuration.ProtectedConfigurationProvider" />.</param>
      <param name="protectedConfigSection">Объект <see cref="T:System.Configuration.ProtectedConfigurationSection" />.</param>
      <returns>Зашифрованный раздел конфигурации, представленный как строка.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetConfigPathFromLocationSubPath(System.String,System.String)">
      <summary>Возвращает полный путь к файлу конфигурации приложения на основе локального вложенного пути.</summary>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации приложения.</param>
      <param name="locationSubPath">Расположение вложенного пути файла конфигурации.</param>
      <returns>Строка, представляющая полный путь к файлу конфигурации приложения.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetConfigType(System.String,System.Boolean)">
      <summary>Возвращает объект <see cref="T:System.Type" />, представляющий тип объекта конфигурации.</summary>
      <param name="typeName">Имя типа.</param>
      <param name="throwOnError">
        <see langword="true" /> создать исключение при возникновении ошибки; в противном случае — <see langword="false" /></param>
      <returns>Объект <see cref="T:System.Type" />, представляющий тип объекта конфигурации.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetConfigTypeName(System.Type)">
      <summary>Возвращает строку, представляющую имя типа из объекта <see cref="T:System.Type" />, представляющего тип конфигурации.</summary>
      <param name="t">Объект <see cref="T:System.Type" />.</param>
      <returns>Строка, представляющую имя типа из объекта <see cref="T:System.Type" />, представляющего тип конфигурации.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetRestrictedPermissions(System.Configuration.Internal.IInternalConfigRecord,System.Security.PermissionSet@,System.Boolean@)">
      <summary>Связывает конфигурацию с объектом <see cref="T:System.Security.PermissionSet" />.</summary>
      <param name="configRecord">Объект <see cref="T:System.Configuration.Internal.IInternalConfigRecord" />.</param>
      <param name="permissionSet">Объект <see cref="T:System.Security.PermissionSet" /> для связи с конфигурацией.</param>
      <param name="isHostReady">
        <see langword="true" /> указывает ,что узел конфигурации завершил построение связанных разрешений; в противном случае — <see langword="false" />.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetStreamName(System.String)">
      <summary>Возвращает строку, представляющую имя файла конфигурации, связанного с объектом <see cref="T:System.IO.Stream" />, выполняющим операции ввода-вывода при работе с файлом конфигурации.</summary>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации приложения.</param>
      <returns>Строка, представляющая имя файла конфигурации, связанного с <see cref="T:System.IO.Stream" /> операциями ввода-вывода при работе с файлом конфигурации.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetStreamNameForConfigSource(System.String,System.String)">
      <summary>Возвращает строку, представляющую имя файла конфигурации, связанного с объектом <see cref="T:System.IO.Stream" />, выполняющим операции ввода-вывода при работе с удаленным файлом конфигурации.</summary>
      <param name="streamName">Строка, представляющая имя файла конфигурации, связанного с объектом <see cref="T:System.IO.Stream" />, выполняющим операции ввода-вывода при работе с файлом конфигурации.</param>
      <param name="configSource">Строка, представляющая путь к удаленному файлу конфигурации.</param>
      <returns>Строка, представляющая имя файла конфигурации, связанного с объектом <see cref="T:System.IO.Stream" />, выполняющим операции ввода-вывода при работе с файлом конфигурации.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetStreamVersion(System.String)">
      <summary>Возвращает версию объекта <see cref="T:System.IO.Stream" />, который связан с файлом конфигурации.</summary>
      <param name="streamName">Строка, представляющая имя объекта <see cref="T:System.IO.Stream" />, выполняющего задачи ввода-вывода при работе с файлом конфигурации.</param>
      <returns>Версия объекта <see cref="T:System.IO.Stream" />, который связан с файлом конфигурации.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.Impersonate">
      <summary>Указывает узлу олицетворить и возвратить объект <see cref="T:System.IDisposable" />, требуемый внутренней структурой .NET.</summary>
      <returns>Значение <see cref="T:System.IDisposable" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.Init(System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
      <summary>Инициализирует узел конфигурации.</summary>
      <param name="configRoot">Корневой объект конфигурации.</param>
      <param name="hostInitParams">Параметр объекта содержит значения, используемые для инициализации узла конфигурации.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.InitForConfiguration(System.String@,System.String@,System.String@,System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
      <summary>Инициализирует объект конфигурации.</summary>
      <param name="locationSubPath">Расположение вложенного пути файла конфигурации.</param>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации приложения.</param>
      <param name="locationConfigPath">Строка, представляющая расположение пути конфигурации.</param>
      <param name="configRoot">Объект <see cref="T:System.Configuration.Internal.IInternalConfigRoot" />.</param>
      <param name="hostInitConfigurationParams">Параметр объекта содержит значения, используемые для инициализации узла конфигурации.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsAboveApplication(System.String)">
      <summary>Возвращает значение, определяющее, будет ли файл конфигурации расположен на более высоком уровне в иерархии конфигурации чем конфигурация приложения.</summary>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации приложения.</param>
      <returns>
        <see langword="true" /> файл конфигурации расположен на более высоком уровне в иерархии конфигурации чем конфигурация приложения; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsConfigRecordRequired(System.String)">
      <summary>Возвращает значение, определяющее, требуется ли запись дочернего элемента для пути конфигурации дочернего элемента.</summary>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации приложения.</param>
      <returns>
        <see langword="true" /> если требуется запись дочернего элемента для пути конфигурации дочернего элемента; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition)">
      <summary>Определяет, допустимы ли различные определения <see cref="T:System.Type" /> для объекта конфигурации приложения.</summary>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации приложения.</param>
      <param name="allowDefinition">Объект <see cref="T:System.Configuration.ConfigurationAllowDefinition" />.</param>
      <param name="allowExeDefinition">Объект <see cref="T:System.Configuration.ConfigurationAllowExeDefinition" />.</param>
      <returns>
        <see langword="true" /> если допустимы ли различные определения <see cref="T:System.Type" /> для объекта конфигурации приложения; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsFile(System.String)">
      <summary>Возвращает значение, определяющее, является ли путь файла, используемый объектом <see cref="T:System.IO.Stream" /> для чтения файла конфигурации, действительным.</summary>
      <param name="streamName">Строка, представляющая имя объекта <see cref="T:System.IO.Stream" />, выполняющего задачи ввода-вывода при работе с файлом конфигурации.</param>
      <returns>
        <see langword="true" /> если путь, используемый объектом <see cref="T:System.IO.Stream" /> для чтения файла конфигурации, является действительным; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsFullTrustSectionWithoutAptcaAllowed(System.Configuration.Internal.IInternalConfigRecord)">
      <summary>Возвращает значение, определяющее, будет ли раздел конфигурации требовать уровень полностью достоверного управления доступом для кода и не разрешать атрибуту <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" /> отключать неявные требования к связыванию.</summary>
      <param name="configRecord">Объект <see cref="T:System.Configuration.Internal.IInternalConfigRecord" />.</param>
      <returns>
        <see langword="true" /> если раздел конфигурации требует уровень полностью достоверного управления доступом для кода и не разрешает атрибуту <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" /> отключать неявные требования к связыванию; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsInitDelayed(System.Configuration.Internal.IInternalConfigRecord)">
      <summary>Возвращает значение, определяющее, будет ли инициализация объекта конфигурации считаться отсроченной.</summary>
      <param name="configRecord">Объект <see cref="T:System.Configuration.Internal.IInternalConfigRecord" />.</param>
      <returns>
        <see langword="true" /> если инициализация объекта конфигурации считаться отсроченной; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsLocationApplicable(System.String)">
      <summary>Возвращает значение, определяющее, будет ли объект конфигурации поддерживать теги расположения.</summary>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации приложения.</param>
      <returns>
        <see langword="true" /> если объект конфигурации поддерживает теги расположения; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigHost.IsRemote">
      <summary>Возвращает значение, определяющее, является ли конфигурация удаленной.</summary>
      <returns>
        <see langword="true" /> если конфигурация удаленная; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsSecondaryRoot(System.String)">
      <summary>Возвращает значение, определяющее, является ли путь конфигурации к узлу конфигурации, содержание которого должно обрабатываться как корневое.</summary>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации приложения.</param>
      <returns>
        <see langword="true" /> если путь конфигурации к узлу конфигурации, содержание которого должно обрабатываться как корневое, в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsTrustedConfigPath(System.String)">
      <summary>Возвращает значение, определяющее, будет ли путь конфигурации доверенным.</summary>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации приложения.</param>
      <returns>
        <see langword="true" /> если путь конфигурации доверенный; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.OpenStreamForRead(System.String)">
      <summary>Открывает <see cref="T:System.IO.Stream" /> для чтения файла конфигурации.</summary>
      <param name="streamName">Строка, представляющая имя объекта <see cref="T:System.IO.Stream" />, выполняющего задачи ввода-вывода при работе с файлом конфигурации.</param>
      <returns>Объект <see cref="T:System.IO.Stream" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.OpenStreamForRead(System.String,System.Boolean)">
      <summary>Открывает объект <see cref="T:System.IO.Stream" /> для чтения файла конфигурации.</summary>
      <param name="streamName">Строка, представляющая имя объекта <see cref="T:System.IO.Stream" />, выполняющего задачи ввода-вывода при работе с файлом конфигурации.</param>
      <param name="assertPermissions">
        <see langword="true" /> чтобы утвердить разрешения; в противном случае — <see langword="false" />.</param>
      <returns>Объект, заданный параметром <paramref name="streamName" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@)">
      <summary>Открывает объект <see cref="T:System.IO.Stream" /> для записи в файл конфигурации или записи во временный файл, используемый для построения файла конфигурации. Позволяет задавать объект <see cref="T:System.IO.Stream" /> в качестве шаблона для копирования атрибутов файла.</summary>
      <param name="streamName">Строка, представляющая имя объекта <see cref="T:System.IO.Stream" />, выполняющего задачи ввода-вывода при работе с файлом конфигурации.</param>
      <param name="templateStreamName">Имя объекта <see cref="T:System.IO.Stream" />, из которого атрибуты файла должны быть скопированы как шаблон.</param>
      <param name="writeContext">Запись контекста объекта <see cref="T:System.IO.Stream" />.</param>
      <returns>Объект <see cref="T:System.IO.Stream" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@,System.Boolean)">
      <summary>Открывает объект <see cref="T:System.IO.Stream" /> для записи в файл конфигурации. Позволяет задавать объект <see cref="T:System.IO.Stream" /> в качестве шаблона для копирования атрибутов файла.</summary>
      <param name="streamName">Строка, представляющая имя объекта <see cref="T:System.IO.Stream" />, выполняющего задачи ввода-вывода при работе с файлом конфигурации.</param>
      <param name="templateStreamName">Имя <see cref="T:System.IO.Stream" />, из которого атрибуты файла должны быть скопированы как шаблон.</param>
      <param name="writeContext">Запись контекста объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с файлом конфигурации.</param>
      <param name="assertPermissions">
        <see langword="true" /> чтобы утвердить разрешения; в противном случае — <see langword="false" />.</param>
      <returns>Объект, заданный параметром <paramref name="streamName" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.PrefetchAll(System.String,System.String)">
      <summary>Возвращает значение, определяющее, может ли весь файл конфигурации быть прочитан определяемым объектом <see cref="T:System.IO.Stream" />.</summary>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации приложения.</param>
      <param name="streamName">Строка, представляющая имя объекта <see cref="T:System.IO.Stream" />, выполняющего задачи ввода-вывода при работе с файлом конфигурации.</param>
      <returns>
        <see langword="true" /> если весь файл конфигурации может быть прочитан объектом <see cref="T:System.IO.Stream" /> определенным <paramref name="streamName" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.PrefetchSection(System.String,System.String)">
      <summary>Указывает объект <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> для чтения определенного раздела связанного с ним файла конфигурации.</summary>
      <param name="sectionGroupName">Строка, представляющая идентифицирующее имя группы раздела файла конфигурации.</param>
      <param name="sectionName">Строка, представляющая идентифицирующее имя раздела файла конфигурации.</param>
      <returns>
        <see langword="true" /> если раздел файла конфигурации определенный <paramref name="sectionGroupName" /> и <paramref name="sectionName" /> могут быть прочитаны объектом <see cref="T:System.IO.Stream" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.RequireCompleteInit(System.Configuration.Internal.IInternalConfigRecord)">
      <summary>Указывает, что запись новой конфигурации требует полную инициализацию.</summary>
      <param name="configRecord">Объект <see cref="T:System.Configuration.Internal.IInternalConfigRecord" />.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.StartMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)">
      <summary>Указывает объект <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> контролировать связанный объект <see cref="T:System.IO.Stream" /> для изменений в файле конфигурации.</summary>
      <param name="streamName">Строка, представляющая имя объекта <see cref="T:System.IO.Stream" />, выполняющего задачи ввода-вывода при работе с файлом конфигурации.</param>
      <param name="callback">Объект <see cref="T:System.Configuration.Internal.StreamChangeCallback" /> для получения возвращенных данных, которые представляют изменения в файле конфигурации.</param>
      <returns>
        <see cref="T:System.Object" />, содержащий измененные параметры конфигурации.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.StopMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)">
      <summary>Предписывает объекту <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> остановить отслеживание изменений в файле конфигурации для связанного объекта <see cref="T:System.IO.Stream" />.</summary>
      <param name="streamName">Строка, представляющая имя объекта <see cref="T:System.IO.Stream" />, выполняющего задачи ввода-вывода при работе с файлом конфигурации.</param>
      <param name="callback">Объект <see cref="T:System.Configuration.Internal.StreamChangeCallback" />.</param>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigHost.SupportsChangeNotifications">
      <summary>Возвращает значение, определяющее, будет ли конфигурация узла поддерживать уведомление изменения.</summary>
      <returns>
        <see langword="true" /> если конфигурация поддерживает уведомление изменения; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigHost.SupportsLocation">
      <summary>Возвращает значение, определяющее, будет ли конфигурация узла поддерживать теги расположения.</summary>
      <returns>
        <see langword="true" /> если конфигурация поддерживает теги расположения; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigHost.SupportsPath">
      <summary>Возвращает значение, определяющее, будет ли конфигурация узла поддерживать теги пути.</summary>
      <returns>
        <see langword="true" /> если конфигурация поддерживает теги пути; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigHost.SupportsRefresh">
      <summary>Возвращает значение, определяющее, будет ли конфигурация узла поддерживать обновление конфигурации.</summary>
      <returns>
        <see langword="true" />, если конфигурация узла поддерживает обновление конфигурации; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.VerifyDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition,System.Configuration.Internal.IConfigErrorInfo)">
      <summary>Проверяет, что определения конфигурации разрешены для записи конфигурации.</summary>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации приложения.</param>
      <param name="allowDefinition">Объект <see cref="P:System.Configuration.SectionInformation.AllowDefinition" />.</param>
      <param name="allowExeDefinition">Объект <see cref="T:System.Configuration.ConfigurationAllowExeDefinition" />.</param>
      <param name="errorInfo">Объект <see cref="T:System.Configuration.Internal.IConfigErrorInfo" />.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.WriteCompleted(System.String,System.Boolean,System.Object)">
      <summary>Указывает, что все записи в файл конфигурации завершены.</summary>
      <param name="streamName">Строка, представляющая имя объекта <see cref="T:System.IO.Stream" />, выполняющего задачи ввода-вывода при работе с файлом конфигурации.</param>
      <param name="success">
        <see langword="true" /> если запись в файл конфигурации успешно завершена; в противном случае — <see langword="false" />.</param>
      <param name="writeContext">Запись контекста объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с файлом конфигурации.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.WriteCompleted(System.String,System.Boolean,System.Object,System.Boolean)">
      <summary>Указывает, что все записи в файл конфигурации завершены и определяет, должны ли быть утверждены разрешения.</summary>
      <param name="streamName">Строка, представляющая имя объекта <see cref="T:System.IO.Stream" />, выполняющего задачи ввода-вывода при работе с файлом конфигурации.</param>
      <param name="success">
        <see langword="true" /> указывает, что запись выполнена успешно; в противном случае — <see langword="false" />.</param>
      <param name="writeContext">Запись контекста объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с файлом конфигурации.</param>
      <param name="assertPermissions">
        <see langword="true" /> чтобы утвердить разрешения; в противном случае — <see langword="false" />.</param>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigRecord">
      <summary>Определяет интерфейсы, используемые внутренними структурами .NET, для поддержки создания новых записей конфигурации.</summary>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigRecord.ConfigPath">
      <summary>Возвращает строку, представляющую путь файла конфигурации.</summary>
      <returns>Строка, представляющая путь файла конфигурации.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRecord.GetLkgSection(System.String)">
      <summary>Возвращает объект, представляющий раздел конфигурации из последнего удачного состояния (LKG) конфигурации.</summary>
      <param name="configKey">Строка, представляющая ключ для раздела конфигурации.</param>
      <returns>Экземпляр <see cref="T:System.Object" />, представляющий раздел последнего удачного состояния, определенный параметром <paramref name="configKey" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRecord.GetSection(System.String)">
      <summary>Возвращает экземпляр <see cref="T:System.Object" />, представляющий раздел файла конфигурации.</summary>
      <param name="configKey">Строка, представляющая ключ для раздела конфигурации.</param>
      <returns>Экземпляр <see cref="T:System.Object" />, представляющий раздел файла конфигурации.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigRecord.HasInitErrors">
      <summary>Возвращает значение, определяющее, будет ли возникать ошибка во время инициализации объекта конфигурации.</summary>
      <returns>
        <see langword="true" /> если возникает ошибка во время инициализации объекта конфигурации; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRecord.RefreshSection(System.String)">
      <summary>Вызывает повторную инициализацию указанного раздела объекта конфигурации.</summary>
      <param name="configKey">Строка, представляющая ключ для раздела конфигурации, который должен быть обновлен.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRecord.Remove">
      <summary>Удаляет запись конфигурации.</summary>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigRecord.StreamName">
      <summary>Возвращает имя объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с файлом конфигурации.</summary>
      <returns>Строка, представляющая имя объекта <see cref="T:System.IO.Stream" />, выполняющего задачи ввода-вывода при работе с файлом конфигурации.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRecord.ThrowIfInitErrors">
      <summary>Предоставляет разрешение объекту конфигурации создавать исключение, если ошибка происходит во время инициализации.</summary>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigRoot">
      <summary>Определяет интерфейсы, используемые внутренними структурами .NET, для поддержки корневых объектов конфигурации.</summary>
    </member>
    <member name="E:System.Configuration.Internal.IInternalConfigRoot.ConfigChanged">
      <summary>Представляет метод, обрабатывающий событие <see cref="E:System.Configuration.Internal.IInternalConfigRoot.ConfigChanged" /> объекта <see cref="T:System.Configuration.Internal.IInternalConfigRoot" />.</summary>
    </member>
    <member name="E:System.Configuration.Internal.IInternalConfigRoot.ConfigRemoved">
      <summary>Представляет метод, обрабатывающий событие <see cref="E:System.Configuration.Internal.IInternalConfigRoot.ConfigRemoved" /> объекта <see cref="T:System.Configuration.Internal.IInternalConfigRoot" />.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.GetConfigRecord(System.String)">
      <summary>Возвращает объект <see cref="T:System.Configuration.Internal.IInternalConfigRecord" />, представляющий конфигурацию, определенную путем конфигурации.</summary>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации.</param>
      <returns>Объект <see cref="T:System.Configuration.Internal.IInternalConfigRecord" />, представляющий конфигурацию, определенную <paramref name="configPath" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.GetSection(System.String,System.String)">
      <summary>Возвращает <see cref="T:System.Object" />, представляющий данные в разделе файла конфигурации.</summary>
      <param name="section">Строка, представляющая раздел файла конфигурации.</param>
      <param name="configPath">Строка, представляющая путь к файлу конфигурации.</param>
      <returns>
        <see cref="T:System.Object" />, представляющий данные в разделе файла конфигурации.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.GetUniqueConfigPath(System.String)">
      <summary>Возвращает значение, представляющее путь файла ближайшего предка конфигурации, который имеет данные конфигурации.</summary>
      <param name="configPath">Путь файла конфигурации.</param>
      <returns>Строка, представляющая путь файла ближайшего предка конфигурации, который имеет данные конфигурации.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.GetUniqueConfigRecord(System.String)">
      <summary>Возвращает объект <see cref="T:System.Configuration.Internal.IInternalConfigRecord" />, представляющий запись уникальной конфигурации для данного пути конфигурации.</summary>
      <param name="configPath">Путь файла конфигурации.</param>
      <returns>Объект <see cref="T:System.Configuration.Internal.IInternalConfigRecord" />, представляющий запись уникальной конфигурации для данного пути конфигурации.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.Init(System.Configuration.Internal.IInternalConfigHost,System.Boolean)">
      <summary>Инициализирует объект конфигурации.</summary>
      <param name="host">Объект <see cref="T:System.Configuration.Internal.IInternalConfigHost" />.</param>
      <param name="isDesignTime">
        <see langword="true" /> в случае режима разработки; <see langword="false" /> в случае среды выполнения.</param>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigRoot.IsDesignTime">
      <summary>Возвращает значение, определяющее, будет ли конфигурация являться конфигурацией режима разработки.</summary>
      <returns>
        <see langword="true" /> в случае, если конфигурация является конфигурацией режима разработки; <see langword="false" /> в случае, если конфигурация не является конфигурацией режима разработки.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.RemoveConfig(System.String)">
      <summary>Находит и удаляет записи конфигурации и все ее дочерние элементы для данного пути конфигурации.</summary>
      <param name="configPath">Путь файла конфигурации.</param>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigSettingsFactory">
      <summary>Определяет интерфейс, используемый системой конфигурации для установки класса <see cref="T:System.Configuration.ConfigurationSettings" />.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigSettingsFactory.CompleteInit">
      <summary>Указывает, что инициализация системы конфигурации завершена.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigSettingsFactory.SetConfigurationSystem(System.Configuration.Internal.IInternalConfigSystem,System.Boolean)">
      <summary>Предоставляет иерархические параметры конфигурации и расширения, определенные для ASP.NET в системе конфигурации.</summary>
      <param name="internalConfigSystem">Объект <see cref="T:System.Configuration.Internal.IInternalConfigSystem" />, который используется классом <see cref="T:System.Configuration.ConfigurationSettings" />.</param>
      <param name="initComplete">
        <see langword="true" /> если процесс инициализации системы конфигурации завершен, в противном случае — <see langword="false" />.</param>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigSystem">
      <summary>Определяет интерфейс, используемый платформой .NET Framework, для инициализации свойств конфигурации приложения.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigSystem.GetSection(System.String)">
      <summary>Возвращает объект конфигурации на основании определенного ключа.</summary>
      <param name="configKey">Значение ключа конфигурации.</param>
      <returns>Объект конфигурации.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigSystem.RefreshConfig(System.String)">
      <summary>Обновляет систему конфигурации на основании определенного имени раздела.</summary>
      <param name="sectionName">Имя раздела конфигурации.</param>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigSystem.SupportsUserConfig">
      <summary>Возвращает значение, определяющее, поддерживается ли пользовательская конфигурация.</summary>
      <returns>
        <see langword="true" />, если пользовательская конфигурация поддерживается; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="T:System.Configuration.Internal.InternalConfigEventArgs">
      <summary>Определяет класс, который позволяет инфраструктуре платформы .NET Framework определить аргументы события для событий конфигурации.</summary>
    </member>
    <member name="M:System.Configuration.Internal.InternalConfigEventArgs.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.Internal.InternalConfigEventArgs" />.</summary>
      <param name="configPath">Путь конфигурации.</param>
    </member>
    <member name="P:System.Configuration.Internal.InternalConfigEventArgs.ConfigPath">
      <summary>Возвращает или устанавливает путь конфигурации, относительно объекта <see cref="T:System.Configuration.Internal.InternalConfigEventArgs" />.</summary>
      <returns>Значение строки, определяющее путь конфигурации.</returns>
    </member>
    <member name="T:System.Configuration.Internal.InternalConfigEventHandler">
      <summary>Определяет класс, используемый инфраструктурой платформы .NET Framework, для поддержки событий конфигурации.</summary>
      <param name="sender">Объект источника события.</param>
      <param name="e">Аргумент события конфигурации.</param>
    </member>
    <member name="T:System.Configuration.Internal.StreamChangeCallback">
      <summary>Представляет метод для узелов, который позволяет делать вызов при контролируемом изменении потока.</summary>
      <param name="streamName">Имя объекта <see cref="T:System.IO.Stream" />, выполняющего операции ввода-вывода при работе с файлом конфигурации.</param>
    </member>
    <member name="T:System.Configuration.IPersistComponentSettings">
      <summary>Определяет стандартную функциональность для элементов управления или библиотек, которые хранят и извлекают параметры приложения.</summary>
    </member>
    <member name="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings">
      <summary>Считывает параметры приложения элемента управления в их соответствующие свойства и обновляет состояние элемента управления.</summary>
    </member>
    <member name="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings">
      <summary>Повторно загружает свойства параметров приложения элемента управления относительно значений по умолчанию.</summary>
    </member>
    <member name="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings">
      <summary>Сохраняет свойства параметров приложения элемента управления.</summary>
    </member>
    <member name="P:System.Configuration.IPersistComponentSettings.SaveSettings">
      <summary>Возвращает или задает значение, указывающее на то, должен ли элемент управления автоматически сохранять свойства параметров приложения.</summary>
      <returns>
        <see langword="true" />, если элемент управления должен автоматически сохранять свое состояние, иначе <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.IPersistComponentSettings.SettingsKey">
      <summary>Возвращает или задает значение ключа параметров приложения для текущего экземпляра элемента управления.</summary>
      <returns>Строка <see cref="T:System.String" />, содержащая ключ параметров для текущего экземпляра элемента управления.</returns>
    </member>
    <member name="T:System.Configuration.IriParsingElement">
      <summary>Предоставляет параметры конфигурации для универсального идентификатора ресурса (IRI) в класс <see cref="T:System.Uri" />.</summary>
    </member>
    <member name="M:System.Configuration.IriParsingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.IriParsingElement" />.</summary>
    </member>
    <member name="P:System.Configuration.IriParsingElement.Enabled">
      <summary>Получает или задает значение параметра конфигурации <see cref="T:System.Configuration.IriParsingElement" />.</summary>
      <returns>Логическое выражение показывает, активирован ли универсальный идентификатор ресурса (IRI).</returns>
    </member>
    <member name="T:System.Configuration.ISettingsProviderService">
      <summary>Обеспечивает интерфейс для ввода параметров приложения от другого поставщика.</summary>
    </member>
    <member name="M:System.Configuration.ISettingsProviderService.GetSettingsProvider(System.Configuration.SettingsProperty)">
      <summary>Возвращает параметры поставщика совместимые со свойством определенных параметров.</summary>
      <param name="property">
        <see cref="T:System.Configuration.SettingsProperty" /> требует сериализации.</param>
      <returns>Если найдена <see cref="T:System.Configuration.SettingsProvider" />, что может сохранить заданные параметры, иначе <see langword="null" />.</returns>
    </member>
    <member name="T:System.Configuration.KeyValueConfigurationCollection">
      <summary>Содержит коллекцию объектов <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</summary>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.KeyValueConfigurationCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.Add(System.Configuration.KeyValueConfigurationElement)">
      <summary>Добавляет объект <see cref="T:System.Configuration.KeyValueConfigurationElement" /> в коллекцию на основе указанных параметрах.</summary>
      <param name="keyValue">Объект <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</param>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.Add(System.String,System.String)">
      <summary>Добавляет объект <see cref="T:System.Configuration.KeyValueConfigurationElement" /> в коллекцию на основе указанных параметрах.</summary>
      <param name="key">Строка, определяющая ключ.</param>
      <param name="value">Строка, определяющая значение.</param>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationCollection.AllKeys">
      <summary>Возвращает ключи всех элементов в коллекции <see cref="T:System.Configuration.KeyValueConfigurationCollection" />.</summary>
      <returns>Массив строк.</returns>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.Clear">
      <summary>Очищает коллекцию <see cref="T:System.Configuration.KeyValueConfigurationCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.CreateNewElement">
      <summary>При переопределении в производном классе метод <see cref="M:System.Configuration.KeyValueConfigurationCollection.CreateNewElement" />создает новый объект <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</summary>
      <returns>Только что созданный объект <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</returns>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.GetElementKey(System.Configuration.ConfigurationElement)">
      <summary>При переопределении в производном классе возвращает ключ указанного элемента конфигурации.</summary>
      <param name="element">Объект <see cref="T:System.Configuration.KeyValueConfigurationElement" />, в который должен быть возвращен ключ.</param>
      <returns>Объект, используемый в качестве ключа для указанного элемента <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</returns>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationCollection.Item(System.String)">
      <summary>Возвращает объект <see cref="T:System.Configuration.KeyValueConfigurationElement" />, созданный на основе указанных параметров.</summary>
      <param name="key">Ключ объекта <see cref="T:System.Configuration.KeyValueConfigurationElement" />, содержащегося в коллекции.</param>
      <returns>Элемент конфигурации или <see langword="null" />, если ключ отсутствует в коллекции.</returns>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationCollection.Properties">
      <summary>Возвращает коллекцию свойств конфигурации.</summary>
      <returns>Коллекция свойств конфигурации.</returns>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.Remove(System.String)">
      <summary>Удаляет объект <see cref="T:System.Configuration.KeyValueConfigurationElement" /> из коллекции.</summary>
      <param name="key">Строка, определяющая <paramref name="key" />.</param>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationCollection.ThrowOnDuplicate">
      <summary>Возвращает значение, указывающее, выдаст ли исключение попытка добавить дубликат объекта <see cref="T:System.Configuration.KeyValueConfigurationElement" /> в коллекцию <see cref="T:System.Configuration.KeyValueConfigurationCollection" />.</summary>
      <returns>
        <see langword="true" />, если попытка добавить дубликат объекта <see cref="T:System.Configuration.KeyValueConfigurationElement" /> к коллекции <see cref="T:System.Configuration.KeyValueConfigurationCollection" /> приведет к возбуждению исключения; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="T:System.Configuration.KeyValueConfigurationElement">
      <summary>Представляет элемент конфигурации, содержащий пару ключ-значение.</summary>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationElement.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.KeyValueConfigurationElement" /> на основе предоставленных параметров.</summary>
      <param name="key">Ключ объекта <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</param>
      <param name="value">Значение <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</param>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationElement.Init">
      <summary>Задает объект <see cref="T:System.Configuration.KeyValueConfigurationElement" /> в исходное состояние.</summary>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationElement.Key">
      <summary>Возвращает ключ объекта <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</summary>
      <returns>Ключ объекта <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</returns>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationElement.Properties">
      <summary>Возвращает коллекцию свойств.</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> свойств элемента.</returns>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationElement.Value">
      <summary>Возвращает или задает значение объекта <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</summary>
      <returns>Значение <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</returns>
    </member>
    <member name="T:System.Configuration.LocalFileSettingsProvider">
      <summary>Обеспечивает сохраняемость для классов параметров приложений.</summary>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.LocalFileSettingsProvider" />.</summary>
    </member>
    <member name="P:System.Configuration.LocalFileSettingsProvider.ApplicationName">
      <summary>Возвращает или задает имя работающего в данный момент приложения.</summary>
      <returns>Имя строки, поддерживающей монитор приложения.</returns>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)">
      <summary>Возвращает значение именованного свойства параметров для предыдущей версии того же приложения.</summary>
      <param name="context">Объект <see cref="T:System.Configuration.SettingsContext" />, описывающий, где используются свойства параметров приложения.</param>
      <param name="property">
        <see cref="T:System.Configuration.SettingsProperty" />, значение которого должно быть возвращено.</param>
      <returns>Объект <see cref="T:System.Configuration.SettingsPropertyValue" />, представляющий параметр приложения, если он найдены; в противном случае — <see langword="null" />.</returns>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
      <summary>Возвращает коллекцию значений свойств параметров для указанного экземпляра приложения и группу свойств параметров.</summary>
      <param name="context">Объект <see cref="T:System.Configuration.SettingsContext" />, описывающий текущее использование приложения.</param>
      <param name="properties">Объект <see cref="T:System.Configuration.SettingsPropertyCollection" />, содержащий группу свойств параметров, значения которых необходимо извлечь.</param>
      <returns>Объект <see cref="T:System.Configuration.SettingsPropertyValueCollection" />, содержащий значения для указанной группы свойств параметров.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Был обнаружен параметр на уровне пользователя, но текущая конфигурация поддерживает только параметры на уровне приложения.</exception>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Инициализирует поставщика.</summary>
      <param name="name">Понятное имя поставщика.</param>
      <param name="values">Коллекция пар "имя-значение", представляющих атрибуты поставщика, указанные в конфигурации для этого поставщика.</param>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)">
      <summary>Сбрасывает все свойства параметров приложения, связанные с указанным приложением, к значениям по умолчанию.</summary>
      <param name="context">Объект <see cref="T:System.Configuration.SettingsContext" />, описывающий текущее использование приложения.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Был обнаружен параметр на уровне пользователя, но текущая конфигурация поддерживает только параметры на уровне приложения.</exception>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)">
      <summary>Задает значения указанной группы параметров свойств.</summary>
      <param name="context">Объект <see cref="T:System.Configuration.SettingsContext" />, описывающий текущее использование приложения.</param>
      <param name="values">Объект <see cref="T:System.Configuration.SettingsPropertyValueCollection" />, представляющий группу параметров свойств, которые необходимо задать.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Был обнаружен параметр на уровне пользователя, но текущая конфигурация поддерживает только параметры на уровне приложения.  

или -  

 Произошла общая ошибка при сохранении параметров в файле конфигурации.</exception>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
      <summary>Выполняет попытку переместить предыдущие параметры на уровне пользователя из предыдущих версий того же приложения.</summary>
      <param name="context">Объект <see cref="T:System.Configuration.SettingsContext" />, описывающий текущее использование приложения.</param>
      <param name="properties">
        <see cref="T:System.Configuration.SettingsPropertyCollection" />, содержащий группу свойств параметров, значения которых необходимо извлечь.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Был обнаружен параметр на уровне пользователя, но текущая конфигурация поддерживает только параметры на уровне приложения.  

или -  

 Не удалось получить доступ к предыдущей версии файла конфигурации.</exception>
    </member>
    <member name="T:System.Configuration.LongValidator">
      <summary>Выполняет проверку значения <see cref="T:System.Int64" />.</summary>
    </member>
    <member name="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.LongValidator" />.</summary>
      <param name="minValue">Значение <see cref="T:System.Int64" />, указывающее минимальную длину значения <see langword="long" />.</param>
      <param name="maxValue">Значение <see cref="T:System.Int64" />, указывающее максимальную длину значения <see langword="long" />.</param>
    </member>
    <member name="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.LongValidator" />.</summary>
      <param name="minValue">Значение <see cref="T:System.Int64" />, указывающее минимальную длину значения <see langword="long" />.</param>
      <param name="maxValue">Значение <see cref="T:System.Int64" />, указывающее максимальную длину значения <see langword="long" />.</param>
      <param name="rangeIsExclusive">Значение <see cref="T:System.Boolean" />, указывающее, является ли диапазон проверки эксклюзивным.</param>
    </member>
    <member name="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64,System.Boolean,System.Int64)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.LongValidator" />.</summary>
      <param name="minValue">Значение <see cref="T:System.Int64" />, указывающее минимальную длину значения <see langword="long" />.</param>
      <param name="maxValue">Значение <see cref="T:System.Int64" />, указывающее максимальную длину значения <see langword="long" />.</param>
      <param name="rangeIsExclusive">Значение <see cref="T:System.Boolean" />, указывающее, является ли диапазон проверки эксклюзивным.</param>
      <param name="resolution">Значение <see cref="T:System.Int64" />, указывающее определенное значение для соответствия.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="resolution" /> равно или меньше <see langword="0" />.  

или - 
Значение <paramref name="maxValue" /> меньше <paramref name="minValue" />.</exception>
    </member>
    <member name="M:System.Configuration.LongValidator.CanValidate(System.Type)">
      <summary>Определяет, можно ли проверить тип объекта.</summary>
      <param name="type">Тип объекта.</param>
      <returns>
        <see langword="true" />, если параметр <paramref name="type" /> соответствует значению <see cref="T:System.Int64" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.LongValidator.Validate(System.Object)">
      <summary>Определяет, является ли значение объекта допустимым.</summary>
      <param name="value">Значение объекта.</param>
    </member>
    <member name="T:System.Configuration.LongValidatorAttribute">
      <summary>Детально инструктирует платформу .NET Framework проводить проверки длинного целого числа в свойстве конфигурации. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Configuration.LongValidatorAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.LongValidatorAttribute" />.</summary>
    </member>
    <member name="P:System.Configuration.LongValidatorAttribute.ExcludeRange">
      <summary>Получает или задает значение, определяющее, включать или исключать целые числа в диапазон, определенный значениями свойств <see cref="P:System.Configuration.LongValidatorAttribute.MinValue" /> и <see cref="P:System.Configuration.LongValidatorAttribute.MaxValue" />.</summary>
      <returns>
        <see langword="true" />, если значение должно быть исключено; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.LongValidatorAttribute.MaxValue">
      <summary>Возвращает или задает максимальное значение, допустимое для свойства.</summary>
      <returns>Длинное целое число, определяющее допустимое максимальное значение.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Выбранное значение меньше <see cref="P:System.Configuration.LongValidatorAttribute.MinValue" />.</exception>
    </member>
    <member name="P:System.Configuration.LongValidatorAttribute.MinValue">
      <summary>Возвращает или задает минимальное значение, допустимое для свойства.</summary>
      <returns>Целое число, определяющее допустимое минимальное значение.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Выбранное значение больше <see cref="P:System.Configuration.LongValidatorAttribute.MaxValue" />.</exception>
    </member>
    <member name="P:System.Configuration.LongValidatorAttribute.ValidatorInstance">
      <summary>Возвращает экземпляр класса <see cref="T:System.Configuration.LongValidator" />.</summary>
      <returns>Проверяющий экземпляр <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</returns>
    </member>
    <member name="T:System.Configuration.NameValueConfigurationCollection">
      <summary>Содержит коллекцию объектов <see cref="T:System.Configuration.NameValueConfigurationElement" />. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.NameValueConfigurationCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationCollection.Add(System.Configuration.NameValueConfigurationElement)">
      <summary>Добавляет объект <see cref="T:System.Configuration.NameValueConfigurationElement" /> в коллекцию.</summary>
      <param name="nameValue">Объект <see cref="T:System.Configuration.NameValueConfigurationElement" />.</param>
    </member>
    <member name="P:System.Configuration.NameValueConfigurationCollection.AllKeys">
      <summary>Возвращает ключи всех элементов, содержащихся в <see cref="T:System.Configuration.NameValueConfigurationCollection" />.</summary>
      <returns>Массив строк.</returns>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationCollection.Clear">
      <summary>Очищает <see cref="T:System.Configuration.NameValueConfigurationCollection" />.</summary>
    </member>
    <member name="P:System.Configuration.NameValueConfigurationCollection.Item(System.String)">
      <summary>Возвращает или задает объект <see cref="T:System.Configuration.NameValueConfigurationElement" />, созданный на основе указанных параметров.</summary>
      <param name="name">Имя элемента <see cref="T:System.Configuration.NameValueConfigurationElement" /> в коллекции.</param>
      <returns>Объект <see cref="T:System.Configuration.NameValueConfigurationElement" />.</returns>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationCollection.Remove(System.Configuration.NameValueConfigurationElement)">
      <summary>Удаляет объект <see cref="T:System.Configuration.NameValueConfigurationElement" /> из коллекции, основанной на предоставленном параметре.</summary>
      <param name="nameValue">Объект <see cref="T:System.Configuration.NameValueConfigurationElement" />.</param>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationCollection.Remove(System.String)">
      <summary>Удаляет объект <see cref="T:System.Configuration.NameValueConfigurationElement" /> из коллекции, основанной на предоставленном параметре.</summary>
      <param name="name">Имя объекта <see cref="T:System.Configuration.NameValueConfigurationElement" />.</param>
    </member>
    <member name="T:System.Configuration.NameValueConfigurationElement">
      <summary>Элемент конфигурации, содержащий имя <see cref="T:System.String" /> и значение <see cref="T:System.String" />. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationElement.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.NameValueConfigurationElement" /> на основе предоставленных параметров.</summary>
      <param name="name">Имя объекта <see cref="T:System.Configuration.NameValueConfigurationElement" />.</param>
      <param name="value">Значение объекта <see cref="T:System.Configuration.NameValueConfigurationElement" />.</param>
    </member>
    <member name="P:System.Configuration.NameValueConfigurationElement.Name">
      <summary>Возвращает имя объекта <see cref="T:System.Configuration.NameValueConfigurationElement" />.</summary>
      <returns>Имя объекта <see cref="T:System.Configuration.NameValueConfigurationElement" />.</returns>
    </member>
    <member name="P:System.Configuration.NameValueConfigurationElement.Value">
      <summary>Возвращает или задает значение объекта <see cref="T:System.Configuration.NameValueConfigurationElement" />.</summary>
      <returns>Значение объекта <see cref="T:System.Configuration.NameValueConfigurationElement" />.</returns>
    </member>
    <member name="T:System.Configuration.NameValueFileSectionHandler">
      <summary>Предоставляет доступ к файлу конфигурации. Этот тип обеспечивает поддержку инфраструктуры платформы .NET Framework и не предназначен для непосредственного использования в коде.</summary>
    </member>
    <member name="M:System.Configuration.NameValueFileSectionHandler.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.NameValueFileSectionHandler" />.</summary>
    </member>
    <member name="M:System.Configuration.NameValueFileSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary>Создает новый обработчик конфигурации и добавляет его к коллекции обработчика раздела на основе указанных параметров.</summary>
      <param name="parent">Родительский объект.</param>
      <param name="configContext">Объект контекста конфигурации.</param>
      <param name="section">узел раздела XML.</param>
      <returns>Объект конфигурации.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Файл, указанный в атрибуте <see langword="file" /> раздела <paramref name="section" />, существует, но не может быть загружен.  

или - 
Атрибут <see langword="name" /> раздела <paramref name="section" /> не совпадает с корневым элементом файла, указанным в атрибуте <see langword="file" />.</exception>
    </member>
    <member name="T:System.Configuration.NameValueSectionHandler">
      <summary>Предоставляет сведения о парах имя-значение конфигурации из раздела конфигурации.</summary>
    </member>
    <member name="M:System.Configuration.NameValueSectionHandler.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.NameValueSectionHandler" />.</summary>
    </member>
    <member name="M:System.Configuration.NameValueSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary>Создает новый обработчик конфигурации и добавляет его к коллекции обработчика раздела на основе указанных параметров.</summary>
      <param name="parent">Родительский объект.</param>
      <param name="context">Объект контекста конфигурации.</param>
      <param name="section">Узел раздела XML.</param>
      <returns>Объект конфигурации.</returns>
    </member>
    <member name="P:System.Configuration.NameValueSectionHandler.KeyAttributeName">
      <summary>Возвращает имя атрибута XML для использования ключа в паре ключ-значение.</summary>
      <returns>Значение <see cref="T:System.String" /> содержит имя атрибута ключа.</returns>
    </member>
    <member name="P:System.Configuration.NameValueSectionHandler.ValueAttributeName">
      <summary>Возвращает имя атрибута XML для использования в качестве значения в паре ключ-значение.</summary>
      <returns>Значение <see cref="T:System.String" /> содержит имя атрибута значения.</returns>
    </member>
    <member name="T:System.Configuration.NoSettingsVersionUpgradeAttribute">
      <summary>Указывает, что поставщик параметров должен отключить любую логику, которая вызывается во время обновления приложения. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Configuration.NoSettingsVersionUpgradeAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.NoSettingsVersionUpgradeAttribute" />.</summary>
    </member>
    <member name="T:System.Configuration.OverrideMode">
      <summary>Устанавливает поведение переопределения элемента конфигурации для элементов конфигурации дочерних каталогов.</summary>
    </member>
    <member name="F:System.Configuration.OverrideMode.Allow">
      <summary>Параметры конфигурации элемента или группы могут быть переопределены параметрами конфигурации, являющимися дочерними каталогами.</summary>
    </member>
    <member name="F:System.Configuration.OverrideMode.Deny">
      <summary>Параметры конфигурации элемента или группы не могут быть переопределены параметрами конфигурации, являющимися дочерними каталогами.</summary>
    </member>
    <member name="F:System.Configuration.OverrideMode.Inherit">
      <summary>Параметр конфигурации элемента или группы будет переопределен параметрами конфигурации, являющимися дочерними каталогами, если явно разрешен родительским элементом текущего элемента конфигурации или группы. Разрешение на переопределение указывается атрибутом <see langword="OverrideMode" />.</summary>
    </member>
    <member name="T:System.Configuration.PositiveTimeSpanValidator">
      <summary>Выполняет проверку объекта <see cref="T:System.TimeSpan" />. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Configuration.PositiveTimeSpanValidator.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.PositiveTimeSpanValidator" />.</summary>
    </member>
    <member name="M:System.Configuration.PositiveTimeSpanValidator.CanValidate(System.Type)">
      <summary>Определяет, можно ли проверить тип объекта.</summary>
      <param name="type">Тип объекта.</param>
      <returns>Значение <see langword="true" />, если параметр <paramref name="type" /> соответствует объекту <see cref="T:System.TimeSpan" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.PositiveTimeSpanValidator.Validate(System.Object)">
      <summary>Определяет, является ли значение объекта допустимым.</summary>
      <param name="value">Значение объекта.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="value" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> не удается разрешить с положительным значением <see cref="T:System.TimeSpan" />.</exception>
    </member>
    <member name="T:System.Configuration.PositiveTimeSpanValidatorAttribute">
      <summary>Подробно инструктирует платформу .NET Framework как проверять временные показатели свойства конфигурации. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Configuration.PositiveTimeSpanValidatorAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.PositiveTimeSpanValidatorAttribute" />.</summary>
    </member>
    <member name="P:System.Configuration.PositiveTimeSpanValidatorAttribute.ValidatorInstance">
      <summary>Возвращает экземпляр класса <see cref="T:System.Configuration.PositiveTimeSpanValidator" />.</summary>
      <returns>Проверяющий экземпляр <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</returns>
    </member>
    <member name="T:System.Configuration.PropertyInformation">
      <summary>Содержит метаинформацию об индивидуальном свойстве в пределах конфигурации. Этот тип не может быть наследован.</summary>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Converter">
      <summary>Возвращает <see cref="T:System.ComponentModel.TypeConverter" /> взаимосвязанный объект в атрибут конфигурации.</summary>
      <returns>Объект <see cref="T:System.ComponentModel.TypeConverter" />.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.DefaultValue">
      <summary>Возвращает объект, содержащий значение по умолчанию в атрибут конфигурации.</summary>
      <returns>Объект, содержащий значение по умолчанию атрибута конфигурации.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Description">
      <summary>Возвращает описание объекта, который соответствует атрибуту конфигурации.</summary>
      <returns>Описание атрибута конфигурации.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.IsKey">
      <summary>Возвращает значение, определяющее, является ли атрибут конфигурации ключом.</summary>
      <returns>
        <see langword="true" />, если конфигурация атрибута является ключом; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.IsLocked">
      <summary>Возвращает значение, определяющее, является ли атрибут конфигурации заблокированным.</summary>
      <returns>
        <see langword="true" />, если <see cref="T:System.Configuration.PropertyInformation" />, объект заблокирован, в противном случае —<see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.IsModified">
      <summary>Возвращает значение, определяющее изменялся ли атрибут конфигурации.</summary>
      <returns>
        <see langword="true" />, если <see cref="T:System.Configuration.PropertyInformation" /> объект изменялся; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.IsRequired">
      <summary>Возвращает значение определяющее является ли атрибут конфигурации востребованным.</summary>
      <returns>
        <see langword="true" />, если <see cref="T:System.Configuration.PropertyInformation" />, объект востребован, в противном случае —<see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.LineNumber">
      <summary>Возвращает номер строки в файл конфигурации взаимосвязанный с атрибутом конфигурации.</summary>
      <returns>Номер строки в файле конфигурации.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Name">
      <summary>Возвращает имя объекта, который соответствует атрибуту конфигурации.</summary>
      <returns>Имя объекта <see cref="T:System.Configuration.PropertyInformation" />.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Source">
      <summary>Возвращает файл ресурсов, который соответствует атрибуту конфигурации.</summary>
      <returns>Файл ресурсов <see cref="T:System.Configuration.PropertyInformation" /> объекта.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Type">
      <summary>Возвращает <see cref="T:System.Type" /> объекта, который соответствует атрибуту конфигурации.</summary>
      <returns>
        <see cref="T:System.Type" /> объекта <see cref="T:System.Configuration.PropertyInformation" />.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Validator">
      <summary>Возвращает <see cref="T:System.Configuration.ConfigurationValidatorBase" /> объект, взаимосвязанный с атрибутом конфигурации.</summary>
      <returns>Объект <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Value">
      <summary>Возвращает или задает объект, содержащий значение взаимосвязанное с атрибутом конфигурации.</summary>
      <returns>Объект, содержащий значение <see cref="T:System.Configuration.PropertyInformation" /> объекта.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.ValueOrigin">
      <summary>Возвращает <see cref="T:System.Configuration.PropertyValueOrigin" /> объект, взаимосвязанный с атрибутом конфигурации.</summary>
      <returns>Объект <see cref="T:System.Configuration.PropertyValueOrigin" />.</returns>
    </member>
    <member name="T:System.Configuration.PropertyInformationCollection">
      <summary>Содержит коллекцию объектов <see cref="T:System.Configuration.PropertyInformation" />. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Configuration.PropertyInformationCollection.CopyTo(System.Configuration.PropertyInformation[],System.Int32)">
      <summary>Копирует всю коллекцию <see cref="T:System.Configuration.PropertyInformationCollection" /> в совместимый одномерный массив <see cref="T:System.Array" />, начиная с указанного индекса конечного массива.</summary>
      <param name="array">Одномерный массив класса <see cref="T:System.Array" />, который является целевым массивом для элементов, копируемых из коллекции <see cref="T:System.Configuration.PropertyInformationCollection" />. Массив <see cref="T:System.Array" /> должен иметь индексацию, начинающуюся с нуля.</param>
      <param name="index">Отсчитываемый от нуля индекс в массиве <paramref name="array" />, указывающий начало копирования.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение свойства <see cref="P:System.Array.Length" /> для <paramref name="array" /> меньше <see cref="P:System.Collections.Specialized.NameObjectCollectionBase.Count" /> + <paramref name="index" />.</exception>
    </member>
    <member name="M:System.Configuration.PropertyInformationCollection.GetEnumerator">
      <summary>Возвращает объект <see cref="T:System.Collections.IEnumerator" />, используемый для итерации данной коллекции <see cref="T:System.Configuration.PropertyInformationCollection" />.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" />, используемый для итерации данной коллекции <see cref="T:System.Configuration.PropertyInformationCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.PropertyInformationCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Заполняет объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> данными, необходимыми для сериализации экземпляра <see cref="T:System.Configuration.PropertyInformationCollection" />.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, который содержит сведения, требуемые для сериализации экземпляра <see cref="T:System.Configuration.PropertyInformationCollection" />.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий исходный объект и объект назначения для сериализации потока, связанного с экземпляром класса <see cref="T:System.Configuration.PropertyInformationCollection" />.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="info" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="P:System.Configuration.PropertyInformationCollection.Item(System.String)">
      <summary>Возвращает объект <see cref="T:System.Configuration.PropertyInformation" /> в коллекции на основе указанного имени параметра.</summary>
      <param name="propertyName">Имя атрибута конфигурации, находящегося в объекте <see cref="T:System.Configuration.PropertyInformationCollection" />.</param>
      <returns>Объект <see cref="T:System.Configuration.PropertyInformation" />.</returns>
    </member>
    <member name="T:System.Configuration.PropertyValueOrigin">
      <summary>Указывает уровень в иерархии спецификации, на котором создаются значения свойств конфигурации.</summary>
    </member>
    <member name="F:System.Configuration.PropertyValueOrigin.Default">
      <summary>Значение свойства конфигурации создается в свойстве <see cref="P:System.Configuration.ConfigurationProperty.DefaultValue" />.</summary>
    </member>
    <member name="F:System.Configuration.PropertyValueOrigin.Inherited">
      <summary>Значение свойства конфигурации наследуется от родительского уровня в конфигурации.</summary>
    </member>
    <member name="F:System.Configuration.PropertyValueOrigin.SetHere">
      <summary>Значение свойства конфигурации определяется на текущем уровне иерархии.</summary>
    </member>
    <member name="T:System.Configuration.ProtectedConfiguration">
      <summary>Предоставляет доступ к поставщикам защищенных конфигураций для файла конфигурации текущего приложения.</summary>
    </member>
    <member name="F:System.Configuration.ProtectedConfiguration.DataProtectionProviderName">
      <summary>Имя поставщика защищенных данных.</summary>
    </member>
    <member name="P:System.Configuration.ProtectedConfiguration.DefaultProvider">
      <summary>Возвращает имя поставщика защищенной конфигурации по умолчанию.</summary>
      <returns>имя по умолчанию поставщика защищенной конфигурация.</returns>
    </member>
    <member name="F:System.Configuration.ProtectedConfiguration.ProtectedDataSectionName">
      <summary>Имя раздела защищенных данных.</summary>
    </member>
    <member name="P:System.Configuration.ProtectedConfiguration.Providers">
      <summary>Возвращает коллекцию установленных поставщиков защищенных конфигураций.</summary>
      <returns>Коллекция <see cref="T:System.Configuration.ProtectedConfigurationProviderCollection" /> установленных <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> объектов.</returns>
    </member>
    <member name="F:System.Configuration.ProtectedConfiguration.RsaProviderName">
      <summary>Имя поставщика RSA.</summary>
    </member>
    <member name="T:System.Configuration.ProtectedConfigurationProvider">
      <summary>Базовый класс для создания поставщиков для шифрования и дешифрования данных с защищенной конфигурацией.</summary>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationProvider.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> значениями по умолчанию.</summary>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)">
      <summary>Расшифровывает объект <see cref="T:System.Xml.XmlNode" /> переданный из файла конфигурации.</summary>
      <param name="encryptedNode">Объект <see cref="T:System.Xml.XmlNode" /> для расшифровки.</param>
      <returns>Объект <see cref="T:System.Xml.XmlNode" />, содержащий расшифрованные данные.</returns>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)">
      <summary>Шифрует объект <see cref="T:System.Xml.XmlNode" />, переданный из файла конфигурации.</summary>
      <param name="node">Объект <see cref="T:System.Xml.XmlNode" /> для шифровки.</param>
      <returns>Объект <see cref="T:System.Xml.XmlNode" />, содержащий шифрованные данные.</returns>
    </member>
    <member name="T:System.Configuration.ProtectedConfigurationProviderCollection">
      <summary>Представляет коллекцию объектов <see cref="T:System.Configuration.ProtectedConfigurationProvider" />.</summary>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationProviderCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ProtectedConfigurationProviderCollection" /> значениями по умолчанию.</summary>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationProviderCollection.Add(System.Configuration.Provider.ProviderBase)">
      <summary>Добавляет объект <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> в коллекцию.</summary>
      <param name="provider">Объект <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> для добавления в коллекцию.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="provider" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="provider" /> не является объектом <see cref="T:System.Configuration.ProtectedConfigurationProvider" />.</exception>
      <exception cref="T:System.Configuration.ConfigurationException">Добавляемый объект <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> уже имеется в коллекции.  
-или- 
Коллекция только для чтения.</exception>
    </member>
    <member name="P:System.Configuration.ProtectedConfigurationProviderCollection.Item(System.String)">
      <summary>Возвращает объект в коллекцию <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> с указанным именем.</summary>
      <param name="name">Имя объекта <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> в коллекции.</param>
      <returns>Объект <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> с заданным именем или значение <see langword="null" />, если объекты с именем отсутствуют.</returns>
    </member>
    <member name="T:System.Configuration.ProtectedConfigurationSection">
      <summary>Обеспечивает программный доступ к разделу конфигурации объекта <see langword="configProtectedData" />. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationSection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ProtectedConfigurationSection" /> значениями по умолчанию.</summary>
    </member>
    <member name="P:System.Configuration.ProtectedConfigurationSection.DefaultProvider">
      <summary>Возвращает или задает имя объекта <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> по умолчанию в свойстве коллекции <see cref="P:System.Configuration.ProtectedConfigurationSection.Providers" />.</summary>
      <returns>Имя объекта <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> по умолчанию в свойстве коллекции объекта <see cref="P:System.Configuration.ProtectedConfigurationSection.Providers" />.</returns>
    </member>
    <member name="P:System.Configuration.ProtectedConfigurationSection.Providers">
      <summary>Возвращает коллекцию <see cref="T:System.Configuration.ProviderSettingsCollection" /> всех объектов <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> из всех участвующих файлов конфигурации.</summary>
      <returns>Коллекция объектов <see cref="T:System.Configuration.ProviderSettingsCollection" /> из всех объектов <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> из всех участвующих файлов конфигурации.</returns>
    </member>
    <member name="T:System.Configuration.ProtectedProviderSettings">
      <summary>Представляет группу элементов конфигурации, используемых для настройки поставщиков для раздела конфигурации <see langword="&lt;configProtectedData&gt;" />.</summary>
    </member>
    <member name="M:System.Configuration.ProtectedProviderSettings.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ProtectedProviderSettings" />.</summary>
    </member>
    <member name="P:System.Configuration.ProtectedProviderSettings.Properties">
      <summary>Возвращает коллекцию <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, представляющую свойства поставщиков для защищенных данных конфигурации.</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationPropertyCollection" />, представляющая свойства поставщиков для защищенных данных конфигурации.</returns>
    </member>
    <member name="P:System.Configuration.ProtectedProviderSettings.Providers">
      <summary>Возвращает коллекцию объектов <see cref="T:System.Configuration.ProviderSettings" />, представляющих свойства поставщиков для защищенных данных конфигурации.</summary>
      <returns>Коллекция объектов <see cref="T:System.Configuration.ProviderSettings" /> , представляющая свойства поставщиков для защищенных данных конфигурации.</returns>
    </member>
    <member name="T:System.Configuration.Provider.ProviderBase">
      <summary>Предоставляет базовую реализацию для расширяемой модели поставщика.</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderBase.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.Provider.ProviderBase" />.</summary>
    </member>
    <member name="P:System.Configuration.Provider.ProviderBase.Description">
      <summary>Возвращает краткое, понятное описание, подходящее для отображения в инструментах администрирования или других пользовательских интерфейсах (UI).</summary>
      <returns>Краткое, понятное описание, подходящее для отображения в инструментах администрирования или других пользовательских интерфейсах.</returns>
    </member>
    <member name="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Инициализирует построитель конфигураций.</summary>
      <param name="name">Понятное имя поставщика.</param>
      <param name="config">Коллекция пар "имя-значение", представляющих атрибуты поставщика, указанные в конфигурации для этого поставщика.</param>
      <exception cref="T:System.ArgumentNullException">Имя поставщика: <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Имя поставщика имеет нулевую длину.</exception>
      <exception cref="T:System.InvalidOperationException">Предпринятая попытка вызвать <see cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" /> в поставщике после инициализации поставщика.</exception>
    </member>
    <member name="P:System.Configuration.Provider.ProviderBase.Name">
      <summary>Возвращает понятное имя, используемое для ссылки на поставщика во время конфигурирования.</summary>
      <returns>Понятное имя, используемое для ссылки на поставщика во время конфигурирования.</returns>
    </member>
    <member name="T:System.Configuration.Provider.ProviderCollection">
      <summary>Представляет коллекцию объектов поставщика, которые наследованы из <see cref="T:System.Configuration.Provider.ProviderBase" />.</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.Provider.ProviderCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.Add(System.Configuration.Provider.ProviderBase)">
      <summary>Добавляет поставщика в коллекцию.</summary>
      <param name="provider">Поставщик, который должен быть добавлен.</param>
      <exception cref="T:System.NotSupportedException">Коллекция только для чтения.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="provider" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Configuration.Provider.ProviderBase.Name" /> параметра <paramref name="provider" /> есть <see langword="null" />.  

или - 
Длина <see cref="P:System.Configuration.Provider.ProviderBase.Name" /> параметра <paramref name="provider" /> меньше чем 1.</exception>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.Clear">
      <summary>Удаляет все элементы из коллекции.</summary>
      <exception cref="T:System.NotSupportedException">Коллекция установлена в режим только для чтения.</exception>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.CopyTo(System.Configuration.Provider.ProviderBase[],System.Int32)">
      <summary>Копирует содержимое коллекции в данный массив, начиная с указанного индекса.</summary>
      <param name="array">Массив для копирования элементов коллекции.</param>
      <param name="index">Индекс элемента коллекции, с которого начинается копирование.</param>
    </member>
    <member name="P:System.Configuration.Provider.ProviderCollection.Count">
      <summary>Возвращает количество поставщиков в коллекции.</summary>
      <returns>Количество поставщиков в коллекции.</returns>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.GetEnumerator">
      <summary>Возвращает объект, который реализует интерфейс <see cref="T:System.Collections.IEnumerator" />, производящий итерацию по коллекции.</summary>
      <returns>Объект, который реализует <see cref="T:System.Collections.IEnumerator" />, производящий итерацию по коллекции.</returns>
    </member>
    <member name="P:System.Configuration.Provider.ProviderCollection.IsSynchronized">
      <summary>Возвращает значение, указывающее, является ли доступ к коллекции синхронизированным (потокобезопасным).</summary>
      <returns>Значение <see langword="false" /> во всех случаях.</returns>
    </member>
    <member name="P:System.Configuration.Provider.ProviderCollection.Item(System.String)">
      <summary>Возвращает поставщика с заданным именем.</summary>
      <param name="name">Ключ, по которому определяется поставщик.</param>
      <returns>Поставщик с заданным именем.</returns>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.Remove(System.String)">
      <summary>Удаляет поставщика из коллекции.</summary>
      <param name="name">Имя поставщика, предназначенного для удаления.</param>
      <exception cref="T:System.NotSupportedException">Коллекция была установлена в режим только для чтения.</exception>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.SetReadOnly">
      <summary>Устанавливает статус коллекции "только для чтения".</summary>
    </member>
    <member name="P:System.Configuration.Provider.ProviderCollection.SyncRoot">
      <summary>Возвращает текущий объект.</summary>
      <returns>Текущий объект.</returns>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Копирует элементы <see cref="T:System.Configuration.Provider.ProviderCollection" /> в массив, начиная с определенного индекса массива.</summary>
      <param name="array">Массив для копирования элементов коллекции.</param>
      <param name="index">Индекс массива, с которого начинается копирование экземпляров поставщика из коллекции.</param>
    </member>
    <member name="T:System.Configuration.Provider.ProviderException">
      <summary>При возникновении ошибки в поставщике конфигурации создается исключение. Этот класс исключения также используется поставщиком для создания исключений при возникновении внутренних ошибок с поставщиком, который не сопоставлен с другими существующими классами исключений.</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderException.#ctor">
      <summary>Создает новый экземпляр класса <see cref="T:System.Configuration.Provider.ProviderException" />.</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Configuration.Provider.ProviderException" />.</summary>
      <param name="info">Объект, содержащий сведения о выполнении десериализации.</param>
      <param name="context">Контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.Configuration.Provider.ProviderException.#ctor(System.String)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Configuration.Provider.ProviderException" />.</summary>
      <param name="message">Создано сообщение, описывающее причину возникновения <see cref="T:System.Configuration.Provider.ProviderException" />.</param>
    </member>
    <member name="M:System.Configuration.Provider.ProviderException.#ctor(System.String,System.Exception)">
      <summary>Создает новый экземпляр класса <see cref="T:System.Configuration.Provider.ProviderException" />.</summary>
      <param name="message">Создано сообщение, описывающее причину возникновения <see cref="T:System.Configuration.Provider.ProviderException" />.</param>
      <param name="innerException">Создано исключение, которое вызвало <see cref="T:System.Configuration.Provider.ProviderException" />.</param>
    </member>
    <member name="T:System.Configuration.ProviderSettings">
      <summary>Представляет элементы конфигурации, связанные с поставщиком.</summary>
    </member>
    <member name="M:System.Configuration.ProviderSettings.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ProviderSettings" />.</summary>
    </member>
    <member name="M:System.Configuration.ProviderSettings.#ctor(System.String,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ProviderSettings" />.</summary>
      <param name="name">Имя поставщика, для которого необходимо сконфигурировать параметры.</param>
      <param name="type">Тип поставщика, для которого необходимо сконфигурировать параметры.</param>
    </member>
    <member name="P:System.Configuration.ProviderSettings.Name">
      <summary>Возвращает или устанавливает имя поставщика, сконфигурированного данным классом.</summary>
      <returns>Имя поставщика.</returns>
    </member>
    <member name="P:System.Configuration.ProviderSettings.Parameters">
      <summary>Возвращает коллекцию пользовательских параметров для поставщика.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.NameValueCollection" /> параметров для поставщика.</returns>
    </member>
    <member name="P:System.Configuration.ProviderSettings.Type">
      <summary>Возвращает или устанавливает тип поставщика, сконфигурированного данным классом.</summary>
      <returns>Полное пространство имен и имя класса для типа поставщика, сконфигурированного данным экземпляром <see cref="T:System.Configuration.ProviderSettings" />.</returns>
    </member>
    <member name="T:System.Configuration.ProviderSettingsCollection">
      <summary>Представляет коллекцию объектов <see cref="T:System.Configuration.ProviderSettings" />.</summary>
    </member>
    <member name="M:System.Configuration.ProviderSettingsCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.ProviderSettingsCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.ProviderSettingsCollection.Add(System.Configuration.ProviderSettings)">
      <summary>Добавляет объект <see cref="T:System.Configuration.ProviderSettings" /> в коллекцию.</summary>
      <param name="provider">Добавляемый объект <see cref="T:System.Configuration.ProviderSettings" />.</param>
    </member>
    <member name="M:System.Configuration.ProviderSettingsCollection.Clear">
      <summary>Очищает коллекцию.</summary>
    </member>
    <member name="P:System.Configuration.ProviderSettingsCollection.Item(System.Int32)">
      <summary>Возвращает или задает значение в коллекции <see cref="T:System.Configuration.ProviderSettingsCollection" /> по указанному индексу.</summary>
      <param name="index">Индекс возвращаемого объекта <see cref="T:System.Configuration.ProviderSettings" />.</param>
      <returns>Указанный <see cref="T:System.Configuration.ProviderSettings" />.</returns>
    </member>
    <member name="P:System.Configuration.ProviderSettingsCollection.Item(System.String)">
      <summary>Возвращает элемент из коллекции.</summary>
      <param name="key">Строковая ссылка на объект <see cref="T:System.Configuration.ProviderSettings" /> в коллекции.</param>
      <returns>Объект <see cref="T:System.Configuration.ProviderSettings" /> в коллекции.</returns>
    </member>
    <member name="M:System.Configuration.ProviderSettingsCollection.Remove(System.String)">
      <summary>Удаляет элемент из коллекции.</summary>
      <param name="name">Имя удаляемого объекта <see cref="T:System.Configuration.ProviderSettings" />.</param>
    </member>
    <member name="T:System.Configuration.RegexStringValidator">
      <summary>Обеспечивает проверку строки в соответствии с правилами, предусмотренными регулярным выражением.</summary>
    </member>
    <member name="M:System.Configuration.RegexStringValidator.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.RegexStringValidator" />.</summary>
      <param name="regex">Строка, определяющая регулярное выражение.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="regex" /> имеет значение null или равен пустой строке ("").</exception>
    </member>
    <member name="M:System.Configuration.RegexStringValidator.CanValidate(System.Type)">
      <summary>Определяет, можно ли проверить тип объекта.</summary>
      <param name="type">Тип объекта.</param>
      <returns>Значение <see langword="true" />, если параметр <paramref name="type" /> соответствует строке; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.RegexStringValidator.Validate(System.Object)">
      <summary>Определяет, является ли значение объекта допустимым.</summary>
      <param name="value">Значение объекта.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> не соответствует параметрам класса <see cref="T:System.Text.RegularExpressions.Regex" />.</exception>
    </member>
    <member name="T:System.Configuration.RegexStringValidatorAttribute">
      <summary>Описательно инструктирует платформу .NET Framework для проверки строки на наличие свойства конфигурации, используя регулярное выражение. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Configuration.RegexStringValidatorAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр объекта <see cref="T:System.Configuration.RegexStringValidatorAttribute" />.</summary>
      <param name="regex">Строка для использования при проверке регулярного выражения.</param>
    </member>
    <member name="P:System.Configuration.RegexStringValidatorAttribute.Regex">
      <summary>Возвращает строку, используемую для выполнения проверки регулярного выражения.</summary>
      <returns>Описательно инструктирует регулярное выражение, используемое для фильтрации строки, присвоенной декорированному свойству элемента конфигурации.</returns>
    </member>
    <member name="P:System.Configuration.RegexStringValidatorAttribute.ValidatorInstance">
      <summary>Возвращает экземпляр класса <see cref="T:System.Configuration.RegexStringValidator" />.</summary>
      <returns>Проверяющий экземпляр <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</returns>
    </member>
    <member name="T:System.Configuration.RsaProtectedConfigurationProvider">
      <summary>Предоставляет экземпляр <see cref="T:System.Configuration.ProtectedConfigurationProvider" />, использующий шифрование RSA для зашифровки и дешифровки данных конфигурации.</summary>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.RsaProtectedConfigurationProvider" />.</summary>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.AddKey(System.Int32,System.Boolean)">
      <summary>Добавляет ключ к контейнеру ключа RSA.</summary>
      <param name="keySize">Размер добавляемого ключа.</param>
      <param name="exportable">Значение <see langword="true" /> указывает, что ключ может быть экспортирован, в противном случае — значение <see langword="false" />.</param>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.CspProviderName">
      <summary>Возвращает имя API шифрования Windows (API шифрования) поставщика служб шифрования (CSP).</summary>
      <returns>Имя поставщика служб шифрования CryptoAPI.</returns>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)">
      <summary>Расшифровывает переданный узел XML.</summary>
      <param name="encryptedNode">Объект <see cref="T:System.Xml.XmlNode" /> для расшифровки.</param>
      <returns>Расшифрованный узел XML.</returns>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.DeleteKey">
      <summary>Удаляет ключ из контейнера ключа RSA.</summary>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)">
      <summary>Зашифровывает переданный в него узел XML.</summary>
      <param name="node">Объект <see cref="T:System.Xml.XmlNode" /> для шифрования.</param>
      <returns>Зашифрованный объект <see cref="T:System.Xml.XmlNode" />.</returns>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.ExportKey(System.String,System.Boolean)">
      <summary>Экспортирует ключ RSA из контейнера ключа.</summary>
      <param name="xmlFileName">Полный путь для экспорта ключа.</param>
      <param name="includePrivateParameters">Значение <see langword="true" /> указывает, что частные параметры экспортированы, в противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, заданных методом <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.IO.IOException">При открытии файла возникла ошибка.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Параметр <paramref name="path" /> указывает файл, доступный только для чтения.  

или - 
Эта операция не поддерживается на текущей платформе.  

-или- 
 Параметр<paramref name="path" /> определяет каталог.  

или - 
У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Файл, заданный параметром <paramref name="path" />, не найден.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="path" /> задан в недопустимом формате.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.ImportKey(System.String,System.Boolean)">
      <summary>Импортирует ключ RSA в ключ контейнера.</summary>
      <param name="xmlFileName">Имя файла и путь, откуда следует импортировать ключ.</param>
      <param name="exportable">Значение <see langword="true" /> указывает, что ключ может быть экспортирован, в противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, заданных методом <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.IO.IOException">При открытии файла возникла ошибка.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> указывает файл, доступный только для записи.  

или - 
Эта операция не поддерживается на текущей платформе.  

-или- 
 Параметр<paramref name="path" /> определяет каталог.  
-или- 
У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Файл, заданный параметром <paramref name="path" />, не найден.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="path" /> задан в недопустимом формате.</exception>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Выполняет инициализацию поставщика параметрами по умолчанию.</summary>
      <param name="name">Имя используемого поставщика для объекта.</param>
      <param name="configurationValues">Коллекция значений <see cref="T:System.Collections.Specialized.NameValueCollection" />, используемая при инициализации объекта.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="configurationValues" /> включает один или более нераспознанных значений.</exception>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.KeyContainerName">
      <summary>Возвращает имя контейнера ключа.</summary>
      <returns>Имя контейнера ключа.</returns>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.RsaPublicKey">
      <summary>Возвращает открытый ключ, используемый поставщиком.</summary>
      <returns>Объект <see cref="T:System.Security.Cryptography.RSAParameters" /> содержит открытый ключ, используемый поставщиком.</returns>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.UseFIPS">
      <summary>Возвращает значение, указывающее, использует ли поставщик FIPS.</summary>
      <returns>Значение <see langword="true" />, если поставщик использует FIPS; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.UseMachineContainer">
      <summary>Возвращает значение, указывающее на то, использует ли объект <see cref="T:System.Configuration.RsaProtectedConfigurationProvider" /> контейнер ключа машины.</summary>
      <returns>Значение <see langword="true" />, если объект <see cref="T:System.Configuration.RsaProtectedConfigurationProvider" /> использует контейнер ключа машины, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.UseOAEP">
      <summary>Возвращает значение, которое указывает на то, использует ли поставщик данные обмена ключа Optimal Asymmetric Encryption Padding (OAEP).</summary>
      <returns>Значение <see langword="true" />, если объект <see cref="T:System.Configuration.RsaProtectedConfigurationProvider" /> использует данные обмена ключа Optimal Asymmetric Encryption Padding (OAEP), в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Configuration.SchemeSettingElement">
      <summary>Представляет элемент в классе <see cref="T:System.Configuration.SchemeSettingElementCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.SchemeSettingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.SchemeSettingElement" />.</summary>
    </member>
    <member name="P:System.Configuration.SchemeSettingElement.GenericUriParserOptions">
      <summary>Получает значение записи из GenericUriParserOptions экземпляра класса <see cref="T:System.Configuration.SchemeSettingElement" />.</summary>
      <returns>Значение записи GenericUriParserOptions.</returns>
    </member>
    <member name="P:System.Configuration.SchemeSettingElement.Name">
      <summary>Получает значение записи Name из экземпляра класса <see cref="T:System.Configuration.SchemeSettingElement" />.</summary>
      <returns>Протокол, используемый данным параметром схемы.</returns>
    </member>
    <member name="T:System.Configuration.SchemeSettingElementCollection">
      <summary>Представляет коллекцию объектов <see cref="T:System.Configuration.SchemeSettingElement" />.</summary>
    </member>
    <member name="M:System.Configuration.SchemeSettingElementCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.SchemeSettingElementCollection" />.</summary>
    </member>
    <member name="P:System.Configuration.SchemeSettingElementCollection.CollectionType">
      <summary>Возвращает тип коллекции <see cref="T:System.Configuration.SchemeSettingElementCollection" /> по умолчанию.</summary>
      <returns>Тип коллекции <see cref="T:System.Configuration.SchemeSettingElementCollection" /> по умолчанию.</returns>
    </member>
    <member name="M:System.Configuration.SchemeSettingElementCollection.IndexOf(System.Configuration.SchemeSettingElement)">
      <summary>Индекс указанного объекта <see cref="T:System.Configuration.SchemeSettingElement" />.</summary>
      <param name="element">Объект <see cref="T:System.Configuration.SchemeSettingElement" /> по указанному расположению индекса.</param>
      <returns>Индекс заданного объекта <see cref="T:System.Configuration.SchemeSettingElement" />; в противном случае — значение -1.</returns>
    </member>
    <member name="P:System.Configuration.SchemeSettingElementCollection.Item(System.Int32)">
      <summary>Возвращает элемент по указанному индексу в коллекции <see cref="T:System.Configuration.SchemeSettingElementCollection" />.</summary>
      <param name="index">Индекс возвращаемого объекта <see cref="T:System.Configuration.SchemeSettingElement" />.</param>
      <returns>Указанный <see cref="T:System.Configuration.SchemeSettingElement" />.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Значение параметра <paramref name="index" /> меньше нуля.  

или - 
Элемент, заданный параметром, имеет значение <see langword="null" /> или удален.</exception>
    </member>
    <member name="P:System.Configuration.SchemeSettingElementCollection.Item(System.String)">
      <summary>Возвращает элемент из коллекции <see cref="T:System.Configuration.SchemeSettingElementCollection" />.</summary>
      <param name="name">Строковая ссылка на объект <see cref="T:System.Configuration.SchemeSettingElement" /> в коллекции.</param>
      <returns>Объект <see cref="T:System.Configuration.SchemeSettingElement" /> в коллекции.</returns>
    </member>
    <member name="T:System.Configuration.SectionInformation">
      <summary>Содержит метаданные об отдельном разделе в пределах иерархии конфигурации. Этот класс не наследуется.</summary>
    </member>
    <member name="P:System.Configuration.SectionInformation.AllowDefinition">
      <summary>Возвращает или задает значение, указывающее, где в иерархии файла конфигурации можно определить связанный раздел конфигурации.</summary>
      <returns>Значение, указывающее, где в иерархии файла конфигурации можно объявить связанный объект <see cref="T:System.Configuration.ConfigurationSection" />.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Выбранное значение противоречит значению, которое уже было определено.</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.AllowExeDefinition">
      <summary>Возвращает или задает значение, указывающее, где в иерархии файла конфигурации можно объявить связанный раздел конфигурации.</summary>
      <returns>Значение, указывающее, где в иерархии файла конфигурации можно объявить связанный объект <see cref="T:System.Configuration.ConfigurationSection" /> для EXE-файлов.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Выбранное значение противоречит значению, которое уже было определено.</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.AllowLocation">
      <summary>Возвращает или задает значение, указывающее, допускает ли раздел конфигурации атрибут <see langword="location" />.</summary>
      <returns>Значение <see langword="true" />, если атрибут <see langword="location" /> допускается; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Выбранное значение противоречит значению, которое уже было определено.</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.AllowOverride">
      <summary>Возвращает или задает значение, указывающее, может ли связанный раздел конфигурации быть переопределен файлами конфигурации более низкого уровня.</summary>
      <returns>Значение <see langword="true" />, если раздел может быть переопределен; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.ConfigSource">
      <summary>Возвращает или задает имя включаемого файла, в котором определен связанный раздел конфигурации, если такой файл существует.</summary>
      <returns>Имя включаемого файла, в котором определен связанный раздел <see cref="T:System.Configuration.ConfigurationSection" />, если такой файл существует; в противном случае — пустая строка ("").</returns>
    </member>
    <member name="M:System.Configuration.SectionInformation.ForceDeclaration">
      <summary>Принудительно записывает связанный раздел конфигурации в файле конфигурации.</summary>
    </member>
    <member name="M:System.Configuration.SectionInformation.ForceDeclaration(System.Boolean)">
      <summary>Принудительно записывает связанный раздел конфигурации в файле конфигурации или удаляет существующий раздел из файла конфигурации.</summary>
      <param name="force">Значение <see langword="true" />, если связанный раздел должен быть записан в файле конфигурации; в противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="force" /> это <see langword="true" /> и связанный раздел не может быть перенесен в дочерний файл конфигурации или он не был объявлен.</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.ForceSave">
      <summary>Возвращает или задает значение, указывающее, будет ли сохраняться связанный раздел конфигурации, даже если он не был изменен.</summary>
      <returns>Значение <see langword="true" />, если связанный объект <see cref="T:System.Configuration.ConfigurationSection" /> будет сохраняться, даже если он не был изменен; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.  
   
 Если файл конфигурации сохраняется (даже при отсутствии внесенных изменений), ASP.NET перезапускает приложение.</returns>
    </member>
    <member name="M:System.Configuration.SectionInformation.GetParentSection">
      <summary>Возвращает раздел конфигурации, содержащий раздел конфигурации, связанный с данным объектом.</summary>
      <returns>Раздел конфигурации, содержащий объект <see cref="T:System.Configuration.ConfigurationSection" />, связанный с объектом <see cref="T:System.Configuration.SectionInformation" />.</returns>
      <exception cref="T:System.InvalidOperationException">Данный метод вызывается из родительского раздела.</exception>
    </member>
    <member name="M:System.Configuration.SectionInformation.GetRawXml">
      <summary>Возвращает объект узла XML, который представляет связанный объект раздела конфигурации.</summary>
      <returns>Представление XML для данного раздела конфигурации.</returns>
      <exception cref="T:System.InvalidOperationException">Данный объект конфигурации закрыт и не может быть отредактирован.</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.InheritInChildApplications">
      <summary>Возвращает или задает значение, указывающее, наследуют ли приложения, находящиеся в подкаталоге соответствующего приложения, параметры, установленные в связанном разделе конфигурации.</summary>
      <returns>Значение <see langword="true" />, если параметры, установленные в данном объекте <see cref="T:System.Configuration.ConfigurationSection" />, наследуются дочерними приложениями; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.IsDeclarationRequired">
      <summary>Возвращает значение, указывающее, должен ли раздел конфигурации быть объявлен в файле конфигурации.</summary>
      <returns>Значение <see langword="true" />, если связанный объект <see cref="T:System.Configuration.ConfigurationSection" /> должен быть объявлен в файле конфигурации; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.IsDeclared">
      <summary>Возвращает значение, указывающее, объявлен ли раздел конфигурации в файле конфигурации.</summary>
      <returns>Значение <see langword="true" />, если данный объект <see cref="T:System.Configuration.ConfigurationSection" /> объявлен в файле конфигурации; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.IsLocked">
      <summary>Возвращает значение, указывающее, заблокирован ли связанный раздел конфигурации.</summary>
      <returns>Значение <see langword="true" />, если раздел заблокирован; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.IsProtected">
      <summary>Возвращает значение, указывающее, защищен ли связанный раздел конфигурации.</summary>
      <returns>Значение <see langword="true" />, если данный объект <see cref="T:System.Configuration.ConfigurationSection" /> защищен; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.Name">
      <summary>Возвращает имя связанного раздела конфигурации.</summary>
      <returns>Полное имя раздела конфигурации.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.OverrideMode">
      <summary>Возвращает или задает значение перечисления <see cref="T:System.Configuration.OverrideMode" />, указывающее, может ли связанный раздел конфигурации быть переопределен дочерними файлами конфигурации.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Configuration.OverrideMode" />.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Была предпринята попытка изменить свойства <see cref="P:System.Configuration.SectionInformation.AllowOverride" /> и <see cref="P:System.Configuration.SectionInformation.OverrideMode" />, что не поддерживается по причине несовместимости.</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.OverrideModeDefault">
      <summary>Возвращает или задает значение, указывающее поведение по умолчанию переопределения раздела конфигурации дочерними файлами конфигурации.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Configuration.OverrideMode" />.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Преобразованное поведение указано в родительском разделе конфигурации.</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.OverrideModeEffective">
      <summary>Возвращает поведение переопределения раздела конфигурации, которое зависит от того, могут ли дочерние файлы конфигурации блокировать раздел конфигурации.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.Configuration.OverrideMode" />.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.ProtectionProvider">
      <summary>Возвращает поставщик защищенной конфигурации для связанного раздела конфигурации.</summary>
      <returns>Защищенный поставщик конфигурации для данного объекта <see cref="T:System.Configuration.ConfigurationSection" />.</returns>
    </member>
    <member name="M:System.Configuration.SectionInformation.ProtectSection(System.String)">
      <summary>Отмечает раздел конфигурации для защиты.</summary>
      <param name="protectionProvider">Имя поставщика защиты, которого следует использовать.</param>
      <exception cref="T:System.InvalidOperationException">Свойству <see cref="P:System.Configuration.SectionInformation.AllowLocation" /> задано значение <see langword="false" />.  

или - 
Целевой раздел уже является разделом защищенных данных.</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.RequirePermission">
      <summary>Возвращает значение, указывающее, требует ли связанный раздел конфигурации прав доступа.</summary>
      <returns>Значение <see langword="true" />, если атрибут <see langword="requirePermission" /> имеет значение <see langword="true" />; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Выбранное значение противоречит значению, которое уже было определено.</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.RestartOnExternalChanges">
      <summary>Возвращает или задает значение, указывающее, требует ли изменение во внешнем включаемом файле конфигурации перезапуска приложения.</summary>
      <returns>Значение <see langword="true" />, если изменение во внешнем включаемом файле конфигурации требует перезапуска приложения; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</returns>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Выбранное значение противоречит значению, которое уже было определено.</exception>
    </member>
    <member name="M:System.Configuration.SectionInformation.RevertToParent">
      <summary>Заставляет связанный раздел конфигурации наследовать все значения из родительского раздела.</summary>
      <exception cref="T:System.InvalidOperationException">Данный метод невозможно вызвать вне режима редактирования.</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.SectionName">
      <summary>Возвращает имя связанного раздела конфигурации.</summary>
      <returns>Имя связанного объекта <see cref="T:System.Configuration.ConfigurationSection" />.</returns>
    </member>
    <member name="M:System.Configuration.SectionInformation.SetRawXml(System.String)">
      <summary>Присваивает объекту XML-представление связанного раздела конфигурации в пределах файла конфигурации.</summary>
      <param name="rawXml">Используемый XML-код.</param>
      <exception cref="T:System.ArgumentException">Свойство <paramref name="rawXml" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="P:System.Configuration.SectionInformation.Type">
      <summary>Возвращает или задает имя класса раздела.</summary>
      <returns>Имя класса, связанного с данным разделом <see cref="T:System.Configuration.ConfigurationSection" />.</returns>
      <exception cref="T:System.ArgumentException">Выбранное значение равно <see langword="null" /> или является пустой строкой ("").</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Выбранное значение противоречит значению, которое уже было определено.</exception>
    </member>
    <member name="M:System.Configuration.SectionInformation.UnprotectSection">
      <summary>Снимает шифрование защищенной конфигурации со связанного раздела конфигурации.</summary>
    </member>
    <member name="T:System.Configuration.SettingAttribute">
      <summary>Представляет пользовательский атрибут параметров, используемый для сопоставления информации параметров со свойством параметров.</summary>
    </member>
    <member name="M:System.Configuration.SettingAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.SettingAttribute" />.</summary>
    </member>
    <member name="T:System.Configuration.SettingChangingEventArgs">
      <summary>Предоставляет данные для события <see cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingChangingEventArgs.#ctor(System.String,System.String,System.String,System.Object,System.Boolean)">
      <summary>Инициализирует экземпляр класса <see cref="T:System.Configuration.SettingChangingEventArgs" />.</summary>
      <param name="settingName">Объект <see cref="T:System.String" />, содержащий имя параметра приложения.</param>
      <param name="settingClass">Объект <see cref="T:System.String" />, содержащий описание категории параметра. Данный параметр часто задается для имени группы параметров приложения.</param>
      <param name="settingKey">Объект <see cref="T:System.String" />, содержащий ключ параметров приложения.</param>
      <param name="newValue">Объект <see cref="T:System.Object" />, содержащий новое значение, которое будет назначено свойству параметров приложения.</param>
      <param name="cancel">
        <see langword="true" /> для отмены события; в противном случае — <see langword="false" />.</param>
    </member>
    <member name="P:System.Configuration.SettingChangingEventArgs.NewValue">
      <summary>Возвращает новое значение, которое будет назначено свойству параметров приложения.</summary>
      <returns>Объект <see cref="T:System.Object" />, содержащий новое значение, которое будет назначено свойству параметров приложения.</returns>
    </member>
    <member name="P:System.Configuration.SettingChangingEventArgs.SettingClass">
      <summary>Возвращает категорию свойства параметров приложения.</summary>
      <returns>Объект <see cref="T:System.String" />, содержащий описание категории параметра. Этот параметр часто задается для имени группы параметров приложения.</returns>
    </member>
    <member name="P:System.Configuration.SettingChangingEventArgs.SettingKey">
      <summary>Возвращает ключ параметров приложения, связанный со свойством.</summary>
      <returns>Объект <see cref="T:System.String" />, содержащий ключ параметров приложения.</returns>
    </member>
    <member name="P:System.Configuration.SettingChangingEventArgs.SettingName">
      <summary>Возвращает имя параметра приложения, связанное со свойством параметров приложения.</summary>
      <returns>Объект <see cref="T:System.String" />, содержащий имя параметра приложения.</returns>
    </member>
    <member name="T:System.Configuration.SettingChangingEventHandler">
      <summary>Представляет метод, обрабатывающий событие <see cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" />.</summary>
      <param name="sender">Источник события, в основном, класс-оболочка параметров приложения, производный от класса <see cref="T:System.Configuration.ApplicationSettingsBase" />.</param>
      <param name="e">
        <see cref="T:System.Configuration.SettingChangingEventArgs" />, содержащий данные о событии.</param>
    </member>
    <member name="T:System.Configuration.SettingElement">
      <summary>Представляет упрощенный элемент конфигурации, используемый для изменения элементов конфигурации. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Configuration.SettingElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.SettingElement" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingElement.#ctor(System.String,System.Configuration.SettingsSerializeAs)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.SettingElement" /> на основе предоставленных параметров.</summary>
      <param name="name">Имя объекта <see cref="T:System.Configuration.SettingElement" />.</param>
      <param name="serializeAs">Объект <see cref="T:System.Configuration.SettingsSerializeAs" />. Объект является перечислением, используемым как схема сериализации для хранения параметров конфигурации.</param>
    </member>
    <member name="M:System.Configuration.SettingElement.Equals(System.Object)">
      <summary>Сравнивает текущий экземпляр <see cref="T:System.Configuration.SettingElement" /> с указанным объектом.</summary>
      <param name="settings">Объект, с которым выполняется сравнение.</param>
      <returns>Значение <see langword="true" />, если экземпляр <see cref="T:System.Configuration.SettingElement" /> равен указанному объекту; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.SettingElement.GetHashCode">
      <summary>Возвращает уникальное значение, представляющее текущий экземпляр <see cref="T:System.Configuration.SettingElement" />.</summary>
      <returns>Уникальное значение, представляющее текущий экземпляр <see cref="T:System.Configuration.SettingElement" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingElement.Name">
      <summary>Получает или задает имя объекта <see cref="T:System.Configuration.SettingElement" />.</summary>
      <returns>Имя объекта <see cref="T:System.Configuration.SettingElement" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingElement.SerializeAs">
      <summary>Возвращает или задает механизм сериализации, используемый для сохранения значений объекта <see cref="T:System.Configuration.SettingElement" />.</summary>
      <returns>Объект <see cref="T:System.Configuration.SettingsSerializeAs" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingElement.Value">
      <summary>Возвращает или задает значение объекта <see cref="T:System.Configuration.SettingElement" />, используя объект <see cref="T:System.Configuration.SettingValueElement" />.</summary>
      <returns>Объект <see cref="T:System.Configuration.SettingValueElement" />, содержащий значение объекта <see cref="T:System.Configuration.SettingElement" />.</returns>
    </member>
    <member name="T:System.Configuration.SettingElementCollection">
      <summary>Содержит коллекцию объектов <see cref="T:System.Configuration.SettingElement" />. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Configuration.SettingElementCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.SettingElementCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingElementCollection.Add(System.Configuration.SettingElement)">
      <summary>Добавляет объект <see cref="T:System.Configuration.SettingElement" /> в коллекцию.</summary>
      <param name="element">Объект <see cref="T:System.Configuration.SettingElement" /> для добавления в коллекцию.</param>
    </member>
    <member name="M:System.Configuration.SettingElementCollection.Clear">
      <summary>Удаляет все объекты <see cref="T:System.Configuration.SettingElement" /> из коллекции.</summary>
    </member>
    <member name="P:System.Configuration.SettingElementCollection.CollectionType">
      <summary>Возвращает тип коллекции конфигураций.</summary>
      <returns>Объект <see cref="T:System.Configuration.ConfigurationElementCollectionType" /> коллекции.</returns>
    </member>
    <member name="M:System.Configuration.SettingElementCollection.Get(System.String)">
      <summary>Возвращает объект <see cref="T:System.Configuration.SettingElement" /> из коллекции.</summary>
      <param name="elementKey">Любое значение строки представляет объект <see cref="T:System.Configuration.SettingElement" /> в коллекции.</param>
      <returns>Объект <see cref="T:System.Configuration.SettingElement" />.</returns>
    </member>
    <member name="M:System.Configuration.SettingElementCollection.Remove(System.Configuration.SettingElement)">
      <summary>Удаляет объект <see cref="T:System.Configuration.SettingElement" /> из коллекции.</summary>
      <param name="element">Объект <see cref="T:System.Configuration.SettingElement" />.</param>
    </member>
    <member name="T:System.Configuration.SettingsAttributeDictionary">
      <summary>Представляет коллекцию пар ключ/значение, используемых для описания объекта конфигурации как объект <see cref="T:System.Configuration.SettingsProperty" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsAttributeDictionary.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.SettingsAttributeDictionary" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsAttributeDictionary.#ctor(System.Configuration.SettingsAttributeDictionary)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.SettingsAttributeDictionary" />.</summary>
      <param name="attributes">Коллекция пар "ключ-значение", относящихся к параметрам конфигурации.</param>
    </member>
    <member name="T:System.Configuration.SettingsBase">
      <summary>Предоставляет базовый класс, используемый для поддержки параметров свойств пользователя.</summary>
    </member>
    <member name="M:System.Configuration.SettingsBase.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.SettingsBase" />.</summary>
    </member>
    <member name="P:System.Configuration.SettingsBase.Context">
      <summary>Возвращает связанный контекст параметров.</summary>
      <returns>
        <see cref="T:System.Configuration.SettingsContext" /> связан с экземпляром параметров.</returns>
    </member>
    <member name="M:System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)">
      <summary>Инициализирует внутренние свойства, используемые объектом <see cref="T:System.Configuration.SettingsBase" />.</summary>
      <param name="context">Контекст параметров, относящийся к свойствам параметров.</param>
      <param name="properties">Свойства параметров, которые будут доступны из экземпляра <see cref="T:System.Configuration.SettingsBase" />.</param>
      <param name="providers">Инициализированные поставщики, которые должны использоваться при загрузке и сохранении значений свойств.</param>
    </member>
    <member name="P:System.Configuration.SettingsBase.IsSynchronized">
      <summary>Возвращает значение, указывающее на то, является ли доступ к объекту синхронизированным (потокобезопасным).</summary>
      <returns>Значение <see langword="true" />, если доступ к коллекции <see cref="T:System.Configuration.SettingsBase" /> является синхронизированным; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsBase.Item(System.String)">
      <summary>Возвращает или задает значение определенного свойства параметров.</summary>
      <param name="propertyName">
        <see cref="T:System.String" />, содержащий имя свойства для доступа.</param>
      <returns>Если найдено, значение именованного свойства параметров.</returns>
      <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">Нет свойств, связанных с текущим объектом, или указанное свойство не может быть найдено.</exception>
      <exception cref="T:System.Configuration.SettingsPropertyIsReadOnlyException">Предпринята попытка задать свойство, доступное только для чтения.</exception>
      <exception cref="T:System.Configuration.SettingsPropertyWrongTypeException">Предоставленное значение имеет несовместимый со свойством параметров тип значения во время операции установки.</exception>
    </member>
    <member name="P:System.Configuration.SettingsBase.Properties">
      <summary>Возвращает коллекцию свойств параметров.</summary>
      <returns>Коллекция <see cref="T:System.Configuration.SettingsPropertyCollection" />, содержащая все объекты <see cref="T:System.Configuration.SettingsProperty" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsBase.PropertyValues">
      <summary>Возвращает коллекцию значений свойств параметров.</summary>
      <returns>Коллекция объектов <see cref="T:System.Configuration.SettingsPropertyValue" />, представляющих конкретные значения данных для свойств, управляемых экземпляром <see cref="T:System.Configuration.SettingsBase" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsBase.Providers">
      <summary>Возвращает коллекцию поставщиков параметров.</summary>
      <returns>
        <see cref="T:System.Configuration.SettingsProviderCollection" />, содержащий объекты <see cref="T:System.Configuration.SettingsProvider" />.</returns>
    </member>
    <member name="M:System.Configuration.SettingsBase.Save">
      <summary>Сохраняет текущие значения свойств параметров.</summary>
    </member>
    <member name="M:System.Configuration.SettingsBase.Synchronized(System.Configuration.SettingsBase)">
      <summary>Предоставляет класс <see cref="T:System.Configuration.SettingsBase" />, являющийся синхронизированным (потокобезопасным).</summary>
      <param name="settingsBase">Класс, используемый для поддержки параметров свойств пользователя.</param>
      <returns>Синхронизированный класс <see cref="T:System.Configuration.SettingsBase" />.</returns>
    </member>
    <member name="T:System.Configuration.SettingsContext">
      <summary>Предоставляет контекстную информацию, которую поставщик может использовать при сохранении параметров.</summary>
    </member>
    <member name="M:System.Configuration.SettingsContext.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.SettingsContext" />.</summary>
    </member>
    <member name="T:System.Configuration.SettingsDescriptionAttribute">
      <summary>Предоставляет строку, описывающую индивидуальное свойство конфигурации. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Configuration.SettingsDescriptionAttribute.#ctor(System.String)">
      <summary>Инициализирует экземпляр класса <see cref="T:System.Configuration.SettingsDescriptionAttribute" />.</summary>
      <param name="description">
        <see cref="T:System.String" /> используется в качестве описательного текста.</param>
    </member>
    <member name="P:System.Configuration.SettingsDescriptionAttribute.Description">
      <summary>Возвращает описательный текст для связанного свойства конфигурации.</summary>
      <returns>
        <see cref="T:System.String" />, содержащий описательный текст для связанного свойства конфигурации.</returns>
    </member>
    <member name="T:System.Configuration.SettingsGroupDescriptionAttribute">
      <summary>Предоставляет строку, которая описывает группу свойств параметров. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Configuration.SettingsGroupDescriptionAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.SettingsGroupDescriptionAttribute" />.</summary>
      <param name="description">
        <see cref="T:System.String" />, содержащий описательный текст для группы параметров приложения.</param>
    </member>
    <member name="P:System.Configuration.SettingsGroupDescriptionAttribute.Description">
      <summary>Описательный текст для группы свойств параметров приложения.</summary>
      <returns>
        <see cref="T:System.String" />, содержащий описательный текст для группы параметров приложения.</returns>
    </member>
    <member name="T:System.Configuration.SettingsGroupNameAttribute">
      <summary>Определяет имя для группы свойств параметров приложения. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Configuration.SettingsGroupNameAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.SettingsGroupNameAttribute" />.</summary>
      <param name="groupName">Объект <see cref="T:System.String" />, содержащий имя группы свойств параметров приложения.</param>
    </member>
    <member name="P:System.Configuration.SettingsGroupNameAttribute.GroupName">
      <summary>Возвращает имя группы свойств параметров приложения.</summary>
      <returns>Объект <see cref="T:System.String" />, содержащий имя группы свойств параметров приложения.</returns>
    </member>
    <member name="T:System.Configuration.SettingsLoadedEventArgs">
      <summary>Предоставляет данные для события <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsLoadedEventArgs.#ctor(System.Configuration.SettingsProvider)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.SettingsLoadedEventArgs" />.</summary>
      <param name="provider">
        <see cref="T:System.Configuration.SettingsProvider" /> объект, параметры которого загружены.</param>
    </member>
    <member name="P:System.Configuration.SettingsLoadedEventArgs.Provider">
      <summary>Возвращает параметры поставщика, используемые для хранения параметров конфигурации.</summary>
      <returns>Поставщик параметров.</returns>
    </member>
    <member name="T:System.Configuration.SettingsLoadedEventHandler">
      <summary>Представляет метод, обрабатывающий событие <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" />.</summary>
      <param name="sender">Источник события, обычно класс событий.</param>
      <param name="e">Объект <see cref="T:System.Configuration.SettingsLoadedEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="T:System.Configuration.SettingsManageability">
      <summary>Предоставляет значения, указывающие, какие службы должны быть доступны для параметров приложения.</summary>
    </member>
    <member name="F:System.Configuration.SettingsManageability.Roaming">
      <summary>Сохраняет параметры приложения в перемещаемых профилях пользователей. Дополнительные сведения о перемещаемых профилях пользователей см. в разделе Изолированное хранилище и перемещение.</summary>
    </member>
    <member name="T:System.Configuration.SettingsManageabilityAttribute">
      <summary>Указывает специальные службы свойств параметров приложения. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Configuration.SettingsManageabilityAttribute.#ctor(System.Configuration.SettingsManageability)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.SettingsManageabilityAttribute" />.</summary>
      <param name="manageability">Значение <see cref="T:System.Configuration.SettingsManageability" />, перечисляющее запрашиваемые службы.</param>
    </member>
    <member name="P:System.Configuration.SettingsManageabilityAttribute.Manageability">
      <summary>Возвращает набор запрошенных специальных служб.</summary>
      <returns>Значение, получаемое использованием логического оператора <see langword="OR" /> для объединения всех перечисленных значений <see cref="T:System.Configuration.SettingsManageability" />, соответствующих затребованным службам.</returns>
    </member>
    <member name="T:System.Configuration.SettingsProperty">
      <summary>Объект внутренне используется как класс, представляющий метаданные об отдельном свойстве конфигурации.</summary>
    </member>
    <member name="M:System.Configuration.SettingsProperty.#ctor(System.Configuration.SettingsProperty)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Configuration.SettingsProperty" /> по предоставленным параметрам.</summary>
      <param name="propertyToCopy">Детализирует копию существующего <see cref="T:System.Configuration.SettingsProperty" /> объекта.</param>
    </member>
    <member name="M:System.Configuration.SettingsProperty.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.SettingsProperty" />. на основе предоставленного параметра.</summary>
      <param name="name">Детализирует имя существующего <see cref="T:System.Configuration.SettingsProperty" /> объекта.</param>
    </member>
    <member name="M:System.Configuration.SettingsProperty.#ctor(System.String,System.Type,System.Configuration.SettingsProvider,System.Boolean,System.Object,System.Configuration.SettingsSerializeAs,System.Configuration.SettingsAttributeDictionary,System.Boolean,System.Boolean)">
      <summary>Создает новый экземпляр класса<see cref="T:System.Configuration.SettingsProperty" /> по параметрам набора данных.</summary>
      <param name="name">Имя объекта <see cref="T:System.Configuration.SettingsProperty" />.</param>
      <param name="propertyType">Тип<see cref="T:System.Configuration.SettingsProperty" /> объекта.</param>
      <param name="provider">Объект <see cref="T:System.Configuration.SettingsProvider" />, используемый для сохранения состояния.</param>
      <param name="isReadOnly">
        <see cref="T:System.Boolean" /> значение, указывающее, является ли объект доступным<see cref="T:System.Configuration.SettingsProperty" /> только для чтения.</param>
      <param name="defaultValue">Значение объекта по умолчанию <see cref="T:System.Configuration.SettingsProperty" />.</param>
      <param name="serializeAs">Объект <see cref="T:System.Configuration.SettingsSerializeAs" />. Объект является перечислением, используемым как схема сериализации для хранения параметров приложения.</param>
      <param name="attributes">Объект <see cref="T:System.Configuration.SettingsAttributeDictionary" />.</param>
      <param name="throwOnErrorDeserializing">Логическое значение, определяющее произойдет ли ошибка, когда свойство неудачно выполнит десериализацию.</param>
      <param name="throwOnErrorSerializing">Логическое значение, определяющее произойдет ли ошибка, когда свойство неудачно выполнит сериализацию.</param>
    </member>
    <member name="P:System.Configuration.SettingsProperty.Attributes">
      <summary>Возвращает объект <see cref="T:System.Configuration.SettingsAttributeDictionary" />, содержащий значение объекта <see cref="T:System.Configuration.SettingsProperty" />.</summary>
      <returns>Объект <see cref="T:System.Configuration.SettingsAttributeDictionary" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.DefaultValue">
      <summary>Возвращает или задает значение объекта по умолчанию<see cref="T:System.Configuration.SettingsProperty" />.</summary>
      <returns>Объект <see cref="T:System.Configuration.SettingsProperty" />, содержащий значение по умолчанию.</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.IsReadOnly">
      <summary>Возвращает или устанавливает значение, указывающее, является ли объект <see cref="T:System.Configuration.SettingsProperty" /> доступным только для чтения.</summary>
      <returns>Значение <see langword="true" />, если интерфейс <see cref="T:System.Configuration.SettingsProperty" /> доступен только для чтения; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.Name">
      <summary>Получает или задает имя объекта <see cref="T:System.Configuration.SettingsProperty" />.</summary>
      <returns>Имя <see cref="T:System.Configuration.SettingsProperty" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.PropertyType">
      <summary>Возвращает или задает тип для <see cref="T:System.Configuration.SettingsProperty" />.</summary>
      <returns>Тип для <see cref="T:System.Configuration.SettingsProperty" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.Provider">
      <summary>Возвращает или задает поставщика для <see cref="T:System.Configuration.SettingsProperty" />.</summary>
      <returns>Объект <see cref="T:System.Configuration.SettingsProvider" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.SerializeAs">
      <summary>Возвращает или задает объект <see cref="T:System.Configuration.SettingsSerializeAs" /> для <see cref="T:System.Configuration.SettingsProperty" />.</summary>
      <returns>Объект <see cref="T:System.Configuration.SettingsSerializeAs" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.ThrowOnErrorDeserializing">
      <summary>Возвращает или задает значение, определяющее произойдет ли ошибка, когда свойство неудачно выполнит десериализацию.</summary>
      <returns>
        <see langword="true" />если произойдет ошибка, когда свойство неудачно выполнит десериализацию, в противном случае, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.ThrowOnErrorSerializing">
      <summary>Возвращает или задает значение, определяющее произойдет ли ошибка, когда свойство неудачно выполнит сериализацию.</summary>
      <returns>
        <see langword="true" />если произойдет ошибка, когда свойство неудачно выполнит сериализацию, в противном случае, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Configuration.SettingsPropertyCollection">
      <summary>Содержит коллекцию объектов <see cref="T:System.Configuration.SettingsProperty" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.SettingsPropertyCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.Add(System.Configuration.SettingsProperty)">
      <summary>Добавляет объект <see cref="T:System.Configuration.SettingsProperty" /> в коллекцию.</summary>
      <param name="property">Объект <see cref="T:System.Configuration.SettingsProperty" />.</param>
      <exception cref="T:System.NotSupportedException">Коллекция только для чтения.</exception>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.Clear">
      <summary>Удаляет все объекты <see cref="T:System.Configuration.SettingsProperty" /> из коллекции.</summary>
      <exception cref="T:System.NotSupportedException">Коллекция только для чтения.</exception>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.Clone">
      <summary>Создает копию существующей коллекции.</summary>
      <returns>Класс <see cref="T:System.Configuration.SettingsPropertyCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.CopyTo(System.Array,System.Int32)">
      <summary>Копирует данный объект <see cref="T:System.Configuration.SettingsPropertyCollection" /> в массив.</summary>
      <param name="array">Массив, в который выполняется копирование объекта.</param>
      <param name="index">Значение индекса, с которого начинается копирование.</param>
    </member>
    <member name="P:System.Configuration.SettingsPropertyCollection.Count">
      <summary>Получает значение, указывающее число объектов <see cref="T:System.Configuration.SettingsProperty" /> в коллекции.</summary>
      <returns>Количество объектов <see cref="T:System.Configuration.SettingsProperty" /> в коллекции.</returns>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.GetEnumerator">
      <summary>Получает объект <see cref="T:System.Collections.IEnumerator" /> в том виде, в котором он применяется в данной коллекции.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" /> в том виде, в котором он применяется в коллекции.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyCollection.IsSynchronized">
      <summary>Получает значение, указывающее, является ли доступ к коллекции синхронизированным (потокобезопасным).</summary>
      <returns>Значение <see langword="true" />, если доступ к коллекции <see cref="T:System.Configuration.SettingsPropertyCollection" /> является синхронизированным; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyCollection.Item(System.String)">
      <summary>Получает элемент коллекции с указанным именем.</summary>
      <param name="name">Имя объекта <see cref="T:System.Configuration.SettingsProperty" />.</param>
      <returns>Объект <see cref="T:System.Configuration.SettingsProperty" /> с указанным <paramref name="name" />.</returns>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.OnAdd(System.Configuration.SettingsProperty)">
      <summary>Осуществляет дополнительные выборочные действия при добавлении к содержимому экземпляра <see cref="T:System.Configuration.SettingsPropertyCollection" />.</summary>
      <param name="property">Объект <see cref="T:System.Configuration.SettingsProperty" />.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.OnAddComplete(System.Configuration.SettingsProperty)">
      <summary>Осуществляет дополнительные выборочные действия после добавления к содержимому экземпляра <see cref="T:System.Configuration.SettingsPropertyCollection" />.</summary>
      <param name="property">Объект <see cref="T:System.Configuration.SettingsProperty" />.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.OnClear">
      <summary>Осуществляет дополнительные выборочные действия при чистке содержимого экземпляра <see cref="T:System.Configuration.SettingsPropertyCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.OnClearComplete">
      <summary>Осуществляет дополнительные выборочные действия после чистки содержимого экземпляра <see cref="T:System.Configuration.SettingsPropertyCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.OnRemove(System.Configuration.SettingsProperty)">
      <summary>Осуществляет дополнительные выборочные действия при удалении содержимого экземпляра <see cref="T:System.Configuration.SettingsPropertyCollection" />.</summary>
      <param name="property">Объект <see cref="T:System.Configuration.SettingsProperty" />.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.OnRemoveComplete(System.Configuration.SettingsProperty)">
      <summary>Осуществляет дополнительные выборочные действия после удаления содержимого экземпляра <see cref="T:System.Configuration.SettingsPropertyCollection" />.</summary>
      <param name="property">Объект <see cref="T:System.Configuration.SettingsProperty" />.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.Remove(System.String)">
      <summary>Удаляет объект <see cref="T:System.Configuration.SettingsProperty" /> из коллекции.</summary>
      <param name="name">Имя объекта <see cref="T:System.Configuration.SettingsProperty" />.</param>
      <exception cref="T:System.NotSupportedException">Коллекция только для чтения.</exception>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.SetReadOnly">
      <summary>Устанавливает статус коллекции "только для чтения".</summary>
    </member>
    <member name="P:System.Configuration.SettingsPropertyCollection.SyncRoot">
      <summary>Получает объект, используемый для синхронизации доступа к коллекции.</summary>
      <returns>Объект, используемый для синхронизации доступа к коллекции.</returns>
    </member>
    <member name="T:System.Configuration.SettingsPropertyIsReadOnlyException">
      <summary>Предоставляет исключение для <see cref="T:System.Configuration.SettingsProperty" /> объектов, доступных только для чтения.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.SettingsPropertyIsReadOnlyException" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.SettingsPropertyIsReadOnlyException" /> на основе предоставленных параметров.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий сериализованные данные объекта по возникающему исключению.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий контекстные сведения об источнике или назначении сериализованного потока.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.SettingsPropertyIsReadOnlyException" /> на основе предоставленного параметра.</summary>
      <param name="message">Строка, содержащая сообщение об исключении.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.SettingsPropertyIsReadOnlyException" /> на основе предоставленных параметров.</summary>
      <param name="message">Строка, содержащая сообщение об исключении.</param>
      <param name="innerException">Исключение, которое является причиной текущего исключения.</param>
    </member>
    <member name="T:System.Configuration.SettingsPropertyNotFoundException">
      <summary>Генерирует исключение для ненайденных объектов <see cref="T:System.Configuration.SettingsProperty" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyNotFoundException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.SettingsPropertyNotFoundException" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.SettingsPropertyNotFoundException" /> на основе предоставленных параметров.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий сериализованные данные объекта по возникающему исключению.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий контекстные сведения об источнике или назначении сериализованного потока.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyNotFoundException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.SettingsPropertyNotFoundException" />, используя предоставленный параметр.</summary>
      <param name="message">Строка, содержащая сообщение об исключении.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.SettingsPropertyNotFoundException" /> на основе предоставленных параметров.</summary>
      <param name="message">Строка, содержащая сообщение об исключении.</param>
      <param name="innerException">Исключение, которое является причиной текущего исключения.</param>
    </member>
    <member name="T:System.Configuration.SettingsPropertyValue">
      <summary>Содержит значение свойства установок, которое может быть загружено и сохранено экземпляром <see cref="T:System.Configuration.SettingsBase" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValue.#ctor(System.Configuration.SettingsProperty)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.SettingsPropertyValue" /> на основе предоставленных параметров.</summary>
      <param name="property">Определяет объект <see cref="T:System.Configuration.SettingsProperty" />.</param>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.Deserialized">
      <summary>Возвращает или устанавливает признак, указывающий может ли значение объекта <see cref="T:System.Configuration.SettingsProperty" /> быть десериализовано.</summary>
      <returns>
        <see langword="true" />, если значение объекта <see cref="T:System.Configuration.SettingsProperty" /> было десериализовано; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.IsDirty">
      <summary>Возвращает или устанавливает признак, указывающий было ли изменено значение объекта <see cref="T:System.Configuration.SettingsProperty" />.</summary>
      <returns>
        <see langword="true" />, если значение объекта <see cref="T:System.Configuration.SettingsProperty" /> было изменено; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.Name">
      <summary>Возвращает имя свойства из связанного объекта <see cref="T:System.Configuration.SettingsProperty" />.</summary>
      <returns>Имя объекта <see cref="T:System.Configuration.SettingsProperty" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.Property">
      <summary>Получает объект <see cref="T:System.Configuration.SettingsProperty" />.</summary>
      <returns>Объект <see cref="T:System.Configuration.SettingsProperty" />, описывающий объект <see cref="T:System.Configuration.SettingsPropertyValue" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.PropertyValue">
      <summary>Возвращает или задает значение объекта <see cref="T:System.Configuration.SettingsProperty" />.</summary>
      <returns>Значение объекта <see cref="T:System.Configuration.SettingsProperty" />. Когда значение устанавливается, свойство <see cref="P:System.Configuration.SettingsPropertyValue.IsDirty" /> устанавливается в <see langword="true" /> и <see cref="P:System.Configuration.SettingsPropertyValue.UsingDefaultValue" /> устанавливается в <see langword="false" />.  
Когда в первый раз к значению производится доступ из свойства <see cref="P:System.Configuration.SettingsPropertyValue.PropertyValue" />, и если значение изначально хранилось в объекте <see cref="T:System.Configuration.SettingsPropertyValue" /> как сериализованное представление, используя свойство <see cref="P:System.Configuration.SettingsPropertyValue.SerializedValue" />, то свойство <see cref="P:System.Configuration.SettingsPropertyValue.PropertyValue" /> инициирует десериализацию лежащего в основе значения.  Как побочный эффект, свойство <see cref="P:System.Configuration.SettingsPropertyValue.Deserialized" /> будет установлено в <see langword="true" />.  
Если эта цепочка событий происходит в ASP.NET, и если ошибка случается в процессе десериализации, то ошибка заносится в журнал, используя средства мониторинга состояния оборудования ASP.NET. По умолчанию, это означает, что ошибки десериализации будут показываться в Журнале событий приложения при работе под ASP.NET. Если этот процесс происходит вне ASP.NET, и если ошибка случается во время десериализации, то ошибка подавляется, и реализуется оставшаяся часть процесса десериализации. Если нет сериализованных значений для десериализации при попытке выполнения десериализации, то объект <see cref="T:System.Configuration.SettingsPropertyValue" /> попытается вернуться к значению по умолчанию, если оно было сконфигурировано согласно определению на связанном экземпляре <see cref="T:System.Configuration.SettingsProperty" />. В этом случае, если свойство <see cref="P:System.Configuration.SettingsProperty.DefaultValue" /> установлено либо в <see langword="null" />, либо в строку [null], то объект <see cref="T:System.Configuration.SettingsPropertyValue" /> будет инициализировать свойство <see cref="P:System.Configuration.SettingsPropertyValue.PropertyValue" /> либо в <see langword="null" /> для ссылочных типов, либо в значение по умолчанию для ассоциированного типа значения.  С другой стороны, если свойство <see cref="P:System.Configuration.SettingsProperty.DefaultValue" /> содержит законную ссылку на объект или строковое значение (отличное от "[null]"), то взамен возвращается свойство <see cref="P:System.Configuration.SettingsProperty.DefaultValue" />.  
Если нет сериализованных значений для десериализации при попытке выполнения десериализации, и не определено значение по умолчанию, то для строковых типов будет возвращена пустая строка. Для всех остальных типов экземпляр по умолчанию будет возвращен вызовом <see cref="M:System.Activator.CreateInstance(System.Type)" /> для ссылочных типов. Это означает, что будет предпринята попытка создать экземпляр объекта с помощью конструктора без параметров.  Если эта попытка терпит неудачу, то возвращается <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException">Произошла ошибка при попытке использовать значение по умолчанию из свойства <see cref="P:System.Configuration.SettingsProperty.DefaultValue" />.  Либо потерпела неудачу попытка преобразовать свойство <see cref="P:System.Configuration.SettingsProperty.DefaultValue" /> в законный тип, или результирующее значение оказалось несовместимым с типом определенным <see cref="P:System.Configuration.SettingsProperty.PropertyType" />.</exception>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.SerializedValue">
      <summary>Возвращает или задает сериализованное значение объекта <see cref="T:System.Configuration.SettingsProperty" />.</summary>
      <returns>Сериализованное значение объекта <see cref="T:System.Configuration.SettingsProperty" />.</returns>
      <exception cref="T:System.ArgumentException">Опции сериализации для свойства указало на использование преобразователя строкового типа, но преобразователь типа не был доступен.</exception>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.UsingDefaultValue">
      <summary>Возвращает логическое значение, определяющее, является ли значение объекта <see cref="T:System.Configuration.SettingsPropertyValue" /> значением по умолчанию, как определено значением свойства <see cref="P:System.Configuration.SettingsProperty.DefaultValue" /> на ассоциированном объекте <see cref="T:System.Configuration.SettingsProperty" />.</summary>
      <returns>
        <see langword="true" />, если значение объекта <see cref="T:System.Configuration.SettingsProperty" /> является значением по умолчанию; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="T:System.Configuration.SettingsPropertyValueCollection">
      <summary>Содержит коллекцию значений свойства параметров, которые сопоставляют объекты <see cref="T:System.Configuration.SettingsProperty" /> с объектами <see cref="T:System.Configuration.SettingsPropertyValue" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.SettingsPropertyValueCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.Add(System.Configuration.SettingsPropertyValue)">
      <summary>Добавляет объект <see cref="T:System.Configuration.SettingsPropertyValue" /> в коллекцию.</summary>
      <param name="property">Объект <see cref="T:System.Configuration.SettingsPropertyValue" />.</param>
      <exception cref="T:System.NotSupportedException">Была сделана попытка добавить элемент в коллекцию, но коллекция отмечена, как доступная только для чтения.</exception>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.Clear">
      <summary>Удаляет все объекты <see cref="T:System.Configuration.SettingsPropertyValue" /> из коллекции.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.Clone">
      <summary>Создает копию существующей коллекции.</summary>
      <returns>Класс <see cref="T:System.Configuration.SettingsPropertyValueCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.CopyTo(System.Array,System.Int32)">
      <summary>Копирует данную коллекцию <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> в массив.</summary>
      <param name="array">Массив, в который копируется коллекция.</param>
      <param name="index">Индекс, с которого начинается копирование.</param>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValueCollection.Count">
      <summary>Получает значение, указывающее число объектов <see cref="T:System.Configuration.SettingsPropertyValue" /> в коллекции.</summary>
      <returns>Количество объектов <see cref="T:System.Configuration.SettingsPropertyValue" /> в коллекции.</returns>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.GetEnumerator">
      <summary>Получает объект <see cref="T:System.Collections.IEnumerator" /> в том виде, в котором он применяется в данной коллекции.</summary>
      <returns>Объект <see cref="T:System.Collections.IEnumerator" /> в том виде, в котором он применяется в коллекции.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValueCollection.IsSynchronized">
      <summary>Получает значение, указывающее, является ли доступ к коллекции синхронизированным (потокобезопасным).</summary>
      <returns>
        <see langword="true" />, если доступ к коллекции <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> является синхронизированным; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValueCollection.Item(System.String)">
      <summary>Возвращает элемент из коллекции.</summary>
      <param name="name">Объект <see cref="T:System.Configuration.SettingsPropertyValue" />.</param>
      <returns>Объект <see cref="T:System.Configuration.SettingsPropertyValue" /> с указанным <paramref name="name" />.</returns>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.Remove(System.String)">
      <summary>Удаляет объект <see cref="T:System.Configuration.SettingsPropertyValue" /> из коллекции.</summary>
      <param name="name">Имя объекта <see cref="T:System.Configuration.SettingsPropertyValue" />.</param>
      <exception cref="T:System.NotSupportedException">Была сделана попытка удалить элемент из коллекции, но коллекция отмечена, как доступная только для чтения.</exception>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.SetReadOnly">
      <summary>Устанавливает статус коллекции "только для чтения".</summary>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValueCollection.SyncRoot">
      <summary>Получает объект, используемый для синхронизации доступа к коллекции.</summary>
      <returns>Объект, используемый для синхронизации доступа к коллекции.</returns>
    </member>
    <member name="T:System.Configuration.SettingsPropertyWrongTypeException">
      <summary>Предоставляет исключение, возникающее, когда недопустимый тип используется с объектом <see cref="T:System.Configuration.SettingsProperty" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.SettingsPropertyWrongTypeException" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.SettingsPropertyWrongTypeException" /> на основе предоставленных параметров.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, хранящий сериализованные данные объекта, относящиеся к выдаваемому исключению.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий контекстные сведения об источнике или назначении сериализованного потока.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor(System.String)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Configuration.SettingsPropertyWrongTypeException" /> согласно указанному параметру.</summary>
      <param name="message">Строка, содержащая сообщение об исключении.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.SettingsPropertyWrongTypeException" /> на основе предоставленных параметров.</summary>
      <param name="message">Строка, содержащая сообщение об исключении.</param>
      <param name="innerException">Исключение, которое является причиной текущего исключения.</param>
    </member>
    <member name="T:System.Configuration.SettingsProvider">
      <summary>Действует как базовый класс для извлечения поставщиков пользовательских параметров в архитектуре параметров приложения.</summary>
    </member>
    <member name="M:System.Configuration.SettingsProvider.#ctor">
      <summary>Инициализирует экземпляр класса <see cref="T:System.Configuration.SettingsProvider" />.</summary>
    </member>
    <member name="P:System.Configuration.SettingsProvider.ApplicationName">
      <summary>Возвращает или задает имя работающего в данный момент приложения.</summary>
      <returns>Значение <see cref="T:System.String" /> типа, содержащее сокращенное имя приложения, которое не содержит полный путь или расширение, например <c>симплеаппсеттингс</c>.</returns>
    </member>
    <member name="M:System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
      <summary>Возвращает коллекцию значений свойства параметров для указанного экземпляра приложения и группы свойств параметров.</summary>
      <param name="context">Объект <see cref="T:System.Configuration.SettingsContext" />, описывающий текущее использование приложения.</param>
      <param name="collection">Объект <see cref="T:System.Configuration.SettingsPropertyCollection" />, содержащий группу свойств параметров, значения которых необходимо извлечь.</param>
      <returns>Объект <see cref="T:System.Configuration.SettingsPropertyValueCollection" />, содержащий значения для указанной группы свойств параметров.</returns>
    </member>
    <member name="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)">
      <summary>Задает значения указанной группы параметров свойств.</summary>
      <param name="context">Объект <see cref="T:System.Configuration.SettingsContext" />, описывающий текущее использование приложения.</param>
      <param name="collection">Объект <see cref="T:System.Configuration.SettingsPropertyValueCollection" />, представляющий группу параметров свойств, которые необходимо задать.</param>
    </member>
    <member name="T:System.Configuration.SettingsProviderAttribute">
      <summary>Указывает поставщик параметров, используемый для хранения текущего класса параметров приложения или свойства. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Configuration.SettingsProviderAttribute.#ctor(System.String)">
      <summary>Инициализирует экземпляр класса <see cref="T:System.Configuration.SettingsProviderAttribute" />.</summary>
      <param name="providerTypeName">Объект <see cref="T:System.String" />, содержащий имя поставщика параметров.</param>
    </member>
    <member name="M:System.Configuration.SettingsProviderAttribute.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.SettingsProviderAttribute" />.</summary>
      <param name="providerType">Объект <see cref="T:System.Type" />, содержащий тип поставщика параметров.</param>
    </member>
    <member name="P:System.Configuration.SettingsProviderAttribute.ProviderTypeName">
      <summary>Возвращает имя типа поставщика параметров.</summary>
      <returns>Объект <see cref="T:System.String" />, содержащий имя поставщика параметров.</returns>
    </member>
    <member name="T:System.Configuration.SettingsProviderCollection">
      <summary>Представляет коллекцию поставщиков установок приложения.</summary>
    </member>
    <member name="M:System.Configuration.SettingsProviderCollection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.SettingsProviderCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsProviderCollection.Add(System.Configuration.Provider.ProviderBase)">
      <summary>Добавляет поставщика установок в коллекцию.</summary>
      <param name="provider">Объект <see cref="T:System.Configuration.Provider.ProviderBase" /> для добавления в коллекцию.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="provider" /> имеет тип, отличный от <see cref="T:System.Configuration.SettingsProvider" />.  

или - 
Свойство <see cref="P:System.Configuration.Provider.ProviderBase.Name" /> параметра параметра равно NULL или пустой строке.  

или - 
Поставщик установок с таким же <see cref="P:System.Configuration.Provider.ProviderBase.Name" /> уже имеется в коллекции.</exception>
      <exception cref="T:System.NotSupportedException">Коллекция только для чтения.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="provider" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="P:System.Configuration.SettingsProviderCollection.Item(System.String)">
      <summary>Возвращает поставщика установок в коллекции, соответствующей указанному имени.</summary>
      <param name="name">Строка,<see cref="T:System.String" /> содержащая дружественное имя поставщика установок.</param>
      <returns>Если поиск успешен, возвращается объект <see cref="T:System.Configuration.SettingsProvider" /> с именем соответствующим указанному имени; в противном случае — <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="name" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">При установке этого значения коллекция должна быть доступной только для чтения.</exception>
    </member>
    <member name="T:System.Configuration.SettingsSavingEventHandler">
      <summary>Представляет метод, обрабатывающий событие <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" />.</summary>
      <param name="sender">Источник события, обычно, — контейнер с данными или коллекция, связанная с данными.</param>
      <param name="e">Объект <see cref="T:System.ComponentModel.CancelEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="T:System.Configuration.SettingsSerializeAs">
      <summary>Определяет схему сериализации, используемую для хранения параметров приложения.</summary>
    </member>
    <member name="F:System.Configuration.SettingsSerializeAs.Binary">
      <summary>Свойство параметров сериализуется с помощью двоичного объекта сериализации.</summary>
    </member>
    <member name="F:System.Configuration.SettingsSerializeAs.ProviderSpecific">
      <summary>Поставщик параметров обладает неточными знаниями о свойстве или его типе, а также подбирает соответствующий механизм сериализации. Часто используется для настраиваемой сериализации.</summary>
    </member>
    <member name="F:System.Configuration.SettingsSerializeAs.String">
      <summary>Свойство параметров сериализуется как обычный текст.</summary>
    </member>
    <member name="F:System.Configuration.SettingsSerializeAs.Xml">
      <summary>Свойство параметров сериализуется как XML с помощью XML-сериализации.</summary>
    </member>
    <member name="T:System.Configuration.SettingsSerializeAsAttribute">
      <summary>Определяет механизм сериализации, который должен использовать поставщик параметров. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Configuration.SettingsSerializeAsAttribute.#ctor(System.Configuration.SettingsSerializeAs)">
      <summary>Инициализирует экземпляр класса <see cref="T:System.Configuration.SettingsSerializeAsAttribute" />.</summary>
      <param name="serializeAs">Перечисленное значение <see cref="T:System.Configuration.SettingsSerializeAs" />, указывающее схему сериализации.</param>
    </member>
    <member name="P:System.Configuration.SettingsSerializeAsAttribute.SerializeAs">
      <summary>Возвращает значение перечисления <see cref="T:System.Configuration.SettingsSerializeAs" />, указывающее схему сериализации.</summary>
      <returns>Перечисленное значение <see cref="T:System.Configuration.SettingsSerializeAs" />, указывающее схему сериализации.</returns>
    </member>
    <member name="T:System.Configuration.SettingValueElement">
      <summary>Содержит XML, представляющий собой значение сериализации параметра. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Configuration.SettingValueElement.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.SettingValueElement" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingValueElement.Equals(System.Object)">
      <summary>Сравнивает текущий экземпляр <see cref="T:System.Configuration.SettingValueElement" /> с указанным объектом.</summary>
      <param name="settingValue">Объект для сравнения.</param>
      <returns>Значение <see langword="true" />, если экземпляр <see cref="T:System.Configuration.SettingValueElement" /> равен указанному объекту; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.SettingValueElement.GetHashCode">
      <summary>Возвращает уникальное значение, представляющее текущий экземпляр <see cref="T:System.Configuration.SettingValueElement" />.</summary>
      <returns>Уникальное значение, представляющее текущий экземпляр <see cref="T:System.Configuration.SettingValueElement" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingValueElement.ValueXml">
      <summary>Возвращает или задает значение объекта <see cref="T:System.Configuration.SettingValueElement" />, используя объект <see cref="T:System.Xml.XmlNode" />.</summary>
      <returns>Объект <see cref="T:System.Xml.XmlNode" />, содержащий значение <see cref="T:System.Configuration.SettingElement" />.</returns>
    </member>
    <member name="T:System.Configuration.SingleTagSectionHandler">
      <summary>Обрабатывает разделы конфигурации, которые представлены единым XML-тегом в файле конфигурации.</summary>
    </member>
    <member name="M:System.Configuration.SingleTagSectionHandler.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.SingleTagSectionHandler" />.</summary>
    </member>
    <member name="M:System.Configuration.SingleTagSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary>Предназначен для внутреннего использования для создания нового экземпляра данного объекта.</summary>
      <param name="parent">Родительский объект этого объекта.</param>
      <param name="context">Контекст этого объекта.</param>
      <param name="section">Объект <see cref="T:System.Xml.XmlNode" /> в конфигурации.</param>
      <returns>Созданный обработчик объекта.</returns>
    </member>
    <member name="T:System.Configuration.SpecialSetting">
      <summary>Определяет специальную категорию параметров свойства приложения.</summary>
    </member>
    <member name="F:System.Configuration.SpecialSetting.ConnectionString">
      <summary>Свойство конфигурации представляет строку подключения обычную для хранения данных или сетевого ресурса.</summary>
    </member>
    <member name="F:System.Configuration.SpecialSetting.WebServiceUrl">
      <summary>Свойство конфигурации представляет унифицированный указатель ресурса (URL) для Интернет соединения.</summary>
    </member>
    <member name="T:System.Configuration.SpecialSettingAttribute">
      <summary>Указывает на то, что свойство параметров приложения имеет специальное значение. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Configuration.SpecialSettingAttribute.#ctor(System.Configuration.SpecialSetting)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.SpecialSettingAttribute" />.</summary>
      <param name="specialSetting">Значение перечисления <see cref="T:System.Configuration.SpecialSetting" />, определяющее категорию свойства параметров приложения.</param>
    </member>
    <member name="P:System.Configuration.SpecialSettingAttribute.SpecialSetting">
      <summary>Возвращает значение, описывающее специальную категорию параметров приложения.</summary>
      <returns>Значение перечисления <see cref="T:System.Configuration.SpecialSetting" />, определяющее категорию свойства параметров приложения.</returns>
    </member>
    <member name="T:System.Configuration.StringValidator">
      <summary>Выполняет проверку строки.</summary>
    </member>
    <member name="M:System.Configuration.StringValidator.#ctor(System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.StringValidator" />, используя предоставленный параметр.</summary>
      <param name="minLength">Целое число, определяющее минимальную длину значения строки.</param>
    </member>
    <member name="M:System.Configuration.StringValidator.#ctor(System.Int32,System.Int32)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.StringValidator" /> на основе предоставленных параметров.</summary>
      <param name="minLength">Целое число, определяющее минимальную длину значения строки.</param>
      <param name="maxLength">Целое число, определяющее максимальную длину значения строки.</param>
    </member>
    <member name="M:System.Configuration.StringValidator.#ctor(System.Int32,System.Int32,System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.StringValidator" /> на основе предоставленных параметров.</summary>
      <param name="minLength">Целое число, определяющее минимальную длину значения строки.</param>
      <param name="maxLength">Целое число, определяющее максимальную длину значения строки.</param>
      <param name="invalidCharacters">Строка, отображающая недопустимые символы.</param>
    </member>
    <member name="M:System.Configuration.StringValidator.CanValidate(System.Type)">
      <summary>Определяет, можно ли проверить объект по типу.</summary>
      <param name="type">Тип объекта.</param>
      <returns>Значение <see langword="true" />, если параметр <paramref name="type" /> соответствует строке; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.StringValidator.Validate(System.Object)">
      <summary>Определяет, является ли значение объекта допустимым.</summary>
      <param name="value">Значение объекта.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> меньше чем <paramref name="minValue" /> или больше чем <paramref name="maxValue" />, как определено в конструкторе.  

или - 
Параметр <paramref name="value" /> содержит недопустимые символы.</exception>
    </member>
    <member name="T:System.Configuration.StringValidatorAttribute">
      <summary>Декларативно указывает платформе .NET Framework проверять строки на наличие свойства конфигурации. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Configuration.StringValidatorAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.StringValidatorAttribute" />.</summary>
    </member>
    <member name="P:System.Configuration.StringValidatorAttribute.InvalidCharacters">
      <summary>Возвращает или задает недопустимые символы для свойства.</summary>
      <returns>Строка, содержащая набор символов, недопустимых для данного свойства.</returns>
    </member>
    <member name="P:System.Configuration.StringValidatorAttribute.MaxLength">
      <summary>Возвращает или задает максимально допустимую длину строки, назначаемой свойству.</summary>
      <returns>Целое число, указывающее максимально допустимую длину для строки, присвоенной свойству.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Выбранное значение меньше <see cref="P:System.Configuration.StringValidatorAttribute.MinLength" />.</exception>
    </member>
    <member name="P:System.Configuration.StringValidatorAttribute.MinLength">
      <summary>Возвращает или задает минимальное значение строки, назначаемой свойству.</summary>
      <returns>Целое число, указывающее минимально допустимую длину для строки, присвоенной свойству.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Выбранное значение больше <see cref="P:System.Configuration.StringValidatorAttribute.MaxLength" />.</exception>
    </member>
    <member name="P:System.Configuration.StringValidatorAttribute.ValidatorInstance">
      <summary>Возвращает экземпляр класса <see cref="T:System.Configuration.StringValidator" />.</summary>
      <returns>Текущие параметры <see cref="T:System.Configuration.StringValidator" /> в экземпляре проверяющего элемента управления <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</returns>
    </member>
    <member name="T:System.Configuration.SubclassTypeValidator">
      <summary>Проверяет, является ли объект производным классом указанного типа.</summary>
    </member>
    <member name="M:System.Configuration.SubclassTypeValidator.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.SubclassTypeValidator" />.</summary>
      <param name="baseClass">Проверяемый базовый класс от противного.</param>
      <exception cref="T:System.ArgumentNullException">Свойство <paramref name="baseClass" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Configuration.SubclassTypeValidator.CanValidate(System.Type)">
      <summary>Определяет, можно ли проверить объект по типу.</summary>
      <param name="type">Тип объекта.</param>
      <returns>
        <see langword="true" />, если параметр <paramref name="type" /> совпадает с проверяемым типом, иначе, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.SubclassTypeValidator.Validate(System.Object)">
      <summary>Определяет, является ли значение объекта допустимым.</summary>
      <param name="value">Значение объекта.</param>
      <exception cref="T:System.ArgumentException">Значение <paramref name="value" /> не является типом <see cref="T:System.Type" />, который может быть производным от класса <paramref name="baseClass" />, как определено в конструкторе.</exception>
    </member>
    <member name="T:System.Configuration.SubclassTypeValidatorAttribute">
      <summary>Декларативно указывает платформе .NET Framework проверять свойство конфигурации. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Configuration.SubclassTypeValidatorAttribute.#ctor(System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.SubclassTypeValidatorAttribute" />.</summary>
      <param name="baseClass">Тип базового класса.</param>
    </member>
    <member name="P:System.Configuration.SubclassTypeValidatorAttribute.BaseClass">
      <summary>Возвращает базовый тип проверяемого объекта.</summary>
      <returns>Базовый тип утверждаемого объекта.</returns>
    </member>
    <member name="P:System.Configuration.SubclassTypeValidatorAttribute.ValidatorInstance">
      <summary>Получает экземпляр атрибута проверяющего элемента управления.</summary>
      <returns>Текущий экземпляр <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</returns>
    </member>
    <member name="T:System.Configuration.TimeSpanMinutesConverter">
      <summary>Преобразует временной интервал, выраженный в минутах.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesConverter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.TimeSpanMinutesConverter" />.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Преобразует <see cref="T:System.String" /> в <see cref="T:System.TimeSpan" />.</summary>
      <param name="ctx">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для преобразований типов.</param>
      <param name="ci">Объект <see cref="T:System.Globalization.CultureInfo" />, используемый в процессе преобразования.</param>
      <param name="data">Преобразуемый объект <see cref="T:System.String" />.</param>
      <returns>Объект <see cref="T:System.TimeSpan" />, представляющий параметр <paramref name="data" /> в минутах.</returns>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Преобразует <see cref="T:System.TimeSpan" /> в <see cref="T:System.String" />.</summary>
      <param name="ctx">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для преобразований типов.</param>
      <param name="ci">Объект <see cref="T:System.Globalization.CultureInfo" />, используемый в процессе преобразования.</param>
      <param name="value">Целевое значение преобразования.</param>
      <param name="type">Целевой тип преобразования.</param>
      <returns>Объект <see cref="T:System.String" />, представляющий параметр <paramref name="value" /> в минутах.</returns>
    </member>
    <member name="T:System.Configuration.TimeSpanMinutesOrInfiniteConverter">
      <summary>Преобразует <see cref="T:System.TimeSpan" />, выраженный в минутах или как стандартный бесконечный временной диапазон.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesOrInfiniteConverter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.TimeSpanMinutesOrInfiniteConverter" />.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesOrInfiniteConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Преобразует <see cref="T:System.String" /> в <see cref="T:System.TimeSpan" />.</summary>
      <param name="ctx">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для преобразований типов.</param>
      <param name="ci">Объект <see cref="T:System.Globalization.CultureInfo" />, используемый в процессе преобразования.</param>
      <param name="data">Преобразуемый объект <see cref="T:System.String" />.</param>
      <returns>
        <see cref="F:System.TimeSpan.MaxValue" />, если параметр <paramref name="data" /> равен "бесконечности" <see cref="T:System.String" />; в противном случае — <see cref="T:System.TimeSpan" />, представляющее значение параметра <paramref name="data" /> в минутах.</returns>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesOrInfiniteConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Преобразует <see cref="T:System.TimeSpan" /> в <see cref="T:System.String" />.</summary>
      <param name="ctx">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для преобразований типов.</param>
      <param name="ci">Объект <see cref="T:System.Globalization.CultureInfo" />, используемый в процессе преобразования.</param>
      <param name="value">Преобразуемое значение.</param>
      <param name="type">Тип преобразования.</param>
      <returns>
        <see cref="T:System.String" /> "бесконечность", если параметр <paramref name="value" /> равен <see cref="F:System.TimeSpan.MaxValue" />; в противном случае — <see cref="T:System.String" />, представляющее параметр <paramref name="value" /> в минутах.</returns>
    </member>
    <member name="T:System.Configuration.TimeSpanSecondsConverter">
      <summary>Преобразует временной интервал, выраженный в секундах.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsConverter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.TimeSpanSecondsConverter" />.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Преобразует <see cref="T:System.String" /> в <see cref="T:System.TimeSpan" />.</summary>
      <param name="ctx">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для преобразований типов.</param>
      <param name="ci">Объект <see cref="T:System.Globalization.CultureInfo" />, используемый в процессе преобразования.</param>
      <param name="data">Преобразуемый объект <see cref="T:System.String" />.</param>
      <returns>Объект <see cref="T:System.TimeSpan" />, представляющий параметр <paramref name="data" /> в секундах.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="data" /> не удается анализировать как целое число.</exception>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Преобразует <see cref="T:System.TimeSpan" /> в <see cref="T:System.String" />.</summary>
      <param name="ctx">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для преобразований типов.</param>
      <param name="ci">Объект <see cref="T:System.Globalization.CultureInfo" />, используемый в процессе преобразования.</param>
      <param name="value">Целевое значение преобразования.</param>
      <param name="type">Целевой тип преобразования.</param>
      <returns>Объект <see cref="T:System.String" />, который представляет параметр <paramref name="value" /> в минутах.</returns>
    </member>
    <member name="T:System.Configuration.TimeSpanSecondsOrInfiniteConverter">
      <summary>Преобразует <see cref="T:System.TimeSpan" />, выраженный в секундах или как стандартный бесконечный временной диапазон.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsOrInfiniteConverter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.TimeSpanSecondsOrInfiniteConverter" />.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsOrInfiniteConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Преобразует <see cref="T:System.String" /> в <see cref="T:System.TimeSpan" />.</summary>
      <param name="ctx">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для преобразований типов.</param>
      <param name="ci">Объект <see cref="T:System.Globalization.CultureInfo" />, используемый в процессе преобразования.</param>
      <param name="data">Преобразуемый объект <see cref="T:System.String" />.</param>
      <returns>
        <see cref="F:System.TimeSpan.MaxValue" />, если параметр <paramref name="data" /> равен "бесконечности" <see cref="T:System.String" />; в противном случае — <see cref="T:System.TimeSpan" />, представляющее параметр <paramref name="data" /> в секундах.</returns>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsOrInfiniteConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Преобразует <see cref="T:System.TimeSpan" /> в. <see cref="T:System.String" />.</summary>
      <param name="ctx">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для преобразований типов.</param>
      <param name="ci">Объект <see cref="T:System.Globalization.CultureInfo" />, используемый в процессе преобразования.</param>
      <param name="value">Преобразуемое значение.</param>
      <param name="type">Тип преобразования.</param>
      <returns>"Бесконечность" <see cref="T:System.String" />, если параметр <paramref name="value" /> равен <see cref="F:System.TimeSpan.MaxValue" />; в противном случае — <see cref="T:System.String" /> представляющее параметр <paramref name="value" /> в секундах.</returns>
    </member>
    <member name="T:System.Configuration.TimeSpanValidator">
      <summary>Выполняет проверку объекта <see cref="T:System.TimeSpan" />.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanValidator.#ctor(System.TimeSpan,System.TimeSpan)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.TimeSpanValidator" /> на основе предоставленных параметров.</summary>
      <param name="minValue">Объект <see cref="T:System.TimeSpan" />, указывающий минимально допустимое время для прохождения проверки.</param>
      <param name="maxValue">Объект <see cref="T:System.TimeSpan" />, указывающий максимально допустимое время для прохождения проверки.</param>
    </member>
    <member name="M:System.Configuration.TimeSpanValidator.#ctor(System.TimeSpan,System.TimeSpan,System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.TimeSpanValidator" /> на основе предоставленных параметров.</summary>
      <param name="minValue">Объект <see cref="T:System.TimeSpan" />, указывающий минимально допустимое время для прохождения проверки.</param>
      <param name="maxValue">Объект <see cref="T:System.TimeSpan" />, указывающий максимально допустимое время для прохождения проверки.</param>
      <param name="rangeIsExclusive">Значение <see cref="T:System.Boolean" />, указывающее, является ли диапазон проверки эксклюзивным.</param>
    </member>
    <member name="M:System.Configuration.TimeSpanValidator.#ctor(System.TimeSpan,System.TimeSpan,System.Boolean,System.Int64)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.TimeSpanValidator" /> на основе предоставленных параметров.</summary>
      <param name="minValue">Объект <see cref="T:System.TimeSpan" />, указывающий минимально допустимое время для прохождения проверки.</param>
      <param name="maxValue">Объект <see cref="T:System.TimeSpan" />, указывающий максимально допустимое время для прохождения проверки.</param>
      <param name="rangeIsExclusive">Значение <see cref="T:System.Boolean" />, указывающее, является ли диапазон проверки эксклюзивным.</param>
      <param name="resolutionInSeconds">Значение <see cref="T:System.Int64" />, указывающее количество секунд.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="resolutionInSeconds" /> меньше <see langword="0" />.  
-или- 
 Значение <paramref name="minValue" /> больше значения <paramref name="maxValue" />.</exception>
    </member>
    <member name="M:System.Configuration.TimeSpanValidator.CanValidate(System.Type)">
      <summary>Определяет, можно ли проверить тип объекта.</summary>
      <param name="type">Тип объекта.</param>
      <returns>
        <see langword="true" />, если параметр <paramref name="type" /> соответствует значению <see cref="T:System.TimeSpan" />; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.TimeSpanValidator.Validate(System.Object)">
      <summary>Определяет, является ли значение объекта допустимым.</summary>
      <param name="value">Значение объекта.</param>
    </member>
    <member name="T:System.Configuration.TimeSpanValidatorAttribute">
      <summary>Подробно инструктирует платформу .NET Framework как проверять временные показатели свойства конфигурации. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanValidatorAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.TimeSpanValidatorAttribute" />.</summary>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.ExcludeRange">
      <summary>Возвращает или задает значение, определяющее, включать или исключать целые числа в диапазон, обозначенный <see cref="P:System.Configuration.TimeSpanValidatorAttribute.MinValueString" /> и <see cref="P:System.Configuration.TimeSpanValidatorAttribute.MaxValueString" />.</summary>
      <returns>
        <see langword="true" />, если значение должно быть исключено; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.MaxValue">
      <summary>Возвращает абсолютное максимальное значение <see cref="T:System.TimeSpan" />.</summary>
      <returns>Максимальное допустимое значение <see cref="T:System.TimeSpan" />.</returns>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.MaxValueString">
      <summary>Возвращает или задает максимальное относительное значение <see cref="T:System.TimeSpan" />.</summary>
      <returns>Максимальное допустимое значение <see cref="T:System.TimeSpan" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Выбранное значение меньше чем <see cref="P:System.Configuration.TimeSpanValidatorAttribute.MinValue" />.</exception>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.MinValue">
      <summary>Возвращает абсолютное минимальное значение <see cref="T:System.TimeSpan" />.</summary>
      <returns>Минимальное допустимое значение <see cref="T:System.TimeSpan" />.</returns>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.MinValueString">
      <summary>Возвращает или задает минимальное относительное значение <see cref="T:System.TimeSpan" />.</summary>
      <returns>Минимальное допустимое значение <see cref="T:System.TimeSpan" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Выбранное значение больше чем <see cref="P:System.Configuration.TimeSpanValidatorAttribute.MaxValue" />.</exception>
    </member>
    <member name="F:System.Configuration.TimeSpanValidatorAttribute.TimeSpanMaxValue">
      <summary>Возвращает абсолютное максимальное разрешенное значение.</summary>
    </member>
    <member name="F:System.Configuration.TimeSpanValidatorAttribute.TimeSpanMinValue">
      <summary>Возвращает абсолютное минимальное разрешенное значение.</summary>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.ValidatorInstance">
      <summary>Возвращает экземпляр класса <see cref="T:System.Configuration.TimeSpanValidator" />.</summary>
      <returns>Проверяющий экземпляр <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</returns>
    </member>
    <member name="T:System.Configuration.TypeNameConverter">
      <summary>Преобразует тип в строковое значение и обратно. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Configuration.TypeNameConverter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.TypeNameConverter" />.</summary>
    </member>
    <member name="M:System.Configuration.TypeNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Преобразует объект <see cref="T:System.String" /> в объект <see cref="T:System.Type" />.</summary>
      <param name="ctx">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для преобразований типов.</param>
      <param name="ci">Объект <see cref="T:System.Globalization.CultureInfo" />, используемый в процессе преобразования.</param>
      <param name="data">Преобразуемый объект <see cref="T:System.String" />.</param>
      <returns>
        <see cref="T:System.Type" />, представляющий параметр <paramref name="data" />.</returns>
      <exception cref="T:System.ArgumentException">Значение <see cref="T:System.Type" /> не удается разрешить.</exception>
    </member>
    <member name="M:System.Configuration.TypeNameConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Преобразует объект <see cref="T:System.Type" /> в объект <see cref="T:System.String" />.</summary>
      <param name="ctx">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для преобразований типов.</param>
      <param name="ci">Объект <see cref="T:System.Globalization.CultureInfo" />, используемый в процессе преобразования.</param>
      <param name="value">Целевое значение преобразования.</param>
      <param name="type">Целевой тип преобразования.</param>
      <returns>
        <see cref="T:System.String" />, представляющий параметр <paramref name="value" />.</returns>
    </member>
    <member name="T:System.Configuration.UriSection">
      <summary>Представляет собой раздел URI в файле конфигурации.</summary>
    </member>
    <member name="M:System.Configuration.UriSection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.UriSection" />.</summary>
    </member>
    <member name="P:System.Configuration.UriSection.Idn">
      <summary>Возвращает объект <see cref="T:System.Configuration.IdnElement" />, который содержит параметры конфигурации для международного домена имен (IDN), считываемые классом <see cref="T:System.Uri" />.</summary>
      <returns>Параметр конфигурации для обработки международного доменного имени (IDN) в классе <see cref="T:System.Uri" />.</returns>
    </member>
    <member name="P:System.Configuration.UriSection.IriParsing">
      <summary>Возвращает объект <see cref="T:System.Configuration.IriParsingElement" />, который содержит параметры конфигурации для международного домена имен (IRI), считываемые классом <see cref="T:System.Uri" />.</summary>
      <returns>Параметр конфигурации для разбора международных идентификаторов ресурсов (IRI) в классе <see cref="T:System.Uri" />.</returns>
    </member>
    <member name="P:System.Configuration.UriSection.SchemeSettings">
      <summary>Получает объект <see cref="T:System.Configuration.SchemeSettingElementCollection" />, содержащий параметры конфигурации для разбора схем в классе <see cref="T:System.Uri" />.</summary>
      <returns>Параметры конфигурации для разбора схем в классе <see cref="T:System.Uri" /></returns>
    </member>
    <member name="T:System.Configuration.UserScopedSettingAttribute">
      <summary>Определяет, что группа параметров или свойство приложения содержит отличимые данные для каждого пользователя приложения. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Configuration.UserScopedSettingAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.UserScopedSettingAttribute" />.</summary>
    </member>
    <member name="T:System.Configuration.UserSettingsGroup">
      <summary>Представляет группирование разделов связанных параметров пользователя в файле конфигурации. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Configuration.UserSettingsGroup.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.UserSettingsGroup" />.</summary>
    </member>
    <member name="T:System.Configuration.ValidatorCallback">
      <summary>Указывает метод, вызываемый после проверки подлинности объекта.</summary>
      <param name="value">Метод обратного вызова.</param>
      <param name="o">Метод обратного вызова.</param>
    </member>
    <member name="T:System.Configuration.WhiteSpaceTrimStringConverter">
      <summary>Преобразует строку в канонический формат.</summary>
    </member>
    <member name="M:System.Configuration.WhiteSpaceTrimStringConverter.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.WhiteSpaceTrimStringConverter" />.</summary>
    </member>
    <member name="M:System.Configuration.WhiteSpaceTrimStringConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Преобразует <see cref="T:System.String" /> в каноническую форму.</summary>
      <param name="ctx">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для преобразований типов.</param>
      <param name="ci">Объект <see cref="T:System.Globalization.CultureInfo" />, используемый в процессе преобразования.</param>
      <param name="data">Преобразуемый объект <see cref="T:System.String" />.</param>
      <returns>Объект, представляющий значение для преобразования.</returns>
    </member>
    <member name="M:System.Configuration.WhiteSpaceTrimStringConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Преобразует <see cref="T:System.String" /> в каноническую форму.</summary>
      <param name="ctx">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, используемый для преобразований типов.</param>
      <param name="ci">Объект <see cref="T:System.Globalization.CultureInfo" />, используемый в процессе преобразования.</param>
      <param name="value">Целевое значение преобразования.</param>
      <param name="type">Целевой тип преобразования.</param>
      <returns>Объект, представляющий значение для преобразования.</returns>
    </member>
    <member name="T:System.Drawing.Configuration.SystemDrawingSection">
      <summary>Представляет раздел конфигурации, используемый классами в пространстве имен <see cref="N:System.Drawing" />.</summary>
    </member>
    <member name="M:System.Drawing.Configuration.SystemDrawingSection.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Drawing.Configuration.SystemDrawingSection" />.</summary>
    </member>
    <member name="P:System.Drawing.Configuration.SystemDrawingSection.BitmapSuffix">
      <summary>Получает или задает суффикс для добавления к имени файла, указанному <see cref="T:System.Drawing.ToolboxBitmapAttribute" />, когда сборка объявляется с <see cref="T:System.Drawing.BitmapSuffixInSameAssemblyAttribute" /> или <see cref="T:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute" />.</summary>
      <returns>Суффикс растрового изображения.</returns>
    </member>
    <member name="T:System.UriIdnScope">
      <summary>Предоставляет возможные значения конфигурационных параметров <see cref="T:System.Configuration.IdnElement" /> в пространстве имен <see cref="N:System.Configuration" />.</summary>
    </member>
    <member name="F:System.UriIdnScope.All">
      <summary>При этом значении имена доменов из Юникода будут преобразовываться в их эквиваленты в Punycode (IDN-имена).</summary>
    </member>
    <member name="F:System.UriIdnScope.AllExceptIntranet">
      <summary>При этом значении имена всех внешних доменов из Юникода будут преобразовываться в их эквиваленты в Punycode (IDN-имена). В этом случае, чтобы обрабатывать международные имена в локальной интрасети, DNS-серверы, которые используются для интрасети, должны поддерживать имена в Юникоде.</summary>
    </member>
    <member name="F:System.UriIdnScope.None">
      <summary>При этом значении имена доменов в Юникоде не будут преобразовываться в их эквиваленты в Punycode. Это значение по умолчанию, которое совместимо с поведением платформы .NET Framework 2.0.</summary>
    </member>
  </members>
</doc>