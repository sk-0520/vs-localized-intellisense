<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Windows.Extensions</name>
  </assembly>
  <members>
    <member name="T:System.Drawing.FontConverter">
      <summary>将 <see cref="T:System.Drawing.Font" /> 对象从一种数据类型转换成另一种数据类型。</summary>
    </member>
    <member name="M:System.Drawing.FontConverter.#ctor">
      <summary>初始化新的 <see cref="T:System.Drawing.FontConverter" /> 对象。</summary>
    </member>
    <member name="M:System.Drawing.FontConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>确定此转换器是否可以将指定源类型的对象转换为转换器的本机类型。</summary>
      <param name="context">格式化程序上下文。 此对象可用于获取有关从中调用此转换器的环境的附加信息。 这可能为 <see langword="null" />，因此应总是对其进行检查。 同样，上下文对象上的属性也可能返回 <see langword="null" />。</param>
      <param name="sourceType">要从其进行转换的类型。</param>
      <returns>如果此对象可以执行转换，则此方法返回 <see langword="true" />。</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>获取一个值，该值指示此转换器能否使用上下文将对象转换为给定的目标类型。</summary>
      <param name="context">一个提供格式上下文的 <see langword="ITypeDescriptorContext" /> 对象。</param>
      <param name="destinationType">
        <see cref="T:System.Type" /> 对象，它表示您希望转换为的类型。</param>
      <returns>如果此转换器可以执行转换，则此方法返回 <see langword="true" />；否则返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>将指定对象转换为转换器的本机类型。</summary>
      <param name="context">格式化程序上下文。 此对象可用于获取有关从中调用此转换器的环境的附加信息。 这可能为 <see langword="null" />，因此应总是对其进行检查。 同样，上下文对象上的属性也可能返回 <see langword="null" />。</param>
      <param name="culture">
        <see langword="CultureInfo" /> 对象，它指定表示该字体的区域性。</param>
      <param name="value">要转换的对象。</param>
      <returns>被转换的对象。</returns>
      <exception cref="T:System.NotSupportedException">转换未能执行。</exception>
    </member>
    <member name="M:System.Drawing.FontConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>将指定的对象转换为其他类型。</summary>
      <param name="context">格式化程序上下文。 此对象可用于获取有关从中调用此转换器的环境的附加信息。 这可能为 <see langword="null" />，因此应总是对其进行检查。 同样，上下文对象上的属性也可能返回 <see langword="null" />。</param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" /> 对象，它指定表示该对象的区域性。</param>
      <param name="value">要转换的对象。</param>
      <param name="destinationType">对象要转换成的数据类型。</param>
      <returns>被转换的对象。</returns>
      <exception cref="T:System.NotSupportedException">转换未成功。</exception>
    </member>
    <member name="M:System.Drawing.FontConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>通过为对象使用一组指定的属性值来创建此类型的对象。</summary>
      <param name="context">可通过其提供附加上下文的类型说明符。</param>
      <param name="propertyValues">新属性值的字典。 该字典包含一系列名称值对，分别与从 <see cref="Overload:System.Drawing.FontConverter.GetProperties" /> 方法返回的每个属性相对应。</param>
      <returns>新创建的对象；如果未能创建该对象，则为 <see langword="null" />。 默认实现返回 <see langword="null" />。  
 <see cref="M:System.Drawing.FontConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> 可用于创建具有可更改属性的不可更改对象。</returns>
    </member>
    <member name="T:System.Drawing.FontConverter.FontNameConverter">
      <summary>
        <see cref="T:System.Drawing.FontConverter.FontNameConverter" /> 是一个类型转换器，用于在字体名称与其他各种表示形式之间进行转换。</summary>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.FontConverter.FontNameConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>确定该转换器是否可以将给定源类型的对象转换为转换器的本机类型。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，可用来提取有关调用此转换器的环境的附加信息。 这可能为 <see langword="null" />，因此应总是对其进行检查。 同样，上下文对象上的属性也可能返回 <see langword="null" />。</param>
      <param name="sourceType">转换的源类型。</param>
      <returns>如果转换器能执行转换，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>将给定对象转换为转换器的本机类型。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，可用来提取有关调用此转换器的环境的附加信息。 这可能为 <see langword="null" />，因此应总是对其进行检查。 同样，上下文对象上的属性也可能返回 <see langword="null" />。</param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" />，用于执行转换</param>
      <param name="value">要转换的对象。</param>
      <returns>被转换的对象。</returns>
      <exception cref="T:System.NotSupportedException">无法完成转换。</exception>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>检索一个集合，该集合包含适用此转换器的数据类型的一组标准值。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，可用来提取有关调用此转换器的环境的附加信息。 这可能为 <see langword="null" />，因此应总是对其进行检查。 同样，上下文对象上的属性也可能返回 <see langword="null" />。</param>
      <returns>一个包含一组标准有效值的集合，或为 <see langword="null" />。 默认值为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>确定从 <see cref="Overload:System.Drawing.FontConverter.FontNameConverter.GetStandardValues" /> 方法返回的标准值列表是否为唯一列表。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，可用来提取有关调用此转换器的环境的附加信息。 这可能为 <see langword="null" />，因此应总是对其进行检查。 同样，上下文对象上的属性也可能返回 <see langword="null" />。</param>
      <returns>如果从 <see cref="Overload:System.Drawing.FontConverter.FontNameConverter.GetStandardValues" /> 返回的集合为可能值的独占列表，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>确定该对象是否支持可以从列表中选取的一组标准值。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，可用来提取有关调用此转换器的环境的附加信息。 这可能为 <see langword="null" />，因此应总是对其进行检查。 同样，上下文对象上的属性也可能返回 <see langword="null" />。</param>
      <returns>如果应调用 <see cref="Overload:System.Drawing.FontConverter.FontNameConverter.GetStandardValues" /> 来查找对象支持的一组公共值，则为 <see langword="true" />；否则，为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.System#IDisposable#Dispose">
      <summary>执行与释放或重置非托管资源相关的应用程序定义的任务。</summary>
    </member>
    <member name="T:System.Drawing.FontConverter.FontUnitConverter">
      <summary>将字体单位与其他单位类型进行转换。</summary>
    </member>
    <member name="M:System.Drawing.FontConverter.FontUnitConverter.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.FontConverter.FontUnitConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Drawing.FontConverter.FontUnitConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>返回对 <see cref="T:System.Drawing.Font" /> 类型有效的标准值集合。</summary>
      <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</param>
    </member>
    <member name="M:System.Drawing.FontConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>确定更改此对象上的值是否需要调用 <see cref="Overload:System.Drawing.FontConverter.CreateInstance" /> 方法以创建新值。</summary>
      <param name="context">可通过其提供附加上下文的类型说明符。</param>
      <returns>如果在对此对象的一个或多个属性进行更改时应调用 <see langword="true" /> 对象，则此方法返回 <see langword="CreateInstance" />；否则返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>检索此类型的属性集。 默认情况下，类型没有任何要返回的属性。</summary>
      <param name="context">可通过其提供附加上下文的类型说明符。</param>
      <param name="value">要获取其属性的对象的值。</param>
      <param name="attributes">描述属性的 <see cref="T:System.Attribute" /> 对象数组。</param>
      <returns>应向此数据类型公开的属性集。 如果不应公开任何属性，则该方法可返回 <see langword="null" />。 默认实现始终返回 <see langword="null" />。  
此方法的简单实现可以调用正确数据类型的 <see cref="Overload:System.ComponentModel.TypeConverter.GetProperties" /> 方法。</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>确定此对象是否支持属性。 默认值为 <see langword="false" />。</summary>
      <param name="context">可通过其提供附加上下文的类型说明符。</param>
      <returns>如果应调用 <see cref="M:System.Drawing.FontConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" /> 方法来查找此对象的属性，则此方法返回 <see langword="true" />；否则返回 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Drawing.IconConverter">
      <summary>将 <see cref="T:System.Drawing.Icon" /> 对象从一种数据类型转换到另一种数据类型。 通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 对象访问此类。</summary>
    </member>
    <member name="M:System.Drawing.IconConverter.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.IconConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Drawing.IconConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>使用指定的上下文确定此 <see cref="T:System.Drawing.IconConverter" /> 是否能够将指定类型的实例转换为 <see cref="T:System.Drawing.Icon" />。</summary>
      <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</param>
      <param name="sourceType">一个 <see cref="T:System.Type" />，它指定要转换的类型。</param>
      <returns>如果此 <see cref="T:System.Drawing.IconConverter" /> 可以执行转换，则此方法返回 <see langword="true" />；否则返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.IconConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>使用指定的上下文确定此 <see cref="T:System.Drawing.IconConverter" /> 是否能够将 <see cref="T:System.Drawing.Icon" /> 转换为指定类型的实例。</summary>
      <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</param>
      <param name="destinationType">一个 <see cref="T:System.Type" />，它指定要转换为的类型。</param>
      <returns>如果此 <see cref="T:System.Drawing.IconConverter" /> 可以执行转换，则此方法返回 <see langword="true" />；否则返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.IconConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>将指定对象转换为 <see cref="T:System.Drawing.Icon" />。</summary>
      <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</param>
      <param name="culture">一个 <see cref="T:System.Globalization.CultureInfo" />，它保存有关特定区域性的信息。</param>
      <param name="value">要转换的 <see cref="T:System.Object" />。</param>
      <returns>如果此方法成功，它将返回通过转换指定对象创建的 <see cref="T:System.Drawing.Icon" />。 否则，它将引发异常。</returns>
      <exception cref="T:System.NotSupportedException">转换未能执行。</exception>
    </member>
    <member name="M:System.Drawing.IconConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>将 <see cref="T:System.Drawing.Icon" />（或者可以被强制转换为 <see cref="T:System.Drawing.Icon" /> 的对象）转换为指定类型。</summary>
      <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</param>
      <param name="culture">一个 <see cref="T:System.Globalization.CultureInfo" /> 对象，它指定特定区域性使用的格式设置约定。</param>
      <param name="value">要转换的对象。 该对象应为 Icon 类型或者某种可以强制转换为 <see cref="T:System.Drawing.Icon" /> 的类型。</param>
      <param name="destinationType">要将图标转换成的类型。</param>
      <returns>此方法返回转换后的对象。</returns>
      <exception cref="T:System.NotSupportedException">转换未能执行。</exception>
    </member>
    <member name="T:System.Drawing.ImageConverter">
      <summary>
        <see cref="T:System.Drawing.ImageConverter" /> 是一个类，可用于将 <see cref="T:System.Drawing.Image" /> 对象从一种数据类型转换为另一种数据类型。 通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 对象访问此类。</summary>
    </member>
    <member name="M:System.Drawing.ImageConverter.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.ImageConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Drawing.ImageConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>使用指定的上下文确定此 <see cref="T:System.Drawing.ImageConverter" /> 是否能够将指定类型的实例转换为 <see cref="T:System.Drawing.Image" />。</summary>
      <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</param>
      <param name="sourceType">一个 <see cref="T:System.Type" />，它指定要转换的类型。</param>
      <returns>如果此 <see cref="T:System.Drawing.ImageConverter" /> 可以执行转换，则此方法返回 <see langword="true" />；否则返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.ImageConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>使用指定的上下文确定此 <see cref="T:System.Drawing.ImageConverter" /> 是否能够将 <see cref="T:System.Drawing.Image" /> 转换为指定类型的实例。</summary>
      <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</param>
      <param name="destinationType">一个 <see cref="T:System.Type" />，它指定要转换为的类型。</param>
      <returns>如果此 <see cref="T:System.Drawing.ImageConverter" /> 可以执行转换，则此方法返回 <see langword="true" />；否则返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.ImageConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>将指定对象转换为 <see cref="T:System.Drawing.Image" />。</summary>
      <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</param>
      <param name="culture">一个 <see cref="T:System.Globalization.CultureInfo" />，它保存有关特定区域性的信息。</param>
      <param name="value">要转换的 <see cref="T:System.Object" />。</param>
      <returns>如果此方法成功，它将返回通过转换指定对象创建的 <see cref="T:System.Drawing.Image" />。 否则，它将引发异常。</returns>
      <exception cref="T:System.NotSupportedException">无法完成转换。</exception>
    </member>
    <member name="M:System.Drawing.ImageConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>将 <see cref="T:System.Drawing.Image" />（或可以强制转换为 <see cref="T:System.Drawing.Image" /> 的对象）转换为指定类型。</summary>
      <param name="context">格式化程序上下文。 此对象可用于获取有关从中调用此转换器的环境的更多信息。 这可能为 <see langword="null" />，因此应总是对其进行检查。 同样，上下文对象上的属性也可能返回 <see langword="null" />。</param>
      <param name="culture">一个 <see cref="T:System.Globalization.CultureInfo" /> 对象，它指定特定区域性使用的格式设置约定。</param>
      <param name="value">要转换的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="destinationType">
        <see cref="T:System.Type" /> 要转换为的 <see cref="T:System.Drawing.Image" />。</param>
      <returns>此方法返回转换后的对象。</returns>
      <exception cref="T:System.NotSupportedException">无法完成转换。</exception>
    </member>
    <member name="M:System.Drawing.ImageConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>获取此类型的属性集。</summary>
      <param name="context">可通过其提供附加上下文的类型说明符。</param>
      <param name="value">要获取其属性的对象的值。</param>
      <param name="attributes">描述属性的 <see cref="T:System.Attribute" /> 对象数组。</param>
      <returns>应向此数据类型公开的属性集。 如果不应公开任何属性，则此方法可返回 <see langword="null" />。 默认实现始终返回 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Drawing.ImageConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>指示此对象是否支持属性。 默认情况下，该属性为 <see langword="false" />。</summary>
      <param name="context">可通过其提供附加上下文的类型说明符。</param>
      <returns>如果为了查找此对象的属性而应当调用 <see cref="Overload:System.Drawing.ImageConverter.GetProperties" /> 方法，则此方法返回 <see langword="true" />。</returns>
    </member>
    <member name="T:System.Drawing.ImageFormatConverter">
      <summary>
        <see cref="T:System.Drawing.ImageFormatConverter" /> 是一个类，可用于将 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 对象从一种数据类型转换为另一种数据类型。 通过 <see cref="T:System.ComponentModel.TypeDescriptor" /> 对象访问此类。</summary>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.ImageFormatConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>指示此转换器是否可以将指定的源类型的对象转换为转换器的本机类型。</summary>
      <param name="context">格式化程序上下文。 此对象可用于获取有关从中调用此转换器的环境的更多信息。 这可能为 <see langword="null" />，因此应总是对其进行检查。 同样，上下文对象上的属性也可能返回 <see langword="null" />。</param>
      <param name="sourceType">要从其进行转换的类型。</param>
      <returns>如果此对象可以执行转换，则此方法返回 <see langword="true" />。</returns>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>获取一个值，该值指示此转换器能否使用上下文将对象转换为指定的目标类型。</summary>
      <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，它指定此类型转换的上下文。</param>
      <param name="destinationType">
        <see cref="T:System.Type" />，它表示要将此 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 对象转换到的类型。</param>
      <returns>如果此对象可以执行转换，则此方法返回 <see langword="true" />。</returns>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>将指定对象转换为 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 对象。</summary>
      <param name="context">格式化程序上下文。 此对象可用于获取有关从中调用此转换器的环境的更多信息。 这可能为 <see langword="null" />，因此应总是对其进行检查。 同样，上下文对象上的属性也可能返回 <see langword="null" />。</param>
      <param name="culture">一个 <see cref="T:System.Globalization.CultureInfo" /> 对象，它指定特定区域性的格式化约定。</param>
      <param name="value">要转换的对象。</param>
      <returns>被转换的对象。</returns>
      <exception cref="T:System.NotSupportedException">无法完成转换。</exception>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>将指定对象转换为指定类型。</summary>
      <param name="context">格式化程序上下文。 此对象可用于获取有关从中调用此转换器的环境的更多信息。 这可能为 <see langword="null" />，因此应总是对其进行检查。 同样，上下文对象上的属性也可能返回 <see langword="null" />。</param>
      <param name="culture">一个 <see cref="T:System.Globalization.CultureInfo" /> 对象，它指定特定区域性的格式化约定。</param>
      <param name="value">要转换的对象。</param>
      <param name="destinationType">对象要转换为的类型。</param>
      <returns>被转换的对象。</returns>
      <exception cref="T:System.NotSupportedException">无法完成转换。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> 为 <see langword="null." /></exception>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>获取一个集合，该集合包含此验证程序所面向的数据类型的标准值集。 如果该数据类型不支持标准值集，则返回 <see langword="null" />。</summary>
      <param name="context">格式化程序上下文。 此对象可用于获取有关从中调用此转换器的环境的更多信息。 这可能为 <see langword="null" />，因此应总是对其进行检查。 同样，上下文对象上的属性也可能返回 <see langword="null" />。</param>
      <returns>一个集合，它包含标准有效值集或 <see langword="null" />。 默认实现始终返回 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>指示此对象是否支持可以从列表中选取的标准值集。</summary>
      <param name="context">可通过其提供附加上下文的类型说明符。</param>
      <returns>如果应调用 <see cref="Overload:System.Drawing.ImageFormatConverter.GetStandardValues" /> 方法来查找此对象所支持的公共值集，此方法将返回 <see langword="true" />。</returns>
    </member>
    <member name="T:System.Drawing.Printing.MarginsConverter">
      <summary>为 <see cref="T:System.Drawing.Printing.MarginsConverter" /> 提供一个 <see cref="T:System.Drawing.Printing.Margins" />。</summary>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.Printing.MarginsConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>返回有关该转换器是否可以使用指定上下文将指定源类型的对象转换为转换器的本机类型的情况。</summary>
      <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</param>
      <param name="sourceType">
        <see cref="T:System.Type" />，它表示要对其进行转换的类型。</param>
      <returns>如果对象可以执行转换，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>返回有关该转换器是否可以使用上下文将某对象转换为给定目标类型的情况。</summary>
      <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</param>
      <param name="destinationType">表示要转换为的类型的<see cref="T:System.Type" />。</param>
      <returns>如果该转换器能够执行转换，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>将指定对象转换为转换器的本机类型。</summary>
      <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" />，它指明要转换到的语言。</param>
      <param name="value">要转换的 <see cref="T:System.Object" />。</param>
      <returns>一个 <see cref="T:System.Object" />，它表示转换后的值。</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 不包含全部四个边距的值。 例如，“100,100,100,100”指定左边距、右边距、上边距和下边距各为 1 英寸。</exception>
      <exception cref="T:System.NotSupportedException">无法执行转换。</exception>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>使用指定上下文和参数将给定值对象转换为指定目标类型。</summary>
      <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" />，它指明要转换到的语言。</param>
      <param name="value">要转换的 <see cref="T:System.Object" />。</param>
      <param name="destinationType">要将该值转换到的 <see cref="T:System.Type" />。</param>
      <returns>一个 <see cref="T:System.Object" />，它表示转换后的值。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.NotSupportedException">无法执行转换。</exception>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>假如已为该对象给出一组属性值，则创建一个 <see cref="T:System.Object" />。</summary>
      <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</param>
      <param name="propertyValues">新属性值的 <see cref="T:System.Collections.IDictionary" />。</param>
      <returns>
        <see cref="T:System.Object" />，它表示指定的 <see cref="T:System.Collections.IDictionary" />；如果无法创建对象，则为 <see langword="null" />。</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="propertyValues" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>返回对以下情况的确认：如果更改该对象上的某个值，是否需要使用指定的上下文来调用 <see cref="M:System.Drawing.Printing.MarginsConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> 方法以创建新值。</summary>
      <param name="context">一个 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，用于提供格式上下文。</param>
      <returns>如果更改此对象的属性需要调用 <see cref="M:System.Drawing.Printing.MarginsConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> 来创建新值，则为 <see langword="true" />；否则为 <see langword="false" />。 此方法始终返回 <see langword="true" />。</returns>
    </member>
    <member name="T:System.Media.SoundPlayer">
      <summary vsli:raw="Controls playback of a sound from a .wav file.">控制 .wav 文件中的声音播放。</summary>
    </member>
    <member name="M:System.Media.SoundPlayer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Media.SoundPlayer&quot; /&gt; class.">初始化 <see cref="T:System.Media.SoundPlayer" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Media.SoundPlayer.#ctor(System.IO.Stream)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Media.SoundPlayer&quot; /&gt; class, and attaches the .wav file within the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">初始化 <see cref="T:System.Media.SoundPlayer" /> 类的新实例，并在指定的 <see cref="T:System.IO.Stream" /> 内附加 .wav 文件。</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; to a .wav file.">.wav 文件的 <see cref="T:System.IO.Stream" />。</param>
    </member>
    <member name="M:System.Media.SoundPlayer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Media.SoundPlayer&quot; /&gt; class.">初始化 <see cref="T:System.Media.SoundPlayer" /> 类的新实例。</summary>
      <param name="serializationInfo" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to be used for deserialization.">要用于反序列化的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context" vsli:raw="The destination to be used for deserialization.">用于反序列化的目标。</param>
      <exception cref="T:System.UriFormatException" vsli:raw="The &lt;see cref=&quot;P:System.Media.SoundPlayer.SoundLocation&quot; /&gt; specified in &lt;paramref name=&quot;serializationInfo&quot; /&gt; cannot be resolved.">无法解析 <paramref name="serializationInfo" /> 中指定的 <see cref="P:System.Media.SoundPlayer.SoundLocation" />。</exception>
    </member>
    <member name="M:System.Media.SoundPlayer.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Media.SoundPlayer&quot; /&gt; class, and attaches the specified .wav file.">初始化 <see cref="T:System.Media.SoundPlayer" /> 类的新实例，并附加指定的 .wav 文件。</summary>
      <param name="soundLocation" vsli:raw="The location of a .wav file to load.">要加载的 .wav 文件的位置。</param>
      <exception cref="T:System.UriFormatException" vsli:raw="The URL value specified by &lt;paramref name=&quot;soundLocation&quot; /&gt; cannot be resolved.">无法解析由 <paramref name="soundLocation" /> 指定的 URL 值。</exception>
    </member>
    <member name="P:System.Media.SoundPlayer.IsLoadCompleted">
      <summary vsli:raw="Gets a value indicating whether loading of a .wav file has successfully completed.">获取一个值，该值指示 .wav 文件的加载是否已经成功完成。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a .wav file is loaded; &lt;see langword=&quot;false&quot; /&gt; if a .wav file has not yet been loaded.">如果加载了 .wav 文件，则为 <see langword="true" />，如果还没有加载 .wav 文件，则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Media.SoundPlayer.Load">
      <summary vsli:raw="Loads a sound synchronously.">同步加载声音。</summary>
      <exception cref="T:System.ServiceProcess.TimeoutException" vsli:raw="The elapsed time during loading exceeds the time, in milliseconds, specified by &lt;see cref=&quot;P:System.Media.SoundPlayer.LoadTimeout&quot; /&gt;.">加载所用的时间超出了 <see cref="P:System.Media.SoundPlayer.LoadTimeout" /> 指定的时间（以毫秒为单位）。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file specified by &lt;see cref=&quot;P:System.Media.SoundPlayer.SoundLocation&quot; /&gt; cannot be found.">无法找到由 <see cref="P:System.Media.SoundPlayer.SoundLocation" /> 指定的文件。</exception>
    </member>
    <member name="M:System.Media.SoundPlayer.LoadAsync">
      <summary vsli:raw="Loads a .wav file from a stream or a Web resource using a new thread.">使用新线程从流或 Web 资源中加载 .wav 文件。</summary>
      <exception cref="T:System.ServiceProcess.TimeoutException" vsli:raw="The elapsed time during loading exceeds the time, in milliseconds, specified by &lt;see cref=&quot;P:System.Media.SoundPlayer.LoadTimeout&quot; /&gt;.">加载所用的时间超出了 <see cref="P:System.Media.SoundPlayer.LoadTimeout" /> 指定的时间（以毫秒为单位）。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file specified by &lt;see cref=&quot;P:System.Media.SoundPlayer.SoundLocation&quot; /&gt; cannot be found.">无法找到由 <see cref="P:System.Media.SoundPlayer.SoundLocation" /> 指定的文件。</exception>
    </member>
    <member name="E:System.Media.SoundPlayer.LoadCompleted">
      <summary vsli:raw="Occurs when a .wav file has been successfully or unsuccessfully loaded.">当成功或未成功加载 .wav 文件时出现。</summary>
    </member>
    <member name="P:System.Media.SoundPlayer.LoadTimeout">
      <summary vsli:raw="Gets or sets the time, in milliseconds, in which the .wav file must load.">获取或设置 .wav 文件的加载必须完成的时间（以毫秒为单位）。</summary>
      <returns vsli:raw="The number of milliseconds to wait. The default is 10000 (10 seconds).">要等待的毫秒数。 默认值为 10000（10 秒）。</returns>
    </member>
    <member name="M:System.Media.SoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Media.SoundPlayer.LoadCompleted&quot; /&gt; event.">引发 <see cref="E:System.Media.SoundPlayer.LoadCompleted" /> 事件。</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.AsyncCompletedEventArgs&quot; /&gt; that contains the event data.">包含事件数据的 <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" />。</param>
    </member>
    <member name="M:System.Media.SoundPlayer.OnSoundLocationChanged(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Media.SoundPlayer.SoundLocationChanged&quot; /&gt; event.">引发 <see cref="E:System.Media.SoundPlayer.SoundLocationChanged" /> 事件。</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Media.SoundPlayer.OnStreamChanged(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Media.SoundPlayer.StreamChanged&quot; /&gt; event.">引发 <see cref="E:System.Media.SoundPlayer.StreamChanged" /> 事件。</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">包含事件数据的 <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Media.SoundPlayer.Play">
      <summary vsli:raw="Plays the .wav file using a new thread, and loads the .wav file first if it has not been loaded.">使用新线程播放 .wav 文件，如果尚未加载 .wav 文件，则先加载该文件。</summary>
      <exception cref="T:System.ServiceProcess.TimeoutException" vsli:raw="The elapsed time during loading exceeds the time, in milliseconds, specified by &lt;see cref=&quot;P:System.Media.SoundPlayer.LoadTimeout&quot; /&gt;.">加载所用的时间超出了 <see cref="P:System.Media.SoundPlayer.LoadTimeout" /> 指定的时间（以毫秒为单位）。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file specified by &lt;see cref=&quot;P:System.Media.SoundPlayer.SoundLocation&quot; /&gt; cannot be found.">无法找到由 <see cref="P:System.Media.SoundPlayer.SoundLocation" /> 指定的文件。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The .wav header is corrupted; the file specified by &lt;see cref=&quot;P:System.Media.SoundPlayer.SoundLocation&quot; /&gt; is not a PCM .wav file.">.wav 标头已损坏；由 <see cref="P:System.Media.SoundPlayer.SoundLocation" /> 指定的文件不是 PCM .wav 文件。</exception>
    </member>
    <member name="M:System.Media.SoundPlayer.PlayLooping">
      <summary vsli:raw="Plays and loops the .wav file using a new thread, and loads the .wav file first if it has not been loaded.">使用新线程循环播放 .wav 文件，如果尚未加载 .wav 文件，则先加载该文件。</summary>
      <exception cref="T:System.ServiceProcess.TimeoutException" vsli:raw="The elapsed time during loading exceeds the time, in milliseconds, specified by &lt;see cref=&quot;P:System.Media.SoundPlayer.LoadTimeout&quot; /&gt;.">加载所用的时间超出了 <see cref="P:System.Media.SoundPlayer.LoadTimeout" /> 指定的时间（以毫秒为单位）。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file specified by &lt;see cref=&quot;P:System.Media.SoundPlayer.SoundLocation&quot; /&gt; cannot be found.">无法找到由 <see cref="P:System.Media.SoundPlayer.SoundLocation" /> 指定的文件。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The .wav header is corrupted; the file specified by &lt;see cref=&quot;P:System.Media.SoundPlayer.SoundLocation&quot; /&gt; is not a PCM .wav file.">.wav 标头已损坏；由 <see cref="P:System.Media.SoundPlayer.SoundLocation" /> 指定的文件不是 PCM .wav 文件。</exception>
    </member>
    <member name="M:System.Media.SoundPlayer.PlaySync">
      <summary vsli:raw="Plays the .wav file and loads the .wav file first if it has not been loaded.">播放 .wav 文件，如果尚未加载 .wav 文件，则先加载该文件。</summary>
      <exception cref="T:System.ServiceProcess.TimeoutException" vsli:raw="The elapsed time during loading exceeds the time, in milliseconds, specified by &lt;see cref=&quot;P:System.Media.SoundPlayer.LoadTimeout&quot; /&gt;.">加载所用的时间超出了 <see cref="P:System.Media.SoundPlayer.LoadTimeout" /> 指定的时间（以毫秒为单位）。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file specified by &lt;see cref=&quot;P:System.Media.SoundPlayer.SoundLocation&quot; /&gt; cannot be found.">无法找到由 <see cref="P:System.Media.SoundPlayer.SoundLocation" /> 指定的文件。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The .wav header is corrupted; the file specified by &lt;see cref=&quot;P:System.Media.SoundPlayer.SoundLocation&quot; /&gt; is not a PCM .wav file.">.wav 标头已损坏；由 <see cref="P:System.Media.SoundPlayer.SoundLocation" /> 指定的文件不是 PCM .wav 文件。</exception>
    </member>
    <member name="P:System.Media.SoundPlayer.SoundLocation">
      <summary vsli:raw="Gets or sets the file path or URL of the .wav file to load.">获取或设置要加载的 .wav 文件的文件路径或 URL。</summary>
      <returns vsli:raw="The file path or URL from which to load a .wav file, or &lt;see cref=&quot;F:System.String.Empty&quot; /&gt; if no file path is present. The default is &lt;see cref=&quot;F:System.String.Empty&quot; /&gt;.">从中加载 .wav 文件的文件路径或 URL，如果不存在文件路径，则为 <see cref="F:System.String.Empty" />。 默认值为 <see cref="F:System.String.Empty" />。</returns>
    </member>
    <member name="E:System.Media.SoundPlayer.SoundLocationChanged">
      <summary vsli:raw="Occurs when a new audio source path for this &lt;see cref=&quot;T:System.Media.SoundPlayer&quot; /&gt; has been set.">当已设置此 <see cref="T:System.Media.SoundPlayer" /> 的新音频源路径时出现。</summary>
    </member>
    <member name="M:System.Media.SoundPlayer.Stop">
      <summary vsli:raw="Stops playback of the sound if playback is occurring.">如果播放正在进行，则停止播放声音。</summary>
    </member>
    <member name="P:System.Media.SoundPlayer.Stream">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; from which to load the .wav file.">获取或设置从中加载 .wav 文件的 <see cref="T:System.IO.Stream" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; from which to load the .wav file, or &lt;see langword=&quot;null&quot; /&gt; if no stream is available. The default is &lt;see langword=&quot;null&quot; /&gt;.">从中加载 .wav 文件的 <see cref="T:System.IO.Stream" />，如果没有可用的流，则为 <see langword="null" />。 默认值为 <see langword="null" />。</returns>
    </member>
    <member name="E:System.Media.SoundPlayer.StreamChanged">
      <summary vsli:raw="Occurs when a new &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; audio source for this &lt;see cref=&quot;T:System.Media.SoundPlayer&quot; /&gt; has been set.">当已设置此 <see cref="T:System.IO.Stream" /> 的新 <see cref="T:System.Media.SoundPlayer" /> 音频源时出现。</summary>
    </member>
    <member name="M:System.Media.SoundPlayer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)&quot; /&gt; method.">有关此成员的说明，请参见 <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> 方法。</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to populate with data.">要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context" vsli:raw="The destination (see &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;) for this serialization.">此序列化的目标（请参见 <see cref="T:System.Runtime.Serialization.StreamingContext" />）。</param>
    </member>
    <member name="P:System.Media.SoundPlayer.Tag">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains data about the &lt;see cref=&quot;T:System.Media.SoundPlayer&quot; /&gt;.">获取或设置包含有关 <see cref="T:System.Object" /> 的数据的 <see cref="T:System.Media.SoundPlayer" />。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains data about the &lt;see cref=&quot;T:System.Media.SoundPlayer&quot; /&gt;.">一个 <see cref="T:System.Object" />，包含有关 <see cref="T:System.Media.SoundPlayer" /> 的数据。</returns>
    </member>
    <member name="T:System.Media.SystemSound">
      <summary vsli:raw="Represents a system sound type.">表示一个系统声音类型。</summary>
    </member>
    <member name="M:System.Media.SystemSound.Play">
      <summary vsli:raw="Plays the system sound type.">播放系统声音类型。</summary>
    </member>
    <member name="T:System.Media.SystemSounds">
      <summary vsli:raw="Retrieves sounds associated with a set of Windows operating system sound-event types. This class cannot be inherited.">检索与一组 Windows 操作系统声音事件类型关联的声音。 此类不能被继承。</summary>
    </member>
    <member name="P:System.Media.SystemSounds.Asterisk">
      <summary vsli:raw="Gets the sound associated with the &lt;see langword=&quot;Asterisk&quot; /&gt; program event in the current Windows sound scheme.">获取与当前 Windows 声音方案中的 <see langword="Asterisk" /> 程序事件关联的声音。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Media.SystemSound&quot; /&gt; associated with the &lt;see langword=&quot;Asterisk&quot; /&gt; program event in the current Windows sound scheme.">与当前 Windows 声音方案中的 <see langword="Asterisk" /> 程序事件关联的 <see cref="T:System.Media.SystemSound" />。</returns>
    </member>
    <member name="P:System.Media.SystemSounds.Beep">
      <summary vsli:raw="Gets the sound associated with the &lt;see langword=&quot;Beep&quot; /&gt; program event in the current Windows sound scheme.">获取与当前 Windows 声音方案中的 <see langword="Beep" /> 程序事件关联的声音。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Media.SystemSound&quot; /&gt; associated with the &lt;see langword=&quot;Beep&quot; /&gt; program event in the current Windows sound scheme.">与当前 Windows 声音方案中的 <see langword="Beep" /> 程序事件关联的 <see cref="T:System.Media.SystemSound" />。</returns>
    </member>
    <member name="P:System.Media.SystemSounds.Exclamation">
      <summary vsli:raw="Gets the sound associated with the &lt;see langword=&quot;Exclamation&quot; /&gt; program event in the current Windows sound scheme.">获取与当前 Windows 声音方案中的 <see langword="Exclamation" /> 程序事件关联的声音。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Media.SystemSound&quot; /&gt; associated with the &lt;see langword=&quot;Exclamation&quot; /&gt; program event in the current Windows sound scheme.">与当前 Windows 声音方案中的 <see langword="Exclamation" /> 程序事件关联的 <see cref="T:System.Media.SystemSound" />。</returns>
    </member>
    <member name="P:System.Media.SystemSounds.Hand">
      <summary vsli:raw="Gets the sound associated with the &lt;see langword=&quot;Hand&quot; /&gt; program event in the current Windows sound scheme.">获取与当前 Windows 声音方案中的 <see langword="Hand" /> 程序事件关联的声音。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Media.SystemSound&quot; /&gt; associated with the &lt;see langword=&quot;Hand&quot; /&gt; program event in the current Windows sound scheme.">与当前 Windows 声音方案中的 <see langword="Hand" /> 程序事件关联的 <see cref="T:System.Media.SystemSound" />。</returns>
    </member>
    <member name="P:System.Media.SystemSounds.Question">
      <summary vsli:raw="Gets the sound associated with the &lt;see langword=&quot;Question&quot; /&gt; program event in the current Windows sound scheme.">获取与当前 Windows 声音方案中的 <see langword="Question" /> 程序事件关联的声音。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Media.SystemSound&quot; /&gt; associated with the &lt;see langword=&quot;Question&quot; /&gt; program event in the current Windows sound scheme.">与当前 Windows 声音方案中的 <see langword="Question" /> 程序事件关联的 <see cref="T:System.Media.SystemSound" />。</returns>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509Certificate2UI">
      <summary vsli:raw="Displays user interface dialogs that allow you to select and view X.509 certificates. This class cannot be inherited.">显示的用户界面对话框使您可以选择和查看 X.509 证书。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2UI.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Security.Cryptography.X509Certificates.X509Certificate2UI&quot; /&gt; class.">初始化 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2UI" /> 类的实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2UI.DisplayCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary vsli:raw="Displays a dialog box that contains the properties of an X.509 certificate and its associated certificate chain.">显示一个对话框，其中包含 X.509 证书及其关联证书链的属性。</summary>
      <param name="certificate" vsli:raw="The X.509 certificate to display.">要显示的 X.509 证书。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;certificate&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="certificate" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The &lt;paramref name=&quot;certificate&quot; /&gt; parameter is invalid.">
        <paramref name="certificate" /> 参数无效。</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2UI.DisplayCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IntPtr)">
      <summary vsli:raw="Displays a dialog box that contains the properties of an X.509 certificate and its associated certificate chain using a handle to a parent window.">使用父窗口的句柄显示一个对话框，其中包含 X.509 证书及其关联证书链的属性。</summary>
      <param name="certificate" vsli:raw="The X.509 certificate to display.">要显示的 X.509 证书。</param>
      <param name="hwndParent" vsli:raw="A handle to the parent window to use for the display dialog.">用于显示对话框的父窗口的句柄。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;certificate&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="certificate" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The &lt;paramref name=&quot;certificate&quot; /&gt; parameter is invalid.">
        <paramref name="certificate" /> 参数无效。</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2UI.SelectFromCollection(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.String,System.String,System.Security.Cryptography.X509Certificates.X509SelectionFlag)">
      <summary vsli:raw="Displays a dialog box for selecting an X.509 certificate from a certificate collection.">显示一个从证书集合中选择 X.509 证书的对话框。</summary>
      <param name="certificates" vsli:raw="A collection of X.509 certificates to select from.">X.509 证书的集合，从中选择相应的证书。</param>
      <param name="title" vsli:raw="The title of the dialog box.">对话框的标题。</param>
      <param name="message" vsli:raw="A descriptive message to guide the user.  The message is displayed in the dialog box.">指导用户的描述性消息。  该消息显示在对话框中。</param>
      <param name="selectionFlag" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Cryptography.X509Certificates.X509SelectionFlag&quot; /&gt; values that specifies whether single or multiple selections are allowed.">
        <see cref="T:System.Security.Cryptography.X509Certificates.X509SelectionFlag" /> 值之一，用于指定允许单项选择还是允许多项选择。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection&quot; /&gt; object that contains the selected certificate or certificates.">一个 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> 对象，包含选定的一个或多个证书。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;selectionFlag&quot; /&gt; parameter is not a valid flag.">
        <paramref name="selectionFlag" /> 参数不是有效的标志。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;certificates&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="certificates" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The &lt;paramref name=&quot;certificates&quot; /&gt; parameter is invalid.">
        <paramref name="certificates" /> 参数无效。</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2UI.SelectFromCollection(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.String,System.String,System.Security.Cryptography.X509Certificates.X509SelectionFlag,System.IntPtr)">
      <summary vsli:raw="Displays a dialog box for selecting an X.509 certificate from a certificate collection using a handle to a parent window.">使用父窗口的句柄显示一个从证书集合中选择 X.509 证书的对话框。</summary>
      <param name="certificates" vsli:raw="A collection of X.509 certificates to select from.">X.509 证书的集合，从中选择相应的证书。</param>
      <param name="title" vsli:raw="The title of the dialog box.">对话框的标题。</param>
      <param name="message" vsli:raw="A descriptive message to guide the user.  The message is displayed in the dialog box.">指导用户的描述性消息。  该消息显示在对话框中。</param>
      <param name="selectionFlag" vsli:raw="One of the &lt;see cref=&quot;T:System.Security.Cryptography.X509Certificates.X509SelectionFlag&quot; /&gt; values that specifies whether single or multiple selections are allowed.">
        <see cref="T:System.Security.Cryptography.X509Certificates.X509SelectionFlag" /> 值之一，用于指定允许单项选择还是允许多项选择。</param>
      <param name="hwndParent" vsli:raw="A handle to the parent window to use for the display dialog box.">用于显示对话框的父窗口的句柄。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection&quot; /&gt; object that contains the selected certificate or certificates.">一个 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> 对象，包含选定的一个或多个证书。</returns>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;selectionFlag&quot; /&gt; parameter is not a valid flag.">
        <paramref name="selectionFlag" /> 参数不是有效的标志。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;certificates&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="certificates" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException" vsli:raw="The &lt;paramref name=&quot;certificates&quot; /&gt; parameter is invalid.">
        <paramref name="certificates" /> 参数无效。</exception>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509SelectionFlag">
      <summary vsli:raw="Specifies the type of selection requested using the &lt;see cref=&quot;Overload:System.Security.Cryptography.X509Certificates.X509Certificate2UI.SelectFromCollection&quot; /&gt; method.">指定使用 <see cref="Overload:System.Security.Cryptography.X509Certificates.X509Certificate2UI.SelectFromCollection" /> 方法请求的选择类型。</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509SelectionFlag.MultiSelection">
      <summary vsli:raw="A multiple selection. The user can use the SHIFT or CRTL keys to select more than one X.509 certificate.">多重选择。 用户可以使用 Shift 或 Ctrl 键选择多个 X.509 证书。</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509SelectionFlag.SingleSelection">
      <summary vsli:raw="A single selection. The UI allows the user to select one X.509 certificate.">单项选择。 该用户界面允许用户选择一个 X.509 证书。</summary>
    </member>
    <member name="T:System.Xaml.Permissions.XamlAccessLevel">
      <summary vsli:raw="Defines access control to assemblies and types for purposes of XAML loading.">定义对程序集和类型的访问控制以用于 XAML 加载。</summary>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(System.Reflection.Assembly)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Permissions.XamlAccessLevel&quot; /&gt; instance based on an assembly requested by &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt;.">基于 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 请求的程序集返回 <see cref="T:System.Reflection.Assembly" /> 实例。</summary>
      <param name="assembly" vsli:raw="The assembly for the request.">请求的程序集。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Permissions.XamlAccessLevel&quot; /&gt; instance, with the &lt;paramref name=&quot;assembly&quot; /&gt; value used as source information for &lt;see cref=&quot;P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName&quot; /&gt;.">一个用 <paramref name="assembly" /> 值作为 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 的源信息的 <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /> 实例。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;assembly&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assembly" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(System.Reflection.AssemblyName)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Permissions.XamlAccessLevel&quot; /&gt; instance based on an assembly requested by &lt;see cref=&quot;T:System.Reflection.AssemblyName&quot; /&gt;.">基于 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 请求的程序集返回 <see cref="T:System.Reflection.AssemblyName" /> 实例。</summary>
      <param name="assemblyName" vsli:raw="The assembly name for the request.">请求的程序集名称。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Permissions.XamlAccessLevel&quot; /&gt; instance, with the &lt;paramref name=&quot;assemblyName&quot; /&gt; value used as source information for &lt;see cref=&quot;P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName&quot; /&gt;.">一个用 <paramref name="assemblyName" /> 值作为 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 的源信息的 <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /> 实例。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;assemblyName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assemblyName" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;assemblyName&quot; /&gt; is not a valid fully qualified assembly name.">
        <paramref name="assemblyName" /> 不是有效的完全限定程序集名称。</exception>
    </member>
    <member name="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Reflection.AssemblyName&quot; /&gt; of the assembly for which this &lt;see cref=&quot;T:System.Xaml.Permissions.XamlAccessLevel&quot; /&gt; determines permissions.">获取权限由此 <see cref="T:System.Reflection.AssemblyName" /> 来确定的程序集的 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Reflection.AssemblyName&quot; /&gt; of the assembly for which this &lt;see cref=&quot;T:System.Xaml.Permissions.XamlAccessLevel&quot; /&gt; determines permissions.">权限由此 <see cref="T:System.Reflection.AssemblyName" /> 来确定的程序集的 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />。</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Permissions.XamlAccessLevel&quot; /&gt; instance based on a specific type specified by its qualified name.">基于按限定名称指定的特定类型返回 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 实例。</summary>
      <param name="assemblyQualifiedTypeName" vsli:raw="A string that is parsed as an assembly-qualified type name.">一个作为程序集限定类型名称分析的字符串。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Permissions.XamlAccessLevel&quot; /&gt; instance, with the &lt;paramref name=&quot;assemblyQualifiedTypeName&quot; /&gt; value used as source information for &lt;see cref=&quot;P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName&quot; /&gt; and &lt;see cref=&quot;P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName&quot; /&gt; determined by reflection on the type.">一个用 <paramref name="assemblyQualifiedTypeName" /> 值作为 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 和 <see cref="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName" />（由对类型的反射来确定）的源信息的 <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /> 实例。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;assemblyQualifiedTypeName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="assemblyQualifiedTypeName" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;assemblyQualifiedTypeName&quot; /&gt; is not a valid assembly-qualified type name.  &#xA;  &#xA; -or-  &#xA;  &#xA; Assembly name within &lt;paramref name=&quot;assemblyQualifiedTypeName&quot; /&gt; is not a valid assembly name.">
        <paramref name="assemblyQualifiedTypeName" /> 不是有效的程序集限定的类型名称。  
或 
<paramref name="assemblyQualifiedTypeName" /> 内的程序集名称不是有效的程序集名称。</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.Type)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Xaml.Permissions.XamlAccessLevel&quot; /&gt; instance based on a specific type specified by &lt;see cref=&quot;T:System.Type&quot; /&gt;.">基于 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 指定的特定类型返回 <see cref="T:System.Type" /> 实例。</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to request access for.">请求对其进行访问的 <see cref="T:System.Type" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Xaml.Permissions.XamlAccessLevel&quot; /&gt; instance, with the &lt;paramref name=&quot;type&quot; /&gt; value used as source information for &lt;see cref=&quot;P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName&quot; /&gt; and &lt;see cref=&quot;P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName&quot; /&gt; determined by reflection on the type.">一个用 <paramref name="type" /> 值作为 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 和 <see cref="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName" />（由对类型的反射来确定）的源信息的 <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /> 实例。</returns>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName">
      <summary vsli:raw="Gets the unqualified string name of the type for which this &lt;see cref=&quot;T:System.Xaml.Permissions.XamlAccessLevel&quot; /&gt; determines permissions.">获取权限由此 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 来确定的类型的非限定字符串名称。</summary>
      <returns vsli:raw="The unqualified string name of the type for which this &lt;see cref=&quot;T:System.Xaml.Permissions.XamlAccessLevel&quot; /&gt; determines permissions.">权限由此 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 来确定的类型的非限定字符串名称。</returns>
    </member>
  </members>
</doc>