<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Windows.Input.Manipulations</name>
  </assembly>
  <members>
    <member name="T:System.Windows.Input.Manipulations.InertiaExpansionBehavior2D">
      <summary>Describe el comportamiento de expansión deseado de un procesador de inercia.</summary>
    </member>
    <member name="M:System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Input.Manipulations.InertiaExpansionBehavior2D" />.</summary>
    </member>
    <member name="P:System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.DesiredDeceleration">
      <summary>Obtiene o establece la desaceleración deseada de la expansión, en unidades de coordenados por milisegundo al cuadrado.</summary>
      <returns>Desaceleración deseada de la expansión, en unidades de coordenados por milisegundo al cuadrado.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.DesiredExpansionX">
      <summary>Obtiene o establece la expansión deseada a lo largo del eje X, en unidades de coordenadas.</summary>
      <returns>Expansión deseada a lo largo del eje X, en unidades de coordenadas.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.DesiredExpansionY">
      <summary>Obtiene o establece la expansión deseada a lo largo del eje Y, en unidades de coordenadas.</summary>
      <returns>Expansión deseada a lo largo del eje Y, en unidades de coordenadas.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.InitialRadius">
      <summary>Obtiene o establece el radio medio inicial, en unidades de coordenadas.</summary>
      <returns>Radio medio inicial, en unidades de coordenadas.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.InitialVelocityX">
      <summary>Obtiene o establece la velocidad de expansión inicial a lo largo del eje X, en unidades de coordenadas por milisegundo.</summary>
      <returns>Velocidad de expansión inicial a lo largo del eje X, en unidades de coordenadas por milisegundo.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.InertiaExpansionBehavior2D.InitialVelocityY">
      <summary>Obtiene o establece la velocidad de expansión inicial a lo largo del eje Y, en unidades de coordenadas por milisegundo.</summary>
      <returns>Velocidad de expansión inicial a lo largo del eje Y, en unidades de coordenadas por milisegundo.</returns>
    </member>
    <member name="T:System.Windows.Input.Manipulations.InertiaParameters2D">
      <summary>Clase base de la que se derivan todas las clases de parámetros de inercia.</summary>
    </member>
    <member name="T:System.Windows.Input.Manipulations.InertiaProcessor2D">
      <summary>Implementa la extrapolación de la posición, la orientación y el radio medio de una manipulación.</summary>
    </member>
    <member name="M:System.Windows.Input.Manipulations.InertiaProcessor2D.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Input.Manipulations.InertiaProcessor2D" />.</summary>
    </member>
    <member name="M:System.Windows.Input.Manipulations.InertiaProcessor2D.Complete(System.Int64)">
      <summary>Completa la extrapolación final mediante la marca de tiempo especificada y genera el evento <see cref="E:System.Windows.Input.Manipulations.InertiaProcessor2D.Completed" />.</summary>
      <param name="timestamp">Marca de tiempo para completar la extrapolación, en pasos de 100 nanosegundos.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">El parámetro de marca de tiempo es menor que la marca de tiempo inicial o anterior.</exception>
    </member>
    <member name="E:System.Windows.Input.Manipulations.InertiaProcessor2D.Completed">
      <summary>Se produce cuando se ha completado la extrapolación.</summary>
    </member>
    <member name="E:System.Windows.Input.Manipulations.InertiaProcessor2D.Delta">
      <summary>Se produce cuando cambia el origen de extrapolación o cuando se produce una traslación, un ajuste de escala o una rotación.</summary>
    </member>
    <member name="P:System.Windows.Input.Manipulations.InertiaProcessor2D.ExpansionBehavior">
      <summary>Obtiene o establece el comportamiento de expansión del procesador de inercia.</summary>
      <returns>Comportamiento de expansión del procesador de inercia.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginX">
      <summary>Obtiene o establece la coordenada x del origen inicial, en unidades de coordenadas.</summary>
      <returns>Coordenada x del origen inicial, en unidades de coordenadas.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.InertiaProcessor2D.InitialOriginY">
      <summary>Obtiene o establece la coordenada y del origen inicial, en unidades de coordenadas.</summary>
      <returns>Coordenada y del origen inicial, en unidades de coordenadas.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.InertiaProcessor2D.IsRunning">
      <summary>Obtiene un valor que indica si la inercia está actualmente en curso.</summary>
      <returns>Valor booleano que indica si la inercia está actualmente en curso.</returns>
    </member>
    <member name="M:System.Windows.Input.Manipulations.InertiaProcessor2D.Process(System.Int64)">
      <summary>Extrapola la posición, orientación y radio medio de la manipulación en el momento especificado.</summary>
      <param name="timestamp">Marca de tiempo para realizar la extrapolación, en pasos de 100 nanosegundos.</param>
      <returns>Posición, orientación y radio medio de la manipulación en el momento especificado. Es <see langword="true" /> si la extrapolación está en curso; es <see langword="false" /> si la extrapolación se ha completado.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">El parámetro de marca de tiempo es menor que la marca de tiempo inicial o anterior.</exception>
    </member>
    <member name="P:System.Windows.Input.Manipulations.InertiaProcessor2D.RotationBehavior">
      <summary>Obtiene o establece el comportamiento de rotación del procesador de inercia.</summary>
      <returns>Comportamiento de rotación del procesador de inercia.</returns>
    </member>
    <member name="M:System.Windows.Input.Manipulations.InertiaProcessor2D.SetParameters(System.Windows.Input.Manipulations.InertiaParameters2D)">
      <summary>Establece los parámetros en el procesador de inercia.</summary>
      <param name="parameters">Parámetros que se van a establecer.</param>
    </member>
    <member name="P:System.Windows.Input.Manipulations.InertiaProcessor2D.TranslationBehavior">
      <summary>Obtiene o establece el comportamiento de traslación del procesador de inercia.</summary>
      <returns>Comportamiento de traslación del procesador de inercia.</returns>
    </member>
    <member name="T:System.Windows.Input.Manipulations.InertiaRotationBehavior2D">
      <summary>Describe el comportamiento de rotación deseado de un procesador de inercia.</summary>
    </member>
    <member name="M:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Input.Manipulations.InertiaRotationBehavior2D" />.</summary>
    </member>
    <member name="P:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredDeceleration">
      <summary>Obtiene o establece la desaceleración angular deseada, en radianes por milisegundo al cuadrado.</summary>
      <returns>Desaceleración angular deseada, en radianes por milisegundo al cuadrado.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredRotation">
      <summary>Obtiene o establece la rotación deseada, en radianes.</summary>
      <returns>Rotación deseada, en radianes.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.InitialVelocity">
      <summary>Obtiene o establece la velocidad de rotación inicial, en radianes por milisegundo.</summary>
      <returns>Velocidad de rotación inicial, en radianes por milisegundo.</returns>
    </member>
    <member name="T:System.Windows.Input.Manipulations.InertiaTranslationBehavior2D">
      <summary>Describe el comportamiento de traslación deseado de un procesador de inercia.</summary>
    </member>
    <member name="M:System.Windows.Input.Manipulations.InertiaTranslationBehavior2D.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Input.Manipulations.InertiaTranslationBehavior2D" />.</summary>
    </member>
    <member name="P:System.Windows.Input.Manipulations.InertiaTranslationBehavior2D.DesiredDeceleration">
      <summary>Obtiene o establece la desaceleración deseada, en unidades de coordenados por milisegundo al cuadrado.</summary>
      <returns>Desaceleración deseada, en unidades de coordenados por milisegundo al cuadrado.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.InertiaTranslationBehavior2D.DesiredDisplacement">
      <summary>Obtiene o establece la distancia absoluta que el objeto debe recorrer a lo largo del vector de velocidad, en unidades de coordenadas.</summary>
      <returns>Distancia absoluta que el objeto debe recorrer a lo largo del vector de velocidad, en unidades de coordenadas.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.InertiaTranslationBehavior2D.InitialVelocityX">
      <summary>Obtiene o establece la velocidad inicial a lo largo del eje Y, en unidades de coordenadas por milisegundo.</summary>
      <returns>Velocidad inicial a lo largo del eje Y, en unidades de coordenadas por milisegundo.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.InertiaTranslationBehavior2D.InitialVelocityY">
      <summary>Obtiene o establece la velocidad inicial a lo largo del eje Y, en unidades de coordenadas por milisegundo.</summary>
      <returns>Velocidad inicial a lo largo del eje Y, en unidades de coordenadas por milisegundo.</returns>
    </member>
    <member name="T:System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs">
      <summary>Representa datos que se envían con un evento ManipulationProcessor2D.Completed o un evento InertiaProcessor2D.Completed.</summary>
    </member>
    <member name="P:System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs.OriginX">
      <summary>Obtiene la nueva coordenada X de la posición compuesta de la manipulación.</summary>
      <returns>Nueva coordenada X de la posición compuesta de la manipulación.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs.OriginY">
      <summary>Obtiene la nueva coordenada Y de la posición compuesta de la manipulación.</summary>
      <returns>Nueva coordenada Y de la posición compuesta de la manipulación.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs.Total">
      <summary>Obtiene el número total de cambios desde el inicio de la manipulación.</summary>
      <returns>Número total de cambios desde el inicio de la manipulación.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs.Velocities">
      <summary>Obtiene las velocidades actuales de la manipulación.</summary>
      <returns>Velocidades actuales de la manipulación.</returns>
    </member>
    <member name="T:System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs">
      <summary>Representa los datos que se envían con un evento <see cref="E:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta" /> o un evento <see cref="E:System.Windows.Input.Manipulations.InertiaProcessor2D.Delta" />.</summary>
    </member>
    <member name="P:System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs.Cumulative">
      <summary>Obtiene el número total de cambios desde el inicio de la manipulación.</summary>
      <returns>Número total de cambios desde el inicio de la manipulación.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs.Delta">
      <summary>Obtiene el número de cambios desde el último evento.</summary>
      <returns>Número de cambios desde el último evento.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs.OriginX">
      <summary>Obtiene la nueva coordenada X de la posición compuesta de la manipulación.</summary>
      <returns>Nueva coordenada X de la posición compuesta de la manipulación.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs.OriginY">
      <summary>Obtiene la nueva coordenada Y de la posición compuesta de la manipulación.</summary>
      <returns>Nueva coordenada Y de la posición compuesta de la manipulación.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs.Velocities">
      <summary>Obtiene las velocidades actuales de la manipulación.</summary>
      <returns>Velocidades actuales de la manipulación.</returns>
    </member>
    <member name="T:System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs">
      <summary>Representa los datos que se envían con un evento <see cref="E:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started" />.</summary>
    </member>
    <member name="P:System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs.OriginX">
      <summary>Obtiene la coordenada x del origen.</summary>
      <returns>Coordenada x del origen.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs.OriginY">
      <summary>Obtiene la coordenada y del origen.</summary>
      <returns>Coordenada y del origen.</returns>
    </member>
    <member name="T:System.Windows.Input.Manipulations.ManipulationDelta2D">
      <summary>Representa el resultado de una manipulación bidimensional.</summary>
    </member>
    <member name="P:System.Windows.Input.Manipulations.ManipulationDelta2D.ExpansionX">
      <summary>Obtiene la magnitud de la expansión a lo largo del eje X, en unidades de coordenadas.</summary>
      <returns>Magnitud de la expansión a lo largo del eje X, en unidades de coordenadas.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.ManipulationDelta2D.ExpansionY">
      <summary>Obtiene la magnitud de la expansión a lo largo del eje Y, en unidades de coordenadas.</summary>
      <returns>Magnitud de la expansión a lo largo del eje Y, en unidades de coordenadas.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.ManipulationDelta2D.Rotation">
      <summary>Obtiene la magnitud de la rotación, en radianes.</summary>
      <returns>Magnitud de la rotación, en radianes.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.ManipulationDelta2D.ScaleX">
      <summary>Obtiene el factor de escala a lo largo del eje X.</summary>
      <returns>Factor de escala a lo largo del eje x.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.ManipulationDelta2D.ScaleY">
      <summary>Obtiene el factor de escala a lo largo del eje Y.</summary>
      <returns>Factor de escala a lo largo del eje y.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.ManipulationDelta2D.TranslationX">
      <summary>Obtiene la traslación a lo largo del eje X, en unidades de coordenadas.</summary>
      <returns>Traslación a lo largo del eje X, en unidades de coordenadas.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.ManipulationDelta2D.TranslationY">
      <summary>Obtiene la traslación a lo largo del eje Y, en unidades de coordenadas.</summary>
      <returns>Traslación a lo largo del eje Y, en unidades de coordenadas.</returns>
    </member>
    <member name="T:System.Windows.Input.Manipulations.ManipulationParameters2D">
      <summary>Clase base de la que se derivan todas las clases de parámetros de manipulación.</summary>
    </member>
    <member name="T:System.Windows.Input.Manipulations.ManipulationPivot2D">
      <summary>Representa la información de pivote que usa un procesador de manipulación para las rotaciones de un solo manipulador.</summary>
    </member>
    <member name="M:System.Windows.Input.Manipulations.ManipulationPivot2D.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Input.Manipulations.ManipulationPivot2D" />.</summary>
    </member>
    <member name="P:System.Windows.Input.Manipulations.ManipulationPivot2D.Radius">
      <summary>Obtiene o establece la distancia entre el punto de pivote y el borde del área manipulable.</summary>
      <returns>Distancia entre el punto de pivote y el borde del área manipulable.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.ManipulationPivot2D.X">
      <summary>Obtiene o establece la posición X del pivote.</summary>
      <returns>Posición X del pivote.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.ManipulationPivot2D.Y">
      <summary>Obtiene o establece la posición Y del pivote.</summary>
      <returns>Posición Y del pivote.</returns>
    </member>
    <member name="T:System.Windows.Input.Manipulations.ManipulationProcessor2D">
      <summary>Implementa un compositor de varias entradas y una sola salida para las transformaciones bidimensionales (2D) en un espacio de coordenadas compartido.</summary>
    </member>
    <member name="M:System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor(System.Windows.Input.Manipulations.Manipulations2D)">
      <summary>Crea un nuevo objeto <see cref="T:System.Windows.Input.Manipulations.ManipulationProcessor2D" />.</summary>
      <param name="supportedManipulations">Conjunto inicial de manipulaciones compatibles.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="supportedManipulations" /> no es una combinación valida de los valores de la enumeración <see cref="T:System.Windows.Input.Manipulations.Manipulations2D" />.</exception>
    </member>
    <member name="M:System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor(System.Windows.Input.Manipulations.Manipulations2D,System.Windows.Input.Manipulations.ManipulationPivot2D)">
      <summary>Crea un nuevo objeto <see cref="T:System.Windows.Input.Manipulations.ManipulationProcessor2D" />.</summary>
      <param name="supportedManipulations">Conjunto inicial de manipulaciones compatibles.</param>
      <param name="pivot">Información de pivote para las rotaciones de un solo manipulador.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="supportedManipulations" /> no es una combinación valida de los valores de la enumeración <see cref="T:System.Windows.Input.Manipulations.Manipulations2D" />.</exception>
    </member>
    <member name="E:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed">
      <summary>Se produce cuando se completa una manipulación.</summary>
    </member>
    <member name="M:System.Windows.Input.Manipulations.ManipulationProcessor2D.CompleteManipulation(System.Int64)">
      <summary>Hace que se complete la manipulación actual y genera el evento <see cref="E:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed" />.</summary>
      <param name="timestamp">Marca de tiempo para completar la manipulación, en pasos de 100 nanosegundos.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">La marca de tiempo es menor que la marca de tiempo anterior para la manipulación actual.</exception>
    </member>
    <member name="E:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta">
      <summary>Se produce cuando cambia el origen de manipulación o cuando se produce una traslación, un ajuste de escala o una rotación.</summary>
    </member>
    <member name="P:System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius">
      <summary>Obtiene o establece el radio mínimo, en unidades de coordenadas, necesario para que un manipulador pueda participar en el ajuste de escala y la rotación.</summary>
      <returns>Radio mínimo, en unidades de coordenadas, necesario para que un manipulador pueda participar en el ajuste de escala y la rotación.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot">
      <summary>Obtiene o establece la información de pivote para el procesador de manipulación.</summary>
      <returns>Información de pivote para el procesador de manipulación.</returns>
    </member>
    <member name="M:System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators(System.Int64,System.Collections.Generic.IEnumerable{System.Windows.Input.Manipulations.Manipulator2D})">
      <summary>Procesa los manipuladores especificados como una sola acción por lotes.</summary>
      <param name="timestamp">Marca de tiempo del lote, en pasos de 100 nanosegundos.</param>
      <param name="manipulators">Conjunto de manipuladores que están actualmente en el ámbito.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">La marca de tiempo es menor que la marca de tiempo anterior para la manipulación actual.</exception>
    </member>
    <member name="M:System.Windows.Input.Manipulations.ManipulationProcessor2D.SetParameters(System.Windows.Input.Manipulations.ManipulationParameters2D)">
      <summary>Establece los parámetros del procesador de manipulación.</summary>
      <param name="parameters">Parámetros que se van a establecer.</param>
    </member>
    <member name="E:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started">
      <summary>Se produce cuando se inicia una nueva manipulación.</summary>
    </member>
    <member name="P:System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations">
      <summary>Obtiene o establece el conjunto actual de manipulaciones compatibles.</summary>
      <returns>Conjunto actual de manipulaciones compatibles.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">La propiedad intenta establecer un valor que no es una combinación válida de valores de enumeración de <see cref="T:System.Windows.Input.Manipulations.Manipulations2D" />.</exception>
    </member>
    <member name="T:System.Windows.Input.Manipulations.Manipulations2D">
      <summary>Representa las posibles manipulaciones bidimensionales (2D) afines.</summary>
    </member>
    <member name="F:System.Windows.Input.Manipulations.Manipulations2D.All">
      <summary>Todas las manipulaciones disponibles.</summary>
    </member>
    <member name="F:System.Windows.Input.Manipulations.Manipulations2D.None">
      <summary>Ninguna manipulación.</summary>
    </member>
    <member name="F:System.Windows.Input.Manipulations.Manipulations2D.Rotate">
      <summary>Rotación.</summary>
    </member>
    <member name="F:System.Windows.Input.Manipulations.Manipulations2D.Scale">
      <summary>Escala en ambas direcciones.</summary>
    </member>
    <member name="F:System.Windows.Input.Manipulations.Manipulations2D.Translate">
      <summary>Traslación en el eje X y/o el eje Y.</summary>
    </member>
    <member name="F:System.Windows.Input.Manipulations.Manipulations2D.TranslateX">
      <summary>Traslación en el eje X.</summary>
    </member>
    <member name="F:System.Windows.Input.Manipulations.Manipulations2D.TranslateY">
      <summary>Traslación en el eje Y.</summary>
    </member>
    <member name="T:System.Windows.Input.Manipulations.ManipulationVelocities2D">
      <summary>Representa un conjunto de velocidades calculadas por los procesadores de inercia y manipulación.</summary>
    </member>
    <member name="P:System.Windows.Input.Manipulations.ManipulationVelocities2D.AngularVelocity">
      <summary>Obtiene la velocidad angular en radianes por milisegundo.</summary>
      <returns>La velocidad angular en radianes por milisegundo.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.ManipulationVelocities2D.ExpansionVelocityX">
      <summary>Obtiene la velocidad de expansión a lo largo del eje X en unidades de coordenadas por milisegundo.</summary>
      <returns>La velocidad de expansión a lo largo del eje X en unidades de coordenadas por milisegundo.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.ManipulationVelocities2D.ExpansionVelocityY">
      <summary>Obtiene la velocidad de expansión a lo largo del eje Y en unidades de coordenadas por milisegundo.</summary>
      <returns>La velocidad de expansión a lo largo del eje Y en unidades de coordenadas por milisegundo.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.ManipulationVelocities2D.LinearVelocityX">
      <summary>Obtiene la velocidad a lo largo del eje X en unidades de coordenadas por milisegundo.</summary>
      <returns>La velocidad a lo largo del eje X en unidades de coordenadas por milisegundo.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.ManipulationVelocities2D.LinearVelocityY">
      <summary>Obtiene la velocidad a lo largo del eje Y en unidades de coordenadas por milisegundo.</summary>
      <returns>La velocidad a lo largo del eje Y en unidades de coordenadas por milisegundo.</returns>
    </member>
    <member name="F:System.Windows.Input.Manipulations.ManipulationVelocities2D.Zero">
      <summary>Obtiene un objeto <see cref="T:System.Windows.Input.Manipulations.ManipulationVelocities2D" /> con todas las velocidades establecidas en cero.</summary>
    </member>
    <member name="T:System.Windows.Input.Manipulations.Manipulator2D">
      <summary>Representa un manipulador bidimensional en un momento determinado.</summary>
    </member>
    <member name="M:System.Windows.Input.Manipulations.Manipulator2D.#ctor(System.Int32,System.Single,System.Single)">
      <summary>Crea un nuevo objeto <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" /> con las propiedades especificadas.</summary>
      <param name="id">Identificador único de este manipulador.</param>
      <param name="x">Coordenada x del manipulador.</param>
      <param name="y">Coordenada y del manipulador.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">La coordenada <paramref name="x" /> o coordenada <paramref name="y" /> es <see langword="float.NaN" />, <see langword="float.PositiveInfinity" />o <see langword="float.NegativeInfinity" />. Estos valores son todos no válidos.</exception>
    </member>
    <member name="M:System.Windows.Input.Manipulations.Manipulator2D.Equals(System.Object)">
      <summary>Determina si este objeto <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" /> tiene el mismo valor que el objeto <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" /> especificado.</summary>
      <param name="obj">Objeto <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" /> con el que se va a comparar este objeto.</param>
      <returns>Es <see langword="true" /> si los dos objetos <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" /> son del mismo tipo y representan el mismo valor; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.Manipulations.Manipulator2D.GetHashCode">
      <summary>Devuelve el código hash de esta instancia.</summary>
      <returns>Código hash de esta instancia.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.Manipulator2D.Id">
      <summary>Obtiene o establece el identificador único de este objeto <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" />.</summary>
      <returns>Identificador único de este objeto <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" />.</returns>
    </member>
    <member name="M:System.Windows.Input.Manipulations.Manipulator2D.op_Equality(System.Windows.Input.Manipulations.Manipulator2D,System.Windows.Input.Manipulations.Manipulator2D)">
      <summary>Determina si dos objetos <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" /> especificados tienen el mismo valor.</summary>
      <param name="manipulator1">Primer objeto <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" /> que se va a comparar.</param>
      <param name="manipulator2">Segundo objeto <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" /> que se va a comparar.</param>
      <returns>Es <see langword="true" /> si los dos objetos <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" /> tienen el mismo valor; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Input.Manipulations.Manipulator2D.op_Inequality(System.Windows.Input.Manipulations.Manipulator2D,System.Windows.Input.Manipulations.Manipulator2D)">
      <summary>Determina si dos objetos <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" /> especificados tienen valores diferentes.</summary>
      <param name="manipulator1">Primer objeto <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" /> que se va a comparar.</param>
      <param name="manipulator2">Segundo objeto <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" /> que se va a comparar.</param>
      <returns>Es <see langword="true" /> si los dos objetos <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" /> tienen valores diferentes; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.Manipulator2D.X">
      <summary>Obtiene o establece la coordenada x de este objeto <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" />.</summary>
      <returns>Coordenada x de este objeto <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" />.</returns>
    </member>
    <member name="P:System.Windows.Input.Manipulations.Manipulator2D.Y">
      <summary>Obtiene o establece la coordenada y de este objeto <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" />.</summary>
      <returns>Coordenada y de este objeto <see cref="T:System.Windows.Input.Manipulations.Manipulator2D" />.</returns>
    </member>
  </members>
</doc>