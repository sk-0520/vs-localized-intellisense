<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Windows.Extensions</name>
  </assembly>
  <members>
    <member name="T:System.Drawing.FontConverter">
      <summary>Convierte objetos <see cref="T:System.Drawing.Font" /> de un tipo de datos a otro.</summary>
    </member>
    <member name="M:System.Drawing.FontConverter.#ctor">
      <summary>Inicializa un nuevo objeto <see cref="T:System.Drawing.FontConverter" />.</summary>
    </member>
    <member name="M:System.Drawing.FontConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determina si este convertidor puede convertir un objeto del tipo de origen especificado al tipo nativo del convertidor.</summary>
      <param name="context">Un contexto de formateador. Este objeto se puede usar para obtener información adicional del entorno desde el que se llama a este convertidor. Puede ser <see langword="null" />, por lo que debe comprobarlo siempre. Además, las propiedades del objeto de contexto también pueden devolver <see langword="null" />.</param>
      <param name="sourceType">Tipo del que desea convertir.</param>
      <returns>Este método devuelve <see langword="true" /> si este objeto puede llevar a cabo la conversión.</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Obtiene un valor que indica si este convertidor puede convertir un objeto al tipo de destino especificado usando el contexto.</summary>
      <param name="context">Objeto <see langword="ITypeDescriptorContext" /> que proporciona un contexto de formato.</param>
      <param name="destinationType">Objeto <see cref="T:System.Type" /> que representa el tipo al que desea convertir.</param>
      <returns>Este método devuelve <see langword="true" /> si este convertidor puede llevar a cabo la conversión; en caso contrario, devuelve <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Convierte el objeto especificado al tipo nativo del convertidor.</summary>
      <param name="context">Un contexto de formateador. Este objeto se puede usar para obtener información adicional del entorno desde el que se llama a este convertidor. Puede ser <see langword="null" />, por lo que debe comprobarlo siempre. Además, las propiedades del objeto de contexto también pueden devolver <see langword="null" />.</param>
      <param name="culture">Objeto <see langword="CultureInfo" /> que especifica la referencia cultural usada para representar la fuente.</param>
      <param name="value">Objeto que se va a convertir.</param>
      <returns>El objeto convertido.</returns>
      <exception cref="T:System.NotSupportedException">No se pudo llevar a cabo la conversión.</exception>
    </member>
    <member name="M:System.Drawing.FontConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Convierte el objeto especificado en otro tipo.</summary>
      <param name="context">Un contexto de formateador. Este objeto se puede usar para obtener información adicional del entorno desde el que se llama a este convertidor. Puede ser <see langword="null" />, por lo que debe comprobarlo siempre. Además, las propiedades del objeto de contexto también pueden devolver <see langword="null" />.</param>
      <param name="culture">Objeto <see cref="T:System.Globalization.CultureInfo" /> que especifica la referencia cultural usada para representar el objeto.</param>
      <param name="value">Objeto que se va a convertir.</param>
      <param name="destinationType">Tipo de datos al que se va a convertir el objeto.</param>
      <returns>El objeto convertido.</returns>
      <exception cref="T:System.NotSupportedException">La conversión no se realizó correctamente.</exception>
    </member>
    <member name="M:System.Drawing.FontConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>Crea un objeto de este tipo mediante un conjunto especificado de valores de propiedad para el objeto.</summary>
      <param name="context">Un descriptor de tipo a través del que se puede proporcionar contexto adicional.</param>
      <param name="propertyValues">Diccionario de nuevos valores de propiedad. El diccionario tiene una serie de pares de nombre-valor, uno para cada propiedad devuelta desde el método <see cref="Overload:System.Drawing.FontConverter.GetProperties" />.</param>
      <returns>El objeto recién creado o <see langword="null" /> si no se pudo crear el objeto. La implementación predeterminada devuelve <see langword="null" />.  
 Un método <see cref="M:System.Drawing.FontConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> útil para crear objetos no modificables que tienen propiedades modificables.</returns>
    </member>
    <member name="T:System.Drawing.FontConverter.FontNameConverter">
      <summary>
        <see cref="T:System.Drawing.FontConverter.FontNameConverter" /> es un convertidor de tipos que se utiliza para convertir un nombre de fuente en otras representaciones y viceversa.</summary>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.FontConverter.FontNameConverter" />.</summary>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determina si este convertidor puede convertir un objeto del tipo de origen indicado al tipo nativo del convertidor.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede usar para extraer información adicional del entorno desde el que se invoca este convertidor. Puede ser <see langword="null" />, por lo que debe comprobarlo siempre. Además, las propiedades del objeto de contexto pueden devolver <see langword="null" />.</param>
      <param name="sourceType">Tipo desde el que se desea convertir.</param>
      <returns>Es <see langword="true" /> si el convertidor puede realizar la conversión; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Convierte el objeto especificado en el tipo nativo del convertidor.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede usar para extraer información adicional del entorno desde el que se invoca este convertidor. Puede ser <see langword="null" />, por lo que debe comprobarlo siempre. Además, las propiedades del objeto de contexto pueden devolver <see langword="null" />.</param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" /> que se utiliza para realizar la conversión</param>
      <param name="value">Objeto que se va a convertir.</param>
      <returns>El objeto convertido.</returns>
      <exception cref="T:System.NotSupportedException">No se puede completar la conversión.</exception>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Recupera una colección que contiene un conjunto de valores estándar para el tipo de datos para el que se ha diseñado este convertidor.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede usar para extraer información adicional del entorno desde el que se invoca este convertidor. Puede ser <see langword="null" />, por lo que debe comprobarlo siempre. Además, las propiedades del objeto de contexto pueden devolver <see langword="null" />.</param>
      <returns>Colección que contiene un conjunto estándar de valores válidos o <see langword="null" />. De manera predeterminada, es <see langword="null" />.</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Determina si la lista de valores estándar devueltos por el método <see cref="Overload:System.Drawing.FontConverter.FontNameConverter.GetStandardValues" /> es una lista exclusiva.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede usar para extraer información adicional del entorno desde el que se invoca este convertidor. Puede ser <see langword="null" />, por lo que debe comprobarlo siempre. Además, las propiedades del objeto de contexto pueden devolver <see langword="null" />.</param>
      <returns>Es <see langword="true" /> si la colección devuelta por <see cref="Overload:System.Drawing.FontConverter.FontNameConverter.GetStandardValues" /> es una lista exhaustiva de posibles valores; en caso contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Determina si este objeto admite un conjunto estándar de valores que se pueden seleccionar de una lista.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que se puede usar para extraer información adicional del entorno desde el que se invoca este convertidor. Puede ser <see langword="null" />, por lo que debe comprobarlo siempre. Además, las propiedades del objeto de contexto pueden devolver <see langword="null" />.</param>
      <returns>Es <see langword="true" /> si debe llamarse a <see cref="Overload:System.Drawing.FontConverter.FontNameConverter.GetStandardValues" /> para buscar un conjunto común de valores que sea compatible con el objeto; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.System#IDisposable#Dispose">
      <summary>Realiza tareas definidas por la aplicación asociadas a la liberación o al restablecimiento de recursos no administrados.</summary>
    </member>
    <member name="T:System.Drawing.FontConverter.FontUnitConverter">
      <summary>Convierte unidades de fuente en otros tipos de unidad y viceversa.</summary>
    </member>
    <member name="M:System.Drawing.FontConverter.FontUnitConverter.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.FontConverter.FontUnitConverter" />.</summary>
    </member>
    <member name="M:System.Drawing.FontConverter.FontUnitConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Devuelve una colección de valores estándar válidos para el tipo de <see cref="T:System.Drawing.Font" />.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</param>
    </member>
    <member name="M:System.Drawing.FontConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Determina si, al cambiar un valor en este objeto, es necesario llamar al método <see cref="Overload:System.Drawing.FontConverter.CreateInstance" /> para crear un nuevo valor.</summary>
      <param name="context">Un descriptor de tipo a través del que se puede proporcionar contexto adicional.</param>
      <returns>Este método devuelve <see langword="true" /> si se debe llamar al objeto <see langword="CreateInstance" /> cuando se hace un cambio en una o varias de las propiedades de este objeto; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>Recupera el conjunto de propiedades de este tipo. De forma predeterminada, un tipo no tiene ninguna propiedad para devolver.</summary>
      <param name="context">Un descriptor de tipo a través del que se puede proporcionar contexto adicional.</param>
      <param name="value">Valor del objeto del que se van a obtener las propiedades.</param>
      <param name="attributes">Una matriz de objetos <see cref="T:System.Attribute" /> que describen las propiedades.</param>
      <returns>Conjunto de propiedades que se deben exponer para este tipo de datos. Si no se debe exponer ninguna propiedad, podría devolver <see langword="null" />. La implementación predeterminada siempre devuelve <see langword="null" />.  
Una implementación sencilla de este método puede llamar al método <see cref="Overload:System.ComponentModel.TypeConverter.GetProperties" /> para averiguar el tipo de datos correcto.</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Determina si este objeto admite propiedades. De manera predeterminada, es <see langword="false" />.</summary>
      <param name="context">Un descriptor de tipo a través del que se puede proporcionar contexto adicional.</param>
      <returns>Este método devuelve <see langword="true" /> si se debe llamar al método <see cref="M:System.Drawing.FontConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" /> para buscar las propiedades del objeto; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Drawing.IconConverter">
      <summary>Convierte un objeto <see cref="T:System.Drawing.Icon" /> de un tipo de datos a otro. Obtenga acceso a esta clase mediante el objeto <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
    </member>
    <member name="M:System.Drawing.IconConverter.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.IconConverter" />.</summary>
    </member>
    <member name="M:System.Drawing.IconConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determina si este objeto <see cref="T:System.Drawing.IconConverter" /> puede convertir una instancia de un tipo especificado en un objeto <see cref="T:System.Drawing.Icon" /> utilizando el contexto especificado.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</param>
      <param name="sourceType">
        <see cref="T:System.Type" /> que especifica el tipo a partir del cual se desea realizar la conversión.</param>
      <returns>Este método devuelve <see langword="true" /> si este <see cref="T:System.Drawing.IconConverter" /> puede realizar la conversión; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.IconConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determina si <see cref="T:System.Drawing.IconConverter" /> puede convertir <see cref="T:System.Drawing.Icon" /> en una instancia de un tipo especificado, mediante el contexto especificado.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</param>
      <param name="destinationType">
        <see cref="T:System.Type" /> que especifica el tipo de destino de la conversión.</param>
      <returns>Este método devuelve <see langword="true" /> si este <see cref="T:System.Drawing.IconConverter" /> puede realizar la conversión; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.IconConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Convierte un objeto especificado en un <see cref="T:System.Drawing.Icon" />.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</param>
      <param name="culture">Objeto <see cref="T:System.Globalization.CultureInfo" /> que contiene información sobre una referencia cultural específica.</param>
      <param name="value">
        <see cref="T:System.Object" /> que va a convertirse.</param>
      <returns>Si este método se ejecuta correctamente, devuelve el objeto <see cref="T:System.Drawing.Icon" /> creado al convertir el objeto especificado. De lo contrario, produce una excepción.</returns>
      <exception cref="T:System.NotSupportedException">No se pudo llevar a cabo la conversión.</exception>
    </member>
    <member name="M:System.Drawing.IconConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Convierte <see cref="T:System.Drawing.Icon" /> (o un objeto que puede convertirse en <see cref="T:System.Drawing.Icon" />) en un tipo especificado.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</param>
      <param name="culture">Objeto <see cref="T:System.Globalization.CultureInfo" /> que especifica las convenciones de formato usadas por una referencia cultural determinada.</param>
      <param name="value">Objeto que se va a convertir. Este objeto debe ser de tipo Icon o de algún otro tipo que pueda convertirse en <see cref="T:System.Drawing.Icon" />.</param>
      <param name="destinationType">Tipo en el que va a convertirse el icono.</param>
      <returns>Este método devuelve el objeto convertido.</returns>
      <exception cref="T:System.NotSupportedException">No se pudo llevar a cabo la conversión.</exception>
    </member>
    <member name="T:System.Drawing.ImageConverter">
      <summary>
        <see cref="T:System.Drawing.ImageConverter" /> es una clase que se puede utilizar para convertir objetos <see cref="T:System.Drawing.Image" /> de un tipo de datos a otro. Obtenga acceso a esta clase mediante el objeto <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
    </member>
    <member name="M:System.Drawing.ImageConverter.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.ImageConverter" />.</summary>
    </member>
    <member name="M:System.Drawing.ImageConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determina si este objeto <see cref="T:System.Drawing.ImageConverter" /> puede convertir una instancia de un tipo especificado en un objeto <see cref="T:System.Drawing.Image" /> utilizando el contexto especificado.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</param>
      <param name="sourceType">
        <see cref="T:System.Type" /> que especifica el tipo a partir del cual se desea realizar la conversión.</param>
      <returns>Este método devuelve <see langword="true" /> si este <see cref="T:System.Drawing.ImageConverter" /> puede realizar la conversión; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.ImageConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determina si <see cref="T:System.Drawing.ImageConverter" /> puede convertir <see cref="T:System.Drawing.Image" /> en una instancia de un tipo especificado, mediante el contexto especificado.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</param>
      <param name="destinationType">
        <see cref="T:System.Type" /> que especifica el tipo de destino de la conversión.</param>
      <returns>Este método devuelve <see langword="true" /> si este <see cref="T:System.Drawing.ImageConverter" /> puede realizar la conversión; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.ImageConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Convierte un objeto especificado en un <see cref="T:System.Drawing.Image" />.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</param>
      <param name="culture">Objeto <see cref="T:System.Globalization.CultureInfo" /> que contiene información sobre una referencia cultural específica.</param>
      <param name="value">
        <see cref="T:System.Object" /> que va a convertirse.</param>
      <returns>Si este método se ejecuta correctamente, devuelve el objeto <see cref="T:System.Drawing.Image" /> creado al convertir el objeto especificado. De lo contrario, produce una excepción.</returns>
      <exception cref="T:System.NotSupportedException">No se puede completar la conversión.</exception>
    </member>
    <member name="M:System.Drawing.ImageConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Convierte un objeto <see cref="T:System.Drawing.Image" /> (o cualquier otro objeto que se pueda convertir a un tipo <see cref="T:System.Drawing.Image" />) al tipo especificado.</summary>
      <param name="context">Un contexto de formateador. Este objeto se puede usar para obtener más información del entorno desde el que se llama a este convertidor. Puede ser <see langword="null" />, por lo que debe comprobarlo siempre. Además, las propiedades del objeto de contexto también pueden devolver <see langword="null" />.</param>
      <param name="culture">Objeto <see cref="T:System.Globalization.CultureInfo" /> que especifica las convenciones de formato usadas por una referencia cultural determinada.</param>
      <param name="value">Valor <see cref="T:System.Drawing.Image" /> que se va a convertir.</param>
      <param name="destinationType">El objeto <see cref="T:System.Type" /> al cual se va a convertir el objeto <see cref="T:System.Drawing.Image" />.</param>
      <returns>Este método devuelve el objeto convertido.</returns>
      <exception cref="T:System.NotSupportedException">No se puede completar la conversión.</exception>
    </member>
    <member name="M:System.Drawing.ImageConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>Obtiene el conjunto de propiedades de este tipo.</summary>
      <param name="context">Un descriptor de tipo a través del que se puede proporcionar contexto adicional.</param>
      <param name="value">Valor del objeto del que se van a obtener las propiedades.</param>
      <param name="attributes">Una matriz de objetos <see cref="T:System.Attribute" /> que describen las propiedades.</param>
      <returns>Conjunto de propiedades que se deben exponer para este tipo de datos. Si no se deben exponer propiedades, podría devolver <see langword="null" />. La implementación predeterminada siempre devuelve <see langword="null" />.</returns>
    </member>
    <member name="M:System.Drawing.ImageConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Indica si este objeto admite propiedades. De forma predeterminada, es <see langword="false" />.</summary>
      <param name="context">Un descriptor de tipo a través del que se puede proporcionar contexto adicional.</param>
      <returns>Este método devuelve <see langword="true" /> si se debe llamar al objeto <see cref="Overload:System.Drawing.ImageConverter.GetProperties" /> para buscar las propiedades de este objeto.</returns>
    </member>
    <member name="T:System.Drawing.ImageFormatConverter">
      <summary>
        <see cref="T:System.Drawing.ImageFormatConverter" /> es una clase que se puede utilizar para convertir objetos <see cref="T:System.Drawing.Imaging.ImageFormat" /> de un tipo de datos a otro. Obtenga acceso a esta clase mediante el objeto <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.ImageFormatConverter" />.</summary>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determina si el convertidor puede convertir un objeto del tipo de origen dado en el tipo nativo del convertidor.</summary>
      <param name="context">Un contexto de formateador. Este objeto se puede usar para obtener más información del entorno desde el que se llama a este convertidor. Puede ser <see langword="null" />, por lo que debe comprobarlo siempre. Además, las propiedades del objeto de contexto también pueden devolver <see langword="null" />.</param>
      <param name="sourceType">Tipo del que desea convertir.</param>
      <returns>Este método devuelve <see langword="true" /> si este objeto puede llevar a cabo la conversión.</returns>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Obtiene un valor que indica si este convertidor puede convertir un objeto en el tipo de destino dado mediante el contexto.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que especifica el contexto de esta conversión de tipo.</param>
      <param name="destinationType">
        <see cref="T:System.Type" /> que representa el tipo al que se desea convertir este objeto <see cref="T:System.Drawing.Imaging.ImageFormat" />.</param>
      <returns>Este método devuelve <see langword="true" /> si este objeto puede llevar a cabo la conversión.</returns>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Convierte el objeto especificado en un objeto <see cref="T:System.Drawing.Imaging.ImageFormat" />.</summary>
      <param name="context">Un contexto de formateador. Este objeto se puede usar para obtener más información del entorno desde el que se llama a este convertidor. Puede ser <see langword="null" />, por lo que debe comprobarlo siempre. Además, las propiedades del objeto de contexto también pueden devolver <see langword="null" />.</param>
      <param name="culture">Objeto <see cref="T:System.Globalization.CultureInfo" /> que especifica las convenciones de formato de una referencia cultural determinada.</param>
      <param name="value">Objeto que se va a convertir.</param>
      <returns>El objeto convertido.</returns>
      <exception cref="T:System.NotSupportedException">No se puede completar la conversión.</exception>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Convierte el objeto especificado en el tipo especificado.</summary>
      <param name="context">Un contexto de formateador. Este objeto se puede usar para obtener más información del entorno desde el que se llama a este convertidor. Puede ser <see langword="null" />, por lo que debe comprobarlo siempre. Además, las propiedades del objeto de contexto también pueden devolver <see langword="null" />.</param>
      <param name="culture">Objeto <see cref="T:System.Globalization.CultureInfo" /> que especifica las convenciones de formato de una referencia cultural determinada.</param>
      <param name="value">Objeto que se va a convertir.</param>
      <param name="destinationType">Tipo en el que se va a convertir el objeto.</param>
      <returns>El objeto convertido.</returns>
      <exception cref="T:System.NotSupportedException">No se puede completar la conversión.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> es <see langword="null." /></exception>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Obtiene una colección que contiene un conjunto de valores estándar para el tipo de datos para el que está diseñado este validador. Devolverá <see langword="null" /> si el tipo de datos no admite un conjunto de valores estándar.</summary>
      <param name="context">Un contexto de formateador. Este objeto se puede usar para obtener más información del entorno desde el que se llama a este convertidor. Puede ser <see langword="null" />, por lo que debe comprobarlo siempre. Además, las propiedades del objeto de contexto también pueden devolver <see langword="null" />.</param>
      <returns>Colección que contiene un conjunto estándar de valores válidos o <see langword="null" />. La implementación predeterminada siempre devuelve <see langword="null" />.</returns>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Indica si este objeto admite un conjunto estándar de valores que se pueden seleccionar de una lista.</summary>
      <param name="context">Un descriptor de tipo a través del que se puede proporcionar contexto adicional.</param>
      <returns>Este método devuelve <see langword="true" /> si se debe llamar al método <see cref="Overload:System.Drawing.ImageFormatConverter.GetStandardValues" /> para buscar un conjunto de valores común que sea compatible con el objeto.</returns>
    </member>
    <member name="T:System.Drawing.Printing.MarginsConverter">
      <summary>Proporciona una clase <see cref="T:System.Drawing.Printing.MarginsConverter" /> para <see cref="T:System.Drawing.Printing.Margins" />.</summary>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.Printing.MarginsConverter" />.</summary>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Devuelve un valor que indica si el convertidor puede convertir un objeto del tipo de origen dado en el tipo nativo del convertidor mediante el contexto especificado.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</param>
      <param name="sourceType">
        <see cref="T:System.Type" /> que representa el tipo desde el que se desea convertir.</param>
      <returns>
        <see langword="true" />si un objeto puede realizar la conversión; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Devuelve un valor que indica si este convertidor puede convertir un objeto en el tipo de destino dado mediante el contexto especificado.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</param>
      <param name="destinationType">
        <see cref="T:System.Type" /> que representa el tipo al que se va a convertir.</param>
      <returns>
        <see langword="true" /> si este convertidor puede realizar la conversión; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Convierte el objeto especificado al tipo nativo del convertidor.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" /> que proporciona el idioma de destino de la conversión.</param>
      <param name="value">Valor <see cref="T:System.Object" /> que se va a convertir.</param>
      <returns>
        <see cref="T:System.Object" /> que representa el valor convertido.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> no contiene valores para los cuatro márgenes. Por ejemplo, "100,100,100,100" indica una pulgada para los márgenes izquierdo, derecho, superior e inferior.</exception>
      <exception cref="T:System.NotSupportedException">No se puede realizar la conversión.</exception>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Convierte el objeto de valor dado en el tipo de destino especificado usando el contexto y los argumentos especificados.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" /> que proporciona el idioma de destino de la conversión.</param>
      <param name="value">Valor <see cref="T:System.Object" /> que se va a convertir.</param>
      <param name="destinationType">
        <see cref="T:System.Type" /> al cual se va a convertir el valor.</param>
      <returns>
        <see cref="T:System.Object" /> que representa el valor convertido.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> es <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">No se puede realizar la conversión.</exception>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>Crea un objeto de tipo <see cref="T:System.Object" /> dado un conjunto de valores de propiedad para el objeto.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</param>
      <param name="propertyValues">
        <see cref="T:System.Collections.IDictionary" /> de nuevos valores de propiedad.</param>
      <returns>Un <see cref="T:System.Object" /> que representa la interfaz <see cref="T:System.Collections.IDictionary" /> especificada, o es <see langword="null" /> si no es posible crear el objeto.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="propertyValues" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Devuelve un valor que indica si, al cambiar un valor en este objeto, es necesario llamar al método <see cref="M:System.Drawing.Printing.MarginsConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> para crear un nuevo valor usando el contexto especificado.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</param>
      <returns>
        <see langword="true" /> si, al cambiar una propiedad de este objeto, es necesario llamar al método <see cref="M:System.Drawing.Printing.MarginsConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> para crear un nuevo valor; en caso contrario, <see langword="false" />. Este método devuelve siempre <see langword="true" />.</returns>
    </member>
    <member name="T:System.Media.SoundPlayer">
      <summary>Controla la reproducción del sonido de un archivo .wav.</summary>
    </member>
    <member name="M:System.Media.SoundPlayer.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Media.SoundPlayer" />.</summary>
    </member>
    <member name="M:System.Media.SoundPlayer.#ctor(System.IO.Stream)">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Media.SoundPlayer" /> y asocia el archivo .wav a la <see cref="T:System.IO.Stream" /> especificada.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" /> de un archivo .wav.</param>
    </member>
    <member name="M:System.Media.SoundPlayer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Media.SoundPlayer" />.</summary>
      <param name="serializationInfo">Clase <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que se va a utilizar para la deserialización.</param>
      <param name="context">Destino que se va a utilizar para la deserialización.</param>
      <exception cref="T:System.UriFormatException">La propiedad <see cref="P:System.Media.SoundPlayer.SoundLocation" /> especificada en <paramref name="serializationInfo" /> no se puede resolver.</exception>
    </member>
    <member name="M:System.Media.SoundPlayer.#ctor(System.String)">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Media.SoundPlayer" /> y asocia el archivo .wav especificado.</summary>
      <param name="soundLocation">Ubicación del archivo .wav que se va a cargar.</param>
      <exception cref="T:System.UriFormatException">No se puede resolver el valor de URL especificado por <paramref name="soundLocation" />.</exception>
    </member>
    <member name="P:System.Media.SoundPlayer.IsLoadCompleted">
      <summary>Obtiene un valor que indica si la carga de un archivo .wav se ha realizado correctamente.</summary>
      <returns>Es <see langword="true" /> si se ha cargado un archivo .wav; es <see langword="false" /> si todavía no se ha cargado un archivo .wav.</returns>
    </member>
    <member name="M:System.Media.SoundPlayer.Load">
      <summary>Carga un sonido de forma sincrónica.</summary>
      <exception cref="T:System.ServiceProcess.TimeoutException">El tiempo de carga transcurrido sobrepasa el tiempo, en milisegundos, especificado por <see cref="P:System.Media.SoundPlayer.LoadTimeout" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">No se encuentra el archivo especificado por <see cref="P:System.Media.SoundPlayer.SoundLocation" />.</exception>
    </member>
    <member name="M:System.Media.SoundPlayer.LoadAsync">
      <summary>Carga un archivo .wav desde una secuencia o un recurso Web utilizando un subproceso nuevo.</summary>
      <exception cref="T:System.ServiceProcess.TimeoutException">El tiempo de carga transcurrido sobrepasa el tiempo, en milisegundos, especificado por <see cref="P:System.Media.SoundPlayer.LoadTimeout" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">No se encuentra el archivo especificado por <see cref="P:System.Media.SoundPlayer.SoundLocation" />.</exception>
    </member>
    <member name="E:System.Media.SoundPlayer.LoadCompleted">
      <summary>Se produce cuando un archivo .wav se ha cargado, ya sea correctamente o no.</summary>
    </member>
    <member name="P:System.Media.SoundPlayer.LoadTimeout">
      <summary>Obtiene o establece el tiempo máximo, expresado en milisegundos, que puede tardar en cargarse el archivo .wav.</summary>
      <returns>Número de milisegundos durante los que se va a esperar. El valor predeterminado es 10000 (10 segundos).</returns>
    </member>
    <member name="M:System.Media.SoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)">
      <summary>Genera el evento <see cref="E:System.Media.SoundPlayer.LoadCompleted" />.</summary>
      <param name="e">Objeto <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Media.SoundPlayer.OnSoundLocationChanged(System.EventArgs)">
      <summary>Genera el evento <see cref="E:System.Media.SoundPlayer.SoundLocationChanged" />.</summary>
      <param name="e">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Media.SoundPlayer.OnStreamChanged(System.EventArgs)">
      <summary>Genera el evento <see cref="E:System.Media.SoundPlayer.StreamChanged" />.</summary>
      <param name="e">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="M:System.Media.SoundPlayer.Play">
      <summary>Reproduce el archivo .wav mediante un subproceso nuevo, y si el archivo .wav no estaba cargado, primero lo carga.</summary>
      <exception cref="T:System.ServiceProcess.TimeoutException">El tiempo de carga transcurrido sobrepasa el tiempo, en milisegundos, especificado por <see cref="P:System.Media.SoundPlayer.LoadTimeout" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">No se encuentra el archivo especificado por <see cref="P:System.Media.SoundPlayer.SoundLocation" />.</exception>
      <exception cref="T:System.InvalidOperationException">El encabezado de .wav está dañado; el archivo especificado por <see cref="P:System.Media.SoundPlayer.SoundLocation" /> no es un archivo .wav con formato PCM.</exception>
    </member>
    <member name="M:System.Media.SoundPlayer.PlayLooping">
      <summary>Reproduce repetidamente el archivo .wav mediante un subproceso nuevo y carga primero el archivo .wav si no está cargado.</summary>
      <exception cref="T:System.ServiceProcess.TimeoutException">El tiempo de carga transcurrido sobrepasa el tiempo, en milisegundos, especificado por <see cref="P:System.Media.SoundPlayer.LoadTimeout" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">No se encuentra el archivo especificado por <see cref="P:System.Media.SoundPlayer.SoundLocation" />.</exception>
      <exception cref="T:System.InvalidOperationException">El encabezado de .wav está dañado; el archivo especificado por <see cref="P:System.Media.SoundPlayer.SoundLocation" /> no es un archivo .wav con formato PCM.</exception>
    </member>
    <member name="M:System.Media.SoundPlayer.PlaySync">
      <summary>Reproduce el archivo .wav y lo carga primero si no estaba cargado.</summary>
      <exception cref="T:System.ServiceProcess.TimeoutException">El tiempo de carga transcurrido sobrepasa el tiempo, en milisegundos, especificado por <see cref="P:System.Media.SoundPlayer.LoadTimeout" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">No se encuentra el archivo especificado por <see cref="P:System.Media.SoundPlayer.SoundLocation" />.</exception>
      <exception cref="T:System.InvalidOperationException">El encabezado de .wav está dañado; el archivo especificado por <see cref="P:System.Media.SoundPlayer.SoundLocation" /> no es un archivo .wav con formato PCM.</exception>
    </member>
    <member name="P:System.Media.SoundPlayer.SoundLocation">
      <summary>Obtiene o establece la ruta de acceso o la dirección URL del archivo .wav que se va a cargar.</summary>
      <returns>La ruta de acceso o la dirección URL desde la que se carga un archivo .wav, o bien, <see cref="F:System.String.Empty" /> si no hay ninguna ruta de acceso de archivo. De manera predeterminada, es <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="E:System.Media.SoundPlayer.SoundLocationChanged">
      <summary>Se produce cuando se ha establecido una nueva ruta de acceso de origen audio para este <see cref="T:System.Media.SoundPlayer" />.</summary>
    </member>
    <member name="M:System.Media.SoundPlayer.Stop">
      <summary>Detiene la reproducción del sonido si ya se está reproduciendo.</summary>
    </member>
    <member name="P:System.Media.SoundPlayer.Stream">
      <summary>Obtiene o establece la <see cref="T:System.IO.Stream" /> desde la que se va a cargar el archivo .wav.</summary>
      <returns>Una <see cref="T:System.IO.Stream" /> desde la que se va a cargar el archivo .wav, o bien, <see langword="null" /> si no está disponible ninguna secuencia. De manera predeterminada, es <see langword="null" />.</returns>
    </member>
    <member name="E:System.Media.SoundPlayer.StreamChanged">
      <summary>Se produce cuando se ha establecido un nuevo origen de audio de <see cref="T:System.IO.Stream" /> para este <see cref="T:System.Media.SoundPlayer" />.</summary>
    </member>
    <member name="M:System.Media.SoundPlayer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Para obtener una descripción de este miembro, vea el método <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que se rellena con datos.</param>
      <param name="context">Destino (vea <see cref="T:System.Runtime.Serialization.StreamingContext" />) de esta serialización.</param>
    </member>
    <member name="P:System.Media.SoundPlayer.Tag">
      <summary>Obtiene o establece el <see cref="T:System.Object" /> que contiene datos sobre <see cref="T:System.Media.SoundPlayer" />.</summary>
      <returns>
        <see cref="T:System.Object" /> que contiene datos sobre <see cref="T:System.Media.SoundPlayer" />.</returns>
    </member>
    <member name="T:System.Media.SystemSound">
      <summary>Representa un tipo de sonido del sistema.</summary>
    </member>
    <member name="M:System.Media.SystemSound.Play">
      <summary>Reproduce el tipo de sonido del sistema.</summary>
    </member>
    <member name="T:System.Media.SystemSounds">
      <summary>Recupera los sonidos asociados a un conjunto de tipos de evento de sonido del sistema operativo Windows. Esta clase no puede heredarse.</summary>
    </member>
    <member name="P:System.Media.SystemSounds.Asterisk">
      <summary>Obtiene el sonido asociado al evento de programa <see langword="Asterisk" /> en la combinación de sonidos actual de Windows.</summary>
      <returns>Objeto <see cref="T:System.Media.SystemSound" /> asociado al evento de programa <see langword="Asterisk" /> en la combinación de sonidos actual de Windows.</returns>
    </member>
    <member name="P:System.Media.SystemSounds.Beep">
      <summary>Obtiene el sonido asociado al evento de programa <see langword="Beep" /> en la combinación de sonidos actual de Windows.</summary>
      <returns>Objeto <see cref="T:System.Media.SystemSound" /> asociado al evento de programa <see langword="Beep" /> en la combinación de sonidos actual de Windows.</returns>
    </member>
    <member name="P:System.Media.SystemSounds.Exclamation">
      <summary>Obtiene el sonido asociado al evento de programa <see langword="Exclamation" /> en la combinación de sonidos actual de Windows.</summary>
      <returns>Objeto <see cref="T:System.Media.SystemSound" /> asociado al evento de programa <see langword="Exclamation" /> en la combinación de sonidos actual de Windows.</returns>
    </member>
    <member name="P:System.Media.SystemSounds.Hand">
      <summary>Obtiene el sonido asociado al evento de programa <see langword="Hand" /> en la combinación de sonidos actual de Windows.</summary>
      <returns>Objeto <see cref="T:System.Media.SystemSound" /> asociado al evento de programa <see langword="Hand" /> en la combinación de sonidos actual de Windows.</returns>
    </member>
    <member name="P:System.Media.SystemSounds.Question">
      <summary>Obtiene el sonido asociado al evento de programa <see langword="Question" /> en la combinación de sonidos actual de Windows.</summary>
      <returns>Objeto <see cref="T:System.Media.SystemSound" /> asociado al evento de programa <see langword="Question" /> en la combinación de sonidos actual de Windows.</returns>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509Certificate2UI">
      <summary>Muestra cuadros de diálogo de interfaz de usuario que le permiten seleccionar y ver los certificados X.509. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2UI.#ctor">
      <summary>Inicializa una instancia de la clase <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2UI" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2UI.DisplayCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Muestra un cuadro de diálogo con las propiedades de un certificado X.509 y su cadena de certificados asociada.</summary>
      <param name="certificate">Certificado X.509 que se va a mostrar.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="certificate" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">El parámetro <paramref name="certificate" /> no es válido.</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2UI.DisplayCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IntPtr)">
      <summary>Muestra un cuadro de diálogo con las propiedades de un certificado X.509 y su cadena de certificados asociada utilizando un identificador de una ventana primaria.</summary>
      <param name="certificate">Certificado X.509 que se va a mostrar.</param>
      <param name="hwndParent">Identificador de la ventana primaria que se va a utilizar para el cuadro de diálogo de presentación.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="certificate" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">El parámetro <paramref name="certificate" /> no es válido.</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2UI.SelectFromCollection(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.String,System.String,System.Security.Cryptography.X509Certificates.X509SelectionFlag)">
      <summary>Muestra un cuadro de diálogo en el que se puede seleccionar un certificado X.509 de una colección de certificados.</summary>
      <param name="certificates">Colección de certificados X.509 que se pueden seleccionar.</param>
      <param name="title">Título del cuadro de diálogo.</param>
      <param name="message">Mensaje descriptivo para guiar al usuario.  El mensaje se muestra en el cuadro de diálogo.</param>
      <param name="selectionFlag">Uno de los valores <see cref="T:System.Security.Cryptography.X509Certificates.X509SelectionFlag" /> que especifica si se permite la selección de uno o varios certificados.</param>
      <returns>Objeto <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> que contiene el certificado o certificados seleccionados.</returns>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="selectionFlag" /> no es un marcador válido.</exception>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="certificates" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">El parámetro <paramref name="certificates" /> no es válido.</exception>
    </member>
    <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2UI.SelectFromCollection(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.String,System.String,System.Security.Cryptography.X509Certificates.X509SelectionFlag,System.IntPtr)">
      <summary>Muestra un cuadro de diálogo para seleccionar un certificado X.509 de una colección de certificados utilizando un identificador de una ventana primaria.</summary>
      <param name="certificates">Colección de certificados X.509 que se pueden seleccionar.</param>
      <param name="title">Título del cuadro de diálogo.</param>
      <param name="message">Mensaje descriptivo para guiar al usuario.  El mensaje se muestra en el cuadro de diálogo.</param>
      <param name="selectionFlag">Uno de los valores <see cref="T:System.Security.Cryptography.X509Certificates.X509SelectionFlag" /> que especifica si se permite la selección de uno o varios certificados.</param>
      <param name="hwndParent">Identificador de la ventana primaria que se va a utilizar para el cuadro de diálogo de presentación.</param>
      <returns>Objeto <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> que contiene el certificado o certificados seleccionados.</returns>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="selectionFlag" /> no es un marcador válido.</exception>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="certificates" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">El parámetro <paramref name="certificates" /> no es válido.</exception>
    </member>
    <member name="T:System.Security.Cryptography.X509Certificates.X509SelectionFlag">
      <summary>Especifica el tipo de selección solicitada con el método <see cref="Overload:System.Security.Cryptography.X509Certificates.X509Certificate2UI.SelectFromCollection" />.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509SelectionFlag.MultiSelection">
      <summary>Selección múltiple. El usuario puede utilizar las teclas MAYÚS o CRTL para seleccionar más de un certificado X.509.</summary>
    </member>
    <member name="F:System.Security.Cryptography.X509Certificates.X509SelectionFlag.SingleSelection">
      <summary>Selección única. La interfaz de usuario permite al usuario seleccionar un certificado X.509.</summary>
    </member>
    <member name="T:System.Xaml.Permissions.XamlAccessLevel">
      <summary>Define el control de acceso a los ensamblados y los tipos a efectos de carga de XAML.</summary>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(System.Reflection.Assembly)">
      <summary>Devuelve una instancia de <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> basada en un ensamblado solicitado por <see cref="T:System.Reflection.Assembly" />.</summary>
      <param name="assembly">Ensamblado de la solicitud.</param>
      <returns>Una instancia de <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />, con el valor de <paramref name="assembly" /> utilizado como información del origen para <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assembly" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(System.Reflection.AssemblyName)">
      <summary>Devuelve una instancia de <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> basada en un ensamblado solicitado por <see cref="T:System.Reflection.AssemblyName" />.</summary>
      <param name="assemblyName">Nombre de ensamblado de la solicitud.</param>
      <returns>Una instancia de <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />, con el valor de <paramref name="assemblyName" /> utilizado como información del origen para <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El nombre de ensamblado de <paramref name="assemblyName" /> no es un nombre completo de ensamblado válido.</exception>
    </member>
    <member name="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName">
      <summary>Obtiene el objeto <see cref="T:System.Reflection.AssemblyName" /> del ensamblado para el que este objeto <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> determina los permisos.</summary>
      <returns>El objeto <see cref="T:System.Reflection.AssemblyName" /> del ensamblado para el que este objeto <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> determina los permisos.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.String)">
      <summary>Devuelve una instancia de <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> basada en un tipo concreto especificado por su nombre calificado.</summary>
      <param name="assemblyQualifiedTypeName">Una cadena que se analiza como un nombre de tipo calificado con el nombre de ensamblado.</param>
      <returns>Una instancia de <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />, con el valor de <paramref name="assemblyQualifiedTypeName" /> utilizado como información de origen para las propiedades <see cref="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName" /> y <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /> determinadas por reflexión en el tipo.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyQualifiedTypeName" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El nombre de tipo calificado con el nombre de ensamblado <paramref name="assemblyQualifiedTypeName" /> no es válido.  
O bien 
El nombre de ensamblado de <paramref name="assemblyQualifiedTypeName" /> no es un nombre de ensamblado válido.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.Type)">
      <summary>Devuelve una instancia de <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> basada en un tipo concreto especificado por <see cref="T:System.Type" />.</summary>
      <param name="type">
        <see cref="T:System.Type" /> para el que se solicita el acceso.</param>
      <returns>Una instancia de <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />, con el valor de <paramref name="type" /> utilizado como información de origen para las propiedades <see cref="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName" /> y <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /> determinadas por reflexión en el tipo.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName">
      <summary>Obtiene el nombre de cadena no calificado del tipo para el que este objeto <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> determina los permisos.</summary>
      <returns>El nombre de cadena no calificado del tipo para el que este objeto <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> determina los permisos.</returns>
    </member>
  </members>
</doc>