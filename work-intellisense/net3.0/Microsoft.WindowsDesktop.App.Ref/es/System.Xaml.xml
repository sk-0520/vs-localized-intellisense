<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Xaml</name>
  </assembly>
  <members>
    <member name="T:System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute">
      <summary>Marca tipos para notificar características de extensión de marcado XAML heredadas.</summary>
    </member>
    <member name="M:System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute.#ctor(System.Type)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute" />.</summary>
      <param name="type">Tipo de valor devuelto que este atributo notifica.</param>
    </member>
    <member name="P:System.Windows.Markup.AcceptedMarkupExtensionExpressionTypeAttribute.Type">
      <summary>Obtiene o establece el tipo de valor devuelto que este atributo notifica.</summary>
      <returns>Tipo de valor devuelto que este atributo notifica.</returns>
    </member>
    <member name="T:System.Windows.Markup.AmbientAttribute">
      <summary>Especifica que una propiedad o un tipo debe tratarse como ambiente. El concepto de ambiente se relaciona con la forma en que los procesadores XAML determinan los propietarios de tipos de los miembros.</summary>
    </member>
    <member name="M:System.Windows.Markup.AmbientAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.AmbientAttribute" />.</summary>
    </member>
    <member name="T:System.Windows.Markup.ArrayExtension">
      <summary>Implementa compatibilidad de <see langword="x:Array" /> con los servicios XAML de .NET Framework</summary>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.ArrayExtension" />. Esta crea una matriz vacía.</summary>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.#ctor(System.Array)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.ArrayExtension" />, tomando como base la matriz sin formato proporcionada.</summary>
      <param name="elements">Contenido de la matriz que rellena la matriz creada.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.#ctor(System.Type)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.ArrayExtension" /> e inicializa el tipo de la matriz.</summary>
      <param name="arrayType">Tipo de objeto de la nueva matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="arrayType" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.AddChild(System.Object)">
      <summary>Anexa el objeto proporcionado al final de la matriz.</summary>
      <param name="value">Objeto que se va a agregar al final de la matriz.</param>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.AddText(System.String)">
      <summary>Agrega un nodo de texto como un nuevo elemento de matriz.</summary>
      <param name="text">Texto que se va a agregar al final de la matriz.</param>
    </member>
    <member name="P:System.Windows.Markup.ArrayExtension.Items">
      <summary>Ordena el contenido de la matriz. Se puede establecer en XAML mediante la sintaxis de colección de XAML.</summary>
      <returns>Contenido de la matriz.</returns>
    </member>
    <member name="M:System.Windows.Markup.ArrayExtension.ProvideValue(System.IServiceProvider)">
      <summary>Devuelve una matriz cuyo tamaño se ajusta al número de objetos proporcionados en los valores de la propiedad <see cref="P:System.Windows.Markup.ArrayExtension.Items" />.</summary>
      <param name="serviceProvider">Objeto que puede proporcionar servicios para la extensión de marcado.</param>
      <returns>Matriz creada o null.</returns>
      <exception cref="T:System.InvalidOperationException">Se procesó una matriz que no proporcionó un valor de <see cref="P:System.Windows.Markup.ArrayExtension.Type" /> válido.  
O bien 
Hay una falta de coincidencia entre el tipo declarado <see cref="P:System.Windows.Markup.ArrayExtension.Type" /> de la matriz y uno o varios de sus valores <see cref="P:System.Windows.Markup.ArrayExtension.Items" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.ArrayExtension.Type">
      <summary>Obtiene o establece el tipo de matriz que se creará al llamar a <see cref="M:System.Windows.Markup.ArrayExtension.ProvideValue(System.IServiceProvider)" />.</summary>
      <returns>Tipo de matriz.</returns>
    </member>
    <member name="T:System.Windows.Markup.ConstructorArgumentAttribute">
      <summary>Especifica que un objeto se puede inicializar usando una sintaxis de constructor sin parámetros y que una propiedad del nombre especificado proporciona información de construcción.  Esta información sirve principalmente para la serialización XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.ConstructorArgumentAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.ConstructorArgumentAttribute" />.</summary>
      <param name="argumentName">Nombre del constructor que inicializará la propiedad asociada.</param>
    </member>
    <member name="P:System.Windows.Markup.ConstructorArgumentAttribute.ArgumentName">
      <summary>Obtiene el parámetro de nombre del constructor que inicializará la propiedad asociada.</summary>
      <returns>Nombre del constructor. Suponiendo el respaldo de CLR, este valor corresponde a la propiedad <see cref="P:System.Reflection.ParameterInfo.Name" /> del parámetro de constructor pertinente.</returns>
    </member>
    <member name="T:System.Windows.Markup.ContentPropertyAttribute">
      <summary>Indica qué propiedad de un tipo es la propiedad de contenido XAML. Un procesador XAML usa esta información al procesar elementos secundarios XAML de representaciones XAML del tipo con atributos.</summary>
    </member>
    <member name="M:System.Windows.Markup.ContentPropertyAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.ContentPropertyAttribute" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.ContentPropertyAttribute.#ctor(System.String)">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Windows.Markup.ContentPropertyAttribute" /> con el nombre especificado.</summary>
      <param name="name">Nombre de la propiedad de contenido.</param>
    </member>
    <member name="P:System.Windows.Markup.ContentPropertyAttribute.Name">
      <summary>Obtiene el nombre de la propiedad que es la propiedad de contenido.</summary>
      <returns>El nombre de la propiedad que es la propiedad de contenido.</returns>
    </member>
    <member name="T:System.Windows.Markup.ContentWrapperAttribute">
      <summary>Especifica uno o varios tipos en el tipo de colección asociado que se usará para encapsular el contenido externo.</summary>
    </member>
    <member name="M:System.Windows.Markup.ContentWrapperAttribute.#ctor(System.Type)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.ContentWrapperAttribute" />.</summary>
      <param name="contentWrapper">
        <see cref="T:System.Type" /> que se declara como contenedor de contenido del tipo de colección.</param>
    </member>
    <member name="P:System.Windows.Markup.ContentWrapperAttribute.ContentWrapper">
      <summary>Obtiene el tipo declarado como contenedor de contenido del tipo de colección asociado a este atributo.</summary>
      <returns>Tipo declarado como contenedor de contenido del tipo de colección.</returns>
    </member>
    <member name="M:System.Windows.Markup.ContentWrapperAttribute.Equals(System.Object)">
      <summary>Determina si la clase <see cref="T:System.Windows.Markup.ContentWrapperAttribute" /> especificada equivale a esta clase <see cref="T:System.Windows.Markup.ContentWrapperAttribute" /> comparando las propiedades de <see cref="P:System.Windows.Markup.ContentWrapperAttribute.ContentWrapper" />.</summary>
      <param name="obj">
        <see cref="T:System.Windows.Markup.ContentWrapperAttribute" /> que se va comparar.</param>
      <returns>Es <see langword="true" /> si las propiedades de <see cref="P:System.Windows.Markup.ContentWrapperAttribute.ContentWrapper" /> son iguales; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.ContentWrapperAttribute.GetHashCode">
      <summary>Obtiene un código hash para esta instancia.</summary>
      <returns>Código hash de un entero.</returns>
    </member>
    <member name="P:System.Windows.Markup.ContentWrapperAttribute.TypeId">
      <summary>Obtiene un identificador único para este atributo.</summary>
      <returns>Identificador único del atributo.</returns>
    </member>
    <member name="T:System.Windows.Markup.DateTimeValueSerializer">
      <summary>Convierte instancias de <see cref="T:System.String" /> en y desde instancias de <see cref="T:System.DateTime" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.DateTimeValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determina si la <see cref="T:System.String" /> especificada puede convertirse en una instancia de <see cref="T:System.DateTime" />.</summary>
      <param name="value">Cadena que se va a evaluar para la conversión.</param>
      <param name="context">Información contextual usada para la conversión.</param>
      <returns>
        <see langword="true" /> si el valor se puede convertir; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Determina si el objeto especificado se puede convertir a <see cref="T:System.String" />.</summary>
      <param name="value">Objeto que se va a evaluar para la conversión.</param>
      <param name="context">Información contextual usada para la conversión.</param>
      <returns>Es <see langword="true" /> si <paramref name="value" /> se puede convertir a <see cref="T:System.String" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Convierte <see cref="T:System.String" /> a <see cref="T:System.DateTime" />.</summary>
      <param name="value">Cadena que se va a convertir en una instancia de <see cref="T:System.DateTime" />.</param>
      <param name="context">Información contextual usada para la conversión.</param>
      <returns>Una nueva instancia de <see cref="T:System.DateTime" /> según el parámetro <paramref name="value" /> proporcionado.</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.DateTimeValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Convierte una instancia de <see cref="T:System.DateTime" /> en <see cref="T:System.String" />.</summary>
      <param name="value">Objeto que se va a convertir en una cadena.</param>
      <param name="context">Información contextual usada para la conversión.</param>
      <returns>Representación de cadena del objeto <see cref="T:System.DateTime" /> especificado.</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> no es <see cref="T:System.DateTime" /> o es <see langword="null" />.</exception>
    </member>
    <member name="T:System.Windows.Markup.DependsOnAttribute">
      <summary>Indica que la propiedad con atributos depende del valor de otra propiedad.</summary>
    </member>
    <member name="M:System.Windows.Markup.DependsOnAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.DependsOnAttribute" />.</summary>
      <param name="name">Propiedad de la que depende la propiedad asociada con este atributo <see cref="T:System.Windows.Markup.DependsOnAttribute" />.</param>
    </member>
    <member name="P:System.Windows.Markup.DependsOnAttribute.Name">
      <summary>Obtiene el nombre de la propiedad relacionada que se declara en este atributo <see cref="T:System.Windows.Markup.DependsOnAttribute" />.</summary>
      <returns>Nombre de la propiedad relacionada.</returns>
    </member>
    <member name="P:System.Windows.Markup.DependsOnAttribute.TypeId">
      <summary>Obtiene un identificador único para este atributo <see cref="T:System.Windows.Markup.DependsOnAttribute" />.</summary>
      <returns>Identificador único.</returns>
    </member>
    <member name="T:System.Windows.Markup.DictionaryKeyPropertyAttribute">
      <summary>Especifica una propiedad de la clase asociada que proporciona el valor de clave implícita. Las claves implícitas se usan para las claves en lugar de los atributos <see langword="x:Key" /> explícitos definidos en XAML para un elemento de las colecciones <see cref="T:System.Collections.IDictionary" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.DictionaryKeyPropertyAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.DictionaryKeyPropertyAttribute" />.</summary>
      <param name="name">Nombre de la propiedad que proporciona el valor de clave implícito.</param>
    </member>
    <member name="P:System.Windows.Markup.DictionaryKeyPropertyAttribute.Name">
      <summary>Obtiene el nombre de la propiedad que proporciona el valor de clave implícita.</summary>
      <returns>Nombre de la propiedad que proporciona el valor de clave implícito.</returns>
    </member>
    <member name="T:System.Windows.Markup.IComponentConnector">
      <summary>Proporciona compatibilidad con compilación y herramientas de marcado para los elementos XAML con nombre y para adjuntar controladores de evento a dichos elementos.</summary>
    </member>
    <member name="M:System.Windows.Markup.IComponentConnector.Connect(System.Int32,System.Object)">
      <summary>Asocia eventos y nombres con el contenido compilado.</summary>
      <param name="connectionId">Token de identificador para distinguir las llamadas.</param>
      <param name="target">Destino al que se van a conectar los eventos y nombres.</param>
    </member>
    <member name="M:System.Windows.Markup.IComponentConnector.InitializeComponent">
      <summary>Carga la página compilada de un componente.</summary>
    </member>
    <member name="T:System.Windows.Markup.INameScope">
      <summary>Define un contrato acerca de cómo debe obtenerse acceso a los nombres de los elementos en un determinado ámbito de nombres XAML y cómo debe exigirse la unicidad de los nombres en ese ámbito.</summary>
    </member>
    <member name="M:System.Windows.Markup.INameScope.FindName(System.String)">
      <summary>Devuelve un objeto que tiene el nombre de identificación proporcionado.</summary>
      <param name="name">Identificador del nombre del objeto que se está solicitando.</param>
      <returns>El objeto, si se encuentra. Devuelve <see langword="null" /> si no se encuentra ningún objeto con ese nombre.</returns>
    </member>
    <member name="M:System.Windows.Markup.INameScope.RegisterName(System.String,System.Object)">
      <summary>Registra el nombre proporcionado en el actual ámbito de nombres XAML.</summary>
      <param name="name">Nombre que se va a registrar.</param>
      <param name="scopedElement">Elemento específico al que se refiere el parámetro <paramref name="name" /> proporcionado.</param>
    </member>
    <member name="M:System.Windows.Markup.INameScope.UnregisterName(System.String)">
      <summary>Anula el registro del nombre proporcionado en el actual ámbito de nombres XAML.</summary>
      <param name="name">Nombre cuyo registro se va a anular.</param>
    </member>
    <member name="T:System.Windows.Markup.INameScopeDictionary">
      <summary>Unifica compatibilidad de enumeración, colección y diccionario, lo que resulta útil para exponer un diccionario de nombres en un ámbito de nombres XAML.</summary>
    </member>
    <member name="T:System.Windows.Markup.IProvideValueTarget">
      <summary>Representa un servicio que notifica las relaciones situacionales de objetos y propiedades para la evaluación de la extensión de marcado.</summary>
    </member>
    <member name="P:System.Windows.Markup.IProvideValueTarget.TargetObject">
      <summary>Obtiene el objeto de destino que se va a notificar.</summary>
      <returns>Objeto de destino que se va a notificar.</returns>
    </member>
    <member name="P:System.Windows.Markup.IProvideValueTarget.TargetProperty">
      <summary>Obtiene un identificador de la propiedad de destino que se está notificando.</summary>
      <returns>Identificador de la propiedad de destino que se está notificando.</returns>
    </member>
    <member name="T:System.Windows.Markup.IQueryAmbient">
      <summary>Consulta si una propiedad especificada debe tratarse como de ambiente en el ámbito actual.</summary>
    </member>
    <member name="M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)">
      <summary>Consulta si una propiedad con nombre especificada se puede considerar como de ambiente en el ámbito actual.</summary>
      <param name="propertyName">Nombre de la propiedad cuyo estado ambiente se va a comprobar.</param>
      <returns>Es <see langword="true" /> si la propiedad solicitada se puede considerar como de ambiente; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Markup.IUriContext">
      <summary>Representa un servicio que puede usar el contexto de la aplicación para resolver un identificador URI relativo proporcionado como un URI absoluto.</summary>
    </member>
    <member name="P:System.Windows.Markup.IUriContext.BaseUri">
      <summary>Obtiene o establece el URI base del contexto de la aplicación actual.</summary>
      <returns>URI base del contexto de la aplicación.</returns>
    </member>
    <member name="T:System.Windows.Markup.IValueSerializerContext">
      <summary>Define el contexto que se proporciona a un serializador <see cref="T:System.Windows.Markup.ValueSerializer" />. El contexto puede usarse para habilitar casos especiales de serialización o diferentes modos de serialización.</summary>
    </member>
    <member name="M:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor(System.ComponentModel.PropertyDescriptor)">
      <summary>Obtiene un serializador <see cref="T:System.Windows.Markup.ValueSerializer" /> para el descriptor de propiedades especificado.</summary>
      <param name="descriptor">Descriptor de la propiedad que se está convirtiendo.</param>
      <returns>Un serializador <see cref="T:System.Windows.Markup.ValueSerializer" /> capaz de serializar la propiedad especificada.</returns>
    </member>
    <member name="M:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor(System.Type)">
      <summary>Obtiene el serializador <see cref="T:System.Windows.Markup.ValueSerializer" /> asociado al tipo especificado.</summary>
      <param name="type">Tipo del valor que se está convirtiendo.</param>
      <returns>Un serializador <see cref="T:System.Windows.Markup.ValueSerializer" /> capaz de serializar el tipo especificado.</returns>
    </member>
    <member name="T:System.Windows.Markup.IXamlTypeResolver">
      <summary>Representa un servicio que resuelve los elementos con nombre en el marcado XAML como el tipo de CLR adecuado.</summary>
    </member>
    <member name="M:System.Windows.Markup.IXamlTypeResolver.Resolve(System.String)">
      <summary>Resuelve un tipo XAML con nombre en el objeto <see cref="T:System.Type" /> de CLR correspondiente.</summary>
      <param name="qualifiedTypeName">Nombre del tipo XAML que se va a resolver. El nombre del tipo se califica opcionalmente con el prefijo de un espacio de nombres XML. De lo contrario, se supone el actual espacio de nombres XML predeterminado.</param>
      <returns>
        <see cref="T:System.Type" /> en el que se resuelve <paramref name="qualifiedTypeName" />.</returns>
    </member>
    <member name="T:System.Windows.Markup.MarkupExtension">
      <summary>Proporciona una clase base para las implementaciones de extensión de marcado XAML que pueden admitir los servicios XAML de .NET Framework, y otros lectores y sistemas de escritura XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtension.#ctor">
      <summary>Inicializa una nueva instancia de una clase derivada de <see cref="T:System.Windows.Markup.MarkupExtension" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
      <summary>Cuando se implementa en una clase derivada, devuelve un objeto que se proporciona como el valor de la propiedad de destino para esta extensión de marcado.</summary>
      <param name="serviceProvider">Asistente del proveedor de servicios que puede prestar servicios para la extensión de marcado.</param>
      <returns>Valor de objeto que se va a establecer en la propiedad a la que se aplica la extensión.</returns>
    </member>
    <member name="T:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute">
      <summary>Informa de los corchetes que puede devolver una extensión de marcado.</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute.#ctor(System.Char,System.Char)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute" /> con los caracteres proporcionados.</summary>
      <param name="openingBracket">
        <see cref="T:System.Char" /> que define el corchete de apertura.</param>
      <param name="closingBracket">Un objeto <see cref="T:System.Char" /> que define el corchete de cierre.</param>
    </member>
    <member name="P:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute.ClosingBracket">
      <summary>Especifica el carácter que se va a usar como delimitador de cierre en una clase <see cref="T:System.Windows.Markup.MarkupExtension" />.</summary>
      <returns>Elemento <see cref="T:System.Char" /> que representa el carácter.</returns>
    </member>
    <member name="P:System.Windows.Markup.MarkupExtensionBracketCharactersAttribute.OpeningBracket">
      <summary>Especifica el carácter que se va a usar como delimitador de apertura en una clase <see cref="T:System.Windows.Markup.MarkupExtension" />.</summary>
      <returns>Elemento <see cref="T:System.Char" /> que representa el carácter.</returns>
    </member>
    <member name="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute">
      <summary>Especifica el tipo que una extensión de marcado puede devolver.</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.#ctor(System.Type)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute" /> utilizando el <see cref="T:System.Type" /> proporcionado.</summary>
      <param name="returnType">Tipo de valor devuelto que este atributo notifica.</param>
    </member>
    <member name="M:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.#ctor(System.Type,System.Type)">
      <summary>En desuso, no lo use.</summary>
      <param name="returnType">Tipo de valor devuelto que notifica Atributo de .NET Framework.</param>
      <param name="expressionType">En desuso, no lo use.</param>
    </member>
    <member name="P:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.ExpressionType">
      <summary>En desuso, no lo use.</summary>
      <returns>En desuso, no lo use.</returns>
    </member>
    <member name="P:System.Windows.Markup.MarkupExtensionReturnTypeAttribute.ReturnType">
      <summary>Obtiene el tipo de valor devuelto de <see cref="T:System.Windows.Markup.MarkupExtension" /> que notifica este Atributo de .NET Framework.</summary>
      <returns>El tipo de valor devuelto con seguridad de la implementación de <see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /> específica de la extensión de marcado donde se aplica <see cref="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute" /> Atributo de .NET Framework .</returns>
    </member>
    <member name="T:System.Windows.Markup.MemberDefinition">
      <summary>Proporciona la clase base de una técnica de marcado para definir los miembros de una clase en XAML declarativo.</summary>
    </member>
    <member name="M:System.Windows.Markup.MemberDefinition.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.MemberDefinition" />.</summary>
    </member>
    <member name="P:System.Windows.Markup.MemberDefinition.Name">
      <summary>Cuando se implementa en una clase derivada, obtiene o establece el nombre del miembro que se va a definir.</summary>
      <returns>Nombre del miembro que se va a definir.</returns>
    </member>
    <member name="T:System.Windows.Markup.NameReferenceConverter">
      <summary>Proporciona la conversión de tipos para convertir un nombre de cadena en una referencia al objeto con ese nombre o para devolver el nombre de un objeto de un gráfico de objetos.</summary>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.NameReferenceConverter" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Devuelve un valor que indica si este convertidor puede convertir un objeto de un tipo en otro objeto.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</param>
      <param name="sourceType">
        <see cref="T:System.Type" /> que representa el tipo desde el que se quiere convertir.</param>
      <returns>
        <see langword="true" /> si este convertidor puede realizar la conversión; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Devuelve un valor que indica si el convertidor puede convertir un objeto en el tipo de destino especificado.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</param>
      <param name="destinationType">Tipo al que se va a convertir.</param>
      <returns>Es <see langword="true" /> si el convertidor puede realizar la conversión; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Convierte el objeto proporcionado en otro objeto usando el contexto y la información de referencia cultural especificados.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" /> que se va a usar como referencia cultural actual.</param>
      <param name="value">Cadena de nombre de referencia que se va a convertir.</param>
      <returns>Objeto devuelto, que puede ser cualquier objeto al que se asigne un tipo en los ensamblados de respaldo pertinentes y que pueda declararse en XAML con una referencia de nombre XAML.</returns>
      <exception cref="T:System.InvalidOperationException">El valor de <paramref name="value" /> es una cadena null o una cadena vacía.  
o bien 
 El servicio <see cref="T:System.Xaml.IXamlNameResolver" /> falta o no es válido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.NameReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Convierte un objeto al tipo especificado. Sirve para devolver nombres de referencia XAML para los objetos de un gráfico de objetos.</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" /> que se va a utilizar como la referencia cultural actual.</param>
      <param name="value">Objeto cuyo nombre de referencia se va a recuperar.</param>
      <param name="destinationType">Tipo que se devuelve. Siempre se debe hacer referencia al tipo <see cref="T:System.String" />.</param>
      <returns>Nombre de referencia del objeto <paramref name="value" /> de entrada.</returns>
      <exception cref="T:System.InvalidOperationException">El servicio <see cref="T:System.Xaml.IXamlNameProvider" /> falta o no es válido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> es <see langword="null" />.</exception>
    </member>
    <member name="T:System.Windows.Markup.NameScopePropertyAttribute">
      <summary>Especifica una propiedad de la clase asociada que proporciona el valor del ámbito de nombres XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.NameScopePropertyAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.NameScopePropertyAttribute" /> con el nombre especificado.</summary>
      <param name="name">Nombre de la propiedad del tipo con atributos que proporciona el ámbito de nombres XAML.</param>
    </member>
    <member name="M:System.Windows.Markup.NameScopePropertyAttribute.#ctor(System.String,System.Type)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.NameScopePropertyAttribute" /> con el nombre y el tipo especificados.</summary>
      <param name="name">Nombre del miembro que se puede adjuntar y que proporciona el ámbito de nombres XAML.</param>
      <param name="type">Tipo propietario del miembro que se puede adjuntar y que proporciona el ámbito de nombres XAML.</param>
    </member>
    <member name="P:System.Windows.Markup.NameScopePropertyAttribute.Name">
      <summary>Obtiene el nombre de la propiedad que proporciona el ámbito de nombres XAML.</summary>
      <returns>Valor de cadena que es el nombre de la propiedad que proporciona el ámbito de nombres XAML.</returns>
    </member>
    <member name="P:System.Windows.Markup.NameScopePropertyAttribute.Type">
      <summary>Obtiene el tipo de propietario de la propiedad adjunta que proporciona la compatibilidad con el ámbito de nombres de XAML.</summary>
      <returns>Valor <see cref="T:System.Type" /> que es el tipo de propietario de la propiedad adjunta que proporciona la compatibilidad con el ámbito de nombres de XAML o <see langword="null" />.</returns>
    </member>
    <member name="T:System.Windows.Markup.NullExtension">
      <summary>Implementa una extensión de marcado XAML para que se devuelva un objeto null, que se puede usar para establecer explícitamente valores en null en XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.NullExtension.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.NullExtension" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.NullExtension.ProvideValue(System.IServiceProvider)">
      <summary>Proporciona el valor <see langword="null" /> para usarlo como salida de esta extensión de marcado.</summary>
      <param name="serviceProvider">Objeto que puede proporcionar servicios para la implementación de la extensión de marcado.</param>
      <returns>Referencia nula.</returns>
    </member>
    <member name="T:System.Windows.Markup.PropertyDefinition">
      <summary>Admite una técnica de marcado para definir las propiedades de una clase en XAML declarativo.</summary>
    </member>
    <member name="M:System.Windows.Markup.PropertyDefinition.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.PropertyDefinition" />.</summary>
    </member>
    <member name="P:System.Windows.Markup.PropertyDefinition.Attributes">
      <summary>Obtiene una lista de atributos CLR asociados.</summary>
      <returns>Lista de atributos asociados.</returns>
    </member>
    <member name="P:System.Windows.Markup.PropertyDefinition.Modifier">
      <summary>Obtiene o establece el nivel de acceso de la propiedad definida.</summary>
      <returns>Nivel de acceso de la propiedad definida, en forma de cadena.</returns>
    </member>
    <member name="P:System.Windows.Markup.PropertyDefinition.Name">
      <summary>Obtiene o establece el nombre de la propiedad que se va a definir.</summary>
      <returns>Nombre de la propiedad que se va a definir.</returns>
    </member>
    <member name="P:System.Windows.Markup.PropertyDefinition.Type">
      <summary>Obtiene o establece el identificador <see cref="T:System.Xaml.XamlType" /> de la propiedad que se va a definir.</summary>
      <returns>Identificador del tipo XAML de la propiedad que se va a definir.</returns>
    </member>
    <member name="T:System.Windows.Markup.Reference">
      <summary>Implementa la extensión de marcado <c>{x:Reference}</c>.</summary>
    </member>
    <member name="M:System.Windows.Markup.Reference.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.Reference" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.Reference.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.Reference" /> con el argumento <paramref name="name" />.</summary>
      <param name="name">Nombre XAML del elemento al que se va a hacer referencia.</param>
    </member>
    <member name="P:System.Windows.Markup.Reference.Name">
      <summary>Obtiene o establece el nombre XAML del que se van a obtener referencias.</summary>
      <returns>Nombre XAML del elemento del que se van a obtener referencias.</returns>
    </member>
    <member name="M:System.Windows.Markup.Reference.ProvideValue(System.IServiceProvider)">
      <summary>Devuelve un objeto que es el valor de la propiedad de destino. Para el tipo <see cref="T:System.Windows.Markup.Reference" />, este es el objeto de las referencias de <see cref="P:System.Windows.Markup.Reference.Name" /> proporcionadas.</summary>
      <param name="serviceProvider">Clase que implementa el servicio <see cref="T:System.Xaml.IXamlNameResolver" />.</param>
      <returns>Valor de la propiedad de destino. Puede ser cualquier objeto al que se asigne un tipo en los ensamblados de respaldo pertinentes.</returns>
      <exception cref="T:System.InvalidOperationException">El valor <paramref name="serviceProvider" /> no implementa el servicio <see cref="T:System.Xaml.IXamlNameResolver" />.  
o bien 
 El valor <see cref="P:System.Windows.Markup.Reference.Name" /> no se ha establecido a través de la construcción o uso posicional.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceProvider" /> es <see langword="null" />.</exception>
    </member>
    <member name="T:System.Windows.Markup.RootNamespaceAttribute">
      <summary>Representa un atributo de nivel de ensamblado que se usa para identificar el valor de la propiedad <see langword="RootNamespace" /> de un archivo de proyecto de Visual Studio.</summary>
    </member>
    <member name="M:System.Windows.Markup.RootNamespaceAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.RootNamespaceAttribute" />.</summary>
      <param name="nameSpace">Valor del espacio de nombres raíz.</param>
    </member>
    <member name="P:System.Windows.Markup.RootNamespaceAttribute.Namespace">
      <summary>Obtiene la cadena que se corresponde con el valor de la propiedad <see langword="RootNamespace" /> de un archivo de proyecto de Visual Studio.</summary>
      <returns>Cadena que corresponde al valor de la <see langword="RootNamespace" /> propiedad en un archivo de proyecto de Visual Studio.</returns>
    </member>
    <member name="T:System.Windows.Markup.RuntimeNamePropertyAttribute">
      <summary>Representa un atributo de nivel de tipo que indica qué propiedad del tipo se asigna al atributo x:Name de XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.RuntimeNamePropertyAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.RuntimeNamePropertyAttribute" />.</summary>
      <param name="name">Nombre de la propiedad que se va a usar como equivalente del atributo <see langword="x:Name" /> de la clase.</param>
    </member>
    <member name="P:System.Windows.Markup.RuntimeNamePropertyAttribute.Name">
      <summary>Obtiene el nombre de la propiedad de nombre en tiempo de ejecución que especifica <see cref="T:System.Windows.Markup.RuntimeNamePropertyAttribute" />.</summary>
      <returns>Nombre de la propiedad.</returns>
    </member>
    <member name="T:System.Windows.Markup.StaticExtension">
      <summary>Implementa una extensión de marcado que devuelve referencias estáticas de propiedades y campos.</summary>
    </member>
    <member name="M:System.Windows.Markup.StaticExtension.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.StaticExtension" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.StaticExtension.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.StaticExtension" /> utilizando la cadena <paramref name="member" /> proporcionada.</summary>
      <param name="member">Cadena que identifica el miembro al que se va a hacer referencia. Esta cadena usa el formato <c>prefix:typeName.fieldOrPropertyName</c>. <c>prefix</c> es el prefijo de asignación de un espacio de nombres XAML y solo es necesario para hacer referencia a valores estáticos que no están asignados al espacio de nombres XAML predeterminado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="member" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.StaticExtension.Member">
      <summary>Obtiene o establece una cadena de nombre de miembro que se usa para resolver un campo estático o una propiedad estática basándose en la resolución de tipos proporcionada por el servicio.</summary>
      <returns>Cadena que identifica el miembro al que se va a hacer referencia.</returns>
      <exception cref="T:System.ArgumentNullException">Se intentó establecer <see cref="P:System.Windows.Markup.StaticExtension.Member" /> en <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.StaticExtension.MemberType">
      <summary>Obtiene o establece el objeto <see cref="T:System.Type" /> que define el miembro estático que se va a devolver.</summary>
      <returns>
        <see cref="T:System.Type" /> que define el miembro estático que se va a devolver.</returns>
      <exception cref="T:System.ArgumentNullException">Se intentó establecer <see cref="P:System.Windows.Markup.StaticExtension.MemberType" /> en <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.StaticExtension.ProvideValue(System.IServiceProvider)">
      <summary>Devuelve el valor de objeto que se va a establecer en la propiedad donde se aplica esta extensión. Para <see cref="T:System.Windows.Markup.StaticExtension" />, el valor devuelto es el valor estático que se evalúa para el miembro estático solicitado.</summary>
      <param name="serviceProvider">Objeto que puede proporcionar servicios para la extensión de marcado. Se espera que el proveedor de servicios proporcione un servicio que implemente una resolución de tipos (<see cref="T:System.Windows.Markup.IXamlTypeResolver" />).</param>
      <returns>Valor estático que se va a establecer en la propiedad donde se aplica la extensión.</returns>
      <exception cref="T:System.InvalidOperationException">El valor de <paramref name="member" /> para la extensión es <see langword="null" /> en el momento de la evaluación.</exception>
      <exception cref="T:System.ArgumentException">Alguna parte de la cadena <paramref name="member" /> no se analizó correctamente. 
O bien 
 <paramref name="serviceProvider" /> no proporcionó un servicio para <see cref="T:System.Windows.Markup.IXamlTypeResolver" />  
O bien 
 El valor de <paramref name="member" /> no se resolvió como un miembro estático.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceProvider" /> es <see langword="null" />.</exception>
    </member>
    <member name="T:System.Windows.Markup.TrimSurroundingWhitespaceAttribute">
      <summary>Indica a los procesadores XAML que el espacio en blanco que rodea los elementos del tipo en el marcado debe recortarse al serializar.</summary>
    </member>
    <member name="M:System.Windows.Markup.TrimSurroundingWhitespaceAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.TrimSurroundingWhitespaceAttribute" />.</summary>
    </member>
    <member name="T:System.Windows.Markup.TypeExtension">
      <summary>Implementa una extensión de marcado que devuelve un objeto <see cref="T:System.Type" /> basándose en una entrada de cadena.</summary>
    </member>
    <member name="M:System.Windows.Markup.TypeExtension.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.TypeExtension" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.TypeExtension.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.TypeExtension" />, inicializando el valor de <see cref="P:System.Windows.Markup.TypeExtension.TypeName" /> basado en la cadena de <paramref name="typeName" /> proporcionada.</summary>
      <param name="typeName">Cadena que identifica el tipo al que se va a hacer referencia. Esta cadena usa el formato <c>prefix:className</c>. <c>prefix</c> es el prefijo de asignación de un espacio de nombres XAML y solo es necesario para hacer referencia a tipos que no están asignados al espacio de nombres XAML predeterminado.</param>
      <exception cref="T:System.ArgumentNullException">Se intenta especificar <paramref name="typeName" /> como <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.TypeExtension.#ctor(System.Type)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.TypeExtension" />, declarando directamente el tipo.</summary>
      <param name="type">Tipo que va a ser representado por <see cref="T:System.Windows.Markup.TypeExtension" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> es <see langword="null" /></exception>
    </member>
    <member name="M:System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)">
      <summary>Devuelve un objeto que debe establecerse en la propiedad donde se aplica esta extensión. Para <see cref="T:System.Windows.Markup.TypeExtension" />, es el valor de <see cref="T:System.Type" /> que se evalúa para el nombre de tipo solicitado.</summary>
      <param name="serviceProvider">Objeto que puede proporcionar servicios para la extensión de marcado. Se espera que el proveedor proporcione un servicio para <see cref="T:System.Windows.Markup.IXamlTypeResolver" />.</param>
      <returns>
        <see cref="T:System.Type" /> que se va a establecer en la propiedad donde se aplica la extensión.</returns>
      <exception cref="T:System.InvalidOperationException">El valor de <paramref name="member" /> para la extensión es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Alguna parte de la cadena <paramref name="typeName" /> no se analizó correctamente.  
o bien 
 <paramref name="serviceProvider" /> no proporcionó un servicio para <see cref="T:System.Windows.Markup.IXamlTypeResolver" />  
o bien 
 El valor <paramref name="typeName" /> no se resolvió como un tipo.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceProvider" /> es <see langword="null" /></exception>
    </member>
    <member name="P:System.Windows.Markup.TypeExtension.Type">
      <summary>Obtiene o establece la información de tipos para esta extensión.</summary>
      <returns>Tipo establecido. En tiempo de ejecución, puede ser <see langword="null" /> para obtener acceso, pero no puede estar establecido en <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Se ha intentado establecer en <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.TypeExtension.TypeName">
      <summary>Obtiene o establece el nombre de tipo representado por esta extensión de marcado.</summary>
      <returns>Cadena que identifica el tipo. Esta cadena usa el formato prefix<c>:</c>className. prefijo es el prefijo de asignación de un espacio de nombres XAML y solo es necesario hacer referencia a tipos que no están asignados al espacio de nombres XAML predeterminado para WPF (http://schemas.microsoft.com/winfx/2006/xaml/presentation).</returns>
      <exception cref="T:System.ArgumentNullException">Se intentó establecer en <see langword="null" />.</exception>
    </member>
    <member name="T:System.Windows.Markup.UidPropertyAttribute">
      <summary>Indica la propiedad CLR de una clase que proporciona el valor de directiva x:Uid.</summary>
    </member>
    <member name="M:System.Windows.Markup.UidPropertyAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.UidPropertyAttribute" />.</summary>
      <param name="name">Nombre de la propiedad que proporciona el valor <see langword="x:Uid" />.</param>
    </member>
    <member name="P:System.Windows.Markup.UidPropertyAttribute.Name">
      <summary>Obtiene el nombre de la propiedad CLR que representa el valor de directiva x:Uid.</summary>
      <returns>Nombre de la propiedad CLR que representa el valor x:Uid (Directiva).</returns>
    </member>
    <member name="T:System.Windows.Markup.UsableDuringInitializationAttribute">
      <summary>Indica si este tipo se compila de arriba a abajo durante la creación de gráficos de objetos XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.UsableDuringInitializationAttribute.#ctor(System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.UsableDuringInitializationAttribute" />.</summary>
      <param name="usable">Define si la clase asociada puede usarse durante la inicialización.</param>
    </member>
    <member name="P:System.Windows.Markup.UsableDuringInitializationAttribute.Usable">
      <summary>Obtiene un valor que indica si la clase asociada se puede usar durante la inicialización.</summary>
      <returns>Es <see langword="true" /> si la clase asociada se puede usar durante la inicialización; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Markup.ValueSerializer">
      <summary>Es una clase abstracta que define el comportamiento de conversión de la serialización de una representación de objeto.</summary>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.ValueSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Si se reemplaza en una clase derivada, determina si el elemento <see cref="T:System.String" /> especificado se puede convertir en una instancia del tipo que admite la implementación de <see cref="T:System.Windows.Markup.ValueSerializer" />.</summary>
      <param name="value">Cadena que se va a evaluar para la conversión.</param>
      <param name="context">Información contextual usada para la conversión.</param>
      <returns>
        <see langword="true" /> si el valor se puede convertir; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Si se reemplaza en una clase derivada, determina si el objeto especificado se puede convertir en una <see cref="T:System.String" />.</summary>
      <param name="value">Objeto que se va a evaluar para la conversión.</param>
      <param name="context">Información contextual usada para la conversión.</param>
      <returns>
        <see langword="true" /> si <paramref name="value" /> se puede convertir en <see cref="T:System.String" />; en caso contrario, <see langword="false." />.</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
      <summary>Si se reemplaza en una clase derivada, convierte una <see cref="T:System.String" /> en una instancia del tipo que la implementación de <see cref="T:System.Windows.Markup.ValueSerializer" /> admite.</summary>
      <param name="value">Cadena que se va a convertir.</param>
      <param name="context">Información contextual usada para la conversión.</param>
      <returns>Nueva instancia del tipo que la implementación de <see cref="T:System.Windows.Markup.ValueSerializer" /> admite basada en el <paramref name="value" /> proporcionado.</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> no se puede convertir.</exception>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Si se reemplaza en una clase derivada, convierte el objeto especificado en una <see cref="T:System.String" />.</summary>
      <param name="value">Objeto que se va a convertir en una cadena.</param>
      <param name="context">Información contextual usada para la conversión.</param>
      <returns>Una representación de cadena del objeto.</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> no se puede convertir.</exception>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetConvertFromException(System.Object)">
      <summary>Devuelve una excepción que se va a producir cuando no puede realizarse una conversión.</summary>
      <param name="value">Objeto que no se pudo convertir.</param>
      <returns>Objeto <see cref="T:System.Exception" /> de la excepción que se va a iniciar cuando no se pueda realizar una conversión <see langword="ConvertFrom" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetConvertToException(System.Object,System.Type)">
      <summary>Devuelve una excepción que se va a producir cuando no puede realizarse una conversión.</summary>
      <param name="value">Objeto que no se pudo convertir.</param>
      <param name="destinationType">Tipo que representa el tipo al que se intenta convertir.</param>
      <returns>Objeto <see cref="T:System.Exception" /> de la excepción que se va a iniciar cuando no se pueda realizar una conversión <see langword="ConvertTo" />.</returns>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor)">
      <summary>Obtiene el serializador <see cref="T:System.Windows.Markup.ValueSerializer" /> declarado de una propiedad pasando un descriptor de propiedad de CLR para la propiedad.</summary>
      <param name="descriptor">Descriptor de propiedad CLR para la propiedad que se va a serializar.</param>
      <returns>El serializador asociado con la propiedad especificada. Puede devolver <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="descriptor" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor,System.Windows.Markup.IValueSerializerContext)">
      <summary>Obtiene el serializador <see cref="T:System.Windows.Markup.ValueSerializer" /> declarado para la propiedad especificada, utilizando el contexto especificado.</summary>
      <param name="descriptor">Descriptor de la propiedad que se va a serializar.</param>
      <param name="context">Información contextual usada para la conversión.</param>
      <returns>El serializador asociado con la propiedad especificada.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="descriptor" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type)">
      <summary>Obtiene el serializador <see cref="T:System.Windows.Markup.ValueSerializer" /> declarado para el tipo especificado.</summary>
      <param name="type">Tipo para el que se va a obtener el serializador <see cref="T:System.Windows.Markup.ValueSerializer" />.</param>
      <returns>El serializador asociado con el tipo especificado. Puede devolver <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type,System.Windows.Markup.IValueSerializerContext)">
      <summary>Obtiene el serializador <see cref="T:System.Windows.Markup.ValueSerializer" /> declarado para el tipo especificado que utiliza el contexto indicado.</summary>
      <param name="type">Tipo para el que se va a obtener el serializador <see cref="T:System.Windows.Markup.ValueSerializer" />.</param>
      <param name="context">Información contextual usada para la conversión.</param>
      <returns>El serializador asociado con el tipo especificado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializer.TypeReferences(System.Object,System.Windows.Markup.IValueSerializerContext)">
      <summary>Obtiene una enumeración de los tipos a los que hace referencia <see cref="T:System.Windows.Markup.ValueSerializer" />.</summary>
      <param name="value">Valor que se está serializando.</param>
      <param name="context">Información contextual usada para la conversión.</param>
      <returns>Los tipos convertidos por este serializador.</returns>
    </member>
    <member name="T:System.Windows.Markup.ValueSerializerAttribute">
      <summary>Identifica la clase <see cref="T:System.Windows.Markup.ValueSerializer" /> que un tipo o una propiedad debe usar durante su serialización.</summary>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializerAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.ValueSerializerAttribute" /> usando una cadena de nombre de tipo calificado con el nombre de ensamblado.</summary>
      <param name="valueSerializerTypeName">Cadena de nombre de tipo calificado con el nombre de ensamblado para la clase <see cref="T:System.Windows.Markup.ValueSerializer" /> que se va a usar.</param>
    </member>
    <member name="M:System.Windows.Markup.ValueSerializerAttribute.#ctor(System.Type)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.ValueSerializerAttribute" /> usando el tipo especificado.</summary>
      <param name="valueSerializerType">Tipo que representa el tipo de la clase <see cref="T:System.Windows.Markup.ValueSerializer" />.</param>
    </member>
    <member name="P:System.Windows.Markup.ValueSerializerAttribute.ValueSerializerType">
      <summary>Obtiene el tipo de la clase <see cref="T:System.Windows.Markup.ValueSerializer" /> indicada por este atributo.</summary>
      <returns>Tipo de la propiedad <see cref="T:System.Windows.Markup.ValueSerializer" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.ValueSerializerAttribute.ValueSerializerTypeName">
      <summary>Obtiene el nombre completo de ensamblado del tipo <see cref="T:System.Windows.Markup.ValueSerializer" /> de este tipo o propiedad.</summary>
      <returns>Nombre de tipo calificado con el nombre de ensamblado.</returns>
    </member>
    <member name="T:System.Windows.Markup.WhitespaceSignificantCollectionAttribute">
      <summary>Indica que un procesador XAML debe procesar un tipo de colección como una colección con espacio en blanco significativo.</summary>
    </member>
    <member name="M:System.Windows.Markup.WhitespaceSignificantCollectionAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.WhitespaceSignificantCollectionAttribute" />.</summary>
    </member>
    <member name="T:System.Windows.Markup.XamlDeferLoadAttribute">
      <summary>Indica que una clase o propiedad usa la carga aplazada para XAML (como el comportamiento de una plantilla) e informa de la clase que habilita el comportamiento de carga aplazada así como el tipo de contenido/destino.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlDeferLoadAttribute.#ctor(System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.XamlDeferLoadAttribute" />, usando nombres de cadena de los tipos.</summary>
      <param name="loaderType">Nombre de cadena del tipo para la implementación que se va a usar para el comportamiento de carga aplazada.</param>
      <param name="contentType">Nombre de cadena del tipo de contenido/destino del comportamiento de carga aplazada.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="loaderType" /> o <paramref name="contentType" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Markup.XamlDeferLoadAttribute.#ctor(System.Type,System.Type)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.XamlDeferLoadAttribute" />, usando valores de <see cref="T:System.Type" /> de CLR.</summary>
      <param name="loaderType">Valor de <see cref="T:System.Type" /> de CLR para la implementación que se va a usar para el comportamiento de carga aplazada.</param>
      <param name="contentType">Valor de <see cref="T:System.Type" /> de CLR para el tipo de contenido/destino del comportamiento de carga aplazada.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="loaderType" /> o <paramref name="contentType" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.XamlDeferLoadAttribute.ContentType">
      <summary>Obtiene el valor de <see cref="T:System.Type" /> de CLR para el tipo de contenido/destino del comportamiento de carga aplazada.</summary>
      <returns>Valor de <see cref="T:System.Type" /> de CLR para el tipo de contenido/destino del comportamiento de carga aplazada.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlDeferLoadAttribute.ContentTypeName">
      <summary>Obtiene el nombre de cadena del tipo para la implementación que se va a usar para el comportamiento de carga aplazada.</summary>
      <returns>Nombre de cadena del tipo para el convertidor que se va a usar para el comportamiento de carga aplazada.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlDeferLoadAttribute.LoaderType">
      <summary>Obtiene el valor de <see cref="T:System.Type" /> de CLR para la implementación que se va a usar para el comportamiento de carga aplazada.</summary>
      <returns>Valor de <see cref="T:System.Type" /> de CLR para la implementación que se va a usar para el comportamiento de carga aplazada.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlDeferLoadAttribute.LoaderTypeName">
      <summary>Obtiene el nombre de cadena del tipo de contenido/destino del comportamiento de carga aplazada.</summary>
      <returns>Nombre de cadena del tipo de contenido/destino del comportamiento de carga aplazada.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetMarkupExtensionAttribute">
      <summary>Indica que una clase puede usar una extensión de marcado para proporcionar un valor y hace referencia a un controlador que se va a usar en las operaciones de establecimiento de extensión de marcado.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetMarkupExtensionAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.XamlSetMarkupExtensionAttribute" />.</summary>
      <param name="xamlSetMarkupExtensionHandler">Nombre del controlador que se va a usar en las operaciones de establecimiento de extensión de marcado.</param>
    </member>
    <member name="P:System.Windows.Markup.XamlSetMarkupExtensionAttribute.XamlSetMarkupExtensionHandler">
      <summary>Obtiene el nombre del controlador que se va a usar en las operaciones de establecimiento de extensión de marcado.</summary>
      <returns>Nombre del controlador que se va a usar en las operaciones de establecimiento de extensión de marcado.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs">
      <summary>Proporciona datos para las devoluciones de llamada que se invocan cuando un sistema de escritura de objetos XAML establece un valor usando una extensión de marcado.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetMarkupExtensionEventArgs.#ctor(System.Xaml.XamlMember,System.Windows.Markup.MarkupExtension,System.IServiceProvider)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />.</summary>
      <param name="member">Información sobre el sistema de tipos XAML y esquemas XAML para el miembro que se establece.</param>
      <param name="value">Referencia a la extensión de marcado que se va a proporcionar para el miembro que se establece.</param>
      <param name="serviceProvider">Información sobre el proveedor de servicios que se pasó a la extensión de marcado.</param>
    </member>
    <member name="M:System.Windows.Markup.XamlSetMarkupExtensionEventArgs.CallBase">
      <summary>Permite invocar una devolución de llamada definida en una clase base del actual tipo activo.</summary>
    </member>
    <member name="P:System.Windows.Markup.XamlSetMarkupExtensionEventArgs.MarkupExtension">
      <summary>Obtiene la referencia al objeto <see cref="T:System.Windows.Markup.MarkupExtension" /> que corresponde al objeto <see cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />.</summary>
      <returns>Referencia a la extensión de marcado que corresponde a este objeto <see cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetMarkupExtensionEventArgs.ServiceProvider">
      <summary>Obtiene la información sobre el proveedor de servicios que se pasó a la extensión de marcado.</summary>
      <returns>Información sobre el proveedor de servicios que se pasó a la extensión de marcado.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetTypeConverterAttribute">
      <summary>Indica que una clase puede utilizar un convertidor de tipos para proporcionar un valor y hace referencia a un controlador que se va a usar para configurar el convertidor de tipos.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetTypeConverterAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.XamlSetTypeConverterAttribute" />.</summary>
      <param name="xamlSetTypeConverterHandler">Nombre del controlador que se va a usar para configurar el convertidor de tipos.</param>
    </member>
    <member name="P:System.Windows.Markup.XamlSetTypeConverterAttribute.XamlSetTypeConverterHandler">
      <summary>Obtiene el valor de inicialización de <paramref name="xamlSetTypeConverterHandler" /> (nombre de controlador) especificado en el objeto <see cref="T:System.Windows.Markup.XamlSetTypeConverterAttribute" />.</summary>
      <returns>Valor de <paramref name="xamlSetTypeConverterHandler" /> especificado en el objeto <see cref="T:System.Windows.Markup.XamlSetTypeConverterAttribute" />.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetTypeConverterEventArgs">
      <summary>Proporciona los datos para las devoluciones de llamada que se invocan cuando un sistema de escritura de XAML establece un valor mediante una llamada del convertidor de tipos.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetTypeConverterEventArgs.#ctor(System.Xaml.XamlMember,System.ComponentModel.TypeConverter,System.Object,System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.XamlSetTypeConverterEventArgs" />.</summary>
      <param name="member">Información sobre el sistema de tipos XAML y esquemas XAML para el miembro que se establece.</param>
      <param name="typeConverter">La instancia del convertidor de tipo específico que se invoca.</param>
      <param name="value">Valor que se va a proporcionar para el miembro que se establece.</param>
      <param name="serviceProvider">Información del proveedor de servicios que puede ser utilizada por la clase <paramref name="typeConverter" />.</param>
      <param name="cultureInfo">Información de la referencia cultural que puede ser utilizada por la clase <paramref name="typeConverter" /> al llamar a <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" /> y otros métodos.</param>
    </member>
    <member name="M:System.Windows.Markup.XamlSetTypeConverterEventArgs.CallBase">
      <summary>Permite invocar una devolución de llamada definida en una clase base del actual tipo activo.</summary>
    </member>
    <member name="P:System.Windows.Markup.XamlSetTypeConverterEventArgs.CultureInfo">
      <summary>Obtiene información <see cref="T:System.Globalization.CultureInfo" /> que puede ser utilizada por la clase del convertidor de tipos al llamar a <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" /> y otros métodos.</summary>
      <returns>Información de la referencia cultural que puede ser utilizada por la clase del convertidor de tipos</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetTypeConverterEventArgs.ServiceProvider">
      <summary>Obtiene Información <see cref="T:System.IServiceProvider" /> que puede ser utilizada por la clase del convertidor de tipos.</summary>
      <returns>Información del proveedor de servicios que puede ser utilizada por la clase <paramref name="typeConverter" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetTypeConverterEventArgs.TypeConverter">
      <summary>Obtiene la instancia <see cref="T:System.ComponentModel.TypeConverter" /> que se invoca y proporciona el comportamiento de la conversión de tipos.</summary>
      <returns>Convertidor de tipos que ofrece el comportamiento de la conversión de tipos.</returns>
    </member>
    <member name="T:System.Windows.Markup.XamlSetValueEventArgs">
      <summary>Proporciona los datos de las devoluciones de llamada que se invocan cuando un objeto <see cref="T:System.Xaml.XamlObjectWriter" /> establece ciertos valores.</summary>
    </member>
    <member name="M:System.Windows.Markup.XamlSetValueEventArgs.#ctor(System.Xaml.XamlMember,System.Object)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</summary>
      <param name="member">Información sobre el sistema de tipos XAML y esquemas XAML para el miembro que se establece.</param>
      <param name="value">Valor que se va a proporcionar para el miembro.</param>
    </member>
    <member name="M:System.Windows.Markup.XamlSetValueEventArgs.CallBase">
      <summary>Cuando se invalida en una clase derivada, proporciona un mecanismo para invocar una devolución de llamada <see langword="SetValue" /> tal y como se define en una clase base del actual tipo activo.</summary>
    </member>
    <member name="P:System.Windows.Markup.XamlSetValueEventArgs.Handled">
      <summary>Obtiene o establece un valor que determina si un llamador que está usando <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" /> puede usar los valores sin tener que llamar a <see cref="M:System.Windows.Markup.XamlSetValueEventArgs.CallBase" />.</summary>
      <returns>Es <see langword="true" /> si los valores fueron útiles y no es necesario llamar a <see cref="M:System.Windows.Markup.XamlSetValueEventArgs.CallBase" />; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetValueEventArgs.Member">
      <summary>Obtiene información sobre el sistema de tipos XAML y el esquema XAML para el miembro que se va a establecer.</summary>
      <returns>Información sobre el sistema de tipos XAML y el esquema XAML para el miembro que se va a establecer.</returns>
    </member>
    <member name="P:System.Windows.Markup.XamlSetValueEventArgs.Value">
      <summary>Obtiene el valor que se va a proporcionar para el miembro que se establece.</summary>
      <returns>Valor que se va a proporcionar para el miembro que se establece.</returns>
    </member>
    <member name="T:System.Windows.Markup.XData">
      <summary>Representa datos literales que pueden aparecer como el valor de un nodo <see langword="Value" />.</summary>
    </member>
    <member name="M:System.Windows.Markup.XData.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.XData" />.</summary>
    </member>
    <member name="P:System.Windows.Markup.XData.Text">
      <summary>Obtiene o establece la cadena de valores literales que este objeto <see cref="T:System.Windows.Markup.XData" /> encapsula.</summary>
      <returns>Cadena de valores literales.</returns>
    </member>
    <member name="P:System.Windows.Markup.XData.XmlReader">
      <summary>Obtiene o establece un lector de los datos literales.</summary>
      <returns>Lector de los datos literales.</returns>
    </member>
    <member name="T:System.Windows.Markup.XmlLangPropertyAttribute">
      <summary>Identifica la propiedad que se va asociar al atributo xml:lang.</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlLangPropertyAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.XmlLangPropertyAttribute" />.</summary>
      <param name="name">Nombre de propiedad a asociar con el atributo <see langword="xml:lang" />.</param>
    </member>
    <member name="P:System.Windows.Markup.XmlLangPropertyAttribute.Name">
      <summary>Obtiene el nombre de la propiedad que se especifica en este atributo.</summary>
      <returns>Nombre de la propiedad.</returns>
    </member>
    <member name="T:System.Windows.Markup.XmlnsCompatibleWithAttribute">
      <summary>Especifica que otro espacio de nombres XAML puede subsumir un espacio de nombres XAML. Normalmente, el espacio de nombres XAML que realiza la inclusión se indica en un objeto <see cref="T:System.Windows.Markup.XmlnsDefinitionAttribute" /> definido anteriormente.</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlnsCompatibleWithAttribute.#ctor(System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.XmlnsCompatibleWithAttribute" />.</summary>
      <param name="oldNamespace">Identificador del espacio de nombres XAML de referencia.</param>
      <param name="newNamespace">Identificador del espacio de nombres XAML que subsume.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="oldNamespace" /> o <paramref name="newNamespace" /> son <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlnsCompatibleWithAttribute.NewNamespace">
      <summary>Obtiene el identificador del espacio de nombres que subsume indicado por este atributo.</summary>
      <returns>Identificador del espacio de nombres que subsume indicado en el atributo.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsCompatibleWithAttribute.OldNamespace">
      <summary>Obtiene el identificador del espacio de nombres de referencia indicado por este atributo.</summary>
      <returns>Identificador del espacio de nombres de referencia.</returns>
    </member>
    <member name="T:System.Windows.Markup.XmlnsDefinitionAttribute">
      <summary>Especifica una asignación por ensamblado entre un espacio de nombres XAML y un espacio de nombres CLR, que luego un escritor de objetos XAML o un contexto de esquema XAML usan para la resolución de tipos.</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlnsDefinitionAttribute.#ctor(System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.XmlnsDefinitionAttribute" />.</summary>
      <param name="xmlNamespace">Identificador de espacio de nombres XAML.</param>
      <param name="clrNamespace">Cadena que hace referencia a un espacio de nombres de CLR.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlNamespace" /> o <paramref name="clrNamespace" /> son <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDefinitionAttribute.AssemblyName">
      <summary>Obtiene o establece el nombre del ensamblado asociado al atributo.</summary>
      <returns>Nombre del ensamblado.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDefinitionAttribute.ClrNamespace">
      <summary>Obtiene el nombre de cadena del espacio de nombres CLR especificado en este atributo.</summary>
      <returns>Espacio de nombres CLR, especificado como una cadena.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsDefinitionAttribute.XmlNamespace">
      <summary>Obtiene el identificador del espacio de nombres XAML especificado en este atributo.</summary>
      <returns>Identificador de espacio de nombres XAML.</returns>
    </member>
    <member name="T:System.Windows.Markup.XmlnsPrefixAttribute">
      <summary>Identifica un prefijo recomendado que se va a asociar a un espacio de nombres XAML para uso de XAML al escribir elementos y atributos en un archivo XAML (serialización) o al interactuar con un entorno de diseño que tiene características de edición de XAML.</summary>
    </member>
    <member name="M:System.Windows.Markup.XmlnsPrefixAttribute.#ctor(System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.XmlnsPrefixAttribute" />.</summary>
      <param name="xmlNamespace">Identificador de espacio de nombres XAML.</param>
      <param name="prefix">Cadena de prefijo recomendado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlNamespace" /> o <paramref name="prefix" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Windows.Markup.XmlnsPrefixAttribute.Prefix">
      <summary>Obtiene el prefijo recomendado asociado a este atributo.</summary>
      <returns>Cadena de prefijo recomendado.</returns>
    </member>
    <member name="P:System.Windows.Markup.XmlnsPrefixAttribute.XmlNamespace">
      <summary>Obtiene el identificador del espacio de nombres XAML asociado a este atributo.</summary>
      <returns>Identificador de espacio de nombres XAML.</returns>
    </member>
    <member name="T:System.Xaml.AmbientPropertyValue">
      <summary>Informa sobre una propiedad de ambiente durante el proceso de implementación de <see cref="T:System.Xaml.IAmbientProvider" />.</summary>
    </member>
    <member name="M:System.Xaml.AmbientPropertyValue.#ctor(System.Xaml.XamlMember,System.Object)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.AmbientPropertyValue" />.</summary>
      <param name="property">Identificador que representa la propiedad de ambiente.</param>
      <param name="value">Valor que se va a notificar.</param>
    </member>
    <member name="P:System.Xaml.AmbientPropertyValue.RetrievedProperty">
      <summary>Obtiene el identificador del sistema de tipos XAML (<see cref="T:System.Xaml.XamlMember" />) que representa la propiedad de ambiente.</summary>
      <returns>Identificador que representa la propiedad de ambiente.</returns>
    </member>
    <member name="P:System.Xaml.AmbientPropertyValue.Value">
      <summary>Obtiene el valor de la propiedad de ambiente.</summary>
      <returns>Valor de la propiedad de ambiente.</returns>
    </member>
    <member name="T:System.Xaml.AttachableMemberIdentifier">
      <summary>Proporciona una representación de identificador del sistema de tipos de XAML para los miembros que se pueden adjuntar. La estructura de identificador sigue el formato de cadena <paramref name="declaringType" /><see langword="." /><paramref name="memberName" /> para uso de miembros que se pueden adjuntar.</summary>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.#ctor(System.Type,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</summary>
      <param name="declaringType">Componente <paramref name="declaringType" /> del identificador, que debe coincidir con el nombre de la propiedad <see cref="P:System.Xaml.XamlMember.Type" /> que realiza la declaración.</param>
      <param name="memberName">Componente <paramref name="memberName" /> del identificador, que debe coincidir con <see cref="P:System.Xaml.XamlMember.Name" />.</param>
    </member>
    <member name="P:System.Xaml.AttachableMemberIdentifier.DeclaringType">
      <summary>Obtiene o establece el valor de componente <paramref name="declaringType" /> de <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</summary>
      <returns>Valor de componente <paramref name="declaringType" /> de <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.Equals(System.Object)">
      <summary>Determina si esta instancia de <see cref="T:System.Xaml.AttachableMemberIdentifier" /> y un objeto especificado tienen el mismo valor.</summary>
      <param name="obj">Objeto que se va a comparar con el objeto <see cref="T:System.Xaml.AttachableMemberIdentifier" /> actual.</param>
      <returns>Es <see langword="true" /> si <paramref name="obj" /> es un objeto <see cref="T:System.Xaml.AttachableMemberIdentifier" /> y tiene el mismo valor que esta instancia; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.Equals(System.Xaml.AttachableMemberIdentifier)">
      <summary>Determina si esta instancia y otro objeto <see cref="T:System.Xaml.AttachableMemberIdentifier" /> especificado tienen el mismo valor.</summary>
      <param name="other">Objeto <see cref="T:System.Xaml.AttachableMemberIdentifier" /> que se va a comparar con el objeto <see cref="T:System.Xaml.AttachableMemberIdentifier" /> actual.</param>
      <returns>Es <see langword="true" /> si los objetos tienen el mismo valor; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.GetHashCode">
      <summary>Devuelve el código hash para esta estructura <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</summary>
      <returns>Código hash entero.</returns>
    </member>
    <member name="P:System.Xaml.AttachableMemberIdentifier.MemberName">
      <summary>Obtiene o establece el valor de componente <paramref name="memberName" /> de <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</summary>
      <returns>Valor de componente <paramref name="memberName" /> de <see cref="T:System.Xaml.AttachableMemberIdentifier" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.op_Equality(System.Xaml.AttachableMemberIdentifier,System.Xaml.AttachableMemberIdentifier)">
      <summary>Determina si dos objetos <see cref="T:System.Xaml.AttachableMemberIdentifier" /> especificados tienen el mismo valor.</summary>
      <param name="left">
        <see cref="T:System.Xaml.AttachableMemberIdentifier" /> o <see langword="null" />.</param>
      <param name="right">
        <see cref="T:System.Xaml.AttachableMemberIdentifier" /> o <see langword="null" />.</param>
      <returns>
        <see langword="true" /> si el valor de <paramref name="left" /> es el mismo que el valor de <paramref name="right" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.op_Inequality(System.Xaml.AttachableMemberIdentifier,System.Xaml.AttachableMemberIdentifier)">
      <summary>Determina si dos objetos <see cref="T:System.Xaml.AttachableMemberIdentifier" /> especificados tienen valores diferentes.</summary>
      <param name="left">
        <see cref="T:System.Xaml.AttachableMemberIdentifier" /> o <see langword="null" />.</param>
      <param name="right">
        <see cref="T:System.Xaml.AttachableMemberIdentifier" /> o <see langword="null" />.</param>
      <returns>Es <see langword="true" /> si el valor de <paramref name="left" /> difiere del valor de <paramref name="right" />; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachableMemberIdentifier.ToString">
      <summary>Devuelve una clase <see cref="T:System.String" /> que representa la clase <see cref="T:System.Xaml.AttachableMemberIdentifier" /> actual.</summary>
      <returns>Una clase <see cref="T:System.String" /> que representa la clase <see cref="T:System.Xaml.AttachableMemberIdentifier" /> actual.</returns>
    </member>
    <member name="T:System.Xaml.AttachablePropertyServices">
      <summary>Proporciona métodos del asistente estáticos que obtienen valores e información del método descriptor de acceso de una propiedad que se puede adjuntar y funcionan con un almacén de propiedades adjuntas.</summary>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.CopyPropertiesTo(System.Object,System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)">
      <summary>Copia a una matriz de destino todos los pares propiedad-valor que se puede adjuntar de un almacén especificado de propiedades que se pueden adjuntar.</summary>
      <param name="instance">Almacén específico de propiedades que se pueden adjuntar que implementa <see cref="T:System.Xaml.IAttachedPropertyStore" />, o cualquier objeto distinto de NULL para obtener acceso a un almacén predeterminado estático de propiedades que se pueden adjuntar.</param>
      <param name="array">Matriz de destino. La matriz es una matriz genérica, debe pasarse sin dimensionar y debe tener componentes de <see cref="T:System.Xaml.AttachableMemberIdentifier" /> y <see langword="object" />.</param>
      <param name="index">Índice de origen en el que se va a realizar la copia.</param>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.GetAttachedPropertyCount(System.Object)">
      <summary>Devuelve el recuento de las entradas de propiedades que se pueden adjuntar que se encuentran en el almacén especificado.</summary>
      <param name="instance">Almacén específico de propiedades que se pueden adjuntar que implementa <see cref="T:System.Xaml.IAttachedPropertyStore" />, o cualquier objeto distinto de NULL para obtener acceso a un almacén predeterminado estático de propiedades que se pueden adjuntar.</param>
      <returns>Recuento de enteros de las entradas del almacén.</returns>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.RemoveProperty(System.Object,System.Xaml.AttachableMemberIdentifier)">
      <summary>Quita la entrada para la propiedad que se puede asociar especificada del almacén especificado.</summary>
      <param name="instance">Almacén específico de propiedades que se pueden adjuntar que implementa <see cref="T:System.Xaml.IAttachedPropertyStore" />, o cualquier objeto distinto de NULL para obtener acceso a un almacén predeterminado estático de propiedades que se pueden adjuntar.</param>
      <param name="name">Identificador de la entrada de propiedad adjuntable que se va a quitar del almacén.</param>
      <returns>Es <see langword="true" /> si se encontró en el almacén y se quitó de él una entrada de propiedad adjuntable para <paramref name="name" />; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.SetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object)">
      <summary>Establece un valor para la propiedad que se puede asociar especificada en el almacén especificado.</summary>
      <param name="instance">Almacén específico de propiedades que se pueden adjuntar que implementa <see cref="T:System.Xaml.IAttachedPropertyStore" />, o cualquier objeto distinto de NULL para usar un almacén predeterminado estático de propiedades que se pueden adjuntar.</param>
      <param name="name">Identificador de la entrada de propiedad adjuntable para la que se establece un valor.</param>
      <param name="value">Valor que se va a establecer.</param>
      <exception cref="T:System.InvalidOperationException">No se pudo establecer un valor en el almacén.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.TryGetProperty(System.Object,System.Xaml.AttachableMemberIdentifier,System.Object@)">
      <summary>Intenta obtener un valor para la propiedad que se va a asociar indicada del almacén especificado. No produce ninguna excepción si la propiedad que se puede asociar especificada no existe en el almacén.</summary>
      <param name="instance">Almacén específico de propiedades que se pueden adjuntar que implementa <see cref="T:System.Xaml.IAttachedPropertyStore" />, o cualquier objeto distinto de NULL para usar un almacén predeterminado estático de propiedades que se pueden adjuntar.</param>
      <param name="name">Identificador de la entrada de propiedad adjuntable para la que se obtiene un valor.</param>
      <param name="value">Parámetro de salida. Cuando este método devuelve un valor, contiene el objeto de destino para el valor si <paramref name="name" /> existe en el almacén y tiene un valor.</param>
      <returns>Es <see langword="true" /> si se encontró una entrada de propiedad que se puede asociar para <paramref name="name" /> en el almacén y se envió un valor para <paramref name="value" />; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.AttachablePropertyServices.TryGetProperty``1(System.Object,System.Xaml.AttachableMemberIdentifier,``0@)">
      <summary>Intenta obtener un valor para la propiedad que se puede adjuntar especificada del almacén indicado, devolviendo un formulario de resultado genérico. No produce ninguna excepción si la propiedad que se puede asociar especificada no existe en el almacén.</summary>
      <param name="instance">Almacén específico de propiedades que se pueden adjuntar que implementa <see cref="T:System.Xaml.IAttachedPropertyStore" />, o cualquier objeto distinto de NULL para obtener acceso a un almacén predeterminado estático de propiedades que se pueden adjuntar.</param>
      <param name="name">Identificador de la entrada de propiedad adjuntable para la que se obtiene un valor.</param>
      <param name="value">Parámetro de salida. Cuando este método devuelve un valor, contiene el objeto de destino para el valor si <paramref name="name" /> existe en el almacén y tiene un valor.</param>
      <typeparam name="T">El tipo esperado de resultado.</typeparam>
      <returns>Es <see langword="true" /> si se encontró una entrada de propiedad que se puede asociar para <paramref name="name" /> en el almacén y se envió un valor para <paramref name="value" />; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xaml.IAmbientProvider">
      <summary>Representa un servicio que puede devolver elementos de información sobre propiedades de ambiente o tipos de ambiente a los convertidores de tipos y las extensiones de marcado.</summary>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Boolean,System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])">
      <summary>Devuelve un conjunto enumerable de elementos de información sobre propiedades de ambiente del conjunto de tipos y propiedades solicitado.</summary>
      <param name="ceilingTypes">Especifica uno o varios tipos que deben detener la evaluación cuando se detecta que en el gráfico de objetos llevan una trayectoria ascendente. Este tipo contiene la propiedad de ambiente deseada. Puede ser <see langword="null" />.</param>
      <param name="searchLiveStackOnly">
        <see langword="true" /> para no utilizar un contexto guardado; <see langword="false" /> para utilizar un contexto guardado. De manera predeterminada, es <see langword="false" />.</param>
      <param name="types">Especifica uno o varios objetos de tipo de identificador de propiedades que indican los tipos que se van a considerar de ambiente.</param>
      <param name="properties">Especifica uno o varios objetos de identificador de propiedades que indican las propiedades que se van a considerar de ambiente.</param>
      <returns>Conjunto enumerable de elementos de información sobre propiedades de ambiente del conjunto de tipos y propiedades solicitado. La información de propiedad de cada objeto <see cref="T:System.Xaml.AmbientPropertyValue" /> que se devuelva coincidirá con uno de los parámetros <paramref name="types" /> o <paramref name="properties" /> de entrada.</returns>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])">
      <summary>Devuelve un conjunto enumerable de elementos de información sobre propiedades de ambiente del conjunto de propiedades solicitado.</summary>
      <param name="ceilingTypes">Especifica uno o varios tipos que deben detener la evaluación cuando se detecta que en el gráfico de objetos llevan una trayectoria ascendente. Este tipo contiene la propiedad de ambiente deseada. Puede ser <see langword="null" />.</param>
      <param name="properties">Especifica uno o varios objetos de identificador de propiedades que indican las propiedades que se van a considerar de ambiente.</param>
      <returns>Conjunto enumerable de elementos de información sobre las propiedades de ambiente para el conjunto de propiedades solicitado. La información de propiedad de cada objeto <see cref="T:System.Xaml.AmbientPropertyValue" /> que se devuelva coincidirá con uno de los parámetros <paramref name="properties" /> de entrada.</returns>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Xaml.XamlType[])">
      <summary>Devuelve un conjunto enumerable de instancias de objeto de posibles tipos de ambiente de los tipos solicitados.</summary>
      <param name="types">Conjunto de tipos a partir del cual se va a recuperar la información sobre los tipos de ambiente.</param>
      <returns>Conjunto enumerable de objetos que representan los valores para el conjunto solicitado de identificadores <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])">
      <summary>Devuelve un único elemento de información sobre propiedades de ambiente del conjunto de propiedades solicitado, en función de la propiedad que se encuentre primero.</summary>
      <param name="ceilingTypes">Especifica uno o varios tipos que deben detener la evaluación cuando se detecta que en el gráfico de objetos llevan una trayectoria ascendente. Este tipo contiene la propiedad de ambiente deseada.</param>
      <param name="properties">Especifica uno o varios objetos que identifican las propiedades que se van a considerar propiedades de ambiente.</param>
      <returns>Único elemento de información sobre propiedades de ambiente del primer valor de propiedad de ambiente de la lista <paramref name="properties" /> que se encuentra.</returns>
    </member>
    <member name="M:System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Xaml.XamlType[])">
      <summary>Devuelve la primera coincidencia de un objeto que es un posible tipo de ambiente de los tipos solicitados.</summary>
      <param name="types">Conjunto de tipos a partir del cual se va a recuperar la información sobre los tipos de ambiente.</param>
      <returns>Primer objeto del conjunto solicitado que se obtiene como resultado.</returns>
    </member>
    <member name="T:System.Xaml.IAttachedPropertyStore">
      <summary>Representa un almacén de miembros que se pueden asociar de un objeto en el que se definen los miembros que se pueden asociar. Se puede hacer referencia a este almacén de miembros que se pueden asociar con <see cref="T:System.Xaml.AttachablePropertyServices" />.</summary>
    </member>
    <member name="M:System.Xaml.IAttachedPropertyStore.CopyPropertiesTo(System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)">
      <summary>Copia todos los pares de miembro y valor que se pueden adjuntar de este almacén de miembros adjuntables en una matriz de destino.</summary>
      <param name="array">Matriz de destino. La matriz es una matriz genérica, debe pasarse sin dimensionar y debe tener componentes de <see cref="T:System.Xaml.AttachableMemberIdentifier" /> y <see langword="object" />.</param>
      <param name="index">Índice de origen donde debe comenzar la operación de copia.</param>
    </member>
    <member name="P:System.Xaml.IAttachedPropertyStore.PropertyCount">
      <summary>Obtiene el recuento de las entradas de miembros que se pueden asociar de este almacén de miembros que se pueden asociar.</summary>
      <returns>Recuento de enteros de las entradas del almacén.</returns>
    </member>
    <member name="M:System.Xaml.IAttachedPropertyStore.RemoveProperty(System.Xaml.AttachableMemberIdentifier)">
      <summary>Quita la entrada del miembro que se puede asociar especificado del almacén de miembros que se pueden asociar.</summary>
      <param name="attachableMemberIdentifier">Identificador del sistema de tipos de XAML de la entrada de miembro que se puede asociar que se va a quitar.</param>
      <returns>Es <see langword="true" /> si una entrada de miembro que se puede asociar de <paramref name="attachableMemberIdentifier" /> se encuentra en el almacén y se quita; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.IAttachedPropertyStore.SetProperty(System.Xaml.AttachableMemberIdentifier,System.Object)">
      <summary>Establece un valor para el miembro que se puede asociar indicado en el almacén especificado.</summary>
      <param name="attachableMemberIdentifier">Identificador del sistema de tipos de XAML de la entrada de miembro que se puede asociar que se va a establecer.</param>
      <param name="value">Valor que se va a establecer.</param>
    </member>
    <member name="M:System.Xaml.IAttachedPropertyStore.TryGetProperty(System.Xaml.AttachableMemberIdentifier,System.Object@)">
      <summary>Intenta obtener un valor para el miembro que se puede asociar indicado del almacén especificado.</summary>
      <param name="attachableMemberIdentifier">Identificador del sistema de tipos de XAML de la entrada de miembro que se puede asociar que se va a obtener.</param>
      <param name="value">Parámetro de salida. Cuando este método devuelve un valor, contiene el objeto de destino para el valor si <paramref name="attachableMemberIdentifier" /> existe en el almacén y tiene un valor.</param>
      <returns>Es <see langword="true" /> si se encontró una entrada de miembro que se puede asociar para <paramref name="attachableMemberIdentifier" /> en el almacén y se envió un valor para <paramref name="value" />; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xaml.IDestinationTypeProvider">
      <summary>Representa un servicio que puede devolver un identificador de sistema de tipos de CLR para el tipo de destino. El tipo de destino es pertinente cuando se notifica indirectamente el tipo de destino de una operación de establecimiento de propiedad, mediante reflexión u otros mecanismos.</summary>
    </member>
    <member name="M:System.Xaml.IDestinationTypeProvider.GetDestinationType">
      <summary>Devuelve el <see cref="T:System.Type" /> de CLR que identifica el tipo de destino para el convertidor de tipos o la extensión de marcado pertinente.</summary>
      <returns>Valor de <see cref="T:System.Type" /> de CLR para el tipo de destino.</returns>
    </member>
    <member name="T:System.Xaml.INamespacePrefixLookup">
      <summary>Representa un servicio que puede devolver el prefijo recomendado para una asignación de espacio de nombres XAML a los consumidores. Los consumidores pueden incluir entornos de diseño o serializadores.</summary>
    </member>
    <member name="M:System.Xaml.INamespacePrefixLookup.LookupPrefix(System.String)">
      <summary>Devuelve el prefijo recomendado para un identificador de espacio de nombres XAML especificado.</summary>
      <param name="ns">Cadena de identificador de espacio de nombres XAML para el que se va a obtener un prefijo.</param>
      <returns>Prefijo recomendado.</returns>
    </member>
    <member name="T:System.Xaml.IRootObjectProvider">
      <summary>Describe un servicio que puede devolver el objeto raíz del marcado que se está analizando.</summary>
    </member>
    <member name="P:System.Xaml.IRootObjectProvider.RootObject">
      <summary>Obtiene el objeto raíz del marcado o de un gráfico de objetos.</summary>
      <returns>Objeto raíz.</returns>
    </member>
    <member name="T:System.Xaml.IXamlIndexingReader">
      <summary>Proporciona un servicio que representa el control de nodos indizados para una implementación simple de un lector XAML basado en nodos.</summary>
    </member>
    <member name="P:System.Xaml.IXamlIndexingReader.Count">
      <summary>Obtiene el número de nodos del actual conjunto de nodos externos.</summary>
      <returns>Número de nodos del actual conjunto de nodos externos.</returns>
    </member>
    <member name="P:System.Xaml.IXamlIndexingReader.CurrentIndex">
      <summary>Obtiene o establece el número de índice de la posición de lector actual para la vista de lista indizada de nodos XAML.</summary>
      <returns>Número de índice de la posición de lector actual.</returns>
    </member>
    <member name="T:System.Xaml.IXamlLineInfo">
      <summary>Describe un servicio para notificar la información de línea en las implementaciones de un lector XAML.</summary>
    </member>
    <member name="P:System.Xaml.IXamlLineInfo.HasLineInfo">
      <summary>Obtiene un valor que especifica si la información de línea está disponible.</summary>
      <returns>Es <see langword="true" /> si la información de línea está disponible; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.IXamlLineInfo.LineNumber">
      <summary>Obtiene el número de línea que se va a notificar.</summary>
      <returns>Número de línea que se va a notificar.</returns>
    </member>
    <member name="P:System.Xaml.IXamlLineInfo.LinePosition">
      <summary>Obtiene la posición de línea que se va a notificar.</summary>
      <returns>Posición de línea que se va a notificar.</returns>
    </member>
    <member name="T:System.Xaml.IXamlLineInfoConsumer">
      <summary>Describe un servicio donde un sistema de escritura XAML puede usar la información de línea notificada y, a continuación, incluir la información en la salida.</summary>
    </member>
    <member name="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)">
      <summary>Recopila información de línea.</summary>
      <param name="lineNumber">Número de línea que se usará en la salida.</param>
      <param name="linePosition">Posición de línea que se usará en la salida.</param>
    </member>
    <member name="P:System.Xaml.IXamlLineInfoConsumer.ShouldProvideLineInfo">
      <summary>Obtiene un valor que determina si un servicio de información de línea debe proporcionar valores y, por tanto, llamar también al método <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /> cuando proceda.</summary>
      <returns>Es <see langword="true" /> si la implementación utiliza la información de línea; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xaml.IXamlNameProvider">
      <summary>Proporciona un servicio que se emplea durante las operaciones de guardado y escritura para proporcionar como entrada un objeto y devolver un nombre XAML.</summary>
    </member>
    <member name="M:System.Xaml.IXamlNameProvider.GetName(System.Object)">
      <summary>Recupera el nombre XAML del objeto especificado.</summary>
      <param name="value">Objeto para el que se va a obtener el nombre.</param>
      <returns>Valor del nombre XAML del objeto solicitado.</returns>
    </member>
    <member name="T:System.Xaml.IXamlNameResolver">
      <summary>Describe un servicio que puede devolver objetos especificados por nombre XAML o bien devuelve un token que difiere la resolución de nombres. El servicio también puede devolver un conjunto enumerable de todos los objetos con nombre que están en el ámbito de nombres XAML.</summary>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.GetAllNamesAndValuesInScope">
      <summary>Devuelve un conjunto enumerable de todos los objetos con nombre en el ámbito de nombres XAML.</summary>
      <returns>Conjunto enumerable de objetos <see cref="T:System.Collections.Generic.KeyValuePair`2" />. En cada <see cref="T:System.Collections.Generic.KeyValuePair`2" />, el componente <see cref="P:System.Collections.Generic.KeyValuePair`2.Key" /> es una cadena y el componente <see cref="P:System.Collections.Generic.KeyValuePair`2.Value" /> es el objeto que usa el nombre de <see cref="P:System.Collections.Generic.KeyValuePair`2.Key" /> en el ámbito de nombres XAML.</returns>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String})">
      <summary>Devuelve un objeto que puede corregir determinados modelos de marcado que generan referencias adelantadas.</summary>
      <param name="names">Colección de nombres que son posibles referencias adelantadas.</param>
      <returns>Objeto que proporciona un token para el comportamiento de búsqueda que se va a evaluar más adelante.</returns>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
      <summary>Devuelve un objeto que puede corregir determinados modelos de marcado que generan referencias adelantadas.</summary>
      <param name="names">Colección de nombres que son posibles referencias adelantadas.</param>
      <param name="canAssignDirectly">Es <see langword="true" /> para asignar inmediatamente la referencia de nombre resuelta a la propiedad de destino. Es <see langword="false" /> para llamar al código de usuario y repetir el análisis. El comportamiento predeterminado es <see langword="false" />.</param>
      <returns>Objeto que proporciona un token para el comportamiento de búsqueda que se va a evaluar más adelante.</returns>
    </member>
    <member name="P:System.Xaml.IXamlNameResolver.IsFixupTokenAvailable">
      <summary>Obtiene un valor que determina si se puede llamar al método <see cref="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" /> para resolver un nombre en un token para la resolución hacia delante.</summary>
      <returns>Es <see langword="true" /> si <see cref="M:System.Xaml.IXamlNameResolver.GetFixupToken(System.Collections.Generic.IEnumerable{System.String},System.Boolean)" /> está disponible como una implementación que devuelve un token útil para la resolución hacia delante; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="E:System.Xaml.IXamlNameResolver.OnNameScopeInitializationComplete">
      <summary>Se produce cuando un procesador XAML ha registrado todos los nombres pertinentes en el ámbito de nombres XAML de respaldo.</summary>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.Resolve(System.String)">
      <summary>Resuelve un objeto de una referencia de nombre.</summary>
      <param name="name">Referencia de nombre que se va a resolver.</param>
      <returns>Objeto resuelto o null.</returns>
    </member>
    <member name="M:System.Xaml.IXamlNameResolver.Resolve(System.String,System.Boolean@)">
      <summary>Resuelve un objeto de una referencia de nombre y proporciona un valor de seguimiento que indica si el objeto se inicializa totalmente para los gráficos de objetos.</summary>
      <param name="name">Referencia de nombre que se va a resolver.</param>
      <param name="isFullyInitialized">Cuando este método devuelve un valor, es <see langword="true" /> si el objeto devuelto tiene dependencias de referencias no resueltas; de lo contrario, es <see langword="false" />.</param>
      <returns>Objeto que proporciona un token para el comportamiento de búsqueda que se va a evaluar más adelante.</returns>
    </member>
    <member name="T:System.Xaml.IXamlNamespaceResolver">
      <summary>Describe un servicio que puede devolver un espacio de nombres XAML basándose en su prefijo asignado en el marcado XAML.</summary>
    </member>
    <member name="M:System.Xaml.IXamlNamespaceResolver.GetNamespace(System.String)">
      <summary>Recupera un identificador de espacio de nombres XAML para la cadena de prefijo especificada.</summary>
      <param name="prefix">Prefijo para el cual se va a recuperar la información de espacio de nombres XAML.</param>
      <returns>Identificador del espacio de nombres de XAML solicitado, como una cadena.</returns>
    </member>
    <member name="M:System.Xaml.IXamlNamespaceResolver.GetNamespacePrefixes">
      <summary>Devuelve todas las posibles asignaciones de prefijos a espacios de nombres XAML (valores de <see cref="T:System.Xaml.NamespaceDeclaration" />) que están disponibles en el contexto de esquema XAML activo.</summary>
      <returns>Conjunto enumerable de valores de <see cref="T:System.Xaml.NamespaceDeclaration" />. Para obtener todas las cadenas de prefijo, obtenga el valor de la propiedad <see cref="P:System.Xaml.NamespaceDeclaration.Prefix" /> de cada valor del conjunto de valores devueltos. Para obtener los prefijos para determinados espacios de nombres XAML, procese todos los valores devueltos que tengan el valor de <see cref="P:System.Xaml.NamespaceDeclaration.Namespace" /> deseado.</returns>
    </member>
    <member name="T:System.Xaml.IXamlObjectWriterFactory">
      <summary>Representa un servicio que genera un objeto <see cref="T:System.Xaml.XamlObjectWriter" /> que se basa en el contexto del analizador interno actual.</summary>
    </member>
    <member name="M:System.Xaml.IXamlObjectWriterFactory.GetParentSettings">
      <summary>Devuelve el objeto <see cref="T:System.Xaml.XamlObjectWriterSettings" /> del contexto del analizador interno original.</summary>
      <returns>Configuración del contexto del analizador interno original.</returns>
    </member>
    <member name="M:System.Xaml.IXamlObjectWriterFactory.GetXamlObjectWriter(System.Xaml.XamlObjectWriterSettings)">
      <summary>Devuelve un objeto <see cref="T:System.Xaml.XamlObjectWriter" /> que se basa en el contexto de esquema XAML activo.</summary>
      <param name="settings">Configuración que se va a usar para construir e inicializar el objeto <see cref="T:System.Xaml.XamlObjectWriter" />.</param>
      <returns>
        <see cref="T:System.Xaml.XamlObjectWriter" /> que tiene la configuración especificada.</returns>
    </member>
    <member name="T:System.Xaml.IXamlSchemaContextProvider">
      <summary>Representa un servicio que proporciona información de contexto de esquema XAML a los convertidores de tipos y las extensiones de marcado.</summary>
    </member>
    <member name="P:System.Xaml.IXamlSchemaContextProvider.SchemaContext">
      <summary>Obtiene el objeto <see cref="T:System.Xaml.XamlSchemaContext" /> notificado por el contexto de servicio.</summary>
      <returns>Contexto de esquema XAML notificado por el contexto de servicio.</returns>
    </member>
    <member name="T:System.Xaml.NamespaceDeclaration">
      <summary>Declara el identificador y el prefijo de un espacio de nombres XAML almacenando estos valores de cadena como propiedades independientes.</summary>
    </member>
    <member name="M:System.Xaml.NamespaceDeclaration.#ctor(System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.NamespaceDeclaration" /> con los valores de propiedad iniciales.</summary>
      <param name="ns">Identificador del espacio de nombres XAML, como una cadena.</param>
      <param name="prefix">Prefijo de cadena que se usa para el espacio de nombres en las asignaciones de prefijo.</param>
    </member>
    <member name="P:System.Xaml.NamespaceDeclaration.Namespace">
      <summary>Obtiene el componente identificador de un objeto <see cref="T:System.Xaml.NamespaceDeclaration" />.</summary>
      <returns>Identificador de la declaración de espacio de nombres XAML.</returns>
    </member>
    <member name="P:System.Xaml.NamespaceDeclaration.Prefix">
      <summary>Obtiene el prefijo que se usa como prefijo de asignación de espacio de nombres XAML para un objeto <see cref="T:System.Xaml.NamespaceDeclaration" />.</summary>
      <returns>Cadena de prefijo para este objeto <see cref="T:System.Xaml.NamespaceDeclaration" />.</returns>
    </member>
    <member name="T:System.Xaml.Permissions.XamlAccessLevel">
      <summary>Define el control de acceso a los ensamblados y los tipos a efectos de carga de XAML.</summary>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(System.Reflection.Assembly)">
      <summary>Devuelve una instancia de <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> basada en un ensamblado solicitado por <see cref="T:System.Reflection.Assembly" />.</summary>
      <param name="assembly">Ensamblado de la solicitud.</param>
      <returns>Una instancia de <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />, con el valor de <paramref name="assembly" /> utilizado como información del origen para <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assembly" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessTo(System.Reflection.AssemblyName)">
      <summary>Devuelve una instancia de <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> basada en un ensamblado solicitado por <see cref="T:System.Reflection.AssemblyName" />.</summary>
      <param name="assemblyName">Nombre de ensamblado de la solicitud.</param>
      <returns>Una instancia de <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />, con el valor de <paramref name="assemblyName" /> utilizado como información del origen para <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El nombre de ensamblado de <paramref name="assemblyName" /> no es un nombre completo de ensamblado válido.</exception>
    </member>
    <member name="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName">
      <summary>Obtiene el objeto <see cref="T:System.Reflection.AssemblyName" /> del ensamblado para el que este objeto <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> determina los permisos.</summary>
      <returns>El objeto <see cref="T:System.Reflection.AssemblyName" /> del ensamblado para el que este objeto <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> determina los permisos.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.String)">
      <summary>Devuelve una instancia de <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> basada en un tipo concreto especificado por su nombre calificado.</summary>
      <param name="assemblyQualifiedTypeName">Una cadena que se analiza como un nombre de tipo calificado con el nombre de ensamblado.</param>
      <returns>Una instancia de <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />, con el valor de <paramref name="assemblyQualifiedTypeName" /> utilizado como información de origen para las propiedades <see cref="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName" /> y <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /> determinadas por reflexión en el tipo.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyQualifiedTypeName" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El nombre de tipo calificado con el nombre de ensamblado <paramref name="assemblyQualifiedTypeName" /> no es válido.  
O bien 
El nombre de ensamblado de <paramref name="assemblyQualifiedTypeName" /> no es un nombre de ensamblado válido.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessTo(System.Type)">
      <summary>Devuelve una instancia de <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> basada en un tipo concreto especificado por <see cref="T:System.Type" />.</summary>
      <param name="type">
        <see cref="T:System.Type" /> para el que se solicita el acceso.</param>
      <returns>Una instancia de <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />, con el valor de <paramref name="type" /> utilizado como información de origen para las propiedades <see cref="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName" /> y <see cref="P:System.Xaml.Permissions.XamlAccessLevel.AssemblyAccessToAssemblyName" /> determinadas por reflexión en el tipo.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.Permissions.XamlAccessLevel.PrivateAccessToTypeName">
      <summary>Obtiene el nombre de cadena no calificado del tipo para el que este objeto <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> determina los permisos.</summary>
      <returns>El nombre de cadena no calificado del tipo para el que este objeto <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> determina los permisos.</returns>
    </member>
    <member name="T:System.Xaml.Permissions.XamlLoadPermission">
      <summary>Declara los permisos para cargar los tipos de los ensamblados que son utilizados por un lector o sistema de escritura XAML.</summary>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Collections.Generic.IEnumerable{System.Xaml.Permissions.XamlAccessLevel})">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />, utilizando un conjunto enumerable de valores <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> concretos.</summary>
      <param name="allowedAccess">Conjunto enumerable de valores de <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> concretos.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="allowedAccess" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="allowedAccess" /> contuvieron información no válida, como un elemento nulo.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />, utilizando los permisos existentes.</summary>
      <param name="state">Valor de enumeración <see cref="T:System.Security.Permissions.PermissionState" />.</param>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Xaml.Permissions.XamlAccessLevel)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> mediante un valor <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> único.</summary>
      <param name="allowedAccess">El valor <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> que define.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="allowedAccess" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess">
      <summary>Obtiene la lista de todos los valores <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> que este <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> representa.</summary>
      <returns>Lista de solo lectura de valores <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> o <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Copy">
      <summary>Crea y devuelve una copia idéntica del objeto <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actual.</summary>
      <returns>Copia del objeto <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actual.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Equals(System.Object)">
      <param name="obj" />
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.FromXml(System.Security.SecurityElement)">
      <summary>Reconstruye un objeto de seguridad con un estado especificado a partir de codificación XML.</summary>
      <param name="elem">Codificación XML que se usará para reconstruir el objeto de seguridad.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elem" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elem" /> no contiene la codificación de XML para <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.  
O bien 
El atributo de versión dentro de <paramref name="elem" /> no se admite.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.GetHashCode" />
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Includes(System.Xaml.Permissions.XamlAccessLevel)">
      <summary>Devuelve si <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> incluye un <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> especificado en su lista <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" />.</summary>
      <param name="requestedAccess">El <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> específico que se comprueba.</param>
      <returns>
        <see langword="true" /> si <paramref name="requestedAccess" /> existe como un elemento en la lista <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" /> del <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />actual. En caso contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestedAccess" /> es null.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Intersect(System.Security.IPermission)">
      <summary>Crea y devuelve un <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> que es la intersección del permiso <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actual y el permiso especificado.</summary>
      <param name="target">
        <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> que forma una intersección con el <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actual. Puede ser <see langword="null" />.</param>
      <returns>Nuevo permiso que representa la intersección entre el objeto <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actual y el <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> especificado. Este nuevo permiso es <see langword="null" /> si la intersección está vacía.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> no es <see langword="null" /> o no es <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina si el objeto <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actual es un subconjunto del permiso especificado.</summary>
      <param name="target">Permiso que se va a probar para la relación de subconjunto. Puede ser <see langword="null" />.</param>
      <returns>
        <see langword="true" /> si el objeto <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actual es un subconjunto del permiso especificado; en caso contrario, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> no es <see langword="null" /> o no es <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted">
      <summary>Devuelve si <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> denota permisos no restringidos.</summary>
      <returns>Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> denota permisos no restringidos. Es <see langword="false" /> si <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> tiene restricciones de nivel de acceso específicas en la propiedad <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" /> o no tiene permisos.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.ToXml">
      <summary>Crea una codificación XML de <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> y de su estado actual.</summary>
      <returns>Codificación XML del <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />, incluida la información de estado.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Union(System.Security.IPermission)">
      <summary>Crea un permiso que consiste en la unión del objeto <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actual y del permiso especificado.</summary>
      <param name="other">
        <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> que se va a combinar con el <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actual. Puede ser <see langword="null" />.</param>
      <returns>Nuevo <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> que representa la unión entre el <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> actual y el <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> especificado.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" /> no es <see langword="null" /> o no es <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</exception>
    </member>
    <member name="T:System.Xaml.Schema.AllowedMemberLocations">
      <summary>Especifica las restricciones sintácticas impuestas a una propiedad cuando se establece en XAML, tal y como indica <see cref="T:System.Xaml.XamlDirective" />.</summary>
    </member>
    <member name="F:System.Xaml.Schema.AllowedMemberLocations.Any">
      <summary>La propiedad puede establecerse en la ubicación de <see cref="F:System.Xaml.Schema.AllowedMemberLocations.Attribute" /> o <see cref="F:System.Xaml.Schema.AllowedMemberLocations.MemberElement" />. (Este miembro de enumeración se define como la combinación de esos valores.)</summary>
    </member>
    <member name="F:System.Xaml.Schema.AllowedMemberLocations.Attribute">
      <summary>La propiedad puede establecerse en sintaxis de atributos XAML.</summary>
    </member>
    <member name="F:System.Xaml.Schema.AllowedMemberLocations.MemberElement">
      <summary>La propiedad puede establecerse en sintaxis de elementos de propiedad XAML.</summary>
    </member>
    <member name="F:System.Xaml.Schema.AllowedMemberLocations.None">
      <summary>No se puede establecer la propiedad en XAML. Este es el valor predeterminado.</summary>
    </member>
    <member name="T:System.Xaml.Schema.ShouldSerializeResult">
      <summary>Define el comportamiento de serialización notificado por un objeto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
    </member>
    <member name="F:System.Xaml.Schema.ShouldSerializeResult.Default">
      <summary>Se desconoce; remítase al tipo del miembro.</summary>
    </member>
    <member name="F:System.Xaml.Schema.ShouldSerializeResult.False">
      <summary>No serializar el resultado.</summary>
    </member>
    <member name="F:System.Xaml.Schema.ShouldSerializeResult.True">
      <summary>Serializar el resultado.</summary>
    </member>
    <member name="T:System.Xaml.Schema.XamlCollectionKind">
      <summary>Describe la metáfora (si existe) de colección utilizada por un miembro XAML.</summary>
    </member>
    <member name="F:System.Xaml.Schema.XamlCollectionKind.Array">
      <summary>El miembro XAML admite una colección de matrices.</summary>
    </member>
    <member name="F:System.Xaml.Schema.XamlCollectionKind.Collection">
      <summary>El miembro XAML admite una lista o una colección.</summary>
    </member>
    <member name="F:System.Xaml.Schema.XamlCollectionKind.Dictionary">
      <summary>El miembro XAML admite un diccionario (pares clave-valor).</summary>
    </member>
    <member name="F:System.Xaml.Schema.XamlCollectionKind.None">
      <summary>El miembro XAML no admite una colección.</summary>
    </member>
    <member name="T:System.Xaml.Schema.XamlMemberInvoker">
      <summary>Proporciona un punto de extensión que puede tener acceso a las características de miembro de un miembro XAML a través de técnicas distintas de la reflexión.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.#ctor(System.Xaml.XamlMember)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> basándose en la clase <see cref="T:System.Xaml.XamlMember" /> proporcionada.</summary>
      <param name="member">Valor de <see cref="T:System.Xaml.XamlMember" /> para el miembro XAML concreto relevante para este objeto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="member" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)">
      <summary>Obtiene un valor de la propiedad relevante de una instancia.</summary>
      <param name="instance">Instancia del tipo de propietario para el miembro.</param>
      <returns>El valor de propiedad solicitado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> es <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Se invoca este método en una clase <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que se basa en una clase <see cref="T:System.Xaml.XamlMember" /> desconocida.  
 -o bien-  
Se invoca este método en un miembro de solo escritura.  
 -o bien-  
 <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)">
      <summary>Establece un valor de la propiedad relevante en una instancia.</summary>
      <param name="instance">Instancia del tipo de propietario para el miembro.</param>
      <param name="value">Valor de la propiedad que se establecerá.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> es <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Se invoca este método en una clase <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que se basa en una clase <see cref="T:System.Xaml.XamlMember" /> desconocida.  
 -o bien-  
Se invoca este método en un miembro de solo lectura.  
 -o bien-  
 <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue(System.Object)">
      <summary>Indica si se debe conservar el valor mediante procesos de serialización.</summary>
      <param name="instance">Instancia con la propiedad cuya persistencia se va a examinar.</param>
      <returns>Valor de la enumeración.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter">
      <summary>Obtiene el objeto <see cref="T:System.Reflection.MethodInfo" /> para el método CLR que obtiene los valores de la propiedad que es relevante para este objeto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <returns>El objeto <see cref="T:System.Reflection.MethodInfo" /> para el método CLR que obtiene los valores de la propiedad que es relevante para este objeto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, o <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter">
      <summary>Obtiene el objeto <see cref="T:System.Reflection.MethodInfo" /> para el método CLR que establece los valores de la propiedad que es relevante para este objeto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <returns>Objeto <see cref="T:System.Reflection.MethodInfo" /> para el método CLR que establece los valores de la propiedad que es relevante para este objeto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, o <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker">
      <summary>Proporciona un valor estático que representa un objeto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> desconocido y no implementado totalmente.</summary>
      <returns>Un valor estático que representa un objeto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> desconocido y no implementado totalmente.</returns>
    </member>
    <member name="T:System.Xaml.Schema.XamlTypeInvoker">
      <summary>Proporciona un punto de la extensión que puede construir instancias de un tipo XAML a través de técnicas distintas de la reflexión y los constructores.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.#ctor(System.Xaml.XamlType)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> basándose en la clase <see cref="T:System.Xaml.XamlType" /> proporcionada.</summary>
      <param name="type">El valor de <see cref="T:System.Xaml.XamlType" /> para el tipo XAML concreto relevante para este <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.AddToCollection(System.Object,System.Object)">
      <summary>Agrega el elemento proporcionado a una instancia del tipo pertinente a esta <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</summary>
      <param name="instance">Una instancia del tipo especificado por <see cref="T:System.Xaml.XamlType" /> que se utiliza para construir este <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</param>
      <param name="item">Elemento que se va a agregar.</param>
      <exception cref="T:System.NotSupportedException">Se invoca este método en una clase <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> que se basa en una clase <see cref="T:System.Xaml.XamlType" /> desconocida.  
 -o bien-  
Se invoca este método en una clase <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> donde el tipo pertinente no es una colección.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xaml.XamlSchemaException">
        <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> para <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> devuelve <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary(System.Object,System.Object,System.Object)">
      <summary>Agrega el valor de la clave y del elemento proporcionados a una instancia del tipo que es relevante para esta <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</summary>
      <param name="instance">Una instancia del tipo especificado por <see cref="T:System.Xaml.XamlType" /> que se utiliza para construir este <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</param>
      <param name="key">Clave de diccionario para el elemento que se agrega.</param>
      <param name="item">Valor del elemento que se va a agregar.</param>
      <exception cref="T:System.NotSupportedException">Se invoca este método en una clase <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> que se basa en una clase <see cref="T:System.Xaml.XamlType" /> desconocida.  
 -o bien-  
Se invoca este método en una clase <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> donde el tipo pertinente no es un diccionario.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xaml.XamlSchemaException">
        <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> para <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> devuelve <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.CreateInstance(System.Object[])">
      <summary>Crea una instancia del objeto basada en el <see cref="T:System.Xaml.XamlType" /> iniciado por la construcción para este <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</summary>
      <param name="arguments">Una matriz de objetos que proporciona <see langword="x:ConstructorArgs" /> para la instancia. Puede ser <see langword="null" /> para los tipos que no requieren o utilizan <see langword="x:ConstructorArgs" />.</param>
      <returns>Instancia creada basada en el <see cref="T:System.Xaml.XamlType" /> iniciado por la construcción para <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</returns>
      <exception cref="T:System.MissingMethodException">No pudo resolver un constructor.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)">
      <summary>Devuelve el método <see langword="Add" /> pertinente para un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> que es pertinente para una colección o diccionario.</summary>
      <param name="contentType">
        <see cref="T:System.Xaml.XamlType" /> para el tipo de elemento que usa el método <see langword="Add" />.</param>
      <returns>Información <see cref="T:System.Reflection.MethodInfo" /> de CLR para el método <see langword="Add" />, o null.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contentType" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod">
      <summary>Devuelve un objeto que representa un método que puede enumerar los elementos.</summary>
      <returns>
        <see cref="T:System.Reflection.MethodInfo" /> para un método enumerador o <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeInvoker.GetItems(System.Object)">
      <summary>Devuelve un objeto <see cref="T:System.Collections.IEnumerator" /> que representa el conjunto de elementos.</summary>
      <param name="instance">Una instancia del tipo especificado por <see cref="T:System.Xaml.XamlType" /> que se utiliza para construir este <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</param>
      <returns>Un objeto <see cref="T:System.Collections.IEnumerator" /> o <see langword="null" />.</returns>
      <exception cref="T:System.NotSupportedException">Se invoca este método en una clase <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> que se basa en una clase <see cref="T:System.Xaml.XamlType" /> desconocida.  
 -o bien-  
Se invoca a este método en un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> donde el tipo pertinente no es una colección ni un diccionario.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler">
      <summary>Obtiene el controlador que se va a usar cuando un <see cref="T:System.Xaml.XamlObjectWriter" /> llama a una <see cref="T:System.Windows.Markup.MarkupExtension" /> implementada.</summary>
      <returns>Implementación de controlador que controla este caso.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler">
      <summary>Consigue que el controlador se utilice cuando un <see cref="T:System.Xaml.XamlObjectWriter" /> llama a un <see cref="T:System.ComponentModel.TypeConverter" /> implementado por CLR.</summary>
      <returns>Implementación de controlador que controla este caso.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker">
      <summary>Proporciona un valor estático que representa un objeto <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> desconocido y no implementado totalmente.</summary>
      <returns>Un valor estático que representa un objeto <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> desconocido y no implementado totalmente.</returns>
    </member>
    <member name="T:System.Xaml.Schema.XamlTypeName">
      <summary>Permite especificar un tipo XAML en términos de nombre y espacio de nombres.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.Schema.XamlTypeName" />.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.Schema.XamlTypeName" /> basándose en unas cadenas de nombre y espacio de nombres.</summary>
      <param name="xamlNamespace">Espacio de nombres XAML que contiene el nombre especificado por el parámetro name.</param>
      <param name="name">Nombre del tipo para el cual se va a crear un objeto <see cref="T:System.Xaml.Schema.XamlTypeName" />.</param>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Xaml.Schema.XamlTypeName})">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.Schema.XamlTypeName" />, basándose en unas cadenas de nombre y espacio de nombres así como una matriz de argumentos de tipo.</summary>
      <param name="xamlNamespace">Espacio de nombres XAML que contiene el nombre especificado por el parámetro <paramref name="name" />.</param>
      <param name="name">Nombre del tipo para el cual se va a crear un objeto <see cref="T:System.Xaml.Schema.XamlTypeName" />.</param>
      <param name="typeArguments">Matriz de argumentos de tipo, cada uno de los cuales debe ser un objeto <see cref="T:System.Xaml.Schema.XamlTypeName" />.</param>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.#ctor(System.Xaml.XamlType)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.Schema.XamlTypeName" /> basándose en un objeto <see cref="T:System.Xaml.XamlType" /> existente.</summary>
      <param name="xamlType">Un <see cref="T:System.Xaml.XamlType" /> existente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xamlType" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeName.Name">
      <summary>Obtiene el nombre que se ha usado para construir este objeto <see cref="T:System.Xaml.Schema.XamlTypeName" />.</summary>
      <returns>Nombre del tipo.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeName.Namespace">
      <summary>Obtiene el identificador de espacio de nombres XAML que se ha usado para construir este objeto <see cref="T:System.Xaml.Schema.XamlTypeName" />.</summary>
      <returns>Identificador de espacio de nombres XAML.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.Parse(System.String,System.Xaml.IXamlNamespaceResolver)">
      <summary>Proporciona un valor de <see cref="T:System.Xaml.Schema.XamlTypeName" /> basado en un nombre de tipo y un objeto que puede resolver un prefijo de marcado en un espacio de nombres.</summary>
      <param name="typeName">Nombre del tipo para el cual se va a crear un valor de <see cref="T:System.Xaml.Schema.XamlTypeName" />.</param>
      <param name="namespaceResolver">Proveedor de objetos o servicios que implementa <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</param>
      <returns>Objeto <see cref="T:System.Xaml.Schema.XamlTypeName" /> creado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeName" /> o <paramref name="namespaceResolver" /> es <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">No se puede analizar la cadena.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.ParseList(System.String,System.Xaml.IXamlNamespaceResolver)">
      <summary>Proporciona un valor de <see cref="T:System.Xaml.Schema.XamlTypeName" /> basado en una cadena que puede especificar varios nombres de tipo y un objeto que puede resolver un prefijo de marcado en un espacio de nombres.</summary>
      <param name="typeNameList">Cadena que contiene varios tipos.</param>
      <param name="namespaceResolver">Proveedor de objetos o servicios que implementa <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</param>
      <returns>Objeto <see cref="T:System.Xaml.Schema.XamlTypeName" /> creado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeNameList" /> o <paramref name="namespaceResolver" /> es <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">No se puede analizar la cadena.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.ToString">
      <summary>Convierte el valor de este objeto <see cref="T:System.Xaml.Schema.XamlTypeName" /> en su representación de cadena equivalente.</summary>
      <returns>Representación de cadena equivalente de este objeto <see cref="T:System.Xaml.Schema.XamlTypeName" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.ToString(System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName},System.Xaml.INamespacePrefixLookup)">
      <summary>Convierte el valor de este objeto <see cref="T:System.Xaml.Schema.XamlTypeName" /> en su representación de cadena equivalente, la cual se puede utilizar en la sintaxis de marcado para el uso de elementos de objetos de varios tipos.</summary>
      <param name="typeNameList">Lista de tipos.</param>
      <param name="prefixLookup">Referencia a un servicio para la búsqueda de prefijo.</param>
      <returns>Cadena concatenada de todos los resultados de tipo.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="prefixLookup" /> o <paramref name="typeNameList" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.ToString(System.Xaml.INamespacePrefixLookup)">
      <summary>Convierte el valor de este objeto <see cref="T:System.Xaml.Schema.XamlTypeName" /> en su representación de cadena equivalente, la cual se puede utilizar en la sintaxis de marcado para el uso de elementos de objetos de un tipo.</summary>
      <param name="prefixLookup">Referencia a un servicio para la búsqueda de prefijo.</param>
      <returns>Cadena de uso con prefijo.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Xaml.Schema.XamlTypeName.Namespace" /> para <see cref="T:System.Xaml.Schema.XamlTypeName" /> es <see langword="null" />.  
o bien 
 <see cref="P:System.Xaml.Schema.XamlTypeName.Name" /> no es válido.  
O bien 
No pudo buscar el prefijo.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.TryParse(System.String,System.Xaml.IXamlNamespaceResolver,System.Xaml.Schema.XamlTypeName@)">
      <summary>Proporciona un valor de <see cref="T:System.Xaml.Schema.XamlTypeName" /> basado en un nombre de tipo y un objeto que puede resolver un prefijo de marcado en un espacio de nombres.</summary>
      <param name="typeName">Nombre del tipo para el cual se va a crear un valor de <see cref="T:System.Xaml.Schema.XamlTypeName" />.</param>
      <param name="namespaceResolver">Proveedor de objetos o servicios que implementa <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</param>
      <param name="result">Parámetro Out que contiene el objeto <see cref="T:System.Xaml.Schema.XamlTypeName" /> que se ha creado si el valor devuelto es <see langword="true" />.</param>
      <returns>Es <see langword="true" /> si el análisis se realizó correctamente y <paramref name="result" /> contiene un valor útil; de lo contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeName" /> o <paramref name="namespaceResolver" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeName.TryParseList(System.String,System.Xaml.IXamlNamespaceResolver,System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}@)">
      <summary>Proporciona un valor de <see cref="T:System.Xaml.Schema.XamlTypeName" /> basado en una cadena que puede especificar varios nombres de tipo y un objeto que puede resolver un prefijo de marcado en un espacio de nombres.</summary>
      <param name="typeNameList">Cadena que contiene varios tipos.</param>
      <param name="namespaceResolver">Proveedor de objetos o servicios que implementa <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</param>
      <param name="result">Parámetro Out que contiene el objeto <see cref="T:System.Xaml.Schema.XamlTypeName" /> que se ha creado si el valor devuelto es <see langword="true" />.</param>
      <returns>Es <see langword="true" /> si el análisis se realizó correctamente y <paramref name="result" /> contiene un valor útil; de lo contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeNameList" /> o <paramref name="namespaceResolver" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.Schema.XamlTypeName.TypeArguments">
      <summary>Obtiene los argumentos de tipo que se han usado para construir este objeto <see cref="T:System.Xaml.Schema.XamlTypeName" />.</summary>
      <returns>Argumentos de tipo, si los hay. Su valor puede ser null.</returns>
    </member>
    <member name="T:System.Xaml.Schema.XamlTypeTypeConverter">
      <summary>Convierte un objeto <see cref="T:System.Xaml.XamlType" /> en una cadena que representa el nombre del tipo y viceversa. Esta funcionalidad las utilizan las definiciones de marcado para la extensibilidad XAML a través de <see cref="T:System.Windows.Markup.PropertyDefinition" />.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.Schema.XamlTypeTypeConverter" />.</summary>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determina si un objeto del tipo especificado puede convertirse en una instancia de <see cref="T:System.Xaml.XamlType" /> usando el contexto indicado.</summary>
      <param name="context">Contexto de formato que proporciona información sobre el entorno desde el que se invoca este convertidor.</param>
      <param name="sourceType">Tipo cuya conversión se evalúa.</param>
      <returns>
        <see langword="true" /> si este convertidor puede realizar la operación; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determina si una instancia de <see cref="T:System.Xaml.XamlType" /> puede convertirse en el tipo especificado usando el contexto indicado.</summary>
      <param name="context">Contexto de formato que proporciona información sobre el entorno desde el que se invoca este convertidor.</param>
      <param name="destinationType">Tipo cuya conversión se evalúa.</param>
      <returns>
        <see langword="true" /> si este convertidor puede realizar la operación; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Intenta convertir el objeto especificado en una instancia de <see cref="T:System.Xaml.XamlType" /> usando el contexto indicado.</summary>
      <param name="context">Contexto de formato que proporciona información sobre el entorno desde el que se invoca este convertidor.</param>
      <param name="culture">Información específica de la referencia cultural.</param>
      <param name="value">Objeto que se va a convertir.</param>
      <returns>El objeto convertido.</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> no se puede convertir.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlTypeTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Intenta convertir una instancia de <see cref="T:System.Xaml.XamlType" /> en el tipo especificado usando el contexto indicado.</summary>
      <param name="context">Contexto de formato que proporciona información sobre el entorno desde el que se invoca este convertidor.</param>
      <param name="culture">Información específica de la referencia cultural.</param>
      <param name="value">Objeto que se va a convertir.</param>
      <param name="destinationType">Tipo en el que se va a convertir el objeto.</param>
      <returns>El objeto convertido.</returns>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> no se puede convertir.</exception>
    </member>
    <member name="T:System.Xaml.Schema.XamlValueConverter`1">
      <summary>Proporciona una superficie de API común para las técnicas que generan valores de inicialización o serialización para XAML basándose en una entrada distinta del tipo de destino final. Esto incluye las extensiones de marcado y los convertidores de tipos.</summary>
      <typeparam name="TConverterBase">Clase base de CLR para el convertidor concreto que este objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> representa. Normalmente es uno de los siguientes: <see cref="T:System.ComponentModel.TypeConverter" />, <see cref="T:System.Windows.Markup.MarkupExtension" /> o <see cref="T:System.Windows.Markup.ValueSerializer" />.</typeparam>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, basándose en un convertidor que implementa <see cref="T:System.Type" /> y el destino/tipo de destino del objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</summary>
      <param name="converterType">
        <see cref="T:System.Type" /> que implementa el comportamiento del convertidor.</param>
      <param name="targetType">Objeto <see cref="T:System.Xaml.XamlType" /> de destino del objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</param>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, basándose en un convertidor que implementa <see cref="T:System.Type" />, el destino/tipo de destino del objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> y un nombre de cadena.</summary>
      <param name="converterType">
        <see cref="T:System.Type" /> que implementa el comportamiento del convertidor.</param>
      <param name="targetType">Objeto <see cref="T:System.Xaml.XamlType" /> de destino del objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</param>
      <param name="name">Nombre de la cadena.</param>
      <exception cref="T:System.ArgumentException">Los tres parámetros son <see langword="null" /> (por lo menos se exige que uno sea no nulo).</exception>
    </member>
    <member name="P:System.Xaml.Schema.XamlValueConverter`1.ConverterInstance">
      <summary>Obtiene una instancia creada de la implementación del convertidor.</summary>
      <returns>Una instancia creada de la implementación del convertidor o <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlValueConverter`1.ConverterType">
      <summary>Obtiene el objeto <see cref="T:System.Type" /> para la clase que implementa el comportamiento del convertidor.</summary>
      <returns>El objeto <see cref="T:System.Type" /> para la clase que implementa el comportamiento del convertidor.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.CreateInstance">
      <summary>Devuelve una instancia de la implementación del convertidor.</summary>
      <returns>Una instancia de la implementación del convertidor o <see langword="null" />.</returns>
      <exception cref="T:System.Xaml.XamlSchemaException">El convertidor no implementó el tipo base correcto.</exception>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.Equals(System.Object)">
      <summary>Determina si esta instancia de <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> y un objeto especificado, que también debe ser un objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, tienen el mismo valor.</summary>
      <param name="obj">Objeto que se va a comparar.</param>
      <returns>Es <see langword="true" /> si <paramref name="obj" /> es un objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> y tiene el mismo valor que esta instancia; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.Equals(System.Xaml.Schema.XamlValueConverter{`0})">
      <summary>Determina si esta instancia de <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> y otro objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> tienen el mismo valor.</summary>
      <param name="other">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> que se va comparar.</param>
      <returns>Es <see langword="true" /> si <paramref name="other" /> es un objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> y tiene el mismo valor que la instancia en cuestión; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.GetHashCode">
      <summary>Devuelve el código hash para esta estructura <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</summary>
      <returns>Código hash entero.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlValueConverter`1.Name">
      <summary>Obtiene un nombre de cadena para este objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</summary>
      <returns>Un nombre de cadena para este objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.op_Equality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})">
      <summary>Determina si dos objetos <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> especificados tienen el mismo valor.</summary>
      <param name="converter1">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> o <see langword="null" />.</param>
      <param name="converter2">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> o <see langword="null" />.</param>
      <returns>
        <see langword="true" /> si el valor de <paramref name="converter1" /> es el mismo que el valor de <paramref name="converter2" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.op_Inequality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})">
      <summary>Determina si dos objetos <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> especificados tienen valores diferentes.</summary>
      <param name="converter1">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> o <see langword="null" />.</param>
      <param name="converter2">
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> o <see langword="null" />.</param>
      <returns>Es <see langword="true" /> si el valor de <paramref name="converter1" /> es diferente del valor de <paramref name="converter2" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.Schema.XamlValueConverter`1.TargetType">
      <summary>Obtiene el <see cref="T:System.Xaml.XamlType" /> de destino del objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</summary>
      <returns>Objeto <see cref="T:System.Xaml.XamlType" /> de destino del objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</returns>
    </member>
    <member name="M:System.Xaml.Schema.XamlValueConverter`1.ToString">
      <summary>Devuelve un elemento <see cref="T:System.String" /> que representa este objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</summary>
      <returns>
        <see cref="T:System.String" /> que representa este <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlBackgroundReader">
      <summary>Implementa un objeto <see cref="T:System.Xaml.XamlReader" /> de doble búfer que puede dividir la lectura y la escritura en diferentes subprocesos.</summary>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.#ctor(System.Xaml.XamlReader)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlBackgroundReader" />.</summary>
      <param name="wrappedReader">Objeto <see cref="T:System.Xaml.XamlReader" /> en el que se basa este objeto <see cref="T:System.Xaml.XamlBackgroundReader" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="wrappedReader" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.Dispose(System.Boolean)">
      <summary>Libera los recursos no administrados que usa <see cref="T:System.Xaml.XamlBackgroundReader" /> y, de forma opcional, libera los recursos administrados.</summary>
      <param name="disposing">Es <see langword="true" /> para liberar los recursos administrados; de lo contrario, es <see langword="false" />.</param>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.HasLineInfo">
      <summary>Obtiene un valor que especifica si la información de línea está disponible.</summary>
      <returns>Es <see langword="true" /> si la información de línea está disponible; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.IsEof">
      <summary>Obtiene un valor que indica si el lector se encuentra al final del archivo.</summary>
      <returns>Es <see langword="true" /> si la posición se encuentra al final del archivo; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.LineNumber">
      <summary>Obtiene el número de línea que se va a notificar.</summary>
      <returns>Número de línea que se va a notificar.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.LinePosition">
      <summary>Obtiene la posición de línea que se va a notificar.</summary>
      <returns>Posición de línea que se va a notificar.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.Member">
      <summary>Obtiene el miembro actual en la posición del lector, si el lector se encuentra en <see cref="F:System.Xaml.XamlNodeType.StartMember" />.</summary>
      <returns>Miembro actual o <see langword="null" /> si la posición no se encuentra en un miembro.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.Namespace">
      <summary>Obtiene el espacio de nombres XAML del nodo actual.</summary>
      <returns>Espacio de nombres XAML, si está disponible; de lo contrario, es <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.NodeType">
      <summary>Obtiene el tipo del nodo actual.</summary>
      <returns>Valor de la enumeración <see cref="T:System.Xaml.XamlNodeType" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.Read">
      <summary>Proporciona el siguiente nodo XAML del origen si está disponible.</summary>
      <returns>Es <see langword="true" /> si hay un nodo disponible; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.SchemaContext">
      <summary>Obtiene un objeto que proporciona información sobre el contexto de esquema del conjunto de información.</summary>
      <returns>Objeto que proporciona información sobre el contexto de esquema del conjunto de información.</returns>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.StartThread">
      <summary>Crea e inicia un nuevo objeto <see cref="T:System.Threading.Thread" /> (construido a partir de <see cref="T:System.Threading.ParameterizedThreadStart" />) que controla un subproceso con nombre para el objeto <see cref="T:System.Xaml.XamlReader" />.</summary>
      <exception cref="T:System.InvalidOperationException">El subproceso ya ha comenzado.</exception>
    </member>
    <member name="M:System.Xaml.XamlBackgroundReader.StartThread(System.String)">
      <summary>Crea e inicia un nuevo objeto <see cref="T:System.Threading.Thread" /> (construido a partir de <see cref="T:System.Threading.ParameterizedThreadStart" />) que controla un subproceso con nombre para el objeto <see cref="T:System.Xaml.XamlReader" />. Especifique el nombre del subproceso como un parámetro.</summary>
      <param name="threadName">Nombre del subproceso.</param>
      <exception cref="T:System.InvalidOperationException">El subproceso ya ha comenzado.</exception>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.Type">
      <summary>Obtiene el objeto <see cref="T:System.Xaml.XamlType" /> del nodo actual.</summary>
      <returns>Objeto <see cref="T:System.Xaml.XamlType" /> del nodo actual o <see langword="null" /> si la posición actual del lector no se encuentra en un objeto.</returns>
    </member>
    <member name="P:System.Xaml.XamlBackgroundReader.Value">
      <summary>Obtiene el valor del nodo actual.</summary>
      <returns>Valor del nodo actual o <see langword="null" /> si la posición actual del lector no se encuentra en un tipo de nodo <see cref="F:System.Xaml.XamlNodeType.Value" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlDeferringLoader">
      <summary>Representa un comportamiento de lector de XAML que carga y devuelve contenido diferido.</summary>
    </member>
    <member name="M:System.Xaml.XamlDeferringLoader.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlDeferringLoader" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlDeferringLoader.Load(System.Xaml.XamlReader,System.IServiceProvider)">
      <summary>Carga contenido XAML en modo diferido, basándose en un objeto <see cref="T:System.Xaml.XamlReader" /> y determinados servicios necesarios de un proveedor de servicios.</summary>
      <param name="xamlReader">Lector de entrada que se devuelve cuando se realizan llamadas al método <see cref="M:System.Xaml.XamlDeferringLoader.Save(System.Object,System.IServiceProvider)" />.</param>
      <param name="serviceProvider">Proveedor de los servicios necesarios.</param>
      <returns>Objeto raíz producido por el <see cref="T:System.Xaml.XamlReader" /> de entrada.</returns>
    </member>
    <member name="M:System.Xaml.XamlDeferringLoader.Save(System.Object,System.IServiceProvider)">
      <summary>Confirma un valor para la carga diferida.</summary>
      <param name="value">Valor de entrada que se va a confirmar para la carga diferida.</param>
      <param name="serviceProvider">Proveedor de los servicios necesarios.</param>
      <returns>Lector XAML que se puede usar para obtener el valor diferido como información de nodo XAML.</returns>
    </member>
    <member name="T:System.Xaml.XamlDirective">
      <summary>Proporciona el identificador de sistema de tipos XAML de un miembro si el miembro es también una directiva XAML. Los lectores XAML y los sistemas de escritura XAML usan el identificador <see cref="T:System.Xaml.XamlDirective" /> durante el procesamiento de los nodos de miembro. Se usa el identificador cuando el lector XAML se coloca en <see cref="F:System.Xaml.XamlNodeType.StartMember" /> y <see cref="P:System.Xaml.XamlMember.IsDirective" /> es <see langword="true" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlDirective" />, especificando los posibles valores de <see cref="T:System.Xaml.XamlDirective" /> según cada caso.</summary>
      <param name="xamlNamespaces">Conjunto de espacios de nombres XAML donde puede existir este objeto <see cref="T:System.Xaml.XamlDirective" />, pasado como un conjunto enumerable de cadenas de identificador.</param>
      <param name="name">Nombre que identifica el objeto <see cref="T:System.Xaml.XamlDirective" />.</param>
      <param name="xamlType">Tipo XAML que respalda el objeto <see cref="T:System.Xaml.XamlDirective" />.</param>
      <param name="typeConverter">Convertidor de tipos que este objeto <see cref="T:System.Xaml.XamlDirective" /> utiliza para la conversión sintáctica de texto.</param>
      <param name="allowedLocation">Valor de la enumeración <see cref="T:System.Xaml.Schema.AllowedMemberLocations" />.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="xamlType" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlDirective.#ctor(System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlDirective" />, especificando valores para un nombre y un espacio de nombres XAML único. Use esta signatura únicamente si desea o espera notificar <see cref="P:System.Xaml.XamlMember.IsUnknown" /><see langword="true" /> para la directiva.</summary>
      <param name="xamlNamespace">Espacio de nombres XAML primario donde puede existir este objeto <see cref="T:System.Xaml.XamlDirective" />.</param>
      <param name="name">Nombre que identifica el objeto <see cref="T:System.Xaml.XamlDirective" />.</param>
    </member>
    <member name="P:System.Xaml.XamlDirective.AllowedLocation">
      <summary>Obtiene un valor que define los tipos de nodo XAML donde se puede especificar la directiva.</summary>
      <returns>Valor de la enumeración. El valor predeterminado es el valor predeterminado de la enumeración, que es <see cref="F:System.Xaml.Schema.AllowedMemberLocations.None" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.GetHashCode">
      <summary>Devuelve el código hash de este objeto.</summary>
      <returns>Código hash entero.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.GetXamlNamespaces">
      <summary>Devuelve una lista de los espacios de nombres XAML donde este miembro XAML puede existir.</summary>
      <returns>Lista de identificadores de espacio de nombres XAML, en forma de cadenas.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupCustomAttributeProvider">
      <summary>Devuelve una implementación de <see cref="T:System.Reflection.ICustomAttributeProvider" />. En esta implementación, siempre se devuelve <see langword="null" />.</summary>
      <returns>Siempre devuelve <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupDeferringLoader">
      <summary>Devuelve un objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, que se emplea durante la carga diferida de objetos declarados en XAML. En esta implementación, siempre se devuelve <see langword="null" />.</summary>
      <returns>Siempre devuelve <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupDependsOn">
      <summary>Devuelve una lista de objetos <see cref="T:System.Xaml.XamlMember" />. La lista notifica los miembros en los que existen relaciones de dependencia para el orden de inicialización con respecto a este objeto <see cref="T:System.Xaml.XamlMember" />. En esta implementación, siempre se devuelve <see langword="null" />.</summary>
      <returns>Siempre devuelve <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupInvoker">
      <summary>Devuelve el objeto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que está asociado a este objeto <see cref="T:System.Xaml.XamlDirective" />.</summary>
      <returns>Información sobre <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> para este objeto <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsAmbient">
      <summary>Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlMember" /> se considera una propiedad de ambiente.</summary>
      <returns>Siempre devuelve <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsEvent">
      <summary>Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlDirective" /> representa un evento.</summary>
      <returns>Siempre devuelve <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsReadOnly">
      <summary>Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlDirective" /> representa una propiedad de solo lectura.</summary>
      <returns>Siempre devuelve <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsReadPublic">
      <summary>Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlDirective" /> representa una propiedad que tiene un descriptor de acceso <see langword="get" /> público.</summary>
      <returns>Siempre devuelve <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsUnknown">
      <summary>Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlDirective" /> representa un miembro que no puede ser resuelto por el sistema de respaldo que se usa para la resolución de tipos y miembros.</summary>
      <returns>Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlDirective" /> representa un miembro que no se puede resolver; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsWriteOnly">
      <summary>Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlDirective" /> representa una propiedad de solo escritura.</summary>
      <returns>Siempre devuelve <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupIsWritePublic">
      <summary>Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlDirective" /> representa una propiedad que tiene un descriptor de acceso <see langword="set" /> público.</summary>
      <returns>Siempre devuelve <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupTargetType">
      <summary>Devuelve el objeto <see cref="T:System.Xaml.XamlType" /> del tipo donde <see cref="T:System.Xaml.XamlMember" /> puede existir. En esta implementación, siempre se devuelve <see langword="null" />.</summary>
      <returns>Siempre devuelve <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupType">
      <summary>Devuelve el objeto <see cref="T:System.Xaml.XamlType" /> del tipo usado por el miembro.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> del tipo usado por el miembro.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupTypeConverter">
      <summary>Devuelve una implementación de convertidor de tipos que está asociada a este objeto <see cref="T:System.Xaml.XamlDirective" />.</summary>
      <returns>Instancia de <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> que tiene una restricción <see cref="T:System.ComponentModel.TypeConverter" />, o <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupUnderlyingGetter">
      <summary>Devuelve un descriptor de acceso <see langword="get" /> que está asociado a este objeto <see cref="T:System.Xaml.XamlDirective" />. En esta implementación, siempre se devuelve <see langword="null" />.</summary>
      <returns>Siempre devuelve <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupUnderlyingMember">
      <summary>Devuelve un objeto <see cref="T:System.Reflection.MemberInfo" /> de reflexión de CLR que está asociado a este objeto <see cref="T:System.Xaml.XamlDirective" />. En esta implementación, siempre se devuelve <see langword="null" />.</summary>
      <returns>Siempre devuelve <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.LookupUnderlyingSetter">
      <summary>Devuelve un descriptor de acceso <see langword="set" /> que está asociado a este objeto <see cref="T:System.Xaml.XamlDirective" />. En esta implementación, siempre se devuelve <see langword="null" />.</summary>
      <returns>Siempre devuelve <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlDirective.ToString">
      <summary>Devuelve una representación de cadena de este objeto <see cref="T:System.Xaml.XamlDirective" />.</summary>
      <returns>Representación de cadena de este objeto <see cref="T:System.Xaml.XamlDirective" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlDuplicateMemberException">
      <summary>Excepción que se inicia cuando un escritor XAML intenta escribir un valor de un miembro duplicado en el mismo nodo de objeto.</summary>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlDuplicateMemberException" /> con un mensaje proporcionado por el sistema que describe el error.</summary>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlDuplicateMemberException" /> con datos serializados.</summary>
      <param name="info">Objeto que contiene los datos del objeto serializados.</param>
      <param name="context">Información contextual acerca del origen o del destino.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlDuplicateMemberException" /> con un mensaje especificado que describe el error.</summary>
      <param name="message">Mensaje que describe la excepción. El autor de llamada de este constructor debe asegurarse de que la cadena se haya adaptado para la referencia cultural actual del sistema.</param>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlDuplicateMemberException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</summary>
      <param name="message">Mensaje que describe la excepción. El autor de llamada de este constructor debe asegurarse de que la cadena se haya adaptado para la referencia cultural actual del sistema.</param>
      <param name="innerException">Excepción que es la causa de la excepción actual. Si el parámetro <paramref name="innerException" /> no es <see langword="null" />, la excepción actual se produce en un bloque <see langword="catch" /> que controla la excepción interna.</param>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.#ctor(System.Xaml.XamlMember,System.Xaml.XamlType)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlDuplicateMemberException" /> con la información pertinente sobre el miembro y el tipo que se va a notificar.</summary>
      <param name="member">Identificador de miembro XAML que se va a notificar.</param>
      <param name="type">Identificador de tipo XAML que se va a notificar como tipo primario.</param>
    </member>
    <member name="P:System.Xaml.XamlDuplicateMemberException.DuplicateMember">
      <summary>Obtiene o establece el identificador de miembro XAML para que la propiedad lo notifique como duplicado.</summary>
      <returns>Objeto <see cref="T:System.Xaml.XamlMember" /> (identificador de miembro XAML) que se va a notificar.</returns>
    </member>
    <member name="M:System.Xaml.XamlDuplicateMemberException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlDuplicateMemberException" /> con datos serializados.</summary>
      <param name="info">Objeto que contiene los datos del objeto serializados.</param>
      <param name="context">Información contextual acerca del origen o del destino.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlDuplicateMemberException.ParentType">
      <summary>Obtiene o establece el identificador de tipo XAML que se va a notificar como tipo primario.</summary>
      <returns>Objeto <see cref="T:System.Xaml.XamlType" /> (identificador de tipo XAML) que se va a notificar como tipo primario.</returns>
    </member>
    <member name="T:System.Xaml.XamlException">
      <summary>Representa una excepción general del lector XAML o sistema de escritura XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlException" />. La instancia contiene un mensaje proporcionado por el sistema que describe el error.</summary>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlException" /> con datos serializados.</summary>
      <param name="info">Objeto que contiene los datos del objeto serializados.</param>
      <param name="context">Información contextual acerca del origen o del destino.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlException" />. La instancia contiene un mensaje especificado que describe el error.</summary>
      <param name="message">Mensaje que describe la excepción. El llamador de este constructor debe asegurarse de que la cadena se ha traducido para la referencia cultural actual del sistema.</param>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlException" />. La instancia contiene un mensaje de error especificado y una referencia a la excepción interna que es la causa de esta excepción.</summary>
      <param name="message">Mensaje que describe la excepción. El llamador de este constructor debe asegurarse de que la cadena se ha traducido para la referencia cultural actual del sistema.</param>
      <param name="innerException">Excepción que es la causa de la excepción actual. Si el parámetro <paramref name="innerException" /> no es <see langword="null" />, la excepción actual se produce en un bloque <see langword="catch" /> que controla la excepción interna.</param>
    </member>
    <member name="M:System.Xaml.XamlException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlException" />. La instancia contiene un mensaje de error especificado, excepción interna e información de línea.</summary>
      <param name="message">Mensaje que describe la excepción. El llamador de este constructor debe asegurarse de que la cadena se ha traducido para la referencia cultural actual del sistema.</param>
      <param name="innerException">Excepción que es la causa de la excepción actual.</param>
      <param name="lineNumber">Número de línea que se va a notificar a los consumidores de la información de depuración o de línea.</param>
      <param name="linePosition">Posición de línea que se va a notificar a los consumidores de la información de depuración o de línea.</param>
    </member>
    <member name="M:System.Xaml.XamlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Implementa <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> y proporciona compatibilidad con la serialización de los datos de la información de línea.</summary>
      <param name="info">Objeto que contiene los datos del objeto serializados.</param>
      <param name="context">Información contextual acerca del origen o del destino.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlException.LineNumber">
      <summary>Obtiene o establece el componente correspondiente al número de línea en la información de línea de texto XAML que la excepción notifica.</summary>
      <returns>Componente correspondiente al número de línea en la información de línea de texto XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlException.LinePosition">
      <summary>Obtiene o establece el componente correspondiente a la posición de línea en la información de línea de texto XAML que la excepción notifica.</summary>
      <returns>Componente correspondiente a la posición de línea en la información de línea de texto XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlException.Message">
      <summary>Obtiene o establece el mensaje de la excepción y, si se dispone de información de línea, anexa dicha información al mensaje.</summary>
      <returns>Mensaje de excepción que incluye la información de línea anexada.</returns>
    </member>
    <member name="T:System.Xaml.XamlInternalException">
      <summary>Excepción que se inicia si se producen incoherencias internas durante la lectura y la escritura de XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlInternalException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlInternalException" /> con un mensaje proporcionado por el sistema que describe el error.</summary>
    </member>
    <member name="M:System.Xaml.XamlInternalException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlInternalException" /> con datos serializados.</summary>
      <param name="info">Objeto que contiene los datos del objeto serializados.</param>
      <param name="context">Información contextual acerca del origen o del destino.</param>
    </member>
    <member name="M:System.Xaml.XamlInternalException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlInternalException" /> con un mensaje especificado que describe el error.</summary>
      <param name="message">Mensaje que describe la excepción.</param>
    </member>
    <member name="M:System.Xaml.XamlInternalException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlInternalException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</summary>
      <param name="message">Mensaje que describe la excepción.</param>
      <param name="innerException">Excepción que es la causa de la excepción actual. Si el parámetro <paramref name="innerException" /> no es <see langword="null" />, la excepción actual se produce en un bloque <see langword="catch" /> que controla la excepción interna.</param>
    </member>
    <member name="T:System.Xaml.XamlLanguage">
      <summary>Define constantes que proporcionan cadenas u objetos que son útiles para el marcado XAML o para la programación con tipos XAML. Estas cadenas u objetos atañen a los conceptos del lenguaje XAML, a la implementación de conceptos del lenguaje XAML en los servicios XAML de .NET Framework o a ambos.</summary>
    </member>
    <member name="P:System.Xaml.XamlLanguage.AllDirectives">
      <summary>Obtiene una colección genérica de solo lectura de cada identificador <see cref="T:System.Xaml.XamlDirective" /> definido por los servicios XAML de .NET Framework.</summary>
      <returns>Colección genérica de solo lectura de cada identificador <see cref="T:System.Xaml.XamlDirective" /> definido por los servicios XAML de .NET Framework.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.AllTypes">
      <summary>Obtiene una colección genérica de solo lectura de valores <see cref="T:System.Xaml.XamlType" /> individuales que coinciden con (o representan) un elemento intrínseco del lenguaje XAML definido por los servicios XAML de .NET Framework.</summary>
      <returns>Colección genérica de solo lectura de cada <see cref="T:System.Xaml.XamlType" /> que coincide con un elemento intrínseco del lenguaje XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Arguments">
      <summary>Obtiene <see cref="T:System.Xaml.XamlDirective" /> para los <see langword="Arguments" /> de un método de generador o un uso genérico.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlDirective" /> para <see langword="Arguments" /> de un método de generador o uso genérico.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Array">
      <summary>Obtiene <see cref="T:System.Xaml.XamlType" /> para el elemento intrínseco del lenguaje XAML <see langword="Array" />.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> para el elemento intrínseco del lenguaje XAML <see langword="Array" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.AsyncRecords">
      <summary>Obtiene una clase <see cref="T:System.Xaml.XamlDirective" /> para el pseudomiembro <see langword="AsyncRecords" />.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlDirective" /> para el pseudomiembro <see langword="AsyncRecords" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Base">
      <summary>Obtiene <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="base" /> de XML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="base" /> de XML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Boolean">
      <summary>Obtiene <see cref="T:System.Xaml.XamlType" /> para el elemento intrínseco del lenguaje XAML <see langword="Boolean" />.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> para el elemento intrínseco del lenguaje XAML <see langword="Boolean" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Byte">
      <summary>Obtiene <see cref="T:System.Xaml.XamlType" /> para el elemento intrínseco del lenguaje XAML <see langword="Byte" />.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> para el elemento intrínseco del lenguaje XAML <see langword="Byte" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Char">
      <summary>Obtiene <see cref="T:System.Xaml.XamlType" /> para el elemento intrínseco del lenguaje XAML <see langword="Char" />.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> para el elemento intrínseco del lenguaje XAML <see langword="Char" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Class">
      <summary>Obtiene una <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="Class" /> de XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="Class" /> de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.ClassAttributes">
      <summary>Obtiene una <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="ClassAttributes" /> de XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="ClassAttributes" /> de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.ClassModifier">
      <summary>Obtiene una <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="ClassModifier" /> de XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="ClassModifier" /> de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Code">
      <summary>Obtiene <see cref="T:System.Xaml.XamlDirective" /> para <see langword="Code" /> tal y como se detalla en [MS-XAML].</summary>
      <returns>
        <see cref="T:System.Xaml.XamlDirective" /> para <see langword="Code" />, tal y como se detalla en [MS-XAML].</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.ConnectionId">
      <summary>Obtiene un objeto <see cref="T:System.Xaml.XamlDirective" /> que identifica el punto de conexión entre eventos y controladores.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlDirective" /> que identifica un punto de conexión para cablear los eventos a los controladores.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Decimal">
      <summary>Obtiene <see cref="T:System.Xaml.XamlType" /> para el elemento intrínseco del lenguaje XAML <see langword="Decimal" />.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> para el elemento intrínseco del lenguaje XAML <see langword="Decimal" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Double">
      <summary>Obtiene <see cref="T:System.Xaml.XamlType" /> para el elemento intrínseco del lenguaje XAML <see langword="Double" />.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> para el elemento intrínseco del lenguaje XAML <see langword="Double" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.FactoryMethod">
      <summary>Obtiene un <see cref="T:System.Xaml.XamlDirective" /> que identifica un método generador para XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlDirective" /> que identifica un método generador para XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.FieldModifier">
      <summary>Obtiene una <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="FieldModifier" /> de XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="FieldModifier" /> de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Initialization">
      <summary>Obtiene una <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="Initialization" /> de XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="Initialization" /> de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Int16">
      <summary>Obtiene <see cref="T:System.Xaml.XamlType" /> para el elemento intrínseco del lenguaje XAML <see langword="Int16" />.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> para el elemento intrínseco del lenguaje XAML <see langword="Int16" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Int32">
      <summary>Obtiene <see cref="T:System.Xaml.XamlType" /> para el elemento intrínseco del lenguaje XAML <see langword="Int32" />.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> para el elemento intrínseco del lenguaje XAML <see langword="Int32" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Int64">
      <summary>Obtiene <see cref="T:System.Xaml.XamlType" /> para el elemento intrínseco del lenguaje XAML <see langword="Int64" />.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> para el elemento intrínseco del lenguaje XAML <see langword="Int64" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Items">
      <summary>Obtiene una <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="Items" /> de XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="Items" /> de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Key">
      <summary>Obtiene una <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="Key" /> de XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="Key" /> de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Lang">
      <summary>Obtiene <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="lang" /> de XML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="lang" /> de XML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Member">
      <summary>Obtiene <see cref="T:System.Xaml.XamlType" /> para el tipo que constituye el tipo de elemento de <see cref="P:System.Xaml.XamlLanguage.Members" />.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> para el tipo que constituye el tipo de elemento de <see cref="P:System.Xaml.XamlLanguage.Members" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Members">
      <summary>Obtiene <see cref="T:System.Xaml.XamlDirective" /> para el concepto <see langword="Members" /> en XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlDirective" /> para el concepto <see langword="Members" /> en XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Name">
      <summary>Obtiene una <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="Name" /> de XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="Name" /> de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Null">
      <summary>Obtiene el objeto <see cref="T:System.Xaml.XamlType" /> que corresponde al elemento intrínseco del lenguaje XAML <see langword="Null" /> o <see langword="NullExtension" />.</summary>
      <returns>Para el intrínseco <see langword="Null" /> del / lenguajeXAML<see langword="NullExtension" /> . <see cref="T:System.Xaml.XamlType" /></returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Object">
      <summary>Obtiene <see cref="T:System.Xaml.XamlType" /> para el concepto del lenguaje XAML <see langword="Object" />.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> para el concepto de lenguaje XAML <see langword="Object" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.PositionalParameters">
      <summary>Obtiene una <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="PositionalParameters" /> de XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="PositionalParameters" /> de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Property">
      <summary>Obtiene <see cref="T:System.Xaml.XamlType" /> para el concepto <see langword="Property" /> en XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> para el concepto <see langword="Property" /> en XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Reference">
      <summary>Obtiene un objeto <see cref="T:System.Xaml.XamlType" /> que representa a <see langword="Reference" /> en XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> que representa a <see langword="Reference" /> en XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Shared">
      <summary>Obtiene un objeto <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="Shared" /> de XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="Shared" /> de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Single">
      <summary>Obtiene <see cref="T:System.Xaml.XamlType" /> para el elemento intrínseco del lenguaje XAML <see langword="Single" />.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> para el elemento intrínseco del lenguaje XAML <see langword="Single" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Space">
      <summary>Obtiene <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="space" /> de XML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="space" /> de XML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Static">
      <summary>Obtiene <see cref="T:System.Xaml.XamlType" /> para el lenguaje XAML <see langword="Static" />/<see langword="StaticExtension" /> intrínseco.</summary>
      <returns>Para el intrínseco <see langword="Static" /> del / lenguajeXAML<see langword="StaticExtension" /> . <see cref="T:System.Xaml.XamlType" /></returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.String">
      <summary>Obtiene <see cref="T:System.Xaml.XamlType" /> para el elemento intrínseco del lenguaje XAML <see langword="String" />.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> para el elemento intrínseco del lenguaje XAML <see langword="String" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Subclass">
      <summary>Obtiene una <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="Subclass" /> de XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="Subclass" /> de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.SynchronousMode">
      <summary>Obtiene <see cref="T:System.Xaml.XamlDirective" /> que permite la carga de forma asincrónica de XAML si el procesador de XAML admite este tipo de modo.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlDirective" /> que permite la carga de forma asincrónica de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.TimeSpan">
      <summary>Obtiene <see cref="T:System.Xaml.XamlType" /> para el concepto <see langword="TimeSpan" /> del lenguaje XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> para el concepto de lenguaje XAML <see langword="TimeSpan" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Type">
      <summary>Obtiene <see cref="T:System.Xaml.XamlType" /> para el lenguaje XAML <see langword="Type" />/<see langword="TypeExtension" /> intrínseco.</summary>
      <returns>Para el intrínseco <see langword="Type" /> del / lenguajeXAML<see langword="TypeExtension" /> . <see cref="T:System.Xaml.XamlType" /></returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.TypeArguments">
      <summary>Obtiene una <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="TypeArguments" /> de XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="TypeArguments" /> de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Uid">
      <summary>Obtiene una <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="Uid" /> de XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="Uid" /> de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.UnknownContent">
      <summary>Obtiene una <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="UnknownContent" /> de XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlDirective" /> para la directiva <see langword="UnknownContent" /> de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.Uri">
      <summary>Obtiene <see cref="T:System.Xaml.XamlType" /> para el concepto del lenguaje XAML <see langword="Uri" />.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> para el concepto de lenguaje XAML <see langword="Uri" />.</returns>
    </member>
    <member name="F:System.Xaml.XamlLanguage.Xaml2006Namespace">
      <summary>Obtiene un valor de cadena para la cadena que identifica el espacio de nombres del lenguaje XAML (2006). Ese espacio de nombres corresponde al espacio de nombres con prefijo "x" de XAML (2006) tal y como se define en [MS-XAML] sección 5.1.1.</summary>
    </member>
    <member name="P:System.Xaml.XamlLanguage.XamlNamespaces">
      <summary>Obtiene una colección de los identificadores de espacio de nombres para XAML.</summary>
      <returns>Colección de los identificadores de espacio de nombres para XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlLanguage.XData">
      <summary>Obtiene <see cref="T:System.Xaml.XamlType" /> para el tipo XAML que respalda un bloque <see langword="XData" /> en XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> para el tipo XAML que respalda un bloque <see langword="XData" />. Vea la sección de [ms-XAML] 5.2.23.</returns>
    </member>
    <member name="F:System.Xaml.XamlLanguage.Xml1998Namespace">
      <summary>Obtiene un valor de cadena para la cadena que identifica el espacio de nombres del lenguaje XML (1998). Ese espacio de nombres corresponde al espacio de nombres con prefijo "xml" de XML según se hace referencia en [MS-XAML] sección 5.1.2.</summary>
    </member>
    <member name="P:System.Xaml.XamlLanguage.XmlNamespaces">
      <summary>Obtiene una colección de identificadores de espacio de nombres para XML.</summary>
      <returns>Colección de los identificadores de espacio de nombres para XML.</returns>
    </member>
    <member name="T:System.Xaml.XamlMember">
      <summary>Proporciona el identificador del sistema de tipos XAML para miembros de tipos XAML. Los lectores XAML y los sistemas de escritura XAML usan el identificador al procesar los nodos de miembro (cuando el lector XAML está en un miembro <see cref="F:System.Xaml.XamlNodeType.StartMember" />) y también para la lógica general del sistema de tipos de XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlMember" /> usando <see cref="T:System.Reflection.EventInfo" /> del sistema de tipos de CLR y un <see cref="T:System.Xaml.XamlSchemaContext" />.</summary>
      <param name="eventInfo">
        <see cref="T:System.Reflection.EventInfo" /> del sistema de tipos de CLR que representa el miembro de evento.</param>
      <param name="schemaContext">Contexto <see cref="T:System.Xaml.XamlSchemaContext" /> que califica el miembro.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlMember" /> usando <see cref="T:System.Reflection.EventInfo" /> del sistema de tipos de CLR y un <see cref="T:System.Xaml.XamlSchemaContext" />, incluyendo información de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <param name="eventInfo">
        <see cref="T:System.Reflection.EventInfo" /> del sistema de tipos de CLR que representa el miembro de evento.</param>
      <param name="schemaContext">Contexto <see cref="T:System.Xaml.XamlSchemaContext" /> que califica el miembro.</param>
      <param name="invoker">Implementación de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que administra las llamadas de reflexión en tiempo de ejecución al objeto <see cref="T:System.Xaml.XamlMember" />.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlMember" /> usando <see cref="T:System.Reflection.PropertyInfo" /> del sistema de tipos de CLR y un <see cref="T:System.Xaml.XamlSchemaContext" />.</summary>
      <param name="propertyInfo">
        <see cref="T:System.Reflection.PropertyInfo" /> del sistema de tipos de CLR que representa el miembro de propiedad.</param>
      <param name="schemaContext">Contexto <see cref="T:System.Xaml.XamlSchemaContext" /> que califica el miembro.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlMember" /> usando <see cref="T:System.Reflection.PropertyInfo" /> de reflexión y un <see cref="T:System.Xaml.XamlSchemaContext" />, incluyendo información de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <param name="propertyInfo">
        <see cref="T:System.Reflection.PropertyInfo" /> del sistema de tipos de CLR que representa el miembro de propiedad.</param>
      <param name="schemaContext">Contexto <see cref="T:System.Xaml.XamlSchemaContext" /> que califica el miembro.</param>
      <param name="invoker">Implementación de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que controla las llamadas de invocación en tiempo de ejecución al objeto <see cref="T:System.Xaml.XamlMember" />.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlMember" /> para un <see cref="T:System.Xaml.XamlMember" /> que representa una propiedad que se puede adjuntar.</summary>
      <param name="attachablePropertyName">El nombre de cadena de la propiedad que se puede asociar.</param>
      <param name="getter">
        <see cref="T:System.Reflection.MethodInfo" /> del sistema de tipos de CLR para el descriptor de acceso <see langword="get" /> de la implementación de respaldo del miembro que se puede adjuntar.</param>
      <param name="setter">
        <see cref="T:System.Reflection.MethodInfo" /> del sistema de tipos de CLR para el descriptor de acceso <see langword="set" /> de la implementación de respaldo del miembro que se puede adjuntar.</param>
      <param name="schemaContext">Contexto <see cref="T:System.Xaml.XamlSchemaContext" /> que califica el miembro.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlMember" /> para un <see cref="T:System.Xaml.XamlMember" /> que representa una propiedad que se puede adjuntar, incluyendo información de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <param name="attachablePropertyName">El nombre de cadena de la propiedad que se puede asociar.</param>
      <param name="getter">
        <see cref="T:System.Reflection.MethodInfo" /> del sistema de tipos de CLR para el descriptor de acceso <see langword="get" /> de la implementación de respaldo del miembro que se puede adjuntar.</param>
      <param name="setter">
        <see cref="T:System.Reflection.MethodInfo" /> del sistema de tipos de CLR para el descriptor de acceso <see langword="set" /> de la implementación de respaldo del miembro que se puede adjuntar.</param>
      <param name="schemaContext">Contexto <see cref="T:System.Xaml.XamlSchemaContext" /> que califica el miembro.</param>
      <param name="invoker">Implementación de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que controla las llamadas de invocación en tiempo de ejecución al objeto <see cref="T:System.Xaml.XamlMember" />.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlMember" /> para un <see cref="T:System.Xaml.XamlMember" /> que representa un evento que se puede adjuntar.</summary>
      <param name="attachableEventName">El nombre de cadena del evento que se puede asociar.</param>
      <param name="adder">
        <see cref="T:System.Reflection.MethodInfo" /> del sistema de tipos de CLR para el método <see langword="Add" /> del controlador de la implementación de respaldo del miembro que se puede adjuntar.</param>
      <param name="schemaContext">Contexto <see cref="T:System.Xaml.XamlSchemaContext" /> que califica el miembro.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlMember" /> para un <see cref="T:System.Xaml.XamlMember" /> que representa un evento que se puede adjuntar, incluyendo información de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      <param name="attachableEventName">El nombre de cadena del evento que se puede asociar.</param>
      <param name="adder">
        <see cref="T:System.Reflection.MethodInfo" /> del sistema de tipos de CLR para el método <see langword="Add" /> del controlador de la implementación de respaldo del miembro que se puede adjuntar.</param>
      <param name="schemaContext">Contexto <see cref="T:System.Xaml.XamlSchemaContext" /> que califica el miembro.</param>
      <param name="invoker">Implementación de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que controla las llamadas de invocación en tiempo de ejecución al objeto <see cref="T:System.Xaml.XamlMember" />.</param>
    </member>
    <member name="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlMember" /> usando un nombre de cadena y declarando información de <see cref="T:System.Xaml.XamlType" />. Un <see cref="T:System.Xaml.XamlMember" /> que se construye con esta firma tiene limitaciones importantes.</summary>
      <param name="name">El nombre de cadena del miembro.</param>
      <param name="declaringType">Información de <see cref="T:System.Xaml.XamlType" /> para el tipo declarativo.</param>
      <param name="isAttachable">Es <see langword="true" /> para indicar que el miembro se puede adjuntar; de lo contrario, es <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> o <paramref name="declaringType" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlMember.DeclaringType">
      <summary>Obtiene el <see cref="T:System.Xaml.XamlType" /> para el tipo que declara el miembro asociado a este <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> para el tipo que declara el miembro asociado a este <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.DeferringLoader">
      <summary>Obtiene un objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, que se usa para la carga diferida de objetos declarados en XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con la restricción <see cref="T:System.Xaml.XamlDeferringLoader" /> en el tipo genérico.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.DependsOn">
      <summary>Obtiene una lista de objetos <see cref="T:System.Xaml.XamlMember" />. Indican los miembros donde existen relaciones de dependencia para el orden de inicialización con respecto a este <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>Una lista de objetos <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.Equals(System.Object)">
      <summary>Indica si el objeto actual es igual que otro objeto.</summary>
      <param name="obj">Objeto que se va a comparar con este objeto.</param>
      <returns>
        <see langword="true" /> si el objeto actual es igual al parámetro <paramref name="obj" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)">
      <summary>Indica si el objeto actual es igual a otro objeto del mismo tipo.</summary>
      <param name="other">Objeto que se va a comparar con este objeto.</param>
      <returns>
        <see langword="true" /> si el objeto actual es igual al parámetro <paramref name="other" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.GetHashCode">
      <summary>Devuelve el código hash de este objeto.</summary>
      <returns>Código hash entero.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.GetXamlNamespaces">
      <summary>Devuelve una lista de los espacios de nombres XAML donde este miembro XAML puede existir.</summary>
      <returns>Lista de identificadores de espacio de nombres XAML, en forma de cadenas.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.Invoker">
      <summary>Obtiene la implementación de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que está asociada a este objeto <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>Implementación de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que está asociada a este objeto <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsAmbient">
      <summary>Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlMember" /> se notifica como una propiedad de ambiente.</summary>
      <returns>Es <see langword="true" /> si este <see cref="T:System.Xaml.XamlMember" /> se notifica como propiedad de ambiente; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsAttachable">
      <summary>Obtiene un valor que indica si este <see cref="T:System.Xaml.XamlMember" /> es un miembro que se puede adjuntar.</summary>
      <returns>Es <see langword="true" /> si este <see cref="T:System.Xaml.XamlMember" /> es un miembro que se puede adjuntar; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsDirective">
      <summary>Obtiene un valor que indica si este <see cref="T:System.Xaml.XamlMember" /> es una directiva XAML.</summary>
      <returns>Es <see langword="true" /> si <see cref="T:System.Xaml.XamlMember" /> es una directiva XAML; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsEvent">
      <summary>Obtiene un valor que indica si este <see cref="T:System.Xaml.XamlMember" /> representa un miembro de evento.</summary>
      <returns>Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlMember" /> representa un evento; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsNameValid">
      <summary>Obtiene un valor que indica si este <see cref="T:System.Xaml.XamlMember" /> se inicializa con una cadena <see langword="xamlName" /> válida como valor de su propiedad <see cref="P:System.Xaml.XamlMember.Name" />.</summary>
      <returns>Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlMember" /> se inicializa con una cadena <see langword="xamlName" /> válida; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsReadOnly">
      <summary>Obtiene un valor que indica si <see cref="T:System.Xaml.XamlMember" /> representa un miembro de solo lectura.</summary>
      <returns>Es <see langword="true" /> si este <see cref="T:System.Xaml.XamlMember" /> representa un miembro de solo lectura; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsReadPublic">
      <summary>Obtiene un valor que indica si este <see cref="T:System.Xaml.XamlMember" /> representa un miembro con un descriptor de acceso <see langword="get" /> público invocable.</summary>
      <returns>Es <see langword="true" /> si este <see cref="T:System.Xaml.XamlMember" /> representa un descriptor de acceso <see langword="get" /> público invocable; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsUnknown">
      <summary>Obtiene un valor que indica si el sistema de respaldo usado para la resolución de tipos y de miembros no puede resolver el miembro.</summary>
      <returns>Es <see langword="true" /> si el miembro no se puede resolver y <see langword="false" /> si el miembro se puede resolver.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsWriteOnly">
      <summary>Obtiene un valor que indica si <see cref="T:System.Xaml.XamlMember" /> representa un miembro de solo escritura.</summary>
      <returns>Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlMember" /> representa un miembro de solo escritura; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.IsWritePublic">
      <summary>Obtiene un valor que indica si este <see cref="T:System.Xaml.XamlMember" /> representa un miembro que tiene un descriptor de acceso <see langword="set" /> público invocable.</summary>
      <returns>Es <see langword="true" /> si este <see cref="T:System.Xaml.XamlMember" /> representa un descriptor de acceso <see langword="set" /> público invocable; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupCustomAttributeProvider">
      <summary>Cuando se implementa en una clase derivada, devuelve una implementación de <see cref="T:System.Reflection.ICustomAttributeProvider" />.</summary>
      <returns>Implementación de <see cref="T:System.Reflection.ICustomAttributeProvider" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupDeferringLoader">
      <summary>Devuelve un objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, que se emplea para la carga diferida de objetos declarados en XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> que tiene una restricción <see cref="T:System.Xaml.XamlDeferringLoader" /> en el genérico.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupDependsOn">
      <summary>Devuelve una lista de objetos <see cref="T:System.Xaml.XamlMember" />. Los elementos de la lista notifican los miembros en los que existen relaciones de dependencia para el orden de inicialización con respecto a este objeto <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>Una lista de objetos <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupInvoker">
      <summary>Devuelve un <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que está asociado con este <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>Información de <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> para este objeto <see cref="T:System.Xaml.XamlMember" /> o <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsAmbient">
      <summary>Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlMember" /> se considera una propiedad de ambiente.</summary>
      <returns>Es <see langword="true" /> para notificar este <see cref="T:System.Xaml.XamlMember" /> como una propiedad de ambiente; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsEvent">
      <summary>Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlMember" /> representa un evento.</summary>
      <returns>Es <see langword="true" /> para notificar que este objeto <see cref="T:System.Xaml.XamlMember" /> representa un evento; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsReadOnly">
      <summary>Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlMember" /> representa una propiedad de solo lectura.</summary>
      <returns>Es <see langword="true" /> para indicar si este objeto <see cref="T:System.Xaml.XamlMember" /> representa una propiedad de solo lectura; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsReadPublic">
      <summary>Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlMember" /> representa una propiedad que tiene un descriptor de acceso <see langword="get" /> público.</summary>
      <returns>Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlMember" /> representa una propiedad que tiene un descriptor de acceso <see langword="get" /> público; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsUnknown">
      <summary>Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlMember" /> representa un miembro que no puede ser resuelto por el sistema de respaldo que se usa para la resolución de tipos y miembros.</summary>
      <returns>Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlMember" /> representa un miembro que no se puede resolver; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsWriteOnly">
      <summary>Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlMember" /> representa un miembro que tiene un descriptor de acceso <see langword="set" /> público pero no un descriptor de acceso <see langword="get" /> público.</summary>
      <returns>Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlMember" /> representa un miembro de solo escritura; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupIsWritePublic">
      <summary>Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlMember" /> representa un miembro que tiene un descriptor de acceso <see langword="set" /> público.</summary>
      <returns>Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlMember" /> representa un miembro que permite escritura; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupMarkupExtensionBracketCharacters">
      <summary>Devuelve los caracteres de corchete de apertura y cierre de una extensión de marcado.</summary>
      <returns>Colección que contiene los caracteres de corchete de apertura y cierre.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupTargetType">
      <summary>Devuelve el objeto <see cref="T:System.Xaml.XamlType" /> del tipo donde <see cref="T:System.Xaml.XamlMember" /> puede existir.</summary>
      <returns>Tipo donde <see cref="T:System.Xaml.XamlMember" /> puede existir.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupType">
      <summary>Devuelve el objeto <see cref="T:System.Xaml.XamlType" /> del tipo usado por el miembro.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> del tipo usado por el miembro.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupTypeConverter">
      <summary>Devuelve una implementación de convertidor de tipos que está asociada a este objeto <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>Instancia de <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con la restricción <see cref="T:System.ComponentModel.TypeConverter" /> o <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupUnderlyingGetter">
      <summary>Devuelve un descriptor de acceso <see langword="get" /> que está asociado a este objeto <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>
        <see cref="T:System.Reflection.MethodInfo" /> para el descriptor de acceso <see langword="get" /> asociado o <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupUnderlyingMember">
      <summary>Devuelve un objeto <see cref="T:System.Reflection.MemberInfo" /> del sistema de tipos de CLR que está asociado a este objeto <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>Objeto <see cref="T:System.Reflection.MemberInfo" /> del sistema de tipos de CLR que está asociado a este <see cref="T:System.Xaml.XamlMember" /> o <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupUnderlyingSetter">
      <summary>Devuelve un descriptor de acceso <see langword="set" /> que está asociado a este objeto <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>
        <see cref="T:System.Reflection.MethodInfo" /> para el descriptor de acceso <see langword="set" /> asociado o <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.LookupValueSerializer">
      <summary>Devuelve una implementación de serializador de valor que está asociada a este <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>Instancia de <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> que está asociada a la restricción <see cref="T:System.Windows.Markup.ValueSerializer" /> o <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.MarkupExtensionBracketCharacters">
      <summary>Define los caracteres de corchete de apertura y cierre de una extensión de marcado.</summary>
      <returns>Colección que contiene los caracteres de corchete de apertura y cierre.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.Name">
      <summary>Obtiene la cadena de nombre <see langword="xamlName" /> que declara este <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>Cadena de nombre <see langword="xamlName" /> que declara este <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)">
      <summary>Determina si dos objetos <see cref="T:System.Xaml.XamlMember" /> especificados tienen el mismo valor.</summary>
      <param name="xamlMember1">
        <see cref="T:System.Xaml.XamlMember" /> o <see langword="null" />.</param>
      <param name="xamlMember2">
        <see cref="T:System.Xaml.XamlMember" /> o <see langword="null" />.</param>
      <returns>Es <see langword="true" /> si el valor de <paramref name="xamlMember1" /> es igual al valor de <paramref name="xamlMember2" />; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)">
      <summary>Determina si dos objetos <see cref="T:System.Xaml.XamlMember" /> especificados tienen valores diferentes.</summary>
      <param name="xamlMember1">
        <see cref="T:System.Xaml.XamlMember" /> o <see langword="null" />.</param>
      <param name="xamlMember2">
        <see cref="T:System.Xaml.XamlMember" /> o <see langword="null" />.</param>
      <returns>Es <see langword="true" /> si el valor de <paramref name="xamlMember1" /> difiere del valor de <paramref name="xamlMember2" />; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.PreferredXamlNamespace">
      <summary>Obtiene el identificador URI único del espacio de nombres XAML que identifica el espacio de nombres XAML primario de este <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>Identificador del espacio de nombres XAML primario de este <see cref="T:System.Xaml.XamlMember" />, en forma de cadena.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.SerializationVisibility">
      <summary>Obtiene un valor <see cref="T:System.ComponentModel.DesignerSerializationVisibility" />, que indica cómo un diseñador visual debería procesar el miembro.</summary>
      <returns>Valor de la enumeración <see cref="T:System.ComponentModel.DesignerSerializationVisibility" />. De manera predeterminada, es <see cref="F:System.ComponentModel.DesignerSerializationVisibility.Visible" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.TargetType">
      <summary>Obtiene el objeto <see cref="T:System.Xaml.XamlType" /> del tipo donde <see cref="T:System.Xaml.XamlMember" /> puede existir.</summary>
      <returns>Tipo donde <see cref="T:System.Xaml.XamlMember" /> puede existir.</returns>
    </member>
    <member name="M:System.Xaml.XamlMember.ToString">
      <summary>Devuelve una representación de cadena de este objeto <see cref="T:System.Xaml.XamlMember" />.</summary>
      <returns>Representación de cadena de este objeto <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.Type">
      <summary>Obtiene el objeto <see cref="T:System.Xaml.XamlType" /> del tipo usado por el miembro.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> del tipo usado por el miembro.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.TypeConverter">
      <summary>Obtiene un objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, que se puede usar para la construcción de la conversión de tipos de objetos XAML declarados.</summary>
      <returns>Valor <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con una restricción <see cref="T:System.ComponentModel.TypeConverter" /> en el tipo genérico.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.UnderlyingMember">
      <summary>Obtiene el objeto <see cref="T:System.Reflection.MemberInfo" /> del sistema de tipos de CLR que está disponible para un miembro construido por <see cref="T:System.Reflection.PropertyInfo" />, <see cref="T:System.Reflection.MethodInfo" /> o <see cref="T:System.Reflection.EventInfo" />.</summary>
      <returns>Información <see cref="T:System.Reflection.MemberInfo" /> del sistema de tipos de CLR, según se convierte de los parámetros del constructor iniciales. Un <see cref="T:System.Xaml.XamlMember" /> que se construye con la firma <see cref="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" /> devuelve <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlMember.ValueSerializer">
      <summary>Obtiene un objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, que se emplea para la serialización de valores de objetos declarados en XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con la restricción <see cref="T:System.Windows.Markup.ValueSerializer" /> en el tipo genérico.</returns>
    </member>
    <member name="T:System.Xaml.XamlNodeList">
      <summary>Proporciona una lista de nodos XAML, que se pueden usar en escenarios tales como la escritura de nodos XAML de manera aplazada.</summary>
    </member>
    <member name="M:System.Xaml.XamlNodeList.#ctor(System.Xaml.XamlSchemaContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlNodeList" /> usando un contexto de esquema especificado.</summary>
      <param name="schemaContext">Contexto de esquema que se va a usar para las operaciones con los nodos.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="schemaContext" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlNodeList.#ctor(System.Xaml.XamlSchemaContext,System.Int32)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlNodeList" /> utilizando el contexto de esquema y el tamaño de lista especificados.</summary>
      <param name="schemaContext">Contexto de esquema que se va a usar para las operaciones con los nodos.</param>
      <param name="size">Número de elementos que puede contener la lista.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="schemaContext" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlNodeList.Clear">
      <summary>Borra los elementos de esta lista.</summary>
    </member>
    <member name="P:System.Xaml.XamlNodeList.Count">
      <summary>Obtiene el número de nodos de este objeto <see cref="T:System.Xaml.XamlNodeList" />.</summary>
      <returns>Número de elementos de este objeto <see cref="T:System.Xaml.XamlNodeList" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlNodeList.GetReader">
      <summary>Devuelve un delegado de la implementación de lector XAML.</summary>
      <returns>Delegado de la implementación de lector XAML.</returns>
      <exception cref="T:System.Xaml.XamlException">
        <see cref="T:System.Xaml.XamlNodeList" /> está todavía en modo de escritura.  
O bien 
El sistema de escritura que se usa para obtener la lista de nodos no tiene ningún contexto de esquema.</exception>
    </member>
    <member name="P:System.Xaml.XamlNodeList.Writer">
      <summary>Obtiene el sistema de escritura XAML asociado.</summary>
      <returns>Sistema de escritura XAML asociado.</returns>
    </member>
    <member name="T:System.Xaml.XamlNodeQueue">
      <summary>Proporciona un búfer para escribir nodos y volver a leerlos.</summary>
    </member>
    <member name="M:System.Xaml.XamlNodeQueue.#ctor(System.Xaml.XamlSchemaContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlNodeQueue" /> usando un contexto de esquema XAML especificado.</summary>
      <param name="schemaContext">Contexto de esquema que se va a usar para las operaciones con los nodos.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xamlSchemaContext" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlNodeQueue.Count">
      <summary>Obtiene el número de nodos de <see cref="T:System.Xaml.XamlNodeQueue" />.</summary>
      <returns>Número de nodos de <see cref="T:System.Xaml.XamlNodeQueue" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlNodeQueue.IsEmpty">
      <summary>Obtiene un valor que determina si este objeto <see cref="T:System.Xaml.XamlNodeQueue" /> no contiene nodos.</summary>
      <returns>Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlNodeQueue" /> no contiene nodos; es <see langword="false" /> si este objeto <see cref="T:System.Xaml.XamlNodeQueue" /> contiene nodos.</returns>
    </member>
    <member name="P:System.Xaml.XamlNodeQueue.Reader">
      <summary>Obtiene un delegado de la implementación de lector XAML.</summary>
      <returns>Delegado de la implementación de lector XAML.</returns>
      <exception cref="T:System.Xaml.XamlException">El sistema de escritura XAML que se usa para la lista de nodos no tiene ningún contexto de esquema XAML válido.</exception>
    </member>
    <member name="P:System.Xaml.XamlNodeQueue.Writer">
      <summary>Obtiene el sistema de escritura XAML asociado.</summary>
      <returns>Sistema de escritura XAML asociado.</returns>
    </member>
    <member name="T:System.Xaml.XamlNodeType">
      <summary>Describe el tipo del nodo que está procesado actualmente un lector XAML.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.EndMember">
      <summary>El lector está en el final de un nodo de miembros.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.EndObject">
      <summary>El lector está en el final de un nodo de objetos.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.GetObject">
      <summary>El lector está dentro de un nodo de objetos y escribe un valor predeterminado o implícito, en lugar de ser un valor de objeto especificado.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.NamespaceDeclaration">
      <summary>El lector está dentro de una declaración del espacio de nombres XML.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.None">
      <summary>El lector no está situado en un nodo real (por ejemplo, el lector podría encontrarse al final de un archivo).</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.StartMember">
      <summary>El lector está en el inicio de un nodo de miembros.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.StartObject">
      <summary>El lector está en el inicio de un nodo de objetos.</summary>
    </member>
    <member name="F:System.Xaml.XamlNodeType.Value">
      <summary>El lector está dentro de un nodo y procesando un valor.</summary>
    </member>
    <member name="T:System.Xaml.XamlObjectEventArgs">
      <summary>Proporciona datos para las devoluciones de llamada que se pueden insertar en la secuencia para la inicialización de objetos y la configuración de propiedades. Esto afecta al gráfico de objeto generado por <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectEventArgs.#ctor(System.Object)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlObjectEventArgs" />.</summary>
      <param name="instance">Instancia de objeto que es pertinente para los datos del evento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlObjectEventArgs.ElementLineNumber">
      <summary>Obtiene o establece el número de línea de la instancia del objeto pertinente.</summary>
      <returns>Número de línea del elemento.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectEventArgs.ElementLinePosition">
      <summary>Obtiene o establece la posición en la línea de la instancia del objeto pertinente.</summary>
      <returns>Posición en la línea del elemento.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectEventArgs.Instance">
      <summary>Obtiene la instancia de objeto que es pertinente para los datos del evento.</summary>
      <returns>Instancia de objeto que es pertinente para los datos del evento.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectEventArgs.SourceBamlUri">
      <summary>Obtiene o establece el URI de BAML de la instancia del objeto pertinente.</summary>
      <returns>URI de BAML de la instancia del objeto pertinente.</returns>
    </member>
    <member name="T:System.Xaml.XamlObjectReader">
      <summary>Proporciona una implementación de <see cref="T:System.Xaml.XamlReader" /> que lee gráficos de objetos y genera una secuencia de nodos XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.#ctor(System.Object)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlObjectReader" />.</summary>
      <param name="instance">Raíz del árbol de objetos o gráfico de objetos que se va a leer.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.#ctor(System.Object,System.Xaml.XamlObjectReaderSettings)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlObjectReader" /> con la configuración de lector especificada.</summary>
      <param name="instance">Raíz del árbol de objetos que se va a leer.</param>
      <param name="settings">Objeto de configuración.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.#ctor(System.Object,System.Xaml.XamlSchemaContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlObjectReader" /> con el contexto de esquema especificado.</summary>
      <param name="instance">Raíz del árbol de objetos que se va a leer.</param>
      <param name="schemaContext">Contexto de esquema que el lector va a usar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="schemaContext" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.#ctor(System.Object,System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectReaderSettings)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlObjectReader" /> con el contexto de esquema y la configuración de lector especificados.</summary>
      <param name="instance">Raíz del árbol de objetos que se va a leer.</param>
      <param name="schemaContext">Contexto de esquema que el lector va a usar.</param>
      <param name="settings">Objeto de configuración.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="schemaContext" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Instance">
      <summary>Obtiene la instancia de objeto que está disponible en la posición actual del lector.</summary>
      <returns>Instancia de objeto que está disponible en la posición actual del lector o <see langword="null" /> si el lector no se encuentra en ningún objeto.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.IsEof">
      <summary>Obtiene un valor que indica si el lector se encuentra al final del archivo.</summary>
      <returns>Es <see langword="true" /> si el lector se encuentra al final del archivo; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Member">
      <summary>Obtiene el objeto <see cref="T:System.Xaml.XamlMember" /> actual en la posición del lector si este último se encuentra en un objeto <see cref="F:System.Xaml.XamlNodeType.StartMember" />.</summary>
      <returns>Miembro actual o <see langword="null" /> si el lector no se encuentra en un miembro.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Namespace">
      <summary>Obtiene la declaración de espacio de nombres XAML de la posición actual del lector.</summary>
      <returns>Declaración del espacio de nombres XAML si el lector se encuentra en un objeto <see cref="F:System.Xaml.XamlNodeType.NamespaceDeclaration" />; de lo contrario, devuelve <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.NodeType">
      <summary>Obtiene el tipo del nodo actual.</summary>
      <returns>Tipo del nodo actual.</returns>
    </member>
    <member name="M:System.Xaml.XamlObjectReader.Read">
      <summary>Proporciona el siguiente nodo XAML del gráfico de objetos de origen si está disponible.</summary>
      <returns>Es <see langword="true" /> si hay un nodo disponible; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.SchemaContext">
      <summary>Obtiene un objeto que proporciona información de esquema para el conjunto de información.</summary>
      <returns>Objeto que proporciona información de esquema para el conjunto de información.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Type">
      <summary>Obtiene el tipo <see cref="T:System.Xaml.XamlType" /> del objeto ubicado en la posición actual del lector.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> del objeto ubicado en la posición actual del lector o <see langword="null" /> si el lector no se encuentra en un objeto.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectReader.Value">
      <summary>Obtiene el valor del nodo ubicado en la posición actual del lector.</summary>
      <returns>Valor del nodo actual o <see langword="null" /> si el lector no se encuentra en un tipo de nodo <see cref="F:System.Xaml.XamlNodeType.Value" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlObjectReaderException">
      <summary>Representa la excepción que inician varias API del asistente internas de <see cref="T:System.Xaml.XamlObjectReader" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlObjectReaderException" /> con un mensaje proporcionado por el sistema que describe el error.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlObjectReaderException" /> con datos serializados.</summary>
      <param name="info">Objeto que contiene los datos del objeto serializados.</param>
      <param name="context">Información contextual acerca del origen o del destino.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlObjectReaderException" /> con un mensaje especificado que describe el error.</summary>
      <param name="message">Mensaje que describe la excepción. El autor de llamada de este constructor debe asegurarse de que la cadena se haya adaptado para la referencia cultural actual del sistema.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlObjectReaderException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</summary>
      <param name="message">Mensaje que describe la excepción. El autor de llamada de este constructor debe asegurarse de que la cadena se haya adaptado para la referencia cultural actual del sistema.</param>
      <param name="innerException">Excepción que es la causa de la excepción actual. Si el parámetro <paramref name="innerException" /> no es <see langword="null" />, la excepción actual se produce en un bloque <see langword="catch" /> que controla la excepción interna.</param>
    </member>
    <member name="T:System.Xaml.XamlObjectReaderSettings">
      <summary>Especifica reglas de procesamiento o configuraciones de opciones para <see cref="T:System.Xaml.XamlObjectReader" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectReaderSettings.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlObjectReaderSettings" />.</summary>
    </member>
    <member name="P:System.Xaml.XamlObjectReaderSettings.RequireExplicitContentVisibility">
      <summary>Obtiene o establece un valor que determina si los sistemas de escritura que usan el <see cref="T:System.Xaml.XamlObjectReader" /> asociado para el contexto deben usar valores de diseñador para la escritura de contenido explícitamente.</summary>
      <returns>Es <see langword="true" /> para especificar que los sistemas de escritura que usan este contexto deben usar valores de diseñador para escribir cualquier contenido de salida en aquellos casos en los que <see cref="P:System.Xaml.XamlMember.IsWritePublic" /> indique <see langword="false" />; es <see langword="false" /> si se debe omitir la configuración de diseñador.</returns>
    </member>
    <member name="T:System.Xaml.XamlObjectWriter">
      <summary>Crea un gráfico de objetos a partir de una secuencia de nodos XAML de origen.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlObjectWriter" /> con el contexto de esquema XAML usado por un <see cref="T:System.Xaml.XamlReader" />.</summary>
      <param name="schemaContext">Contexto de esquema XAML compartido con el lector XAML que proporciona los nodos para la escritura.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="schemaContext" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectWriterSettings)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlObjectWriter" /> usando el contexto empleado por un <see cref="T:System.Xaml.XamlReader" /> y su configuración.</summary>
      <param name="schemaContext">Contexto de esquema XAML compartido con el lector XAML que proporciona los nodos para la escritura.</param>
      <param name="settings">Objeto de configuración que especifica determinadas opciones para el comportamiento y la salida de <see cref="T:System.Xaml.XamlObjectWriter" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="schemaContext" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.Clear">
      <summary>Restablece todos los posibles marcos y borra el gráfico de objetos.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.Dispose(System.Boolean)">
      <summary>Libera los recursos no administrados que usa <see cref="T:System.Xaml.XamlObjectWriter" /> y, de forma opcional, libera los recursos administrados.</summary>
      <param name="disposing">Es <see langword="true" /> para liberar los recursos administrados; de lo contrario, es <see langword="false" />.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnAfterBeginInit(System.Object)">
      <summary>Invoca cualquier método <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler" /> que esté asociado a <see cref="T:System.Xaml.XamlObjectWriterSettings" /> para este objeto <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
      <param name="value">Objeto del que se va a informar. El objeto se empaqueta en <see cref="T:System.Xaml.XamlObjectEventArgs" /> cuando se invoca el controlador.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnAfterEndInit(System.Object)">
      <summary>Invoca cualquier método <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler" /> que esté asociado a <see cref="T:System.Xaml.XamlObjectWriterSettings" /> para este objeto <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
      <param name="value">Objeto del que se va a informar. El valor se empaqueta en <see cref="T:System.Xaml.XamlObjectEventArgs" /> cuando se invoca el controlador.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnAfterProperties(System.Object)">
      <summary>Invoca cualquier método <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler" /> al que se haga referencia que esté asociado a <see cref="T:System.Xaml.XamlObjectWriterSettings" /> para este objeto <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
      <param name="value">Objeto del que se va a informar. Se empaqueta en <see cref="T:System.Xaml.XamlObjectEventArgs" /> cuando se invoca el controlador.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnBeforeProperties(System.Object)">
      <summary>Invoca cualquier método <see cref="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler" /> al que se haga referencia que esté asociado a <see cref="T:System.Xaml.XamlObjectWriterSettings" /> para este objeto <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
      <param name="value">Valor que se va a pasar a través de <see cref="T:System.Xaml.XamlObjectEventArgs" /> cuando se invoca el controlador.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)">
      <summary>Invoca cualquier método <see cref="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler" /> al que se haga referencia que esté asociado al objeto <see cref="T:System.Xaml.XamlObjectWriterSettings" /> de este sistema de escritura siempre y cuando el valor de <paramref name="handled" /> de los datos de evento de <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" /> no sea <see langword="true" />.</summary>
      <param name="eventSender">Objeto que se va a notificar al controlador como origen.</param>
      <param name="member">Nombre de la propiedad que se va a establecer, que se pasa al controlador como parte de <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</param>
      <param name="value">Valor que se va a proporcionar para la propiedad designada por <paramref name="property" />. El valor se pasa al controlador como parte de <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</param>
      <returns>Valor booleano establecido por cualquier controlador asociado; de lo contrario, devuelve <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriter.Result">
      <summary>Obtiene el último objeto que se escribió. Normalmente, se llama únicamente cuando la secuencia de nodos está llegando al final y el gráfico de objeto está completado.</summary>
      <returns>Último objeto escrito o <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriter.RootNameScope">
      <summary>Obtiene el servicio <see cref="T:System.Windows.Markup.INameScope" /> que mantiene el ámbito de nombres XAML para la raíz del nodo absoluto del sistema de escritura de objetos XAML.</summary>
      <returns>Servicio <see cref="T:System.Windows.Markup.INameScope" /> que mantiene el ámbito de nombres XAML para la raíz actual del sistema de escritura de objetos.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriter.SchemaContext">
      <summary>Obtiene el contexto de esquema XAML activo.</summary>
      <returns>Contexto de esquema XAML.</returns>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.SetLineInfo(System.Int32,System.Int32)">
      <summary>Implementa <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /> y proporciona información de línea para las excepciones.</summary>
      <param name="lineNumber">Número de línea del lector.</param>
      <param name="linePosition">Posición de línea del lector.</param>
    </member>
    <member name="P:System.Xaml.XamlObjectWriter.ShouldProvideLineInfo">
      <summary>Obtiene un valor que indica si un servicio de información de línea debe proporcionar valores y, por tanto, debe llamar también al método <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /> cuando proceda.</summary>
      <returns>Es <see langword="true" /> si el sistema de escritura usa información de línea; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteEndMember">
      <summary>Cierra el ámbito de miembro actual y puede escribir el valor del ámbito de miembro mientras se cierra. El nuevo ámbito se convierte en el ámbito de objeto primario del miembro.</summary>
      <exception cref="T:System.Xaml.XamlObjectWriterException">Error al crear el valor de miembro a partir de un nodo de valor que se encuentra entre esta llamada y <see langword="StartMember" /> anterior.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteEndObject">
      <summary>Cierra el ámbito de objeto actual en el sistema de escritura. El ámbito de objeto nuevo pasa a ser el ámbito del miembro primario.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteGetObject">
      <summary>Escribe el elemento <see langword="StartObject" /> conceptual en el gráfico de objeto cuando el objeto especificado se corresponde con el valor predeterminado o implícito de la propiedad primaria. El valor implícito procede de la información obtenida del contexto de esquema XAML y de la información sobre los tipos de respaldo, en lugar de especificarse como un valor de objeto en el conjunto de nodos XAML de entrada.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
      <summary>Define una declaración de espacio de nombres que se aplica al siguiente ámbito de objeto o ámbito de miembro.</summary>
      <param name="namespaceDeclaration">Declaración de espacio de nombres que se va a escribir.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="namespaceDeclaration" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Un componente de <paramref name="namespaceDeclaration" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xaml.XamlObjectReaderException">Se ha intentado escribir un ámbito no válido en un nodo de espacio de nombres XAML.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)">
      <summary>Escribe un nuevo nodo de miembro en el ámbito de objeto actual y el ámbito pasa a ser un nuevo ámbito de miembro.</summary>
      <param name="property">Propiedad XAML que se va a escribir. Normalmente se obtiene este valor de un lector XAML a través de la secuencia de nodos XAML.</param>
      <exception cref="T:System.Xaml.XamlObjectWriterException">
        <paramref name="property" /> tiene <see cref="P:System.Xaml.XamlMember.IsUnknown" /> establecido en <see langword="true" />.  
o bien 
 <see cref="P:System.Xaml.XamlLanguage.UnknownContent" /> pasó, lo que indica que la secuencia de nodo de XAML contenía contenido para un objeto que no admite contenido.  
o bien 
Se ha intentado escribir un ámbito no válido en un miembro de inicio.</exception>
      <exception cref="T:System.Xaml.XamlDuplicateMemberException">
        <paramref name="property" /> especifica una propiedad que ya está explícitamente establecida en el ámbito del objeto primario.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="property" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteStartObject(System.Xaml.XamlType)">
      <summary>Escribe un nodo de objeto en el ámbito actual y establece el ámbito en un nuevo ámbito de objeto.</summary>
      <param name="xamlType">Tipo que se va a escribir. Este valor suele obtenerse de un lector XAML.</param>
      <exception cref="T:System.Xaml.XamlObjectWriterException">Procesamiento de un tipo <see cref="P:System.Xaml.XamlType.IsUnknown" /> y no se puede crear un objeto.  
o bien 
Se ha intentado escribir un ámbito no válido en un objeto de inicio.</exception>
      <exception cref="T:System.Xaml.XamlParseException">Se ha intentado escribir el objeto raíz cuando el objeto raíz ya se había proporcionado en la configuración.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xamlType" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlObjectWriter.WriteValue(System.Object)">
      <summary>Escribe un valor en el ámbito de miembro actual. Si el ámbito actual está en un objeto de colección, diccionario o matriz, el valor debe agregarse a la colección, el diccionario o la matriz.</summary>
      <param name="value">Valor que se va a escribir.</param>
      <exception cref="T:System.Xaml.XamlObjectWriterException">Se ha intentado escribir un ámbito no válido en un valor.</exception>
    </member>
    <member name="T:System.Xaml.XamlObjectWriterException">
      <summary>Excepción que se inicia cuando un sistema de escritura XAML (por ejemplo, la clase <see cref="T:System.Xaml.XamlObjectWriter" />) detecta un error al intentar generar gráficos de objetos a partir de una secuencia de nodos XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlObjectWriterException" /> con un mensaje proporcionado por el sistema que describe el error.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlObjectWriterException" /> con datos serializados.</summary>
      <param name="info">Objeto que contiene los datos del objeto serializados.</param>
      <param name="context">Información contextual acerca del origen o del destino.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlObjectWriterException" /> con un mensaje especificado que describe el error.</summary>
      <param name="message">Mensaje que describe la excepción. El autor de llamada de este constructor debe asegurarse de que la cadena se haya adaptado para la referencia cultural actual del sistema.</param>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlObjectWriterException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</summary>
      <param name="message">Mensaje que describe la excepción. El autor de llamada de este constructor debe asegurarse de que la cadena se haya adaptado para la referencia cultural actual del sistema.</param>
      <param name="innerException">Excepción que es la causa de la excepción actual. Si el parámetro <paramref name="innerException" /> no es <see langword="null" />, la excepción actual se produce en un bloque <see langword="catch" /> que controla la excepción interna.</param>
    </member>
    <member name="T:System.Xaml.XamlObjectWriterSettings">
      <summary>Proporciona una configuración de sistema de escritura XAML específica para <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterSettings.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlObjectWriterSettings" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlObjectWriterSettings.#ctor(System.Xaml.XamlObjectWriterSettings)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlObjectWriterSettings" /> que se basa en la copia de una instancia existente.</summary>
      <param name="settings">Instancia de configuración que se va a copiar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="settings" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.AccessLevel">
      <summary>Obtiene o establece permisos <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> que observa el escritor de XAML.</summary>
      <returns>Permisos <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler">
      <summary>Obtiene o establece una referencia a una devolución de llamada invocada por el sistema de escritura XAML en la fase <see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" /> de la duración de cada objeto creado.</summary>
      <returns>Devolución de llamada invocada por el sistema de escritura XAML en la fase <see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" /> de la duración de los objetos.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler">
      <summary>Obtiene o establece una referencia a una devolución de llamada invocada por el sistema de escritura XAML en la fase <see cref="M:System.ComponentModel.ISupportInitialize.EndInit" /> de la duración de cada objeto creado.</summary>
      <returns>Devolución de llamada invocada por el sistema de escritura XAML en la fase <see cref="M:System.ComponentModel.ISupportInitialize.EndInit" /> de la duración de los objetos.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler">
      <summary>Obtiene o establece una referencia a una devolución de llamada invocada por el sistema de escritura XAML en la fase posterior a la escritura de un miembro de la duración de cada objeto creado.</summary>
      <returns>Devolución de llamada invocada por el sistema de escritura XAML en la fase posterior a la escritura de un nodo de miembro del período de duración de los objetos.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler">
      <summary>Obtiene o establece una referencia a una devolución de llamada invocada por el sistema de escritura XAML en la fase anterior a la escritura de un miembro de la duración de cada objeto creado.</summary>
      <returns>Devolución de llamada invocada por el sistema de escritura XAML en la fase anterior a la escritura de un miembro de la duración de los objetos.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope">
      <summary>Obtiene o establece el ámbito de nombres XAML que se va a usar para registrar los nombres del sistema de escritura XAML si el valor de la propiedad <see cref="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope" /> es <see langword="true" />.</summary>
      <returns>Ámbito de nombres XAML que se va a utilizar para registrar los nombres. De manera predeterminada, es <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.IgnoreCanConvert">
      <summary>Obtiene o establece un valor que especifica si el sistema de escritura XAML debe omitir (no llamar a) las implementaciones de <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" /> en un objeto <see cref="T:System.ComponentModel.TypeConverter" /> en situaciones de convertidor de tipos.</summary>
      <returns>Es <see langword="true" /> si el sistema de escritura XAML omite las implementaciones de <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />; de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.PreferUnconvertedDictionaryKeys">
      <summary>Obtiene o establece un valor que determina si se va a deshabilitar una característica <see cref="T:System.Xaml.XamlObjectWriter" /> predeterminada que ejecuta la conversión de tipos en el componente <paramref name="K" /> de <see cref="T:System.Collections.Generic.Dictionary`2" /> antes de escribir la representación del gráfico de objetos.</summary>
      <returns>Es <see langword="true" /> si la conversión de tipos <paramref name="K" /> para un objeto <see cref="T:System.Collections.Generic.Dictionary`2" /> debe estar deshabilitada. Es <see langword="false" /> si es aplicable la conversión de tipos <paramref name="K" /> para un objeto <see cref="T:System.Collections.Generic.Dictionary`2" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope">
      <summary>Obtiene o establece un valor que determina si los nombres deben registrarse en el ámbito <see cref="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" /> especificado.</summary>
      <returns>Es <see langword="true" /> si se deben registrar los nombres en <see cref="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" />; es <see langword="false" /> si se deben registrar los nombres en el ámbito de nombres XAML primario. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.RootObjectInstance">
      <summary>Obtiene o establece un objeto raíz preexistente para las operaciones de <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
      <returns>Objeto raíz preexistente para las operaciones de <see cref="T:System.Xaml.XamlObjectWriter" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.SkipDuplicatePropertyCheck">
      <summary>Obtiene o establece un valor que determina si el sistema de escritura XAML omite la comprobación de la ruta de acceso del código para ver si hay propiedades duplicadas.</summary>
      <returns>Es <see langword="true" /> si se debe omitir la comprobación de propiedades duplicadas; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.SkipProvideValueOnRoot">
      <summary>Obtiene o establece un valor que indica si el objeto <see cref="T:System.Xaml.XamlObjectWriter" /> debe omitir las llamadas a <see langword="ProvideValue" /> en una extensión de marcado, lo cual resulta adecuado cuando la extensión de marcado representa la raíz de un gráfico de objetos.</summary>
      <returns>Es <see langword="true" /> si el objeto <see cref="T:System.Xaml.XamlObjectWriter" /> debe omitir la llamada a <see langword="ProvideValue" /> en una extensión de marcado; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.SourceBamlUri">
      <summary>Se usa en el <see langword="BeginInitHandler" /> en lugar del <see langword="BaseUri" /> real.</summary>
      <returns>Objeto <see cref="T:System.Uri" /> que se va a usar en lugar del objeto <see langword="BaseUri" /> real.</returns>
    </member>
    <member name="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler">
      <summary>Obtiene o establece el controlador que se usa cuando el sistema de escritura de objetas llama a un método <see langword="SetValue" /> implementado por CLR para las propiedades de dependencia.</summary>
      <returns>Implementación de controlador que controla este caso.</returns>
    </member>
    <member name="T:System.Xaml.XamlParseException">
      <summary>Excepción que se inicia cuando un lector XAML no puede procesar elementos del origen del lector XAML en una secuencia de nodos XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlParseException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlParseException" /> con un mensaje proporcionado por el sistema que describe el error.</summary>
    </member>
    <member name="M:System.Xaml.XamlParseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlParseException" /> con datos serializados.</summary>
      <param name="info">Objeto que contiene los datos del objeto serializados.</param>
      <param name="context">Información contextual acerca del origen o del destino.</param>
    </member>
    <member name="M:System.Xaml.XamlParseException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlParseException" /> con un mensaje especificado que describe el error.</summary>
      <param name="message">Mensaje que describe la excepción. El autor de llamada de este constructor debe asegurarse de que la cadena se haya adaptado para la referencia cultural actual del sistema.</param>
    </member>
    <member name="M:System.Xaml.XamlParseException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlParseException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</summary>
      <param name="message">Mensaje que describe la excepción. El autor de llamada de este constructor debe asegurarse de que la cadena se haya adaptado para la referencia cultural actual del sistema.</param>
      <param name="innerException">Excepción que es la causa de la excepción actual. Si el parámetro <paramref name="innerException" /> no es <see langword="null" />, la excepción actual se produce en un bloque <see langword="catch" /> que controla la excepción interna.</param>
    </member>
    <member name="T:System.Xaml.XamlReader">
      <summary>Proporciona definiciones de base para las clases que usan la entrada de XAML y generan flujos de nodos XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlReader.#ctor">
      <summary>Inicializa la clase <see cref="T:System.Xaml.XamlReader" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlReader.Close">
      <summary>Cierra el flujo de nodos XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlReader.Dispose(System.Boolean)">
      <summary>Libera los recursos no administrados que usa <see cref="T:System.Xaml.XamlReader" /> y, de forma opcional, libera los recursos administrados.</summary>
      <param name="disposing">Es <see langword="true" /> para liberar los recursos administrados; de lo contrario, es <see langword="false" />.</param>
    </member>
    <member name="P:System.Xaml.XamlReader.IsDisposed">
      <summary>Obtiene un valor que indica si se ha llamado al método <see cref="M:System.Xaml.XamlReader.Dispose(System.Boolean)" />.</summary>
      <returns>
        <see langword="true" /> si se ha llamado a <see cref="M:System.Xaml.XamlReader.Dispose(System.Boolean)" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.IsEof">
      <summary>Cuando se implementa en una clase derivada, obtiene un valor que notifica si la posición del lector está al final del archivo.</summary>
      <returns>Es <see langword="true" /> si la posición está en el final conceptual del archivo de la secuencia de nodos XAML; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.Member">
      <summary>Cuando se implementa en una clase derivada, obtiene el miembro actual situado en la posición del lector, si la posición del lector está en un miembro <see cref="F:System.Xaml.XamlNodeType.StartMember" />.</summary>
      <returns>Miembro actual o <see langword="null" /> si el lector no se encuentra en un miembro.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.Namespace">
      <summary>Cuando se implementa en una clase derivada, obtiene la información del espacio de nombres XAML del nodo actual.</summary>
      <returns>Información del espacio de nombres XAML, si está disponible; de lo contrario, es <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.NodeType">
      <summary>Cuando se implementa en una clase derivada, obtiene el tipo del nodo actual.</summary>
      <returns>Valor de la enumeración <see cref="T:System.Xaml.XamlNodeType" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlReader.Read">
      <summary>Cuando se implementa en una clase derivada, proporciona el siguiente nodo XAML del origen, si hay alguno disponible.</summary>
      <returns>Es <see langword="true" /> si hay un nodo disponible; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlReader.ReadSubtree">
      <summary>Devuelve un objeto <see cref="T:System.Xaml.XamlReader" /> que se basa en el objeto <see cref="T:System.Xaml.XamlReader" /> actual, donde el objeto <see cref="T:System.Xaml.XamlReader" /> devuelto se usa para recorrer en iteración un subárbol de la estructura de nodos XAML.</summary>
      <returns>Nueva instancia de lector XAML para el subárbol.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.SchemaContext">
      <summary>Cuando se implementa en una clase derivada, obtiene un objeto que proporciona información sobre el contexto de esquema XAML del conjunto de información.</summary>
      <returns>Objeto que proporciona información sobre el contexto de esquema XAML del conjunto de información.</returns>
    </member>
    <member name="M:System.Xaml.XamlReader.Skip">
      <summary>Omite el nodo actual y avanza la posición del lector hasta el nodo siguiente.</summary>
    </member>
    <member name="M:System.Xaml.XamlReader.System#IDisposable#Dispose">
      <summary>Libera todos los recursos usados por la instancia actual de la clase <see cref="T:System.Xaml.XamlReader" />.</summary>
    </member>
    <member name="P:System.Xaml.XamlReader.Type">
      <summary>Cuando se implementa en una clase derivada, obtiene el objeto <see cref="T:System.Xaml.XamlType" /> del nodo actual.</summary>
      <returns>Objeto <see cref="T:System.Xaml.XamlType" /> del nodo actual o <see langword="null" /> si la posición actual del lector no se encuentra en un objeto.</returns>
    </member>
    <member name="P:System.Xaml.XamlReader.Value">
      <summary>Cuando se implementa en una clase derivada, obtiene el valor del nodo actual.</summary>
      <returns>Valor del nodo actual o <see langword="null" /> si la posición actual del lector no se encuentra en un tipo de nodo <see cref="F:System.Xaml.XamlNodeType.Value" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlReaderSettings">
      <summary>Especifica reglas de procesamiento o configuraciones de opciones para una implementación de <see cref="T:System.Xaml.XamlReader" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlReaderSettings.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlReaderSettings" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlReaderSettings.#ctor(System.Xaml.XamlReaderSettings)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlReaderSettings" /> a partir de los valores de otro objeto <see cref="T:System.Xaml.XamlReaderSettings" />.</summary>
      <param name="settings">Objeto <see cref="T:System.Xaml.XamlReaderSettings" /> existente.</param>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.AllowProtectedMembersOnRoot">
      <summary>Obtiene o establece un valor que indica si el objeto raíz puede incluir miembros que tienen un modelo de acceso de código protegido al notificar la representación de tipos XAML.</summary>
      <returns>Es <see langword="true" /> si el objeto raíz puede incluir miembros que tienen un modelo de acceso de código protegido; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.BaseUri">
      <summary>Obtiene o establece el identificador URI base que se utiliza para resolver las rutas de acceso relativas.</summary>
      <returns>Identificador URI que se va a utilizar. De manera predeterminada, es <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.IgnoreUidsOnPropertyElements">
      <summary>Obtiene o establece un valor que especifica si el lector XAML debe omitir los valores de los atributos <see langword="x:Uid" /> que existen en los elementos de propiedad.</summary>
      <returns>Es <see langword="true" /> si el lector debe omitir los valores de los atributos <see langword="x:Uid" /> en los elementos de propiedad. <see langword="false" /> si el lector debe procesar los atributos <see langword="x:Uid" /> en los elementos de propiedad. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.LocalAssembly">
      <summary>Obtiene o establece el objeto que representa el ensamblado local actual que se va a procesar. Esta información de ensamblado se usa para llamar a API auxiliares como <see cref="M:System.Xaml.XamlType.GetAllMembers" />.</summary>
      <returns>Objeto <see cref="T:System.Reflection.Assembly" /> de reflexión de CLR.</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.ProvideLineInfo">
      <summary>Obtiene o establece un valor que especifica si el lector puede proporcionar el número y la posición de línea.</summary>
      <returns>Es <see langword="true" /> si el lector puede proporcionar el número y la posición de línea; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlReaderSettings.ValuesMustBeString">
      <summary>Obtiene o establece un valor que especifica si el lector exige que todos los nodos <see langword="Value" /> se procesen como tipos <see langword="String" />.</summary>
      <returns>Es <see langword="true" /> si el lector exige que solo haya tipos <see langword="String" /> en los nodos <see langword="Value" />; de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlSchemaContext">
      <summary>Define un contexto reutilizable para interpretar o asignar tipos XAML, y los tipos de los ensamblados subyacentes.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlSchemaContext" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlSchemaContext" /> basándose en un conjunto de ensamblados de referencia.</summary>
      <param name="referenceAssemblies">Conjunto enumerable de elementos de información de ensamblado. La información de cada elemento viene especificada por un valor <see cref="T:System.Reflection.Assembly" />.</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Xaml.XamlSchemaContextSettings)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlSchemaContext" /> basándose en un conjunto de ensamblados de referencia y un objeto de configuración.</summary>
      <param name="referenceAssemblies">Conjunto enumerable de información de ensamblado. La información de cada elemento viene especificada por un valor <see cref="T:System.Reflection.Assembly" />.</param>
      <param name="settings">Objeto de configuración que se va a usar para crear el objeto <see cref="T:System.Xaml.XamlSchemaContext" />.</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.#ctor(System.Xaml.XamlSchemaContextSettings)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlSchemaContext" /> basándose en un objeto de configuración.</summary>
      <param name="settings">Objeto de configuración que se va a usar para crear el objeto <see cref="T:System.Xaml.XamlSchemaContext" />.</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.Finalize">
      <summary>Proporciona una implementación de <see langword="Finalize" /> no estándar que no invoca a <see langword="Dispose" />.</summary>
    </member>
    <member name="P:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces">
      <summary>Obtiene un valor que especifica si un esquema XAML y su contexto emplean nombres de ensamblado completos en los valores devueltos por la API de búsqueda.</summary>
      <returns>Es <see langword="true" /> si un esquema XAML y su contexto emplean nombres de ensamblado completos en los valores devueltos por las API de búsqueda; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces">
      <summary>Busca en los ensamblados que contiene <see cref="T:System.Xaml.XamlSchemaContext" /> y devuelve un conjunto de espacios de nombres.</summary>
      <returns>Conjunto enumerable de identificadores de espacio de nombres. Estos identificadores se proporcionan como cadenas.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetAllXamlTypes(System.String)">
      <summary>Busca en los ensamblados que contiene <see cref="T:System.Xaml.XamlSchemaContext" /> y devuelve un conjunto de tipos del espacio de nombres XAML especificado.</summary>
      <param name="xamlNamespace">Espacio de nombres XAML del que se van a devolver tipos.</param>
      <returns>Conjunto enumerable de tipos XAML. Cada tipo XAML del conjunto está representado por un objeto <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)">
      <summary>Obtiene una cadena que se notifica como el prefijo preferido para uso de los consumidores cuando asignan el espacio de nombres XAML especificado.</summary>
      <param name="xmlns">Espacio de nombres XAML del que se va a obtener el prefijo preferido.</param>
      <returns>Cadena que los consumidores deberían usar cuando asignan el espacio de nombres XAML especificado para uso del marcado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlns" /> es null.</exception>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetValueConverter``1(System.Type,System.Xaml.XamlType)">
      <summary>Devuelve un convertidor de valores que puede realizar la conversión al valor <paramref name="targetType" /> solicitado.</summary>
      <param name="converterType">Implementación del convertidor.</param>
      <param name="targetType">Tipo de destino deseado para el convertidor.</param>
      <typeparam name="TConverterBase">Clase base concreta del convertidor.</typeparam>
      <returns>
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con una restricción que coincide con la restricción que se coloca en la llamada al método.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)">
      <summary>Devuelve un valor <see cref="T:System.Xaml.XamlDirective" /> que representa una directiva, bien para el lenguaje XAML o para una implementación determinada.</summary>
      <param name="xamlNamespace">Espacio de nombres XAML que contiene la directiva con nombre.</param>
      <param name="name">Nombre de la directiva que se va a obtener.</param>
      <returns>Objeto <see cref="T:System.Xaml.XamlDirective" /> que representa la directiva solicitada.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xamlNamespace" /> o <paramref name="name" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])">
      <summary>Devuelve un objeto <see cref="T:System.Xaml.XamlType" /> basado en un espacio de nombres XAML y una cadena para el nombre de tipo. Esta firma puede especificar los argumentos de tipo para aquellos casos en los que el tipo deseado es un tipo genérico.</summary>
      <param name="xamlNamespace">Espacio de nombres XAML que contiene el tipo deseado.</param>
      <param name="name">Nombre de cadena del tipo deseado.</param>
      <param name="typeArguments">Argumentos de tipo de inicialización para un tipo genérico.</param>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> que coincide con el criterio de entrada.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Type)">
      <summary>Devuelve un objeto <see cref="T:System.Xaml.XamlType" /> que se basa en un identificador de tipo de CLR.</summary>
      <param name="type">Tipo para el que se va a obtener un objeto <see cref="T:System.Xaml.XamlType" />.</param>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> que coincide con el valor <paramref name="type" /> de entrada.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Xaml.Schema.XamlTypeName)">
      <summary>Devuelve un objeto <see cref="T:System.Xaml.XamlType" /> que se basa en un nombre de tipo de sistema XAML.</summary>
      <param name="xamlTypeName">Nombre de tipo XAML para el que se va a obtener un objeto <see cref="T:System.Xaml.XamlType" />.</param>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> que coincide con el valor <paramref name="xamlTypeName" /> de entrada.</returns>
      <exception cref="T:System.ArgumentException">Un componente de <paramref name="xamlTypeName" /> (<see cref="P:System.Xaml.Schema.XamlTypeName.Name" /> o <see cref="P:System.Xaml.Schema.XamlTypeName.Namespace" />) es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xamlTypeName" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)">
      <summary>Se llama cuando las operaciones usan este contexto de esquema para resolver un ensamblado requerido para resolver los espacios de nombres XAML que contiene.</summary>
      <param name="assemblyName">Nombre del ensamblado que se va a cargar.</param>
      <returns>Ensamblado resuelto.</returns>
    </member>
    <member name="P:System.Xaml.XamlSchemaContext.ReferenceAssemblies">
      <summary>Obtiene un conjunto enumerable de ensamblados de referencia para el contexto de esquema XAML.</summary>
      <returns>Conjunto enumerable de ensamblados de referencia para el contexto de esquema. La información de cada elemento viene especificada por un valor <see cref="T:System.Reflection.Assembly" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
      <summary>Obtiene un valor que especifica si un esquema XAML y su contexto admiten extensiones de marcado en las que hay dos constructores con la misma aridad (número de parámetros de entrada).</summary>
      <returns>Es <see langword="true" /> si el contexto de esquema permite extensiones de marcado con aridad duplicada; de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
      <summary>Devuelve un valor que indica si ha sido correcta o no la solicitud de un espacio de nombres XAML compatible. Si la solicitud es correcta, se notifica ese espacio de nombres XAML como parámetro de salida.</summary>
      <param name="xamlNamespace">Cadena <see langword="xmlns" /> del espacio de nombres XAML en el que se va a buscar un resultado compatible.</param>
      <param name="compatibleNamespace">Cuando este método devuelve un valor, es la cadena <see langword="xmlns" /> para una solicitud de espacio de nombres XAML compatible. Puede ser idéntico a <paramref name="xamlNamespace" /> si el método devuelve <see langword="false" />.</param>
      <returns>Es <see langword="true" /> si <paramref name="compatibleNamespace" /> contiene un resultado utilizable; de lo contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xamlNamespace" /> es <see langword="null" />.</exception>
    </member>
    <member name="T:System.Xaml.XamlSchemaContextSettings">
      <summary>Proporciona configuraciones opcionales para un objeto <see cref="T:System.Xaml.XamlSchemaContext" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaContextSettings.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlSchemaContextSettings" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaContextSettings.#ctor(System.Xaml.XamlSchemaContextSettings)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlSchemaContextSettings" /> copiando los valores de una instancia de <see cref="T:System.Xaml.XamlSchemaContextSettings" /> existente.</summary>
      <param name="settings">Un <see cref="T:System.Xaml.XamlSchemaContextSettings" /> existente.</param>
    </member>
    <member name="P:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces">
      <summary>Obtiene o establece un valor que especifica si un esquema XAML y su contexto emplean nombres de ensamblado completos en los valores devueltos por la API de búsqueda.</summary>
      <returns>Es <see langword="true" /> si un esquema XAML y su contexto emplean nombres de ensamblado completos en los valores devueltos por las API de búsqueda; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity">
      <summary>Obtiene o establece un valor que especifica si un contexto de esquema XAML permite extensiones de marcado en las que hay dos constructores con la misma aridad (número de parámetros de entrada).</summary>
      <returns>Es <see langword="true" /> si el contexto de esquema permite las extensiones de marcado que tienen aridad duplicada; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlSchemaException">
      <summary>Excepción que se produce cuando un sistema de enlace u otro sistema de representación de esquema XAML notifica una excepción al contexto de esquema.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlSchemaException" /> con un mensaje proporcionado por el sistema que describe el error.</summary>
    </member>
    <member name="M:System.Xaml.XamlSchemaException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlSchemaException" /> con datos serializados.</summary>
      <param name="info">Objeto que contiene los datos del objeto serializados.</param>
      <param name="context">Información contextual acerca del origen o del destino.</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlSchemaException" /> con un mensaje especificado que describe el error.</summary>
      <param name="message">Mensaje que describe la excepción. El autor de llamada de este constructor debe asegurarse de que la cadena se haya adaptado para la referencia cultural actual del sistema.</param>
    </member>
    <member name="M:System.Xaml.XamlSchemaException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlSchemaException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</summary>
      <param name="message">Mensaje que describe la excepción. El autor de llamada de este constructor debe asegurarse de que la cadena se haya adaptado para la referencia cultural actual del sistema.</param>
      <param name="innerException">Excepción que es la causa de la excepción actual. Si el parámetro <paramref name="innerException" /> no es <see langword="null" />, la excepción actual se produce en un bloque <see langword="catch" /> que controla la excepción interna.</param>
    </member>
    <member name="T:System.Xaml.XamlServices">
      <summary>Proporciona servicios de nivel superior (métodos estáticos) para las tareas XAML comunes como leer XAML y escribir un gráfico de objetos, o bien leer un gráfico de objetos y escribir archivos XAML para la serialización.</summary>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.IO.Stream)">
      <summary>Carga un origen <see cref="T:System.IO.Stream" /> para un lector XAML y escribe la salida como un gráfico de objetos.</summary>
      <param name="stream">Secuencia que se va a cargar como entrada.</param>
      <returns>Gráfico de objetos que se escribe como salida.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.IO.TextReader)">
      <summary>Crea un lector XAML a partir de un objeto <see cref="T:System.IO.TextReader" /> y devuelve un gráfico de objetos.</summary>
      <param name="textReader">
        <see cref="T:System.IO.TextReader" /> que se va a usar como base para el objeto <see cref="T:System.Xml.XmlReader" /> que se va a crear.</param>
      <returns>Gráfico de objetos que se devuelve.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textReader" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.String)">
      <summary>Carga un <see cref="T:System.IO.Stream" /> de origen para un lector XAML y devuelve un gráfico de objetos.</summary>
      <param name="fileName">Nombre del archivo que se va a cargar y usar como origen.</param>
      <returns>Gráfico de objetos que se devuelve.</returns>
      <exception cref="T:System.ArgumentNullException">La entrada de <paramref name="fileName" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.Xaml.XamlReader)">
      <summary>Carga una implementación de lector XAML concreta y devuelve un gráfico de objetos.</summary>
      <param name="xamlReader">Implementación de lector XAML que se va a utilizar como lector para esta operación <see langword="Load" />.</param>
      <returns>Gráfico de objetos que se devuelve.</returns>
      <exception cref="T:System.ArgumentNullException">La entrada de <paramref name="xamlReader" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Load(System.Xml.XmlReader)">
      <summary>Carga una implementación de lector XML concreta y devuelve un gráfico de objetos.</summary>
      <param name="xmlReader">Implementación de <see cref="T:System.Xml.XmlReader" /> que se va a utilizar como lector para esta operación <see langword="Load" />.</param>
      <returns>Gráfico de objetos de salida.</returns>
      <exception cref="T:System.ArgumentNullException">La entrada de <paramref name="xamlReader" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Parse(System.String)">
      <summary>Lee XAML como una cadena y devuelve un gráfico de objetos.</summary>
      <param name="xaml">Entrada de cadena XAML que se va a analizar.</param>
      <returns>Gráfico de objetos que se devuelve.</returns>
      <exception cref="T:System.ArgumentNullException">La entrada de <paramref name="xaml" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.IO.Stream,System.Object)">
      <summary>Procesa el gráfico de objetos proporcionado en una representación de nodos XAML y, a continuación, en un flujo de salida para la serialización.</summary>
      <param name="stream">Flujo de destino.</param>
      <param name="instance">Raíz del gráfico de objetos que se va a procesar.</param>
      <exception cref="T:System.ArgumentNullException">La entrada de <paramref name="stream" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.IO.TextWriter,System.Object)">
      <summary>Procesa el gráfico de objetos proporcionado en una representación de nodos XAML y, a continuación, en una salida que se dirige al objeto <see cref="T:System.IO.TextWriter" /> proporcionado.</summary>
      <param name="writer">
        <see cref="T:System.IO.TextWriter" /> que escribe la salida.</param>
      <param name="instance">Raíz del gráfico de objetos que se va a procesar.</param>
      <exception cref="T:System.ArgumentNullException">La entrada de <paramref name="writer" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.Object)">
      <summary>Procesa el árbol de objetos proporcionado en una representación de nodos XAML y devuelve una representación de cadena del XAML de salida.</summary>
      <param name="instance">Raíz del gráfico de objetos que se va a procesar.</param>
      <returns>Marcado XAML en forma de cadena.</returns>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.String,System.Object)">
      <summary>Procesa el gráfico de objetos proporcionado en una representación de nodos XAML y, a continuación, lo escribe en un archivo de salida en la ubicación especificada.</summary>
      <param name="fileName">Nombre y ubicación del archivo en el que se va a escribir la salida.</param>
      <param name="instance">Raíz del gráfico de objetos que se va a procesar.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="fileName" /> es una cadena vacía.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.Xaml.XamlWriter,System.Object)">
      <summary>Procesa el gráfico de objetos proporcionado en una representación de nodos XAML y, a continuación, lo escribe en el sistema de escritura XAML especificado.</summary>
      <param name="writer">Implementación de <see cref="T:System.Xaml.XamlWriter" /> que se va a usar.</param>
      <param name="instance">Raíz del gráfico de objetos que se va a procesar.</param>
      <exception cref="T:System.ArgumentNullException">La entrada de <paramref name="writer" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Save(System.Xml.XmlWriter,System.Object)">
      <summary>Procesa el gráfico de objetos proporcionado en una representación de nodos XAML y, a continuación, lo escribe en el objeto <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="writer">Implementación de <see cref="T:System.Xml.XmlWriter" /> que se va a usar.</param>
      <param name="instance">Raíz del gráfico de objetos que se va a procesar.</param>
      <exception cref="T:System.ArgumentNullException">La entrada de <paramref name="writer" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter)">
      <summary>Conecta un objeto <see cref="T:System.Xaml.XamlReader" /> y un objeto <see cref="T:System.Xaml.XamlWriter" /> para usar un intermediario de conjunto de nodos XAML común. Puede transformar el contenido dependiendo de los tipos de lectores y sistemas de escritura que se proporcionen.</summary>
      <param name="xamlReader">Implementación de <see cref="T:System.Xaml.XamlReader" /> que se va a usar.</param>
      <param name="xamlWriter">Objeto <see cref="T:System.Xaml.XamlWriter" /> que se va a usar.</param>
      <exception cref="T:System.ArgumentNullException">La entrada de <paramref name="xamlReader" /> o <paramref name="xamlWriter" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xaml.XamlException">El contexto de esquema XAML no coincide con los <paramref name="xamlReader" /> y <paramref name="xamlWriter" /> proporcionados.</exception>
    </member>
    <member name="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter,System.Boolean)">
      <summary>Conecta un objeto <see cref="T:System.Xaml.XamlReader" /> y un objeto <see cref="T:System.Xaml.XamlWriter" /> para usar un intermediario de conjunto de nodos XAML común. Puede transformar el contenido dependiendo de los tipos de lectores y sistemas de escritura que se proporcionen. Proporciona un parámetro para especificar si el sistema de escritura se va a cerrar después de que se complete la llamada.</summary>
      <param name="xamlReader">Implementación de <see cref="T:System.Xaml.XamlReader" /> que se va a usar.</param>
      <param name="xamlWriter">Objeto <see cref="T:System.Xaml.XamlWriter" /> que se va a usar.</param>
      <param name="closeWriter">Es <see langword="true" /> para que se cierre el sistema de escritura una vez completada la llamada; es <see langword="false" /> para que el sistema de escritura se mantenga activo en la última posición de escritura.</param>
      <exception cref="T:System.ArgumentNullException">La entrada de <paramref name="xamlReader" /> o <paramref name="xamlWriter" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xaml.XamlException">El contexto de esquema XAML no coincide con los <paramref name="xamlReader" /> y <paramref name="xamlWriter" /> proporcionados.</exception>
    </member>
    <member name="T:System.Xaml.XamlType">
      <summary>Informa de los tipos XAML como parte del sistema XAML global implementado en los servicios XAML de .NET Framework.</summary>
    </member>
    <member name="M:System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlType" />, basándose en un nombre de cadena para el tipo.</summary>
      <param name="typeName">Nombre del tipo que se va a crear.</param>
      <param name="typeArguments">Argumentos de tipo para un objeto <see cref="T:System.Xaml.XamlType" /> que representa un tipo genérico. Puede ser (y a menudo es) <see langword="null" />, lo que indica que el tipo representado no es un tipo genérico.</param>
      <param name="schemaContext">Contexto de esquema XAML para lectores XAML y sistemas de escritura XAML.</param>
      <exception cref="T:System.ArgumentNullException">Uno o varios <paramref name="typeName" /> o <paramref name="schemaContext" /> son <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlType" />, basándose en el espacio de nombres XAML y un nombre de cadena para el tipo. Este constructor es exclusivamente para el análisis y la grabación de nodos XAML de usos de tipos que se sabe que no tienen correspondencia en el sistema de tipos auxiliar y el contexto de esquema de XAML.</summary>
      <param name="unknownTypeNamespace">Espacio de nombres XAML del tipo, en forma de cadena.</param>
      <param name="unknownTypeName">Nombre del tipo en el espacio de nombres XAML especificado por el parámetro <paramref name="unknownTypeNamespace" />.</param>
      <param name="typeArguments">Argumentos de tipo para un objeto <see cref="T:System.Xaml.XamlType" /> que representa un tipo genérico. Puede ser (y a menudo es) <see langword="null" />, lo que indica que el tipo representado no es un tipo genérico.</param>
      <param name="schemaContext">Contexto de esquema XAML para lectores XAML o sistemas de escritura XAML.</param>
      <exception cref="T:System.ArgumentNullException">Uno o varios de los valores de <paramref name="unknownTypeNamespace" />, <paramref name="unknownTypeName" /> o <paramref name="schemaContext" /> son <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlType" />, basándose en la información del tipo subyacente de CLR.</summary>
      <param name="underlyingType">Objeto <see cref="T:System.Type" /> subyacente de CLR para el tipo XAML que se va a construir.</param>
      <param name="schemaContext">Contexto de esquema XAML para lectores XAML o sistemas de escritura XAML.</param>
      <exception cref="T:System.ArgumentNullException">Uno o varios <paramref name="underlyingType" /> o <paramref name="schemaContext" /> son <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlType" />, basándose en la información del tipo subyacente y una implementación de <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</summary>
      <param name="underlyingType">Tipo subyacente del tipo XAML que se va a construir.</param>
      <param name="schemaContext">Contexto de esquema XAML para el lector XAML.</param>
      <param name="invoker">Implementación de <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> que administra las llamadas de reflexión en tiempo de ejecución al objeto <see cref="T:System.Xaml.XamlType" />.</param>
      <exception cref="T:System.ArgumentNullException">Uno o varios <paramref name="underlyingType" /> o <paramref name="schemaContext" /> son <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlType.AllowedContentTypes">
      <summary>Obtiene una colección de solo lectura de los tipos que se pueden usar como valor de la propiedad <see cref="P:System.Xaml.XamlType.ContentProperty" /> de este objeto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Colección de solo lectura de los posibles tipos de contenido.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.BaseType">
      <summary>Obtiene el objeto <see cref="T:System.Xaml.XamlType" /> para el tipo base inmediato de este tipo XAML. La determinación de este valor se basa en el tipo subyacente de este objeto <see cref="T:System.Xaml.XamlType" /> y el contexto de esquema.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> para el tipo base inmediato de este tipo XAML.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)">
      <summary>Devuelve un valor que indica si una instancia de este tipo <see cref="T:System.Xaml.XamlType" /> tiene el tipo <see cref="T:System.Xaml.XamlType" /> especificado en su lista de tipos asignables.</summary>
      <param name="xamlType">Tipo que se va a comparar con el tipo <see cref="T:System.Xaml.XamlType" /> actual.</param>
      <returns>Es <see langword="true" /> si <paramref name="xamlType" /> está en la lista de tipos asignables; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ConstructionRequiresArguments">
      <summary>Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> debe tener argumentos (restricciones genéricas mediante <see langword="x:TypeArguments" />, texto de inicialización u otras técnicas de XAML) para construir una instancia válida del tipo.</summary>
      <returns>Es <see langword="true" /> si la construcción de una instancia necesita valores de argumento; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ContentProperty">
      <summary>Obtiene información sobre <see cref="T:System.Xaml.XamlMember" /> para la propiedad de contenido de este objeto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Información sobre <see cref="T:System.Xaml.XamlMember" /> para la propiedad de contenido de este objeto <see cref="T:System.Xaml.XamlType" />. Su valor puede ser <see langword="null" /> si no existe ninguna propiedad de contenido.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ContentWrappers">
      <summary>Obtiene los tipos que se usan para encapsular el contenido de una propiedad de contenido cuando no es una coincidencia exacta de tipos, como cadenas en un objeto <see langword="Collection&lt;T&gt;" /> fuertemente tipado.</summary>
      <returns>Colección de solo lectura de los posibles tipos de contenedor de contenido; de lo contrario, es <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.DeferringLoader">
      <summary>Obtiene el objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> que representa el comportamiento de la conversión de carga aplazada para este tipo.</summary>
      <returns>
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con restricción <see cref="T:System.Xaml.XamlDeferringLoader" /> que representa el comportamiento de carga diferido para este tipo.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.Equals(System.Object)">
      <summary>Indica si el objeto actual es igual que otro objeto.</summary>
      <param name="obj">Objeto que se va a comparar con este objeto.</param>
      <returns>
        <see langword="true" /> si el objeto actual es igual al parámetro <paramref name="obj" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.Equals(System.Xaml.XamlType)">
      <summary>Indica si el objeto actual es igual a otro objeto del mismo tipo.</summary>
      <param name="other">Objeto que se va a comparar con este objeto.</param>
      <returns>
        <see langword="true" /> si el objeto actual es igual al parámetro <paramref name="other" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetAliasedProperty(System.Xaml.XamlDirective)">
      <summary>Devuelve el miembro XAML para el que se ha establecido como alias una directiva XAML mediante este objeto <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="directive">Directiva para la cual se busca el miembro con alias.</param>
      <returns>Miembro con alias, si se encuentra; de lo contrario, devuelve <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetAllAttachableMembers">
      <summary>Devuelve una colección que contiene todas las propiedades adjuntables expuestas por este objeto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Colección que contiene cero o más valores de <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetAllMembers">
      <summary>Devuelve una colección que contiene todos los miembros expuestos por este objeto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Colección que contiene cero o más valores de <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetAttachableMember(System.String)">
      <summary>Devuelve un <see cref="T:System.Xaml.XamlMember" /> que representa un miembro adjuntable con nombre específico de este <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="name">Nombre del miembro adjuntable que se va a obtener, en el formulario <c>ownerTypeName.MemberName</c>.</param>
      <returns>Objeto <see cref="T:System.Xaml.XamlMember" /> para el miembro adjuntable solicitado; de lo contrario, <see langword="null" />, si no existe ningún miembro adjuntable con ese nombre.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetHashCode">
      <summary>Devuelve el código hash de este objeto.</summary>
      <returns>Código hash entero.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetMember(System.String)">
      <summary>Devuelve un objeto <see cref="T:System.Xaml.XamlMember" /> para un miembro con nombre específico de este tipo <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="name">Nombre del miembro que se va a obtener (en forma de cadena).</param>
      <returns>Información de <see cref="T:System.Xaml.XamlMember" /> para el miembro, si se encuentra alguno; de lo contrario, devuelve <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetPositionalParameters(System.Int32)">
      <summary>Para los tipos de extensión de marcado, devuelve los tipos de los parámetros posicionales admitidos en un uso específico de las extensiones de marcado para este objeto <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="parameterCount">Número de parámetros del modo de sintaxis o constructor del que se va a obtener información.</param>
      <returns>Lista de valores de <see cref="T:System.Xaml.XamlType" />, donde cada <see cref="T:System.Xaml.XamlType" /> es el tipo para esa posición en la sintaxis. Es preciso especificar los tipos en el mismo orden al proporcionar entradas de marcado para la extensión de marcado.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.GetXamlNamespaces">
      <summary>Devuelve una lista de identificadores de cadena para los espacios de nombres XAML que incluyen el tipo.</summary>
      <returns>Lista de valores de cadena, donde cada cadena es el identificador URI de un espacio de nombres XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.Invoker">
      <summary>Obtiene la implementación de <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> que está asociada a este objeto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Implementación de <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> que está asociada a este objeto <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsAmbient">
      <summary>Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo de ambiente según la definición de XAML.</summary>
      <returns>Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo de ambiente; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsArray">
      <summary>Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa una matriz.</summary>
      <returns>Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa una matriz; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsCollection">
      <summary>Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa una colección.</summary>
      <returns>Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa una colección; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsConstructible">
      <summary>Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo que se puede construir según la definición de XAML.</summary>
      <returns>Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo que se puede construir; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsDictionary">
      <summary>Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa un diccionario según la definición de XAML.</summary>
      <returns>Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa un diccionario; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsGeneric">
      <summary>Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo genérico.</summary>
      <returns>Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo genérico; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsMarkupExtension">
      <summary>Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa una extensión de marcado.</summary>
      <returns>Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa una extensión de marcado; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsNameScope">
      <summary>Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa un ámbito de nombres XAML según la definición de XAML.</summary>
      <returns>Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa un ámbito de nombres XAML; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsNameValid">
      <summary>Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> se inicializa usando una cadena <see langword="xamlName" /> válida como valor de su propiedad <see cref="P:System.Xaml.XamlType.Name" />.</summary>
      <returns>Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> se inicializa usando una cadena <see langword="xamlName" /> válida; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsNullable">
      <summary>Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo que acepta valores NULL según la definición de XAML.</summary>
      <returns>Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo que acepta valores NULL; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsPublic">
      <summary>Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo público en el sistema de tipos adecuado.</summary>
      <returns>Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo público; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsUnknown">
      <summary>Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo que no se puede resolver en el sistema de tipos subyacente.</summary>
      <returns>Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo que no se puede resolver; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsUsableDuringInitialization">
      <summary>Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> se compila de forma descendente durante la inicialización de XAML.</summary>
      <returns>Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> se compila de forma descendente durante la inicialización de XAML; de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsWhitespaceSignificantCollection">
      <summary>Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa una colección con espacio en blanco significativo, según la definición de XML.</summary>
      <returns>Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa una colección con espacio en blanco significativo; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.IsXData">
      <summary>Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa <see langword="XDATA" /> en XML según la definición de XAML.</summary>
      <returns>Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa <see langword="XDATA" />; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ItemType">
      <summary>Obtiene un valor que proporciona información de tipo para la propiedad <see langword="Items" /> de este objeto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Objeto <see cref="T:System.Xaml.XamlType" /> para el tipo de los elementos de la colección; de lo contrario, es <see langword="null" /> si este objeto <see cref="T:System.Xaml.XamlType" /> no representa una colección.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.KeyType">
      <summary>Obtiene un valor que proporciona información de tipo para la propiedad de la clave de este objeto <see cref="T:System.Xaml.XamlType" />, si <see cref="T:System.Xaml.XamlType" /> representa un diccionario.</summary>
      <returns>Objeto <see cref="T:System.Xaml.XamlType" /> que corresponde al tipo de la clave para el uso del diccionario; de lo contrario, es <see langword="null" />, si este objeto <see cref="T:System.Xaml.XamlType" /> no representa un diccionario.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)">
      <summary>Devuelve el miembro XAML para el que se ha establecido como alias una directiva XAML mediante este objeto <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="directive">Directiva para la cual se busca el miembro con alias.</param>
      <returns>Miembro con alias, si se encuentra; de lo contrario, devuelve <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAllAttachableMembers">
      <summary>Devuelve un conjunto enumerable que contiene todas las propiedades adjuntables expuestas por este objeto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Conjunto enumerable que contiene cero o más valores de <see cref="T:System.Xaml.XamlMember" />; de lo contrario, es <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAllMembers">
      <summary>Devuelve un conjunto enumerable que contiene todos los miembros expuestos por este objeto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Conjunto enumerable que contiene cero o más valores de <see cref="T:System.Xaml.XamlMember" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAllowedContentTypes">
      <summary>Devuelve una lista de los tipos que se pueden usar como valor de la propiedad <see cref="P:System.Xaml.XamlType.ContentProperty" /> de este objeto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Lista de posibles tipos de contenido.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupAttachableMember(System.String)">
      <summary>Devuelve un <see cref="T:System.Xaml.XamlMember" /> para un adjuntable con nombre especificado en este <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="name">Nombre del miembro adjuntable que se va a obtener, en el formulario <c>ownerTypeName.MemberName</c>.</param>
      <returns>Objeto <see cref="T:System.Xaml.XamlMember" /> para el miembro adjuntable solicitado; de lo contrario, <see langword="null" />, si no existe ningún miembro adjuntable con ese nombre.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupBaseType">
      <summary>Devuelve el objeto <see cref="T:System.Xaml.XamlType" /> para el tipo base inmediato de este tipo XAML. La determinación de este valor se basa en el tipo subyacente de este objeto <see cref="T:System.Xaml.XamlType" /> y el contexto de esquema.</summary>
      <returns>
        <see cref="T:System.Xaml.XamlType" /> para el tipo base inmediato de este tipo XAML.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupCollectionKind">
      <summary>Devuelve un valor de la enumeración <see cref="T:System.Xaml.Schema.XamlCollectionKind" /> que declara el tipo de colección que este objeto <see cref="T:System.Xaml.XamlType" /> usa.</summary>
      <returns>Valor de la enumeración <see cref="T:System.Xaml.Schema.XamlCollectionKind" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupConstructionRequiresArguments">
      <summary>Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> debe tener argumentos (restricciones genéricas a través de <see langword="x:TypeArguments" />, texto de inicialización u otras técnicas de XAML) para construir una instancia válida del tipo.</summary>
      <returns>Es <see langword="true" /> si la construcción de una instancia necesita valores de argumento; de lo contrario, es false.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupContentProperty">
      <summary>Devuelve información sobre <see cref="T:System.Xaml.XamlMember" /> para la propiedad de contenido de este objeto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Información sobre <see cref="T:System.Xaml.XamlMember" /> para la propiedad de contenido de este objeto <see cref="T:System.Xaml.XamlType" />. Puede ser <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupContentWrappers">
      <summary>Obtiene una lista de valores de <see cref="T:System.Xaml.XamlType" /> que representan los contenedores de contenido de este objeto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Lista de valores de <see cref="T:System.Xaml.XamlType" /> que representan los contenedores de contenido de este objeto <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupCustomAttributeProvider">
      <summary>Cuando se implementa en una clase derivada, devuelve una implementación de <see cref="T:System.Reflection.ICustomAttributeProvider" />.</summary>
      <returns>Implementación de <see cref="T:System.Reflection.ICustomAttributeProvider" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupDeferringLoader">
      <summary>Devuelve un objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, que se emplea para la carga aplazada de objetos declarados en XAML.</summary>
      <returns>
        <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> que tiene una restricción <see cref="T:System.Xaml.XamlDeferringLoader" /> en el genérico.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupInvoker">
      <summary>Devuelve un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> que está asociado con este <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Información de <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> para este <see cref="T:System.Xaml.XamlType" />; de lo contrario, es <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsAmbient">
      <summary>Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo de ambiente según la definición de XAML.</summary>
      <returns>Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo de ambiente; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsConstructible">
      <summary>Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo que se puede construir según la definición de XAML.</summary>
      <returns>Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo que se puede construir; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsMarkupExtension">
      <summary>Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa una extensión de marcado.</summary>
      <returns>Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa una extensión de marcado; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsNameScope">
      <summary>Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa un ámbito de nombres XAML según la definición de XAML.</summary>
      <returns>Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa un ámbito de nombres XAML; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsNullable">
      <summary>Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo que acepta valores NULL según la definición de XAML.</summary>
      <returns>Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo que acepta valores NULL; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsPublic">
      <summary>Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo público en el sistema de tipos adecuado.</summary>
      <returns>Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo público; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsUnknown">
      <summary>Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo que no se puede resolver en el sistema de tipos subyacente.</summary>
      <returns>Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo que no se puede resolver; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection">
      <summary>Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa una colección con espacio en blanco significativo, según la definición de XML.</summary>
      <returns>Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa una colección con espacio en blanco significativo; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupIsXData">
      <summary>Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> representa <see langword="XDATA" /> en XML según la definición de XAML.</summary>
      <returns>Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa <see langword="XDATA" />; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupItemType">
      <summary>Devuelve un valor que proporciona información de tipo para la propiedad <see langword="Items" /> de este objeto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Objeto <see cref="T:System.Xaml.XamlType" /> para el tipo de los elementos de la colección; de lo contrario, es <see langword="null" /> si este objeto <see cref="T:System.Xaml.XamlType" /> no representa una colección.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupKeyType">
      <summary>Devuelve un valor que proporciona información de tipo para la propiedad de clave de este objeto <see cref="T:System.Xaml.XamlType" /> si <see cref="T:System.Xaml.XamlType" /> representa un diccionario.</summary>
      <returns>Objeto <see cref="T:System.Xaml.XamlType" /> del tipo de la clave que representa un diccionario o <see langword="null" /> si este objeto <see cref="T:System.Xaml.XamlType" /> no representa un diccionario.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupMarkupExtensionReturnType">
      <summary>Devuelve un valor que proporciona información de tipo para el valor devuelto de <see langword="ProvideValue" /> de este objeto <see cref="T:System.Xaml.XamlType" /> si representa una extensión de marcado.</summary>
      <returns>Objeto <see cref="T:System.Xaml.XamlType" /> del tipo de valor devuelto que representa una extensión de marcado; de lo contrario, es <see langword="null" /> si <see cref="T:System.Xaml.XamlType" /> no representa una extensión de marcado.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupMember(System.String,System.Boolean)">
      <summary>Devuelve el objeto <see cref="T:System.Xaml.XamlMember" /> para un miembro con nombre específico de este tipo <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="name">Nombre del miembro que se va a obtener (en forma de cadena).</param>
      <param name="skipReadOnlyCheck">Es <see langword="true" /> para devolver un miembro aunque dicho miembro tenga el valor <see langword="true" /> para la propiedad <see cref="P:System.Xaml.XamlMember.IsReadOnly" />; es <see langword="false" /> para no devolver ningún miembro con la propiedad <see cref="P:System.Xaml.XamlMember.IsReadOnly" />. De manera predeterminada, es <see langword="false" />.</param>
      <returns>Información de <see cref="T:System.Xaml.XamlMember" /> para el miembro, si se encuentra; de lo contrario, devuelve <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupPositionalParameters(System.Int32)">
      <summary>Para los tipos de extensión de marcado, devuelve los tipos de los parámetros posicionales admitidos en un uso específico de las extensiones de marcado para este objeto <see cref="T:System.Xaml.XamlType" />.</summary>
      <param name="parameterCount">Número de parámetros del modo de sintaxis o constructor del que se va a obtener información.</param>
      <returns>Lista de valores de <see cref="T:System.Xaml.XamlType" />, donde cada <see cref="T:System.Xaml.XamlType" /> es el tipo para esa posición en la sintaxis. Es preciso especificar esos tipos en el mismo orden al proporcionar entradas de marcado para la extensión de marcado.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupSetMarkupExtensionHandler">
      <summary>Devuelve una devolución de llamada de controlador que se va a usar para establecer las extensiones de marcado.</summary>
      <returns>Devolución de llamada de controlador que se va a usar para establecer las extensiones de marcado.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupSetTypeConverterHandler">
      <summary>Devuelve un controlador que se va a usar para establecer el convertidor de tipos.</summary>
      <returns>Controlador que se va a usar para establecer el convertidor de tipos.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupTrimSurroundingWhitespace">
      <summary>Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> debe serializarse en un modo que recorte el espacio en blanco circundante.</summary>
      <returns>Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> debe serializarse en un modo que recorte el espacio en blanco circundante; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupTypeConverter">
      <summary>Devuelve un objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> que tiene una restricción <see cref="T:System.ComponentModel.TypeConverter" />, que representa el comportamiento de la conversión de tipos para los valores de este objeto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con la restricción <see cref="T:System.ComponentModel.TypeConverter" /> que representa el comportamiento de la conversión de tipos para los valores de este objeto <see cref="T:System.Xaml.XamlType" />; de lo contrario, es <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupUnderlyingType">
      <summary>Devuelve el objeto <see cref="T:System.Type" /> de CLR subyacente a este objeto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Objeto <see cref="T:System.Type" /> de CLR subyacente a este objeto <see cref="T:System.Xaml.XamlType" />; de lo contrario, es <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupUsableDuringInitialization">
      <summary>Devuelve un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> se compila de forma descendente durante la inicialización de XAML.</summary>
      <returns>Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> se compila de forma descendente durante la inicialización de XAML; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.LookupValueSerializer">
      <summary>Devuelve un objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> que tiene una restricción <see cref="T:System.Windows.Markup.ValueSerializer" />, que representa el comportamiento de serialización para los valores de este objeto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con la restricción <see cref="T:System.Windows.Markup.ValueSerializer" /> que representa el comportamiento de serialización para los valores de este objeto <see cref="T:System.Xaml.XamlType" />; de lo contrario, es <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.MarkupExtensionReturnType">
      <summary>Obtiene un valor que proporciona información de tipo para el valor devuelto de <see langword="ProvideValue" /> de este objeto <see cref="T:System.Xaml.XamlType" /> si representa una extensión de marcado.</summary>
      <returns>Objeto <see cref="T:System.Xaml.XamlType" /> del tipo de valor devuelto que representa una extensión de marcado; de lo contrario, es <see langword="null" /> si <see cref="T:System.Xaml.XamlType" /> no representa una extensión de marcado.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.Name">
      <summary>Obtiene el nombre de cadena del tipo representado por este objeto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Nombre de cadena de este tipo XAML.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)">
      <summary>Determina si dos objetos <see cref="T:System.Xaml.XamlType" /> especificados tienen el mismo valor.</summary>
      <param name="xamlType1">
        <see cref="T:System.Xaml.XamlType" /> o <see langword="null" />.</param>
      <param name="xamlType2">
        <see cref="T:System.Xaml.XamlType" /> o <see langword="null" />.</param>
      <returns>Es <see langword="true" /> si el valor de <paramref name="xamlType1" /> es igual al valor de <paramref name="xamlType2" />; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)">
      <summary>Determina si dos objetos <see cref="T:System.Xaml.XamlType" /> especificados tienen valores diferentes.</summary>
      <param name="xamlType1">
        <see cref="T:System.Xaml.XamlType" /> o <see langword="null" />.</param>
      <param name="xamlType2">
        <see cref="T:System.Xaml.XamlType" /> o <see langword="null" />.</param>
      <returns>Es <see langword="true" /> si el valor de <paramref name="xamlType1" /> es diferente del valor de <paramref name="xamlType2" />; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.PreferredXamlNamespace">
      <summary>Obtiene el espacio de nombres XAML primario de este objeto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Identificador, en forma de cadena, del espacio de nombres XAML primario de este tipo XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.SchemaContext">
      <summary>Obtiene el objeto <see cref="T:System.Xaml.XamlSchemaContext" /> activo para procesar este objeto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Objeto <see cref="T:System.Xaml.XamlSchemaContext" /> activo para procesar este objeto <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlType.ToString">
      <summary>Devuelve una representación de cadena de este objeto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Representación de cadena de este objeto <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.TrimSurroundingWhitespace">
      <summary>Obtiene un valor que indica si este objeto <see cref="T:System.Xaml.XamlType" /> dispone de un comportamiento de serialización con control del espacio en blanco para recortar el espacio en blanco circundante en su contenido.</summary>
      <returns>Es <see langword="true" /> si este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo que recorta el espacio en blanco; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.TypeArguments">
      <summary>Obtiene una lista de argumentos de tipo para los casos en los que este objeto <see cref="T:System.Xaml.XamlType" /> representa un tipo genérico.</summary>
      <returns>Lista de argumentos de tipo; de lo contrario, es <see langword="null" /> si este objeto <see cref="T:System.Xaml.XamlType" /> no representa un tipo genérico.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.TypeConverter">
      <summary>Obtiene un objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con la restricción <see cref="T:System.ComponentModel.TypeConverter" /> que representa el comportamiento de la conversión de tipos para los valores de este objeto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con la restricción <see cref="T:System.ComponentModel.TypeConverter" /> que representa el comportamiento de la conversión de tipos para los valores de este objeto <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.UnderlyingType">
      <summary>Obtiene el objeto <see cref="T:System.Type" /> de CLR subyacente a este objeto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Objeto <see cref="T:System.Type" /> de CLR subyacente a este objeto <see cref="T:System.Xaml.XamlType" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlType.ValueSerializer">
      <summary>Obtiene un objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con la restricción <see cref="T:System.Windows.Markup.ValueSerializer" /> que representa el comportamiento de serialización para los valores de este objeto <see cref="T:System.Xaml.XamlType" />.</summary>
      <returns>Objeto <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> con la restricción <see cref="T:System.Windows.Markup.ValueSerializer" /> que representa el comportamiento de serialización para los valores de este objeto <see cref="T:System.Xaml.XamlType" />; de lo contrario, es <see langword="null" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlWriter">
      <summary>Proporciona las definiciones de la implementación predeterminada y de clase base para un sistema de escritura XAML. No es un sistema de escritura XAML predeterminado activo; debe derivar de <see cref="T:System.Xaml.XamlWriter" /> e implementar sus miembros abstractos o emplear una clase derivada <see cref="T:System.Xaml.XamlWriter" /> existente.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlWriter" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.Close">
      <summary>Cierra el objeto de sistema de escritura XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.Dispose(System.Boolean)">
      <summary>Libera los recursos no administrados que usa <see cref="T:System.Xaml.XamlWriter" /> y, de forma opcional, libera los recursos administrados.</summary>
      <param name="disposing">Es <see langword="true" /> para liberar los recursos administrados; de lo contrario, es <see langword="false" />.</param>
    </member>
    <member name="P:System.Xaml.XamlWriter.IsDisposed">
      <summary>Obtiene un valor que indica si se ha llamado al método <see cref="M:System.Xaml.XamlWriter.Dispose(System.Boolean)" />.</summary>
      <returns>
        <see langword="true" /> si se ha llamado a <see cref="M:System.Xaml.XamlWriter.Dispose(System.Boolean)" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlWriter.SchemaContext">
      <summary>Cuando se implementa en una clase derivada, obtiene el contexto de esquema XAML activo.</summary>
      <returns>Contexto de esquema XAML activo.</returns>
    </member>
    <member name="M:System.Xaml.XamlWriter.System#IDisposable#Dispose">
      <summary>Vea <see cref="M:System.IDisposable.Dispose" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteEndMember">
      <summary>Cuando se implementa en una clase derivada, produce la representación de un nodo de miembro final.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteEndObject">
      <summary>Cuando se implementa en una clase derivada, produce la representación de un nodo de objeto final.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteGetObject">
      <summary>Cuando se implementa en una clase derivada, produce un objeto para los casos en los que el objeto es un valor predeterminado o implícito de la propiedad que se está estableciendo, en lugar de especificarse como un valor de objeto discreto en el conjunto de nodos XAML de entrada.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
      <summary>Cuando se implementa en una clase derivada, escribe un nodo de declaración de espacio de nombres XAML.</summary>
      <param name="namespaceDeclaration">Declaración de espacio de nombres que se va a escribir.</param>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteNode(System.Xaml.XamlReader)">
      <summary>Realiza el cambio basándose en el tipo de nodo del lector XAML (<see cref="P:System.Xaml.XamlReader.NodeType" />) y llama al método <see langword="Write" /> pertinente para la implementación del sistema de escritura.</summary>
      <param name="reader">Lector que se va a usar para determinar el nodo.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> es <see langword="null" />.</exception>
      <exception cref="T:System.NotImplementedException">La implementación predeterminada encontró <see cref="T:System.Xaml.XamlNodeType" /> que no está en la enumeración predeterminada.</exception>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteStartMember(System.Xaml.XamlMember)">
      <summary>Cuando se implementa en una clase derivada, escribe la representación de un nodo de miembro inicial.</summary>
      <param name="xamlMember">Nodo de miembro que se va a escribir.</param>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteStartObject(System.Xaml.XamlType)">
      <summary>Cuando se implementa en una clase derivada, escribe la representación de un nodo de objeto inicial.</summary>
      <param name="type">Tipo XAML del objeto que se va a escribir.</param>
    </member>
    <member name="M:System.Xaml.XamlWriter.WriteValue(System.Object)">
      <summary>Cuando se implementa en una clase derivada, escribe un nodo de valor.</summary>
      <param name="value">Valor que se va a escribir.</param>
    </member>
    <member name="T:System.Xaml.XamlWriterSettings">
      <summary>Proporciona los valores de inicialización para una implementación de <see cref="T:System.Xaml.XamlWriter" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriterSettings.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlWriterSettings" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlWriterSettings.#ctor(System.Xaml.XamlWriterSettings)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlWriterSettings" /> usando otra instancia de configuración existente.</summary>
      <param name="settings">Objeto <see cref="T:System.Xaml.XamlWriterSettings" /> existente.</param>
    </member>
    <member name="T:System.Xaml.XamlXmlReader">
      <summary>Procesa el marcado XAML de los archivos XML usando un intermediario <see cref="T:System.Xml.XmlReader" /> y genera una secuencia de nodos XAML.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.Stream)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlReader" /> basándose en una secuencia.</summary>
      <param name="stream">Flujo inicial que se va a cargar en el lector.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlReader" /> basándose en una secuencia y usando un contexto de esquema XAML proporcionado.</summary>
      <param name="stream">Flujo inicial que se va a cargar en el lector.</param>
      <param name="schemaContext">Contexto de esquema XAML para el procesamiento de código XAML.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> o <paramref name="schemaContext" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlReader" />, basándose en una secuencia con un contexto de esquema XAML y unos valores específicos de XAML proporcionados.</summary>
      <param name="stream">Flujo inicial que se va a cargar en el lector.</param>
      <param name="schemaContext">Contexto de esquema XAML para el procesamiento de código XAML.</param>
      <param name="settings">Configuración específica del lector.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> o <paramref name="schemaContext" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.Stream,System.Xaml.XamlXmlReaderSettings)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlReader" /> basándose en una secuencia con una configuración específica de XAML.</summary>
      <param name="stream">Flujo inicial que se va a cargar en el lector.</param>
      <param name="settings">Configuración específica del lector.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.TextReader)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlReader" /> basándose en un objeto <see cref="T:System.IO.TextReader" />.</summary>
      <param name="textReader">
        <see cref="T:System.IO.TextReader" /> que se va utilizar para la inicialización.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textReader" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.TextReader,System.Xaml.XamlSchemaContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlReader" /> basándose en un objeto <see cref="T:System.IO.TextReader" /> con un contexto de esquema y una configuración específica de XAML proporcionados.</summary>
      <param name="textReader">
        <see cref="T:System.IO.TextReader" /> que se va utilizar para la inicialización.</param>
      <param name="schemaContext">Contexto de esquema XAML para el procesamiento de código XAML.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textReader" /> es <see langword="null" />.  
O bien 
 <paramref name="schemaContext" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.TextReader,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlReader" /> basándose en un objeto <see cref="T:System.IO.TextReader" />, usando un contexto de esquema y una configuración específica de XAML proporcionados.</summary>
      <param name="textReader">
        <see cref="T:System.IO.TextReader" /> que se va utilizar para la inicialización.</param>
      <param name="schemaContext">Contexto de esquema XAML para el procesamiento de código XAML.</param>
      <param name="settings">Configuración específica del lector.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textReader" /> es <see langword="null" />.  
O bien 
 <paramref name="schemaContext" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.IO.TextReader,System.Xaml.XamlXmlReaderSettings)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlReader" /> basándose en un objeto <see cref="T:System.IO.TextReader" /> y usando configuraciones específicas de XAML.</summary>
      <param name="textReader">
        <see cref="T:System.IO.TextReader" /> que se va utilizar para la inicialización.</param>
      <param name="settings">Configuración específica del lector.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textReader" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlReader" /> basándose en el nombre de un archivo que se va a cargar en un lector XML predeterminado.</summary>
      <param name="fileName">Nombre del archivo XML que se va a cargar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.String,System.Xaml.XamlSchemaContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlReader" /> basándose en el nombre de un archivo que se va a cargar en un lector XML predeterminado, con un contexto de esquema XAML proporcionado.</summary>
      <param name="fileName">Nombre del archivo que se va a cargar.</param>
      <param name="schemaContext">Contexto de esquema XAML para el procesamiento de código XAML.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> o <paramref name="schemaContext" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.String,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlReader" /> basándose en el nombre de un archivo que se va a cargar en un lector XML predeterminado, y usando un contexto de esquema XAML y configuraciones de lector específicas de XAML proporcionados.</summary>
      <param name="fileName">Nombre del archivo XML que se va a cargar.</param>
      <param name="schemaContext">Contexto de esquema XAML para el procesamiento de código XAML.</param>
      <param name="settings">Configuración específica del lector.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> es <see langword="null" />.  
O bien 
 <paramref name="schemaContext" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.String,System.Xaml.XamlXmlReaderSettings)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlReader" /> basándose en el nombre de un archivo que se va a cargar en un lector XML predeterminado y usando configuraciones de lector específicas de XAML.</summary>
      <param name="fileName">Nombre del archivo XML que se va a cargar.</param>
      <param name="settings">Configuración específica del lector.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.Xml.XmlReader)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlReader" /> utilizando el <see cref="T:System.Xml.XmlReader" /> proporcionado.</summary>
      <param name="xmlReader">
        <see cref="T:System.Xml.XmlReader" /> que se va a usar como procesador XML intermedio.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlReader" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.Xml.XmlReader,System.Xaml.XamlSchemaContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlReader" /> usando el objeto <see cref="T:System.Xml.XmlReader" /> y el contexto de esquema proporcionados.</summary>
      <param name="xmlReader">
        <see cref="T:System.Xml.XmlReader" /> que se va a usar como procesador XML intermedio.</param>
      <param name="schemaContext">Contexto de esquema XAML para el procesamiento de código XAML.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlReader" /> o <paramref name="schemaContext" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.Xml.XmlReader,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlReaderSettings)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlReader" /> usando el objeto <see cref="T:System.Xml.XmlReader" />, el contexto de esquema y la configuración del lector proporcionados.</summary>
      <param name="xmlReader">
        <see cref="T:System.Xml.XmlReader" /> que se va a usar como procesador XML intermedio.</param>
      <param name="schemaContext">Contexto de esquema XAML para el procesamiento de código XAML.</param>
      <param name="settings">Configuración específica del lector XAML.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlReader" /> o <paramref name="schemaContext" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.#ctor(System.Xml.XmlReader,System.Xaml.XamlXmlReaderSettings)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlReader" /> usando el objeto <see cref="T:System.Xml.XmlReader" /> y la configuración del lector proporcionados.</summary>
      <param name="xmlReader">
        <see cref="T:System.Xml.XmlReader" /> que se va a usar como procesador XML intermedio.</param>
      <param name="settings">Configuración específica del lector XAML.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlReader" /> o <paramref name="schemaContext" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.HasLineInfo">
      <summary>Obtiene un valor que especifica si la información de línea está disponible.</summary>
      <returns>Es <see langword="true" /> si la información de línea está disponible; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.IsEof">
      <summary>Obtiene un valor que indica si el lector se encuentra al final del archivo en la secuencia de nodos XAML.</summary>
      <returns>Es <see langword="true" /> si la posición está en el final conceptual del archivo en la secuencia de nodos; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.LineNumber">
      <summary>Obtiene el número de línea que se va a notificar.</summary>
      <returns>Número de línea que se va a notificar.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.LinePosition">
      <summary>Obtiene la posición de línea que se va a notificar.</summary>
      <returns>Posición de línea que se va a notificar.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.Member">
      <summary>Obtiene el miembro actual en la posición del lector si la posición actual del lector se encuentra en un objeto <see cref="F:System.Xaml.XamlNodeType.StartMember" />.</summary>
      <returns>Miembro actual o <see langword="null" /> si la posición actual del lector no se encuentra en un miembro.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.Namespace">
      <summary>Obtiene el espacio de nombres XAML del nodo actual.</summary>
      <returns>Espacio de nombres XAML del nodo actual si está disponible; de lo contrario, es <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.NodeType">
      <summary>Obtiene el tipo del nodo actual.</summary>
      <returns>Valor de la enumeración <see cref="T:System.Xaml.XamlNodeType" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlXmlReader.Read">
      <summary>Proporciona el siguiente nodo XAML del origen cargado, si hay un nodo XAML disponible.</summary>
      <returns>Es <see langword="true" /> si hay un nodo disponible; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.SchemaContext">
      <summary>Obtiene un objeto que proporciona información de esquema para el conjunto de información.</summary>
      <returns>Objeto que proporciona información de esquema para el conjunto de información.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.Type">
      <summary>Obtiene el objeto <see cref="T:System.Xaml.XamlType" /> del nodo actual.</summary>
      <returns>Objeto <see cref="T:System.Xaml.XamlType" /> del nodo actual o <see langword="null" /> si la posición no se encuentra en un objeto.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReader.Value">
      <summary>Obtiene el valor del nodo actual.</summary>
      <returns>Valor del nodo actual o <see langword="null" /> si la posición no se encuentra en un tipo de nodo <see cref="F:System.Xaml.XamlNodeType.Value" />.</returns>
    </member>
    <member name="T:System.Xaml.XamlXmlReaderSettings">
      <summary>Especifica reglas de procesamiento o valores de configuración de opciones para la implementación del lector XAML <see cref="T:System.Xaml.XamlXmlReader" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlReaderSettings.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlReaderSettings" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlReaderSettings.#ctor(System.Xaml.XamlXmlReaderSettings)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlReaderSettings" /> copiando la configuración de un objeto <see cref="T:System.Xaml.XamlXmlReaderSettings" /> existente.</summary>
      <param name="settings">Objeto <see cref="T:System.Xaml.XamlXmlReaderSettings" /> existente que se va a copiar.</param>
    </member>
    <member name="P:System.Xaml.XamlXmlReaderSettings.CloseInput">
      <summary>Obtiene o establece un valor que indica si se debe cerrar la secuencia o el lector de texto subyacente cuando se cierre el objeto <see cref="T:System.Xaml.XamlXmlReader" />.</summary>
      <returns>Es <see langword="true" /> si se debe cerrar la secuencia o el lector subyacente cuando se cierre el objeto <see cref="T:System.Xaml.XamlXmlReader" />; de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReaderSettings.SkipXmlCompatibilityProcessing">
      <summary>Obtiene o establece un valor que determina si el lector debe diferir del comportamiento predeterminado de <see cref="T:System.Xaml.XamlXmlReader" /> de cómo se procesa el contenido de compatibilidad de marcado.</summary>
      <returns>Es <see langword="true" /> si el lector de entrada se usa directamente, lo que significa que el marcado de compatibilidad XML se procesa como parte de la secuencia principal y no se tiene en cuenta la compatibilidad. Es <see langword="false" /> si se usa el comportamiento predeterminado, que procesa la compatibilidad XML por separado. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReaderSettings.XmlLang">
      <summary>Obtiene o establece el valor de configuración de idioma que el lector puede promover a los sistemas de escritura que escriben atributos <see langword="xml:lang" /> en los nodos.</summary>
      <returns>Cadena que se va a usar para una posible salida <see langword="xml:lang" /> basada en el lector.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlReaderSettings.XmlSpacePreserve">
      <summary>Obtiene o establece un valor que determina si el lector XAML pide a los sistemas de escritura XAML que escriban atributos <see langword="xml:space" /> en nodos. Si se desea ese comportamiento, esta información se pasa a través del contexto de esquema XAML compartido.</summary>
      <returns>
        <see langword="true" />Si los escritores que están procesando el flujo de nodo XAML pueden escribir <c>xml: Space = "preserve"</c> en la salida; <see langword="false" /> si<see langword="xml:space" /> los atributos no se pueden escribir en los nodos.</returns>
    </member>
    <member name="T:System.Xaml.XamlXmlWriter">
      <summary>Usa una clase de soporte <see cref="T:System.IO.TextWriter" /> o <see cref="T:System.Xml.XmlWriter" /> para escribir una secuencia de nodos XAML en un formato serializado de texto o de marcado.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlWriter" /> a partir de una secuencia.</summary>
      <param name="stream">Flujo que se va a escribir.</param>
      <param name="schemaContext">Contexto de esquema XAML para el sistema de escritura XAML.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> es <see langword="null" />.  
o bien 
 <paramref name="schemaContext" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.Stream,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlWriter" /> a partir de una secuencia usando un objeto de configuración del sistema de escritura.</summary>
      <param name="stream">Flujo que se va a escribir.</param>
      <param name="schemaContext">Contexto de esquema XAML para el sistema de escritura XAML.</param>
      <param name="settings">Instancia de <see cref="T:System.Xaml.XamlXmlWriterSettings" />, que suele tener determinadas configuraciones no predeterminadas.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> o <paramref name="schemaContext" /> es <see langword="null" /></exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlWriter" /> a partir de una base <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="textWriter">
        <see cref="T:System.IO.TextWriter" /> que escribe la salida.</param>
      <param name="schemaContext">Contexto de esquema XAML para el sistema de escritura XAML.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textWriter" /> o <paramref name="schemaContext" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.IO.TextWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlWriter" /> a partir de una base <see cref="T:System.IO.TextWriter" /> usando un objeto de configuración.</summary>
      <param name="textWriter">
        <see cref="T:System.IO.TextWriter" /> que escribe la salida.</param>
      <param name="schemaContext">Contexto de esquema XAML para el sistema de escritura XAML.</param>
      <param name="settings">Instancia de <see cref="T:System.Xaml.XamlXmlWriterSettings" />, que suele tener determinadas configuraciones no predeterminadas.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="textWriter" /> o <paramref name="schemaContext" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlWriter" /> a partir de una base <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="xmlWriter">
        <see cref="T:System.Xml.XmlWriter" /> que escribe la salida.</param>
      <param name="schemaContext">Contexto de esquema XAML para el sistema de escritura XAML.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlWriter" /> o <paramref name="schemaContext" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.#ctor(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext,System.Xaml.XamlXmlWriterSettings)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlWriter" /> a partir de una base <see cref="T:System.Xml.XmlWriter" /> usando un objeto de configuración.</summary>
      <param name="xmlWriter">
        <see cref="T:System.Xml.XmlWriter" /> que escribe la salida.</param>
      <param name="schemaContext">Contexto de esquema XAML para el sistema de escritura XAML.</param>
      <param name="settings">Instancia de <see cref="T:System.Xaml.XamlXmlWriterSettings" />, que suele tener determinadas configuraciones no predeterminadas.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlWriter" /> o <paramref name="schemaContext" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.Dispose(System.Boolean)">
      <summary>Libera los recursos no administrados usados por <see cref="T:System.Xaml.XamlXmlWriter" /> y, opcionalmente, libera los recursos administrados.</summary>
      <param name="disposing">Es <see langword="true" /> para liberar los recursos no administrados; de lo contrario, es <see langword="false" />.</param>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.Flush">
      <summary>Llama al método <see langword="Flush" /> de los objetos <see cref="T:System.Xml.XmlWriter" /> o <see cref="T:System.IO.TextWriter" /> subyacentes, lo que escribe todo lo que haya en ese momento en el búfer y, a continuación, cierra el sistema de escritura.</summary>
    </member>
    <member name="P:System.Xaml.XamlXmlWriter.SchemaContext">
      <summary>Obtiene el contexto de esquema XAML que este <see cref="T:System.Xaml.XamlXmlWriter" /> emplea para el procesamiento.</summary>
      <returns>Contexto de esquema XAML que este <see cref="T:System.Xaml.XamlXmlWriter" /> emplea para el procesamiento de XAML.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlWriter.Settings">
      <summary>Obtiene la configuración del sistema de escritura que <see cref="T:System.Xaml.XamlXmlWriter" /> emplea para el procesamiento de XAML.</summary>
      <returns>Configuración del sistema de escritura que <see cref="T:System.Xaml.XamlXmlWriter" /> emplea para el procesamiento de XAML.</returns>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteEndMember">
      <summary>Escribe un nodo de miembro final XAML en el objeto <see cref="T:System.Xml.XmlWriter" /> o <see cref="T:System.IO.TextWriter" /> subyacente. Produce una excepción si la posición actual de la secuencia de nodos XAML no está dentro de un miembro o si el estado interno del sistema de escritura no permite escribir en un miembro final.</summary>
      <exception cref="T:System.InvalidOperationException">La posición actual de la secuencia de nodo XAML no está dentro de un miembro.</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException">El estado del sistema de escritura actual no permite escribir a un miembro final.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteEndObject">
      <summary>Escribe un nodo de objeto final XAML en el objeto <see cref="T:System.Xml.XmlWriter" /> o <see cref="T:System.IO.TextWriter" /> subyacente. Produce una excepción si la posición actual de la secuencia de nodos XAML que se está procesando es incompatible con la escritura de un objeto final.</summary>
      <exception cref="T:System.InvalidOperationException">La posición actual de la secuencia de nodo de XAML no es en un ámbito donde se pueda escribir un miembro de fin.</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException">El estado del sistema de escritura actual no permite escribir a un objeto final.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteGetObject">
      <summary>Escribe un objeto para los casos en los que el objeto en cuestión es un valor predeterminado o implícito de la propiedad que se está escribiendo, en lugar de especificarse como un valor de objeto en el conjunto de nodos XAML de entrada.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)">
      <summary>Escribe información de espacio de nombres en el objeto <see cref="T:System.Xml.XmlWriter" /> o <see cref="T:System.IO.TextWriter" /> subyacente. Puede producir una excepción para ciertos estados; sin embargo, en su lugar puede diferir la escritura de la información del espacio de nombres hasta que el sistema de escritura y la secuencia de nodos XAML que se está procesando alcancen una posición donde se pueda insertar una declaración de espacio de nombres XAML.</summary>
      <param name="namespaceDeclaration">Declaración de espacio de nombres XAML que se va a escribir.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="namespaceDeclaration" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="namespaceDeclaration" /> no es una declaración de espacio de nombres de XAML válida (tiene un prefijo nulo o el componente de identificador nulo).</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException">El estado del sistema de escritura actual no permite escribir una declaración de espacio de nombres XAML.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteStartMember(System.Xaml.XamlMember)">
      <summary>Escribe un nodo de miembro inicial XAML en el objeto <see cref="T:System.Xml.XmlWriter" /> o <see cref="T:System.IO.TextWriter" /> subyacente. Produce una excepción si la posición actual de la secuencia de nodos XAML está dentro de otro miembro, o si no está en un ámbito o en un estado del sistema de escritura donde se pueda escribir un miembro inicial.</summary>
      <param name="property">Identificador de miembro XAML del miembro que se va a escribir.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="property" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="property" /> no es un <see cref="T:System.Xaml.XamlMember" /> válido.</exception>
      <exception cref="T:System.InvalidOperationException">La posición actual de la secuencia de nodo XAML no es válida para escribir un miembro de inicio.</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException">El estado del sistema de escritura no es válido para escribir a un miembro de inicio.  
 o bien  
 El sistema de escritura XAML intentó escribir a un miembro duplicado. Esta excepción puede tener una excepción interna más precisa.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteStartObject(System.Xaml.XamlType)">
      <summary>Escribe un nodo de objeto inicial XAML en el objeto <see cref="T:System.Xml.XmlWriter" /> o <see cref="T:System.IO.TextWriter" /> subyacente. Produce una excepción si la posición actual de la secuencia de nodos XAML no está en un ámbito donde se pueda escribir un objeto inicial o si el sistema de escritura no está en un estado que pueda escribir un objeto inicial.</summary>
      <param name="type">
        <see cref="T:System.Xaml.XamlType" /> (identificador de tipo XAML) del objeto que se va a escribir.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" /> no es un <see cref="T:System.Xaml.XamlType" /> válido.</exception>
      <exception cref="T:System.InvalidOperationException">La posición actual de la secuencia de nodo XAML no es válida para escribir un objeto de inicio nuevo.</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException">El estado del sistema de escritura XAML no es válido para escribir un objeto de inicio nuevo.</exception>
    </member>
    <member name="M:System.Xaml.XamlXmlWriter.WriteValue(System.Object)">
      <summary>Escribe un nodo de valor XAML en el objeto <see cref="T:System.Xml.XmlWriter" /> o <see cref="T:System.IO.TextWriter" /> subyacente. Produce una excepción si la posición actual de la secuencia de nodos XAML no es válida para escribir un valor o si el sistema de escritura está en un estado en el que no se puede escribir un valor.</summary>
      <param name="value">Información de valor que se va a escribir.</param>
      <exception cref="T:System.InvalidOperationException">La posición actual de la secuencia de nodo XAML no es válida para escribir un valor.</exception>
      <exception cref="T:System.Xaml.XamlXmlWriterException">El estado de sistema de escritura XAML no permite escribir un nodo de valor.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> especifica un valor que no es null o es una cadena.</exception>
    </member>
    <member name="T:System.Xaml.XamlXmlWriterException">
      <summary>Excepción que algunas API de <see cref="T:System.Xaml.XamlXmlWriter" /> inician.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlWriterException" /> con un mensaje proporcionado por el sistema que describe el error.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlWriterException" /> con datos serializados.</summary>
      <param name="info">Objeto que contiene los datos del objeto serializados.</param>
      <param name="context">Información contextual acerca del origen o del destino.</param>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlWriterException" /> con un mensaje especificado que describe el error.</summary>
      <param name="message">Mensaje que describe la excepción. El autor de llamada de este constructor debe asegurarse de que la cadena se haya adaptado para la referencia cultural actual del sistema.</param>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlWriterException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</summary>
      <param name="message">Mensaje que describe la excepción. El autor de llamada de este constructor debe asegurarse de que la cadena se haya adaptado para la referencia cultural actual del sistema.</param>
      <param name="innerException">Excepción que es la causa de la excepción actual. Si el parámetro <paramref name="innerException" /> no es <see langword="null" />, la excepción actual se produce en un bloque <see langword="catch" /> que controla la excepción interna.</param>
    </member>
    <member name="T:System.Xaml.XamlXmlWriterSettings">
      <summary>Proporciona los valores de inicialización para la implementación del sistema de escritura XAML <see cref="T:System.Xaml.XamlXmlWriter" />.</summary>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterSettings.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.XamlXmlWriterSettings" />.</summary>
    </member>
    <member name="P:System.Xaml.XamlXmlWriterSettings.AssumeValidInput">
      <summary>Obtiene o establece un valor que especifica si <see cref="T:System.Xaml.XamlXmlWriter" /> debe suponer siempre la entrada de XAML válido para la resolución de duplicados u otra comprobación de errores.</summary>
      <returns>Es <see langword="true" /> si<see cref="T:System.Xaml.XamlXmlWriter" /> omite determinadas comprobaciones de validación o errores, como producir excepciones en miembros duplicados. Es <see langword="false" /> si <see cref="T:System.Xaml.XamlXmlWriter" /> produce excepciones cuando se encuentra XAML no válido. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xaml.XamlXmlWriterSettings.CloseOutput">
      <summary>Obtiene o establece un valor que especifica si <see cref="T:System.Xaml.XamlXmlWriter" /> se debe cerrar inmediatamente en <see langword="Dispose" /> u otras operaciones, o si el sistema de escritura de XAML debe escribir en su lugar el resultado del búfer antes de cerrarse. Use este valor con precaución; el cierre inmediato puede producir código XAML no válido que no se puede cargar de nuevo.</summary>
      <returns>Es <see langword="true" /> si <see cref="T:System.Xaml.XamlXmlWriter" /> se cierra inmediatamente ante <see langword="Dispose" /> u operaciones similares. Es <see langword="false" /> si la salida del búfer restante se escribe de que se libere el objeto <see cref="T:System.Xaml.XamlXmlWriter" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xaml.XamlXmlWriterSettings.Copy">
      <summary>Devuelve una copia de esta instancia de <see cref="T:System.Xaml.XamlXmlWriterSettings" />.</summary>
      <returns>Copia devuelta.</returns>
    </member>
  </members>
</doc>