<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Configuration.ConfigurationManager</name>
  </assembly>
  <members>
    <member name="T:System.Configuration.ApplicationScopedSettingAttribute">
      <summary vsli:raw="Specifies that an application settings property has a common value for all users of an application. This class cannot be inherited.">指定应用程序设置属性具有适用于应用程序所有用户的公共值。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Configuration.ApplicationScopedSettingAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ApplicationScopedSettingAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.ApplicationScopedSettingAttribute" /> 类的新实例。</summary>
    </member>
    <member name="T:System.Configuration.ApplicationSettingsBase">
      <summary vsli:raw="Acts as a base class for deriving concrete wrapper classes to implement the application settings feature in Window Forms applications.">作为派生具体包装类以实现 Window 窗体应用程序中的应用程序设置功能的基类。</summary>
    </member>
    <member name="E:System.Configuration.ApplicationSettingsBase.PropertyChanged">
      <summary vsli:raw="Occurs after the value of an application settings property is changed.">发生在更改应用程序设置属性的值之后。</summary>
    </member>
    <member name="E:System.Configuration.ApplicationSettingsBase.SettingChanging">
      <summary vsli:raw="Occurs before the value of an application settings property is changed.">发生在更改应用程序设置属性的值之前。</summary>
    </member>
    <member name="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded">
      <summary vsli:raw="Occurs after the application settings are retrieved from storage.">在从存储区中检索应用程序设置之后发生。</summary>
    </member>
    <member name="E:System.Configuration.ApplicationSettingsBase.SettingsSaving">
      <summary vsli:raw="Occurs before values are saved to the data store.">发生在将值保存到数据存储区中之前。</summary>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Configuration.ApplicationSettingsBase&quot; /&gt; class to its default state.">将 <see cref="T:System.Configuration.ApplicationSettingsBase" /> 类的实例初始化为其默认状态。</summary>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Configuration.ApplicationSettingsBase&quot; /&gt; class using the supplied owner component.">使用提供的所有者组件初始化 <see cref="T:System.Configuration.ApplicationSettingsBase" /> 类的实例。</summary>
      <param name="owner" vsli:raw="The component that will act as the owner of the application settings object.">将作为应用程序设置对象的所有者的组件。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;owner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="owner" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Configuration.ApplicationSettingsBase&quot; /&gt; class using the supplied owner component and settings key.">使用提供的所有者组件和设置键初始化 <see cref="T:System.Configuration.ApplicationSettingsBase" /> 类的实例。</summary>
      <param name="owner" vsli:raw="The component that will act as the owner of the application settings object.">将作为应用程序设置对象的所有者的组件。</param>
      <param name="settingsKey" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that uniquely identifies separate instances of the wrapper class.">唯一标识包装类的单独实例的 <see cref="T:System.String" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;owner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="owner" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.#ctor(System.String)">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Configuration.ApplicationSettingsBase&quot; /&gt; class using the supplied settings key.">使用提供的设置键初始化 <see cref="T:System.Configuration.ApplicationSettingsBase" /> 类的实例。</summary>
      <param name="settingsKey" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that uniquely identifies separate instances of the wrapper class.">唯一标识包装类的单独实例的 <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)">
      <summary vsli:raw="Returns the value of the named settings property for the previous version of the same application.">返回同一应用程序的早期版本的命名设置属性的值。</summary>
      <param name="propertyName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the name of the settings property whose value is to be returned.">一个 <see cref="T:System.String" />，包含要返回其值的设置属性的名称。</param>
      <exception cref="T:System.Configuration.SettingsPropertyNotFoundException" vsli:raw="The property does not exist. The property count is zero or the property cannot be found in the data store.">该属性不存在。 属性计数为零，或在数据存储区中找不到该属性。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; containing the value of the specified &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; if found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">一个 <see cref="T:System.Object" />，如果找到指定的 <see cref="T:System.Configuration.SettingsProperty" />，则为其值；否则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Configuration.ApplicationSettingsBase.PropertyChanged&quot; /&gt; event.">引发 <see cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" /> 事件。</summary>
      <param name="sender" vsli:raw="The source of the event.">事件源。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyChangedEventArgs&quot; /&gt; that contains the event data.">包含事件数据的 <see cref="T:System.ComponentModel.PropertyChangedEventArgs" />。</param>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Configuration.ApplicationSettingsBase.SettingChanging&quot; /&gt; event.">引发 <see cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" /> 事件。</summary>
      <param name="sender" vsli:raw="The source of the event.">事件源。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingChangingEventArgs&quot; /&gt; that contains the event data.">包含事件数据的 <see cref="T:System.Configuration.SettingChangingEventArgs" />。</param>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Configuration.ApplicationSettingsBase.SettingsLoaded&quot; /&gt; event.">引发 <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" /> 事件。</summary>
      <param name="sender" vsli:raw="The source of the event.">事件源。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsLoadedEventArgs&quot; /&gt; that contains the event data.">包含事件数据的 <see cref="T:System.Configuration.SettingsLoadedEventArgs" />。</param>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Configuration.ApplicationSettingsBase.SettingsSaving&quot; /&gt; event.">引发 <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" /> 事件。</summary>
      <param name="sender" vsli:raw="The source of the event.">事件源。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CancelEventArgs&quot; /&gt; that contains the event data.">包含事件数据的 <see cref="T:System.ComponentModel.CancelEventArgs" />。</param>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.Reload">
      <summary vsli:raw="Refreshes the application settings property values from persistent storage.">从永久存储刷新应用程序设置属性值。</summary>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.Reset">
      <summary vsli:raw="Restores the persisted application settings values to their corresponding default properties.">将保持的应用程序设置值还原为其对应的默认属性。</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The configuration file could not be parsed.">未能分析配置文件。</exception>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.Save">
      <summary vsli:raw="Stores the current values of the application settings properties.">存储应用程序设置属性的当前值。</summary>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.Upgrade">
      <summary vsli:raw="Updates application settings to reflect a more recent installation of the application.">更新应用程序设置，以反映最近安装的应用程序。</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The configuration file could not be parsed.">未能分析配置文件。</exception>
    </member>
    <member name="P:System.Configuration.ApplicationSettingsBase.Context">
      <summary vsli:raw="Gets the application settings context associated with the settings group.">获取与设置组关联的应用程序设置上下文。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsContext&quot; /&gt; associated with the settings group.">与设置组关联的 <see cref="T:System.Configuration.SettingsContext" />。</returns>
    </member>
    <member name="P:System.Configuration.ApplicationSettingsBase.Item(System.String)">
      <summary vsli:raw="Gets or sets the value of the specified application settings property.">获取或设置指定的应用程序设置属性的值。</summary>
      <param name="propertyName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the name of the property to access.">包含要访问的属性名称的 <see cref="T:System.String" />。</param>
      <exception cref="T:System.Configuration.SettingsPropertyNotFoundException" vsli:raw="There are no properties associated with the current wrapper or the specified property could not be found.">没有与当前包装关联的属性，或者未能找到指定的属性。</exception>
      <exception cref="T:System.Configuration.SettingsPropertyIsReadOnlyException" vsli:raw="An attempt was made to set a read-only property.">已尝试设置只读属性。</exception>
      <exception cref="T:System.Configuration.SettingsPropertyWrongTypeException" vsli:raw="The value supplied is of a type incompatible with the settings property, during a set operation.">在设置操作期间，所提供值的类型与设置属性不兼容。</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The configuration file could not be parsed.">未能分析配置文件。</exception>
      <returns vsli:raw="If found, the value of the named settings property; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">如果找到的话，则为命名的设置属性的值；否则为 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Configuration.ApplicationSettingsBase.Properties">
      <summary vsli:raw="Gets the collection of settings properties in the wrapper.">获取包装中的设置属性的集合。</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The associated settings provider could not be found or its instantiation failed.">未能找到关联的设置提供程序，或者其实例化失败。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsPropertyCollection&quot; /&gt; containing all the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; objects used in the current wrapper.">一个 <see cref="T:System.Configuration.SettingsPropertyCollection" />，包含当前包装中使用的所有 <see cref="T:System.Configuration.SettingsProperty" /> 对象。</returns>
    </member>
    <member name="P:System.Configuration.ApplicationSettingsBase.PropertyValues">
      <summary vsli:raw="Gets a collection of property values.">获取属性值的集合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValueCollection&quot; /&gt; of property values.">一个由属性值构成的 <see cref="T:System.Configuration.SettingsPropertyValueCollection" />。</returns>
    </member>
    <member name="P:System.Configuration.ApplicationSettingsBase.Providers">
      <summary vsli:raw="Gets the collection of application settings providers used by the wrapper.">获取包装所使用的应用程序设置提供程序的集合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsProviderCollection&quot; /&gt; containing all the &lt;see cref=&quot;T:System.Configuration.SettingsProvider&quot; /&gt; objects used by the settings properties of the current settings wrapper.">一个 <see cref="T:System.Configuration.SettingsProviderCollection" />，包含当前设置包装的设置属性使用的所有 <see cref="T:System.Configuration.SettingsProvider" /> 对象。</returns>
    </member>
    <member name="P:System.Configuration.ApplicationSettingsBase.SettingsKey">
      <summary vsli:raw="Gets or sets the settings key for the application settings group.">获取或设置应用程序设置组的设置键。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the settings key for the current settings group.">一个 <see cref="T:System.String" />，包含当前设置组的设置键。</returns>
    </member>
    <member name="T:System.Configuration.ApplicationSettingsGroup">
      <summary vsli:raw="Represents a grouping of related application settings sections within a configuration file. This class cannot be inherited.">表示配置文件内的一组相关应用程序设置节。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsGroup.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ApplicationSettingsGroup&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.ApplicationSettingsGroup" /> 类的新实例。</summary>
    </member>
    <member name="T:System.Configuration.AppSettingsReader">
      <summary vsli:raw="Provides a method for reading values of a particular type from the configuration.">提供一种从配置文件中读取特定类型的值的方法。</summary>
    </member>
    <member name="M:System.Configuration.AppSettingsReader.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.AppSettingsReader&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.AppSettingsReader" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.AppSettingsReader.GetValue(System.String,System.Type)">
      <summary vsli:raw="Gets the value for a specified key from the &lt;see cref=&quot;P:System.Configuration.ConfigurationSettings.AppSettings&quot; /&gt; property and returns an object of the specified type containing the value from the configuration.">从 <see cref="P:System.Configuration.ConfigurationSettings.AppSettings" /> 属性中获取指定键的值，并返回指定类型的对象，该对象包含来自配置文件的值。</summary>
      <param name="key" vsli:raw="The key for which to get the value.">要为其获取值的键。</param>
      <param name="type" vsli:raw="The type of the object to return.">要返回的对象的类型。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="type" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; does not exist in the &lt;see langword=&quot;&amp;lt;appSettings&amp;gt;&quot; /&gt; configuration section.  &#xA;  &#xA;-or-&#xA;  &#xA; The value in the &lt;see langword=&quot;&amp;lt;appSettings&amp;gt;&quot; /&gt; configuration section for &lt;paramref name=&quot;key&quot; /&gt; is not of type &lt;paramref name=&quot;type&quot; /&gt;.">
        <see langword="&lt;appSettings&gt;" /> 配置节中不存在 <paramref name="key" />。  
  
- 或 - 
<paramref name="key" /> 的 <see langword="&lt;appSettings&gt;" /> 配置节中的值不属于 <paramref name="type" /> 类型。</exception>
      <returns vsli:raw="The value of the specified key.">指定键的值。</returns>
    </member>
    <member name="T:System.Configuration.AppSettingsSection">
      <summary vsli:raw="Provides configuration system support for the &lt;see langword=&quot;appSettings&quot; /&gt; configuration section. This class cannot be inherited.">为 <see langword="appSettings" /> 配置节提供配置系统支持。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Configuration.AppSettingsSection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.AppSettingsSection&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.AppSettingsSection" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Configuration.AppSettingsSection.File">
      <summary vsli:raw="Gets or sets a configuration file that provides additional settings or overrides the settings specified in the &lt;see langword=&quot;appSettings&quot; /&gt; element.">获取或设置一个配置文件，该配置文件提供附加设置或重写在 <see langword="appSettings" /> 元素中指定的设置。</summary>
      <returns vsli:raw="A configuration file that provides additional settings or overrides the settings specified in the &lt;see langword=&quot;appSettings&quot; /&gt; element.">提供附加设置或重写在 <see langword="appSettings" /> 元素中指定的设置的配置文件。</returns>
    </member>
    <member name="P:System.Configuration.AppSettingsSection.Settings">
      <summary vsli:raw="Gets a collection of key/value pairs that contains application settings.">获取包含应用程序设置的键/值对集合。</summary>
      <returns vsli:raw="A collection of key/value pairs that contains the application settings from the configuration file.">包含配置文件应用程序设置的键/值对的集合。</returns>
    </member>
    <member name="T:System.Configuration.CallbackValidator">
      <summary vsli:raw="Provides dynamic validation of an object.">提供对对象的动态验证。</summary>
    </member>
    <member name="M:System.Configuration.CallbackValidator.#ctor(System.Type,System.Configuration.ValidatorCallback)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.CallbackValidator&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.CallbackValidator" /> 类的新实例。</summary>
      <param name="type" vsli:raw="The type of object that will be validated.">将要验证的对象的类型。</param>
      <param name="callback" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ValidatorCallback&quot; /&gt; used as the delegate.">用作委托的 <see cref="T:System.Configuration.ValidatorCallback" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Configuration.CallbackValidator.CanValidate(System.Type)">
      <summary vsli:raw="Determines whether the type of the object can be validated.">确定是否可以验证该对象的类型。</summary>
      <param name="type" vsli:raw="The type of object.">对象的类型。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;type&quot; /&gt; parameter matches the type used as the first parameter when creating an instance of &lt;see cref=&quot;T:System.Configuration.CallbackValidator&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="true" /> 参数与创建 <see cref="T:System.Configuration.CallbackValidator" /> 的实例时用作第一个参数的类型匹配，则为 <see langword="type" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.CallbackValidator.Validate(System.Object)">
      <summary vsli:raw="Determines whether the value of an object is valid.">确定对象的值是否有效。</summary>
      <param name="value" vsli:raw="The value of an object.">对象的值。</param>
    </member>
    <member name="T:System.Configuration.CallbackValidatorAttribute">
      <summary vsli:raw="Specifies a &lt;see cref=&quot;T:System.Configuration.CallbackValidator&quot; /&gt; object to use for code validation. This class cannot be inherited.">指定用于代码验证的 <see cref="T:System.Configuration.CallbackValidator" /> 对象。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Configuration.CallbackValidatorAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.CallbackValidatorAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.CallbackValidatorAttribute" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Configuration.CallbackValidatorAttribute.CallbackMethodName">
      <summary vsli:raw="Gets or sets the name of the callback method.">获取或设置回调方法的名称。</summary>
      <returns vsli:raw="The name of the method to call.">要调用的方法的名称。</returns>
    </member>
    <member name="P:System.Configuration.CallbackValidatorAttribute.Type">
      <summary vsli:raw="Gets or sets the type of the validator.">获取或设置验证程序的类型。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the current validator attribute instance.">当前验证程序特性实例的 <see cref="T:System.Type" />。</returns>
    </member>
    <member name="P:System.Configuration.CallbackValidatorAttribute.ValidatorInstance">
      <summary vsli:raw="Gets the validator instance.">获取验证程序实例。</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The value of the &lt;see cref=&quot;P:System.Configuration.CallbackValidatorAttribute.Type&quot; /&gt; property is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="P:System.Configuration.CallbackValidatorAttribute.Type" /> 属性的值为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Configuration.CallbackValidatorAttribute.CallbackMethodName&quot; /&gt; property is not set to a public static void method with one object parameter.">
        <see cref="P:System.Configuration.CallbackValidatorAttribute.CallbackMethodName" /> 属性未设置为带有一个对象参数的公共静态 void 方法。</exception>
      <returns vsli:raw="The current &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorBase&quot; /&gt; instance.">当前的 <see cref="T:System.Configuration.ConfigurationValidatorBase" /> 实例。</returns>
    </member>
    <member name="T:System.Configuration.ClientSettingsSection">
      <summary vsli:raw="Represents a group of user-scoped application settings in a configuration file.">表示配置文件中用户范围的应用程序设置组。</summary>
    </member>
    <member name="M:System.Configuration.ClientSettingsSection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ClientSettingsSection&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.ClientSettingsSection" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Configuration.ClientSettingsSection.Settings">
      <summary vsli:raw="Gets the collection of client settings for the section.">获取节中的客户端设置的集合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingElementCollection&quot; /&gt; containing all the client settings found in the current configuration section.">包含在当前配置节中找到的所有客户端设置的 <see cref="T:System.Configuration.SettingElementCollection" />。</returns>
    </member>
    <member name="T:System.Configuration.CommaDelimitedStringCollection">
      <summary vsli:raw="Represents a collection of string elements separated by commas. This class cannot be inherited.">表示用逗号分隔的字符串元素的集合。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Configuration.CommaDelimitedStringCollection&quot; /&gt; class.">创建 <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.Add(System.String)">
      <summary vsli:raw="Adds a string to the comma-delimited collection.">向以逗号分隔的集合添加一个字符串。</summary>
      <param name="value" vsli:raw="A string value.">字符串值。</param>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.AddRange(System.String[])">
      <summary vsli:raw="Adds all the strings in a string array to the collection.">将字符串数组中的所有字符串添加到集合中。</summary>
      <param name="range" vsli:raw="An array of strings to add to the collection.">要添加到集合中的字符串数组。</param>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.Clear">
      <summary vsli:raw="Clears the collection.">清除集合。</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.Clone">
      <summary vsli:raw="Creates a copy of the collection.">创建集合的一个副本。</summary>
      <returns vsli:raw="A copy of the &lt;see cref=&quot;T:System.Configuration.CommaDelimitedStringCollection&quot; /&gt;.">
        <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> 的副本。</returns>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.Insert(System.Int32,System.String)">
      <summary vsli:raw="Adds a string element to the collection at the specified index.">将一个字符串元素添加到集合中的指定索引位置。</summary>
      <param name="index" vsli:raw="The index in the collection at which the new element will be added.">集合中将添加新元素的索引位置。</param>
      <param name="value" vsli:raw="The value of the new element to add to the collection.">要添加到集合中的新元素的值。</param>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.Remove(System.String)">
      <summary vsli:raw="Removes a string element from the collection.">从集合中移除一个字符串元素。</summary>
      <param name="value" vsli:raw="The string to remove.">要移除的字符串。</param>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.SetReadOnly">
      <summary vsli:raw="Sets the collection object to read-only.">将集合对象设置为只读。</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.ToString">
      <summary vsli:raw="Returns a string representation of the object.">返回对象的字符串表示形式。</summary>
      <returns vsli:raw="A string representation of the object.">对象的字符串表示形式。</returns>
    </member>
    <member name="P:System.Configuration.CommaDelimitedStringCollection.IsModified">
      <summary vsli:raw="Gets a value that specifies whether the collection has been modified.">获取一个值，该值指示集合是否已修改。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.CommaDelimitedStringCollection&quot; /&gt; has been modified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> 已修改，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.CommaDelimitedStringCollection.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the collection object is read-only.">获取一个值，该值指示集合对象是否为只读。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified string element in the &lt;see cref=&quot;T:System.Configuration.CommaDelimitedStringCollection&quot; /&gt; is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> 中指定的字符串元素是只读的，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.CommaDelimitedStringCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets a string element in the collection based on the index.">根据索引获取或设置集合中的字符串元素。</summary>
      <param name="index" vsli:raw="The index of the string element in the collection.">集合中字符串元素的索引。</param>
      <returns vsli:raw="A string element in the collection.">集合中的字符串元素。</returns>
    </member>
    <member name="T:System.Configuration.CommaDelimitedStringCollectionConverter">
      <summary vsli:raw="Converts a comma-delimited string value to and from a &lt;see cref=&quot;T:System.Configuration.CommaDelimitedStringCollection&quot; /&gt; object. This class cannot be inherited.">将以逗号分隔的字符串值和 <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> 对象相互转换。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollectionConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.CommaDelimitedStringCollectionConverter&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.CommaDelimitedStringCollectionConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; object to a &lt;see cref=&quot;T:System.Configuration.CommaDelimitedStringCollection&quot; /&gt; object.">将 <see cref="T:System.String" /> 对象转换为 <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> 对象。</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; used for type conversions.">用于类型转换的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; used during conversion.">在转换过程中使用的 <see cref="T:System.Globalization.CultureInfo" />。</param>
      <param name="data" vsli:raw="The comma-separated &lt;see cref=&quot;T:System.String&quot; /&gt; to convert.">要转换的以逗号分隔的 <see cref="T:System.String" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.CommaDelimitedStringCollection&quot; /&gt; containing the converted value.">包含转换后的值的 <see cref="T:System.Configuration.CommaDelimitedStringCollection" />。</returns>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Configuration.CommaDelimitedStringCollection&quot; /&gt; object to a &lt;see cref=&quot;T:System.String&quot; /&gt; object.">将 <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> 对象转换为 <see cref="T:System.String" /> 对象。</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; used for type conversions.">用于类型转换的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; used during conversion.">在转换过程中使用的 <see cref="T:System.Globalization.CultureInfo" />。</param>
      <param name="value" vsli:raw="The value to convert.">要转换的值。</param>
      <param name="type" vsli:raw="The conversion type.">转换类型。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; representing the converted &lt;paramref name=&quot;value&quot; /&gt; parameter, which is a &lt;see cref=&quot;T:System.Configuration.CommaDelimitedStringCollection&quot; /&gt;.">表示转换后的 <paramref name="value" /> 参数的 <see cref="T:System.String" />，该参数为 <see cref="T:System.Configuration.CommaDelimitedStringCollection" />。</returns>
    </member>
    <member name="T:System.Configuration.Configuration">
      <summary vsli:raw="Represents a configuration file that is applicable to a particular computer, application, or resource. This class cannot be inherited.">表示适用于特定计算机、应用程序或资源的配置文件。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Configuration.Configuration.GetSection(System.String)">
      <summary vsli:raw="Returns the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object.">返回指定的 <see cref="T:System.Configuration.ConfigurationSection" /> 对象。</summary>
      <param name="sectionName" vsli:raw="The path to the section to be returned.">要返回的节的路径。</param>
      <returns vsli:raw="The specified &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object, or &lt;see langword=&quot;null&quot; /&gt; if the requested section does not exist.">指定的 <see cref="T:System.Configuration.ConfigurationSection" /> 对象，如果请求的节不存在，则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Configuration.Configuration.GetSectionGroup(System.String)">
      <summary vsli:raw="Gets the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object.">获取指定的 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 对象。</summary>
      <param name="sectionGroupName" vsli:raw="The path name of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; to return.">要返回的 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 的路径名称。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; specified, or &lt;see langword=&quot;null&quot; /&gt; if the requested section group does not exist.">指定的 <see cref="T:System.Configuration.ConfigurationSectionGroup" />，如果请求的节组不存在，则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Configuration.Configuration.Save">
      <summary vsli:raw="Writes the configuration settings contained within this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object to the current XML configuration file.">将包含在此 <see cref="T:System.Configuration.Configuration" /> 对象中的配置设置写入当前 XML 配置文件。</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The configuration file could not be written to.  &#xA;  &#xA;-or-&#xA;  &#xA; The configuration file has changed.">无法对配置文件执行写入操作。  
  
- 或 -
  
 配置文件已更改。</exception>
    </member>
    <member name="M:System.Configuration.Configuration.Save(System.Configuration.ConfigurationSaveMode)">
      <summary vsli:raw="Writes the configuration settings contained within this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object to the current XML configuration file.">将包含在此 <see cref="T:System.Configuration.Configuration" /> 对象中的配置设置写入当前 XML 配置文件。</summary>
      <param name="saveMode" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationSaveMode&quot; /&gt; value that determines which property values to save.">一个 <see cref="T:System.Configuration.ConfigurationSaveMode" /> 值，该值用于确定要保存的属性值。</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The configuration file could not be written to.  &#xA;  &#xA;-or-&#xA;  &#xA; The configuration file has changed.">无法对配置文件执行写入操作。  
  
- 或 -
  
 配置文件已更改。</exception>
    </member>
    <member name="M:System.Configuration.Configuration.Save(System.Configuration.ConfigurationSaveMode,System.Boolean)">
      <summary vsli:raw="Writes the configuration settings contained within this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object to the current XML configuration file.">将包含在此 <see cref="T:System.Configuration.Configuration" /> 对象中的配置设置写入当前 XML 配置文件。</summary>
      <param name="saveMode" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationSaveMode&quot; /&gt; value that determines which property values to save.">一个 <see cref="T:System.Configuration.ConfigurationSaveMode" /> 值，该值用于确定要保存的属性值。</param>
      <param name="forceSaveAll" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to save even if the configuration was not modified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果在未修改配置的情况下保存配置，则为 <see langword="true" />；否则，为 <see langword="false" />。</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The configuration file could not be written to.  &#xA;  &#xA;-or-&#xA;  &#xA; The configuration file has changed.">无法对配置文件执行写入操作。  
  
- 或 -
  
 配置文件已更改。</exception>
    </member>
    <member name="M:System.Configuration.Configuration.SaveAs(System.String)">
      <summary vsli:raw="Writes the configuration settings contained within this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object to the specified XML configuration file.">将包含在此 <see cref="T:System.Configuration.Configuration" /> 对象中的配置设置写入指定的 XML 配置文件。</summary>
      <param name="filename" vsli:raw="The path and file name to save the configuration file to.">要将配置文件保存到的路径和文件名。</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The configuration file could not be written to.  &#xA;  &#xA;-or-&#xA;  &#xA; The configuration file has changed.">无法对配置文件执行写入操作。  
  
- 或 -
  
 配置文件已更改。</exception>
    </member>
    <member name="M:System.Configuration.Configuration.SaveAs(System.String,System.Configuration.ConfigurationSaveMode)">
      <summary vsli:raw="Writes the configuration settings contained within this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object to the specified XML configuration file.">将包含在此 <see cref="T:System.Configuration.Configuration" /> 对象中的配置设置写入指定的 XML 配置文件。</summary>
      <param name="filename" vsli:raw="The path and file name to save the configuration file to.">要将配置文件保存到的路径和文件名。</param>
      <param name="saveMode" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationSaveMode&quot; /&gt; value that determines which property values to save.">一个 <see cref="T:System.Configuration.ConfigurationSaveMode" /> 值，该值用于确定要保存的属性值。</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The configuration file could not be written to.  &#xA;  &#xA;-or-&#xA;  &#xA; The configuration file has changed.">无法对配置文件执行写入操作。  
  
- 或 -
  
 配置文件已更改。</exception>
    </member>
    <member name="M:System.Configuration.Configuration.SaveAs(System.String,System.Configuration.ConfigurationSaveMode,System.Boolean)">
      <summary vsli:raw="Writes the configuration settings contained within this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object to the specified XML configuration file.">将包含在此 <see cref="T:System.Configuration.Configuration" /> 对象中的配置设置写入指定的 XML 配置文件。</summary>
      <param name="filename" vsli:raw="The path and file name to save the configuration file to.">要将配置文件保存到的路径和文件名。</param>
      <param name="saveMode" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationSaveMode&quot; /&gt; value that determines which property values to save.">一个 <see cref="T:System.Configuration.ConfigurationSaveMode" /> 值，该值用于确定要保存的属性值。</param>
      <param name="forceSaveAll" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to save even if the configuration was not modified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果在未修改配置的情况下保存配置，则为 <see langword="true" />；否则，为 <see langword="false" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;filename&quot; /&gt; is null or an empty string (&quot;&quot;).">
        <paramref name="filename" /> 为 null 或为空字符串 ("")。</exception>
    </member>
    <member name="P:System.Configuration.Configuration.AppSettings">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Configuration.AppSettingsSection&quot; /&gt; object configuration section that applies to this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">获取应用于此 <see cref="T:System.Configuration.Configuration" /> 对象的 <see cref="T:System.Configuration.AppSettingsSection" /> 对象配置节。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Configuration.AppSettingsSection&quot; /&gt; object representing the &lt;see langword=&quot;appSettings&quot; /&gt; configuration section that applies to this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">一个 <see cref="T:System.Configuration.AppSettingsSection" /> 对象，该对象表示应用于此 <see cref="T:System.Configuration.Configuration" /> 对象 <see langword="appSettings" /> 配置节。</returns>
    </member>
    <member name="P:System.Configuration.Configuration.AssemblyStringTransformer">
      <summary vsli:raw="Specifies a function delegate that is used to transform assembly strings in configuration files.">指定一个函数委托，用于转换配置文件中的程序集字符串。</summary>
      <returns vsli:raw="A delegate that transforms type strings. The default value is &lt;see langword=&quot;null&quot; /&gt;.">一个用于转换类型字符串的委托。 默认值是 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Configuration.Configuration.ConnectionStrings">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Configuration.ConnectionStringsSection&quot; /&gt; configuration-section object that applies to this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">获取应用于此 <see cref="T:System.Configuration.Configuration" /> 对象的 <see cref="T:System.Configuration.ConnectionStringsSection" /> 配置节对象。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConnectionStringsSection&quot; /&gt; configuration-section object representing the &lt;see langword=&quot;connectionStrings&quot; /&gt; configuration section that applies to this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">一个 <see cref="T:System.Configuration.ConnectionStringsSection" /> 配置节对象，该对象表示应用于此 <see cref="T:System.Configuration.Configuration" /> 对象的 <see langword="connectionStrings" /> 配置节。</returns>
    </member>
    <member name="P:System.Configuration.Configuration.EvaluationContext">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Configuration.ContextInformation&quot; /&gt; object for the &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">获取 <see cref="T:System.Configuration.Configuration" /> 对象的 <see cref="T:System.Configuration.ContextInformation" /> 对象。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ContextInformation&quot; /&gt; object for the &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">
        <see cref="T:System.Configuration.ContextInformation" /> 对象的 <see cref="T:System.Configuration.Configuration" /> 对象。</returns>
    </member>
    <member name="P:System.Configuration.Configuration.FilePath">
      <summary vsli:raw="Gets the physical path to the configuration file represented by this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">获取由 <see cref="T:System.Configuration.Configuration" /> 对象表示的配置文件的物理路径。</summary>
      <returns vsli:raw="The physical path to the configuration file represented by this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">由此 <see cref="T:System.Configuration.Configuration" /> 对象表示的配置文件的物理路径。</returns>
    </member>
    <member name="P:System.Configuration.Configuration.HasFile">
      <summary vsli:raw="Gets a value that indicates whether a file exists for the resource represented by this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">获取一个值，该值指示由此 <see cref="T:System.Configuration.Configuration" /> 对象表示的资源是否存在相应的文件。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there is a configuration file; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果该配置文件存在，则为 <see langword="true" />；否则，为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.Configuration.Locations">
      <summary vsli:raw="Gets the locations defined within this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">获取此 <see cref="T:System.Configuration.Configuration" /> 对象内定义的位置。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationLocationCollection&quot; /&gt; containing the locations defined within this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">一个 <see cref="T:System.Configuration.ConfigurationLocationCollection" />，它包含此 <see cref="T:System.Configuration.Configuration" /> 对象内定义的位置。</returns>
    </member>
    <member name="P:System.Configuration.Configuration.NamespaceDeclared">
      <summary vsli:raw="Gets or sets a value indicating whether the configuration file has an XML namespace.">获取或设置一个值，该值指示配置文件是否具有 XML 命名空间。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration file has an XML namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果配置文件有 XML 命名空间，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.Configuration.RootSectionGroup">
      <summary vsli:raw="Gets the root &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; for this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">获取此 <see cref="T:System.Configuration.Configuration" /> 对象的根 <see cref="T:System.Configuration.ConfigurationSectionGroup" />。</summary>
      <returns vsli:raw="The root section group for this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">此 <see cref="T:System.Configuration.Configuration" /> 对象的根节组。</returns>
    </member>
    <member name="P:System.Configuration.Configuration.SectionGroups">
      <summary vsli:raw="Gets a collection of the section groups defined by this configuration.">获取由此配置定义的节组的集合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroupCollection&quot; /&gt; collection representing the collection of section groups for this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">一个 <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> 集合，该集合表示此 <see cref="T:System.Configuration.Configuration" /> 对象的节组集合。</returns>
    </member>
    <member name="P:System.Configuration.Configuration.Sections">
      <summary vsli:raw="Gets a collection of the sections defined by this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">获取此 <see cref="T:System.Configuration.Configuration" /> 对象定义的节的集合。</summary>
      <returns vsli:raw="A collection of the sections defined by this &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">此 <see cref="T:System.Configuration.Configuration" /> 对象定义的节的集合。</returns>
    </member>
    <member name="P:System.Configuration.Configuration.TargetFramework">
      <summary vsli:raw="Gets or sets the targeted version of .NET when a version earlier than the current one is targeted.">在将当前版本之前的某个版本作为目标时，指定 .NET Framework 的目标版本。</summary>
      <returns vsli:raw="The name of the targeted version of .NET. The default value is &lt;see langword=&quot;null&quot; /&gt;, which indicates that the current version is targeted.">.NET Framework 的目标版本的名称。 默认值为 <see langword="null" />，它指示将当前版本作为目标。</returns>
    </member>
    <member name="P:System.Configuration.Configuration.TypeStringTransformer">
      <summary vsli:raw="Specifies a function delegate that is used to transform type strings in configuration files.">指定一个函数委托，用于转换配置文件中的类型字符串。</summary>
      <returns vsli:raw="A delegate that transforms type strings. The default value is &lt;see langword=&quot;null&quot; /&gt;.">一个用于转换类型字符串的委托。 默认值是 <see langword="null" />。</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationAllowDefinition">
      <summary vsli:raw="Specifies the locations within the configuration-file hierarchy that can set or override the properties contained within a &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object.">指定配置文件层次结构中的位置，在其中可设置或替代 <see cref="T:System.Configuration.ConfigurationSection" /> 对象中包含的属性。</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowDefinition.Everywhere">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; can be defined anywhere.">
        <see cref="T:System.Configuration.ConfigurationSection" /> 可以在任何位置定义。</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowDefinition.MachineOnly">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; can be defined only in the Machine.config file.">
        <see cref="T:System.Configuration.ConfigurationSection" /> 只能在 Machine.config 文件中定义。</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowDefinition.MachineToApplication">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; can be defined in either the Machine.config file, the machine-level Web.config file found in the same directory as Machine.config, or the top-level application Web.config file found in the virtual-directory root, but not in subdirectories of a virtual root.">
        <see cref="T:System.Configuration.ConfigurationSection" /> 可以在 Machine.config 文件中定义，或在计算机级别的 Web.config 文件（与 Machine.config 处于相同的目录）中定义，或在顶级应用程序 Web.config 文件（在虚拟根目录中）中定义，但不能在虚拟根目录的子目录中定义。</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowDefinition.MachineToWebRoot">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; can be defined in either the Machine.config file or the machine-level Web.config file found in the same directory as Machine.config, but not in application Web.config files.">
        <see cref="T:System.Configuration.ConfigurationSection" /> 可以在 Machine.config 文件中定义，也可以在 计算机级别的 Web.config 文件（与 Machine.config 处于相同的目录）中定义，但不能在应用程序 Web.config 文件中定义。</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationAllowExeDefinition">
      <summary vsli:raw="Specifies the locations within the configuration-file hierarchy that can set or override the properties contained within a &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object.">指定配置文件层次结构中的位置，在其中可设置或替代 <see cref="T:System.Configuration.ConfigurationSection" /> 对象中包含的属性。</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowExeDefinition.MachineOnly">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; can be defined only in the Machine.config file.">
        <see cref="T:System.Configuration.ConfigurationSection" /> 只能在 Machine.config 文件中定义。</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowExeDefinition.MachineToApplication">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; can be defined either in the Machine.config file or in the Exe.config file in the client application directory. This is the default value.">可在 Machine.config 文件或客户端应用程序目录中的 Exe.config 文件中定义 <see cref="T:System.Configuration.ConfigurationSection" />。 这是默认值。</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowExeDefinition.MachineToLocalUser">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; can be defined in the Machine.config file, in the Exe.config file in the client application directory, in the User.config file in the roaming user directory, or in the User.config file in the local user directory.">可在 Machine.config 文件、客户端应用程序目录中的 Exe.config 文件、漫游用户目录中的 User.config 文件或本地用户目录中的 User.config 文件中定义 <see cref="T:System.Configuration.ConfigurationSection" />。</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowExeDefinition.MachineToRoamingUser">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; can be defined in the Machine.config file, in the Exe.config file in the client application directory, or in the User.config file in the roaming user directory.">可在 Machine.config 文件、客户端应用程序目录中的 Exe.config 文件或漫游用户目录中的 User.config 文件中定义 <see cref="T:System.Configuration.ConfigurationSection" />。</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationCollectionAttribute">
      <summary vsli:raw="Declaratively instructs .NET to create an instance of a configuration element collection. This class cannot be inherited.">以声明的方式指示 .NET Framework 创建配置元素集合的实例。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationCollectionAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationCollectionAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.ConfigurationCollectionAttribute" /> 类的新实例。</summary>
      <param name="itemType" vsli:raw="The type of the property collection to create.">要创建的属性集合的类型。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;itemType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="itemType" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationCollectionAttribute.AddItemName">
      <summary vsli:raw="Gets or sets the name of the &lt;see langword=&quot;&amp;lt;add&amp;gt;&quot; /&gt; configuration element.">获取或设置 <see langword="&lt;add&gt;" /> 配置元素的名称。</summary>
      <returns vsli:raw="The name that substitutes the standard name &quot;add&quot; for the configuration item.">替换配置项的标准名“add”的名称。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationCollectionAttribute.ClearItemsName">
      <summary vsli:raw="Gets or sets the name for the &lt;see langword=&quot;&amp;lt;clear&amp;gt;&quot; /&gt; configuration element.">获取或设置 <see langword="&lt;clear&gt;" /> 配置元素的名称。</summary>
      <returns vsli:raw="The name that replaces the standard name &quot;clear&quot; for the configuration item.">替换配置项的标准名“clear”的名称。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationCollectionAttribute.CollectionType">
      <summary vsli:raw="Gets or sets the type of the &lt;see cref=&quot;T:System.Configuration.ConfigurationCollectionAttribute&quot; /&gt; attribute.">获取或设置 <see cref="T:System.Configuration.ConfigurationCollectionAttribute" /> 特性的类型。</summary>
      <returns vsli:raw="The type of the &lt;see cref=&quot;T:System.Configuration.ConfigurationCollectionAttribute&quot; /&gt;.">
        <see cref="T:System.Configuration.ConfigurationCollectionAttribute" /> 的类型。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationCollectionAttribute.ItemType">
      <summary vsli:raw="Gets the type of the collection element.">获取集合元素的类型。</summary>
      <returns vsli:raw="The type of the collection element.">集合元素的类型。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationCollectionAttribute.RemoveItemName">
      <summary vsli:raw="Gets or sets the name for the &lt;see langword=&quot;&amp;lt;remove&amp;gt;&quot; /&gt; configuration element.">获取或设置 <see langword="&lt;remove&gt;" /> 配置元素的名称。</summary>
      <returns vsli:raw="The name that replaces the standard name &quot;remove&quot; for the configuration element.">替换配置元素的标准名“remove”的名称。</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationConverterBase">
      <summary vsli:raw="The base class for the configuration converter types.">配置转换器类型的基类。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationConverterBase.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationConverterBase&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.ConfigurationConverterBase" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether the conversion is allowed.">确定是否允许此转换。</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">用于类型转换的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象。</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to convert from.">要转换的源 <see cref="T:System.Type" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the conversion is allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果允许转换，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary vsli:raw="Determines whether the conversion is allowed.">确定是否允许此转换。</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversion.">用于类型转换的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象。</param>
      <param name="type" vsli:raw="The type to convert to.">要转换为的类型。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the conversion is allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果允许转换，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationElement">
      <summary vsli:raw="Represents a configuration element within a configuration file.">表示配置文件中的配置元素。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.ConfigurationElement" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
      <summary vsli:raw="Reads XML from the configuration file.">从配置文件读取 XML。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; that reads from the configuration file.">用于读取配置文件的 <see cref="T:System.Xml.XmlReader" />。</param>
      <param name="serializeCollectionKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize only the collection key properties; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果只序列化集合键属性，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The element to read is locked.  &#xA;  &#xA;-or-&#xA;  &#xA; An attribute of the current node is not recognized.  &#xA;  &#xA;-or-&#xA;  &#xA; The lock status of the current node cannot be determined.">要读取的元素被锁定。  
  
- 或 -
  
 无法识别当前节点的特性。  
  
- 或 -
  
 无法确定当前节点的锁定状态。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.Equals(System.Object)">
      <summary vsli:raw="Compares the current &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; instance to the specified object.">将当前的 <see cref="T:System.Configuration.ConfigurationElement" /> 实例与指定的对象进行比较。</summary>
      <param name="compareTo" vsli:raw="The object to compare with.">要比较的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object to compare with is equal to the current &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果要比较的对象等于当前的 <see cref="T:System.Configuration.ConfigurationElement" /> 实例，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.GetHashCode">
      <summary vsli:raw="Gets a unique value representing the current &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; instance.">获取表示当前 <see cref="T:System.Configuration.ConfigurationElement" /> 实例的唯一值。</summary>
      <returns vsli:raw="A unique value representing the current &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; instance.">表示当前 <see cref="T:System.Configuration.ConfigurationElement" /> 实例的唯一值。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)">
      <summary vsli:raw="Returns the transformed version of the specified assembly name.">返回指定程序集名称的转换版本。</summary>
      <param name="assemblyName" vsli:raw="The name of the assembly.">程序集的名称。</param>
      <returns vsli:raw="The transformed version of the assembly name. If no transformer is available, the &lt;paramref name=&quot;assemblyName&quot; /&gt; parameter value is returned unchanged. The &lt;see cref=&quot;P:System.Configuration.Configuration.TypeStringTransformer&quot; /&gt; property is &lt;see langword=&quot;null&quot; /&gt; if no transformer is available.">程序集名称的转换版本。 如果没有可用的转换器，则返回的 <paramref name="assemblyName" /> 参数值保持不变。 如果没有可用的转换器，则 <see cref="P:System.Configuration.Configuration.TypeStringTransformer" /> 属性为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)">
      <summary vsli:raw="Returns the transformed version of the specified type name.">返回指定类型名称的转换版本。</summary>
      <param name="typeName" vsli:raw="The name of the type.">类型的名称。</param>
      <returns vsli:raw="The transformed version of the specified type name. If no transformer is available, the &lt;paramref name=&quot;typeName&quot; /&gt; parameter value is returned unchanged. The &lt;see cref=&quot;P:System.Configuration.Configuration.TypeStringTransformer&quot; /&gt; property is &lt;see langword=&quot;null&quot; /&gt; if no transformer is available.">指定类型名称的转换版本。 如果没有可用的转换器，则返回的 <paramref name="typeName" /> 参数值保持不变。 如果没有可用的转换器，则 <see cref="P:System.Configuration.Configuration.TypeStringTransformer" /> 属性为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.Init">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object to its initial state.">将 <see cref="T:System.Configuration.ConfigurationElement" /> 对象设置为其初始状态。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.InitializeDefault">
      <summary vsli:raw="Used to initialize a default set of values for the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object.">用于初始化 <see cref="T:System.Configuration.ConfigurationElement" /> 对象的默认值集。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.IsModified">
      <summary vsli:raw="Indicates whether this configuration element has been modified since it was last saved or loaded, when implemented in a derived class.">指示自上次保存或加载该配置元素后并在派生类中实现该元素时，该元素是否已被修改。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the element has been modified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果该元素已被修改，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object is read-only.">获取一个值，该值指示 <see cref="T:System.Configuration.ConfigurationElement" /> 对象是否为只读。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Configuration.ConfigurationElement" /> 对象为只读，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)">
      <summary vsli:raw="Adds the invalid-property errors in this &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object, and in all subelements, to the passed list.">将此 <see cref="T:System.Configuration.ConfigurationElement" /> 对象以及所有子元素中无效属性的错误添加到传递的列表中。</summary>
      <param name="errorList" vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; interface.">一个实现 <see cref="T:System.Collections.IList" /> 接口的对象。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
      <summary vsli:raw="Gets a value indicating whether an unknown attribute is encountered during deserialization.">获取一个值，该值指示反序列化过程中是否遇到未知特性。</summary>
      <param name="name" vsli:raw="The name of the unrecognized attribute.">无法识别的特性的名称。</param>
      <param name="value" vsli:raw="The value of the unrecognized attribute.">无法识别的特性的值。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; when an unknown attribute is encountered while deserializing; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果反序列化过程中遇到未知属性，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
      <summary vsli:raw="Gets a value indicating whether an unknown element is encountered during deserialization.">获取一个值，该值指示反序列化过程中是否遇到未知元素。</summary>
      <param name="elementName" vsli:raw="The name of the unknown subelement.">未知的子元素的名称。</param>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; being used for deserialization.">用于反序列化的 <see cref="T:System.Xml.XmlReader" />。</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The element identified by &lt;paramref name=&quot;elementName&quot; /&gt; is locked.  &#xA;  &#xA;-or-&#xA;  &#xA; One or more of the element's attributes is locked.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;elementName&quot; /&gt; is unrecognized, or the element has an unrecognized attribute.  &#xA;  &#xA;-or-&#xA;  &#xA; The element has a Boolean attribute with an invalid value.  &#xA;  &#xA;-or-&#xA;  &#xA; An attempt was made to deserialize a property more than once.  &#xA;  &#xA;-or-&#xA;  &#xA; An attempt was made to deserialize a property that is not a valid member of the element.  &#xA;  &#xA;-or-&#xA;  &#xA; The element cannot contain a CDATA or text element.">通过 <paramref name="elementName" /> 标识的元素被锁定。  
  
- 或 - 
元素的一个或多个特性被锁定。  
  
- 或 - 
 无法识别 <paramref name="elementName" />，或者元素有无法识别的特性。  
  
- 或 - 
元素的某布尔值特性包含无效值。  
  
- 或 - 
多次尝试对属性进行反序列化。  
  
- 或 - 
尝试对非元素有效成员的属性进行反序列化。  
  
- 或 - 
该元素不能包含 CDATA 或文本元素。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; when an unknown element is encountered while deserializing; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果反序列化期间遇到未知元素，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)">
      <summary vsli:raw="Throws an exception when a required property is not found.">找不到所需属性时引发异常。</summary>
      <param name="name" vsli:raw="The name of the required attribute that was not found.">找不到所需特性的名称。</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="In all cases.">在所有情况下。</exception>
      <returns>无。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.PostDeserialize">
      <summary vsli:raw="Called after deserialization.">反序列化后调用。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)">
      <summary vsli:raw="Called before serialization.">在序列化之前调用。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that will be used to serialize the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt;.">将用于对 <see cref="T:System.Configuration.ConfigurationElement" /> 执行序列化的 <see cref="T:System.Xml.XmlWriter" />。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)">
      <summary vsli:raw="Resets the internal state of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object, including the locks and the properties collections.">重置 <see cref="T:System.Configuration.ConfigurationElement" /> 对象的内部状态，包括锁和属性集合。</summary>
      <param name="parentElement" vsli:raw="The parent node of the configuration element.">配置元素的父节点。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.ResetModified">
      <summary vsli:raw="Resets the value of the &lt;see cref=&quot;M:System.Configuration.ConfigurationElement.IsModified&quot; /&gt; method to &lt;see langword=&quot;false&quot; /&gt; when implemented in a derived class.">在派生类中实现时，将 <see cref="M:System.Configuration.ConfigurationElement.IsModified" /> 方法的值重置为 <see langword="false" />。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
      <summary vsli:raw="Writes the contents of this configuration element to the configuration file when implemented in a derived class.">当在派生类中实现后，将此配置元素的内容写入配置文件。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that writes to the configuration file.">写入配置文件的 <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="serializeCollectionKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize only the collection key properties; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果只序列化集合键属性，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The current attribute is locked at a higher configuration level.">当前特性被锁定在更高的配置级别。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any data was actually serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果实际序列化所有数据，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
      <summary vsli:raw="Writes the outer tags of this configuration element to the configuration file when implemented in a derived class.">当在派生类中实现后，将此配置元素的外部标记写入配置文件。</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; that writes to the configuration file.">写入配置文件的 <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="elementName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; to be written.">要写入的 <see cref="T:System.Configuration.ConfigurationElement" /> 的名称。</param>
      <exception cref="T:System.Exception" vsli:raw="The element has multiple child elements.">该元素包含多个子元素。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if writing was successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果写入成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)">
      <summary vsli:raw="Sets a property to the specified value.">将属性设置为指定值。</summary>
      <param name="prop" vsli:raw="The element property to set.">要设置的元素属性。</param>
      <param name="value" vsli:raw="The value to assign to the property.">要分配给属性的值。</param>
      <param name="ignoreLocks" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the locks on the property should be ignored; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果应忽略对属性的锁定，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="Occurs if the element is read-only or &lt;paramref name=&quot;ignoreLocks&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt; but the locks cannot be ignored.">元素为只读时，或者 <paramref name="ignoreLocks" /> 为 <see langword="true" /> 但不能忽略锁定时发生。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.SetReadOnly">
      <summary vsli:raw="Sets the &lt;see cref=&quot;M:System.Configuration.ConfigurationElement.IsReadOnly&quot; /&gt; property for the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object and all subelements.">设置 <see cref="T:System.Configuration.ConfigurationElement" /> 对象及所有子元素的 <see cref="M:System.Configuration.ConfigurationElement.IsReadOnly" /> 属性。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
      <summary vsli:raw="Modifies the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object to remove all values that should not be saved.">修改 <see cref="T:System.Configuration.ConfigurationElement" /> 对象以移除所有不应该保存的值。</summary>
      <param name="sourceElement" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; at the current level containing a merged view of the properties.">当前级别上包含属性的合并视图的 <see cref="T:System.Configuration.ConfigurationElement" />。</param>
      <param name="parentElement" vsli:raw="The parent &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if this is the top level.">父级 <see cref="T:System.Configuration.ConfigurationElement" /> 或 <see langword="null" />（如果为顶层）。</param>
      <param name="saveMode" vsli:raw="One of the enumeration values that determines which property values to include.">确定要包含哪些属性值的其中一个枚举值。</param>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.CurrentConfiguration">
      <summary vsli:raw="Gets a reference to the top-level &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; instance that represents the configuration hierarchy that the current &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; instance belongs to.">获取对顶级 <see cref="T:System.Configuration.Configuration" /> 实例的引用，该实例表示当前 <see cref="T:System.Configuration.ConfigurationElement" /> 实例所属的配置层次结构。</summary>
      <returns vsli:raw="The top-level &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; instance that the current &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; instance belongs to.">当前 <see cref="T:System.Configuration.Configuration" /> 实例所属的顶级 <see cref="T:System.Configuration.ConfigurationElement" /> 实例。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.ElementInformation">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Configuration.ElementInformation&quot; /&gt; object that contains the non-customizable information and functionality of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object.">获取包含 <see cref="T:System.Configuration.ConfigurationElement" /> 对象的不可自定义的信息和功能的 <see cref="T:System.Configuration.ElementInformation" /> 对象。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Configuration.ElementInformation&quot; /&gt; that contains the non-customizable information and functionality of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt;.">一个 <see cref="T:System.Configuration.ElementInformation" />，包含 <see cref="T:System.Configuration.ConfigurationElement" /> 的不可自定义的信息和功能。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.ElementProperty">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementProperty&quot; /&gt; object that represents the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object itself.">获取表示 <see cref="T:System.Configuration.ConfigurationElement" /> 对象本身的 <see cref="T:System.Configuration.ConfigurationElementProperty" /> 对象。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationElementProperty&quot; /&gt; that represents the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; itself.">表示 <see cref="T:System.Configuration.ConfigurationElementProperty" /> 本身的 <see cref="T:System.Configuration.ConfigurationElement" />。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.EvaluationContext">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Configuration.ContextInformation&quot; /&gt; object for the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object.">获取 <see cref="T:System.Configuration.ConfigurationElement" /> 对象的 <see cref="T:System.Configuration.ContextInformation" /> 对象。</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The current element is not associated with a context.">当前元素未关联上下文。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ContextInformation&quot; /&gt; for the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt;.">
        <see cref="T:System.Configuration.ContextInformation" /> 的 <see cref="T:System.Configuration.ConfigurationElement" />。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.HasContext">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;P:System.Configuration.ConfigurationElement.CurrentConfiguration&quot; /&gt; property is &lt;see langword=&quot;null&quot; /&gt;.">获取一个值，该值指示 <see cref="P:System.Configuration.ConfigurationElement.CurrentConfiguration" /> 属性是否为 <see langword="null" />。</summary>
      <returns vsli:raw="false if the &lt;see cref=&quot;P:System.Configuration.ConfigurationElement.CurrentConfiguration&quot; /&gt; property is &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;true&quot; /&gt;.">false，如果 <see cref="P:System.Configuration.ConfigurationElement.CurrentConfiguration" /> 属性为 <see langword="null" />；否则为 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)">
      <summary vsli:raw="Gets or sets a property or attribute of this configuration element.">获取或设置此配置元素的属性或特性。</summary>
      <param name="prop" vsli:raw="The property to access.">要访问的属性。</param>
      <exception cref="T:System.Configuration.ConfigurationException" vsli:raw="&lt;paramref name=&quot;prop&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or does not exist within the element.">
        <paramref name="prop" /> 为 <see langword="null" /> 或不存在于元素中。</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="&lt;paramref name=&quot;prop&quot; /&gt; is read only or locked.">
        <paramref name="prop" /> 为只读或被锁定。</exception>
      <returns vsli:raw="The specified property, attribute, or child element.">指定的属性、特性或子元素。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.Item(System.String)">
      <summary vsli:raw="Gets or sets a property, attribute, or child element of this configuration element.">获取或设置此配置元素的属性、特性或子元素。</summary>
      <param name="propertyName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; to access.">要访问的 <see cref="T:System.Configuration.ConfigurationProperty" /> 的名称。</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="&lt;paramref name=&quot;prop&quot; /&gt; is read-only or locked.">
        <paramref name="prop" /> 为只读或被锁定。</exception>
      <returns vsli:raw="The specified property, attribute, or child element.">指定的属性、特性或子元素。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept">
      <summary vsli:raw="Gets the collection of locked attributes.">获取被锁定的特性的集合。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationLockCollection&quot; /&gt; of locked attributes (properties) for the element.">该元素被锁定的特性（属性）的 <see cref="T:System.Configuration.ConfigurationLockCollection" />。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.LockAllElementsExcept">
      <summary vsli:raw="Gets the collection of locked elements.">获取被锁定的元素的集合。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationLockCollection&quot; /&gt; of locked elements.">被锁定的元素的 <see cref="T:System.Configuration.ConfigurationLockCollection" />。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.LockAttributes">
      <summary vsli:raw="Gets the collection of locked attributes.">获取被锁定的特性的集合。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationLockCollection&quot; /&gt; of locked attributes (properties) for the element.">该元素被锁定的特性（属性）的 <see cref="T:System.Configuration.ConfigurationLockCollection" />。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.LockElements">
      <summary vsli:raw="Gets the collection of locked elements.">获取被锁定的元素的集合。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationLockCollection&quot; /&gt; of locked elements.">被锁定的元素的 <see cref="T:System.Configuration.ConfigurationLockCollection" />。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.LockItem">
      <summary vsli:raw="Gets or sets a value indicating whether the element is locked.">获取或设置一个值，该值指示是否已锁定该元素。</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The element has already been locked at a higher configuration level.">元素已被锁定在更高的配置级别。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the element is locked; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果元素被锁定，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.Properties">
      <summary vsli:raw="Gets the collection of properties.">获取属性的集合。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationPropertyCollection&quot; /&gt; of properties for the element.">元素属性的 <see cref="T:System.Configuration.ConfigurationPropertyCollection" />。</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationElementCollection">
      <summary vsli:raw="Represents a configuration element containing a collection of child elements.">表示一个配置元素，该元素包含子元素的集合。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.#ctor(System.Collections.IComparer)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; class.">创建 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 类的新实例。</summary>
      <param name="comparer" vsli:raw="The &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt; comparer to use.">要使用的 <see cref="T:System.Collections.IComparer" /> 比较器。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;comparer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="comparer" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)">
      <summary vsli:raw="Adds a configuration element to the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt;.">向 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 添加配置元素。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; to add.">要添加的 <see cref="T:System.Configuration.ConfigurationElement" />。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)">
      <summary vsli:raw="Adds a configuration element to the configuration element collection.">向配置元素集合添加配置元素。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; to add.">要添加的 <see cref="T:System.Configuration.ConfigurationElement" />。</param>
      <param name="throwIfExists" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to throw an exception if the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; specified is already contained in the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 表示如果指定的 <see cref="T:System.Configuration.ConfigurationElement" /> 已包含在 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 中则引发异常；否则为 <see langword="false" />。</param>
      <exception cref="T:System.Exception" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; to add already exists in the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; and the &lt;paramref name=&quot;throwIfExists&quot; /&gt; parameter is &lt;see langword=&quot;true&quot; /&gt;.">要添加的 <see cref="T:System.Configuration.ConfigurationElement" /> 已存在于 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 中，并且 <paramref name="throwIfExists" /> 参数为 <see langword="true" />。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)">
      <summary vsli:raw="Adds a configuration element to the configuration element collection.">向配置元素集合添加配置元素。</summary>
      <param name="index" vsli:raw="The index location at which to add the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt;.">要添加指定 <see cref="T:System.Configuration.ConfigurationElement" /> 的索引位置。</param>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; to add.">要添加的 <see cref="T:System.Configuration.ConfigurationElement" />。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseClear">
      <summary vsli:raw="Removes all configuration element objects from the collection.">从集合中移除所有配置元素对象。</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The configuration is read-only.  &#xA;  &#xA;-or-&#xA;  &#xA; A collection item has been locked in a higher-level configuration.">配置是只读的。  
  
- 或 -
  
 集合项已在更高级别的配置中锁定。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)">
      <summary vsli:raw="Gets the configuration element at the specified index location.">获取位于指定索引位置的配置元素。</summary>
      <param name="index" vsli:raw="The index location of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; to return.">要返回的 <see cref="T:System.Configuration.ConfigurationElement" /> 的索引位置。</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than &lt;see langword=&quot;0&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; There is no &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; at the specified &lt;paramref name=&quot;index&quot; /&gt;.">
        <paramref name="index" /> 小于 <see langword="0" />。  
  
- 或 - 
指定的 <paramref name="index" /> 处没有 <see cref="T:System.Configuration.ConfigurationElement" />。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; at the specified index.">指定索引处的 <see cref="T:System.Configuration.ConfigurationElement" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)">
      <summary vsli:raw="Returns the configuration element with the specified key.">返回具有指定键的配置元素。</summary>
      <param name="key" vsli:raw="The key of the element to return.">要返回的元素的键。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; with the specified key; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">具有指定键的 <see cref="T:System.Configuration.ConfigurationElement" />；否则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseGetAllKeys">
      <summary vsli:raw="Returns an array of the keys for all of the configuration elements contained in the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt;.">返回 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 中包含的所有配置元素的键数组。</summary>
      <returns vsli:raw="An array that contains the keys for all of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; objects contained in the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt;.">一个数组，包含 <see cref="T:System.Configuration.ConfigurationElement" /> 中包含的所有 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 对象的键。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)">
      <summary vsli:raw="Gets the key for the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; at the specified index location.">获取位于指定索引位置的 <see cref="T:System.Configuration.ConfigurationElement" /> 的键。</summary>
      <param name="index" vsli:raw="The index location for the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt;.">
        <see cref="T:System.Configuration.ConfigurationElement" /> 的索引位置。</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than &lt;see langword=&quot;0&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; There is no &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; at the specified &lt;paramref name=&quot;index&quot; /&gt;.">
        <paramref name="index" /> 小于 <see langword="0" />。  
  
- 或 - 
指定的 <paramref name="index" /> 处没有 <see cref="T:System.Configuration.ConfigurationElement" />。</exception>
      <returns vsli:raw="The key for the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt;.">指定 <see cref="T:System.Configuration.ConfigurationElement" /> 的键。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)">
      <summary vsli:raw="Indicates the index of the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt;.">获取指定的 <see cref="T:System.Configuration.ConfigurationElement" /> 的索引。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; for the specified index location.">指定索引位置的 <see cref="T:System.Configuration.ConfigurationElement" />。</param>
      <returns vsli:raw="The index of the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt;; otherwise, -1.">指定的 <see cref="T:System.Configuration.ConfigurationElement" /> 的索引；否则为 -1。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)">
      <summary vsli:raw="Indicates whether the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; with the specified key has been removed from the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt;.">指示是否已从 <see cref="T:System.Configuration.ConfigurationElement" /> 中移除具有指定键的 <see cref="T:System.Configuration.ConfigurationElementCollection" />。</summary>
      <param name="key" vsli:raw="The key of the element to check.">要检查的元素的键。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; with the specified key has been removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果已移除具有指定键的 <see cref="T:System.Configuration.ConfigurationElement" />，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)">
      <summary vsli:raw="Removes a &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; from the collection.">从集合中删除 <see cref="T:System.Configuration.ConfigurationElement" /> 对象。</summary>
      <param name="key" vsli:raw="The key of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; to remove.">要移除的 <see cref="T:System.Configuration.ConfigurationElement" /> 的键。</param>
      <exception cref="T:System.Exception" vsli:raw="No &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; with the specified key exists in the collection, the element has already been removed, or the element cannot be removed because the value of its &lt;see cref=&quot;P:System.Configuration.ConfigurationProperty.Type&quot; /&gt; is not &lt;see cref=&quot;F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap&quot; /&gt;.">集合中不存在具有指定键的 <see cref="T:System.Configuration.ConfigurationElement" />，该元素已被移除，或者由于该元素的 <see cref="P:System.Configuration.ConfigurationProperty.Type" /> 值不是 <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap" />，因此无法移除该元素。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; at the specified index location.">移除位于指定索引位置的 <see cref="T:System.Configuration.ConfigurationElement" />。</summary>
      <param name="index" vsli:raw="The index location of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; to remove.">要移除的 <see cref="T:System.Configuration.ConfigurationElement" /> 的索引位置。</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The configuration is read-only.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is less than &lt;see langword=&quot;0&quot; /&gt; or greater than the number of &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; objects in the collection.  &#xA;  &#xA;-or-&#xA;  &#xA; The &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object has already been removed.  &#xA;  &#xA;-or-&#xA;  &#xA; The value of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object has been locked at a higher level.  &#xA;  &#xA;-or-&#xA;  &#xA; The &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object was inherited.  &#xA;  &#xA;-or-&#xA;  &#xA; The value of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object's &lt;see cref=&quot;P:System.Configuration.ConfigurationProperty.Type&quot; /&gt; is not &lt;see cref=&quot;F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap&quot; /&gt; or &lt;see cref=&quot;F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate&quot; /&gt;.">配置是只读的。  
  
- 或 - 
 <paramref name="index" /> 小于 <see langword="0" /> 或大于集合中的 <see cref="T:System.Configuration.ConfigurationElement" /> 对象数。  
  
- 或 - 
<see cref="T:System.Configuration.ConfigurationElement" /> 对象已移除。  
  
- 或 - 
<see cref="T:System.Configuration.ConfigurationElement" /> 对象的值已在更高级别锁定。  
  
- 或 - 
<see cref="T:System.Configuration.ConfigurationElement" /> 对象被继承。  
  
- 或 - 
<see cref="T:System.Configuration.ConfigurationElement" /> 对象的 <see cref="P:System.Configuration.ConfigurationProperty.Type" /> 的值不是 <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap" /> 或 <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate" />。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)">
      <summary vsli:raw="Copies the contents of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; to an array.">将 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 的内容复制到数组。</summary>
      <param name="array" vsli:raw="Array to which to copy the contents of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt;.">
        <see cref="T:System.Configuration.ConfigurationElementCollection" /> 的内容要复制到的数组。</param>
      <param name="index" vsli:raw="Index location at which to begin copying.">开始复制的索引位置。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.CreateNewElement">
      <summary vsli:raw="When overridden in a derived class, creates a new &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt;.">在派生的类中重写时，创建一个新的 <see cref="T:System.Configuration.ConfigurationElement" />。</summary>
      <returns vsli:raw="A newly created &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt;.">一个新创建的 <see cref="T:System.Configuration.ConfigurationElement" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; when overridden in a derived class.">在派生的类中重写时，创建新的 <see cref="T:System.Configuration.ConfigurationElement" />。</summary>
      <param name="elementName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; to create.">要创建的 <see cref="T:System.Configuration.ConfigurationElement" /> 的名称。</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; with a specified name.">一个新的具有指定名称的 <see cref="T:System.Configuration.ConfigurationElement" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)">
      <summary vsli:raw="Compares the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; to the specified object.">将 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 与指定的对象进行比较。</summary>
      <param name="compareTo" vsli:raw="The object to compare.">要比较的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object to compare with is equal to the current &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果要比较的对象等于当前的 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 实例，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
      <summary vsli:raw="Gets the element key for a specified configuration element when overridden in a derived class.">在派生类中重写时获取指定配置元素的元素键。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; to return the key for.">要为其返回键的 <see cref="T:System.Configuration.ConfigurationElement" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that acts as the key for the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt;.">一个 <see cref="T:System.Object" />，用作指定 <see cref="T:System.Configuration.ConfigurationElement" /> 的键。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.GetEnumerator">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; which is used to iterate through the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt;.">获取用于循环访问 <see cref="T:System.Collections.IEnumerator" /> 的 <see cref="T:System.Configuration.ConfigurationElementCollection" />。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; which is used to iterate through the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt;.">用于循环访问 <see cref="T:System.Collections.IEnumerator" /> 的 <see cref="T:System.Configuration.ConfigurationElementCollection" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.GetHashCode">
      <summary vsli:raw="Gets a unique value representing the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; instance.">获取表示 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 实例的唯一值。</summary>
      <returns vsli:raw="A unique value representing the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; current instance.">表示当前 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 实例的唯一值。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.IsElementName(System.String)">
      <summary vsli:raw="Indicates whether the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; exists in the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt;.">指示指定的 <see cref="T:System.Configuration.ConfigurationElement" /> 是否存在于 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 中。</summary>
      <param name="elementName" vsli:raw="The name of the element to verify.">要验证的元素的名称。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the element exists in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果集合中存在该元素，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)">
      <summary vsli:raw="Indicates whether the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; can be removed from the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt;.">指示是否可从 <see cref="T:System.Configuration.ConfigurationElement" /> 中移除指定 <see cref="T:System.Configuration.ConfigurationElementCollection" />。</summary>
      <param name="element" vsli:raw="The element to check.">要检查的元素。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; can be removed from this &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">如果可从此 <see cref="T:System.Configuration.ConfigurationElement" /> 中移除指定的 <see cref="T:System.Configuration.ConfigurationElementCollection" />，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.IsModified">
      <summary vsli:raw="Indicates whether this &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; has been modified since it was last saved or loaded when overridden in a derived class.">在派生的类中重写时，指示从最后一次保存或加载此 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 后是否对其进行了修改。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if any contained element has been modified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果已修改任何包含的项，则为 <see langword="true" />；否则为 <see langword="false" /></returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.IsReadOnly">
      <summary vsli:raw="Indicates whether the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; object is read only.">指示 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 对象是否为只读的。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; object is read only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 对象为只读，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
      <summary vsli:raw="Causes the configuration system to throw an exception.">导致配置系统引发异常。</summary>
      <param name="elementName" vsli:raw="The name of the unrecognized element.">无法识别的元素的名称。</param>
      <param name="reader" vsli:raw="An input stream that reads XML from the configuration file.">从配置文件中读取 XML 的输入流。</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The element specified in &lt;paramref name=&quot;elementName&quot; /&gt; is the &lt;see langword=&quot;&amp;lt;clear&amp;gt;&quot; /&gt; element.">
        <paramref name="elementName" /> 中指定的元素为 <see langword="&lt;clear&gt;" /> 元素。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;elementName&quot; /&gt; starts with the reserved prefix &quot;config&quot; or &quot;lock&quot;.">
        <paramref name="elementName" /> 以保留前缀“config”或“lock”开头。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the unrecognized element was deserialized successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果成功完成对无法识别的元素的反序列化，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)">
      <summary vsli:raw="Resets the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; to its unmodified state when overridden in a derived class.">在派生的类中重写时，将 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 重置为其未被修改时的状态。</summary>
      <param name="parentElement" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; representing the collection parent element, if any; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">表示集合父元素（如果有）的 <see cref="T:System.Configuration.ConfigurationElement" />；否则为 <see langword="null" />。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.ResetModified">
      <summary vsli:raw="Resets the value of the &lt;see cref=&quot;M:System.Configuration.ConfigurationElementCollection.IsModified&quot; /&gt; property to &lt;see langword=&quot;false&quot; /&gt; when overridden in a derived class.">在派生的类中重写时，将 <see cref="M:System.Configuration.ConfigurationElementCollection.IsModified" /> 属性的值重置为 <see langword="false" />。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
      <summary vsli:raw="Writes the configuration data to an XML element in the configuration file when overridden in a derived class.">在派生的类中重写时，将配置数据写入配置文件中的 XML 元素。</summary>
      <param name="writer" vsli:raw="Output stream that writes XML to the configuration file.">将 XML 写入配置文件的输出流。</param>
      <param name="serializeCollectionKey" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize the collection key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若序列化集合键，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="One of the elements in the collection was added or replaced and starts with the reserved prefix &quot;config&quot; or &quot;lock&quot;.">集合中的某个元素被添加或替换，并以保留前缀“config”或“lock”开头。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; was written to the configuration file successfully.">如果已将 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 成功写入配置文件，则为 <see langword="true" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.SetReadOnly">
      <summary vsli:raw="Sets the &lt;see cref=&quot;M:System.Configuration.ConfigurationElementCollection.IsReadOnly&quot; /&gt; property for the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; object and for all sub-elements.">为 <see cref="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" /> 对象和所有子元素设置 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 属性。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; to an array.">将 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 复制到数组。</summary>
      <param name="arr" vsli:raw="Array to which to copy this &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt;.">此 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 要复制到的数组。</param>
      <param name="index" vsli:raw="Index location at which to begin copying.">开始复制的索引位置。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
      <summary vsli:raw="Reverses the effect of merging configuration information from different levels of the configuration hierarchy.">反转从配置层次结构的不同级别合并配置信息的效果。</summary>
      <param name="sourceElement" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object at the current level containing a merged view of the properties.">当前级别上包含属性的合并视图的 <see cref="T:System.Configuration.ConfigurationElement" /> 对象。</param>
      <param name="parentElement" vsli:raw="The parent &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object of the current element, or &lt;see langword=&quot;null&quot; /&gt; if this is the top level.">返回当前元素的父 <see cref="T:System.Configuration.ConfigurationElement" /> 对象，如果当前元素为顶级，则返回 <see langword="null" />。</param>
      <param name="saveMode" vsli:raw="One of the enumeration value that determines which property values to include.">确定要包含哪些属性值的其中一个枚举值。</param>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.AddElementName">
      <summary vsli:raw="Gets or sets the name of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; to associate with the add operation in the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; when overridden in a derived class.">在派生的类中重写时，获取或设置 <see cref="T:System.Configuration.ConfigurationElement" /> 的名称，以便在 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 中与添加操作关联。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The selected value starts with the reserved prefix &quot;config&quot; or &quot;lock&quot;.">选定值以保留前缀“config”或“lock”开头。</exception>
      <returns vsli:raw="The name of the element.">元素的名称。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.ClearElementName">
      <summary vsli:raw="Gets or sets the name for the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; to associate with the clear operation in the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; when overridden in a derived class.">在派生的类中重写时，获取或设置 <see cref="T:System.Configuration.ConfigurationElement" /> 的名称，以便在 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 中与清除操作关联。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The selected value starts with the reserved prefix &quot;config&quot; or &quot;lock&quot;.">选定值以保留前缀“config”或“lock”开头。</exception>
      <returns vsli:raw="The name of the element.">元素的名称。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.CollectionType">
      <summary vsli:raw="Gets the type of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt;.">获取 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 的类型。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollectionType&quot; /&gt; of this collection.">此集合的 <see cref="T:System.Configuration.ConfigurationElementCollectionType" />。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.Count">
      <summary vsli:raw="Gets the number of elements in the collection.">获取集合中的元素数。</summary>
      <returns vsli:raw="The number of elements in the collection.">集合中的元素数。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.ElementName">
      <summary vsli:raw="Gets the name used to identify this collection of elements in the configuration file when overridden in a derived class.">获取在派生的类中重写时用于标识配置文件中此元素集合的名称。</summary>
      <returns vsli:raw="The name of the collection; otherwise, an empty string. The default is an empty string.">集合的名称；否则为空字符串。 默认值为一个空字符串。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.EmitClear">
      <summary vsli:raw="Gets or sets a value that specifies whether the collection has been cleared.">获取或设置一个值，该值指定是否已清除集合。</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The configuration is read-only.">配置是只读的。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection has been cleared; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果已清除集合，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the collection is synchronized.">获取一个值，该值指示是否同步对集合的访问。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; is synchronized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果同步对 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 的访问，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.RemoveElementName">
      <summary vsli:raw="Gets or sets the name of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; to associate with the remove operation in the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; when overridden in a derived class.">在派生的类中重写时，获取或设置 <see cref="T:System.Configuration.ConfigurationElement" /> 的名称，以便在 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 中与移除操作关联。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The selected value starts with the reserved prefix &quot;config&quot; or &quot;lock&quot;.">选定值以保留前缀“config”或“lock”开头。</exception>
      <returns vsli:raw="The name of the element.">元素的名称。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.SyncRoot">
      <summary vsli:raw="Gets an object used to synchronize access to the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt;.">获取用于同步对 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 的访问的对象。</summary>
      <returns vsli:raw="An object used to synchronize access to the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt;.">用于同步 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 访问的对象。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate">
      <summary vsli:raw="Gets a value indicating whether an attempt to add a duplicate &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; to the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; will cause an exception to be thrown.">获取一个值，该值指示尝试向 <see cref="T:System.Configuration.ConfigurationElement" /> 添加重复的 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 是否会导致引发异常。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attempt to add a duplicate &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; to this &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; will cause an exception to be thrown; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果尝试向此 <see cref="T:System.Configuration.ConfigurationElement" /> 添加重复的 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 会导致引发异常，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationElementCollectionType">
      <summary vsli:raw="Specifies the type of a &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollectionType&quot; /&gt; object.">指定 <see cref="T:System.Configuration.ConfigurationElementCollectionType" /> 对象的类型。</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap">
      <summary vsli:raw="The default type of &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt;. Collections of this type contain elements that can be merged across a hierarchy of configuration files. At any particular level within such a hierarchy, &lt;see langword=&quot;add&quot; /&gt;, &lt;see langword=&quot;remove&quot; /&gt;, and &lt;see langword=&quot;clear&quot; /&gt; directives are used to modify any inherited properties and specify new ones.">
        <see cref="T:System.Configuration.ConfigurationElementCollection" /> 的默认类型。 此类型的集合包含可在配置文件的层次结构中进行合并的元素。 在这类层次结构的任何特定级别中，均可使用 <see langword="add" />、<see langword="remove" /> 和 <see langword="clear" /> 指令修改任何继承的属性和指定新的属性。</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate">
      <summary vsli:raw="Same as &lt;see cref=&quot;F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap&quot; /&gt;, except that this type causes the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; object to sort its contents such that inherited elements are listed last.">除了使 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 对象对其内容进行排序以将继承的元素排列在最后外，此类型与 <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap" /> 相同。</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationElementCollectionType.BasicMap">
      <summary vsli:raw="Collections of this type contain elements that apply to the level at which they are specified, and to all child levels. A child level cannot modify the properties specified by a parent element of this type.">此类型的集合包含应用于指定的级别（由这些元素指定）和所有子级别的元素。 子级别不能修改由此类型的父元素指定的属性。</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate">
      <summary vsli:raw="Same as &lt;see cref=&quot;F:System.Configuration.ConfigurationElementCollectionType.BasicMap&quot; /&gt;, except that this type causes the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; object to sort its contents such that inherited elements are listed last.">除了使 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 对象对其内容进行排序以将继承的元素排列在最后外，此类型与 <see cref="F:System.Configuration.ConfigurationElementCollectionType.BasicMap" /> 相同。</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationElementProperty">
      <summary vsli:raw="Specifies the property of a configuration element. This class cannot be inherited.">指定配置元素的属性。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElementProperty.#ctor(System.Configuration.ConfigurationValidatorBase)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementProperty&quot; /&gt; class, based on a supplied parameter.">使用所提供的参数初始化 <see cref="T:System.Configuration.ConfigurationElementProperty" /> 类的新实例。</summary>
      <param name="validator" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorBase&quot; /&gt; object.">
        <see cref="T:System.Configuration.ConfigurationValidatorBase" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;validator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="validator" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationElementProperty.Validator">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorBase&quot; /&gt; object used to validate the &lt;see cref=&quot;T:System.Configuration.ConfigurationElementProperty&quot; /&gt; object.">获取用于验证 <see cref="T:System.Configuration.ConfigurationValidatorBase" /> 对象的 <see cref="T:System.Configuration.ConfigurationElementProperty" /> 对象。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorBase&quot; /&gt; object.">
        <see cref="T:System.Configuration.ConfigurationValidatorBase" /> 对象。</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationErrorsException">
      <summary vsli:raw="The exception that is thrown when a configuration error has occurred.">发生配置错误时引发的异常。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 类的新实例。</summary>
      <param name="info" vsli:raw="The object that holds the information to deserialize.">包含要反序列化的信息的对象。</param>
      <param name="context" vsli:raw="Contextual information about the source or destination.">有关源或目标的上下文信息。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The current type is not a &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; or a &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt;.">当前类型不是 <see cref="T:System.Configuration.ConfigurationException" /> 或 <see cref="T:System.Configuration.ConfigurationErrorsException" />。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="A message that describes why this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception was thrown.">描述引发此 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 异常的原因的消息。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="A message that describes why this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception was thrown.">描述引发此 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 异常的原因的消息。</param>
      <param name="inner" vsli:raw="The exception that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception to be thrown.">导致引发此 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 异常的异常。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception,System.String,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="A message that describes why this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception was thrown.">描述引发此 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 异常的原因的消息。</param>
      <param name="inner" vsli:raw="The inner exception that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception to be thrown.">导致引发此 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 异常的内部异常。</param>
      <param name="filename" vsli:raw="The path to the configuration file that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception to be thrown.">导致引发此 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 异常的配置文件的路径。</param>
      <param name="line" vsli:raw="The line number within the configuration file at which this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception was thrown.">配置文件中引发此 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 异常处的行号。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception,System.Xml.XmlNode)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="A message that describes why this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception was thrown.">描述引发此 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 异常的原因的消息。</param>
      <param name="inner" vsli:raw="The inner exception that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception to be thrown.">导致引发此 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 异常的内部异常。</param>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception to be thrown.">导致引发此 <see cref="T:System.Xml.XmlNode" /> 异常的 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 对象。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception,System.Xml.XmlReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="A message that describes why this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception was thrown.">描述引发此 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 异常的原因的消息。</param>
      <param name="inner" vsli:raw="The inner exception that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception to be thrown.">导致引发此 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 异常的内部异常。</param>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception to be thrown.">导致引发此 <see cref="T:System.Xml.XmlReader" /> 异常的 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 对象。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.String,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="A message that describes why this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception was thrown.">描述引发此 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 异常的原因的消息。</param>
      <param name="filename" vsli:raw="The path to the configuration file that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception to be thrown.">导致引发此 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 异常的配置文件的路径。</param>
      <param name="line" vsli:raw="The line number within the configuration file at which this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception was thrown.">配置文件中引发此 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 异常处的行号。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Xml.XmlNode)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="A message that describes why this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception was thrown.">描述引发此 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 异常的原因的消息。</param>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception to be thrown.">导致引发此 <see cref="T:System.Xml.XmlNode" /> 异常的 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 对象。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Xml.XmlReader)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="A message that describes why this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception was thrown.">描述引发此 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 异常的原因的消息。</param>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception to be thrown.">导致引发此 <see cref="T:System.Xml.XmlReader" /> 异常的 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 对象。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.GetFilename(System.Xml.XmlNode)">
      <summary vsli:raw="Gets the path to the configuration file from which the internal &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object was loaded when this configuration exception was thrown.">获取引发此配置异常时从中加载内部 <see cref="T:System.Xml.XmlNode" /> 对象的配置文件的路径。</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception to be thrown.">导致引发此 <see cref="T:System.Xml.XmlNode" /> 异常的 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 对象。</param>
      <returns vsli:raw="The path to the configuration file from which the internal &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object was loaded when this configuration exception was thrown.">引发此配置异常时从中加载内部 <see cref="T:System.Xml.XmlNode" /> 对象的配置文件的路径。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.GetFilename(System.Xml.XmlReader)">
      <summary vsli:raw="Gets the path to the configuration file that the internal &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; was reading when this configuration exception was thrown.">获取引发此配置异常时内部 <see cref="T:System.Xml.XmlReader" /> 正在读取的配置文件的路径。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception to be thrown.">导致引发此 <see cref="T:System.Xml.XmlReader" /> 异常的 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 对象。</param>
      <returns vsli:raw="The path of the configuration file the internal &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object was accessing when the exception occurred.">发生异常时内部 <see cref="T:System.Xml.XmlReader" /> 对象正在访问的配置文件的路径。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.GetLineNumber(System.Xml.XmlNode)">
      <summary vsli:raw="Gets the line number within the configuration file that the internal &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object represented when this configuration exception was thrown.">获取引发此配置异常时内部 <see cref="T:System.Xml.XmlNode" /> 对象所表示的配置文件中的行号。</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception to be thrown.">导致引发此 <see cref="T:System.Xml.XmlNode" /> 异常的 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 对象。</param>
      <returns vsli:raw="The line number within the configuration file that contains the &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object being parsed when this configuration exception was thrown.">获取配置文件中的行号，该配置文件包含引发此配置异常时正在分析的 <see cref="T:System.Xml.XmlNode" /> 对象。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.GetLineNumber(System.Xml.XmlReader)">
      <summary vsli:raw="Gets the line number within the configuration file that the internal &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object was processing when this configuration exception was thrown.">获取引发此配置异常时内部 <see cref="T:System.Xml.XmlReader" /> 对象正在处理的配置文件中的行号。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception to be thrown.">导致引发此 <see cref="T:System.Xml.XmlReader" /> 异常的 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 对象。</param>
      <returns vsli:raw="The line number within the configuration file that the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object was accessing when the exception occurred.">发生异常时 <see cref="T:System.Xml.XmlReader" /> 对象正在访问的配置文件中的行号。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object with the file name and line number at which this configuration exception occurred.">用发生此配置异常处的文件名和行号设置 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</summary>
      <param name="info" vsli:raw="The object that holds the information to be serialized.">包含要序列化的信息的对象。</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">关于来源和目标的上下文信息</param>
    </member>
    <member name="P:System.Configuration.ConfigurationErrorsException.BareMessage">
      <summary>获取对引发此配置异常的原因的说明。</summary>
      <returns>对引发此 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 的原因的说明。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationErrorsException.Errors">
      <summary vsli:raw="Gets a collection of errors that detail the reasons this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception was thrown.">获取详细描述引发此 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 异常的原因的错误集合。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; object that contains errors that identify the reasons this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception was thrown.">
        <see cref="T:System.Collections.ICollection" /> 对象，包含标识引发此 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 异常的原因的错误。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationErrorsException.Filename">
      <summary vsli:raw="Gets the path to the configuration file that caused this configuration exception to be thrown.">获取导致引发此配置异常的配置文件的路径。</summary>
      <returns vsli:raw="The path to the configuration file that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; to be thrown.">导致引发此 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 的配置文件的路径。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationErrorsException.Line">
      <summary vsli:raw="Gets the line number within the configuration file at which this configuration exception was thrown.">获取配置文件中引发此配置异常处的行号。</summary>
      <returns vsli:raw="The line number within the configuration file at which this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception was thrown.">配置文件中引发此 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 异常处的行号。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationErrorsException.Message">
      <summary vsli:raw="Gets an extended description of why this configuration exception was thrown.">获取对引发此配置异常的原因的补充说明。</summary>
      <returns vsli:raw="An extended description of why this &lt;see cref=&quot;T:System.Configuration.ConfigurationErrorsException&quot; /&gt; exception was thrown.">对引发此 <see cref="T:System.Configuration.ConfigurationErrorsException" /> 异常的原因的补充说明。</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationException">
      <summary vsli:raw="The exception that is thrown when a configuration system error has occurred.">发生配置系统错误时引发的异常。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.ConfigurationException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.ConfigurationException" /> 类的新实例。</summary>
      <param name="info" vsli:raw="The object that holds the information to deserialize.">包含要反序列化的信息的对象。</param>
      <param name="context" vsli:raw="Contextual information about the source or destination.">有关源或目标的上下文信息。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.ConfigurationException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="A message describing why this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; exception was thrown.">描述引发该 <see cref="T:System.Configuration.ConfigurationException" /> 异常的原因的消息。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.ConfigurationException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="A message describing why this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; exception was thrown.">描述引发该 <see cref="T:System.Configuration.ConfigurationException" /> 异常的原因的消息。</param>
      <param name="inner" vsli:raw="The inner exception that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; to be thrown, if any.">导致引发此 <see cref="T:System.Configuration.ConfigurationException" /> 的内部异常（如果有）。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.String,System.Exception,System.String,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.ConfigurationException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="A message describing why this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; exception was thrown.">描述引发该 <see cref="T:System.Configuration.ConfigurationException" /> 异常的原因的消息。</param>
      <param name="inner" vsli:raw="The inner exception that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; to be thrown, if any.">导致引发此 <see cref="T:System.Configuration.ConfigurationException" /> 的内部异常（如果有）。</param>
      <param name="filename" vsli:raw="The path to the configuration file that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; to be thrown.">导致引发此 <see cref="T:System.Configuration.ConfigurationException" /> 的配置文件的路径。</param>
      <param name="line" vsli:raw="The line number within the configuration file at which this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; was thrown.">配置文件中引发此 <see cref="T:System.Configuration.ConfigurationException" /> 处的行号。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.String,System.Exception,System.Xml.XmlNode)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.ConfigurationException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="A message describing why this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; exception was thrown.">描述引发该 <see cref="T:System.Configuration.ConfigurationException" /> 异常的原因的消息。</param>
      <param name="inner" vsli:raw="The inner exception that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; to be thrown, if any.">导致引发此 <see cref="T:System.Configuration.ConfigurationException" /> 的内部异常（如果有）。</param>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; to be thrown.">导致引发此 <see cref="T:System.Xml.XmlNode" /> 的 <see cref="T:System.Configuration.ConfigurationException" />。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.String,System.String,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.ConfigurationException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="A message describing why this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; exception was thrown.">描述引发该 <see cref="T:System.Configuration.ConfigurationException" /> 异常的原因的消息。</param>
      <param name="filename" vsli:raw="The path to the configuration file that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; to be thrown.">导致引发此 <see cref="T:System.Configuration.ConfigurationException" /> 的配置文件的路径。</param>
      <param name="line" vsli:raw="The line number within the configuration file at which this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; was thrown.">配置文件中引发此 <see cref="T:System.Configuration.ConfigurationException" /> 处的行号。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.String,System.Xml.XmlNode)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.ConfigurationException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="A message describing why this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; exception was thrown.">描述引发该 <see cref="T:System.Configuration.ConfigurationException" /> 异常的原因的消息。</param>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; to be thrown.">导致引发此 <see cref="T:System.Xml.XmlNode" /> 的 <see cref="T:System.Configuration.ConfigurationException" />。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object with the file name and line number at which this configuration exception occurred.">用发生此配置异常处的文件名和行号设置 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</summary>
      <param name="info" vsli:raw="The object that holds the information to be serialized.">包含要序列化的信息的对象。</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">关于来源和目标的上下文信息</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.GetXmlNodeFilename(System.Xml.XmlNode)">
      <summary vsli:raw="Gets the path to the configuration file from which the internal &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object was loaded when this configuration exception was thrown.">获取引发此配置异常时从中加载内部 <see cref="T:System.Xml.XmlNode" /> 对象的配置文件的路径。</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; exception to be thrown.">导致引发此 <see cref="T:System.Xml.XmlNode" /> 异常的 <see cref="T:System.Configuration.ConfigurationException" />。</param>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; representing the node file name.">一个 <see langword="string" />，表示节点文件名。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationException.GetXmlNodeLineNumber(System.Xml.XmlNode)">
      <summary vsli:raw="Gets the line number within the configuration file that the internal &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object represented when this configuration exception was thrown.">获取引发此配置异常时内部 <see cref="T:System.Xml.XmlNode" /> 对象所表示的配置文件中的行号。</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; exception to be thrown.">导致引发此 <see cref="T:System.Xml.XmlNode" /> 异常的 <see cref="T:System.Configuration.ConfigurationException" />。</param>
      <returns vsli:raw="An &lt;see langword=&quot;int&quot; /&gt; representing the node line number.">一个 <see langword="int" />，表示节点行号。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationException.BareMessage">
      <summary vsli:raw="Gets a description of why this configuration exception was thrown.">获取对引发此配置异常的原因的说明。</summary>
      <returns vsli:raw="A description of why this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; exception was thrown.">对引发此 <see cref="T:System.Configuration.ConfigurationException" /> 异常的原因的说明。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationException.Filename">
      <summary vsli:raw="Gets the path to the configuration file that caused this configuration exception to be thrown.">获取导致引发此配置异常的配置文件的路径。</summary>
      <returns vsli:raw="The path to the configuration file that caused this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; exception to be thrown.">导致引发此 <see cref="T:System.Configuration.ConfigurationException" /> 异常的配置文件的路径。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationException.Line">
      <summary vsli:raw="Gets the line number within the configuration file at which this configuration exception was thrown.">获取配置文件中引发此配置异常处的行号。</summary>
      <returns vsli:raw="The line number within the configuration file at which this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; exception was thrown.">配置文件中引发此 <see cref="T:System.Configuration.ConfigurationException" /> 异常处的行号。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationException.Message">
      <summary vsli:raw="Gets an extended description of why this configuration exception was thrown.">获取对引发此配置异常的原因的补充说明。</summary>
      <returns vsli:raw="An extended description of why this &lt;see cref=&quot;T:System.Configuration.ConfigurationException&quot; /&gt; exception was thrown.">对引发此 <see cref="T:System.Configuration.ConfigurationException" /> 异常的原因的补充说明。</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationFileMap">
      <summary vsli:raw="Defines the configuration file mapping for the machine configuration file.">为计算机配置文件定义配置文件映射。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationFileMap.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationFileMap&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.ConfigurationFileMap" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationFileMap.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationFileMap&quot; /&gt; class based on the supplied parameter.">根据提供的参数初始化 <see cref="T:System.Configuration.ConfigurationFileMap" /> 类的新实例。</summary>
      <param name="machineConfigFilename" vsli:raw="The name of the machine configuration file.">计算机配置文件的名称。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationFileMap.Clone">
      <summary vsli:raw="Creates a copy of the existing &lt;see cref=&quot;T:System.Configuration.ConfigurationFileMap&quot; /&gt; object.">创建现有 <see cref="T:System.Configuration.ConfigurationFileMap" /> 对象的副本。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationFileMap&quot; /&gt; object.">
        <see cref="T:System.Configuration.ConfigurationFileMap" /> 对象。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationFileMap.MachineConfigFilename">
      <summary vsli:raw="Gets or sets the name of the machine configuration file name.">获取或设置计算机配置文件的名称。</summary>
      <returns vsli:raw="The machine configuration file name.">计算机配置文件名。</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationLocation">
      <summary vsli:raw="Represents a &lt;see langword=&quot;location&quot; /&gt; element within a configuration file.">表示配置文件中的 <see langword="location" /> 元素。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationLocation.OpenConfiguration">
      <summary vsli:raw="Creates an instance of a Configuration object.">创建 Configuration 对象的实例。</summary>
      <returns vsli:raw="A Configuration object.">Configuration 对象。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationLocation.Path">
      <summary vsli:raw="Gets the relative path to the resource whose configuration settings are represented by this &lt;see cref=&quot;T:System.Configuration.ConfigurationLocation&quot; /&gt; object.">获取配置设置由此 <see cref="T:System.Configuration.ConfigurationLocation" /> 对象表示的资源的相对路径。</summary>
      <returns vsli:raw="The relative path to the resource whose configuration settings are represented by this &lt;see cref=&quot;T:System.Configuration.ConfigurationLocation&quot; /&gt;.">资源的相对路径，该资源的配置设置由此 <see cref="T:System.Configuration.ConfigurationLocation" /> 表示。</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationLocationCollection">
      <summary vsli:raw="Contains a collection of &lt;see cref=&quot;T:System.Configuration.ConfigurationLocationCollection&quot; /&gt; objects.">包含 <see cref="T:System.Configuration.ConfigurationLocationCollection" /> 对象的集合。</summary>
    </member>
    <member name="P:System.Configuration.ConfigurationLocationCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Configuration.ConfigurationLocationCollection&quot; /&gt; object at the specified index.">获取位于指定索引位置的 <see cref="T:System.Configuration.ConfigurationLocationCollection" /> 对象。</summary>
      <param name="index" vsli:raw="The index location of the &lt;see cref=&quot;T:System.Configuration.ConfigurationLocationCollection&quot; /&gt; to return.">要返回的 <see cref="T:System.Configuration.ConfigurationLocationCollection" /> 的索引位置。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationLocationCollection&quot; /&gt; at the specified index.">指定索引处的 <see cref="T:System.Configuration.ConfigurationLocationCollection" />。</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationLockCollection">
      <summary vsli:raw="Contains a collection of locked configuration objects. This class cannot be inherited.">包含锁定的配置对象的集合。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.Add(System.String)">
      <summary vsli:raw="Locks a configuration object by adding it to the collection.">通过将配置对象添加到集合来锁定该配置对象。</summary>
      <param name="name" vsli:raw="The name of the configuration object.">配置对象的名称。</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="Occurs when the &lt;paramref name=&quot;name&quot; /&gt; does not match an existing configuration object within the collection.">在 <paramref name="name" /> 与集合中的现有配置对象不匹配时发生。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.Clear">
      <summary vsli:raw="Clears all configuration objects from the collection.">清除集合中的所有配置对象。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.Contains(System.String)">
      <summary vsli:raw="Verifies whether a specific configuration object is locked.">验证是否锁定了某个特定的配置对象。</summary>
      <param name="name" vsli:raw="The name of the configuration object to verify.">要验证的配置对象的名称。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.ConfigurationLockCollection&quot; /&gt; contains the specified configuration object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Configuration.ConfigurationLockCollection" /> 包含指定的配置对象，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.CopyTo(System.String[],System.Int32)">
      <summary vsli:raw="Copies the entire &lt;see cref=&quot;T:System.Configuration.ConfigurationLockCollection&quot; /&gt; collection to a compatible one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified index of the target array.">从目标数组的指定索引处开始，将整个 <see cref="T:System.Configuration.ConfigurationLockCollection" /> 集合复制到兼容的一维 <see cref="T:System.Array" />。</summary>
      <param name="array" vsli:raw="A one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from the &lt;see cref=&quot;T:System.Configuration.ConfigurationLockCollection&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">一个一维 <see cref="T:System.Array" />，它是从 <see cref="T:System.Configuration.ConfigurationLockCollection" /> 复制的元素的目标。 <see cref="T:System.Array" /> 必须具有从零开始的索引。</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">
        <paramref name="array" /> 中从零开始的索引，从此处开始复制。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.GetEnumerator">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object, which is used to iterate through this &lt;see cref=&quot;T:System.Configuration.ConfigurationLockCollection&quot; /&gt; collection.">获取 <see cref="T:System.Collections.IEnumerator" /> 对象，此对象用于循环访问此 <see cref="T:System.Configuration.ConfigurationLockCollection" /> 集合。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object.">一个 <see cref="T:System.Collections.IEnumerator" /> 对象。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.IsReadOnly(System.String)">
      <summary vsli:raw="Verifies whether a specific configuration object is read-only.">验证某个特定的配置对象是否为只读。</summary>
      <param name="name" vsli:raw="The name of the configuration object to verify.">要验证的配置对象的名称。</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The specified configuration object is not in the collection.">指定的配置对象不在集合中。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified configuration object in the &lt;see cref=&quot;T:System.Configuration.ConfigurationLockCollection&quot; /&gt; collection is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Configuration.ConfigurationLockCollection" /> 集合中指定的配置对象为只读，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.Remove(System.String)">
      <summary vsli:raw="Removes a configuration object from the collection.">从集合中移除配置对象。</summary>
      <param name="name" vsli:raw="The name of the configuration object.">配置对象的名称。</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="Occurs when the &lt;paramref name=&quot;name&quot; /&gt; does not match an existing configuration object within the collection.">在 <paramref name="name" /> 与集合中的现有配置对象不匹配时发生。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.SetFromList(System.String)">
      <summary vsli:raw="Locks a set of configuration objects based on the supplied list.">根据所提供的列表锁定一组配置对象。</summary>
      <param name="attributeList" vsli:raw="A comma-delimited string.">一个以逗号分隔的字符串。</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="Occurs when an item in the &lt;paramref name=&quot;attributeList&quot; /&gt; parameter is not a valid lockable configuration attribute.">在 <paramref name="attributeList" /> 参数中的某一项不是有效的可锁定配置特性时发生。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the entire &lt;see cref=&quot;T:System.Configuration.ConfigurationLockCollection&quot; /&gt; collection to a compatible one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified index of the target array.">从目标数组的指定索引处开始，将整个 <see cref="T:System.Configuration.ConfigurationLockCollection" /> 集合复制到兼容的一维 <see cref="T:System.Array" />。</summary>
      <param name="array" vsli:raw="A one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from the &lt;see cref=&quot;T:System.Configuration.ConfigurationLockCollection&quot; /&gt; collection. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">一个一维 <see cref="T:System.Array" />，它是从 <see cref="T:System.Configuration.ConfigurationLockCollection" /> 集合复制的元素的目标。 <see cref="T:System.Array" /> 必须具有从零开始的索引。</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">
        <paramref name="array" /> 中从零开始的索引，从此处开始复制。</param>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.AttributeList">
      <summary vsli:raw="Gets a list of configuration objects contained in the collection.">获取集合中包含的配置对象的列表。</summary>
      <returns vsli:raw="A comma-delimited string that lists the lock configuration objects in the collection.">一个以逗号分隔的字符串，它列出集合中的锁定配置对象。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.Count">
      <summary vsli:raw="Gets the number of locked configuration objects contained in the collection.">获取集合中包含的锁定配置对象的数目。</summary>
      <returns vsli:raw="The number of locked configuration objects contained in the collection.">集合中包含的锁定配置对象的数目。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.HasParentElements">
      <summary vsli:raw="Gets a value specifying whether the collection of locked objects has parent elements.">获取一个值，该值指定锁定对象的集合是否具有父元素。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.ConfigurationLockCollection&quot; /&gt; collection has parent elements; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果此 <see cref="T:System.Configuration.ConfigurationLockCollection" /> 集合具有父元素，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.IsModified">
      <summary vsli:raw="Gets a value specifying whether the collection has been modified.">获取一个值，该值指定是否已修改集合。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.ConfigurationLockCollection&quot; /&gt; collection has been modified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果此 <see cref="T:System.Configuration.ConfigurationLockCollection" /> 集合已修改，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.IsSynchronized">
      <summary vsli:raw="Gets a value specifying whether the collection is synchronized.">获取一个值，该值指定集合是否已同步。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.ConfigurationLockCollection&quot; /&gt; collection is synchronized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果此 <see cref="T:System.Configuration.ConfigurationLockCollection" /> 集合已同步，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.SyncRoot">
      <summary vsli:raw="Gets an object used to synchronize access to this &lt;see cref=&quot;T:System.Configuration.ConfigurationLockCollection&quot; /&gt; collection.">获取一个对象，该对象用于同步对此 <see cref="T:System.Configuration.ConfigurationLockCollection" /> 集合的访问。</summary>
      <returns vsli:raw="An object used to synchronize access to this &lt;see cref=&quot;T:System.Configuration.ConfigurationLockCollection&quot; /&gt; collection.">用于同步对此 <see cref="T:System.Configuration.ConfigurationLockCollection" /> 集合的访问的对象。</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationManager">
      <summary vsli:raw="Provides access to configuration files for client applications. This class cannot be inherited.">提供对客户端应用程序配置文件的访问。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.GetSection(System.String)">
      <summary vsli:raw="Retrieves a specified configuration section for the current application's default configuration.">检索当前应用程序默认配置的指定配置节。</summary>
      <param name="sectionName" vsli:raw="The configuration section path and name. Node names are separated by forward slashes, for example &quot;system.net/mailSettings/smtp&quot;.">配置节的路径和名称。 节点名称是通过正斜杠分隔开的，例如“system.net/mailSettings/smtp”。</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="A configuration file could not be loaded.">无法加载配置文件。</exception>
      <returns vsli:raw="The specified &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object, or &lt;see langword=&quot;null&quot; /&gt; if the section does not exist.">指定的 <see cref="T:System.Configuration.ConfigurationSection" /> 对象，如果该节不存在，则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.Configuration.ConfigurationUserLevel)">
      <summary vsli:raw="Opens the configuration file for the current application as a &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">将当前应用程序的配置文件作为 <see cref="T:System.Configuration.Configuration" /> 对象打开。</summary>
      <param name="userLevel" vsli:raw="One of the enumeration values that specifies the user level for which you are opening the configuration.">枚举值之一，指定用于打开配置的用户级别。</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="A configuration file could not be loaded.">无法加载配置文件。</exception>
      <returns vsli:raw="The configuration file for the current application.">当前应用程序的配置文件。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.String)">
      <summary vsli:raw="Opens the specified client configuration file as a &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">将指定的客户端配置文件作为 <see cref="T:System.Configuration.Configuration" /> 对象打开。</summary>
      <param name="exePath" vsli:raw="The path of the executable (exe) file.">可执行 (exe) 文件的路径。</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="A configuration file could not be loaded.">无法加载配置文件。</exception>
      <returns vsli:raw="The specified configuration file.">指定的配置文件。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenMachineConfiguration">
      <summary vsli:raw="Opens the machine configuration file on the current computer as a &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">将当前计算机的配置文件作为 <see cref="T:System.Configuration.Configuration" /> 对象打开。</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="A configuration file could not be loaded.">无法加载配置文件。</exception>
      <returns vsli:raw="The machine configuration file.">计算机配置文件。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel)">
      <summary vsli:raw="Opens the specified client configuration file as a &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object that uses the specified file mapping and user level.">将指定客户端配置文件作为 <see cref="T:System.Configuration.Configuration" /> 对象打开，该对象使用指定的文件映射和用户级别。</summary>
      <param name="fileMap" vsli:raw="The configuration file to use instead of the application default configuration file.">代替应用程序的默认配置文件使用的配置文件。</param>
      <param name="userLevel" vsli:raw="One of the enumeration values that specifies the user level for which you are opening the configuration.">枚举值之一，指定用于打开配置的用户级别。</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="A configuration file could not be loaded.">无法加载配置文件。</exception>
      <returns vsli:raw="The configuration object.">配置对象。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel,System.Boolean)">
      <summary vsli:raw="Opens the specified client configuration file as a &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object that uses the specified file mapping, user level, and preload option.">可将指定的客户端配置文件作为使用指定文件映射、用户级别和预加载选项的 <see cref="T:System.Configuration.Configuration" /> 对象打开。</summary>
      <param name="fileMap" vsli:raw="The configuration file to use instead of the default application configuration file.">代替应用程序的默认配置文件使用的配置文件。</param>
      <param name="userLevel" vsli:raw="One of the enumeration values that specifies the user level for which you are opening the configuration.">枚举值之一，指定用于打开配置的用户级别。</param>
      <param name="preLoad" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to preload all section groups and sections; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果预加载所有节组和节，则为 <see langword="true" />，否则为 <see langword="false" />。</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="A configuration file could not be loaded.">无法加载配置文件。</exception>
      <returns vsli:raw="The configuration object.">配置对象。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration(System.Configuration.ConfigurationFileMap)">
      <summary vsli:raw="Opens the machine configuration file as a &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object that uses the specified file mapping.">将计算机配置文件作为 <see cref="T:System.Configuration.Configuration" /> 对象打开，该对象使用指定的文件映射。</summary>
      <param name="fileMap" vsli:raw="The configuration file to use instead of the application default configuration file.">代替应用程序的默认配置文件使用的配置文件。</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="A configuration file could not be loaded.">无法加载配置文件。</exception>
      <returns vsli:raw="The machine configuration file.">计算机配置文件。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.RefreshSection(System.String)">
      <summary vsli:raw="Refreshes the named section so the next time that it is retrieved it will be re-read from disk.">刷新命名节，这样在下次检索它时将从磁盘重新读取它。</summary>
      <param name="sectionName" vsli:raw="The configuration section name or the configuration path and section name of the section to refresh.">要刷新的节的配置节名称或配置路径和节名称。</param>
    </member>
    <member name="P:System.Configuration.ConfigurationManager.AppSettings">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Configuration.AppSettingsSection&quot; /&gt; data for the current application's default configuration.">获取当前应用程序默认配置的 <see cref="T:System.Configuration.AppSettingsSection" /> 数据。</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="Could not retrieve a &lt;see cref=&quot;T:System.Collections.Specialized.NameValueCollection&quot; /&gt; object with the application settings data.">无法检索具有应用程序设置数据的 <see cref="T:System.Collections.Specialized.NameValueCollection" /> 对象。</exception>
      <returns vsli:raw="The contents of the &lt;see cref=&quot;T:System.Configuration.AppSettingsSection&quot; /&gt; object for the current application's default configuration.">
        <see cref="T:System.Configuration.AppSettingsSection" />当前应用程序默认配置的对象的内容。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationManager.ConnectionStrings">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Configuration.ConnectionStringsSection&quot; /&gt; data for the current application's default configuration.">获取当前应用程序默认配置的 <see cref="T:System.Configuration.ConnectionStringsSection" /> 数据。</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="Could not retrieve a &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettingsCollection&quot; /&gt; object.">检索不到 <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> 对象。</exception>
      <returns vsli:raw="The contents of the &lt;see cref=&quot;T:System.Configuration.ConnectionStringsSection&quot; /&gt; object for the current application's default configuration.">
        <see cref="T:System.Configuration.ConnectionStringsSection" />当前应用程序默认配置的对象的内容。</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationProperty">
      <summary vsli:raw="Represents an attribute or a child of a configuration element. This class cannot be inherited.">表示配置元素的一个特性或子级。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.ConfigurationProperty" /> 类的新实例。</summary>
      <param name="name" vsli:raw="The name of the configuration entity.">配置实体的名称。</param>
      <param name="type" vsli:raw="The type of the configuration entity.">配置实体的类型。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.ConfigurationProperty" /> 类的新实例。</summary>
      <param name="name" vsli:raw="The name of the configuration entity.">配置实体的名称。</param>
      <param name="type" vsli:raw="The type of the configuration entity.">配置实体的类型。</param>
      <param name="defaultValue" vsli:raw="The default value of the configuration entity.">配置实体的默认值。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.ConfigurationProperty" /> 类的新实例。</summary>
      <param name="name" vsli:raw="The name of the configuration entity.">配置实体的名称。</param>
      <param name="type" vsli:raw="The type of the configuration entity.">配置实体的类型。</param>
      <param name="defaultValue" vsli:raw="The default value of the configuration entity.">配置实体的默认值。</param>
      <param name="typeConverter" vsli:raw="The type of the converter to apply.">要应用的转换器类型。</param>
      <param name="validator" vsli:raw="The validator to use.">要使用的验证程序。</param>
      <param name="options" vsli:raw="One of the &lt;see cref=&quot;T:System.Configuration.ConfigurationPropertyOptions&quot; /&gt; enumeration values.">
        <see cref="T:System.Configuration.ConfigurationPropertyOptions" /> 枚举值之一。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.ConfigurationProperty" /> 类的新实例。</summary>
      <param name="name" vsli:raw="The name of the configuration entity.">配置实体的名称。</param>
      <param name="type" vsli:raw="The type of the configuration entity.">配置实体的类型。</param>
      <param name="defaultValue" vsli:raw="The default value of the configuration entity.">配置实体的默认值。</param>
      <param name="typeConverter" vsli:raw="The type of the converter to apply.">要应用的转换器类型。</param>
      <param name="validator" vsli:raw="The validator to use.">要使用的验证程序。</param>
      <param name="options" vsli:raw="One of the &lt;see cref=&quot;T:System.Configuration.ConfigurationPropertyOptions&quot; /&gt; enumeration values.">
        <see cref="T:System.Configuration.ConfigurationPropertyOptions" /> 枚举值之一。</param>
      <param name="description" vsli:raw="The description of the configuration entity.">配置实体的说明。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.Configuration.ConfigurationPropertyOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.ConfigurationProperty" /> 类的新实例。</summary>
      <param name="name" vsli:raw="The name of the configuration entity.">配置实体的名称。</param>
      <param name="type" vsli:raw="The type of the configuration entity.">配置实体的类型。</param>
      <param name="defaultValue" vsli:raw="The default value of the configuration entity.">配置实体的默认值。</param>
      <param name="options" vsli:raw="One of the &lt;see cref=&quot;T:System.Configuration.ConfigurationPropertyOptions&quot; /&gt; enumeration values.">
        <see cref="T:System.Configuration.ConfigurationPropertyOptions" /> 枚举值之一。</param>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.Converter">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; used to convert this &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; into an XML representation for writing to the configuration file.">获取 <see cref="T:System.ComponentModel.TypeConverter" />，该转换器用于将此 <see cref="T:System.Configuration.ConfigurationProperty" /> 转换为便于写入配置文件的 XML 表示形式。</summary>
      <exception cref="T:System.Exception" vsli:raw="This &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; cannot be converted.">此 <see cref="T:System.Configuration.ConfigurationProperty" /> 无法转换。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; used to convert this &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; into an XML representation for writing to the configuration file.">
        <see cref="T:System.ComponentModel.TypeConverter" /> 用于将此 <see cref="T:System.Configuration.ConfigurationProperty" /> 转换为便于写入配置文件的 XML 表示形式。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.DefaultValue">
      <summary vsli:raw="Gets the default value for this &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; property.">获取此 <see cref="T:System.Configuration.ConfigurationProperty" /> 属性的默认值。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that can be cast to the type specified by the &lt;see cref=&quot;P:System.Configuration.ConfigurationProperty.Type&quot; /&gt; property.">可被强制转换为 <see cref="T:System.Object" /> 属性所指定类型的 <see cref="P:System.Configuration.ConfigurationProperty.Type" />。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.Description">
      <summary vsli:raw="Gets the description associated with the &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt;.">获取与 <see cref="T:System.Configuration.ConfigurationProperty" /> 关联的说明。</summary>
      <returns vsli:raw="A &lt;see langword=&quot;string&quot; /&gt; value that describes the property.">描述属性的 <see langword="string" /> 值。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsAssemblyStringTransformationRequired">
      <summary vsli:raw="Indicates whether the assembly name for the configuration property requires transformation when it is serialized for an earlier version of the .NET Framework.">指示在针对早期版本的 .NET Framework 序列化配置属性时，是否需要转换该属性的程序集名称。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property requires assembly name transformation; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果该属性需要转换程序集名称，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsDefaultCollection">
      <summary vsli:raw="Gets a value that indicates whether the property is the default collection of an element.">获取一个值，该值指示属性是否为默认的元素集合。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property is the default collection of an element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果属性是元素的默认集合，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsKey">
      <summary vsli:raw="Gets a value indicating whether this &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; is the key for the containing &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object.">获取一个值，该值指示此 <see cref="T:System.Configuration.ConfigurationProperty" /> 是否为 <see cref="T:System.Configuration.ConfigurationElement" /> 包含对象的键。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; object is the key for the containing element; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果此 <see cref="T:System.Configuration.ConfigurationProperty" /> 对象是包含元素的键，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsRequired">
      <summary vsli:raw="Gets a value indicating whether this &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; is required.">获取一个值，该值指示此 <see cref="T:System.Configuration.ConfigurationProperty" /> 是否为必需的。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; is required; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Configuration.ConfigurationProperty" /> 是必需的，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsTypeStringTransformationRequired">
      <summary vsli:raw="Indicates whether the type name for the configuration property requires transformation when it is serialized for an earlier version of the .NET Framework.">指示在针对早期版本的 .NET Framework 序列化配置属性时，是否需要转换该属性的类型名称。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property requires type-name transformation; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果该属性需要转换类型名称，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsVersionCheckRequired">
      <summary vsli:raw="Indicates whether the configuration property's parent configuration section is queried at serialization time to determine whether the configuration property should be serialized into XML.">指示进行序列化时是否应查询配置属性的父配置节，以确定是否应将配置属性序列化到 XML 中。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the parent configuration section should be queried; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果应查询父配置节，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.Name">
      <summary vsli:raw="Gets the name of this &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt;.">获取此 <see cref="T:System.Configuration.ConfigurationProperty" /> 的名称。</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt;.">
        <see cref="T:System.Configuration.ConfigurationProperty" /> 的名称。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.Type">
      <summary vsli:raw="Gets the type of this &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; object.">获取此 <see cref="T:System.Configuration.ConfigurationProperty" /> 对象的类型。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; representing the type of this &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; object.">一个表示此 <see cref="T:System.Type" /> 对象的类型的 <see cref="T:System.Configuration.ConfigurationProperty" />。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.Validator">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorAttribute&quot; /&gt;, which is used to validate this &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; object.">获取 <see cref="T:System.Configuration.ConfigurationValidatorAttribute" />，它用于验证此 <see cref="T:System.Configuration.ConfigurationProperty" /> 对象。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorBase&quot; /&gt; validator, which is used to validate this &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt;.">用于验证此 <see cref="T:System.Configuration.ConfigurationValidatorBase" /> 的 <see cref="T:System.Configuration.ConfigurationProperty" /> 验证程序。</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationPropertyAttribute">
      <summary vsli:raw="Declaratively instructs .NET to instantiate a configuration property. This class cannot be inherited.">以声明方式指示 .NET Framework，以实例化配置属性。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of &lt;see cref=&quot;T:System.Configuration.ConfigurationPropertyAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.ConfigurationPropertyAttribute" /> 类的新实例。</summary>
      <param name="name" vsli:raw="Name of the &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; object defined.">已定义的 <see cref="T:System.Configuration.ConfigurationProperty" /> 对象名称。</param>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.DefaultValue">
      <summary vsli:raw="Gets or sets the default value for the decorated property.">获取或设置修饰属性的默认值。</summary>
      <returns vsli:raw="The object representing the default value of the decorated configuration-element property.">表示经过修饰的配置元素属性默认值的对象。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection">
      <summary vsli:raw="Gets or sets a value indicating whether this is the default property collection for the decorated configuration property.">获取或设置一个值，指示此属性集合是否为经过修饰的配置属性的默认属性集合。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property represents the default collection of an element; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果该属性表示元素的默认集合，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.IsKey">
      <summary vsli:raw="Gets or sets a value indicating whether this is a key property for the decorated element property.">获取或设置一个值，该值指示此属性是否是该经过修饰的元素属性的 Key 属性。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property is a key property for an element of the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果此属性是该集合中元素的 Key 属性，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.IsRequired">
      <summary vsli:raw="Gets or sets a value indicating whether the decorated element property is required.">获取或设置一个值，该值指示经过修饰的元素属性是否为必需。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property is required; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果该属性是必需的，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.Name">
      <summary vsli:raw="Gets the name of the decorated configuration-element property.">获取经过修饰的配置元素属性的名称。</summary>
      <returns vsli:raw="The name of the decorated configuration-element property.">经过修饰的配置元素属性的名称。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.Options">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Configuration.ConfigurationPropertyOptions&quot; /&gt; for the decorated configuration-element property.">为经过修饰的配置元素属性获取或设置 <see cref="T:System.Configuration.ConfigurationPropertyOptions" />。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Configuration.ConfigurationPropertyOptions&quot; /&gt; enumeration values associated with the property.">与该属性相关的 <see cref="T:System.Configuration.ConfigurationPropertyOptions" /> 枚举值之一。</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationPropertyCollection">
      <summary vsli:raw="Represents a collection of configuration-element properties.">表示配置元素属性的集合。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationPropertyCollection&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.Add(System.Configuration.ConfigurationProperty)">
      <summary vsli:raw="Adds a configuration property to the collection.">将配置属性添加到集合。</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; to add.">要添加的 <see cref="T:System.Configuration.ConfigurationProperty" />。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.Clear">
      <summary vsli:raw="Removes all configuration property objects from the collection.">从集合中移除所有配置属性对象。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.Contains(System.String)">
      <summary vsli:raw="Specifies whether the configuration property is contained in this collection.">指定此集合中是否包含配置属性。</summary>
      <param name="name" vsli:raw="An identifier for the &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; to verify.">要进行验证的 <see cref="T:System.Configuration.ConfigurationProperty" /> 的标识符。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; is contained in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see cref="T:System.Configuration.ConfigurationProperty" /> 包含在集合中，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.CopyTo(System.Configuration.ConfigurationProperty[],System.Int32)">
      <summary vsli:raw="Copies this ConfigurationPropertyCollection to an array.">将此 ConfigurationPropertyCollection 复制到数组。</summary>
      <param name="array" vsli:raw="Array to which to copy.">要复制到的数组。</param>
      <param name="index" vsli:raw="Index at which to begin copying.">开始复制的索引位置。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.GetEnumerator">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object as it applies to the collection.">在将 <see cref="T:System.Collections.IEnumerator" /> 对象应用于集合时获取该对象。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object as it applies to the collection.">应用于集合时的 <see cref="T:System.Collections.IEnumerator" /> 对象</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.Remove(System.String)">
      <summary vsli:raw="Removes a configuration property from the collection.">从集合中移除配置属性。</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; to remove.">要移除的 <see cref="T:System.Configuration.ConfigurationProperty" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; was removed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果移除了指定的 <see cref="T:System.Configuration.ConfigurationProperty" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies this collection to an array.">将此集合复制到数组。</summary>
      <param name="array" vsli:raw="The array to which to copy.">要复制到的数组。</param>
      <param name="index" vsli:raw="The index location at which to begin copying.">开始复制的索引位置。</param>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyCollection.Count">
      <summary vsli:raw="Gets the number of properties in the collection.">获取集合中的属性数。</summary>
      <returns vsli:raw="The number of properties in the collection.">集合中的属性数。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyCollection.IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the collection is synchronized (thread safe).">获取一个值，该值指示对集合的访问是否为同步的（线程安全）。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Configuration.ConfigurationPropertyCollection&quot; /&gt; is synchronized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果同步对 <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> 的访问，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyCollection.Item(System.String)">
      <summary vsli:raw="Gets the collection item with the specified name.">获取具有指定名称的集合项。</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; to return.">要返回的 <see cref="T:System.Configuration.ConfigurationProperty" />。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; with the specified &lt;paramref name=&quot;name&quot; /&gt;.">具有指定 <see cref="T:System.Configuration.ConfigurationProperty" /> 的 <paramref name="name" />。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyCollection.SyncRoot">
      <summary vsli:raw="Gets the object to synchronize access to the collection.">获取用于同步对集合的访问的对象。</summary>
      <returns vsli:raw="The object to synchronize access to the collection.">用于同步对集合的访问的对象。</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationPropertyOptions">
      <summary vsli:raw="Specifies the options to apply to a property.">指定要应用于属性的选项。</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsAssemblyStringTransformationRequired">
      <summary vsli:raw="Indicates whether the assembly name for the configuration property requires transformation when it is serialized for an earlier version of .NET.">指示在针对早期版本的 .NET Framework 序列化配置属性时，是否需要转换该属性的程序集名称。</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsDefaultCollection">
      <summary vsli:raw="Indicates that the property is a default collection.">指示该属性为默认集合。</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsKey">
      <summary vsli:raw="Indicates that the property is a collection key.">指示该属性为集合键。</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsRequired">
      <summary vsli:raw="Indicates that the property is required.">指示该属性是必需的。</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsTypeStringTransformationRequired">
      <summary vsli:raw="Indicates whether the type name for the configuration property requires transformation when it is serialized for an earlier version of .NET.">指示在针对早期版本的 .NET Framework 序列化配置属性时，是否需要转换该属性的类型名称。</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsVersionCheckRequired">
      <summary vsli:raw="Indicates whether the configuration property's parent configuration section should be queried at serialization time to determine whether the configuration property should be serialized into XML.">指示进行序列化时是否应查询配置属性的父配置节，以确定是否应将配置属性序列化到 XML 中。</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.None">
      <summary vsli:raw="Indicates that no option applies to the property.">指示没有应用于该属性的选项。</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationSaveMode">
      <summary vsli:raw="Determines which properties are written out to a configuration file.">确定写出到配置文件的属性。</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationSaveMode.Full">
      <summary vsli:raw="Causes all properties to be written to the configuration file. This is useful mostly for creating information configuration files or moving configuration values from one machine to another.">将所有属性都写出到配置文件。 这在创建信息配置文件时或将配置值从一台计算机移动到另一台计算机时最有用。</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationSaveMode.Minimal">
      <summary vsli:raw="Causes only properties that differ from inherited values to be written to the configuration file.">仅将不同于继承值的属性写出到配置文件。</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationSaveMode.Modified">
      <summary vsli:raw="Causes only modified properties to be written to the configuration file, even when the value is the same as the inherited value.">仅将修改的属性写出到配置文件，即使该值和继承的值相同。</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationSection">
      <summary vsli:raw="Represents a section within a configuration file.">表示配置文件中的节。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.ConfigurationSection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)">
      <summary vsli:raw="Reads XML from the configuration file.">从配置文件读取 XML。</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; object, which reads from the configuration file.">
        <see cref="T:System.Xml.XmlReader" /> 对象，它从配置文件进行读取。</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="&lt;paramref name=&quot;reader&quot; /&gt; found no elements in the configuration file.">
        <paramref name="reader" /> 在配置文件中找不到元素。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.GetRuntimeObject">
      <summary vsli:raw="Returns a custom object when overridden in a derived class.">在派生的类中重写时返回自定义对象。</summary>
      <returns vsli:raw="The object representing the section.">表示节的对象。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.IsModified">
      <summary vsli:raw="Indicates whether this configuration element has been modified since it was last saved or loaded when implemented in a derived class.">指示自上次在派生类中实现此配置元素时保存或加载以来是否对其进行过修改。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the element has been modified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果该元素已被修改，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.ResetModified">
      <summary vsli:raw="Resets the value of the &lt;see cref=&quot;M:System.Configuration.ConfigurationElement.IsModified&quot; /&gt; method to &lt;see langword=&quot;false&quot; /&gt; when implemented in a derived class.">在派生类中实现时，将 <see cref="M:System.Configuration.ConfigurationElement.IsModified" /> 方法的值重置为 <see langword="false" />。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)">
      <summary vsli:raw="Creates an XML string containing an unmerged view of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object as a single section to write to a file.">创建一个包含 <see cref="T:System.Configuration.ConfigurationSection" /> 对象的分离视图的 XML 字符串，作为单独的节写入到文件中。</summary>
      <param name="parentElement" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; instance to use as the parent when performing the un-merge.">要在执行分离时充当父对象的 <see cref="T:System.Configuration.ConfigurationElement" /> 实例。</param>
      <param name="name" vsli:raw="The name of the section to create.">要创建的节的名称。</param>
      <param name="saveMode" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSaveMode&quot; /&gt; instance to use when writing to a string.">写入到字符串中时要使用的 <see cref="T:System.Configuration.ConfigurationSaveMode" /> 实例。</param>
      <returns vsli:raw="An XML string containing an unmerged view of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object.">XML 字符串，包含 <see cref="T:System.Configuration.ConfigurationSection" /> 对象的分离视图。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)">
      <summary vsli:raw="Indicates whether the specified element should be serialized when the configuration object hierarchy is serialized for the specified target version of the .NET Framework.">指示在为 .NET Framework 的指定目标版本序列化配置对象层次结构时，是否应序列化指定元素。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object that is a candidate for serialization.">作为候选序列化对象的 <see cref="T:System.Configuration.ConfigurationElement" /> 对象。</param>
      <param name="elementName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object as it occurs in XML.">
        <see cref="T:System.Configuration.ConfigurationElement" /> 对象出现在 XML 中的名称。</param>
      <param name="targetFramework" vsli:raw="The target version of the .NET Framework.">.NET Framework 的目标版本。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;element&quot; /&gt; should be serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果应序列化 <paramref name="element" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)">
      <summary vsli:raw="Indicates whether the specified property should be serialized when the configuration object hierarchy is serialized for the specified target version of the .NET Framework.">指示在为指定目标版本的 .NET Framework 序列化配置对象层次结构时，是否应序列化指定属性。</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; object that is a candidate for serialization.">作为候选序列化对象的 <see cref="T:System.Configuration.ConfigurationProperty" /> 对象。</param>
      <param name="propertyName" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.ConfigurationProperty&quot; /&gt; object as it occurs in XML.">
        <see cref="T:System.Configuration.ConfigurationProperty" /> 对象出现在 XML 中的名称。</param>
      <param name="targetFramework" vsli:raw="The target version of the .NET Framework.">.NET Framework 的目标版本。</param>
      <param name="parentConfigurationElement" vsli:raw="The parent element of the property.">属性的父元素。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;property&quot; /&gt; should be serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果应序列化 <paramref name="property" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)">
      <summary vsli:raw="Indicates whether the current &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; instance should be serialized when the configuration object hierarchy is serialized for the specified target version of the .NET Framework.">指示在为指定目标版本的 .NET Framework 序列化配置对象层次结构时，是否应序列化当前的 <see cref="T:System.Configuration.ConfigurationSection" /> 实例。</summary>
      <param name="targetFramework" vsli:raw="The target version of the .NET Framework.">.NET Framework 的目标版本。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current section should be serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果应序列化当前节，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSection.SectionInformation">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Configuration.SectionInformation&quot; /&gt; object that contains the non-customizable information and functionality of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object.">获取一个 <see cref="T:System.Configuration.SectionInformation" /> 对象，该对象包含 <see cref="T:System.Configuration.ConfigurationSection" /> 对象的不可自定义的信息和功能。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SectionInformation&quot; /&gt; that contains the non-customizable information and functionality of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt;.">一个 <see cref="T:System.Configuration.SectionInformation" />，包含 <see cref="T:System.Configuration.ConfigurationSection" /> 的不可自定义的信息和功能。</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationSectionCollection">
      <summary vsli:raw="Represents a collection of related sections within a configuration file.">表示配置文件中相关章节的集合。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.Add(System.String,System.Configuration.ConfigurationSection)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object to the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionCollection&quot; /&gt; object.">向 <see cref="T:System.Configuration.ConfigurationSectionCollection" /> 对象添加一个 <see cref="T:System.Configuration.ConfigurationSection" /> 对象。</summary>
      <param name="name" vsli:raw="The name of the section to be added.">要添加的节名称。</param>
      <param name="section" vsli:raw="The section to be added.">要添加的节。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.Clear">
      <summary vsli:raw="Clears this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionCollection&quot; /&gt; object.">清除此 <see cref="T:System.Configuration.ConfigurationSectionCollection" /> 对象。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.CopyTo(System.Configuration.ConfigurationSection[],System.Int32)">
      <summary vsli:raw="Copies this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionCollection&quot; /&gt; object to an array.">将此 <see cref="T:System.Configuration.ConfigurationSectionCollection" /> 对象复制到数组。</summary>
      <param name="array" vsli:raw="The array to copy the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionCollection&quot; /&gt; object to.">要将 <see cref="T:System.Configuration.ConfigurationSectionCollection" /> 对象复制到的数组。</param>
      <param name="index" vsli:raw="The index location at which to begin copying.">开始复制的索引位置。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The length of &lt;paramref name=&quot;array&quot; /&gt; is less than the value of &lt;see cref=&quot;P:System.Configuration.ConfigurationSectionCollection.Count&quot; /&gt; plus &lt;paramref name=&quot;index&quot; /&gt;.">
        <paramref name="array" /> 的长度小于 <see cref="P:System.Configuration.ConfigurationSectionCollection.Count" /> 加上 <paramref name="index" /> 的值。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.Get(System.Int32)">
      <summary vsli:raw="Gets the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object contained in this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionCollection&quot; /&gt; object.">获取此 <see cref="T:System.Configuration.ConfigurationSectionCollection" /> 对象中包含的指定 <see cref="T:System.Configuration.ConfigurationSection" /> 对象。</summary>
      <param name="index" vsli:raw="The index of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object to be returned.">要返回的 <see cref="T:System.Configuration.ConfigurationSection" /> 对象的索引。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object at the specified index.">指定索引处的 <see cref="T:System.Configuration.ConfigurationSection" /> 对象。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.Get(System.String)">
      <summary vsli:raw="Gets the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object contained in this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionCollection&quot; /&gt; object.">获取此 <see cref="T:System.Configuration.ConfigurationSectionCollection" /> 对象中包含的指定 <see cref="T:System.Configuration.ConfigurationSection" /> 对象。</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object to be returned.">要返回的 <see cref="T:System.Configuration.ConfigurationSection" /> 对象名称。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is null or an empty string (&quot;&quot;).">
        <paramref name="name" /> 为 null 或为空字符串 ("")。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object with the specified name.">具有指定名称的 <see cref="T:System.Configuration.ConfigurationSection" /> 对象。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.GetEnumerator">
      <summary vsli:raw="Gets an enumerator that can iterate through this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionCollection&quot; /&gt; object.">获取可循环访问此 <see cref="T:System.Configuration.ConfigurationSectionCollection" /> 对象的枚举器。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionCollection&quot; /&gt; object.">可用于循环访问此 <see cref="T:System.Configuration.ConfigurationSectionCollection" /> 对象的 <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.GetKey(System.Int32)">
      <summary vsli:raw="Gets the key of the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object contained in this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionCollection&quot; /&gt; object.">获取此 <see cref="T:System.Configuration.ConfigurationSectionCollection" /> 对象中包含的指定 <see cref="T:System.Configuration.ConfigurationSection" /> 对象的键。</summary>
      <param name="index" vsli:raw="The index of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object whose key is to be returned.">要返回其键的 <see cref="T:System.Configuration.ConfigurationSection" /> 对象的索引。</param>
      <returns vsli:raw="The key of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object at the specified index.">位于指定索引处的 <see cref="T:System.Configuration.ConfigurationSection" /> 对象的键。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>由系统在序列化期间使用。</summary>
      <param name="info">适用的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</param>
      <param name="context">适用的 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 对象。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.Remove(System.String)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object from this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionCollection&quot; /&gt; object.">从此 <see cref="T:System.Configuration.ConfigurationSectionCollection" /> 对象中移除指定的 <see cref="T:System.Configuration.ConfigurationSection" /> 对象。</summary>
      <param name="name" vsli:raw="The name of the section to be removed.">要移除的节的名称。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object from this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionCollection&quot; /&gt; object.">从此 <see cref="T:System.Configuration.ConfigurationSectionCollection" /> 对象中移除指定的 <see cref="T:System.Configuration.ConfigurationSection" /> 对象。</summary>
      <param name="index" vsli:raw="The index of the section to be removed.">要移除的节的索引。</param>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionCollection.Count">
      <summary>获取此 <see cref="T:System.Configuration.ConfigurationSectionCollection" /> 对象中的节数。</summary>
      <returns>一个整数，表示集合中的节数。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object.">获取指定的 <see cref="T:System.Configuration.ConfigurationSection" /> 对象。</summary>
      <param name="index" vsli:raw="The index of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object to be returned.">要返回的 <see cref="T:System.Configuration.ConfigurationSection" /> 对象的索引。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object at the specified index.">指定索引处的 <see cref="T:System.Configuration.ConfigurationSection" /> 对象。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionCollection.Item(System.String)">
      <summary vsli:raw="Gets the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object.">获取指定的 <see cref="T:System.Configuration.ConfigurationSection" /> 对象。</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object to be returned.">要返回的 <see cref="T:System.Configuration.ConfigurationSection" /> 对象名称。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object with the specified name.">具有指定名称的 <see cref="T:System.Configuration.ConfigurationSection" /> 对象。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionCollection.Keys">
      <summary>获取此 <see cref="T:System.Configuration.ConfigurationSectionCollection" /> 对象中包含的所有 <see cref="T:System.Configuration.ConfigurationSection" /> 对象的键。</summary>
      <returns>一个 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> 对象，包含此集合中所有节的键。</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationSectionGroup">
      <summary vsli:raw="Represents a group of related sections within a configuration file.">表示配置文件中的一组相关节。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroup.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroup.ForceDeclaration">
      <summary vsli:raw="Forces the declaration for this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object.">强制声明此 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 对象。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroup.ForceDeclaration(System.Boolean)">
      <summary vsli:raw="Forces the declaration for this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object.">强制声明此 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 对象。</summary>
      <param name="force" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object must be written to the file; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果必须将 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 对象写入文件，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object is the root section group.  &#xA;  &#xA;-or-&#xA;  &#xA; The &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object has a location.">
        <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 对象是根节组。  
  
- 或 - 
<see cref="T:System.Configuration.ConfigurationSectionGroup" /> 对象包含位置。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroup.ShouldSerializeSectionGroupInTargetVersion(System.Runtime.Versioning.FrameworkName)">
      <summary vsli:raw="Indicates whether the current &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; instance should be serialized when the configuration object hierarchy is serialized for the specified target version of the .NET Framework.">指示在为指定目标版本的 .NET Framework 序列化配置对象层次结构时，是否应序列化当前的 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 实例。</summary>
      <param name="targetFramework" vsli:raw="The target version of the .NET Framework.">.NET Framework 的目标版本。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current section group should be serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果应序列化当前节组，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.IsDeclarationRequired">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object declaration is required.">获取一个值，指示是否需要声明此 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 对象。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; declaration is required; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果需要声明此 <see cref="T:System.Configuration.ConfigurationSectionGroup" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.IsDeclared">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object is declared.">获取一个值，指示是否已声明此 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 对象。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; is declared; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果已声明此 <see cref="T:System.Configuration.ConfigurationSectionGroup" />，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.Name">
      <summary vsli:raw="Gets the name property of this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object.">获取此 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 对象的名称属性。</summary>
      <returns vsli:raw="The name property of this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object.">此 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 对象的名称属性。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.SectionGroupName">
      <summary vsli:raw="Gets the section group name associated with this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt;.">获取与此 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 关联的节组名称。</summary>
      <returns vsli:raw="The section group name of this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object.">此 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 对象的节组名称。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.SectionGroups">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroupCollection&quot; /&gt; object that contains all the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; objects that are children of this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object.">获取一个 <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> 对象，其中包含作为此 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 对象的子对象的所有 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 对象。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroupCollection&quot; /&gt; object that contains all the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; objects that are children of this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object.">一个 <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> 对象，其中包含作为此 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 对象的子对象的所有 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 对象。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.Sections">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionCollection&quot; /&gt; object that contains all of &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; objects within this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object.">获取一个 <see cref="T:System.Configuration.ConfigurationSectionCollection" /> 对象，其中包含此 <see cref="T:System.Configuration.ConfigurationSection" /> 对象中的所有 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 对象。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionCollection&quot; /&gt; object that contains all the &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; objects within this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object.">一个 <see cref="T:System.Configuration.ConfigurationSectionCollection" /> 对象，其中包含此 <see cref="T:System.Configuration.ConfigurationSection" /> 对象中的所有 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 对象。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.Type">
      <summary vsli:raw="Gets or sets the type for this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object.">获取或设置此 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 对象的类型。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object is the root section group.  &#xA;  &#xA;-or-&#xA;  &#xA; The &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object has a location.">
        <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 对象是根节组。  
  
- 或 - 
<see cref="T:System.Configuration.ConfigurationSectionGroup" /> 对象包含位置。</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The section or group is already defined at another level.">节或组已在其他级别定义。</exception>
      <returns vsli:raw="The type of this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object.">此 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 对象的类型。</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationSectionGroupCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; objects.">表示 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 对象集合。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Add(System.String,System.Configuration.ConfigurationSectionGroup)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object to this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroupCollection&quot; /&gt; object.">向此 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 对象中添加 <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> 对象。</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object to be added.">要添加的 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 对象的名称。</param>
      <param name="sectionGroup" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object to be added.">要添加的 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 对象。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Clear">
      <summary vsli:raw="Clears the collection.">清除集合。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.CopyTo(System.Configuration.ConfigurationSectionGroup[],System.Int32)">
      <summary vsli:raw="Copies this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroupCollection&quot; /&gt; object to an array.">将此 <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> 对象复制到数组。</summary>
      <param name="array" vsli:raw="The array to copy the object to.">要向其复制对象的数组。</param>
      <param name="index" vsli:raw="The index location at which to begin copying.">开始复制的索引位置。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The length of &lt;paramref name=&quot;array&quot; /&gt; is less than the value of &lt;see cref=&quot;P:System.Configuration.ConfigurationSectionGroupCollection.Count&quot; /&gt; plus &lt;paramref name=&quot;index&quot; /&gt;.">
        <paramref name="array" /> 的长度小于 <see cref="P:System.Configuration.ConfigurationSectionGroupCollection.Count" /> 加上 <paramref name="index" /> 的值。</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Get(System.Int32)">
      <summary vsli:raw="Gets the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object contained in the collection.">获取包含在集合中的指定 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 对象。</summary>
      <param name="index" vsli:raw="The index of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object to be returned.">要返回的 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 对象的索引。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object at the specified index.">指定索引处的 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 对象。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Get(System.String)">
      <summary vsli:raw="Gets the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object from the collection.">从集合中获取指定的 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 对象。</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object to be returned.">要返回的 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 对象名称。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is null or an empty string (&quot;&quot;).">
        <paramref name="name" /> 为 null 或为空字符串 ("")。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object with the specified name.">具有指定名称的 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 对象。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.GetEnumerator">
      <summary vsli:raw="Gets an enumerator that can iterate through the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroupCollection&quot; /&gt; object.">获取可以循环访问 <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> 对象的枚举数。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroupCollection&quot; /&gt; object.">一个 <see cref="T:System.Collections.IEnumerator" />，可用于循环访问 <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> 对象。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.GetKey(System.Int32)">
      <summary vsli:raw="Gets the key of the specified &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object contained in this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroupCollection&quot; /&gt; object.">获取此 <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> 对象中包含的指定 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 对象的键。</summary>
      <param name="index" vsli:raw="The index of the section group whose key is to be returned.">要返回其键的节组的索引。</param>
      <returns vsli:raw="The key of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object at the specified index.">位于指定索引处的 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 对象的键。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>由系统在序列化期间使用。</summary>
      <param name="info">适用的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</param>
      <param name="context">适用的 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 对象。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Remove(System.String)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object whose name is specified from this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroupCollection&quot; /&gt; object.">移除 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 对象，该对象的名称从此 <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> 对象指定。</summary>
      <param name="name" vsli:raw="The name of the section group to be removed.">要移除的节组的名称。</param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object whose index is specified from this &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroupCollection&quot; /&gt; object.">移除 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 对象，该对象的索引从此 <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> 对象指定。</summary>
      <param name="index" vsli:raw="The index of the section group to be removed.">要移除的节组的索引。</param>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroupCollection.Count">
      <summary>获取集合中的节组数目。</summary>
      <returns>一个整数，表示集合中的节组数。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroupCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object whose index is specified from the collection.">获取 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 对象，该对象的索引从集合中指定。</summary>
      <param name="index" vsli:raw="The index of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object to be returned.">要返回的 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 对象的索引。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object at the specified index.  &#xA;  &#xA; In C#, this property is the indexer for the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionCollection&quot; /&gt; class.">指定索引处的 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 对象。  
  
在 C# 中，此属性是 <see cref="T:System.Configuration.ConfigurationSectionCollection" /> 类的索引器。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroupCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object whose name is specified from the collection.">获取 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 对象，该对象的名称从集合中指定。</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object to be returned.">要返回的 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 对象名称。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionGroup&quot; /&gt; object with the specified name.  &#xA;  &#xA; In C#, this property is the indexer for the &lt;see cref=&quot;T:System.Configuration.ConfigurationSectionCollection&quot; /&gt; class.">具有指定名称的 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 对象。  
  
在 C# 中，此属性是 <see cref="T:System.Configuration.ConfigurationSectionCollection" /> 类的索引器。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroupCollection.Keys">
      <summary>获取此 <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> 对象中包含的所有 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 对象的键。</summary>
      <returns>一个 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> 对象，包含了此集合中所有节组的名称。</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationSettings">
      <summary vsli:raw="Provides runtime versions 1.0 and 1.1 support for reading configuration sections and common configuration settings.">提供 1.0 和 1.1 版运行时对读取配置节和公共配置设置的支持。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSettings.GetConfig(System.String)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object for the passed configuration section name and path.">返回传递的配置节名称和路径的 <see cref="T:System.Configuration.ConfigurationSection" /> 对象。</summary>
      <param name="sectionName" vsli:raw="A configuration name and path, such as &quot;system.net/settings&quot;.">一个配置名称和路径，如“system.net/settings”。</param>
      <exception cref="T:System.Configuration.ConfigurationException" vsli:raw="Unable to retrieve the requested section.">无法检索请求的节。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object for the passed configuration section name and path.">传递的配置节名称和路径的 <see cref="T:System.Configuration.ConfigurationSection" /> 对象。  
  
 <block subset="none" type="note"><para><see cref="T:System.Configuration.ConfigurationSettings" /> 类仅提供向后兼容性。 应改为使用 <see cref="T:System.Configuration.ConfigurationManager" /> 类或 <see cref="T:System.Web.Configuration.WebConfigurationManager" /> 类。</para></block></returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSettings.AppSettings">
      <summary vsli:raw="Gets a read-only collection of the application settings from the configuration file.">获取配置文件应用程序设置的只读集合。</summary>
      <returns vsli:raw="A read-only collection of the application settings from the configuration file.">配置文件中的应用程序设置的只读集合。</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationUserLevel">
      <summary vsli:raw="Used to specify which configuration file is to be represented by the Configuration object.">用于指定将由 Configuration 对象表示的配置文件。</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationUserLevel.None">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; that applies to all users.">获取应用于所有用户的 <see cref="T:System.Configuration.Configuration" />。</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationUserLevel.PerUserRoaming">
      <summary vsli:raw="Gets the roaming &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; that applies to the current user.">获取应用于当前用户的漫游 <see cref="T:System.Configuration.Configuration" />。</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationUserLevel.PerUserRoamingAndLocal">
      <summary vsli:raw="Gets the local &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; that applies to the current user.">获取应用于当前用户的本地 <see cref="T:System.Configuration.Configuration" />。</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationValidatorAttribute">
      <summary vsli:raw="Serves as the base class for the &lt;see cref=&quot;N:System.Configuration&quot; /&gt; validator attribute types.">用作 <see cref="N:System.Configuration" /> 验证程序特性类型的基类。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationValidatorAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.ConfigurationValidatorAttribute" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationValidatorAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorAttribute&quot; /&gt; class using the specified validator type.">使用指定的验证程序类型初始化 <see cref="T:System.Configuration.ConfigurationValidatorAttribute" /> 类的新实例。</summary>
      <param name="validator" vsli:raw="The validator type to use when creating an instance of &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorAttribute&quot; /&gt;.">创建 <see cref="T:System.Configuration.ConfigurationValidatorAttribute" /> 的实例时使用的验证程序类型。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;validator&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="validator" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;validator&quot; /&gt; is not derived from &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorBase&quot; /&gt;.">
        <paramref name="validator" /> 不是从 <see cref="T:System.Configuration.ConfigurationValidatorBase" /> 派生的。</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorInstance">
      <summary vsli:raw="Gets the validator attribute instance.">获取验证程序特性实例。</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorBase&quot; /&gt;.">当前的 <see cref="T:System.Configuration.ConfigurationValidatorBase" />。</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorType">
      <summary vsli:raw="Gets the type of the validator attribute.">获取验证程序特性的类型。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the current validator attribute instance.">当前验证程序特性实例的 <see cref="T:System.Type" />。</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationValidatorBase">
      <summary vsli:raw="Acts as a base class for deriving a validation class so that a value of an object can be verified.">作为基类，用于派生验证类，以便验证对象的值。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationValidatorBase.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorBase&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.ConfigurationValidatorBase" /> 类的实例。</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationValidatorBase.CanValidate(System.Type)">
      <summary vsli:raw="Determines whether an object can be validated based on type.">根据类型确定对象是否可验证。</summary>
      <param name="type" vsli:raw="The object type.">对象类型。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter value matches the expected &lt;see langword=&quot;type&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="type" /> 参数值与所需的 <see langword="true" /> 相匹配，则为 <see langword="type" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationValidatorBase.Validate(System.Object)">
      <summary vsli:raw="Determines whether the value of an object is valid.">确定对象的值是否有效。</summary>
      <param name="value" vsli:raw="The object value.">对象值。</param>
    </member>
    <member name="T:System.Configuration.ConfigXmlDocument">
      <summary vsli:raw="Wraps the corresponding &lt;see cref=&quot;T:System.Xml.XmlDocument&quot; /&gt; type and also carries the necessary information for reporting file-name and line numbers.">包装相应的 <see cref="T:System.Xml.XmlDocument" /> 类型并带有报告文件名和行号所需的信息。</summary>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConfigXmlDocument&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.ConfigXmlDocument" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateAttribute(System.String,System.String,System.String)">
      <summary vsli:raw="Creates a configuration element attribute.">创建配置元素特性。</summary>
      <param name="prefix" vsli:raw="The prefix definition.">前缀定义。</param>
      <param name="localName" vsli:raw="The name that is used locally.">在本地使用的名称。</param>
      <param name="namespaceUri" vsli:raw="The URL that is assigned to the namespace.">分配给命名空间的 URL。</param>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Xml.Serialization.XmlAttributes.XmlAttribute&quot; /&gt; attribute.">
        <see cref="P:System.Xml.Serialization.XmlAttributes.XmlAttribute" /> 特性。</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateCDataSection(System.String)">
      <summary vsli:raw="Creates an XML CData section.">创建 XML CData 节。</summary>
      <param name="data" vsli:raw="The data to use.">要使用的数据。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlCDataSection&quot; /&gt; value.">
        <see cref="T:System.Xml.XmlCDataSection" /> 值。</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateComment(System.String)">
      <summary vsli:raw="Create an XML comment.">创建 XML 注释。</summary>
      <param name="data" vsli:raw="The comment data.">注释数据。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlComment&quot; /&gt; value.">
        <see cref="T:System.Xml.XmlComment" /> 值。</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateElement(System.String,System.String,System.String)">
      <summary vsli:raw="Creates a configuration element.">创建配置元素。</summary>
      <param name="prefix" vsli:raw="The prefix definition.">前缀定义。</param>
      <param name="localName" vsli:raw="The name used locally.">在本地使用的名称。</param>
      <param name="namespaceUri" vsli:raw="The namespace for the URL.">URL 的命名空间。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlElement&quot; /&gt; value.">
        <see cref="T:System.Xml.XmlElement" /> 值。</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateSignificantWhitespace(System.String)">
      <summary vsli:raw="Creates white spaces.">创建空格。</summary>
      <param name="data" vsli:raw="The data to use.">要使用的数据。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlSignificantWhitespace&quot; /&gt; value.">
        <see cref="T:System.Xml.XmlSignificantWhitespace" /> 值。</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateTextNode(System.String)">
      <summary vsli:raw="Create a text node.">创建文本节点。</summary>
      <param name="text" vsli:raw="The text to use.">要使用的文本。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlText&quot; /&gt; value.">
        <see cref="T:System.Xml.XmlText" /> 值。</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateWhitespace(System.String)">
      <summary vsli:raw="Creates white space.">创建空格。</summary>
      <param name="data" vsli:raw="The data to use.">要使用的数据。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWhitespace&quot; /&gt; value.">
        <see cref="T:System.Xml.XmlWhitespace" /> 值。</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.Load(System.String)">
      <summary vsli:raw="Loads the configuration file.">加载配置文件。</summary>
      <param name="filename" vsli:raw="The name of the file.">文件的名称。</param>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.LoadSingleElement(System.String,System.Xml.XmlTextReader)">
      <summary vsli:raw="Loads a single configuration element.">加载单个配置元素。</summary>
      <param name="filename" vsli:raw="The name of the file.">文件的名称。</param>
      <param name="sourceReader" vsli:raw="The source for the reader.">读取器的源。</param>
    </member>
    <member name="P:System.Configuration.ConfigXmlDocument.Filename">
      <summary vsli:raw="Gets the configuration file name.">获取配置文件名。</summary>
      <returns vsli:raw="The configuration file name.">配置文件名称。</returns>
    </member>
    <member name="P:System.Configuration.ConfigXmlDocument.LineNumber">
      <summary vsli:raw="Gets the current node line number.">获取当前节点行号。</summary>
      <returns vsli:raw="The line number for the current node.">当前节点的行号。</returns>
    </member>
    <member name="P:System.Configuration.ConfigXmlDocument.System#Configuration#Internal#IConfigErrorInfo#Filename">
      <summary vsli:raw="Gets the configuration file name.">获取配置文件名。</summary>
      <returns vsli:raw="The file name.">文件名。</returns>
    </member>
    <member name="P:System.Configuration.ConfigXmlDocument.System#Configuration#Internal#IConfigErrorInfo#LineNumber">
      <summary vsli:raw="Gets the configuration line number.">获取配置行号。</summary>
      <returns vsli:raw="The line number.">行号。</returns>
    </member>
    <member name="T:System.Configuration.ConnectionStringSettings">
      <summary vsli:raw="Represents a single, named connection string in the connection strings configuration file section.">表示连接字符串配置文件节中的单个命名连接字符串。</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.ConnectionStringSettings" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettings.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.ConnectionStringSettings" /> 类的新实例。</summary>
      <param name="name" vsli:raw="The name of the connection string.">连接字符串的名称。</param>
      <param name="connectionString" vsli:raw="The connection string.">连接字符串。</param>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettings.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.ConnectionStringSettings" /> 对象的新实例。</summary>
      <param name="name" vsli:raw="The name of the connection string.">连接字符串的名称。</param>
      <param name="connectionString" vsli:raw="The connection string.">连接字符串。</param>
      <param name="providerName" vsli:raw="The name of the provider to use with the connection string.">与连接字符串一起使用的提供程序的名称。</param>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettings.ToString">
      <summary vsli:raw="Returns a string representation of the object.">返回对象的字符串表示形式。</summary>
      <returns vsli:raw="A string representation of the object.">对象的字符串表示形式。</returns>
    </member>
    <member name="P:System.Configuration.ConnectionStringSettings.ConnectionString">
      <summary vsli:raw="Gets or sets the connection string.">获取或设置连接字符串。</summary>
      <returns vsli:raw="The string value assigned to the &lt;see cref=&quot;P:System.Configuration.ConnectionStringSettings.ConnectionString&quot; /&gt; property.">赋给 <see cref="P:System.Configuration.ConnectionStringSettings.ConnectionString" /> 属性的字符串值。</returns>
    </member>
    <member name="P:System.Configuration.ConnectionStringSettings.Name">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; name.">获取或设置 <see cref="T:System.Configuration.ConnectionStringSettings" /> 名称。</summary>
      <returns vsli:raw="The string value assigned to the &lt;see cref=&quot;P:System.Configuration.ConnectionStringSettings.Name&quot; /&gt; property.">赋给 <see cref="P:System.Configuration.ConnectionStringSettings.Name" /> 属性的字符串值。</returns>
    </member>
    <member name="P:System.Configuration.ConnectionStringSettings.ProviderName">
      <summary vsli:raw="Gets or sets the provider name property.">获取或设置提供程序名称属性。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Configuration.ConnectionStringSettings.ProviderName&quot; /&gt; property.">
        <see cref="P:System.Configuration.ConnectionStringSettings.ProviderName" /> 属性。</returns>
    </member>
    <member name="T:System.Configuration.ConnectionStringSettingsCollection">
      <summary vsli:raw="Contains a collection of &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; objects.">包含 <see cref="T:System.Configuration.ConnectionStringSettings" /> 对象的集合。</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettingsCollection&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.Add(System.Configuration.ConnectionStringSettings)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; object to the collection.">将 <see cref="T:System.Configuration.ConnectionStringSettings" /> 对象添加到集合中。</summary>
      <param name="settings" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; object to add to the collection.">要添加到集合的 <see cref="T:System.Configuration.ConnectionStringSettings" /> 对象。</param>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.Clear">
      <summary vsli:raw="Removes all the &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; objects from the collection.">从集合中移除所有 <see cref="T:System.Configuration.ConnectionStringSettings" /> 对象。</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.IndexOf(System.Configuration.ConnectionStringSettings)">
      <summary vsli:raw="Returns the collection index of the passed &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; object.">返回传递的 <see cref="T:System.Configuration.ConnectionStringSettings" /> 对象的集合索引。</summary>
      <param name="settings" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; object in the collection.">集合中的 <see cref="T:System.Configuration.ConnectionStringSettings" /> 对象。</param>
      <returns vsli:raw="The collection index of the specified &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettingsCollection&quot; /&gt; object.">指定的 <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> 对象的集合索引。</returns>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.Remove(System.Configuration.ConnectionStringSettings)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; object from the collection.">从集合中移除指定的 <see cref="T:System.Configuration.ConnectionStringSettings" /> 对象。</summary>
      <param name="settings" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; object in the collection.">集合中的 <see cref="T:System.Configuration.ConnectionStringSettings" /> 对象。</param>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.Remove(System.String)">
      <summary vsli:raw="Removes the specified &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; object from the collection.">从集合中移除指定的 <see cref="T:System.Configuration.ConnectionStringSettings" /> 对象。</summary>
      <param name="name" vsli:raw="The name of a &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; object in the collection.">集合中 <see cref="T:System.Configuration.ConnectionStringSettings" /> 对象的名称。</param>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; object at the specified index in the collection.">移除集合中指定索引处的 <see cref="T:System.Configuration.ConnectionStringSettings" /> 对象。</summary>
      <param name="index" vsli:raw="The index of a &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; object in the collection.">集合中 <see cref="T:System.Configuration.ConnectionStringSettings" /> 对象的索引。</param>
    </member>
    <member name="P:System.Configuration.ConnectionStringSettingsCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the connection string at the specified index in the collection.">获取或设置位于集合中指定索引处的连接字符串。</summary>
      <param name="index" vsli:raw="The index of a &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; object in the collection.">集合中 <see cref="T:System.Configuration.ConnectionStringSettings" /> 对象的索引。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; object at the specified index.">指定索引处的 <see cref="T:System.Configuration.ConnectionStringSettings" /> 对象。</returns>
    </member>
    <member name="P:System.Configuration.ConnectionStringSettingsCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; object with the specified name in the collection.">获取或设置集合中具有指定名称的 <see cref="T:System.Configuration.ConnectionStringSettings" /> 对象。</summary>
      <param name="name" vsli:raw="The name of a &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; object in the collection.">集合中 <see cref="T:System.Configuration.ConnectionStringSettings" /> 对象的名称。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; object with the specified name; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">具有指定名称的 <see cref="T:System.Configuration.ConnectionStringSettings" /> 对象；否则为 <see langword="null" />。</returns>
    </member>
    <member name="T:System.Configuration.ConnectionStringsSection">
      <summary vsli:raw="Provides programmatic access to the connection strings configuration-file section.">对连接字符串配置文件节进行编程访问。</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringsSection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ConnectionStringsSection&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.ConnectionStringsSection" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Configuration.ConnectionStringsSection.ConnectionStrings">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettingsCollection&quot; /&gt; collection of &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; objects.">获取 <see cref="T:System.Configuration.ConnectionStringSettings" /> 对象的 <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> 集合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettingsCollection&quot; /&gt; collection of &lt;see cref=&quot;T:System.Configuration.ConnectionStringSettings&quot; /&gt; objects.">
        <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> 对象的 <see cref="T:System.Configuration.ConnectionStringSettings" /> 集合。</returns>
    </member>
    <member name="T:System.Configuration.ContextInformation">
      <summary vsli:raw="Encapsulates the context information that is associated with a &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object. This class cannot be inherited.">封装与 <see cref="T:System.Configuration.ConfigurationElement" /> 对象关联的上下文信息。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Configuration.ContextInformation.GetSection(System.String)">
      <summary vsli:raw="Provides an object containing configuration-section information based on the specified section name.">提供一个包含基于指定节名称的配置节信息的对象。</summary>
      <param name="sectionName" vsli:raw="The name of the configuration section.">配置节的名称。</param>
      <returns vsli:raw="An object containing the specified section within the configuration.">一个包含配置中的指定节的对象。</returns>
    </member>
    <member name="P:System.Configuration.ContextInformation.HostingContext">
      <summary vsli:raw="Gets the context of the environment where the configuration property is being evaluated.">获取正在计算配置属性的环境的上下文。</summary>
      <returns vsli:raw="An object specifying the environment where the configuration property is being evaluated.">一个对象，指定正在计算配置属性的环境。</returns>
    </member>
    <member name="P:System.Configuration.ContextInformation.IsMachineLevel">
      <summary vsli:raw="Gets a value specifying whether the configuration property is being evaluated at the machine configuration level.">获取一个值，该值指定是否正在计算机配置级别计算配置属性。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration property is being evaluated at the machine configuration level; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果正在计算机配置级别计算配置属性，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Configuration.DefaultSection">
      <summary vsli:raw="Represents a basic configuration-section handler that exposes the configuration section's XML for both read and write access.">表示公开配置节的 XML 以进行读写访问的基本配置节处理程序。</summary>
    </member>
    <member name="M:System.Configuration.DefaultSection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.DefaultSection&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.DefaultSection" /> 类的新实例。</summary>
    </member>
    <member name="T:System.Configuration.DefaultSettingValueAttribute">
      <summary vsli:raw="Specifies the default value for an application settings property.">指定应用程序设置属性的默认值。</summary>
    </member>
    <member name="M:System.Configuration.DefaultSettingValueAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Configuration.DefaultSettingValueAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.DefaultSettingValueAttribute" /> 类的实例。</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the default value for the property.">表示属性的默认值的 <see cref="T:System.String" />。</param>
    </member>
    <member name="P:System.Configuration.DefaultSettingValueAttribute.Value">
      <summary vsli:raw="Gets the default value for the application settings property.">获取应用程序设置属性的默认值。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the default value for the property.">表示属性的默认值的 <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Configuration.DefaultValidator">
      <summary vsli:raw="Provides validation of an object. This class cannot be inherited.">提供对象验证。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Configuration.DefaultValidator.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.DefaultValidator&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.DefaultValidator" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.DefaultValidator.CanValidate(System.Type)">
      <summary vsli:raw="Determines whether an object can be validated, based on type.">根据类型确定是否可以验证对象。</summary>
      <param name="type" vsli:raw="The object type.">对象类型。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; for all types being validated.">对所有验证的类型均为 <see langword="true" />。</returns>
    </member>
    <member name="M:System.Configuration.DefaultValidator.Validate(System.Object)">
      <summary vsli:raw="Determines whether the value of an object is valid.">确定对象的值是否有效。</summary>
      <param name="value" vsli:raw="The object value.">对象值。</param>
    </member>
    <member name="T:System.Configuration.DictionarySectionHandler">
      <summary vsli:raw="Provides key/value pair configuration information from a configuration section.">提供配置节中的键/值对配置信息。</summary>
    </member>
    <member name="M:System.Configuration.DictionarySectionHandler.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.DictionarySectionHandler&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.DictionarySectionHandler" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.DictionarySectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary vsli:raw="Creates a new configuration handler and adds it to the section-handler collection based on the specified parameters.">创建新的配置处理程序，并根据指定参数将其添加到节处理程序集合中。</summary>
      <param name="parent" vsli:raw="Parent object.">父对象。</param>
      <param name="context" vsli:raw="Configuration context object.">配置上下文对象。</param>
      <param name="section" vsli:raw="Section XML node.">部分 XML 节点。</param>
      <returns vsli:raw="A configuration object.">配置对象。</returns>
    </member>
    <member name="P:System.Configuration.DictionarySectionHandler.KeyAttributeName">
      <summary vsli:raw="Gets the XML attribute name to use as the key in a key/value pair.">获取 XML 属性名称，以用作键/值对中的键。</summary>
      <returns vsli:raw="A string value containing the name of the key attribute.">一个字符串值，包含键特性的名称。</returns>
    </member>
    <member name="P:System.Configuration.DictionarySectionHandler.ValueAttributeName">
      <summary vsli:raw="Gets the XML attribute name to use as the value in a key/value pair.">获取 XML 属性名称，以用作键/值对中的值。</summary>
      <returns vsli:raw="A string value containing the name of the value attribute.">一个字符串值，包含值特性的名称。</returns>
    </member>
    <member name="T:System.Configuration.DpapiProtectedConfigurationProvider">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; object that uses the Windows data protection API (DPAPI) to encrypt and decrypt configuration data.">提供使用 Windows 数据保护 API (DPAPI) 来加密和解密配置数据的 <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 对象。</summary>
    </member>
    <member name="M:System.Configuration.DpapiProtectedConfigurationProvider.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.DpapiProtectedConfigurationProvider&quot; /&gt; class using default settings.">使用默认设置初始化 <see cref="T:System.Configuration.DpapiProtectedConfigurationProvider" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.DpapiProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)">
      <summary vsli:raw="Decrypts the passed &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object.">对传递的 <see cref="T:System.Xml.XmlNode" /> 对象进行解密。</summary>
      <param name="encryptedNode" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object to decrypt.">要解密的 <see cref="T:System.Xml.XmlNode" /> 对象。</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="&lt;paramref name=&quot;encryptedNode&quot; /&gt; does not have &lt;see cref=&quot;P:System.Xml.XmlNode.Name&quot; /&gt; set to &quot;EncryptedData&quot; and &lt;see cref=&quot;T:System.Xml.XmlNodeType&quot; /&gt; set to &lt;see cref=&quot;F:System.Xml.XmlNodeType.Element&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;encryptedNode&quot; /&gt; does not have a child node named &quot;CipherData&quot; with a child node named &quot;CipherValue&quot;.  &#xA;  &#xA;-or-&#xA;  &#xA; The child node named &quot;CipherData&quot; is an empty node.">
        <paramref name="encryptedNode" /> 既未将 <see cref="P:System.Xml.XmlNode.Name" /> 设置为“EncryptedData”，也未将 <see cref="T:System.Xml.XmlNodeType" /> 设置为 <see cref="F:System.Xml.XmlNodeType.Element" />。  
  
- 或 - 
 <paramref name="encryptedNode" /> 没有带有名为“CipherValue”的子节点的“CipherData”子节点。  
  
- 或 - 
名为“CipherData”的子节点为空节点。</exception>
      <returns vsli:raw="A decrypted &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object.">已解密的 <see cref="T:System.Xml.XmlNode" /> 对象。</returns>
    </member>
    <member name="M:System.Configuration.DpapiProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)">
      <summary vsli:raw="Encrypts the passed &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object.">对传递的 <see cref="T:System.Xml.XmlNode" /> 对象进行加密。</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object to encrypt.">要加密的 <see cref="T:System.Xml.XmlNode" /> 对象。</param>
      <returns vsli:raw="An encrypted &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object.">已加密的 <see cref="T:System.Xml.XmlNode" /> 对象。</returns>
    </member>
    <member name="M:System.Configuration.DpapiProtectedConfigurationProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary vsli:raw="Initializes the provider with default settings.">使用默认设置初始化提供程序。</summary>
      <param name="name" vsli:raw="The provider name to use for the object.">要为对象使用的提供程序名称。</param>
      <param name="configurationValues" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Specialized.NameValueCollection&quot; /&gt; collection of values to use when initializing the object.">初始化对象时要使用的值的 <see cref="T:System.Collections.Specialized.NameValueCollection" /> 集合。</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="&lt;paramref name=&quot;configurationValues&quot; /&gt; contains an unrecognized configuration setting.">
        <paramref name="configurationValues" /> 包含无法识别的配置设置。</exception>
    </member>
    <member name="P:System.Configuration.DpapiProtectedConfigurationProvider.UseMachineProtection">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Configuration.DpapiProtectedConfigurationProvider&quot; /&gt; object is using machine-specific or user-account-specific protection.">获取一个值，该值用于指示 <see cref="T:System.Configuration.DpapiProtectedConfigurationProvider" /> 对象是在使用特定于计算机的保护，还是在使用特定于用户帐户的保护。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.DpapiProtectedConfigurationProvider&quot; /&gt; is using machine-specific protection; &lt;see langword=&quot;false&quot; /&gt; if it is using user-account-specific protection.">如果 <see cref="T:System.Configuration.DpapiProtectedConfigurationProvider" /> 在使用特定于计算机的保护，则为 <see langword="true" />，如果它在使用特定于用户帐户的保护，则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Configuration.ElementInformation">
      <summary vsli:raw="Contains meta-information about an individual element within the configuration. This class cannot be inherited.">包含有关配置中的个别元素的元信息。 此类不能被继承。</summary>
    </member>
    <member name="P:System.Configuration.ElementInformation.Errors">
      <summary vsli:raw="Gets the errors for the associated element and subelements.">获取关联的元素和子元素的错误。</summary>
      <returns vsli:raw="The collection containing the errors for the associated element and subelements.">包含关联的元素和子元素的错误的集合</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.IsCollection">
      <summary vsli:raw="Gets a value indicating whether the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object is a &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; collection.">获取一个值，该值指示关联的 <see cref="T:System.Configuration.ConfigurationElement" /> 对象是否是 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 集合。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object is a &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollection&quot; /&gt; collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果关联的 <see cref="T:System.Configuration.ConfigurationElement" /> 对象是 <see cref="T:System.Configuration.ConfigurationElementCollection" /> 集合，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.IsLocked">
      <summary vsli:raw="Gets a value that indicates whether the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object cannot be modified.">获取一个值，该值指示是否可以修改关联的 <see cref="T:System.Configuration.ConfigurationElement" /> 对象。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object cannot be modified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果不能修改关联的 <see cref="T:System.Configuration.ConfigurationElement" /> 对象，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.IsPresent">
      <summary vsli:raw="Gets a value indicating whether the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object is in the configuration file.">获取一个值，该值指示关联的 <see cref="T:System.Configuration.ConfigurationElement" /> 对象是否位于配置文件中。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object is in the configuration file; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果关联的 <see cref="T:System.Configuration.ConfigurationElement" /> 对象位于配置文件中，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.LineNumber">
      <summary vsli:raw="Gets the line number in the configuration file where the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object is defined.">获取配置文件中定义关联的 <see cref="T:System.Configuration.ConfigurationElement" /> 对象的行号。</summary>
      <returns vsli:raw="The line number in the configuration file where the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object is defined.">配置文件中定义关联的 <see cref="T:System.Configuration.ConfigurationElement" /> 对象的行号。</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.Properties">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Configuration.PropertyInformationCollection&quot; /&gt; collection of the properties in the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object.">获取关联的 <see cref="T:System.Configuration.PropertyInformationCollection" /> 对象中的 <see cref="T:System.Configuration.ConfigurationElement" /> 属性集合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.PropertyInformationCollection&quot; /&gt; collection of the properties in the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object.">关联的 <see cref="T:System.Configuration.PropertyInformationCollection" /> 对象中的 <see cref="T:System.Configuration.ConfigurationElement" /> 属性集合。</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.Source">
      <summary vsli:raw="Gets the source file where the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object originated.">获取产生关联的 <see cref="T:System.Configuration.ConfigurationElement" /> 对象的源文件。</summary>
      <returns vsli:raw="The source file where the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object originated.">产生关联的 <see cref="T:System.Configuration.ConfigurationElement" /> 对象的源文件。</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.Type">
      <summary vsli:raw="Gets the type of the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object.">获取关联的 <see cref="T:System.Configuration.ConfigurationElement" /> 对象的类型。</summary>
      <returns vsli:raw="The type of the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object.">关联的 <see cref="T:System.Configuration.ConfigurationElement" /> 对象的类型。</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.Validator">
      <summary vsli:raw="Gets the object used to validate the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object.">获取用于验证关联的 <see cref="T:System.Configuration.ConfigurationElement" /> 对象的对象。</summary>
      <returns vsli:raw="The object used to validate the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object.">用于验证关联的 <see cref="T:System.Configuration.ConfigurationElement" /> 对象的对象。</returns>
    </member>
    <member name="T:System.Configuration.ExeConfigurationFileMap">
      <summary vsli:raw="Defines the configuration file mapping for an .exe application. This class cannot be inherited.">定义 .exe 应用程序的配置文件映射。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Configuration.ExeConfigurationFileMap.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ExeConfigurationFileMap&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.ExeConfigurationFileMap" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.ExeConfigurationFileMap.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ExeConfigurationFileMap&quot; /&gt; class by using the specified machine configuration file name.">使用指定的计算机配置文件名初始化 <see cref="T:System.Configuration.ExeConfigurationFileMap" /> 类的新实例。</summary>
      <param name="machineConfigFileName" vsli:raw="The name of the machine configuration file that includes the complete physical path (for example, &lt;c&gt;c:\Windows\Microsoft.NET\Framework\v2.0.50727\CONFIG\machine.config&lt;/c&gt;).">计算机配置文件的名称，包含完整的物理路径（例如，<c>c:\Windows\Microsoft.NET\Framework\v2.0.50727\CONFIG\machine.config</c>）。</param>
    </member>
    <member name="M:System.Configuration.ExeConfigurationFileMap.Clone">
      <summary vsli:raw="Creates a copy of the existing &lt;see cref=&quot;T:System.Configuration.ExeConfigurationFileMap&quot; /&gt; object.">创建现有 <see cref="T:System.Configuration.ExeConfigurationFileMap" /> 对象的副本。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Configuration.ExeConfigurationFileMap&quot; /&gt; object.">一个 <see cref="T:System.Configuration.ExeConfigurationFileMap" /> 对象。</returns>
    </member>
    <member name="P:System.Configuration.ExeConfigurationFileMap.ExeConfigFilename">
      <summary vsli:raw="Gets or sets the name of the configuration file.">获取或设置配置文件的名称。</summary>
      <returns vsli:raw="The configuration file name.">配置文件名称。</returns>
    </member>
    <member name="P:System.Configuration.ExeConfigurationFileMap.LocalUserConfigFilename">
      <summary vsli:raw="Gets or sets the name of the configuration file for the local user.">获取或设置配置文件的名称（针对本地用户）。</summary>
      <returns vsli:raw="The configuration file name.">配置文件名称。</returns>
    </member>
    <member name="P:System.Configuration.ExeConfigurationFileMap.RoamingUserConfigFilename">
      <summary vsli:raw="Gets or sets the name of the configuration file for the roaming user.">获取或设置配置文件的名称（针对漫游用户）。</summary>
      <returns vsli:raw="The configuration file name.">配置文件名称。</returns>
    </member>
    <member name="T:System.Configuration.ExeContext">
      <summary vsli:raw="Manages the path context for the current application. This class cannot be inherited.">管理当前应用程序的路径上下文。 此类不能被继承。</summary>
    </member>
    <member name="P:System.Configuration.ExeContext.ExePath">
      <summary vsli:raw="Gets the current path for the application.">获取应用程序的当前路径。</summary>
      <returns vsli:raw="A string value containing the current path.">包含当前路径的字符串值。</returns>
    </member>
    <member name="P:System.Configuration.ExeContext.UserLevel">
      <summary vsli:raw="Gets an object representing the path level of the current application.">获取一个对象，该对象表示当前应用程序的路径级别。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationUserLevel&quot; /&gt; object representing the path level of the current application.">一个 <see cref="T:System.Configuration.ConfigurationUserLevel" /> 对象，表示当前应用程序的路径级别。</returns>
    </member>
    <member name="T:System.Configuration.GenericEnumConverter">
      <summary vsli:raw="Converts between a string and an enumeration type.">在字符串和枚举类型之间进行转换。</summary>
    </member>
    <member name="M:System.Configuration.GenericEnumConverter.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.GenericEnumConverter&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.GenericEnumConverter" /> 类的新实例。</summary>
      <param name="typeEnum" vsli:raw="The enumeration type to convert.">要转换的枚举类型。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;typeEnum&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="typeEnum" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Configuration.GenericEnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; to an &lt;see cref=&quot;T:System.Enum&quot; /&gt; type.">将 <see cref="T:System.String" /> 转换为 <see cref="T:System.Enum" /> 类型。</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">用于类型转换的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象。</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object used during conversion.">转换期间使用的 <see cref="T:System.Globalization.CultureInfo" /> 对象。</param>
      <param name="data" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; object to convert.">要转换的 <see cref="T:System.String" /> 对象。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;data&quot; /&gt; is null or an empty string (&quot;&quot;).  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;data&quot; /&gt; starts with a numeric character.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;data&quot; /&gt; includes white space.">
        <paramref name="data" /> 为 null 或为空字符串 ("")。  
  
- 或 - 
 <paramref name="data" /> 以数字字符开头。  
  
- 或 - 
 <paramref name="data" /> 包含空格。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Enum&quot; /&gt; type that represents the &lt;paramref name=&quot;data&quot; /&gt; parameter.">表示 <paramref name="data" /> 参数的 <see cref="T:System.Enum" /> 类型。</returns>
    </member>
    <member name="M:System.Configuration.GenericEnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts an &lt;see cref=&quot;T:System.Enum&quot; /&gt; type to a &lt;see cref=&quot;T:System.String&quot; /&gt; value.">将 <see cref="T:System.Enum" /> 类型转换为 <see cref="T:System.String" /> 值。</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">用于类型转换的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象。</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object used during conversion.">转换期间使用的 <see cref="T:System.Globalization.CultureInfo" /> 对象。</param>
      <param name="value" vsli:raw="The value to convert to.">要转换为的值。</param>
      <param name="type" vsli:raw="The type to convert to.">要转换为的类型。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the &lt;paramref name=&quot;value&quot; /&gt; parameter.">表示 <paramref name="value" /> 参数的 <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Configuration.IApplicationSettingsProvider">
      <summary vsli:raw="Defines extended capabilities for client-based application settings providers.">为基于客户端的应用程序的设置提供程序定义扩展功能。</summary>
    </member>
    <member name="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)">
      <summary vsli:raw="Returns the value of the specified settings property for the previous version of the same application.">返回同一应用程序早期版本的指定设置属性的值。</summary>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsContext&quot; /&gt; describing the current application usage.">描述当前应用程序用法的 <see cref="T:System.Configuration.SettingsContext" />。</param>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; whose value is to be returned.">要返回其值的 <see cref="T:System.Configuration.SettingsProperty" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; containing the value of the specified property setting as it was last set in the previous version of the application; or &lt;see langword=&quot;null&quot; /&gt; if the setting cannot be found.">包含指定属性设置值的 <see cref="T:System.Configuration.SettingsPropertyValue" />，该值为早期版本的应用程序中最后设置的值；或者，如果找不到该设置，则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)">
      <summary vsli:raw="Resets the application settings associated with the specified application to their default values.">将与指定应用程序关联的应用程序设置重置为其默认值。</summary>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsContext&quot; /&gt; describing the current application usage.">描述当前应用程序用法的 <see cref="T:System.Configuration.SettingsContext" />。</param>
    </member>
    <member name="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
      <summary vsli:raw="Indicates to the provider that the application has been upgraded. This offers the provider an opportunity to upgrade its stored settings as appropriate.">向提供程序指出应用程序已升级。 这给提供程序提供了一个机会，使其可以相应地升级其存储的设置。</summary>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsContext&quot; /&gt; describing the current application usage.">描述当前应用程序用法的 <see cref="T:System.Configuration.SettingsContext" />。</param>
      <param name="properties" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsPropertyCollection&quot; /&gt; containing the settings property group whose values are to be retrieved.">一个包含设置属性组（将要检索该组中的值）的 <see cref="T:System.Configuration.SettingsPropertyCollection" />。</param>
    </member>
    <member name="T:System.Configuration.IConfigurationSectionHandler">
      <summary vsli:raw="Handles the access to certain configuration sections.">处理对特定的配置节的访问。</summary>
    </member>
    <member name="M:System.Configuration.IConfigurationSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary vsli:raw="Creates a configuration section handler.">创建配置节处理程序。</summary>
      <param name="parent" vsli:raw="Parent object.">父对象。</param>
      <param name="configContext" vsli:raw="Configuration context object.">配置上下文对象。</param>
      <param name="section" vsli:raw="Section XML node.">部分 XML 节点。</param>
      <returns vsli:raw="The created section handler object.">创建的节处理程序对象。</returns>
    </member>
    <member name="T:System.Configuration.IConfigurationSystem">
      <summary vsli:raw="Provides standard configuration methods.">提供标准配置方法。</summary>
    </member>
    <member name="M:System.Configuration.IConfigurationSystem.GetConfig(System.String)">
      <summary vsli:raw="Gets the specified configuration.">获取指定的配置。</summary>
      <param name="configKey" vsli:raw="The configuration key.">配置键。</param>
      <returns vsli:raw="The object representing the configuration.">表示配置的对象。</returns>
    </member>
    <member name="M:System.Configuration.IConfigurationSystem.Init">
      <summary vsli:raw="Used for initialization.">用于初始化。</summary>
    </member>
    <member name="T:System.Configuration.IdnElement">
      <summary vsli:raw="Provides the configuration setting for International Domain Name (IDN) processing in the &lt;see cref=&quot;T:System.Uri&quot; /&gt; class.">在 <see cref="T:System.Uri" /> 类中提供用于国际域名 (IDN) 处理的配置设置。</summary>
    </member>
    <member name="M:System.Configuration.IdnElement.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.IdnElement&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.IdnElement" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Configuration.IdnElement.Enabled">
      <summary vsli:raw="Gets or sets the value of the &lt;see cref=&quot;T:System.Configuration.IdnElement&quot; /&gt; configuration setting.">获取或设置 <see cref="T:System.Configuration.IdnElement" /> 配置设置的值。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.UriIdnScope&quot; /&gt; that contains the current configuration setting for IDN processing.">一个 <see cref="T:System.UriIdnScope" />，其中包含用于 IDN 处理的当前配置设置。</returns>
    </member>
    <member name="T:System.Configuration.IgnoreSection">
      <summary vsli:raw="Provides a wrapper type definition for configuration sections that are not handled by the &lt;see cref=&quot;N:System.Configuration&quot; /&gt; types.">为不由 <see cref="N:System.Configuration" /> 类型处理的配置节提供包装器类型定义。</summary>
    </member>
    <member name="M:System.Configuration.IgnoreSection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.IgnoreSection&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.IgnoreSection" /> 类的新实例。</summary>
    </member>
    <member name="T:System.Configuration.IgnoreSectionHandler">
      <summary vsli:raw="Provides a legacy section-handler definition for configuration sections that are not handled by the &lt;see cref=&quot;N:System.Configuration&quot; /&gt; types.">为不是由 <see cref="N:System.Configuration" /> 类型处理的配置节提供旧式节处理程序定义。</summary>
    </member>
    <member name="M:System.Configuration.IgnoreSectionHandler.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.IgnoreSectionHandler&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.IgnoreSectionHandler" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.IgnoreSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary vsli:raw="Creates a new configuration handler and adds the specified configuration object to the section-handler collection.">创建新的配置处理程序并将指定的配置对象添加到节处理程序集合中。</summary>
      <param name="parent" vsli:raw="The configuration settings in a corresponding parent configuration section.">对应父配置节中的配置设置。</param>
      <param name="configContext" vsli:raw="The virtual path for which the configuration section handler computes configuration values. Normally this parameter is reserved and is &lt;see langword=&quot;null&quot; /&gt;.">配置节处理程序为其计算配置值的虚拟路径。 通常，该参数是保留参数，并为 <see langword="null" />。</param>
      <param name="section" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; that contains the configuration information to be handled. Provides direct access to the XML contents of the configuration section.">一个 <see cref="T:System.Xml.XmlNode" />，它包含要处理的配置信息。 提供对配置节 XML 内容的直接访问。</param>
      <returns vsli:raw="The created configuration handler object.">已创建的配置处理程序对象。</returns>
    </member>
    <member name="T:System.Configuration.InfiniteIntConverter">
      <summary vsli:raw="Converts between a string and the standard infinite or integer value.">在字符串和标准无限或整数值之间转换。</summary>
    </member>
    <member name="M:System.Configuration.InfiniteIntConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.InfiniteIntConverter&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.InfiniteIntConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.InfiniteIntConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; to an &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">将 <see cref="T:System.String" /> 转换为 <see cref="T:System.Int32" />。</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">用于类型转换的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象。</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object used during conversion.">转换期间使用的 <see cref="T:System.Globalization.CultureInfo" /> 对象。</param>
      <param name="data" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; object to convert.">要转换的 <see cref="T:System.String" /> 对象。</param>
      <returns vsli:raw="The &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;, if the &lt;paramref name=&quot;data&quot; /&gt; parameter is the &lt;see cref=&quot;T:System.String&quot; /&gt; &quot;infinite&quot;; otherwise, the &lt;see cref=&quot;T:System.Int32&quot; /&gt; representing the &lt;paramref name=&quot;data&quot; /&gt; parameter integer value.">如果 <paramref name="data" /> 参数为 <see cref="F:System.Int32.MaxValue" />“infinite”，则为 <see cref="T:System.String" />；否则，<see cref="T:System.Int32" /> 表示 <paramref name="data" /> 参数整数值。</returns>
    </member>
    <member name="M:System.Configuration.InfiniteIntConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts an &lt;see cref=&quot;T:System.Int32&quot; /&gt;.to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">将 <see cref="T:System.Int32" /> 转换为 <see cref="T:System.String" />。</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">用于类型转换的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象。</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object used during conversion.">转换期间使用的 <see cref="T:System.Globalization.CultureInfo" /> 对象。</param>
      <param name="value" vsli:raw="The value to convert to.">要转换为的值。</param>
      <param name="type" vsli:raw="The type to convert to.">要转换为的类型。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; &quot;infinite&quot; if the &lt;paramref name=&quot;value&quot; /&gt; is &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;; otherwise, the &lt;see cref=&quot;T:System.String&quot; /&gt; representing the &lt;paramref name=&quot;value&quot; /&gt; parameter.">如果 <paramref name="value" /> 为 <see cref="T:System.String" />，则为 <see cref="F:System.Int32.MaxValue" />“infinite”；否则，<see cref="T:System.String" /> 表示 <paramref name="value" /> 参数。</returns>
    </member>
    <member name="T:System.Configuration.InfiniteTimeSpanConverter">
      <summary vsli:raw="Converts between a string and the standard infinite &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">在字符串和标准无限 <see cref="T:System.TimeSpan" /> 值之间转换。</summary>
    </member>
    <member name="M:System.Configuration.InfiniteTimeSpanConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.InfiniteTimeSpanConverter&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.InfiniteTimeSpanConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.InfiniteTimeSpanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">将 <see cref="T:System.String" /> 转换为 <see cref="T:System.TimeSpan" />。</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">用于类型转换的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象。</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object used during conversion.">转换期间使用的 <see cref="T:System.Globalization.CultureInfo" /> 对象。</param>
      <param name="data" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; object to convert.">要转换的 <see cref="T:System.String" /> 对象。</param>
      <returns vsli:raw="The &lt;see cref=&quot;F:System.TimeSpan.MaxValue&quot;&gt;TimeSpan.MaxValue&lt;/see&gt;, if the &lt;paramref name=&quot;data&quot; /&gt; parameter is the &lt;see cref=&quot;T:System.String&quot; /&gt; infinite; otherwise, the &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; representing the &lt;paramref name=&quot;data&quot; /&gt; parameter in minutes.">如果 <paramref name="data" /> 参数是 <see cref="F:System.TimeSpan.MaxValue" /> infinite，则为 <see cref="T:System.String" />，否则为以分钟表示 <paramref name="data" /> 参数的 <see cref="T:System.TimeSpan" />。</returns>
    </member>
    <member name="M:System.Configuration.InfiniteTimeSpanConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">将 <see cref="T:System.TimeSpan" /> 转换为 <see cref="T:System.String" />。</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">用于类型转换的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象。</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; used during object conversion.">对象转换期间使用的 <see cref="T:System.Globalization.CultureInfo" />。</param>
      <param name="value" vsli:raw="The value to convert.">要转换的值。</param>
      <param name="type" vsli:raw="The conversion type.">转换类型。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; &quot;infinite&quot;, if the &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see cref=&quot;F:System.TimeSpan.MaxValue&quot;&gt;TimeSpan.MaxValue&lt;/see&gt;; otherwise, the &lt;see cref=&quot;T:System.String&quot; /&gt; representing the &lt;paramref name=&quot;value&quot; /&gt; parameter in minutes.">如果 <paramref name="value" /> 参数是 <see cref="T:System.String" />，则为 <see cref="F:System.TimeSpan.MaxValue" />“infinite”；否则为以分钟表示 <paramref name="value" /> 参数的 <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Configuration.IntegerValidator">
      <summary vsli:raw="Provides validation of an &lt;see cref=&quot;T:System.Int32&quot; /&gt; value.">对 <see cref="T:System.Int32" /> 值进行验证。</summary>
    </member>
    <member name="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.IntegerValidator&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.IntegerValidator" /> 类的新实例。</summary>
      <param name="minValue" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; object that specifies the minimum value.">指定最小值的 <see cref="T:System.Int32" /> 对象。</param>
      <param name="maxValue" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; object that specifies the maximum value.">指定最大值的 <see cref="T:System.Int32" /> 对象。</param>
    </member>
    <member name="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.IntegerValidator&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.IntegerValidator" /> 类的新实例。</summary>
      <param name="minValue" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; object that specifies the minimum value.">指定最小值的 <see cref="T:System.Int32" /> 对象。</param>
      <param name="maxValue" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; object that specifies the maximum value.">指定最大值的 <see cref="T:System.Int32" /> 对象。</param>
      <param name="rangeIsExclusive" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify that the validation range is exclusive. Inclusive means the value to be validated must be within the specified range; exclusive means that it must be below the minimum or above the maximum.">若指定验证范围是独占的，则为 <see langword="true" />。 非独占意味着要验证的值必须在指定范围内；独占意味着要验证的值必须小于最小值或大于最大值。</param>
    </member>
    <member name="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.IntegerValidator&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.IntegerValidator" /> 类的新实例。</summary>
      <param name="minValue" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; object that specifies the minimum length of the integer value.">一个 <see cref="T:System.Int32" /> 对象，指定整数值的最小长度。</param>
      <param name="maxValue" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; object that specifies the maximum length of the integer value.">一个 <see cref="T:System.Int32" /> 对象，指定整数值的最大长度。</param>
      <param name="rangeIsExclusive" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the validation range is exclusive.">一个 <see cref="T:System.Boolean" /> 值，指定验证范围是否独占。</param>
      <param name="resolution" vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; object that specifies a value that must be matched.">一个 <see cref="T:System.Int32" /> 对象，指定必须匹配的值。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;resolution&quot; /&gt; is less than &lt;see langword=&quot;0&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;minValue&quot; /&gt; is greater than &lt;paramref name=&quot;maxValue&quot; /&gt;.">
        <paramref name="resolution" /> 小于 <see langword="0" />。  
  
- 或 - 
 <paramref name="minValue" /> 大于 <paramref name="maxValue" />。</exception>
    </member>
    <member name="M:System.Configuration.IntegerValidator.CanValidate(System.Type)">
      <summary vsli:raw="Determines whether the type of the object can be validated.">确定是否可以验证该对象的类型。</summary>
      <param name="type" vsli:raw="The type of the object.">对象的类型。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter matches an &lt;see cref=&quot;T:System.Int32&quot; /&gt; value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="type" /> 参数与 <see cref="T:System.Int32" /> 值相匹配，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.IntegerValidator.Validate(System.Object)">
      <summary vsli:raw="Determines whether the value of an object is valid.">确定对象的值是否有效。</summary>
      <param name="value" vsli:raw="The value to be validated.">要验证的值。</param>
    </member>
    <member name="T:System.Configuration.IntegerValidatorAttribute">
      <summary vsli:raw="Declaratively instructs .NET to perform integer validation on a configuration property. This class cannot be inherited.">以声明的方式指示 .NET Framework 对配置属性执行整数验证。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Configuration.IntegerValidatorAttribute.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Configuration.IntegerValidatorAttribute&quot; /&gt; class.">创建 <see cref="T:System.Configuration.IntegerValidatorAttribute" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Configuration.IntegerValidatorAttribute.ExcludeRange">
      <summary vsli:raw="Gets or sets a value that indicates whether to include or exclude the integers in the range defined by the &lt;see cref=&quot;P:System.Configuration.IntegerValidatorAttribute.MinValue&quot; /&gt; and &lt;see cref=&quot;P:System.Configuration.IntegerValidatorAttribute.MaxValue&quot; /&gt; property values.">获取或设置一个值，指示在 <see cref="P:System.Configuration.IntegerValidatorAttribute.MinValue" /> 和 <see cref="P:System.Configuration.IntegerValidatorAttribute.MaxValue" /> 属性值定义的范围内是包含还是排除整数。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value must be excluded; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果必须排除值，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.IntegerValidatorAttribute.MaxValue">
      <summary vsli:raw="Gets or sets the maximum value allowed for the property.">获取或设置属性允许的最大值。</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The selected value is less than &lt;see cref=&quot;P:System.Configuration.IntegerValidatorAttribute.MinValue&quot; /&gt;.">选定值小于 <see cref="P:System.Configuration.IntegerValidatorAttribute.MinValue" />。</exception>
      <returns vsli:raw="An integer that indicates the allowed maximum value.">一个整数，指示允许的最大值。</returns>
    </member>
    <member name="P:System.Configuration.IntegerValidatorAttribute.MinValue">
      <summary vsli:raw="Gets or sets the minimum value allowed for the property.">获取或设置属性允许的最小值。</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The selected value is greater than &lt;see cref=&quot;P:System.Configuration.IntegerValidatorAttribute.MaxValue&quot; /&gt;.">选定值大于 <see cref="P:System.Configuration.IntegerValidatorAttribute.MaxValue" />。</exception>
      <returns vsli:raw="An integer that indicates the allowed minimum value.">一个整数，指示允许的最小值。</returns>
    </member>
    <member name="P:System.Configuration.IntegerValidatorAttribute.ValidatorInstance">
      <summary vsli:raw="Gets an instance of the &lt;see cref=&quot;T:System.Configuration.IntegerValidator&quot; /&gt; class.">获取 <see cref="T:System.Configuration.IntegerValidator" /> 类的实例。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorBase&quot; /&gt; validator instance.">
        <see cref="T:System.Configuration.ConfigurationValidatorBase" /> 验证程序实例。</returns>
    </member>
    <member name="T:System.Configuration.Internal.DelegatingConfigHost">
      <summary vsli:raw="Delegates all members of the &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigHost&quot; /&gt; interface to another instance of a host.">将 <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> 接口的所有成员委托给主机的另一个实例。</summary>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.Internal.DelegatingConfigHost&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.Internal.DelegatingConfigHost" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.CreateConfigurationContext(System.String,System.String)">
      <summary vsli:raw="Creates a new configuration context.">创建新的配置上下文。</summary>
      <param name="configPath" vsli:raw="A string representing the path to a configuration file.">表示配置文件路径的字符串。</param>
      <param name="locationSubPath" vsli:raw="A string representing a location subpath.">表示位置子路径的字符串。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Object&quot; /&gt; representing a new configuration context.">表示新配置上下文的 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.CreateDeprecatedConfigContext(System.String)">
      <summary vsli:raw="Creates a deprecated configuration context.">创建已否决的配置上下文。</summary>
      <param name="configPath" vsli:raw="A string representing the path to a configuration file.">表示配置文件路径的字符串。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Object&quot; /&gt; representing a deprecated configuration context.">表示已否决配置上下文的 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.DecryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)">
      <summary vsli:raw="Decrypts an encrypted configuration section.">对已加密的配置节进行解密。</summary>
      <param name="encryptedXml" vsli:raw="An encrypted section of a configuration file.">配置文件中已加密的节。</param>
      <param name="protectionProvider" vsli:raw="An object containing the providers that encrypt and decrypt protected configuration data.">一个对象，它包含对受保护的配置数据进行加密和解密的提供程序。</param>
      <param name="protectedConfigSection" vsli:raw="An object that provides programatic access to the &lt;c&gt;configProtectedData&lt;/c&gt; configuration section.">一个对象，它提供对 <c>configProtectedData </c> 配置节的以编程方式的访问。</param>
      <returns vsli:raw="A string representing a decrypted configuration section.">表示已解密的配置节的字符串。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.DeleteStream(System.String)">
      <summary vsli:raw="Deletes the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">删除在配置文件上执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象。</summary>
      <param name="streamName" vsli:raw="The name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的名称。</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.EncryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)">
      <summary vsli:raw="Encrypts a section of a configuration object.">对配置对象的节进行加密。</summary>
      <param name="clearTextXml" vsli:raw="A section of the configuration that is not encrypted.">未加密的配置节。</param>
      <param name="protectionProvider" vsli:raw="An object containing the providers that encrypt and decrypt protected configuration data.">一个对象，它包含对受保护的配置数据进行加密和解密的提供程序</param>
      <param name="protectedConfigSection" vsli:raw="An object that provides programatic access to the &lt;c&gt;configProtectedData&lt;/c&gt; configuration section.">一个对象，它提供对 <c>configProtectedData </c> 配置节的以编程方式的访问。</param>
      <returns vsli:raw="A string representing an encrypted section of the configuration object.">表示配置对象的已加密节的字符串。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetConfigPathFromLocationSubPath(System.String,System.String)">
      <summary vsli:raw="Returns a configuration path based on a location subpath.">返回基于位置子路径的配置路径。</summary>
      <param name="configPath" vsli:raw="A string representing the path to a configuration file.">表示配置文件路径的字符串。</param>
      <param name="locationSubPath" vsli:raw="A string representing a location subpath.">表示位置子路径的字符串。</param>
      <returns vsli:raw="A string representing a configuration path.">表示配置路径的字符串。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetConfigType(System.String,System.Boolean)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Type&quot; /&gt; representing the type of the configuration.">返回表示配置类型的 <see cref="T:System.Type" />。</summary>
      <param name="typeName" vsli:raw="A string representing the configuration type.">表示配置类型的字符串。</param>
      <param name="throwOnError" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an exception should be thrown if an error is encountered; &lt;see langword=&quot;false&quot; /&gt; if an exception should not be thrown if an error is encountered.">如果遇到错误时应引发异常，则为 <see langword="true" />；如果遇到错误时不应引发异常，则为 <see langword="false" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; representing the type of the configuration.">一个 <see cref="T:System.Type" />，表示配置的类型。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetConfigTypeName(System.Type)">
      <summary vsli:raw="Returns a string representing the type name of the configuration object.">返回表示配置对象的类型名称的字符串。</summary>
      <param name="t" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object.">
        <see cref="T:System.Type" /> 对象。</param>
      <returns vsli:raw="A string representing the type name of the configuration object.">表示配置对象的类型名称的字符串。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetRestrictedPermissions(System.Configuration.Internal.IInternalConfigRecord,System.Security.PermissionSet@,System.Boolean@)">
      <summary vsli:raw="Sets the specified permission set if available within the host object.">如果在主机对象内可用，则设置指定的权限集。</summary>
      <param name="configRecord" vsli:raw="An &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigRecord&quot; /&gt; object.">一个 <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> 对象。</param>
      <param name="permissionSet" vsli:raw="A &lt;see cref=&quot;T:System.Security.PermissionSet&quot; /&gt; object.">
        <see cref="T:System.Security.PermissionSet" /> 对象。</param>
      <param name="isHostReady" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the host has finished initialization; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果主机已完成初始化，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetStreamName(System.String)">
      <summary vsli:raw="Returns the name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">返回对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的名称。</summary>
      <param name="configPath" vsli:raw="A string representing the path to a configuration file.">表示配置文件路径的字符串。</param>
      <returns vsli:raw="A string representing the name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">一个字符串，表示对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的名称。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetStreamNameForConfigSource(System.String,System.String)">
      <summary vsli:raw="Returns the name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration source.">返回对配置源执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的名称。</summary>
      <param name="streamName" vsli:raw="The name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的名称。</param>
      <param name="configSource" vsli:raw="A string representing the configuration source.">表示配置源的字符串。</param>
      <returns vsli:raw="A string representing the name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration source.">一个字符串，表示在配置源上执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的名称。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetStreamVersion(System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;P:System.Diagnostics.FileVersionInfo.FileVersion&quot; /&gt; object representing the version of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">返回一个 <see cref="P:System.Diagnostics.FileVersionInfo.FileVersion" /> 对象，该对象表示在配置文件上执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的版本。</summary>
      <param name="streamName" vsli:raw="The name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的名称。</param>
      <returns vsli:raw="A &lt;see cref=&quot;P:System.Diagnostics.FileVersionInfo.FileVersion&quot; /&gt; object representing the version of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">一个 <see cref="P:System.Diagnostics.FileVersionInfo.FileVersion" /> 对象，表示在配置文件上执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的版本。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.Impersonate">
      <summary vsli:raw="Instructs the host to impersonate and returns an &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; object required internally by .NET.">指示主机进行模拟并返回 .NET Framework 内部所需的 <see cref="T:System.IDisposable" /> 对象。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; value.">一个 <see cref="T:System.IDisposable" /> 值。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.Init(System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
      <summary vsli:raw="Initializes the configuration host.">初始化配置主机。</summary>
      <param name="configRoot" vsli:raw="An &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigRoot&quot; /&gt; object.">一个 <see cref="T:System.Configuration.Internal.IInternalConfigRoot" /> 对象。</param>
      <param name="hostInitParams" vsli:raw="A parameter object containing the values used for initializing the configuration host.">一个参数对象，包含用于初始化配置主机的值。</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.InitForConfiguration(System.String@,System.String@,System.String@,System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
      <summary vsli:raw="Initializes the host for configuration.">初始化配置的主机。</summary>
      <param name="locationSubPath" vsli:raw="A string representing a location subpath (passed by reference).">一个字符串，表示位置子路径（按引用传递）。</param>
      <param name="configPath" vsli:raw="A string representing the path to a configuration file.">表示配置文件路径的字符串。</param>
      <param name="locationConfigPath" vsli:raw="The location configuration path.">位置配置路径。</param>
      <param name="configRoot" vsli:raw="The configuration root element.">配置根元素。</param>
      <param name="hostInitConfigurationParams" vsli:raw="A parameter object representing the parameters used to initialize the host.">表示用于初始化主机的参数的参数对象。</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsAboveApplication(System.String)">
      <summary vsli:raw="Returns a value indicating whether the configuration is above the application configuration in the configuration hierarchy.">返回一个值，该值指示配置是否位于配置层次结构中的应用程序配置之上。</summary>
      <param name="configPath" vsli:raw="A string representing the path to a configuration file.">表示配置文件路径的字符串。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration is above the application configuration in the configuration hierarchy; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果配置处于配置层次结构中的应用程序配置之上，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsConfigRecordRequired(System.String)">
      <summary vsli:raw="Returns a value indicating whether a configuration record is required for the host configuration initialization.">返回一个值，该值指示主机配置初始化是否需要配置记录。</summary>
      <param name="configPath" vsli:raw="A string representing the path to a configuration file.">表示配置文件路径的字符串。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a configuration record is required for the host configuration initialization; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果主机配置初始化需要配置记录，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition)">
      <summary vsli:raw="Restricts or allows definitions in the host configuration.">限制或允许主机配置中的定义。</summary>
      <param name="configPath" vsli:raw="A string representing the path to a configuration file.">表示配置文件路径的字符串。</param>
      <param name="allowDefinition" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationAllowDefinition&quot; /&gt; object.">
        <see cref="T:System.Configuration.ConfigurationAllowDefinition" /> 对象。</param>
      <param name="allowExeDefinition" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationAllowExeDefinition&quot; /&gt; object.">
        <see cref="T:System.Configuration.ConfigurationAllowExeDefinition" /> 对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the grant or restriction of definitions in the host configuration was successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果主机配置中定义的授予或限制成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsFile(System.String)">
      <summary vsli:raw="Returns a value indicating whether the file path used by a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object to read a configuration file is a valid path.">返回一个值，指示由 <see cref="T:System.IO.Stream" /> 对象用于读取配置文件的文件路径是否为有效路径。</summary>
      <param name="streamName" vsli:raw="The name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的名称。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the path used by a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object to read a configuration file is a valid path; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果由 <see cref="T:System.IO.Stream" /> 对象用于读取配置文件的路径是有效路径，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsFullTrustSectionWithoutAptcaAllowed(System.Configuration.Internal.IInternalConfigRecord)">
      <summary vsli:raw="Returns a value indicating whether a configuration section requires a fully trusted code access security level and does not allow the &lt;see cref=&quot;T:System.Security.AllowPartiallyTrustedCallersAttribute&quot; /&gt; attribute to disable implicit link demands.">返回一个值，它指示配置节是否需要完全受信任的代码访问安全级别，并且不允许 <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" /> 特性禁用隐式链接请求。</summary>
      <param name="configRecord" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigRecord&quot; /&gt; object.">
        <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> 对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration section requires a fully trusted code access security level and does not allow the &lt;see cref=&quot;T:System.Security.AllowPartiallyTrustedCallersAttribute&quot; /&gt; attribute to disable implicit link demands; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果配置节需要完全受信任的代码访问安全级别并且不允许 <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" /> 特性禁用隐式链接请求，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsInitDelayed(System.Configuration.Internal.IInternalConfigRecord)">
      <summary vsli:raw="Returns a value indicating whether the initialization of a configuration object is considered delayed.">返回一个值，它指示配置对象初始化是否被视为延迟。</summary>
      <param name="configRecord" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigRecord&quot; /&gt; object.">
        <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> 对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the initialization of a configuration object is considered delayed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果配置对象初始化被视为延迟，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsLocationApplicable(System.String)">
      <summary vsli:raw="Returns a value indicating whether the configuration object supports a location tag.">返回一个值，它指示配置对象是否支持位置标记。</summary>
      <param name="configPath" vsli:raw="A string representing the path to a configuration file.">表示配置文件路径的字符串。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration object supports a location tag; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果配置对象支持位置标记，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsSecondaryRoot(System.String)">
      <summary vsli:raw="Returns a value indicating whether a configuration path is to a configuration node whose contents should be treated as a root.">返回一个值，它指示配置路径是否指向应将其内容视为根的配置节点。</summary>
      <param name="configPath" vsli:raw="A string representing the path to a configuration file.">表示配置文件路径的字符串。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration path is to a configuration node whose contents should be treated as a root; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果配置路径指向应将其内容视为根的配置节点，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsTrustedConfigPath(System.String)">
      <summary vsli:raw="Returns a value indicating whether the configuration path is trusted.">返回一个指示配置路径是否受信任的值。</summary>
      <param name="configPath" vsli:raw="A string representing the path to a configuration file.">表示配置文件路径的字符串。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration path is trusted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果配置路径受信任，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.OpenStreamForRead(System.String)">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object to read a configuration file.">打开一个 <see cref="T:System.IO.Stream" /> 对象，以便读取配置文件。</summary>
      <param name="streamName" vsli:raw="The name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的名称。</param>
      <returns vsli:raw="The object specified by &lt;paramref name=&quot;streamName&quot; /&gt;.">
        <paramref name="streamName" /> 指定的对象。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.OpenStreamForRead(System.String,System.Boolean)">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object to read a configuration file.">打开一个 <see cref="T:System.IO.Stream" /> 对象，以便读取配置文件。</summary>
      <param name="streamName" vsli:raw="The name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的名称。</param>
      <param name="assertPermissions" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to assert permissions; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果断言权限，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <returns vsli:raw="The object specified by &lt;paramref name=&quot;streamName&quot; /&gt;.">
        <paramref name="streamName" /> 指定的对象。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@)">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object for writing to a configuration file or for writing to a temporary file used to build a configuration file. Allows a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object to be designated as a template for copying file attributes.">打开一个 <see cref="T:System.IO.Stream" /> 对象，以便写入配置文件或写入用于生成配置文件的临时文件。 允许将 <see cref="T:System.IO.Stream" /> 对象指定为模板，以便复制文件特性。</summary>
      <param name="streamName" vsli:raw="The name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的名称。</param>
      <param name="templateStreamName" vsli:raw="The name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object from which file attributes are to be copied as a template.">`<see cref="T:System.IO.Stream" /> 对象的名称，从该对象复制文件特性作为模板。</param>
      <param name="writeContext" vsli:raw="The write context of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object (passed by reference).">
        <see cref="T:System.IO.Stream" /> 对象的写上下文（按引用传递）。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object.">
        <see cref="T:System.IO.Stream" /> 对象。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@,System.Boolean)">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object for writing to a configuration file. Allows a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object to be designated as a template for copying file attributes.">打开一个 <see cref="T:System.IO.Stream" /> 对象，以便写入配置文件。 允许将 <see cref="T:System.IO.Stream" /> 对象指定为模板，以便复制文件特性。</summary>
      <param name="streamName" vsli:raw="The name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的名称。</param>
      <param name="templateStreamName" vsli:raw="The name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object from which file attributes are to be copied as a template.">`<see cref="T:System.IO.Stream" /> 对象的名称，从该对象复制文件特性作为模板。</param>
      <param name="writeContext" vsli:raw="The write context of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file (passed by reference).">对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的写上下文（按引用传递）。</param>
      <param name="assertPermissions" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to assert permissions; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果断言权限，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <returns vsli:raw="The object specified by the &lt;paramref name=&quot;streamName&quot; /&gt; parameter.">由 <paramref name="streamName" /> 参数指定的对象。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.PrefetchAll(System.String,System.String)">
      <summary vsli:raw="Returns a value indicating whether the entire configuration file could be read by a designated &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object.">返回一个值，它指示是否可由指定的 <see cref="T:System.IO.Stream" /> 对象读取整个配置文件。</summary>
      <param name="configPath" vsli:raw="A string representing the path to a configuration file.">表示配置文件路径的字符串。</param>
      <param name="streamName" vsli:raw="The name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的名称。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the entire configuration file could be read by the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object designated by &lt;paramref name=&quot;streamName&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果由 <paramref name="streamName" /> 指定的 <see cref="T:System.IO.Stream" /> 对象可以读取整个配置文件，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.PrefetchSection(System.String,System.String)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigHost&quot; /&gt; object to read a designated section of its associated configuration file.">指示 <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> 对象读取其关联配置文件的指定节。</summary>
      <param name="sectionGroupName" vsli:raw="A string representing the name of a section group in the configuration file.">一个字符串，表示配置文件中节组的名称。</param>
      <param name="sectionName" vsli:raw="A string representing the name of a section in the configuration file.">一个字符串，表示配置文件中节的名称。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a section of the configuration file designated by the &lt;paramref name=&quot;sectionGroupName&quot; /&gt; and &lt;paramref name=&quot;sectionName&quot; /&gt; parameters can be read by a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.IO.Stream" /> 对象可读取由 <paramref name="sectionGroupName" /> 和 <paramref name="sectionName" /> 指定的配置文件节，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.RefreshConfigPaths">
      <summary vsli:raw="Invokes the delegated host's method that refreshes configuration paths.">调用可刷新配置路径的委派主机的方法。</summary>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.RequireCompleteInit(System.Configuration.Internal.IInternalConfigRecord)">
      <summary vsli:raw="Indicates that a new configuration record requires a complete initialization.">指示新配置记录需要完全初始化。</summary>
      <param name="configRecord" vsli:raw="An &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigRecord&quot; /&gt; object.">一个 <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> 对象。</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.StartMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)">
      <summary vsli:raw="Instructs the host to monitor an associated &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object for changes in a configuration file.">指示主机监视配置文件中关联 <see cref="T:System.IO.Stream" /> 对象的更改。</summary>
      <param name="streamName" vsli:raw="The name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的名称。</param>
      <param name="callback" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.Internal.StreamChangeCallback&quot; /&gt; object to receive the returned data representing the changes in the configuration file.">一个 <see cref="T:System.Configuration.Internal.StreamChangeCallback" /> 对象，它用于接收返回的表示配置文件中的更改的数据。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; instance containing changed configuration settings.">一个 <see cref="T:System.Object" /> 实例，包含更改的配置设置。</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.StopMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)">
      <summary vsli:raw="Instructs the host object to stop monitoring an associated &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object for changes in a configuration file.">指示主机对象停止监视配置文件中关联 <see cref="T:System.IO.Stream" /> 对象的更改。</summary>
      <param name="streamName" vsli:raw="The name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的名称。</param>
      <param name="callback" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.Internal.StreamChangeCallback&quot; /&gt; object.">
        <see cref="T:System.Configuration.Internal.StreamChangeCallback" /> 对象。</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.VerifyDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition,System.Configuration.Internal.IConfigErrorInfo)">
      <summary vsli:raw="Verifies that a configuration definition is allowed for a configuration record.">验证是否允许对配置记录使用配置定义。</summary>
      <param name="configPath" vsli:raw="A string representing the path to a configuration file.">表示配置文件路径的字符串。</param>
      <param name="allowDefinition" vsli:raw="An &lt;see cref=&quot;P:System.Configuration.SectionInformation.AllowDefinition&quot; /&gt; object.">一个 <see cref="P:System.Configuration.SectionInformation.AllowDefinition" /> 对象。</param>
      <param name="allowExeDefinition" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationAllowExeDefinition&quot; /&gt; object.">一个 <see cref="T:System.Configuration.ConfigurationAllowExeDefinition" /> 对象</param>
      <param name="errorInfo" vsli:raw="An &lt;see cref=&quot;T:System.Configuration.Internal.IConfigErrorInfo&quot; /&gt; object.">一个 <see cref="T:System.Configuration.Internal.IConfigErrorInfo" /> 对象。</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.WriteCompleted(System.String,System.Boolean,System.Object)">
      <summary vsli:raw="Indicates that all writing to the configuration file has completed.">指示已完成所有写入配置文件操作。</summary>
      <param name="streamName" vsli:raw="The name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的名称。</param>
      <param name="success" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if writing to the configuration file completed successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果已成功完成对配置文件的写入，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <param name="writeContext" vsli:raw="The write context of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的写上下文。</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.WriteCompleted(System.String,System.Boolean,System.Object,System.Boolean)">
      <summary vsli:raw="Indicates that all writing to the configuration file has completed and specifies whether permissions should be asserted.">指示已完成所有写入配置文件操作，并指定是否应断言权限。</summary>
      <param name="streamName" vsli:raw="The name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a configuration file.">对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的名称。</param>
      <param name="success" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that writing was completed successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 指示已成功完成写入操作；否则为 <see langword="false" />。</param>
      <param name="writeContext" vsli:raw="The write context of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的写上下文。</param>
      <param name="assertPermissions" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to assert permissions; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果断言权限，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.HasLocalConfig">
      <summary vsli:raw="Determines if the delegated host has a local configuration.">确定委派的主机是否具有本地配置。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance has a local configuration; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 如果当前实例具有本地配置，则为; 否则为。否则为 <see langword="false" /> 。</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.HasRoamingConfig">
      <summary vsli:raw="Determines if the delegated host has a roaming configuration.">确定委派的主机是否具有漫游配置。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current instance has a roaming configuration; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 如果当前实例具有漫游配置，则为; 否则为。否则为 <see langword="false" /> 。</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.Host">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigHost&quot; /&gt; object.">获取或设置 <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> 对象。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigHost&quot; /&gt; object.">
        <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> 对象。</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.IsAppConfigHttp">
      <summary vsli:raw="Determines if the application configuration file comes from a non-local URI (that is, &lt;c&gt;http://&lt;/c&gt;) or is a local file.">确定应用程序配置文件来自非本地 URI（即 <c>http://</c>）还是为本地文件。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the delegated host's sections belong to &lt;see cref=&quot;N:System.Net&quot; /&gt; and the configuration file for the application is downloaded via HTTP using &lt;see cref=&quot;T:System.Net.WebClient&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 如果委托主机的部分属于 <c>System.Net</c> ，并使用通过 HTTP 下载应用程序的配置文件 <see cref="T:System.Net.WebClient" /> ，则为; 否则为 <see langword="false" /> 。</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.IsRemote">
      <summary vsli:raw="Gets a value indicating whether the configuration is remote.">获取一个值，指示配置是否为远程配置。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration is remote; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果配置为远程配置，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.SupportsChangeNotifications">
      <summary vsli:raw="Gets a value indicating whether the host configuration supports change notifications.">获取一个值，它指示主机配置是否支持更改通知。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the host supports change notifications; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果主机支持更改通知，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.SupportsLocation">
      <summary vsli:raw="Gets a value indicating whether the host configuration supports location tags.">获取一个值，它指示主机配置是否支持位置标记。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the host supports location tags; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果主机支持位置标记，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.SupportsPath">
      <summary vsli:raw="Gets a value indicating whether the host configuration has path support.">获取一个值，它指示主机配置是否具有路径支持。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the host configuration has path support; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果主机配置具有路径支持，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.SupportsRefresh">
      <summary vsli:raw="Gets a value indicating whether the host configuration supports refresh.">获取一个值，它指示主机配置是否支持刷新。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the host configuration supports refresh; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果主机配置支持刷新，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Configuration.Internal.IConfigErrorInfo">
      <summary vsli:raw="Defines an interface used by .NET to support creating error configuration records.">定义 .NET Framework 用于支持创建错误配置记录的接口。</summary>
    </member>
    <member name="P:System.Configuration.Internal.IConfigErrorInfo.Filename">
      <summary vsli:raw="Gets a string specifying the file name related to the configuration details.">获取一个字符串，指定与配置详细信息相关的文件名。</summary>
      <returns vsli:raw="A string specifying a filename.">一个字符串，指定文件名。</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigErrorInfo.LineNumber">
      <summary vsli:raw="Gets an integer specifying the line number related to the configuration details.">获取一个整数，指定与配置详细信息相关的行号。</summary>
      <returns vsli:raw="An integer specifying a line number.">一个整数，指定行号。</returns>
    </member>
    <member name="T:System.Configuration.Internal.IConfigSystem">
      <summary vsli:raw="Defines an interface used by .NET to support the initialization of configuration properties.">定义 .NET Framework 用于支持初始化配置属性的接口。</summary>
    </member>
    <member name="M:System.Configuration.Internal.IConfigSystem.Init(System.Type,System.Object[])">
      <summary vsli:raw="Initializes a configuration object.">初始化配置对象。</summary>
      <param name="typeConfigHost" vsli:raw="The type of configuration host.">配置主机的类型。</param>
      <param name="hostInitParams" vsli:raw="An array of configuration host parameters.">配置主机参数数组。</param>
    </member>
    <member name="P:System.Configuration.Internal.IConfigSystem.Host">
      <summary vsli:raw="Gets the configuration host.">获取配置主机。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigHost&quot; /&gt; object that is used by .NET to initialize application configuration properties.">
        <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> 对象，.NET Framework 使用它来初始化应用程序配置属性。</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigSystem.Root">
      <summary vsli:raw="Gets the root of the configuration hierarchy.">获取配置层次结构的根。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigRoot&quot; /&gt; object.">一个 <see cref="T:System.Configuration.Internal.IInternalConfigRoot" /> 对象。</returns>
    </member>
    <member name="T:System.Configuration.Internal.IConfigurationManagerHelper">
      <summary vsli:raw="Defines an interface used by .NET to support configuration management.">定义 .NET Framework 用于支持配置管理的接口。</summary>
    </member>
    <member name="M:System.Configuration.Internal.IConfigurationManagerHelper.EnsureNetConfigLoaded">
      <summary vsli:raw="Ensures that the networking configuration is loaded.">确保已加载网络配置。</summary>
    </member>
    <member name="T:System.Configuration.Internal.IConfigurationManagerInternal">
      <summary vsli:raw="Defines an interface used by .NET to initialize configuration properties.">定义 .NET Framework 用于初始化配置属性的接口。</summary>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ApplicationConfigUri">
      <summary vsli:raw="Gets the configuration file name related to the application path.">获取与应用程序路径相关的配置文件名称。</summary>
      <returns vsli:raw="A string value representing a configuration file name.">一个字符串值，表示配置文件名称。</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeLocalConfigDirectory">
      <summary vsli:raw="Gets the local configuration directory of the application based on the entry assembly.">根据入口程序集获取应用程序的本地配置目录。</summary>
      <returns vsli:raw="A string representing the local configuration directory.">一个字符串，表示本地配置目录。</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeLocalConfigPath">
      <summary vsli:raw="Gets the local configuration path of the application based on the entry assembly.">根据入口程序集获取应用程序的本地配置路径。</summary>
      <returns vsli:raw="A string value representing the local configuration path of the application.">一个字符串值，表示应用程序的本地配置路径。</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeProductName">
      <summary vsli:raw="Gets the product name of the application based on the entry assembly.">根据入口程序集获取应用程序的产品名称。</summary>
      <returns vsli:raw="A string value representing the product name of the application.">一个字符串值，表示应用程序的产品名称。</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeProductVersion">
      <summary vsli:raw="Gets the product version of the application based on the entry assembly.">根据入口程序集获取应用程序的产品版本。</summary>
      <returns vsli:raw="A string value representing the product version of the application.">一个字符串值，表示应用程序的产品版本。</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeRoamingConfigDirectory">
      <summary vsli:raw="Gets the roaming configuration directory of the application based on the entry assembly.">根据入口程序集获取应用程序的漫游配置目录。</summary>
      <returns vsli:raw="A string value representing the roaming configuration directory of the application.">一个字符串值，表示应用程序的漫游配置目录。</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeRoamingConfigPath">
      <summary vsli:raw="Gets the roaming user's configuration path based on the application's entry assembly.">根据应用程序的入口程序集获取漫游用户的配置路径。</summary>
      <returns vsli:raw="A string value representing the roaming user's configuration path.">一个字符串值，表示漫游用户的配置路径。</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.MachineConfigPath">
      <summary vsli:raw="Gets the configuration path for the Machine.config file.">获取 Machine.config 文件的配置路径。</summary>
      <returns vsli:raw="A string value representing the path of the Machine.config file.">一个字符串值，表示 Machine.config 文件的路径。</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.SetConfigurationSystemInProgress">
      <summary vsli:raw="Gets a value representing the configuration system's status.">获取表示配置系统状态的值。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration system is in the process of being initialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果正在初始化配置系统，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.SupportsUserConfig">
      <summary vsli:raw="Gets a value that specifies whether user configuration settings are supported.">获取一个值，指定是否支持用户配置设置。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration system supports user configuration settings; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果配置系统支持用户配置设置，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.UserConfigFilename">
      <summary vsli:raw="Gets the name of the file used to store user configuration settings.">获取用于存储用户配置设置的文件的名称。</summary>
      <returns vsli:raw="A string specifying the name of the file used to store user configuration.">一个字符串，指定用于存储用户配置的文件的名称。</returns>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigClientHost">
      <summary vsli:raw="Defines interfaces that allow the internal .NET infrastructure to customize configuration.">定义允许内部 .NET Framework 基础结构对配置进行自定义的接口。</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.GetExeConfigPath">
      <summary vsli:raw="Returns the path to the application configuration file.">返回应用程序配置文件的路径。</summary>
      <returns vsli:raw="A string representing the path to the application configuration file.">表示应用程序配置文件路径的字符串。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.GetLocalUserConfigPath">
      <summary vsli:raw="Returns a string representing the path to the known local user configuration file.">返回一个表示已知的本地用户配置文件路径的字符串。</summary>
      <returns vsli:raw="A string representing the path to the known local user configuration file.">表示已知的本地用户配置文件路径的字符串。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.GetRoamingUserConfigPath">
      <summary vsli:raw="Returns a string representing the path to the known roaming user configuration file.">返回一个表示已知的漫游用户配置文件路径的字符串。</summary>
      <returns vsli:raw="A string representing the path to the known roaming user configuration file.">表示已知的漫游用户配置文件路径的字符串。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.IsExeConfig(System.String)">
      <summary vsli:raw="Returns a value indicating whether a configuration file path is the same as a currently known application configuration file path.">返回一个值，指示配置文件路径是否与当前已知的应用程序配置文件路径相同。</summary>
      <param name="configPath" vsli:raw="A string representing the path to the application configuration file.">表示应用程序配置文件路径的字符串。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a string representing a configuration path is the same as a path to the application configuration file; &lt;see langword=&quot;false&quot; /&gt; if a string representing a configuration path is not the same as a path to the application configuration file.">如果表示配置路径的字符串与应用程序配置文件的路径相同，则为 <see langword="true" />；如果表示配置路径的字符串与应用程序配置文件的路径不同，则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.IsLocalUserConfig(System.String)">
      <summary vsli:raw="Returns a value indicating whether a configuration file path is the same as the configuration file path for the currently known local user.">返回一个值，指示配置文件路径是否与当前已知的本地用户的配置文件路径相同。</summary>
      <param name="configPath" vsli:raw="A string representing the path to the application configuration file.">表示应用程序配置文件路径的字符串。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a string representing a configuration path is the same as a path to a known local user configuration file; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果表示配置路径的字符串与已知的本地用户配置文件的路径相同，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.IsRoamingUserConfig(System.String)">
      <summary vsli:raw="Returns a value indicating whether a configuration file path is the same as the configuration file path for the currently known roaming user.">返回一个值，以指示配置文件路径是否与当前已知的漫游用户的配置文件路径相同。</summary>
      <param name="configPath" vsli:raw="A string representing the path to an application configuration file.">表示应用程序配置文件路径的字符串。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a string representing a configuration path is the same as a path to a known roaming user configuration file; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果表示配置路径的字符串与已知的漫游用户配置文件的路径相同，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigConfigurationFactory">
      <summary vsli:raw="Defines the interfaces used by the internal design time API to create a &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">定义内部设计时 API 用于创建 <see cref="T:System.Configuration.Configuration" /> 对象的接口。</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigConfigurationFactory.Create(System.Type,System.Object[])">
      <summary vsli:raw="Creates and initializes a &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">创建并初始化一个 <see cref="T:System.Configuration.Configuration" /> 对象。</summary>
      <param name="typeConfigHost" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object to be created.">要创建的 <see cref="T:System.Type" /> 对象的 <see cref="T:System.Configuration.Configuration" />。</param>
      <param name="hostInitConfigurationParams" vsli:raw="A parameter array of &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the parameters to be applied to the created &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">一个 <see cref="T:System.Object" /> 参数数组，包含要应用于已创建的 <see cref="T:System.Configuration.Configuration" /> 对象的参数。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.Configuration&quot; /&gt; object.">
        <see cref="T:System.Configuration.Configuration" /> 对象。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigConfigurationFactory.NormalizeLocationSubPath(System.String,System.Configuration.Internal.IConfigErrorInfo)">
      <summary vsli:raw="Normalizes a location subpath of a path to a configuration file.">正常化配置文件的路径的位置子路径。</summary>
      <param name="subPath" vsli:raw="A string representing the path to the configuration file.">表示配置文件的路径的字符串。</param>
      <param name="errorInfo" vsli:raw="An instance of &lt;see cref=&quot;T:System.Configuration.Internal.IConfigErrorInfo&quot; /&gt; or &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Configuration.Internal.IConfigErrorInfo" /> 的一个实例或 <see langword="null" />。</param>
      <returns vsli:raw="A normalized subpath string.">一个正常化的子路径字符串。</returns>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigHost">
      <summary vsli:raw="Defines interfaces used by internal .NET structures to initialize application configuration properties.">定义由内部 .NET 结构用于初始化应用程序配置属性的接口。</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.CreateConfigurationContext(System.String,System.String)">
      <summary vsli:raw="Creates and returns a context object for a &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; of an application configuration.">创建并返回应用程序配置的 <see cref="T:System.Configuration.ConfigurationElement" /> 的上下文对象。</summary>
      <param name="configPath" vsli:raw="A string representing the path of the application configuration file.">表示应用程序配置文件路径的字符串。</param>
      <param name="locationSubPath" vsli:raw="A string representing a subpath location of the configuration element.">表示配置元素子路径位置的字符串。</param>
      <returns vsli:raw="A context object for a &lt;see cref=&quot;T:System.Configuration.ConfigurationElement&quot; /&gt; object of an application configuration.">应用程序配置的 <see cref="T:System.Configuration.ConfigurationElement" /> 对象的上下文对象。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.CreateDeprecatedConfigContext(System.String)">
      <summary vsli:raw="Creates and returns a deprecated context object of the application configuration.">创建并返回应用程序配置的已否决的上下文对象。</summary>
      <param name="configPath" vsli:raw="A string representing a path to an application configuration file.">表示应用程序配置文件路径的字符串。</param>
      <returns vsli:raw="A deprecated context object of the application configuration.">应用程序配置的已否决的上下文对象。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.DecryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)">
      <summary vsli:raw="Decrypts an encrypted configuration section and returns it as a string.">对加密配置节解密，并将其作为字符串返回。</summary>
      <param name="encryptedXml" vsli:raw="An encrypted XML string representing a configuration section.">表示配置节的加密 XML 字符串。</param>
      <param name="protectionProvider" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; object.">
        <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 对象。</param>
      <param name="protectedConfigSection" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationSection&quot; /&gt; object.">
        <see cref="T:System.Configuration.ProtectedConfigurationSection" /> 对象。</param>
      <returns vsli:raw="A decrypted configuration section as a string.">字符串形式的解密的配置节。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.DeleteStream(System.String)">
      <summary vsli:raw="Deletes the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the application configuration file.">删除对应用程序配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象。</summary>
      <param name="streamName" vsli:raw="A string representing the name of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">一个字符串，它表示对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的名称。</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.EncryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)">
      <summary vsli:raw="Encrypts a configuration section and returns it as a string.">对配置节进行加密，并将其作为字符串返回。</summary>
      <param name="clearTextXml" vsli:raw="An XML string representing a configuration section to encrypt.">表示要加密的配置节的 XML 字符串。</param>
      <param name="protectionProvider" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; object.">
        <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 对象。</param>
      <param name="protectedConfigSection" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationSection&quot; /&gt; object.">
        <see cref="T:System.Configuration.ProtectedConfigurationSection" /> 对象。</param>
      <returns vsli:raw="An encrypted configuration section represented as a string.">以字符串形式表示的加密配置节。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetConfigPathFromLocationSubPath(System.String,System.String)">
      <summary vsli:raw="Returns the complete path to an application configuration file based on the location subpath.">根据位置子路径返回应用程序配置文件的完整路径。</summary>
      <param name="configPath" vsli:raw="A string representing the path of the application configuration file.">表示应用程序配置文件路径的字符串。</param>
      <param name="locationSubPath" vsli:raw="The subpath location of the configuration file.">配置文件的子路径位置。</param>
      <returns vsli:raw="A string representing the complete path to an application configuration file.">表示应用程序配置文件完整路径的字符串。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetConfigType(System.String,System.Boolean)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Type&quot; /&gt; object representing the type of the configuration object.">返回表示配置对象类型的 <see cref="T:System.Type" /> 对象。</summary>
      <param name="typeName" vsli:raw="The type name.">类型名称</param>
      <param name="throwOnError" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to throw an exception if an error occurs; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果在出现错误时引发异常，则为 <see langword="true" />，否则为 <see langword="false" /></param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object representing the type of the configuration object.">一个 <see cref="T:System.Type" /> 对象，它表示配置对象的类型。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetConfigTypeName(System.Type)">
      <summary vsli:raw="Returns a string representing a type name from the &lt;see cref=&quot;T:System.Type&quot; /&gt; object representing the type of the configuration.">从表示配置类型的 <see cref="T:System.Type" /> 对象返回一个表示类型名称的字符串。</summary>
      <param name="t" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; object.">
        <see cref="T:System.Type" /> 对象。</param>
      <returns vsli:raw="A string representing the type name from a &lt;see cref=&quot;T:System.Type&quot; /&gt; object representing the type of the configuration.">表示配置类型的 <see cref="T:System.Type" /> 对象中表示类型名称的字符串。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetRestrictedPermissions(System.Configuration.Internal.IInternalConfigRecord,System.Security.PermissionSet@,System.Boolean@)">
      <summary vsli:raw="Associates the configuration with a &lt;see cref=&quot;T:System.Security.PermissionSet&quot; /&gt; object.">将配置与 <see cref="T:System.Security.PermissionSet" /> 对象关联。</summary>
      <param name="configRecord" vsli:raw="An &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigRecord&quot; /&gt; object.">一个 <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> 对象。</param>
      <param name="permissionSet" vsli:raw="The &lt;see cref=&quot;T:System.Security.PermissionSet&quot; /&gt; object to associate with the configuration.">要与配置关联的 <see cref="T:System.Security.PermissionSet" /> 对象。</param>
      <param name="isHostReady" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the configuration host is has completed building associated permissions; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指示配置宿主已完成关联权限的生成，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetStreamName(System.String)">
      <summary vsli:raw="Returns a string representing the configuration file name associated with the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">返回一个字符串，它表示与对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象关联的配置文件名称。</summary>
      <param name="configPath" vsli:raw="A string representing the path of the application configuration file.">表示应用程序配置文件路径的字符串。</param>
      <returns vsli:raw="A string representing the configuration file name associated with the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; I/O tasks on the configuration file.">一个字符串，它表示与对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 关联的配置文件名称。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetStreamNameForConfigSource(System.String,System.String)">
      <summary vsli:raw="Returns a string representing the configuration file name associated with the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on a remote configuration file.">返回一个字符串，它表示与对远程配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象关联的配置文件名称。</summary>
      <param name="streamName" vsli:raw="A string representing the configuration file name associated with the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">一个字符串，它表示与对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象关联的配置文件名称。</param>
      <param name="configSource" vsli:raw="A string representing a path to a remote configuration file.">表示远程配置文件路径的字符串。</param>
      <returns vsli:raw="A string representing the configuration file name associated with the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">一个字符串，它表示与对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象关联的配置文件名称。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetStreamVersion(System.String)">
      <summary vsli:raw="Returns the version of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object associated with configuration file.">返回与配置文件关联的 <see cref="T:System.IO.Stream" /> 对象的版本。</summary>
      <param name="streamName" vsli:raw="A string representing the name of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">一个字符串，它表示对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的名称。</param>
      <returns vsli:raw="The version of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object associated with configuration file.">与配置文件关联的 <see cref="T:System.IO.Stream" /> 对象的版本。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.Impersonate">
      <summary vsli:raw="Instructs the host to impersonate and returns an &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; object required by the internal .NET structure.">指示宿主模拟并返回内部 .NET 结构要求的 <see cref="T:System.IDisposable" /> 对象。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; value.">一个 <see cref="T:System.IDisposable" /> 值。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.Init(System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
      <summary vsli:raw="Initializes a configuration host.">初始化配置宿主。</summary>
      <param name="configRoot" vsli:raw="The configuration root object.">配置根对象。</param>
      <param name="hostInitParams" vsli:raw="The parameter object containing the values used for initializing the configuration host.">包含用于初始化配置宿主的值的参数对象。</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.InitForConfiguration(System.String@,System.String@,System.String@,System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
      <summary vsli:raw="Initializes a configuration object.">初始化配置对象。</summary>
      <param name="locationSubPath" vsli:raw="The subpath location of the configuration file.">配置文件的子路径位置。</param>
      <param name="configPath" vsli:raw="A string representing the path of the application configuration file.">表示应用程序配置文件路径的字符串。</param>
      <param name="locationConfigPath" vsli:raw="A string representing the location of a configuration path.">表示配置路径位置的字符串。</param>
      <param name="configRoot" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigRoot&quot; /&gt; object.">
        <see cref="T:System.Configuration.Internal.IInternalConfigRoot" /> 对象。</param>
      <param name="hostInitConfigurationParams" vsli:raw="The parameter object containing the values used for initializing the configuration host.">包含用于初始化配置宿主的值的参数对象。</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsAboveApplication(System.String)">
      <summary vsli:raw="Returns a value indicating whether the configuration file is located at a higher level in the configuration hierarchy than the application configuration.">返回一个值，它指示配置文件在配置层次结构中所处的级别是否比应用程序配置高。</summary>
      <param name="configPath" vsli:raw="A string representing the path of the application configuration file.">表示应用程序配置文件路径的字符串。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; the configuration file is located at a higher level in the configuration hierarchy than the application configuration; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果配置文件在配置层次结构中所处的级别比应用程序配置高，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsConfigRecordRequired(System.String)">
      <summary vsli:raw="Returns a value indicating whether a child record is required for a child configuration path.">返回一个值，指示子配置路径是否需要子记录。</summary>
      <param name="configPath" vsli:raw="A string representing the path of the application configuration file.">表示应用程序配置文件路径的字符串。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if child record is required for a child configuration path; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果子配置路径需要子记录，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition)">
      <summary vsli:raw="Determines if a different &lt;see cref=&quot;T:System.Type&quot; /&gt; definition is allowable for an application configuration object.">确定是否允许应用程序配置对象具有不同的 <see cref="T:System.Type" /> 定义。</summary>
      <param name="configPath" vsli:raw="A string representing the path of the application configuration file.">表示应用程序配置文件路径的字符串。</param>
      <param name="allowDefinition" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationAllowDefinition&quot; /&gt; object.">
        <see cref="T:System.Configuration.ConfigurationAllowDefinition" /> 对象。</param>
      <param name="allowExeDefinition" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationAllowExeDefinition&quot; /&gt; object.">
        <see cref="T:System.Configuration.ConfigurationAllowExeDefinition" /> 对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a different &lt;see cref=&quot;T:System.Type&quot; /&gt; definition is allowable for an application configuration object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果允许应用程序配置对象具有不同的 <see cref="T:System.Type" /> 定义，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsFile(System.String)">
      <summary vsli:raw="Returns a value indicating whether the file path used by a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object to read a configuration file is a valid path.">返回一个值，指示由 <see cref="T:System.IO.Stream" /> 对象用于读取配置文件的文件路径是否为有效路径。</summary>
      <param name="streamName" vsli:raw="A string representing the name of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">一个字符串，它表示对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的名称。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the path used by a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object to read a configuration file is a valid path; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果由 <see cref="T:System.IO.Stream" /> 对象用于读取配置文件的路径是有效路径，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsFullTrustSectionWithoutAptcaAllowed(System.Configuration.Internal.IInternalConfigRecord)">
      <summary vsli:raw="Returns a value indicating whether a configuration section requires a fully trusted code access security level and does not allow the &lt;see cref=&quot;T:System.Security.AllowPartiallyTrustedCallersAttribute&quot; /&gt; attribute to disable implicit link demands.">返回一个值，它指示配置节是否需要完全受信任的代码访问安全级别，并且不允许 <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" /> 特性禁用隐式链接请求。</summary>
      <param name="configRecord" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigRecord&quot; /&gt; object.">
        <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> 对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration section requires a fully trusted code access security level and does not allow the &lt;see cref=&quot;T:System.Security.AllowPartiallyTrustedCallersAttribute&quot; /&gt; attribute to disable implicit link demands; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果配置节需要完全受信任的代码访问安全级别并且不允许 <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" /> 特性禁用隐式链接请求，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsInitDelayed(System.Configuration.Internal.IInternalConfigRecord)">
      <summary vsli:raw="Returns a value indicating whether the initialization of a configuration object is considered delayed.">返回一个值，它指示配置对象初始化是否被视为延迟。</summary>
      <param name="configRecord" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigRecord&quot; /&gt; object.">
        <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> 对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the initialization of a configuration object is considered delayed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果配置对象初始化被视为延迟，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsLocationApplicable(System.String)">
      <summary vsli:raw="Returns a value indicating whether the configuration object supports a location tag.">返回一个值，它指示配置对象是否支持位置标记。</summary>
      <param name="configPath" vsli:raw="A string representing the path of the application configuration file.">表示应用程序配置文件路径的字符串。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration object supports a location tag; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果配置对象支持位置标记，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsSecondaryRoot(System.String)">
      <summary vsli:raw="Returns a value indicating whether a configuration path is to a configuration node whose contents should be treated as a root.">返回一个值，它指示配置路径是否指向应将其内容视为根的配置节点。</summary>
      <param name="configPath" vsli:raw="A string representing the path of the application configuration file.">表示应用程序配置文件路径的字符串。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration path is to a configuration node whose contents should be treated as a root; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果配置路径指向应将其内容视为根的配置节点，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsTrustedConfigPath(System.String)">
      <summary vsli:raw="Returns a value indicating whether the configuration path is trusted.">返回一个指示配置路径是否受信任的值。</summary>
      <param name="configPath" vsli:raw="A string representing the path of the application configuration file.">表示应用程序配置文件路径的字符串。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration path is trusted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果配置路径受信任，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.OpenStreamForRead(System.String)">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; to read a configuration file.">打开一个 <see cref="T:System.IO.Stream" />，以便读取配置文件。</summary>
      <param name="streamName" vsli:raw="A string representing the name of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">一个字符串，它表示对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的名称。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object.">
        <see cref="T:System.IO.Stream" /> 对象。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.OpenStreamForRead(System.String,System.Boolean)">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object to read a configuration file.">打开一个 <see cref="T:System.IO.Stream" /> 对象，以便读取配置文件。</summary>
      <param name="streamName" vsli:raw="A string representing the name of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">一个字符串，它表示对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的名称。</param>
      <param name="assertPermissions" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to assert permissions; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果断言权限，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <returns vsli:raw="The object specified by &lt;paramref name=&quot;streamName&quot; /&gt;.">
        <paramref name="streamName" /> 指定的对象。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@)">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object for writing to a configuration file or for writing to a temporary file used to build a configuration file. Allows a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object to be designated as a template for copying file attributes.">打开一个 <see cref="T:System.IO.Stream" /> 对象，以便写入配置文件或写入用于生成配置文件的临时文件。 允许将 <see cref="T:System.IO.Stream" /> 对象指定为模板，以便复制文件特性。</summary>
      <param name="streamName" vsli:raw="A string representing the name of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">一个字符串，它表示对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的名称。</param>
      <param name="templateStreamName" vsli:raw="The name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object from which file attributes are to be copied as a template.">`<see cref="T:System.IO.Stream" /> 对象的名称，从该对象复制文件特性作为模板。</param>
      <param name="writeContext" vsli:raw="The write context of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object.">
        <see cref="T:System.IO.Stream" /> 对象的写上下文。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object.">
        <see cref="T:System.IO.Stream" /> 对象。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@,System.Boolean)">
      <summary vsli:raw="Opens a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object for writing to a configuration file. Allows a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object to be designated as a template for copying file attributes.">打开一个 <see cref="T:System.IO.Stream" /> 对象，以便写入配置文件。 允许将 <see cref="T:System.IO.Stream" /> 对象指定为模板，以便复制文件特性。</summary>
      <param name="streamName" vsli:raw="A string representing the name of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">一个字符串，它表示对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的名称。</param>
      <param name="templateStreamName" vsli:raw="The name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; from which file attributes are to be copied as a template.">要将其中的文件特性复制为模板的 <see cref="T:System.IO.Stream" /> 的名称。</param>
      <param name="writeContext" vsli:raw="The write context of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的写上下文。</param>
      <param name="assertPermissions" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to assert permissions; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果断言权限，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <returns vsli:raw="The object specified by &lt;paramref name=&quot;streamName&quot; /&gt;.">
        <paramref name="streamName" /> 指定的对象。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.PrefetchAll(System.String,System.String)">
      <summary vsli:raw="Returns a value that indicates whether the entire configuration file could be read by a designated &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object.">返回一个值，该值指示是否可由指定的 <see cref="T:System.IO.Stream" /> 对象读取整个配置文件。</summary>
      <param name="configPath" vsli:raw="A string representing the path of the application configuration file.">表示应用程序配置文件路径的字符串。</param>
      <param name="streamName" vsli:raw="A string representing the name of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">一个字符串，它表示对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的名称。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the entire configuration file could be read by the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object designated by &lt;paramref name=&quot;streamName&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果由 <paramref name="streamName" /> 指定的 <see cref="T:System.IO.Stream" /> 对象可以读取整个配置文件，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.PrefetchSection(System.String,System.String)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigHost&quot; /&gt; object to read a designated section of its associated configuration file.">指示 <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> 对象读取其关联配置文件的指定节。</summary>
      <param name="sectionGroupName" vsli:raw="A string representing the identifying name of a configuration file section group.">表示配置文件节组标识名的字符串。</param>
      <param name="sectionName" vsli:raw="A string representing the identifying name of a configuration file section.">表示配置文件节标识名的字符串。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a section of the configuration file designated by &lt;paramref name=&quot;sectionGroupName&quot; /&gt; and &lt;paramref name=&quot;sectionName&quot; /&gt; could be read by a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.IO.Stream" /> 对象可读取由 <paramref name="sectionGroupName" /> 和 <paramref name="sectionName" /> 指定的配置文件节，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.RequireCompleteInit(System.Configuration.Internal.IInternalConfigRecord)">
      <summary vsli:raw="Indicates a new configuration record requires a complete initialization.">指示新的配置记录需要完整的初始化。</summary>
      <param name="configRecord" vsli:raw="An &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigRecord&quot; /&gt; object.">一个 <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> 对象。</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.StartMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)">
      <summary vsli:raw="Instructs the &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigHost&quot; /&gt; object to monitor an associated &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object for changes in a configuration file.">指示 <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> 对象对关联的 <see cref="T:System.IO.Stream" /> 对象进行监视，以了解配置文件的更改情况。</summary>
      <param name="streamName" vsli:raw="A string representing the name of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">一个字符串，它表示对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的名称。</param>
      <param name="callback" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.Internal.StreamChangeCallback&quot; /&gt; object to receive the returned data representing the changes in the configuration file.">一个 <see cref="T:System.Configuration.Internal.StreamChangeCallback" /> 对象，它用于接收返回的表示配置文件中的更改的数据。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; containing changed configuration settings.">包含更改的配置设置的 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.StopMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)">
      <summary vsli:raw="Instructs the  &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigHost&quot; /&gt; object to stop monitoring an associated &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object for changes in a configuration file.">指示 <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> 对象停止为了解配置文件的更改情况而对关联的 <see cref="T:System.IO.Stream" /> 对象进行的监视。</summary>
      <param name="streamName" vsli:raw="A string representing the name of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">一个字符串，它表示对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的名称。</param>
      <param name="callback" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.Internal.StreamChangeCallback&quot; /&gt; object.">
        <see cref="T:System.Configuration.Internal.StreamChangeCallback" /> 对象。</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.VerifyDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition,System.Configuration.Internal.IConfigErrorInfo)">
      <summary vsli:raw="Verifies that a configuration definition is allowed for a configuration record.">验证是否允许对配置记录使用配置定义。</summary>
      <param name="configPath" vsli:raw="A string representing the path of the application configuration file.">表示应用程序配置文件路径的字符串。</param>
      <param name="allowDefinition" vsli:raw="A &lt;see cref=&quot;P:System.Configuration.SectionInformation.AllowDefinition&quot; /&gt; object.">
        <see cref="P:System.Configuration.SectionInformation.AllowDefinition" /> 对象。</param>
      <param name="allowExeDefinition" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationAllowExeDefinition&quot; /&gt; object.">一个 <see cref="T:System.Configuration.ConfigurationAllowExeDefinition" /> 对象</param>
      <param name="errorInfo" vsli:raw="An &lt;see cref=&quot;T:System.Configuration.Internal.IConfigErrorInfo&quot; /&gt; object.">一个 <see cref="T:System.Configuration.Internal.IConfigErrorInfo" /> 对象。</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.WriteCompleted(System.String,System.Boolean,System.Object)">
      <summary vsli:raw="Indicates that all writing to the configuration file has completed.">指示已完成所有写入配置文件操作。</summary>
      <param name="streamName" vsli:raw="A string representing the name of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">一个字符串，它表示对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的名称。</param>
      <param name="success" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the write to the configuration file was completed successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果已成功完成写入配置文件操作，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <param name="writeContext" vsli:raw="The write context of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的写上下文。</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.WriteCompleted(System.String,System.Boolean,System.Object,System.Boolean)">
      <summary vsli:raw="Indicates that all writing to the configuration file has completed and specifies whether permissions should be asserted.">指示已完成所有写入配置文件操作，并指定是否应断言权限。</summary>
      <param name="streamName" vsli:raw="A string representing the name of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">一个字符串，它表示对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的名称。</param>
      <param name="success" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the write was completed successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指示已成功完成写入操作，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <param name="writeContext" vsli:raw="The write context of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的写上下文。</param>
      <param name="assertPermissions" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to assert permissions; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果断言权限，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigHost.IsRemote">
      <summary vsli:raw="Returns a value indicating whether the configuration is remote.">返回一个值，该值指示配置是否为远程配置。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration is remote; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果配置为远程配置，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigHost.SupportsChangeNotifications">
      <summary vsli:raw="Returns a value indicating whether the host configuration supports change notification.">返回一个值，它指示宿主配置是否支持更改通知。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration supports change notification; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果配置支持更改通知，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigHost.SupportsLocation">
      <summary vsli:raw="Returns a value indicating whether the host configuration supports location tags.">返回一个值，它指示宿主配置是否支持位置标记。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration supports location tags; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果配置支持位置标记，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigHost.SupportsPath">
      <summary vsli:raw="Returns a value indicating whether the host configuration supports path tags.">返回一个值，它指示宿主配置是否支持路径标记。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration supports path tags; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果配置支持路径标记，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigHost.SupportsRefresh">
      <summary vsli:raw="Returns a value indicating whether the host configuration supports configuration refresh.">返回一个值，它指示宿主配置是否支持配置刷新。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration supports configuration refresh; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果配置支持配置刷新，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigRecord">
      <summary vsli:raw="Defines interfaces used by internal .NET structures to support creation of new configuration records.">定义内部 .NET 结构用于支持创建新配置记录的接口。</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRecord.GetLkgSection(System.String)">
      <summary vsli:raw="Returns an object representing a section of a configuration from the last-known-good (LKG) configuration.">返回一个对象，该对象表示最后所知的好的 (LKG) 配置的一个配置节。</summary>
      <param name="configKey" vsli:raw="A string representing a key to a configuration section.">表示配置节的键的字符串。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; instance representing the section of the last-known-good configuration specified by &lt;paramref name=&quot;configKey&quot; /&gt;.">一个 <see cref="T:System.Object" /> 实例，表示 <paramref name="configKey" /> 指定的最后所知的好的配置节。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRecord.GetSection(System.String)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Object&quot; /&gt; instance representing a section of a configuration file.">返回一个 <see cref="T:System.Object" /> 实例，该实例表示配置文件的一个节。</summary>
      <param name="configKey" vsli:raw="A string representing a key to a configuration section.">表示配置节的键的字符串。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; instance representing a section of a configuration file.">一个 <see cref="T:System.Object" /> 实例，表示配置文件的一个节。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRecord.RefreshSection(System.String)">
      <summary vsli:raw="Causes a specified section of the configuration object to be reinitialized.">导致配置对象的指定节被重新初始化。</summary>
      <param name="configKey" vsli:raw="A string representing a key to a configuration section that is to be refreshed.">一个字符串，表示要刷新的配置节的键。</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRecord.Remove">
      <summary vsli:raw="Removes a configuration record.">移除配置记录。</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRecord.ThrowIfInitErrors">
      <summary vsli:raw="Grants the configuration object the permission to throw an exception if an error occurs during initialization.">向配置对象授予权限，使其在初始化期间发生错误时引发异常。</summary>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigRecord.ConfigPath">
      <summary vsli:raw="Gets a string representing a configuration file path.">获取表示配置文件路径的字符串。</summary>
      <returns vsli:raw="A string representing a configuration file path.">表示配置文件路径的字符串。</returns>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigRecord.HasInitErrors">
      <summary vsli:raw="Returns a value indicating whether an error occurred during initialization of a configuration object.">返回一个值，该值指示在配置对象的初始化期间是否发生了错误。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an error occurred during initialization of a configuration object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果在配置对象的初始化期间发生了错误，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigRecord.StreamName">
      <summary vsli:raw="Returns the name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">返回对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的名称。</summary>
      <returns vsli:raw="A string representing the name of a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">一个字符串，表示对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的名称。</returns>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigRoot">
      <summary vsli:raw="Defines interfaces used by internal .NET structures to support a configuration root object.">定义由内部 .NET 结构用于支持配置根对象的接口。</summary>
    </member>
    <member name="E:System.Configuration.Internal.IInternalConfigRoot.ConfigChanged">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Configuration.Internal.IInternalConfigRoot.ConfigChanged&quot; /&gt; event of an &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigRoot&quot; /&gt; object.">表示处理 <see cref="E:System.Configuration.Internal.IInternalConfigRoot.ConfigChanged" /> 对象的 <see cref="T:System.Configuration.Internal.IInternalConfigRoot" /> 事件的方法。</summary>
    </member>
    <member name="E:System.Configuration.Internal.IInternalConfigRoot.ConfigRemoved">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Configuration.Internal.IInternalConfigRoot.ConfigRemoved&quot; /&gt; event of a &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigRoot&quot; /&gt; object.">表示处理 <see cref="E:System.Configuration.Internal.IInternalConfigRoot.ConfigRemoved" /> 对象的 <see cref="T:System.Configuration.Internal.IInternalConfigRoot" /> 事件的方法。</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.GetConfigRecord(System.String)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigRecord&quot; /&gt; object representing a configuration specified by a configuration path.">返回一个 <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> 对象，表示由配置路径指定的配置。</summary>
      <param name="configPath" vsli:raw="A string representing the path to a configuration file.">表示配置文件路径的字符串。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigRecord&quot; /&gt; object representing a configuration specified by &lt;paramref name=&quot;configPath&quot; /&gt;.">一个 <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> 对象，表示由 <paramref name="configPath" /> 指定的配置。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.GetSection(System.String,System.String)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Object&quot; /&gt; representing the data in a section of a configuration file.">返回一个 <see cref="T:System.Object" />，表示配置文件某一节中的数据。</summary>
      <param name="section" vsli:raw="A string representing a section of a configuration file.">表示配置文件某一节的字符串。</param>
      <param name="configPath" vsli:raw="A string representing the path to a configuration file.">表示配置文件路径的字符串。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; representing the data in a section of a configuration file.">一个 <see cref="T:System.Object" />，表示配置文件某一节中的数据。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.GetUniqueConfigPath(System.String)">
      <summary vsli:raw="Returns a value representing the file path of the nearest configuration ancestor that has configuration data.">返回一个值，它表示具有配置数据的最近配置上级的文件路径。</summary>
      <param name="configPath" vsli:raw="The path of configuration file.">配置文件的路径。</param>
      <returns vsli:raw="A string representing the file path of the nearest configuration ancestor that has configuration data.">一个字符串，它表示具有配置数据的最近配置上级的文件路径。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.GetUniqueConfigRecord(System.String)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigRecord&quot; /&gt; object representing a unique configuration record for given configuration path.">返回一个 <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> 对象，表示给定配置路径的唯一配置记录。</summary>
      <param name="configPath" vsli:raw="The path of the configuration file.">配置文件的路径。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigRecord&quot; /&gt; object representing a unique configuration record for a given configuration path.">一个 <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> 对象，表示给定配置路径的唯一配置记录。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.Init(System.Configuration.Internal.IInternalConfigHost,System.Boolean)">
      <summary vsli:raw="Initializes a configuration object.">初始化配置对象。</summary>
      <param name="host" vsli:raw="An &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigHost&quot; /&gt; object.">一个 <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> 对象。</param>
      <param name="isDesignTime" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if design time; &lt;see langword=&quot;false&quot; /&gt; if run time.">如果在设计时，则为 <see langword="true" />；如果在运行时，则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.RemoveConfig(System.String)">
      <summary vsli:raw="Finds and removes a configuration record and all its children for a given configuration path.">查找并移除给定配置路径的配置记录及其所有子级。</summary>
      <param name="configPath" vsli:raw="The path of the configuration file.">配置文件的路径。</param>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigRoot.IsDesignTime">
      <summary vsli:raw="Returns a value indicating whether the configuration is a design-time configuration.">返回一个值，它指示配置是否为设计时配置。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration is a design-time configuration; &lt;see langword=&quot;false&quot; /&gt; if the configuration is not a design-time configuration.">如果配置是设计时配置，则为 <see langword="true" />；如果配置不是设计时配置，则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigSettingsFactory">
      <summary vsli:raw="Defines an interface used by the configuration system to set the &lt;see cref=&quot;T:System.Configuration.ConfigurationSettings&quot; /&gt; class.">定义配置系统用于设置 <see cref="T:System.Configuration.ConfigurationSettings" /> 类的接口。</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigSettingsFactory.CompleteInit">
      <summary vsli:raw="Indicates that initialization of the configuration system has completed.">指示已完成配置系统的初始化。</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigSettingsFactory.SetConfigurationSystem(System.Configuration.Internal.IInternalConfigSystem,System.Boolean)">
      <summary vsli:raw="Provides hierarchical configuration settings and extensions specific to ASP.NET to the configuration system.">为配置系统提供特定于 ASP.NET 的分层配置设置和扩展。</summary>
      <param name="internalConfigSystem" vsli:raw="An &lt;see cref=&quot;T:System.Configuration.Internal.IInternalConfigSystem&quot; /&gt; object used by the &lt;see cref=&quot;T:System.Configuration.ConfigurationSettings&quot; /&gt; class.">
        <see cref="T:System.Configuration.Internal.IInternalConfigSystem" /> 对象，由 <see cref="T:System.Configuration.ConfigurationSettings" /> 类使用。</param>
      <param name="initComplete" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the initialization process of the configuration system is complete; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果配置系统的初始化过程已完成，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigSystem">
      <summary vsli:raw="Defines an interface used by .NET to initialize application configuration properties.">定义 .NET Framework 用于初始化应用程序配置属性的接口。</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigSystem.GetSection(System.String)">
      <summary vsli:raw="Returns the configuration object based on the specified key.">根据指定的键返回配置对象。</summary>
      <param name="configKey" vsli:raw="The configuration key value.">配置键值。</param>
      <returns vsli:raw="A configuration object.">配置对象。</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigSystem.RefreshConfig(System.String)">
      <summary vsli:raw="Refreshes the configuration system based on the specified section name.">根据指定的节名称刷新配置系统。</summary>
      <param name="sectionName" vsli:raw="The name of the configuration section.">配置节的名称。</param>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigSystem.SupportsUserConfig">
      <summary vsli:raw="Gets a value indicating whether the user configuration is supported.">获取一个值，指示是否支持用户配置。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the user configuration is supported; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果支持用户配置，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Configuration.Internal.InternalConfigEventArgs">
      <summary vsli:raw="Defines a class that allows the .NET infrastructure to specify event arguments for configuration events.">定义一个类，允许 .NET Framework 基础结构为配置事件指定事件参数。</summary>
    </member>
    <member name="M:System.Configuration.Internal.InternalConfigEventArgs.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.Internal.InternalConfigEventArgs&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.Internal.InternalConfigEventArgs" /> 类的新实例。</summary>
      <param name="configPath" vsli:raw="A configuration path.">配置路径。</param>
    </member>
    <member name="P:System.Configuration.Internal.InternalConfigEventArgs.ConfigPath">
      <summary vsli:raw="Gets or sets the configuration path related to the &lt;see cref=&quot;T:System.Configuration.Internal.InternalConfigEventArgs&quot; /&gt; object.">获取或设置与 <see cref="T:System.Configuration.Internal.InternalConfigEventArgs" /> 对象相关的配置路径。</summary>
      <returns vsli:raw="A string value specifying the configuration path.">一个字符串值，指定配置路径。</returns>
    </member>
    <member name="T:System.Configuration.Internal.InternalConfigEventHandler">
      <summary vsli:raw="Defines a class used by the .NET infrastructure to support configuration events.">定义 .NET Framework 基础结构用于支持配置事件的类。</summary>
      <param name="sender" vsli:raw="The source object of the event.">事件的源对象。</param>
      <param name="e" vsli:raw="A configuration event argument.">配置事件参数。</param>
    </member>
    <member name="T:System.Configuration.Internal.StreamChangeCallback">
      <summary vsli:raw="Represents a method for hosts to call when a monitored stream has changed.">表示当监视的流发生改变时主机要调用的方法。</summary>
      <param name="streamName" vsli:raw="The name of the &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object performing I/O tasks on the configuration file.">对配置文件执行 I/O 任务的 <see cref="T:System.IO.Stream" /> 对象的名称。</param>
    </member>
    <member name="T:System.Configuration.IPersistComponentSettings">
      <summary vsli:raw="Defines standard functionality for controls or libraries that store and retrieve application settings.">定义存储和检索应用程序设置的控件或类的标准功能。</summary>
    </member>
    <member name="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings">
      <summary vsli:raw="Reads the control's application settings into their corresponding properties and updates the control's state.">将控件的应用程序设置读入相应的属性中，并更新控件状态。</summary>
    </member>
    <member name="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings">
      <summary vsli:raw="Resets the control's application settings properties to their default values.">将控件的应用程序设置属性重置为其默认值。</summary>
    </member>
    <member name="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings">
      <summary vsli:raw="Persists the control's application settings properties.">保持控件的应用程序设置属性。</summary>
    </member>
    <member name="P:System.Configuration.IPersistComponentSettings.SaveSettings">
      <summary vsli:raw="Gets or sets a value indicating whether the control should automatically persist its application settings properties.">获取或设置一个值，该值指示控件是否应自动保持其应用程序设置属性。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the control should automatically persist its state; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果控件应自动保持其状态，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.IPersistComponentSettings.SettingsKey">
      <summary vsli:raw="Gets or sets the value of the application settings key for the current instance of the control.">获取或设置控件当前实例的应用程序设置键的值。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the settings key for the current instance of the control.">一个 <see cref="T:System.String" />，包含该控件的当前实例的设置键。</returns>
    </member>
    <member name="T:System.Configuration.IriParsingElement">
      <summary vsli:raw="Provides the configuration setting for International Resource Identifier (IRI) processing in the &lt;see cref=&quot;T:System.Uri&quot; /&gt; class.">在 <see cref="T:System.Uri" /> 类中提供用于国际化资源标识符 (IRI) 处理的配置设置。</summary>
    </member>
    <member name="M:System.Configuration.IriParsingElement.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.IriParsingElement&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.IriParsingElement" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Configuration.IriParsingElement.Enabled">
      <summary vsli:raw="Gets or sets the value of the &lt;see cref=&quot;T:System.Configuration.IriParsingElement&quot; /&gt; configuration setting.">获取或设置 <see cref="T:System.Configuration.IriParsingElement" /> 配置设置的值。</summary>
      <returns vsli:raw="A Boolean that indicates if International Resource Identifier (IRI) processing is enabled.">一个布尔值，指示是否启用国际化资源标识符 (IRI) 处理。</returns>
    </member>
    <member name="T:System.Configuration.ISettingsProviderService">
      <summary vsli:raw="Provides an interface for defining an alternate application settings provider.">提供用于定义备用应用程序设置提供程序的接口。</summary>
    </member>
    <member name="M:System.Configuration.ISettingsProviderService.GetSettingsProvider(System.Configuration.SettingsProperty)">
      <summary vsli:raw="Returns the settings provider compatible with the specified settings property.">返回与指定设置属性兼容的设置提供程序。</summary>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; that requires serialization.">需要序列化的 <see cref="T:System.Configuration.SettingsProperty" />。</param>
      <returns vsli:raw="If found, the &lt;see cref=&quot;T:System.Configuration.SettingsProvider&quot; /&gt; that can persist the specified settings property; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">如果找到，则为能保存指定设置属性的 <see cref="T:System.Configuration.SettingsProvider" />；否则为 <see langword="null" />。</returns>
    </member>
    <member name="T:System.Configuration.KeyValueConfigurationCollection">
      <summary vsli:raw="Contains a collection of &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt; objects.">包含 <see cref="T:System.Configuration.KeyValueConfigurationElement" /> 对象的集合。</summary>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationCollection&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.KeyValueConfigurationCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.Add(System.Configuration.KeyValueConfigurationElement)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt; object to the collection based on the supplied parameters.">根据提供的参数向集合中添加一个 <see cref="T:System.Configuration.KeyValueConfigurationElement" /> 对象。</summary>
      <param name="keyValue" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt;.">
        <see cref="T:System.Configuration.KeyValueConfigurationElement" />。</param>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.Add(System.String,System.String)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt; object to the collection based on the supplied parameters.">根据提供的参数向集合中添加一个 <see cref="T:System.Configuration.KeyValueConfigurationElement" /> 对象。</summary>
      <param name="key" vsli:raw="A string specifying the key.">指定 key 的字符串。</param>
      <param name="value" vsli:raw="A string specifying the value.">指定值的字符串。</param>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.Clear">
      <summary vsli:raw="Clears the &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationCollection&quot; /&gt; collection.">清除 <see cref="T:System.Configuration.KeyValueConfigurationCollection" /> 集合。</summary>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.CreateNewElement">
      <summary vsli:raw="When overridden in a derived class, the &lt;see cref=&quot;M:System.Configuration.KeyValueConfigurationCollection.CreateNewElement&quot; /&gt; method creates a new &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt; object.">当在派生类中重写时，<see cref="M:System.Configuration.KeyValueConfigurationCollection.CreateNewElement" /> 方法会创建一个新的 <see cref="T:System.Configuration.KeyValueConfigurationElement" /> 对象。</summary>
      <returns vsli:raw="A newly created &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt;.">一个新创建的 <see cref="T:System.Configuration.KeyValueConfigurationElement" />。</returns>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.GetElementKey(System.Configuration.ConfigurationElement)">
      <summary vsli:raw="Gets the element key for a specified configuration element when overridden in a derived class.">在派生类中重写时获取指定配置元素的元素键。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt; to which the key should be returned.">键应返回到的 <see cref="T:System.Configuration.KeyValueConfigurationElement" />。</param>
      <returns vsli:raw="An object that acts as the key for the specified &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt;.">一个对象，用作指定的 <see cref="T:System.Configuration.KeyValueConfigurationElement" /> 的键。</returns>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.Remove(System.String)">
      <summary vsli:raw="Removes a &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt; object from the collection.">从集合中移除 <see cref="T:System.Configuration.KeyValueConfigurationElement" /> 对象。</summary>
      <param name="key" vsli:raw="A string specifying the &lt;paramref name=&quot;key&quot; /&gt;.">指定 <paramref name="key" /> 的字符串。</param>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationCollection.AllKeys">
      <summary vsli:raw="Gets the keys to all items contained in the &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationCollection&quot; /&gt; collection.">获取 <see cref="T:System.Configuration.KeyValueConfigurationCollection" /> 集合中包含的所有项的键。</summary>
      <returns vsli:raw="A string array.">字符串数组。</returns>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt; object based on the supplied parameter.">根据提供的参数获取 <see cref="T:System.Configuration.KeyValueConfigurationElement" /> 对象。</summary>
      <param name="key" vsli:raw="The key of the &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt; contained in the collection.">集合中包含的 <see cref="T:System.Configuration.KeyValueConfigurationElement" /> 的键。</param>
      <returns vsli:raw="A configuration element, or &lt;see langword=&quot;null&quot; /&gt; if the key does not exist in the collection.">配置元素；如果集合中不存在该键，则为 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationCollection.Properties">
      <summary vsli:raw="Gets a collection of configuration properties.">获取配置属性的集合。</summary>
      <returns vsli:raw="A collection of configuration properties.">一个配置属性的集合。</returns>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationCollection.ThrowOnDuplicate">
      <summary vsli:raw="Gets a value indicating whether an attempt to add a duplicate &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt; object to the &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationCollection&quot; /&gt; collection will cause an exception to be thrown.">获取一个值，该值指示尝试向 <see cref="T:System.Configuration.KeyValueConfigurationElement" /> 集合中添加重复的 <see cref="T:System.Configuration.KeyValueConfigurationCollection" /> 对象是否会导致引发异常。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an attempt to add a duplicate &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt; to the &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationCollection&quot; /&gt; will cause an exception to be thrown; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果尝试向 <see langword="true" /> 添加重复的 <see cref="T:System.Configuration.KeyValueConfigurationElement" /> 会导致引发异常，则为 <see cref="T:System.Configuration.KeyValueConfigurationCollection" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Configuration.KeyValueConfigurationElement">
      <summary vsli:raw="Represents a configuration element that contains a key/value pair.">表示包含键/值对的配置元素。</summary>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationElement.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt; class based on the supplied parameters.">基于所提供的参数初始化 <see cref="T:System.Configuration.KeyValueConfigurationElement" /> 类的新实例。</summary>
      <param name="key" vsli:raw="The key of the &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt;.">
        <see cref="T:System.Configuration.KeyValueConfigurationElement" /> 的键。</param>
      <param name="value" vsli:raw="The value of the &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt;.">
        <see cref="T:System.Configuration.KeyValueConfigurationElement" /> 的值。</param>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationElement.Init">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt; object to its initial state.">将 <see cref="T:System.Configuration.KeyValueConfigurationElement" /> 对象设置为其初始状态。</summary>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationElement.Key">
      <summary vsli:raw="Gets the key of the &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt; object.">获取 <see cref="T:System.Configuration.KeyValueConfigurationElement" /> 对象的键。</summary>
      <returns vsli:raw="The key of the &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt;.">
        <see cref="T:System.Configuration.KeyValueConfigurationElement" /> 的键。</returns>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationElement.Properties">
      <summary vsli:raw="Gets the collection of properties.">获取属性的集合。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationPropertyCollection&quot; /&gt; of properties for the element.">元素属性的 <see cref="T:System.Configuration.ConfigurationPropertyCollection" />。</returns>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationElement.Value">
      <summary vsli:raw="Gets or sets the value of the &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt; object.">获取或设置 <see cref="T:System.Configuration.KeyValueConfigurationElement" /> 对象的值。</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;T:System.Configuration.KeyValueConfigurationElement&quot; /&gt;.">
        <see cref="T:System.Configuration.KeyValueConfigurationElement" /> 的值。</returns>
    </member>
    <member name="T:System.Configuration.LocalFileSettingsProvider">
      <summary vsli:raw="Provides persistence for application settings classes.">为应用程序设置类提供持久性存储。</summary>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.LocalFileSettingsProvider&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.LocalFileSettingsProvider" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)">
      <summary vsli:raw="Returns the value of the named settings property for the previous version of the same application.">返回同一应用程序的早期版本的命名设置属性的值。</summary>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsContext&quot; /&gt; that describes where the application settings property is used.">一个 <see cref="T:System.Configuration.SettingsContext" />，描述使用应用程序设置属性的上下文。</param>
      <param name="property" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; whose value is to be returned.">要返回其值的 <see cref="T:System.Configuration.SettingsProperty" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; representing the application setting if found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">如果找到，则为表示应用程序设置的 <see cref="T:System.Configuration.SettingsPropertyValue" />；否则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
      <summary vsli:raw="Returns the collection of setting property values for the specified application instance and settings property group.">为指定的应用程序实例和设置属性组返回设置属性值的集合。</summary>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsContext&quot; /&gt; describing the current application usage.">描述当前应用程序用法的 <see cref="T:System.Configuration.SettingsContext" />。</param>
      <param name="properties" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsPropertyCollection&quot; /&gt; containing the settings property group whose values are to be retrieved.">一个包含设置属性组（将要检索该组中的值）的 <see cref="T:System.Configuration.SettingsPropertyCollection" />。</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="A user-scoped setting was encountered but the current configuration only supports application-scoped settings.">遇到了用户范围的设置，但是当前的配置仅支持应用程序范围的设置。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValueCollection&quot; /&gt; containing the values for the specified settings property group.">一个包含指定设置属性组的值的 <see cref="T:System.Configuration.SettingsPropertyValueCollection" />。</returns>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary vsli:raw="Initializes the provider.">初始化提供程序。</summary>
      <param name="name" vsli:raw="The friendly name of the provider.">提供程序的友好名称。</param>
      <param name="values" vsli:raw="A collection of the name/value pairs representing the provider-specific attributes specified in the configuration for this provider.">名称/值对的集合，表示在配置中为该提供程序指定的提供程序特定的属性。</param>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)">
      <summary vsli:raw="Resets all application settings properties associated with the specified application to their default values.">将与指定的应用程序关联的所有应用程序设置属性重置为其默认值。</summary>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsContext&quot; /&gt; describing the current application usage.">描述当前应用程序用法的 <see cref="T:System.Configuration.SettingsContext" />。</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="A user-scoped setting was encountered but the current configuration only supports application-scoped settings.">遇到了用户范围的设置，但是当前的配置仅支持应用程序范围的设置。</exception>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)">
      <summary vsli:raw="Sets the values of the specified group of property settings.">设置指定的属性设置组的值。</summary>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsContext&quot; /&gt; describing the current application usage.">描述当前应用程序用法的 <see cref="T:System.Configuration.SettingsContext" />。</param>
      <param name="values" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValueCollection&quot; /&gt; representing the group of property settings to set.">表示要设置的属性设置组的 <see cref="T:System.Configuration.SettingsPropertyValueCollection" />。</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="A user-scoped setting was encountered but the current configuration only supports application-scoped settings.  &#xA;  &#xA; -or-  &#xA;  &#xA; There was a general failure saving the settings to the configuration file.">遇到了用户范围的设置，但是当前的配置仅支持应用程序范围的设置。  
  
 - 或 -  
  
 将设置保存到配置文件时发生一般性失败。</exception>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
      <summary vsli:raw="Attempts to migrate previous user-scoped settings from a previous version of the same application.">尝试从相同应用程序的早期版本迁移以前的用户范围设置。</summary>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsContext&quot; /&gt; describing the current application usage.">描述当前应用程序用法的 <see cref="T:System.Configuration.SettingsContext" />。</param>
      <param name="properties" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsPropertyCollection&quot; /&gt; containing the settings property group whose values are to be retrieved.">一个包含设置属性组（将要检索该组中的值）的 <see cref="T:System.Configuration.SettingsPropertyCollection" />。</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="A user-scoped setting was encountered but the current configuration only supports application-scoped settings.  &#xA;  &#xA; -or-  &#xA;  &#xA; The previous version of the configuration file could not be accessed.">遇到了用户范围的设置，但是当前的配置仅支持应用程序范围的设置。  
  
 - 或 -  
  
 未能访问早期版本的配置文件。</exception>
    </member>
    <member name="P:System.Configuration.LocalFileSettingsProvider.ApplicationName">
      <summary vsli:raw="Gets or sets the name of the currently running application.">获取或设置当前运行的应用程序的名称。</summary>
      <returns vsli:raw="A string that contains the application's display name.">一个字符串，包含应用程序的显示名称。</returns>
    </member>
    <member name="T:System.Configuration.LongValidator">
      <summary vsli:raw="Provides validation of an &lt;see cref=&quot;T:System.Int64&quot; /&gt; value.">对 <see cref="T:System.Int64" /> 值进行验证。</summary>
    </member>
    <member name="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.LongValidator&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.LongValidator" /> 类的新实例。</summary>
      <param name="minValue" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; value that specifies the minimum length of the &lt;see langword=&quot;long&quot; /&gt; value.">一个 <see cref="T:System.Int64" /> 值，指定 <see langword="long" /> 值的最小长度。</param>
      <param name="maxValue" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; value that specifies the maximum length of the &lt;see langword=&quot;long&quot; /&gt; value.">一个 <see cref="T:System.Int64" /> 值，指定 <see langword="long" /> 值的最大长度。</param>
    </member>
    <member name="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.LongValidator&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.LongValidator" /> 类的新实例。</summary>
      <param name="minValue" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; value that specifies the minimum length of the &lt;see langword=&quot;long&quot; /&gt; value.">一个 <see cref="T:System.Int64" /> 值，指定 <see langword="long" /> 值的最小长度。</param>
      <param name="maxValue" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; value that specifies the maximum length of the &lt;see langword=&quot;long&quot; /&gt; value.">一个 <see cref="T:System.Int64" /> 值，指定 <see langword="long" /> 值的最大长度。</param>
      <param name="rangeIsExclusive" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the validation range is exclusive.">一个 <see cref="T:System.Boolean" /> 值，指定验证范围是否独占。</param>
    </member>
    <member name="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64,System.Boolean,System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.LongValidator&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.LongValidator" /> 类的新实例。</summary>
      <param name="minValue" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; value that specifies the minimum length of the &lt;see langword=&quot;long&quot; /&gt; value.">一个 <see cref="T:System.Int64" /> 值，指定 <see langword="long" /> 值的最小长度。</param>
      <param name="maxValue" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; value that specifies the maximum length of the &lt;see langword=&quot;long&quot; /&gt; value.">一个 <see cref="T:System.Int64" /> 值，指定 <see langword="long" /> 值的最大长度。</param>
      <param name="rangeIsExclusive" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the validation range is exclusive.">一个 <see cref="T:System.Boolean" /> 值，指定验证范围是否独占。</param>
      <param name="resolution" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; value that specifies a specific value that must be matched.">一个 <see cref="T:System.Int64" /> 值，指定必须匹配的特定值。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;resolution&quot; /&gt; is equal to or less than &lt;see langword=&quot;0&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;maxValue&quot; /&gt; is less than &lt;paramref name=&quot;minValue&quot; /&gt;.">
        <paramref name="resolution" /> 等于或小于 <see langword="0" />。  
  
- 或 - 
 <paramref name="maxValue" /> 小于 <paramref name="minValue" />。</exception>
    </member>
    <member name="M:System.Configuration.LongValidator.CanValidate(System.Type)">
      <summary vsli:raw="Determines whether the type of the object can be validated.">确定是否可以验证该对象的类型。</summary>
      <param name="type" vsli:raw="The type of object.">对象的类型。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter matches an &lt;see cref=&quot;T:System.Int64&quot; /&gt; value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="type" /> 参数与 <see cref="T:System.Int64" /> 值相匹配，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.LongValidator.Validate(System.Object)">
      <summary vsli:raw="Determines whether the value of an object is valid.">确定对象的值是否有效。</summary>
      <param name="value" vsli:raw="The value of an object.">对象的值。</param>
    </member>
    <member name="T:System.Configuration.LongValidatorAttribute">
      <summary vsli:raw="Declaratively instructs .NET to perform long-integer validation on a configuration property. This class cannot be inherited.">以声明的方式指示 .NET Framework 对配置属性执行长整型验证。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Configuration.LongValidatorAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.LongValidatorAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.LongValidatorAttribute" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Configuration.LongValidatorAttribute.ExcludeRange">
      <summary vsli:raw="Gets or sets a value that indicates whether to include or exclude the integers in the range defined by the &lt;see cref=&quot;P:System.Configuration.LongValidatorAttribute.MinValue&quot; /&gt; and &lt;see cref=&quot;P:System.Configuration.LongValidatorAttribute.MaxValue&quot; /&gt; property values.">获取或设置一个值，指示在 <see cref="P:System.Configuration.LongValidatorAttribute.MinValue" /> 和 <see cref="P:System.Configuration.LongValidatorAttribute.MaxValue" /> 属性值定义的范围内是包含还是排除整数。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value must be excluded; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果必须排除值，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.LongValidatorAttribute.MaxValue">
      <summary vsli:raw="Gets or sets the maximum value allowed for the property.">获取或设置属性允许的最大值。</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The selected value is less than &lt;see cref=&quot;P:System.Configuration.LongValidatorAttribute.MinValue&quot; /&gt;.">选定值小于 <see cref="P:System.Configuration.LongValidatorAttribute.MinValue" />。</exception>
      <returns vsli:raw="A long integer that indicates the allowed maximum value.">一个长整型数，指示允许的最大值。</returns>
    </member>
    <member name="P:System.Configuration.LongValidatorAttribute.MinValue">
      <summary vsli:raw="Gets or sets the minimum value allowed for the property.">获取或设置属性允许的最小值。</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The selected value is greater than &lt;see cref=&quot;P:System.Configuration.LongValidatorAttribute.MaxValue&quot; /&gt;.">选定值大于 <see cref="P:System.Configuration.LongValidatorAttribute.MaxValue" />。</exception>
      <returns vsli:raw="An integer that indicates the allowed minimum value.">一个整数，指示允许的最小值。</returns>
    </member>
    <member name="P:System.Configuration.LongValidatorAttribute.ValidatorInstance">
      <summary vsli:raw="Gets an instance of the &lt;see cref=&quot;T:System.Configuration.LongValidator&quot; /&gt; class.">获取 <see cref="T:System.Configuration.LongValidator" /> 类的实例。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorBase&quot; /&gt; validator instance.">
        <see cref="T:System.Configuration.ConfigurationValidatorBase" /> 验证程序实例。</returns>
    </member>
    <member name="T:System.Configuration.NameValueConfigurationCollection">
      <summary vsli:raw="Contains a collection of &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationElement&quot; /&gt; objects. This class cannot be inherited.">包含 <see cref="T:System.Configuration.NameValueConfigurationElement" /> 对象的集合。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationCollection&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.NameValueConfigurationCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationCollection.Add(System.Configuration.NameValueConfigurationElement)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationElement&quot; /&gt; object to the collection.">将 <see cref="T:System.Configuration.NameValueConfigurationElement" /> 对象添加到集合中。</summary>
      <param name="nameValue" vsli:raw="A  &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationElement&quot; /&gt; object.">一个 <see cref="T:System.Configuration.NameValueConfigurationElement" /> 对象。</param>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationCollection.Clear">
      <summary vsli:raw="Clears the &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationCollection&quot; /&gt;.">清除 <see cref="T:System.Configuration.NameValueConfigurationCollection" />。</summary>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationCollection.Remove(System.Configuration.NameValueConfigurationElement)">
      <summary vsli:raw="Removes a &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationElement&quot; /&gt; object from the collection based on the provided parameter.">基于所提供的参数，从集合中移除 <see cref="T:System.Configuration.NameValueConfigurationElement" /> 对象。</summary>
      <param name="nameValue" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationElement&quot; /&gt; object.">
        <see cref="T:System.Configuration.NameValueConfigurationElement" /> 对象。</param>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationCollection.Remove(System.String)">
      <summary vsli:raw="Removes a &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationElement&quot; /&gt; object from the collection based on the provided parameter.">基于所提供的参数，从集合中移除 <see cref="T:System.Configuration.NameValueConfigurationElement" /> 对象。</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationElement&quot; /&gt; object.">
        <see cref="T:System.Configuration.NameValueConfigurationElement" /> 对象的名称。</param>
    </member>
    <member name="P:System.Configuration.NameValueConfigurationCollection.AllKeys">
      <summary vsli:raw="Gets the keys to all items contained in the &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationCollection&quot; /&gt;.">获取 <see cref="T:System.Configuration.NameValueConfigurationCollection" /> 中包含的所有项的键。</summary>
      <returns vsli:raw="A string array.">字符串数组。</returns>
    </member>
    <member name="P:System.Configuration.NameValueConfigurationCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationElement&quot; /&gt; object based on the supplied parameter.">基于所提供的参数，获取或设置 <see cref="T:System.Configuration.NameValueConfigurationElement" /> 对象。</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationElement&quot; /&gt; contained in the collection.">集合中包含的 <see cref="T:System.Configuration.NameValueConfigurationElement" /> 的名称。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationElement&quot; /&gt; object.">
        <see cref="T:System.Configuration.NameValueConfigurationElement" /> 对象。</returns>
    </member>
    <member name="T:System.Configuration.NameValueConfigurationElement">
      <summary vsli:raw="A configuration element that contains a &lt;see cref=&quot;T:System.String&quot; /&gt; name and &lt;see cref=&quot;T:System.String&quot; /&gt; value. This class cannot be inherited.">包含 <see cref="T:System.String" /> 名称和 <see cref="T:System.String" /> 值的配置元素。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationElement.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationElement&quot; /&gt; class based on supplied parameters.">基于所提供的参数初始化 <see cref="T:System.Configuration.NameValueConfigurationElement" /> 类的新实例。</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationElement&quot; /&gt; object.">
        <see cref="T:System.Configuration.NameValueConfigurationElement" /> 对象的名称。</param>
      <param name="value" vsli:raw="The value of the &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationElement&quot; /&gt; object.">
        <see cref="T:System.Configuration.NameValueConfigurationElement" /> 对象的值。</param>
    </member>
    <member name="P:System.Configuration.NameValueConfigurationElement.Name">
      <summary vsli:raw="Gets the name of the &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationElement&quot; /&gt; object.">获取 <see cref="T:System.Configuration.NameValueConfigurationElement" /> 对象的名称。</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationElement&quot; /&gt; object.">
        <see cref="T:System.Configuration.NameValueConfigurationElement" /> 对象的名称。</returns>
    </member>
    <member name="P:System.Configuration.NameValueConfigurationElement.Value">
      <summary vsli:raw="Gets or sets the value of the &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationElement&quot; /&gt; object.">获取或设置 <see cref="T:System.Configuration.NameValueConfigurationElement" /> 对象的值。</summary>
      <returns vsli:raw="The value of the &lt;see cref=&quot;T:System.Configuration.NameValueConfigurationElement&quot; /&gt; object.">
        <see cref="T:System.Configuration.NameValueConfigurationElement" /> 对象的值。</returns>
    </member>
    <member name="T:System.Configuration.NameValueFileSectionHandler">
      <summary vsli:raw="Provides access to a configuration file. This type supports the .NET configuration infrastructure and is not intended to be used directly from your code.">提供对配置文件的访问。 此类型支持 .NET Framework 配置基础结构，不应从代码直接使用。</summary>
    </member>
    <member name="M:System.Configuration.NameValueFileSectionHandler.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.NameValueFileSectionHandler&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.NameValueFileSectionHandler" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.NameValueFileSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary vsli:raw="Creates a new configuration handler and adds it to the section-handler collection based on the specified parameters.">创建新的配置处理程序，并根据指定参数将其添加到节处理程序集合中。</summary>
      <param name="parent" vsli:raw="The parent object.">父 对象。</param>
      <param name="configContext" vsli:raw="The configuration context object.">配置上下文对象。</param>
      <param name="section" vsli:raw="The section XML node.">节 XML 节点。</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The file specified in the &lt;see langword=&quot;file&quot; /&gt; attribute of &lt;paramref name=&quot;section&quot; /&gt; exists but cannot be loaded.  &#xA;  &#xA;-or-&#xA;  &#xA; The &lt;see langword=&quot;name&quot; /&gt; attribute of &lt;paramref name=&quot;section&quot; /&gt; does not match the root element of the file specified in the &lt;see langword=&quot;file&quot; /&gt; attribute.">
        <paramref name="section" /> 的 <see langword="file" /> 特性中指定的文件存在，但无法加载。  
  
- 或 - 
<paramref name="section" /> 的 <see langword="name" /> 特性与 <see langword="file" /> 特性中指定文件的根元素不匹配。</exception>
      <returns vsli:raw="A configuration object.">配置对象。</returns>
    </member>
    <member name="T:System.Configuration.NameValueSectionHandler">
      <summary vsli:raw="Provides name/value-pair configuration information from a configuration section.">提供配置节中的名称/值对配置信息。</summary>
    </member>
    <member name="M:System.Configuration.NameValueSectionHandler.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.NameValueSectionHandler&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.NameValueSectionHandler" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.NameValueSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary vsli:raw="Creates a new configuration handler and adds it to the section-handler collection based on the specified parameters.">创建新的配置处理程序，并根据指定参数将其添加到节处理程序集合中。</summary>
      <param name="parent" vsli:raw="Parent object.">父对象。</param>
      <param name="context" vsli:raw="Configuration context object.">配置上下文对象。</param>
      <param name="section" vsli:raw="Section XML node.">部分 XML 节点。</param>
      <returns vsli:raw="A configuration object.">配置对象。</returns>
    </member>
    <member name="P:System.Configuration.NameValueSectionHandler.KeyAttributeName">
      <summary vsli:raw="Gets the XML attribute name to use as the key in a key/value pair.">获取 XML 属性名称，以用作键/值对中的键。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; value containing the name of the key attribute.">一个包含键特性名称的 <see cref="T:System.String" /> 值。</returns>
    </member>
    <member name="P:System.Configuration.NameValueSectionHandler.ValueAttributeName">
      <summary vsli:raw="Gets the XML attribute name to use as the value in a key/value pair.">获取 XML 属性名称，以用作键/值对中的值。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; value containing the name of the value attribute.">一个包含值特性名称的 <see cref="T:System.String" /> 值。</returns>
    </member>
    <member name="T:System.Configuration.NoSettingsVersionUpgradeAttribute">
      <summary vsli:raw="Specifies that a settings provider should disable any logic that gets invoked when an application upgrade is detected. This class cannot be inherited.">指定设置提供程序应禁用检测到应用程序升级时调用的任何逻辑。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Configuration.NoSettingsVersionUpgradeAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.NoSettingsVersionUpgradeAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.NoSettingsVersionUpgradeAttribute" /> 类的新实例。</summary>
    </member>
    <member name="T:System.Configuration.OverrideMode">
      <summary vsli:raw="Specifies the override behavior of a configuration element for configuration elements in child directories.">为子目录中的配置元素指定配置元素重写行为。</summary>
    </member>
    <member name="F:System.Configuration.OverrideMode.Allow">
      <summary vsli:raw="The configuration setting of the element or group can be overridden by configuration settings that are in child directories.">元素或组的配置设置可由子目录中的配置设置重写。</summary>
    </member>
    <member name="F:System.Configuration.OverrideMode.Deny">
      <summary vsli:raw="The configuration setting of the element or group cannot be overridden by configuration settings that are in child directories.">元素或组的配置设置不能由子目录中的配置设置重写。</summary>
    </member>
    <member name="F:System.Configuration.OverrideMode.Inherit">
      <summary vsli:raw="The configuration setting of the element or group will be overridden by configuration settings that are in child directories if explicitly allowed by a parent element of the current configuration element or group. Permission to override is specified by using the &lt;see langword=&quot;OverrideMode&quot; /&gt; attribute.">如果得到当前配置元素或组的父元素的显式允许，则元素或组的配置设置将由子目录中的配置设置重写。 可通过使用 <see langword="OverrideMode" /> 特性来指定重写权限。</summary>
    </member>
    <member name="T:System.Configuration.PositiveTimeSpanValidator">
      <summary vsli:raw="Provides validation of a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; object. This class cannot be inherited.">对 <see cref="T:System.TimeSpan" /> 对象进行验证。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Configuration.PositiveTimeSpanValidator.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.PositiveTimeSpanValidator&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.PositiveTimeSpanValidator" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.PositiveTimeSpanValidator.CanValidate(System.Type)">
      <summary vsli:raw="Determines whether the object type can be validated.">确定是否可验证该对象类型。</summary>
      <param name="type" vsli:raw="The object type.">对象类型。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter matches a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="type" /> 参数与 <see cref="T:System.TimeSpan" /> 对象匹配，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.PositiveTimeSpanValidator.Validate(System.Object)">
      <summary vsli:raw="Determines whether the value of an object is valid.">确定对象的值是否有效。</summary>
      <param name="value" vsli:raw="The value of an object.">对象的值。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; cannot be resolved as a positive &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">无法将 <paramref name="value" /> 解析为正 <see cref="T:System.TimeSpan" /> 值。</exception>
    </member>
    <member name="T:System.Configuration.PositiveTimeSpanValidatorAttribute">
      <summary vsli:raw="Declaratively instructs .NET to perform time validation on a configuration property. This class cannot be inherited.">以声明的方式指示 .NET Framework 对配置属性执行时间验证。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Configuration.PositiveTimeSpanValidatorAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.PositiveTimeSpanValidatorAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.PositiveTimeSpanValidatorAttribute" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Configuration.PositiveTimeSpanValidatorAttribute.ValidatorInstance">
      <summary vsli:raw="Gets an instance of the &lt;see cref=&quot;T:System.Configuration.PositiveTimeSpanValidator&quot; /&gt; class.">获取 <see cref="T:System.Configuration.PositiveTimeSpanValidator" /> 类的实例。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorBase&quot; /&gt; validator instance.">
        <see cref="T:System.Configuration.ConfigurationValidatorBase" /> 验证程序实例。</returns>
    </member>
    <member name="T:System.Configuration.PropertyInformation">
      <summary vsli:raw="Contains meta-information on an individual property within the configuration. This type cannot be inherited.">包含配置中的个别属性的元数据信息。 无法继承此类型。</summary>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Converter">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; object related to the configuration attribute.">获取与配置特性相关的 <see cref="T:System.ComponentModel.TypeConverter" /> 对象。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.TypeConverter&quot; /&gt; object.">
        <see cref="T:System.ComponentModel.TypeConverter" /> 对象。</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.DefaultValue">
      <summary vsli:raw="Gets an object containing the default value related to a configuration attribute.">获取一个对象，该对象包含与配置特性相关的默认值。</summary>
      <returns vsli:raw="An object containing the default value of the configuration attribute.">一个对象，包含配置特性的默认值。</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Description">
      <summary vsli:raw="Gets the description of the object that corresponds to a configuration attribute.">获取与配置特性相对应的对象的说明。</summary>
      <returns vsli:raw="The description of the configuration attribute.">配置特性的说明。</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.IsKey">
      <summary vsli:raw="Gets a value specifying whether the configuration attribute is a key.">获取指定配置特性是否为键的值。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the configuration attribute is a key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果配置特性为键，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.IsLocked">
      <summary vsli:raw="Gets a value specifying whether the configuration attribute is locked.">获取指定配置特性是否锁定的值。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.PropertyInformation&quot; /&gt; object is locked; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Configuration.PropertyInformation" /> 对象是锁定的，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.IsModified">
      <summary vsli:raw="Gets a value specifying whether the configuration attribute has been modified.">获取指定配置特性是否已修改的值。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.PropertyInformation&quot; /&gt; object has been modified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Configuration.PropertyInformation" /> 对象已修改，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.IsRequired">
      <summary vsli:raw="Gets a value specifying whether the configuration attribute is required.">获取指定是否需要配置特性的值。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.PropertyInformation&quot; /&gt; object is required; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Configuration.PropertyInformation" /> 对象是必需的，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.LineNumber">
      <summary vsli:raw="Gets the line number in the configuration file related to the configuration attribute.">获取与配置特性相关的配置文件中的行号。</summary>
      <returns vsli:raw="A line number of the configuration file.">配置文件的行号。</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Name">
      <summary vsli:raw="Gets the name of the object that corresponds to a configuration attribute.">获取与配置特性相对应的对象的名称。</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.PropertyInformation&quot; /&gt; object.">
        <see cref="T:System.Configuration.PropertyInformation" /> 对象的名称。</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Source">
      <summary vsli:raw="Gets the source file that corresponds to a configuration attribute.">获取与配置特性相对应的源文件。</summary>
      <returns vsli:raw="The source file of the &lt;see cref=&quot;T:System.Configuration.PropertyInformation&quot; /&gt; object.">
        <see cref="T:System.Configuration.PropertyInformation" /> 对象的源文件。</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Type">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Type&quot; /&gt; of the object that corresponds to a configuration attribute.">获取与配置特性相对应的对象的 <see cref="T:System.Type" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the &lt;see cref=&quot;T:System.Configuration.PropertyInformation&quot; /&gt; object.">
        <see cref="T:System.Type" /> 对象的 <see cref="T:System.Configuration.PropertyInformation" />。</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Validator">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorBase&quot; /&gt; object related to the configuration attribute.">获取与配置特性相关的 <see cref="T:System.Configuration.ConfigurationValidatorBase" /> 对象。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorBase&quot; /&gt; object.">
        <see cref="T:System.Configuration.ConfigurationValidatorBase" /> 对象。</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Value">
      <summary vsli:raw="Gets or sets an object containing the value related to a configuration attribute.">获取或设置包含与配置特性相关的值的对象。</summary>
      <returns vsli:raw="An object containing the value for the &lt;see cref=&quot;T:System.Configuration.PropertyInformation&quot; /&gt; object.">包含 <see cref="T:System.Configuration.PropertyInformation" /> 对象的值的对象。</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.ValueOrigin">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Configuration.PropertyValueOrigin&quot; /&gt; object related to the configuration attribute.">获取与配置特性相关的 <see cref="T:System.Configuration.PropertyValueOrigin" /> 对象。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.PropertyValueOrigin&quot; /&gt; object.">
        <see cref="T:System.Configuration.PropertyValueOrigin" /> 对象。</returns>
    </member>
    <member name="T:System.Configuration.PropertyInformationCollection">
      <summary vsli:raw="Contains a collection of &lt;see cref=&quot;T:System.Configuration.PropertyInformation&quot; /&gt; objects. This class cannot be inherited.">包含 <see cref="T:System.Configuration.PropertyInformation" /> 对象的集合。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Configuration.PropertyInformationCollection.CopyTo(System.Configuration.PropertyInformation[],System.Int32)">
      <summary vsli:raw="Copies the entire &lt;see cref=&quot;T:System.Configuration.PropertyInformationCollection&quot; /&gt; collection to a compatible one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified index of the target array.">从目标数组的指定索引处开始，将整个 <see cref="T:System.Configuration.PropertyInformationCollection" /> 集合复制到兼容的一维 <see cref="T:System.Array" />。</summary>
      <param name="array" vsli:raw="A one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from the &lt;see cref=&quot;T:System.Configuration.PropertyInformationCollection&quot; /&gt; collection. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">一个一维 <see cref="T:System.Array" />，它是从 <see cref="T:System.Configuration.PropertyInformationCollection" /> 集合复制的元素的目标。 <see cref="T:System.Array" /> 必须具有从零开始的索引。</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">
        <paramref name="array" /> 中从零开始的索引，从此处开始复制。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;see cref=&quot;P:System.Array.Length&quot; /&gt; property of &lt;paramref name=&quot;array&quot; /&gt; is less than &lt;see cref=&quot;P:System.Collections.Specialized.NameObjectCollectionBase.Count&quot; /&gt; + &lt;paramref name=&quot;index&quot; /&gt;.">
        <paramref name="array" /> 的 <see cref="P:System.Array.Length" /> 属性小于 <see cref="P:System.Collections.Specialized.NameObjectCollectionBase.Count" /> + <paramref name="index" />。</exception>
    </member>
    <member name="M:System.Configuration.PropertyInformationCollection.GetEnumerator">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object, which is used to iterate through this &lt;see cref=&quot;T:System.Configuration.PropertyInformationCollection&quot; /&gt; collection.">获取 <see cref="T:System.Collections.IEnumerator" /> 对象，此对象用于循环访问此 <see cref="T:System.Configuration.PropertyInformationCollection" /> 集合。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object, which is used to iterate through this &lt;see cref=&quot;T:System.Configuration.PropertyInformationCollection&quot; /&gt;.">
        <see cref="T:System.Collections.IEnumerator" /> 对象，用于循环访问此 <see cref="T:System.Configuration.PropertyInformationCollection" />。</returns>
    </member>
    <member name="M:System.Configuration.PropertyInformationCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>用序列化 <see cref="T:System.Configuration.PropertyInformationCollection" /> 实例所需的数据填充 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象，该对象包含序列化 <see cref="T:System.Configuration.PropertyInformationCollection" /> 实例所需的信息。</param>
      <param name="context">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> 对象，该对象包含与 <see cref="T:System.Configuration.PropertyInformationCollection" /> 实例关联的序列化流的源和目标。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Configuration.PropertyInformationCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Configuration.PropertyInformation&quot; /&gt; object in the collection, based on the specified property name.">根据指定的属性名，获取集合中的 <see cref="T:System.Configuration.PropertyInformation" /> 对象。</summary>
      <param name="propertyName" vsli:raw="The name of the configuration attribute contained in the &lt;see cref=&quot;T:System.Configuration.PropertyInformationCollection&quot; /&gt; object.">在 <see cref="T:System.Configuration.PropertyInformationCollection" /> 对象中包含的配置特性的名称。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.PropertyInformation&quot; /&gt; object.">
        <see cref="T:System.Configuration.PropertyInformation" /> 对象。</returns>
    </member>
    <member name="T:System.Configuration.PropertyValueOrigin">
      <summary vsli:raw="Specifies the level in the configuration hierarchy where a configuration property value originated.">指定配置层次结构中的级别，在此级别上产生配置属性值。</summary>
    </member>
    <member name="F:System.Configuration.PropertyValueOrigin.Default">
      <summary vsli:raw="The configuration property value originates from the &lt;see cref=&quot;P:System.Configuration.ConfigurationProperty.DefaultValue&quot; /&gt; property.">配置属性值来源于 <see cref="P:System.Configuration.ConfigurationProperty.DefaultValue" /> 属性。</summary>
    </member>
    <member name="F:System.Configuration.PropertyValueOrigin.Inherited">
      <summary vsli:raw="The configuration property value is inherited from a parent level in the configuration.">从配置中的父级继承配置属性值。</summary>
    </member>
    <member name="F:System.Configuration.PropertyValueOrigin.SetHere">
      <summary vsli:raw="The configuration property value is defined at the current level of the hierarchy.">在层次结构的当前级别上定义配置属性值。</summary>
    </member>
    <member name="T:System.Configuration.ProtectedConfiguration">
      <summary vsli:raw="Provides access to the protected-configuration providers for the current application's configuration file.">为当前应用程序的配置文件提供对受保护配置提供程序的访问。</summary>
    </member>
    <member name="F:System.Configuration.ProtectedConfiguration.DataProtectionProviderName">
      <summary vsli:raw="The name of the data protection provider.">数据保护提供程序的名称。</summary>
    </member>
    <member name="F:System.Configuration.ProtectedConfiguration.ProtectedDataSectionName">
      <summary vsli:raw="The name of the protected data section.">受保护的数据节的名称。</summary>
    </member>
    <member name="F:System.Configuration.ProtectedConfiguration.RsaProviderName">
      <summary vsli:raw="The name of the RSA provider.">RSA 提供程序的名称。</summary>
    </member>
    <member name="P:System.Configuration.ProtectedConfiguration.DefaultProvider">
      <summary vsli:raw="Gets the name of the default protected-configuration provider.">获取默认受保护配置提供程序的名称。</summary>
      <returns vsli:raw="The name of the default protected-configuration provider.">默认受保护配置提供程序的名称。</returns>
    </member>
    <member name="P:System.Configuration.ProtectedConfiguration.Providers">
      <summary vsli:raw="Gets a collection of the installed protected-configuration providers.">获取安装的受保护配置提供程序的集合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProviderCollection&quot; /&gt; collection of installed &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; objects.">安装的 <see cref="T:System.Configuration.ProtectedConfigurationProviderCollection" /> 对象的 <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 集合。</returns>
    </member>
    <member name="T:System.Configuration.ProtectedConfigurationProvider">
      <summary vsli:raw="The base class to create providers for encrypting and decrypting protected configuration data.">用于创建提供程序来加密和解密受保护的配置数据的基类。</summary>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationProvider.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; class using default settings.">使用默认设置初始化 <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)">
      <summary vsli:raw="Decrypts the passed &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object from a configuration file.">解密从配置文件传递的 <see cref="T:System.Xml.XmlNode" /> 对象。</summary>
      <param name="encryptedNode" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object to decrypt.">要解密的 <see cref="T:System.Xml.XmlNode" /> 对象。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object containing decrypted data.">包含已解密数据的 <see cref="T:System.Xml.XmlNode" /> 对象。</returns>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)">
      <summary vsli:raw="Encrypts the passed &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object from a configuration file.">加密从配置文件传递的 <see cref="T:System.Xml.XmlNode" /> 对象。</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object to encrypt.">要加密的 <see cref="T:System.Xml.XmlNode" /> 对象。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object containing encrypted data.">包含已加密数据的 <see cref="T:System.Xml.XmlNode" /> 对象。</returns>
    </member>
    <member name="T:System.Configuration.ProtectedConfigurationProviderCollection">
      <summary vsli:raw="Provides a collection of &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; objects.">提供 <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 对象的集合。</summary>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationProviderCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProviderCollection&quot; /&gt; class using default settings.">使用默认设置初始化 <see cref="T:System.Configuration.ProtectedConfigurationProviderCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationProviderCollection.Add(System.Configuration.Provider.ProviderBase)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; object to the collection.">将 <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 对象添加到集合中。</summary>
      <param name="provider" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; object to add to the collection.">要添加到集合的 <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;provider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="provider" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;provider&quot; /&gt; is not a &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; object.">
        <paramref name="provider" /> 不是 <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 对象。</exception>
      <exception cref="T:System.Configuration.ConfigurationException" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; object to add already exists in the collection.  &#xA;  &#xA;-or-&#xA;  &#xA; The collection is read-only.">此集合中已存在要添加的 <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 对象。  
  
- 或 - 
该集合是只读的。</exception>
    </member>
    <member name="P:System.Configuration.ProtectedConfigurationProviderCollection.Item(System.String)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; object in the collection with the specified name.">获取集合中具有指定名称的 <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 对象。</summary>
      <param name="name" vsli:raw="The name of a &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; object in the collection.">集合中 <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 对象的名称。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; object with the specified name, or &lt;see langword=&quot;null&quot; /&gt; if there is no object with that name.">具有指定名称的 <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 对象，如果不存在具有该名称的对象，则为 <see langword="null" />。</returns>
    </member>
    <member name="T:System.Configuration.ProtectedConfigurationSection">
      <summary vsli:raw="Provides programmatic access to the &lt;see langword=&quot;configProtectedData&quot; /&gt; configuration section. This class cannot be inherited.">提供对 <see langword="configProtectedData" /> 配置节的编程访问。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationSection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationSection&quot; /&gt; class using default settings.">使用默认设置初始化 <see cref="T:System.Configuration.ProtectedConfigurationSection" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Configuration.ProtectedConfigurationSection.DefaultProvider">
      <summary vsli:raw="Gets or sets the name of the default &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; object in the &lt;see cref=&quot;P:System.Configuration.ProtectedConfigurationSection.Providers&quot; /&gt; collection property.">获取或设置 <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 集合属性中默认的 <see cref="P:System.Configuration.ProtectedConfigurationSection.Providers" /> 对象的名称。</summary>
      <returns vsli:raw="The name of the default &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; object in the &lt;see cref=&quot;P:System.Configuration.ProtectedConfigurationSection.Providers&quot; /&gt; collection property.">
        <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 集合属性中默认的 <see cref="P:System.Configuration.ProtectedConfigurationSection.Providers" /> 对象的名称。</returns>
    </member>
    <member name="P:System.Configuration.ProtectedConfigurationSection.Providers">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Configuration.ProviderSettingsCollection&quot; /&gt; collection of all the &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; objects in all participating configuration files.">获取所有参与的配置文件中所有 <see cref="T:System.Configuration.ProviderSettingsCollection" /> 对象的 <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 集合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ProviderSettingsCollection&quot; /&gt; collection of all the &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; objects in all participating configuration files.">所有参与的配置文件中所有 <see cref="T:System.Configuration.ProviderSettingsCollection" /> 对象的 <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 集合。</returns>
    </member>
    <member name="T:System.Configuration.ProtectedProviderSettings">
      <summary vsli:raw="Represents a group of configuration elements that configure the providers for the &lt;see langword=&quot;&amp;lt;configProtectedData&amp;gt;&quot; /&gt; configuration section.">表示一组配置元素，这些元素用于配置 <see langword="&lt;configProtectedData&gt;" /> 配置节的提供程序。</summary>
    </member>
    <member name="M:System.Configuration.ProtectedProviderSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ProtectedProviderSettings&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.ProtectedProviderSettings" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Configuration.ProtectedProviderSettings.Properties">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Configuration.ConfigurationPropertyCollection&quot; /&gt; collection that represents the properties of the providers for the protected configuration data.">获取一个 <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> 集合，该集合表示受保护配置数据的提供程序的属性。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ConfigurationPropertyCollection&quot; /&gt; that represents the properties of the providers for the protected configuration data.">
        <see cref="T:System.Configuration.ConfigurationPropertyCollection" />，表示受保护配置数据的提供程序的属性。</returns>
    </member>
    <member name="P:System.Configuration.ProtectedProviderSettings.Providers">
      <summary vsli:raw="Gets a collection of &lt;see cref=&quot;T:System.Configuration.ProviderSettings&quot; /&gt; objects that represent the properties of the providers for the protected configuration data.">获取 <see cref="T:System.Configuration.ProviderSettings" /> 对象的集合，这些对象表示受保护配置数据的提供程序的属性。</summary>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Configuration.ProviderSettings&quot; /&gt; objects that represent the properties of the providers for the protected configuration data.">
        <see cref="T:System.Configuration.ProviderSettings" /> 对象的集合，这些对象表示受保护配置数据的提供程序的属性。</returns>
    </member>
    <member name="T:System.Configuration.Provider.ProviderBase">
      <summary vsli:raw="Provides a base implementation for the extensible provider model.">提供了针对可扩展的提供程序模型的基实现。</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderBase.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.Provider.ProviderBase&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.Provider.ProviderBase" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary vsli:raw="Initializes the configuration builder.">初始化配置生成器。</summary>
      <param name="name" vsli:raw="The friendly name of the provider.">提供程序的友好名称。</param>
      <param name="config" vsli:raw="A collection of the name/value pairs representing the provider-specific attributes specified in the configuration for this provider.">名称/值对的集合，表示在配置中为该提供程序指定的提供程序特定的属性。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The name of the provider is &lt;see langword=&quot;null&quot; /&gt;.">提供程序的名称是 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The name of the provider has a length of zero.">提供程序名称的长度为零。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An attempt is made to call &lt;see cref=&quot;M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)&quot; /&gt; on a provider after the provider has already been initialized.">初始化提供程序后尝试在提供程序上调用 <see cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />。</exception>
    </member>
    <member name="P:System.Configuration.Provider.ProviderBase.Description">
      <summary vsli:raw="Gets a brief, friendly description suitable for display in administrative tools or other user interfaces (UIs).">获取一条简短的易懂描述，它适合在管理工具或其他用户界面 (UI) 中显示。</summary>
      <returns vsli:raw="A brief, friendly description suitable for display in administrative tools or other UIs.">简短的易懂描述，适合在管理工具或其他 UI 中显示。</returns>
    </member>
    <member name="P:System.Configuration.Provider.ProviderBase.Name">
      <summary vsli:raw="Gets the friendly name used to refer to the provider during configuration.">获得一个友好名称，用于在配置过程中引用提供程序。</summary>
      <returns vsli:raw="The friendly name used to refer to the provider during configuration.">用于在配置过程中引用提供程序的友好名称。</returns>
    </member>
    <member name="T:System.Configuration.Provider.ProviderCollection">
      <summary vsli:raw="Represents a collection of provider objects that inherit from &lt;see cref=&quot;T:System.Configuration.Provider.ProviderBase&quot; /&gt;.">表示从 <see cref="T:System.Configuration.Provider.ProviderBase" /> 继承的提供程序对象的集合。</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.Provider.ProviderCollection&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.Provider.ProviderCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.Add(System.Configuration.Provider.ProviderBase)">
      <summary vsli:raw="Adds a provider to the collection.">向集合中添加提供程序。</summary>
      <param name="provider" vsli:raw="The provider to be added.">要添加的提供程序。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">该集合是只读的。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;provider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="provider" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Configuration.Provider.ProviderBase.Name&quot; /&gt; of &lt;paramref name=&quot;provider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; The length of the &lt;see cref=&quot;P:System.Configuration.Provider.ProviderBase.Name&quot; /&gt; of &lt;paramref name=&quot;provider&quot; /&gt; is less than 1.">
        <paramref name="provider" /> 的 <see cref="P:System.Configuration.Provider.ProviderBase.Name" /> 为 <see langword="null" />。  
  
- 或 - 
<paramref name="provider" /> 的 <see cref="P:System.Configuration.Provider.ProviderBase.Name" /> 的长度小于 1。</exception>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.Clear">
      <summary vsli:raw="Removes all items from the collection.">从集合中移除所有项。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is set to read-only.">集合被设置为只读。</exception>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.CopyTo(System.Configuration.Provider.ProviderBase[],System.Int32)">
      <summary vsli:raw="Copies the contents of the collection to the given array starting at the specified index.">从指定索引处开始，将集合中的内容复制到给定数组。</summary>
      <param name="array" vsli:raw="The array to copy the elements of the collection to.">要将集合的元素复制到的数组。</param>
      <param name="index" vsli:raw="The index of the collection item at which to start the copying process.">集合项的索引，在此索引处开始进行复制。</param>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.GetEnumerator">
      <summary vsli:raw="Returns an object that implements the &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; interface to iterate through the collection.">返回一个对象，该对象实现 <see cref="T:System.Collections.IEnumerator" /> 接口以循环访问集合。</summary>
      <returns vsli:raw="An object that implements &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; to iterate through the collection.">实现 <see cref="T:System.Collections.IEnumerator" /> 以循环访问集合的对象。</returns>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.Remove(System.String)">
      <summary vsli:raw="Removes a provider from the collection.">从集合中移除提供程序。</summary>
      <param name="name" vsli:raw="The name of the provider to be removed.">要移除的提供程序的名称。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection has been set to read-only.">集合已被设置为只读。</exception>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.SetReadOnly">
      <summary vsli:raw="Sets the collection to be read-only.">将集合设置为只读。</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Configuration.Provider.ProviderCollection&quot; /&gt; to an array, starting at a particular array index.">将 <see cref="T:System.Configuration.Provider.ProviderCollection" /> 的元素复制到一个数组中从特定的数组索引开始的位置。</summary>
      <param name="array" vsli:raw="The array to copy the elements of the collection to.">要将集合的元素复制到的数组。</param>
      <param name="index" vsli:raw="The index of the array at which to start copying provider instances from the collection.">数组索引，从该索引处开始复制集合中的提供程序实例。</param>
    </member>
    <member name="P:System.Configuration.Provider.ProviderCollection.Count">
      <summary vsli:raw="Gets the number of providers in the collection.">获取集合中提供程序的数目。</summary>
      <returns vsli:raw="The number of providers in the collection.">集合中提供程序的数目。</returns>
    </member>
    <member name="P:System.Configuration.Provider.ProviderCollection.IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the collection is synchronized (thread safe).">获取一个值，该值指示对集合的访问是否为同步的（线程安全）。</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; in all cases.">在所有情况下均为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.Provider.ProviderCollection.Item(System.String)">
      <summary vsli:raw="Gets the provider with the specified name.">获取具有指定名称的提供程序。</summary>
      <param name="name" vsli:raw="The key by which the provider is identified.">标识提供程序的键。</param>
      <returns vsli:raw="The provider with the specified name.">具有指定名称的提供程序。</returns>
    </member>
    <member name="P:System.Configuration.Provider.ProviderCollection.SyncRoot">
      <summary vsli:raw="Gets the current object.">获取当前对象。</summary>
      <returns vsli:raw="The current object.">当前对象。</returns>
    </member>
    <member name="T:System.Configuration.Provider.ProviderException">
      <summary vsli:raw="The exception that is thrown when a configuration provider error has occurred. This exception class is also used by providers to throw exceptions when internal errors occur within the provider that do not map to other pre-existing exception classes.">当发生配置提供程序错误时引发的异常。 如果提供程序内发生的内部错误没有映射到其他已存在的异常类，则提供程序也使用此异常类来引发异常。</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderException.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Configuration.Provider.ProviderException&quot; /&gt; class.">创建 <see cref="T:System.Configuration.Provider.ProviderException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Configuration.Provider.ProviderException&quot; /&gt; class.">创建 <see cref="T:System.Configuration.Provider.ProviderException" /> 类的新实例。</summary>
      <param name="info" vsli:raw="The object that holds the information to deserialize.">包含要反序列化的信息的对象。</param>
      <param name="context" vsli:raw="Contextual information about the source or destination.">有关源或目标的上下文信息。</param>
    </member>
    <member name="M:System.Configuration.Provider.ProviderException.#ctor(System.String)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Configuration.Provider.ProviderException&quot; /&gt; class.">创建 <see cref="T:System.Configuration.Provider.ProviderException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="A message describing why this &lt;see cref=&quot;T:System.Configuration.Provider.ProviderException&quot; /&gt; was thrown.">描述引发该 <see cref="T:System.Configuration.Provider.ProviderException" /> 的原因的消息。</param>
    </member>
    <member name="M:System.Configuration.Provider.ProviderException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Configuration.Provider.ProviderException&quot; /&gt; class.">创建 <see cref="T:System.Configuration.Provider.ProviderException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="A message describing why this &lt;see cref=&quot;T:System.Configuration.Provider.ProviderException&quot; /&gt; was thrown.">描述引发该 <see cref="T:System.Configuration.Provider.ProviderException" /> 的原因的消息。</param>
      <param name="innerException" vsli:raw="The exception that caused this &lt;see cref=&quot;T:System.Configuration.Provider.ProviderException&quot; /&gt; to be thrown.">导致引发此 <see cref="T:System.Configuration.Provider.ProviderException" /> 的异常。</param>
    </member>
    <member name="T:System.Configuration.ProviderSettings">
      <summary vsli:raw="Represents the configuration elements associated with a provider.">表示与提供程序关联的配置元素。</summary>
    </member>
    <member name="M:System.Configuration.ProviderSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ProviderSettings&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.ProviderSettings" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.ProviderSettings.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ProviderSettings&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.ProviderSettings" /> 类的新实例。</summary>
      <param name="name" vsli:raw="The name of the provider to configure settings for.">要为其配置设置的提供程序的名称。</param>
      <param name="type" vsli:raw="The type of the provider to configure settings for.">要为其配置设置的提供程序的类型。</param>
    </member>
    <member name="P:System.Configuration.ProviderSettings.Name">
      <summary vsli:raw="Gets or sets the name of the provider configured by this class.">获取或设置由此类配置的提供程序的名称。</summary>
      <returns vsli:raw="The name of the provider.">提供程序的名称。</returns>
    </member>
    <member name="P:System.Configuration.ProviderSettings.Parameters">
      <summary vsli:raw="Gets a collection of user-defined parameters for the provider.">获取提供程序的用户定义参数的集合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Specialized.NameValueCollection&quot; /&gt; of parameters for the provider.">提供程序的参数的 <see cref="T:System.Collections.Specialized.NameValueCollection" />。</returns>
    </member>
    <member name="P:System.Configuration.ProviderSettings.Type">
      <summary vsli:raw="Gets or sets the type of the provider configured by this class.">获取或设置由此类配置的提供程序的类型。</summary>
      <returns vsli:raw="The fully qualified namespace and class name for the type of provider configured by this &lt;see cref=&quot;T:System.Configuration.ProviderSettings&quot; /&gt; instance.">由此 <see cref="T:System.Configuration.ProviderSettings" /> 实例配置的提供程序类型的完全限定命名空间和类名。</returns>
    </member>
    <member name="T:System.Configuration.ProviderSettingsCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Configuration.ProviderSettings&quot; /&gt; objects.">表示 <see cref="T:System.Configuration.ProviderSettings" /> 对象集合。</summary>
    </member>
    <member name="M:System.Configuration.ProviderSettingsCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.ProviderSettingsCollection&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.ProviderSettingsCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.ProviderSettingsCollection.Add(System.Configuration.ProviderSettings)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Configuration.ProviderSettings&quot; /&gt; object to the collection.">将 <see cref="T:System.Configuration.ProviderSettings" /> 对象添加到集合中。</summary>
      <param name="provider" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ProviderSettings&quot; /&gt; object to add.">要添加的 <see cref="T:System.Configuration.ProviderSettings" /> 对象。</param>
    </member>
    <member name="M:System.Configuration.ProviderSettingsCollection.Clear">
      <summary vsli:raw="Clears the collection.">清除集合。</summary>
    </member>
    <member name="M:System.Configuration.ProviderSettingsCollection.Remove(System.String)">
      <summary vsli:raw="Removes an element from the collection.">从集合中删除一个元素。</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.ProviderSettings&quot; /&gt; object to remove.">要删除的 <see cref="T:System.Configuration.ProviderSettings" /> 对象的名称。</param>
    </member>
    <member name="P:System.Configuration.ProviderSettingsCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets a value at the specified index in the &lt;see cref=&quot;T:System.Configuration.ProviderSettingsCollection&quot; /&gt; collection.">获取或设置 <see cref="T:System.Configuration.ProviderSettingsCollection" /> 集合中指定索引处的值。</summary>
      <param name="index" vsli:raw="The index of the &lt;see cref=&quot;T:System.Configuration.ProviderSettings&quot; /&gt; to return.">要返回的 <see cref="T:System.Configuration.ProviderSettings" /> 的索引。</param>
      <returns vsli:raw="The specified &lt;see cref=&quot;T:System.Configuration.ProviderSettings&quot; /&gt;.">指定的 <see cref="T:System.Configuration.ProviderSettings" />。</returns>
    </member>
    <member name="P:System.Configuration.ProviderSettingsCollection.Item(System.String)">
      <summary vsli:raw="Gets an item from the collection.">获取集合中的项。</summary>
      <param name="key" vsli:raw="A string reference to the &lt;see cref=&quot;T:System.Configuration.ProviderSettings&quot; /&gt; object within the collection.">引用集合中 <see cref="T:System.Configuration.ProviderSettings" /> 对象的字符串。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.ProviderSettings&quot; /&gt; object contained in the collection.">集合中包含的 <see cref="T:System.Configuration.ProviderSettings" /> 对象。</returns>
    </member>
    <member name="T:System.Configuration.RegexStringValidator">
      <summary vsli:raw="Provides validation of a string based on the rules provided by a regular expression.">根据正则表达式提供的规则提供字符串验证。</summary>
    </member>
    <member name="M:System.Configuration.RegexStringValidator.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.RegexStringValidator&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.RegexStringValidator" /> 类的新实例。</summary>
      <param name="regex" vsli:raw="A string that specifies a regular expression.">指定正则表达式的字符串。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;regex&quot; /&gt; is null or an empty string (&quot;&quot;).">
        <paramref name="regex" /> 为 null 或为空字符串 ("")。</exception>
    </member>
    <member name="M:System.Configuration.RegexStringValidator.CanValidate(System.Type)">
      <summary vsli:raw="Determines whether the type of the object can be validated.">确定是否可以验证该对象的类型。</summary>
      <param name="type" vsli:raw="The type of object.">对象的类型。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter matches a string; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="type" /> 参数与字符串匹配，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.RegexStringValidator.Validate(System.Object)">
      <summary vsli:raw="Determines whether the value of an object is valid.">确定对象的值是否有效。</summary>
      <param name="value" vsli:raw="The value of an object.">对象的值。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; does not conform to the parameters of the &lt;see cref=&quot;T:System.Text.RegularExpressions.Regex&quot; /&gt; class.">
        <paramref name="value" /> 不符合 <see cref="T:System.Text.RegularExpressions.Regex" /> 类的参数的要求。</exception>
    </member>
    <member name="T:System.Configuration.RegexStringValidatorAttribute">
      <summary vsli:raw="Declaratively instructs .NET to perform string validation on a configuration property using a regular expression. This class cannot be inherited.">以声明方式指示 .NET Framework 使用正则表达式在配置属性中执行字符串验证。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Configuration.RegexStringValidatorAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.RegexStringValidatorAttribute&quot; /&gt; object.">初始化 <see cref="T:System.Configuration.RegexStringValidatorAttribute" /> 对象的新实例。</summary>
      <param name="regex" vsli:raw="The string to use for regular expression validation.">用于正则表达式验证的字符串。</param>
    </member>
    <member name="P:System.Configuration.RegexStringValidatorAttribute.Regex">
      <summary vsli:raw="Gets the string used to perform regular-expression validation.">获取用于执行正则表达式验证的字符串。</summary>
      <returns vsli:raw="The string containing the regular expression used to filter the string assigned to the decorated configuration-element property.">包含正则表达式的字符串，其中的正则表达式用于筛选分配给经过修饰的配置元素属性的字符串。</returns>
    </member>
    <member name="P:System.Configuration.RegexStringValidatorAttribute.ValidatorInstance">
      <summary vsli:raw="Gets an instance of the &lt;see cref=&quot;T:System.Configuration.RegexStringValidator&quot; /&gt; class.">获取 <see cref="T:System.Configuration.RegexStringValidator" /> 类的实例。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorBase&quot; /&gt; validator instance.">
        <see cref="T:System.Configuration.ConfigurationValidatorBase" /> 验证程序实例。</returns>
    </member>
    <member name="T:System.Configuration.RsaProtectedConfigurationProvider">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Configuration.ProtectedConfigurationProvider&quot; /&gt; instance that uses RSA encryption to encrypt and decrypt configuration data.">提供使用 RSA 加密对配置数据进行加密和解密的 <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> 实例。</summary>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.RsaProtectedConfigurationProvider&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.RsaProtectedConfigurationProvider" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.AddKey(System.Int32,System.Boolean)">
      <summary vsli:raw="Adds a key to the RSA key container.">将密钥添加到 RSA 密钥容器中。</summary>
      <param name="keySize" vsli:raw="The size of the key to add.">要添加的密钥的大小。</param>
      <param name="exportable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the key is exportable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若指示密钥可以导出，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)">
      <summary vsli:raw="Decrypts the XML node passed to it.">解密传递给它的 XML 节点。</summary>
      <param name="encryptedNode" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; to decrypt.">要进行解密的 <see cref="T:System.Xml.XmlNode" />。</param>
      <returns vsli:raw="The decrypted XML node.">解密后的 XML 节点。</returns>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.DeleteKey">
      <summary vsli:raw="Removes a key from the RSA key container.">从 RSA 密钥容器中移除密钥。</summary>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)">
      <summary vsli:raw="Encrypts the XML node passed to it.">加密传递给它的 XML 节点。</summary>
      <param name="node" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; to encrypt.">要进行加密的 <see cref="T:System.Xml.XmlNode" />。</param>
      <returns vsli:raw="An encrypted &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object.">已加密的 <see cref="T:System.Xml.XmlNode" /> 对象。</returns>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.ExportKey(System.String,System.Boolean)">
      <summary vsli:raw="Exports an RSA key from the key container.">从密钥容器中导出 RSA 密钥。</summary>
      <param name="xmlFileName" vsli:raw="The file name and path to export the key to.">要将密钥导出到的文件的名称和路径。</param>
      <param name="includePrivateParameters" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that private parameters are exported; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若指示将导出专用参数，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is a zero-length string, contains only white space, or contains one or more invalid characters as defined by &lt;see cref=&quot;F:System.IO.Path.InvalidPathChars&quot; /&gt;.">
        <paramref name="path" /> 是一个长度为零的字符串，仅包含空格，或包含一个或多个由 <see cref="F:System.IO.Path.InvalidPathChars" /> 定义的无效字符。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="path" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The specified path, file name, or both exceed the system-defined maximum length.">指定的路径和/或文件名超过了系统定义的最大长度。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The specified path is invalid, such as being on an unmapped drive.">指定的路径无效，例如位于未映射的驱动器上。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="An error occurred while opening the file.">打开文件时发生错误。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; specified a file that is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; This operation is not supported on the current platform.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;path&quot; /&gt; specified a directory.  &#xA;  &#xA; -or-  &#xA;  &#xA; The caller does not have the required permission.">
        <paramref name="path" /> 指定了一个只读文件。  
  
- 或 - 
当前平台不支持此操作。  
  
- 或 - 
 <paramref name="path" /> 指定了一个目录。  
  
- 或 - 
调用方没有所要求的权限。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file specified in &lt;paramref name=&quot;path&quot; /&gt; was not found.">未找到 <paramref name="path" /> 中指定的文件。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is in an invalid format.">
        <paramref name="path" /> 的格式无效。</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">调用方没有所要求的权限。</exception>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.ImportKey(System.String,System.Boolean)">
      <summary vsli:raw="Imports an RSA key into the key container.">将 RSA 密钥导入到密钥容器中。</summary>
      <param name="xmlFileName" vsli:raw="The file name and path to import the key from.">从中导入密钥的文件的名称和路径。</param>
      <param name="exportable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the key is exportable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">若指示密钥可以导出，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is a zero-length string, contains only white space, or contains one or more invalid characters as defined by &lt;see cref=&quot;F:System.IO.Path.InvalidPathChars&quot; /&gt;.">
        <paramref name="path" /> 是一个长度为零的字符串，仅包含空格，或包含一个或多个由 <see cref="F:System.IO.Path.InvalidPathChars" /> 定义的无效字符。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="path" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The specified path, file name, or both exceed the system-defined maximum length.">指定的路径和/或文件名超过了系统定义的最大长度。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The specified path is invalid, such as being on an unmapped drive.">指定的路径无效，例如位于未映射的驱动器上。</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="An error occurred while opening the file.">打开文件时发生错误。</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; specified a file that is write-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; This operation is not supported on the current platform.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;path&quot; /&gt; specified a directory.  &#xA;  &#xA; -or-  &#xA;  &#xA; The caller does not have the required permission.">
        <paramref name="path" /> 指定了一个只写文件。  
  
- 或 - 
当前平台不支持此操作。  
  
- 或 - 
 <paramref name="path" /> 指定了一个目录。  
  
- 或 - 
调用方没有所要求的权限。</exception>
      <exception cref="T:System.IO.FileNotFoundException" vsli:raw="The file specified in &lt;paramref name=&quot;path&quot; /&gt; was not found.">未找到 <paramref name="path" /> 中指定的文件。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is in an invalid format.">
        <paramref name="path" /> 的格式无效。</exception>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>使用默认设置初始化提供程序。</summary>
      <param name="name">要为对象使用的提供程序名称。</param>
      <param name="configurationValues">初始化对象时要使用的值的 <see cref="T:System.Collections.Specialized.NameValueCollection" /> 集合。</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="configurationValues" /> 包含一个或多个无法识别的值。</exception>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.CspProviderName">
      <summary vsli:raw="Gets the name of the Windows cryptography API (crypto API) cryptographic service provider (CSP).">获取 Windows 加密 API（加密 API）加密服务提供程序 (CSP) 的名称。</summary>
      <returns vsli:raw="The name of the CryptoAPI cryptographic service provider.">CryptoAPI 加密服务提供程序的名称。</returns>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.KeyContainerName">
      <summary vsli:raw="Gets the name of the key container.">获取密钥容器的名称。</summary>
      <returns vsli:raw="The name of the key container.">密钥容器的名称。</returns>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.RsaPublicKey">
      <summary vsli:raw="Gets the public key used by the provider.">获取提供程序使用的公钥。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Security.Cryptography.RSAParameters&quot; /&gt; object that contains the public key used by the provider.">包含提供程序所使用的公钥的 <see cref="T:System.Security.Cryptography.RSAParameters" /> 对象。</returns>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.UseFIPS">
      <summary vsli:raw="Gets a value indicating whether the provider uses FIPS.">获取一个值，该值指示句柄是否已关闭。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the provider uses FIPS; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 如果提供程序使用 FIPS，则为;否则为 <see langword="false" /> 。</returns>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.UseMachineContainer">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.Configuration.RsaProtectedConfigurationProvider&quot; /&gt; object is using the machine key container.">获取一个值，该值指示 <see cref="T:System.Configuration.RsaProtectedConfigurationProvider" /> 对象是否正在使用计算机密钥容器。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.RsaProtectedConfigurationProvider&quot; /&gt; object is using the machine key container; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Configuration.RsaProtectedConfigurationProvider" /> 对象正在使用计算机密钥容器，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.UseOAEP">
      <summary vsli:raw="Gets a value that indicates whether the provider is using Optimal Asymmetric Encryption Padding (OAEP) key exchange data.">获取一个值，该值指示提供程序是否正在使用最优不对称加密填充 (OAEP) 密钥交换数据。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.RsaProtectedConfigurationProvider&quot; /&gt; object is using Optimal Asymmetric Encryption Padding (OAEP) key exchange data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Configuration.RsaProtectedConfigurationProvider" /> 对象正在使用最优不对称加密填充 (OAEP) 密钥交换数据，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Configuration.SchemeSettingElement">
      <summary vsli:raw="Represents an element in a &lt;see cref=&quot;T:System.Configuration.SchemeSettingElementCollection&quot; /&gt; class.">表示 <see cref="T:System.Configuration.SchemeSettingElementCollection" /> 类中的元素。</summary>
    </member>
    <member name="M:System.Configuration.SchemeSettingElement.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SchemeSettingElement&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.SchemeSettingElement" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Configuration.SchemeSettingElement.GenericUriParserOptions">
      <summary vsli:raw="Gets the value of the GenericUriParserOptions entry from a &lt;see cref=&quot;T:System.Configuration.SchemeSettingElement&quot; /&gt; instance.">获取 <see cref="T:System.Configuration.SchemeSettingElement" /> 实例中 GenericUriParserOptions 项的值。</summary>
      <returns vsli:raw="The value of GenericUriParserOptions entry.">GenericUriParserOptions 项的值。</returns>
    </member>
    <member name="P:System.Configuration.SchemeSettingElement.Name">
      <summary vsli:raw="Gets the value of the Name entry from a &lt;see cref=&quot;T:System.Configuration.SchemeSettingElement&quot; /&gt; instance.">获取 <see cref="T:System.Configuration.SchemeSettingElement" /> 实例中 Name 项的值。</summary>
      <returns vsli:raw="The protocol used by this schema setting.">此架构设置使用的协议。</returns>
    </member>
    <member name="T:System.Configuration.SchemeSettingElementCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.Configuration.SchemeSettingElement&quot; /&gt; objects.">表示 <see cref="T:System.Configuration.SchemeSettingElement" /> 对象集合。</summary>
    </member>
    <member name="M:System.Configuration.SchemeSettingElementCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SchemeSettingElementCollection&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.SchemeSettingElementCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.SchemeSettingElementCollection.IndexOf(System.Configuration.SchemeSettingElement)">
      <summary vsli:raw="The index of the specified &lt;see cref=&quot;T:System.Configuration.SchemeSettingElement&quot; /&gt;.">指定的 <see cref="T:System.Configuration.SchemeSettingElement" /> 的索引。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.SchemeSettingElement&quot; /&gt; for the specified index location.">指定索引位置的 <see cref="T:System.Configuration.SchemeSettingElement" />。</param>
      <returns vsli:raw="The index of the specified &lt;see cref=&quot;T:System.Configuration.SchemeSettingElement&quot; /&gt;; otherwise, -1.">指定的 <see cref="T:System.Configuration.SchemeSettingElement" /> 的索引；否则为 -1。</returns>
    </member>
    <member name="P:System.Configuration.SchemeSettingElementCollection.CollectionType">
      <summary vsli:raw="Gets the default collection type of &lt;see cref=&quot;T:System.Configuration.SchemeSettingElementCollection&quot; /&gt;.">获取 <see cref="T:System.Configuration.SchemeSettingElementCollection" /> 的默认集合类型。</summary>
      <returns vsli:raw="The default collection type of &lt;see cref=&quot;T:System.Configuration.SchemeSettingElementCollection&quot; /&gt;.">
        <see cref="T:System.Configuration.SchemeSettingElementCollection" /> 的默认集合类型。</returns>
    </member>
    <member name="P:System.Configuration.SchemeSettingElementCollection.Item(System.Int32)">
      <summary vsli:raw="Gets an item at the specified index in the &lt;see cref=&quot;T:System.Configuration.SchemeSettingElementCollection&quot; /&gt; collection.">获取 <see cref="T:System.Configuration.SchemeSettingElementCollection" /> 集合中指定索引处的项。</summary>
      <param name="index" vsli:raw="The index of the &lt;see cref=&quot;T:System.Configuration.SchemeSettingElement&quot; /&gt; to return.">要返回的 <see cref="T:System.Configuration.SchemeSettingElement" /> 的索引。</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The &lt;paramref name=&quot;index&quot; /&gt; parameter is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; The item specified by the parameter is &lt;see langword=&quot;null&quot; /&gt; or has been removed.">
        <paramref name="index" /> 参数小于零。  
  
- 或 - 
由参数指定的项为 <see langword="null" /> 或已移除。</exception>
      <returns vsli:raw="The specified &lt;see cref=&quot;T:System.Configuration.SchemeSettingElement&quot; /&gt;.">指定的 <see cref="T:System.Configuration.SchemeSettingElement" />。</returns>
    </member>
    <member name="P:System.Configuration.SchemeSettingElementCollection.Item(System.String)">
      <summary vsli:raw="Gets an item from the &lt;see cref=&quot;T:System.Configuration.SchemeSettingElementCollection&quot; /&gt; collection.">获取 <see cref="T:System.Configuration.SchemeSettingElementCollection" /> 集合中的项。</summary>
      <param name="name" vsli:raw="A string reference to the &lt;see cref=&quot;T:System.Configuration.SchemeSettingElement&quot; /&gt; object within the collection.">引用集合中 <see cref="T:System.Configuration.SchemeSettingElement" /> 对象的字符串。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SchemeSettingElement&quot; /&gt; object contained in the collection.">集合中包含的 <see cref="T:System.Configuration.SchemeSettingElement" /> 对象。</returns>
    </member>
    <member name="T:System.Configuration.SectionInformation">
      <summary vsli:raw="Contains metadata about an individual section within the configuration hierarchy. This class cannot be inherited.">包含有关配置层次结构中单个节的元数据。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Configuration.SectionInformation.ForceDeclaration">
      <summary vsli:raw="Forces the associated configuration section to appear in the configuration file.">强制关联的配置节出现在配置文件中。</summary>
    </member>
    <member name="M:System.Configuration.SectionInformation.ForceDeclaration(System.Boolean)">
      <summary vsli:raw="Forces the associated configuration section to appear in the configuration file, or removes an existing section from the configuration file.">强制关联的配置节出现在配置文件中，或者从配置文件中移除现有节。</summary>
      <param name="force" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the associated section should be written in the configuration file; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果应将关联的节写入配置文件，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="&lt;paramref name=&quot;force&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt; and the associated section cannot be exported to the child configuration file, or it is undeclared.">
        <paramref name="force" /> 为 <see langword="true" />，且关联的节无法导出到子配置文件，或者该节未声明。</exception>
    </member>
    <member name="M:System.Configuration.SectionInformation.GetParentSection">
      <summary vsli:raw="Gets the configuration section that contains the configuration section associated with this object.">获取配置节，其中包含与此对象关联的配置节。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The method is invoked from a parent section.">该方法是从父节调用。</exception>
      <returns vsli:raw="The configuration section that contains the &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; that is associated with this &lt;see cref=&quot;T:System.Configuration.SectionInformation&quot; /&gt; object.">配置节，其中包含与此 <see cref="T:System.Configuration.ConfigurationSection" /> 对象关联的 <see cref="T:System.Configuration.SectionInformation" />。</returns>
    </member>
    <member name="M:System.Configuration.SectionInformation.GetRawXml">
      <summary vsli:raw="Returns an XML node object that represents the associated configuration-section object.">返回一个 XML 节点对象，表示关联的配置节对象。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This configuration object is locked and cannot be edited.">此配置对象已锁定，无法进行编辑。</exception>
      <returns vsli:raw="The XML representation for this configuration section.">此配置节的 XML 表示形式。</returns>
    </member>
    <member name="M:System.Configuration.SectionInformation.ProtectSection(System.String)">
      <summary vsli:raw="Marks a configuration section for protection.">标记用于保护的配置节。</summary>
      <param name="protectionProvider" vsli:raw="The name of the protection provider to use.">要使用的保护提供程序的名称。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Configuration.SectionInformation.AllowLocation&quot; /&gt; property is set to &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; The target section is already a protected data section.">将 <see cref="P:System.Configuration.SectionInformation.AllowLocation" /> 属性设置为 <see langword="false" />。  
  
- 或 - 
目标部分已是受保护的数据部分。</exception>
    </member>
    <member name="M:System.Configuration.SectionInformation.RevertToParent">
      <summary vsli:raw="Causes the associated configuration section to inherit all its values from the parent section.">导致关联的配置节从其父节继承所有值。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This method cannot be called outside editing mode.">只有在编辑模式下才能调用此方法。</exception>
    </member>
    <member name="M:System.Configuration.SectionInformation.SetRawXml(System.String)">
      <summary vsli:raw="Sets the object to an XML representation of the associated configuration section within the configuration file.">在配置文件内，将该对象设置为关联配置节的 XML 表示形式。</summary>
      <param name="rawXml" vsli:raw="The XML to use.">要使用的 XML。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;rawXml&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rawXml" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Configuration.SectionInformation.UnprotectSection">
      <summary vsli:raw="Removes the protected configuration encryption from the associated configuration section.">从关联的配置节中删除受保护的配置加密。</summary>
    </member>
    <member name="P:System.Configuration.SectionInformation.AllowDefinition">
      <summary vsli:raw="Gets or sets a value that indicates where in the configuration file hierarchy the associated configuration section can be defined.">获取或设置一个值，指示配置文件层次结构中可以定义关联配置节的位置。</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The selected value conflicts with a value that is already defined.">选定值与某个已定义的值冲突。</exception>
      <returns vsli:raw="A value that indicates where in the configuration file hierarchy the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object can be declared.">一个值，指示配置文件层次结构中可以声明关联 <see cref="T:System.Configuration.ConfigurationSection" /> 对象的位置。</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.AllowExeDefinition">
      <summary vsli:raw="Gets or sets a value that indicates where in the configuration file hierarchy the associated configuration section can be declared.">获取或设置一个值，指示配置文件层次结构中可以声明关联配置节的位置。</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The selected value conflicts with a value that is already defined.">选定值与某个已定义的值冲突。</exception>
      <returns vsli:raw="A value that indicates where in the configuration file hierarchy the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object can be declared for .exe files.">一个值，指示配置文件层次结构中可为 .exe 文件声明关联 <see cref="T:System.Configuration.ConfigurationSection" /> 对象的位置。</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.AllowLocation">
      <summary vsli:raw="Gets or sets a value that indicates whether the configuration section allows the &lt;see langword=&quot;location&quot; /&gt; attribute.">获取或设置一个值，指示配置节是否允许 <see langword="location" /> 特性。</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The selected value conflicts with a value that is already defined.">选定值与某个已定义的值冲突。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;location&quot; /&gt; attribute is allowed; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">如果允许 <see langword="true" /> 特性，则为 <see langword="location" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.AllowOverride">
      <summary vsli:raw="Gets or sets a value that indicates whether the associated configuration section can be overridden by lower-level configuration files.">获取或设置一个值，指示较低级别配置文件是否可以重写关联的配置节。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the section can be overridden; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果可以重写该节，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.ConfigSource">
      <summary vsli:raw="Gets or sets the name of the include file in which the associated configuration section is defined, if such a file exists.">获取或设置包含文件的名称，关联配置节在其中定义（如果存在这样一个文件）。</summary>
      <returns vsli:raw="The name of the include file in which the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; is defined, if such a file exists; otherwise, an empty string (&quot;&quot;).">包含文件的名称，关联的 <see cref="T:System.Configuration.ConfigurationSection" /> 在其中定义（如果存在这样一个文件）；否则为空字符串 ("")。</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.ForceSave">
      <summary vsli:raw="Gets or sets a value that indicates whether the associated configuration section will be saved even if it has not been modified.">获取或设置一个值，指示是否将保存关联的配置节（即使它未被修改）。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object will be saved even if it has not been modified; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA;Note: If the configuration file is saved (even if there are no modifications), ASP.NET restarts the application1.exe.config.">如果将保存关联的 <see cref="T:System.Configuration.ConfigurationSection" /> 对象（即使它未被修改），则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。  
  
 <block subset="none" type="note"><para>  
 如果保存配置文件（即使没有修改），则 ASP.NET 将重新启动应用程序。</para></block></returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.InheritInChildApplications">
      <summary vsli:raw="Gets or sets a value that indicates whether the settings that are specified in the associated configuration section are inherited by applications that reside in a subdirectory of the relevant application.">获取或设置一个值，该值指示在关联配置节中指定的设置是否由驻留在相关应用程序子目录中的应用程序继承。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the settings specified in this &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object are inherited by child applications; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">如果此 <see cref="T:System.Configuration.ConfigurationSection" /> 对象中指定的设置是由子应用程序继承的，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.IsDeclarationRequired">
      <summary vsli:raw="Gets a value that indicates whether the configuration section must be declared in the configuration file.">获取一个值，该值指示是否必须在配置文件中声明该配置节。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object must be declared in the configuration file; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果必须在配置文件中声明关联的 <see cref="T:System.Configuration.ConfigurationSection" /> 对象，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.IsDeclared">
      <summary vsli:raw="Gets a value that indicates whether the associated configuration section is declared in the configuration file.">获取一个值，指示是否已在配置文件中声明了关联的配置节。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; is declared in the configuration file; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">如果此 <see cref="T:System.Configuration.ConfigurationSection" /> 已在配置文件中声明，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.IsLocked">
      <summary vsli:raw="Gets a value that indicates whether the associated configuration section is locked.">获取一个值，指示关联的配置节是否被锁定。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the section is locked; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果该节被锁定，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.IsProtected">
      <summary vsli:raw="Gets a value that indicates whether the associated configuration section is protected.">获取一个值，指示关联的配置节是否受保护。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; is protected; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果此 <see cref="T:System.Configuration.ConfigurationSection" /> 已被保护，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.Name">
      <summary vsli:raw="Gets the name of the associated configuration section.">获取关联配置节的名称。</summary>
      <returns vsli:raw="The complete name of the configuration section.">配置节的完整名称。</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.OverrideMode">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Configuration.OverrideMode&quot; /&gt; enumeration value that specifies whether the associated configuration section can be overridden by child configuration files.">获取或设置 <see cref="T:System.Configuration.OverrideMode" /> 枚举值，该枚举值指定子配置文件是否可以重写关联的配置节。</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="An attempt was made to change both the &lt;see cref=&quot;P:System.Configuration.SectionInformation.AllowOverride&quot; /&gt; and &lt;see cref=&quot;P:System.Configuration.SectionInformation.OverrideMode&quot; /&gt; properties, which is not supported for compatibility reasons.">尝试更改 <see cref="P:System.Configuration.SectionInformation.AllowOverride" /> 和 <see cref="P:System.Configuration.SectionInformation.OverrideMode" /> 属性，出于兼容性原因，不支持这种更改。</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Configuration.OverrideMode&quot; /&gt; enumeration values.">
        <see cref="T:System.Configuration.OverrideMode" /> 枚举值之一。</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.OverrideModeDefault">
      <summary vsli:raw="Gets or sets a value that specifies the default override behavior of a configuration section by child configuration files.">获取或设置一个值，该值指定子配置文件对配置节的默认重写行为。</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The override behavior is specified in a parent configuration section.">在父配置节中指定重写行为。</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Configuration.OverrideMode&quot; /&gt; enumeration values.">
        <see cref="T:System.Configuration.OverrideMode" /> 枚举值之一。</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.OverrideModeEffective">
      <summary vsli:raw="Gets the override behavior of a configuration section that is in turn based on whether child configuration files can lock the configuration section.">获取配置节的重写行为，而该行为反过来基于子配置文件是否可锁定该配置节。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Configuration.OverrideMode&quot; /&gt; enumeration values.">
        <see cref="T:System.Configuration.OverrideMode" /> 枚举值之一。</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.ProtectionProvider">
      <summary vsli:raw="Gets the protected configuration provider for the associated configuration section.">获取关联配置节的受保护的配置提供程序。</summary>
      <returns vsli:raw="The protected configuration provider for this &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object.">此 <see cref="T:System.Configuration.ConfigurationSection" /> 对象受保护的配置提供程序。</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.RequirePermission">
      <summary vsli:raw="Gets a value that indicates whether the associated configuration section requires access permissions.">获取一个值，指示关联的配置节是否需要访问权限。</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The selected value conflicts with a value that is already defined.">选定值与某个已定义的值冲突。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see langword=&quot;requirePermission&quot; /&gt; attribute is set to &lt;see langword=&quot;true&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">如果将 <see langword="true" /> 特性设置为 <see langword="requirePermission" />，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.RestartOnExternalChanges">
      <summary vsli:raw="Gets or sets a value that specifies whether a change in an external configuration include file requires an application restart.">获取或设置一个值，指定对外部配置包含文件进行更改后是否需要重新启动应用程序。</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The selected value conflicts with a value that is already defined.">选定值与某个已定义的值冲突。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a change in an external configuration include file requires an application restart; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">如果对外部配置包含文件进行更改后需要重新启动应用程序，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.SectionName">
      <summary vsli:raw="Gets the name of the associated configuration section.">获取关联配置节的名称。</summary>
      <returns vsli:raw="The name of the associated &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; object.">关联的 <see cref="T:System.Configuration.ConfigurationSection" /> 对象的名称。</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.Type">
      <summary vsli:raw="Gets or sets the section class name.">获取或设置该节的类名称。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The selected value is &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;).">选定值为 <see langword="null" /> 或空字符串 ("")。</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException" vsli:raw="The selected value conflicts with a value that is already defined.">选定值与某个已定义的值冲突。</exception>
      <returns vsli:raw="The name of the class that is associated with this &lt;see cref=&quot;T:System.Configuration.ConfigurationSection&quot; /&gt; section.">与此 <see cref="T:System.Configuration.ConfigurationSection" /> 节关联的类的名称。</returns>
    </member>
    <member name="T:System.Configuration.SettingAttribute">
      <summary vsli:raw="Represents a custom settings attribute used to associate settings information with a settings property.">表示用于将设置信息关联到设置属性的自定义设置特性。</summary>
    </member>
    <member name="M:System.Configuration.SettingAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.SettingAttribute" /> 类的新实例。</summary>
    </member>
    <member name="T:System.Configuration.SettingChangingEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Configuration.ApplicationSettingsBase.SettingChanging&quot; /&gt; event.">为 <see cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Configuration.SettingChangingEventArgs.#ctor(System.String,System.String,System.String,System.Object,System.Boolean)">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Configuration.SettingChangingEventArgs&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.SettingChangingEventArgs" /> 类的实例。</summary>
      <param name="settingName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the name of the application setting.">包含应用程序设置名称的 <see cref="T:System.String" />。</param>
      <param name="settingClass" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing a category description of the setting. Often this parameter is set to the application settings group name.">包含设置类别说明的 <see cref="T:System.String" />。 此参数常被设置为应用程序设置组的名称。</param>
      <param name="settingKey" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the application settings key.">包含应用程序设置键的 <see cref="T:System.String" />。</param>
      <param name="newValue" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the new value to be assigned to the application settings property.">包含要分配给应用程序设置属性的新值的 <see cref="T:System.Object" />。</param>
      <param name="cancel" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to cancel the event; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果为 <see langword="true" />，则取消事件；否则为 <see langword="false" />。</param>
    </member>
    <member name="P:System.Configuration.SettingChangingEventArgs.NewValue">
      <summary vsli:raw="Gets the new value being assigned to the application settings property.">获取要分配给应用程序设置属性的新值。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that contains the new value to be assigned to the application settings property.">包含要分配给应用程序设置属性的新值的 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="P:System.Configuration.SettingChangingEventArgs.SettingClass">
      <summary vsli:raw="Gets the application settings property category.">获取应用程序设置属性的类别。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing a category description of the setting. Typically, this parameter is set to the application settings group name.">包含设置类别说明的 <see cref="T:System.String" />。 此参数通常被设置为应用程序设置组的名称。</returns>
    </member>
    <member name="P:System.Configuration.SettingChangingEventArgs.SettingKey">
      <summary vsli:raw="Gets the application settings key associated with the property.">获取与属性关联的应用程序设置键。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the application settings key.">包含应用程序设置键的 <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:System.Configuration.SettingChangingEventArgs.SettingName">
      <summary vsli:raw="Gets the name of the application setting associated with the application settings property.">获取与应用程序设置属性关联的应用程序设置的名称。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the name of the application setting.">包含应用程序设置名称的 <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Configuration.SettingChangingEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Configuration.ApplicationSettingsBase.SettingChanging&quot; /&gt; event.">表示用来处理 <see cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" /> 事件的方法。</summary>
      <param name="sender" vsli:raw="The source of the event, typically an application settings wrapper class derived from the &lt;see cref=&quot;T:System.Configuration.ApplicationSettingsBase&quot; /&gt; class.">事件的源，通常为从 <see cref="T:System.Configuration.ApplicationSettingsBase" /> 类派生的应用程序设置包装类。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingChangingEventArgs&quot; /&gt; containing the data for the event.">包含事件数据的 <see cref="T:System.Configuration.SettingChangingEventArgs" />。</param>
    </member>
    <member name="T:System.Configuration.SettingElement">
      <summary vsli:raw="Represents a simplified configuration element used for updating elements in the configuration. This class cannot be inherited.">表示用于更新配置中的元素的简化配置元素。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Configuration.SettingElement.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.SettingElement" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.SettingElement.#ctor(System.String,System.Configuration.SettingsSerializeAs)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; class based on supplied parameters.">基于所提供的参数初始化 <see cref="T:System.Configuration.SettingElement" /> 类的新实例。</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingElement" /> 对象的名称。</param>
      <param name="serializeAs" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsSerializeAs&quot; /&gt; object. This object is an enumeration used as the serialization scheme to store configuration settings.">
        <see cref="T:System.Configuration.SettingsSerializeAs" /> 对象。 此对象是一个枚举，它用作序列化方案以存储配置设置。</param>
    </member>
    <member name="M:System.Configuration.SettingElement.Equals(System.Object)">
      <summary vsli:raw="Compares the current &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; instance to the specified object.">将当前的 <see cref="T:System.Configuration.SettingElement" /> 实例与指定的对象进行比较。</summary>
      <param name="settings" vsli:raw="The object to compare with.">要比较的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; instance is equal to the specified object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Configuration.SettingElement" /> 实例等于指定对象，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.SettingElement.GetHashCode">
      <summary vsli:raw="Gets a unique value representing the &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; current instance.">获取表示当前 <see cref="T:System.Configuration.SettingElement" /> 实例的唯一值。</summary>
      <returns vsli:raw="A unique value representing the &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; current instance.">表示当前 <see cref="T:System.Configuration.SettingElement" /> 实例的唯一值。</returns>
    </member>
    <member name="P:System.Configuration.SettingElement.Name">
      <summary vsli:raw="Gets or sets the name of the &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; object.">获取或设置 <see cref="T:System.Configuration.SettingElement" /> 对象的名称。</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingElement" /> 对象的名称。</returns>
    </member>
    <member name="P:System.Configuration.SettingElement.SerializeAs">
      <summary vsli:raw="Gets or sets the serialization mechanism used to persist the values of the &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; object.">获取或设置用于存留 <see cref="T:System.Configuration.SettingElement" /> 对象的值的序列化机制。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsSerializeAs&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingsSerializeAs" /> 对象。</returns>
    </member>
    <member name="P:System.Configuration.SettingElement.Value">
      <summary vsli:raw="Gets or sets the value of a &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; object by using a &lt;see cref=&quot;T:System.Configuration.SettingValueElement&quot; /&gt; object.">使用 <see cref="T:System.Configuration.SettingElement" /> 对象获取或设置 <see cref="T:System.Configuration.SettingValueElement" /> 对象的值。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingValueElement&quot; /&gt; object containing the value of the &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; object.">包含 <see cref="T:System.Configuration.SettingValueElement" /> 对象的值的 <see cref="T:System.Configuration.SettingElement" /> 对象。</returns>
    </member>
    <member name="T:System.Configuration.SettingElementCollection">
      <summary vsli:raw="Contains a collection of &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; objects. This class cannot be inherited.">包含 <see cref="T:System.Configuration.SettingElement" /> 对象的集合。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Configuration.SettingElementCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingElementCollection&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.SettingElementCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.SettingElementCollection.Add(System.Configuration.SettingElement)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; object to the collection.">将 <see cref="T:System.Configuration.SettingElement" /> 对象添加到集合中。</summary>
      <param name="element" vsli:raw="The &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; object to add to the collection.">要添加到集合的 <see cref="T:System.Configuration.SettingElement" /> 对象。</param>
    </member>
    <member name="M:System.Configuration.SettingElementCollection.Clear">
      <summary vsli:raw="Removes all &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; objects from the collection.">从集合中删除所有 <see cref="T:System.Configuration.SettingElement" /> 对象。</summary>
    </member>
    <member name="M:System.Configuration.SettingElementCollection.Get(System.String)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; object from the collection.">从集合中获取一个 <see cref="T:System.Configuration.SettingElement" /> 对象。</summary>
      <param name="elementKey" vsli:raw="A string value representing the &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; object in the collection.">表示集合中 <see cref="T:System.Configuration.SettingElement" /> 对象的字符串值。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingElement" /> 对象。</returns>
    </member>
    <member name="M:System.Configuration.SettingElementCollection.Remove(System.Configuration.SettingElement)">
      <summary vsli:raw="Removes a &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; object from the collection.">从集合中移除 <see cref="T:System.Configuration.SettingElement" /> 对象。</summary>
      <param name="element" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingElement" /> 对象。</param>
    </member>
    <member name="P:System.Configuration.SettingElementCollection.CollectionType">
      <summary vsli:raw="Gets the type of the configuration collection.">获取配置集合的类型。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationElementCollectionType&quot; /&gt; object of the collection.">集合的 <see cref="T:System.Configuration.ConfigurationElementCollectionType" /> 对象。</returns>
    </member>
    <member name="T:System.Configuration.SettingsAttributeDictionary">
      <summary vsli:raw="Represents a collection of key/value pairs used to describe a configuration object as well as a &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">表示用于描述配置对象以及 <see cref="T:System.Configuration.SettingsProperty" /> 对象的键/值对集合。</summary>
    </member>
    <member name="M:System.Configuration.SettingsAttributeDictionary.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsAttributeDictionary&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.SettingsAttributeDictionary" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.SettingsAttributeDictionary.#ctor(System.Configuration.SettingsAttributeDictionary)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsAttributeDictionary&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.SettingsAttributeDictionary" /> 类的新实例。</summary>
      <param name="attributes" vsli:raw="A collection of key/value pairs that are related to configuration settings.">与配置设置相关的键/值对集合。</param>
    </member>
    <member name="T:System.Configuration.SettingsBase">
      <summary vsli:raw="Provides the base class used to support user property settings.">提供用于支持用户属性设置的基类。</summary>
    </member>
    <member name="M:System.Configuration.SettingsBase.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsBase&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.SettingsBase" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)">
      <summary vsli:raw="Initializes internal properties used by &lt;see cref=&quot;T:System.Configuration.SettingsBase&quot; /&gt; object.">初始化 <see cref="T:System.Configuration.SettingsBase" /> 对象使用的内部属性。</summary>
      <param name="context" vsli:raw="The settings context related to the settings properties.">与设置属性相关的设置上下文。</param>
      <param name="properties" vsli:raw="The settings properties that will be accessible from the &lt;see cref=&quot;T:System.Configuration.SettingsBase&quot; /&gt; instance.">可以从 <see cref="T:System.Configuration.SettingsBase" /> 实例访问的设置属性。</param>
      <param name="providers" vsli:raw="The initialized providers that should be used when loading and saving property values.">加载和保存属性值时应使用的初始化提供程序。</param>
    </member>
    <member name="M:System.Configuration.SettingsBase.Save">
      <summary vsli:raw="Stores the current values of the settings properties.">存储设置属性的当前值。</summary>
    </member>
    <member name="M:System.Configuration.SettingsBase.Synchronized(System.Configuration.SettingsBase)">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Configuration.SettingsBase&quot; /&gt; class that is synchronized (thread safe).">提供同步（线程安全）的 <see cref="T:System.Configuration.SettingsBase" /> 类。</summary>
      <param name="settingsBase" vsli:raw="The class used to support user property settings.">用于支持用户属性设置的类。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsBase&quot; /&gt; class that is synchronized.">同步的 <see cref="T:System.Configuration.SettingsBase" /> 类。</returns>
    </member>
    <member name="P:System.Configuration.SettingsBase.Context">
      <summary vsli:raw="Gets the associated settings context.">获取关联的设置上下文。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsContext&quot; /&gt; associated with the settings instance.">与设置实例关联的 <see cref="T:System.Configuration.SettingsContext" />。</returns>
    </member>
    <member name="P:System.Configuration.SettingsBase.IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the object is synchronized (thread safe).">获取一个值，该值指示访问对象是否同步（线程安全）。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Configuration.SettingsBase&quot; /&gt; is synchronized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果同步对 <see cref="T:System.Configuration.SettingsBase" /> 的访问，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.SettingsBase.Item(System.String)">
      <summary vsli:raw="Gets or sets the value of the specified settings property.">获取或设置指定设置属性的值。</summary>
      <param name="propertyName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the name of the property to access.">包含要访问的属性名称的 <see cref="T:System.String" />。</param>
      <exception cref="T:System.Configuration.SettingsPropertyNotFoundException" vsli:raw="There are no properties associated with the current object, or the specified property could not be found.">没有与当前对象关联的属性，或找不到指定属性。</exception>
      <exception cref="T:System.Configuration.SettingsPropertyIsReadOnlyException" vsli:raw="An attempt was made to set a read-only property.">已尝试设置只读属性。</exception>
      <exception cref="T:System.Configuration.SettingsPropertyWrongTypeException" vsli:raw="The value supplied is of a type incompatible with the settings property, during a set operation.">在设置操作期间，所提供值的类型与设置属性不兼容。</exception>
      <returns vsli:raw="If found, the value of the named settings property.">如果找到，则为该命名的设置属性的值。</returns>
    </member>
    <member name="P:System.Configuration.SettingsBase.Properties">
      <summary vsli:raw="Gets the collection of settings properties.">获取设置属性的集合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsPropertyCollection&quot; /&gt; collection containing all the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; objects.">包含所有 <see cref="T:System.Configuration.SettingsPropertyCollection" /> 对象的 <see cref="T:System.Configuration.SettingsProperty" /> 集合。</returns>
    </member>
    <member name="P:System.Configuration.SettingsBase.PropertyValues">
      <summary vsli:raw="Gets a collection of settings property values.">获取设置属性值的集合。</summary>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; objects representing the actual data values for the properties managed by the &lt;see cref=&quot;T:System.Configuration.SettingsBase&quot; /&gt; instance.">一个 <see cref="T:System.Configuration.SettingsPropertyValue" /> 对象的集合，表示 <see cref="T:System.Configuration.SettingsBase" /> 实例所管理属性的实际数据值。</returns>
    </member>
    <member name="P:System.Configuration.SettingsBase.Providers">
      <summary vsli:raw="Gets a collection of settings providers.">获取设置提供程序的集合。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsProviderCollection&quot; /&gt; containing &lt;see cref=&quot;T:System.Configuration.SettingsProvider&quot; /&gt; objects.">一个包含 <see cref="T:System.Configuration.SettingsProviderCollection" /> 对象的 <see cref="T:System.Configuration.SettingsProvider" />。</returns>
    </member>
    <member name="T:System.Configuration.SettingsContext">
      <summary vsli:raw="Provides contextual information that the provider can use when persisting settings.">提供程序在保持设置时可使用的上下文信息。</summary>
    </member>
    <member name="M:System.Configuration.SettingsContext.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsContext&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.SettingsContext" /> 类的新实例。</summary>
    </member>
    <member name="T:System.Configuration.SettingsDescriptionAttribute">
      <summary vsli:raw="Provides a string that describes an individual configuration property. This class cannot be inherited.">提供描述单个配置属性的字符串。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Configuration.SettingsDescriptionAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Configuration.SettingsDescriptionAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.SettingsDescriptionAttribute" /> 类的实例。</summary>
      <param name="description" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; used as descriptive text.">用作说明性文字的 <see cref="T:System.String" />。</param>
    </member>
    <member name="P:System.Configuration.SettingsDescriptionAttribute.Description">
      <summary vsli:raw="Gets the descriptive text for the associated configuration property.">获取关联的配置属性的说明性文字。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the descriptive text for the associated configuration property.">包含关联的配置属性的说明性文字的 <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Configuration.SettingsGroupDescriptionAttribute">
      <summary vsli:raw="Provides a string that describes an application settings property group. This class cannot be inherited.">提供描述应用程序设置属性组的字符串。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Configuration.SettingsGroupDescriptionAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsGroupDescriptionAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.SettingsGroupDescriptionAttribute" /> 类的新实例。</summary>
      <param name="description" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the descriptive text for the application settings group.">一个 <see cref="T:System.String" />，包含应用程序设置组的说明性文字。</param>
    </member>
    <member name="P:System.Configuration.SettingsGroupDescriptionAttribute.Description">
      <summary vsli:raw="The descriptive text for the application settings properties group.">应用程序设置属性组的说明性文字。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the descriptive text for the application settings group.">一个 <see cref="T:System.String" />，包含应用程序设置组的说明性文字。</returns>
    </member>
    <member name="T:System.Configuration.SettingsGroupNameAttribute">
      <summary vsli:raw="Specifies a name for application settings property group. This class cannot be inherited.">为应用程序设置属性组指定名称。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Configuration.SettingsGroupNameAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsGroupNameAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.SettingsGroupNameAttribute" /> 类的新实例。</summary>
      <param name="groupName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the name of the application settings property group.">包含应用程序设置属性组名称的 <see cref="T:System.String" />。</param>
    </member>
    <member name="P:System.Configuration.SettingsGroupNameAttribute.GroupName">
      <summary vsli:raw="Gets the name of the application settings property group.">获取应用程序设置属性组的名称。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the name of the application settings property group.">包含应用程序设置属性组名称的 <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Configuration.SettingsLoadedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Configuration.ApplicationSettingsBase.SettingsLoaded&quot; /&gt; event.">为 <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" /> 事件提供数据。</summary>
    </member>
    <member name="M:System.Configuration.SettingsLoadedEventArgs.#ctor(System.Configuration.SettingsProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsLoadedEventArgs&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.SettingsLoadedEventArgs" /> 类的新实例。</summary>
      <param name="provider" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsProvider&quot; /&gt; object from which settings are loaded.">从中加载设置的 <see cref="T:System.Configuration.SettingsProvider" /> 对象。</param>
    </member>
    <member name="P:System.Configuration.SettingsLoadedEventArgs.Provider">
      <summary vsli:raw="Gets the settings provider used to store configuration settings.">获取用于存储配置设置的设置提供程序。</summary>
      <returns vsli:raw="A settings provider.">设置提供程序。</returns>
    </member>
    <member name="T:System.Configuration.SettingsLoadedEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Configuration.ApplicationSettingsBase.SettingsLoaded&quot; /&gt; event.">表示用来处理 <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" /> 事件的方法。</summary>
      <param name="sender" vsli:raw="The source of the event, typically the settings class.">事件的源，通常为设置类。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsLoadedEventArgs&quot; /&gt; object that contains the event data.">包含事件数据的 <see cref="T:System.Configuration.SettingsLoadedEventArgs" /> 对象。</param>
    </member>
    <member name="T:System.Configuration.SettingsManageability">
      <summary vsli:raw="Provides values to indicate which services should be made available to application settings.">提供若干值，以指示应该对应用程序设置使用哪些服务。</summary>
    </member>
    <member name="F:System.Configuration.SettingsManageability.Roaming">
      <summary vsli:raw="Enables application settings to be stored in roaming user profiles. For more information about roaming user profiles, see Isolated Storage and Roaming.">使应用程序设置可以存储在漫游用户配置文件中。 有关漫游用户策略文件的详细信息，请参阅独立存储和漫游。</summary>
    </member>
    <member name="T:System.Configuration.SettingsManageabilityAttribute">
      <summary vsli:raw="Specifies special services for application settings properties. This class cannot be inherited.">为应用程序设置属性指定特殊服务。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Configuration.SettingsManageabilityAttribute.#ctor(System.Configuration.SettingsManageability)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsManageabilityAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.SettingsManageabilityAttribute" /> 类的新实例。</summary>
      <param name="manageability" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsManageability&quot; /&gt; value that enumerates the services being requested.">枚举所请求服务的 <see cref="T:System.Configuration.SettingsManageability" /> 值。</param>
    </member>
    <member name="P:System.Configuration.SettingsManageabilityAttribute.Manageability">
      <summary vsli:raw="Gets the set of special services that have been requested.">获取已请求的特殊服务集。</summary>
      <returns vsli:raw="A value that results from using the logical &lt;see langword=&quot;OR&quot; /&gt; operator to combine all the &lt;see cref=&quot;T:System.Configuration.SettingsManageability&quot; /&gt; enumeration values corresponding to the requested services.">使用逻辑运算符 <see langword="OR" /> 将所有对应于所请求服务的 <see cref="T:System.Configuration.SettingsManageability" /> 枚举值组合在一起所产生的值。</returns>
    </member>
    <member name="T:System.Configuration.SettingsProperty">
      <summary vsli:raw="Used internally as the class that represents metadata about an individual configuration property.">在内部作为类使用，表示有关个别配置属性的元数据。</summary>
    </member>
    <member name="M:System.Configuration.SettingsProperty.#ctor(System.Configuration.SettingsProperty)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; class, based on the supplied parameter.">根据所提供的参数初始化 <see cref="T:System.Configuration.SettingsProperty" /> 类的新实例。</summary>
      <param name="propertyToCopy" vsli:raw="Specifies a copy of an existing &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">指定现有 <see cref="T:System.Configuration.SettingsProperty" /> 对象的副本。</param>
    </member>
    <member name="M:System.Configuration.SettingsProperty.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; class. based on the supplied parameter.">初始化 <see cref="T:System.Configuration.SettingsProperty" /> 类的新实例。 根据提供的参数。</summary>
      <param name="name" vsli:raw="Specifies the name of an existing &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">指定现有 <see cref="T:System.Configuration.SettingsProperty" /> 对象的名称。</param>
    </member>
    <member name="M:System.Configuration.SettingsProperty.#ctor(System.String,System.Type,System.Configuration.SettingsProvider,System.Boolean,System.Object,System.Configuration.SettingsSerializeAs,System.Configuration.SettingsAttributeDictionary,System.Boolean,System.Boolean)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; class based on the supplied parameters.">根据提供的参数创建 <see cref="T:System.Configuration.SettingsProperty" /> 类的新实例。</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingsProperty" /> 对象的名称。</param>
      <param name="propertyType" vsli:raw="The type of &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingsProperty" /> 对象的类型。</param>
      <param name="provider" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsProvider&quot; /&gt; object to use for persistence.">用于持久性的 <see cref="T:System.Configuration.SettingsProvider" /> 对象。</param>
      <param name="isReadOnly" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value specifying whether the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object is read-only.">一个 <see cref="T:System.Boolean" /> 值，指定 <see cref="T:System.Configuration.SettingsProperty" /> 对象是否为只读。</param>
      <param name="defaultValue" vsli:raw="The default value of the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingsProperty" /> 对象的默认值。</param>
      <param name="serializeAs" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsSerializeAs&quot; /&gt; object. This object is an enumeration used to set the serialization scheme for storing application settings.">
        <see cref="T:System.Configuration.SettingsSerializeAs" /> 对象。 此对象是用于设置存储应用程序设置的序列化方案的枚举。</param>
      <param name="attributes" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsAttributeDictionary&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingsAttributeDictionary" /> 对象。</param>
      <param name="throwOnErrorDeserializing" vsli:raw="A Boolean value specifying whether an error will be thrown when the property is unsuccessfully deserialized.">一个布尔值，指定未成功反序列化属性时是否引发错误。</param>
      <param name="throwOnErrorSerializing" vsli:raw="A Boolean value specifying whether an error will be thrown when the property is unsuccessfully serialized.">一个布尔值，指定未成功序列化属性时是否引发错误。</param>
    </member>
    <member name="P:System.Configuration.SettingsProperty.Attributes">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Configuration.SettingsAttributeDictionary&quot; /&gt; object containing the attributes of the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">获取 <see cref="T:System.Configuration.SettingsAttributeDictionary" /> 对象，该对象包含 <see cref="T:System.Configuration.SettingsProperty" /> 对象的特性。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsAttributeDictionary&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingsAttributeDictionary" /> 对象。</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.DefaultValue">
      <summary vsli:raw="Gets or sets the default value of the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">获取或设置 <see cref="T:System.Configuration.SettingsProperty" /> 对象的默认值。</summary>
      <returns vsli:raw="An object containing the default value of the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">包含 <see cref="T:System.Configuration.SettingsProperty" /> 对象的默认值的对象。</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.IsReadOnly">
      <summary vsli:raw="Gets or sets a value specifying whether a &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object is read-only.">获取或设置一个值，该值指定 <see cref="T:System.Configuration.SettingsProperty" /> 对象是否为只读。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="true" /> 是只读的，则为 <see cref="T:System.Configuration.SettingsProperty" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.Name">
      <summary vsli:raw="Gets or sets the name of the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt;.">获取或设置 <see cref="T:System.Configuration.SettingsProperty" /> 的名称。</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt;.">
        <see cref="T:System.Configuration.SettingsProperty" /> 的名称。</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.PropertyType">
      <summary vsli:raw="Gets or sets the type for the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt;.">获取或设置 <see cref="T:System.Configuration.SettingsProperty" /> 的类型。</summary>
      <returns vsli:raw="The type for the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt;.">
        <see cref="T:System.Configuration.SettingsProperty" /> 的类型。</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.Provider">
      <summary vsli:raw="Gets or sets the provider for the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt;.">获取或设置 <see cref="T:System.Configuration.SettingsProperty" /> 的提供程序。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsProvider&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingsProvider" /> 对象。</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.SerializeAs">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Configuration.SettingsSerializeAs&quot; /&gt; object for the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt;.">获取或设置 <see cref="T:System.Configuration.SettingsSerializeAs" /> 的 <see cref="T:System.Configuration.SettingsProperty" /> 对象。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsSerializeAs&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingsSerializeAs" /> 对象。</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.ThrowOnErrorDeserializing">
      <summary vsli:raw="Gets or sets a value specifying whether an error will be thrown when the property is unsuccessfully deserialized.">获取或设置一个值，该值指定未成功反序列化属性时是否引发错误。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the error will be thrown when the property is unsuccessfully deserialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">未成功反序列化属性时如果引发错误，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.ThrowOnErrorSerializing">
      <summary vsli:raw="Gets or sets a value specifying whether an error will be thrown when the property is unsuccessfully serialized.">获取或设置一个值，该值指定未成功序列化属性时是否引发错误。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the error will be thrown when the property is unsuccessfully serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">未成功序列化属性时如果引发错误，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Configuration.SettingsPropertyCollection">
      <summary vsli:raw="Contains a collection of &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; objects.">包含 <see cref="T:System.Configuration.SettingsProperty" /> 对象的集合。</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyCollection&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.SettingsPropertyCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.Add(System.Configuration.SettingsProperty)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object to the collection.">将 <see cref="T:System.Configuration.SettingsProperty" /> 对象添加到集合中。</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingsProperty" /> 对象。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">该集合是只读的。</exception>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.Clear">
      <summary vsli:raw="Removes all &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; objects from the collection.">从集合中删除所有 <see cref="T:System.Configuration.SettingsProperty" /> 对象。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">该集合是只读的。</exception>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.Clone">
      <summary vsli:raw="Creates a copy of the existing collection.">创建现有集合的一个副本。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsPropertyCollection&quot; /&gt; class.">
        <see cref="T:System.Configuration.SettingsPropertyCollection" /> 类。</returns>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies this &lt;see cref=&quot;T:System.Configuration.SettingsPropertyCollection&quot; /&gt; object to an array.">将此 <see cref="T:System.Configuration.SettingsPropertyCollection" /> 对象复制到数组。</summary>
      <param name="array" vsli:raw="The array to copy the object to.">要向其复制对象的数组。</param>
      <param name="index" vsli:raw="The index at which to begin copying.">开始复制的索引位置。</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.GetEnumerator">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object as it applies to the collection.">在将 <see cref="T:System.Collections.IEnumerator" /> 对象应用于集合时获取该对象。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object as it applies to the collection.">应用于集合时的 <see cref="T:System.Collections.IEnumerator" /> 对象。</returns>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.OnAdd(System.Configuration.SettingsProperty)">
      <summary vsli:raw="Performs additional, custom processing when adding to the contents of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyCollection&quot; /&gt; instance.">在添加 <see cref="T:System.Configuration.SettingsPropertyCollection" /> 实例的内容时执行其他自定义处理。</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingsProperty" /> 对象。</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.OnAddComplete(System.Configuration.SettingsProperty)">
      <summary vsli:raw="Performs additional, custom processing after adding to the contents of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyCollection&quot; /&gt; instance.">在添加 <see cref="T:System.Configuration.SettingsPropertyCollection" /> 实例的内容之后执行其他自定义处理。</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingsProperty" /> 对象。</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.OnClear">
      <summary vsli:raw="Performs additional, custom processing when clearing the contents of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyCollection&quot; /&gt; instance.">在清除 <see cref="T:System.Configuration.SettingsPropertyCollection" /> 实例的内容时执行其他自定义处理。</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.OnClearComplete">
      <summary vsli:raw="Performs additional, custom processing after clearing the contents of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyCollection&quot; /&gt; instance.">在清除 <see cref="T:System.Configuration.SettingsPropertyCollection" /> 实例的内容之后执行其他自定义处理。</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.OnRemove(System.Configuration.SettingsProperty)">
      <summary vsli:raw="Performs additional, custom processing when removing the contents of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyCollection&quot; /&gt; instance.">在移除 <see cref="T:System.Configuration.SettingsPropertyCollection" /> 实例的内容时执行其他自定义处理。</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingsProperty" /> 对象。</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.OnRemoveComplete(System.Configuration.SettingsProperty)">
      <summary vsli:raw="Performs additional, custom processing after removing the contents of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyCollection&quot; /&gt; instance.">在移除 <see cref="T:System.Configuration.SettingsPropertyCollection" /> 实例的内容之后执行其他自定义处理。</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingsProperty" /> 对象。</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.Remove(System.String)">
      <summary vsli:raw="Removes a &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object from the collection.">从集合中移除 <see cref="T:System.Configuration.SettingsProperty" /> 对象。</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingsProperty" /> 对象的名称。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">该集合是只读的。</exception>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.SetReadOnly">
      <summary vsli:raw="Sets the collection to be read-only.">将集合设置为只读。</summary>
    </member>
    <member name="P:System.Configuration.SettingsPropertyCollection.Count">
      <summary vsli:raw="Gets a value that specifies the number of &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; objects in the collection.">获取一个值，指定集合中的 <see cref="T:System.Configuration.SettingsProperty" /> 对象数。</summary>
      <returns vsli:raw="The number of &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; objects in the collection.">集合中 <see cref="T:System.Configuration.SettingsProperty" /> 对象的数目。</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyCollection.IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to the collection is synchronized (thread safe).">获取一个值，指示对集合的访问是否同步（线程安全）。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyCollection&quot; /&gt; is synchronized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果同步对 <see cref="T:System.Configuration.SettingsPropertyCollection" /> 的访问，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyCollection.Item(System.String)">
      <summary vsli:raw="Gets the collection item with the specified name.">获取具有指定名称的集合项。</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingsProperty" /> 对象的名称。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object with the specified &lt;paramref name=&quot;name&quot; /&gt;.">具有指定 <paramref name="name" /> 的 <see cref="T:System.Configuration.SettingsProperty" /> 对象。</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyCollection.SyncRoot">
      <summary vsli:raw="Gets the object to synchronize access to the collection.">获取用于同步对集合的访问的对象。</summary>
      <returns vsli:raw="The object to synchronize access to the collection.">用于同步对集合的访问的对象。</returns>
    </member>
    <member name="T:System.Configuration.SettingsPropertyIsReadOnlyException">
      <summary vsli:raw="Provides an exception for read-only &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; objects.">提供只读 <see cref="T:System.Configuration.SettingsProperty" /> 对象的异常。</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyIsReadOnlyException&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.SettingsPropertyIsReadOnlyException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyIsReadOnlyException&quot; /&gt; class based on the supplied parameters.">基于所提供的参数初始化 <see cref="T:System.Configuration.SettingsPropertyIsReadOnlyException" /> 类的新实例。</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that holds the serialized object data about the exception being thrown.">存放有关所引发异常的序列化对象数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object that contains contextual information about the source or destination of the serialized stream.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> 对象，包含有关序列化流的源或目标的上下文信息。</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyIsReadOnlyException&quot; /&gt; class based on a supplied parameter.">根据提供的参数初始化 <see cref="T:System.Configuration.SettingsPropertyIsReadOnlyException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="A string containing an exception message.">包含异常消息的字符串。</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyIsReadOnlyException&quot; /&gt; class based on supplied parameters.">基于所提供的参数初始化 <see cref="T:System.Configuration.SettingsPropertyIsReadOnlyException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="A string containing an exception message.">包含异常消息的字符串。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception.">导致当前异常的异常。</param>
    </member>
    <member name="T:System.Configuration.SettingsPropertyNotFoundException">
      <summary vsli:raw="Provides an exception for &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; objects that are not found.">提供未找到的 <see cref="T:System.Configuration.SettingsProperty" /> 对象的异常。</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyNotFoundException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyNotFoundException&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.SettingsPropertyNotFoundException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyNotFoundException&quot; /&gt; class, based on supplied parameters.">基于所提供的参数初始化 <see cref="T:System.Configuration.SettingsPropertyNotFoundException" /> 类的新实例。</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object that holds the serialized object data about the exception being thrown.">存放有关所引发异常的序列化对象数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; object that contains contextual information about the source or destination of the serialized stream.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> 对象，包含有关序列化流的源或目标的上下文信息。</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyNotFoundException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyNotFoundException&quot; /&gt; class, based on a supplied parameter.">使用所提供的参数初始化 <see cref="T:System.Configuration.SettingsPropertyNotFoundException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="A string containing an exception message.">包含异常消息的字符串。</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyNotFoundException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyNotFoundException&quot; /&gt; class, based on supplied parameters.">基于所提供的参数初始化 <see cref="T:System.Configuration.SettingsPropertyNotFoundException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="A string containing an exception message.">包含异常消息的字符串。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception.">导致当前异常的异常。</param>
    </member>
    <member name="T:System.Configuration.SettingsPropertyValue">
      <summary vsli:raw="Contains the value of a settings property that can be loaded and stored by an instance of &lt;see cref=&quot;T:System.Configuration.SettingsBase&quot; /&gt;.">包含可由 <see cref="T:System.Configuration.SettingsBase" /> 的实例加载和存储的设置属性的值。</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValue.#ctor(System.Configuration.SettingsProperty)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; class, based on supplied parameters.">基于所提供的参数初始化 <see cref="T:System.Configuration.SettingsPropertyValue" /> 类的新实例。</summary>
      <param name="property" vsli:raw="Specifies a &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">指定一个 <see cref="T:System.Configuration.SettingsProperty" /> 对象。</param>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.Deserialized">
      <summary vsli:raw="Gets or sets whether the value of a &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object has been deserialized.">获取或设置 <see cref="T:System.Configuration.SettingsProperty" /> 对象的值是否已反序列化。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of a &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object has been deserialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Configuration.SettingsProperty" /> 对象的值已反序列化，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.IsDirty">
      <summary vsli:raw="Gets or sets whether the value of a &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object has changed.">获取或设置 <see cref="T:System.Configuration.SettingsProperty" /> 对象的值是否已更改。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of a &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object has changed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Configuration.SettingsProperty" /> 对象的值已更改，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.Name">
      <summary vsli:raw="Gets the name of the property from the associated &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">从关联的 <see cref="T:System.Configuration.SettingsProperty" /> 对象中获取属性名。</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingsProperty" /> 对象的名称。</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.Property">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">获取 <see cref="T:System.Configuration.SettingsProperty" /> 对象。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object that describes the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; object.">描述 <see cref="T:System.Configuration.SettingsProperty" /> 对象的 <see cref="T:System.Configuration.SettingsPropertyValue" /> 对象。</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.PropertyValue">
      <summary vsli:raw="Gets or sets the value of the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">获取或设置 <see cref="T:System.Configuration.SettingsProperty" /> 对象的值。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="While attempting to use the default value from the &lt;see cref=&quot;P:System.Configuration.SettingsProperty.DefaultValue&quot; /&gt; property, an error occurred.  Either the attempt to convert &lt;see cref=&quot;P:System.Configuration.SettingsProperty.DefaultValue&quot; /&gt; property to a valid type failed, or the resulting value was not compatible with the type defined by &lt;see cref=&quot;P:System.Configuration.SettingsProperty.PropertyType&quot; /&gt;.">尝试使用 <see cref="P:System.Configuration.SettingsProperty.DefaultValue" /> 属性中的默认值时出现错误。  将 <see cref="P:System.Configuration.SettingsProperty.DefaultValue" /> 属性转换为有效类型的尝试失败，或者得到的值与 <see cref="P:System.Configuration.SettingsProperty.PropertyType" /> 定义的类型不兼容。</exception>
      <returns vsli:raw="The value of the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object. When this value is set, the &lt;see cref=&quot;P:System.Configuration.SettingsPropertyValue.IsDirty&quot; /&gt; property is set to &lt;see langword=&quot;true&quot; /&gt; and &lt;see cref=&quot;P:System.Configuration.SettingsPropertyValue.UsingDefaultValue&quot; /&gt; is set to &lt;see langword=&quot;false&quot; /&gt;.  &#xA;  &#xA; When a value is first accessed from the &lt;see cref=&quot;P:System.Configuration.SettingsPropertyValue.PropertyValue&quot; /&gt; property, and if the value was initially stored into the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; object as a serialized representation using the &lt;see cref=&quot;P:System.Configuration.SettingsPropertyValue.SerializedValue&quot; /&gt; property, the &lt;see cref=&quot;P:System.Configuration.SettingsPropertyValue.PropertyValue&quot; /&gt; property will trigger deserialization of the underlying value.  As a side effect, the &lt;see cref=&quot;P:System.Configuration.SettingsPropertyValue.Deserialized&quot; /&gt; property will be set to &lt;see langword=&quot;true&quot; /&gt;.  &#xA;  &#xA; If this chain of events occurs in ASP.NET, and if an error occurs during the deserialization process, the error is logged using the health-monitoring feature of ASP.NET. By default, this means that deserialization errors will show up in the Application Event Log when running under ASP.NET. If this process occurs outside of ASP.NET, and if an error occurs during deserialization, the error is suppressed, and the remainder of the logic during deserialization occurs. If there is no serialized value to deserialize when the deserialization is attempted, then &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; object will instead attempt to return a default value if one was configured as defined on the associated &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; instance. In this case, if the &lt;see cref=&quot;P:System.Configuration.SettingsProperty.DefaultValue&quot; /&gt; property was set to either &lt;see langword=&quot;null&quot; /&gt;, or to the string &quot;[null]&quot;, then the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; object will initialize the &lt;see cref=&quot;P:System.Configuration.SettingsPropertyValue.PropertyValue&quot; /&gt; property to either &lt;see langword=&quot;null&quot; /&gt; for reference types, or to the default value for the associated value type.  On the other hand, if &lt;see cref=&quot;P:System.Configuration.SettingsProperty.DefaultValue&quot; /&gt; property holds a valid object reference or string value (other than &quot;[null]&quot;), then the &lt;see cref=&quot;P:System.Configuration.SettingsProperty.DefaultValue&quot; /&gt; property is returned instead.  &#xA;  &#xA; If there is no serialized value to deserialize when the deserialization is attempted, and no default value was specified, then an empty string will be returned for string types. For all other types, a default instance will be returned by calling &lt;see cref=&quot;M:System.Activator.CreateInstance(System.Type)&quot; /&gt; - for reference types this means an attempt will be made to create an object instance using the parameterless constructor.  If this attempt fails, then &lt;see langword=&quot;null&quot; /&gt; is returned.">
        <see cref="T:System.Configuration.SettingsProperty" /> 对象的值。 设置此值时，<see cref="P:System.Configuration.SettingsPropertyValue.IsDirty" /> 属性设置为 <see langword="true" />，而 <see cref="P:System.Configuration.SettingsPropertyValue.UsingDefaultValue" /> 设置为 <see langword="false" />。  
  
第一次访问 <see cref="P:System.Configuration.SettingsPropertyValue.PropertyValue" /> 属性中的某个值时，如果该值最初是用 <see cref="T:System.Configuration.SettingsPropertyValue" /> 属性以序列化表示形式存储在 <see cref="P:System.Configuration.SettingsPropertyValue.SerializedValue" /> 对象中的，则 <see cref="P:System.Configuration.SettingsPropertyValue.PropertyValue" /> 属性将触发基础值的反序列化。  其副作用是，<see cref="P:System.Configuration.SettingsPropertyValue.Deserialized" /> 属性将设置为 <see langword="true" />。  
  
如果此事件链发生在 ASP.NET 内，当反序列化过程中出现错误时，ASP.NET 的运行状况监视功能会将错误记录下来。 默认情况下，这意味着在 ASP.NET 下运行时，反序列化错误将显示在应用程序事件日志中。 如果此过程发生在 ASP.NET 外，当反序列化过程中出现错误时，将取消显示错误，反序列化过程中的其余逻辑部分仍会发生。 当尝试反序列化时，如果不存在可以反序列化的序列化值，则 <see cref="T:System.Configuration.SettingsPropertyValue" /> 对象将尝试返回默认值（如果按照关联的 <see cref="T:System.Configuration.SettingsProperty" /> 实例的定义配置了默认值）。 在这种情况下，如果 <see cref="P:System.Configuration.SettingsProperty.DefaultValue" /> 属性设置为 <see langword="null" /> 或字符串“[null]”，则 <see cref="T:System.Configuration.SettingsPropertyValue" /> 对象将把 <see cref="P:System.Configuration.SettingsPropertyValue.PropertyValue" /> 属性初始化为 <see langword="null" />（对于引用类型）或默认值（对于关联的值类型）。  另一方面，如果 <see cref="P:System.Configuration.SettingsProperty.DefaultValue" /> 属性包含有效的对象引用或字符串值（不是“[null]”），则返回 <see cref="P:System.Configuration.SettingsProperty.DefaultValue" /> 属性。  
  
当尝试反序列化时，如果不存在可以反序列化的序列化值，而且没有指定默认值，则对于字符串类型返回空字符串。 对于所有其他类型，将通过调用来返回默认实例 <see cref="M:System.Activator.CreateInstance(System.Type)" /> -对于引用类型，这意味着将尝试使用无参数构造函数创建对象实例。  如果此尝试失败，则返回 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.SerializedValue">
      <summary vsli:raw="Gets or sets the serialized value of the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">获取或设置 <see cref="T:System.Configuration.SettingsProperty" /> 对象的序列化值。</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The serialization options for the property indicated the use of a string type converter, but a type converter was not available.">属性的序列化选项表明要使用字符串类型转换器，但类型转换器不可用。</exception>
      <returns vsli:raw="The serialized value of a &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingsProperty" /> 对象的序列化值。</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.UsingDefaultValue">
      <summary vsli:raw="Gets a Boolean value specifying whether the value of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; object is the default value as defined by the &lt;see cref=&quot;P:System.Configuration.SettingsProperty.DefaultValue&quot; /&gt; property value on the associated &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">获取一个布尔值，该值指定 <see cref="T:System.Configuration.SettingsPropertyValue" /> 对象的值是否是由关联的 <see cref="P:System.Configuration.SettingsProperty.DefaultValue" /> 对象的 <see cref="T:System.Configuration.SettingsProperty" /> 属性值定义的默认值。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object is the default value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Configuration.SettingsProperty" /> 对象的值是默认值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Configuration.SettingsPropertyValueCollection">
      <summary vsli:raw="Contains a collection of settings property values that map &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; objects to &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; objects.">包含设置属性值的集合，这些值将 <see cref="T:System.Configuration.SettingsProperty" /> 对象映射到 <see cref="T:System.Configuration.SettingsPropertyValue" /> 对象。</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValueCollection&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.Add(System.Configuration.SettingsPropertyValue)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; object to the collection.">将 <see cref="T:System.Configuration.SettingsPropertyValue" /> 对象添加到集合中。</summary>
      <param name="property" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingsPropertyValue" /> 对象。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="An attempt was made to add an item to the collection, but the collection was marked as read-only.">尝试将某项添加到集合中，但集合被标记为只读。</exception>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.Clear">
      <summary vsli:raw="Removes all &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; objects from the collection.">从集合中删除所有 <see cref="T:System.Configuration.SettingsPropertyValue" /> 对象。</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.Clone">
      <summary vsli:raw="Creates a copy of the existing collection.">创建现有集合的一个副本。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValueCollection&quot; /&gt; class.">
        <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> 类。</returns>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies this &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValueCollection&quot; /&gt; collection to an array.">将此 <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> 集合复制到数组。</summary>
      <param name="array" vsli:raw="The array to copy the collection to.">要向其复制集合的数组。</param>
      <param name="index" vsli:raw="The index at which to begin copying.">开始复制的索引位置。</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.GetEnumerator">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object as it applies to the collection.">在将 <see cref="T:System.Collections.IEnumerator" /> 对象应用于集合时获取该对象。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; object as it applies to the collection.">应用于集合时的 <see cref="T:System.Collections.IEnumerator" /> 对象。</returns>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.Remove(System.String)">
      <summary vsli:raw="Removes a &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; object from the collection.">从集合中移除 <see cref="T:System.Configuration.SettingsPropertyValue" /> 对象。</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingsPropertyValue" /> 对象的名称。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="An attempt was made to remove an item from the collection, but the collection was marked as read-only.">尝试从集合中移除某项，但集合被标记为只读。</exception>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.SetReadOnly">
      <summary vsli:raw="Sets the collection to be read-only.">将集合设置为只读。</summary>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValueCollection.Count">
      <summary vsli:raw="Gets a value that specifies the number of &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; objects in the collection.">获取一个值，指定集合中的 <see cref="T:System.Configuration.SettingsPropertyValue" /> 对象数。</summary>
      <returns vsli:raw="The number of &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; objects in the collection.">集合中 <see cref="T:System.Configuration.SettingsPropertyValue" /> 对象的数目。</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValueCollection.IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to the collection is synchronized (thread safe).">获取一个值，该值指示对集合的访问是否同步（线程安全）。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValueCollection&quot; /&gt; collection is synchronized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果对 <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> 集合的访问是同步的，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValueCollection.Item(System.String)">
      <summary vsli:raw="Gets an item from the collection.">获取集合中的项。</summary>
      <param name="name" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; object.">
        <see cref="T:System.Configuration.SettingsPropertyValue" /> 对象。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValue&quot; /&gt; object with the specified &lt;paramref name=&quot;name&quot; /&gt;.">具有指定 <paramref name="name" /> 的 <see cref="T:System.Configuration.SettingsPropertyValue" /> 对象。</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValueCollection.SyncRoot">
      <summary vsli:raw="Gets the object to synchronize access to the collection.">获取用于同步对集合的访问的对象。</summary>
      <returns vsli:raw="The object to synchronize access to the collection.">用于同步对集合的访问的对象。</returns>
    </member>
    <member name="T:System.Configuration.SettingsPropertyWrongTypeException">
      <summary vsli:raw="Provides an exception that is thrown when an invalid type is used with a &lt;see cref=&quot;T:System.Configuration.SettingsProperty&quot; /&gt; object.">提供对 <see cref="T:System.Configuration.SettingsProperty" /> 对象使用无效类型时引发的异常。</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyWrongTypeException&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.SettingsPropertyWrongTypeException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyWrongTypeException&quot; /&gt; class based on the supplied parameters.">基于所提供的参数初始化 <see cref="T:System.Configuration.SettingsPropertyWrongTypeException" /> 类的新实例。</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that holds the serialized object data about the exception being thrown.">包含有关所引发异常的序列化对象数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains contextual information about the source or destination of the serialized stream.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> 包含有关序列化流的源或目标的上下文信息。</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyWrongTypeException&quot; /&gt; class based on the supplied parameter.">根据提供的参数初始化 <see cref="T:System.Configuration.SettingsPropertyWrongTypeException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="A string containing an exception message.">包含异常消息的字符串。</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsPropertyWrongTypeException&quot; /&gt; class based on the supplied parameters.">基于所提供的参数初始化 <see cref="T:System.Configuration.SettingsPropertyWrongTypeException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="A string containing an exception message.">包含异常消息的字符串。</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception.">导致当前异常的异常。</param>
    </member>
    <member name="T:System.Configuration.SettingsProvider">
      <summary vsli:raw="Acts as a base class for deriving custom settings providers in the application settings architecture.">在应用程序设置结构中作为派生自定义设置提供程序的基类。</summary>
    </member>
    <member name="M:System.Configuration.SettingsProvider.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Configuration.SettingsProvider&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.SettingsProvider" /> 类的实例。</summary>
    </member>
    <member name="M:System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
      <summary vsli:raw="Returns the collection of settings property values for the specified application instance and settings property group.">返回指定应用程序实例的设置属性值集合和设置属性组。</summary>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsContext&quot; /&gt; describing the current application use.">
        <see cref="T:System.Configuration.SettingsContext" />，描述当前应用程序的用法。</param>
      <param name="collection" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsPropertyCollection&quot; /&gt; containing the settings property group whose values are to be retrieved.">一个包含设置属性组（将要检索该组中的值）的 <see cref="T:System.Configuration.SettingsPropertyCollection" />。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValueCollection&quot; /&gt; containing the values for the specified settings property group.">一个包含指定设置属性组的值的 <see cref="T:System.Configuration.SettingsPropertyValueCollection" />。</returns>
    </member>
    <member name="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)">
      <summary vsli:raw="Sets the values of the specified group of property settings.">设置指定的属性设置组的值。</summary>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsContext&quot; /&gt; describing the current application usage.">描述当前应用程序用法的 <see cref="T:System.Configuration.SettingsContext" />。</param>
      <param name="collection" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsPropertyValueCollection&quot; /&gt; representing the group of property settings to set.">表示要设置的属性设置组的 <see cref="T:System.Configuration.SettingsPropertyValueCollection" />。</param>
    </member>
    <member name="P:System.Configuration.SettingsProvider.ApplicationName">
      <summary vsli:raw="Gets or sets the name of the currently running application.">获取或设置当前运行的应用程序的名称。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the application's shortened name, which does not contain a full path or extension, for example, &lt;c&gt;SimpleAppSettings&lt;/c&gt;.">一个 <see cref="T:System.String" /> ，它包含应用程序的短名称，该名称不包含完整路径或扩展名，例如 <c>SimpleAppSettings</c>。</returns>
    </member>
    <member name="T:System.Configuration.SettingsProviderAttribute">
      <summary vsli:raw="Specifies the settings provider used to provide storage for the current application settings class or property. This class cannot be inherited.">指定用于存储当前应用程序设置类或属性的设置提供程序。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Configuration.SettingsProviderAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Configuration.SettingsProviderAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.SettingsProviderAttribute" /> 类的实例。</summary>
      <param name="providerTypeName" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the name of the settings provider.">包含设置提供程序名称的 <see cref="T:System.String" />。</param>
    </member>
    <member name="M:System.Configuration.SettingsProviderAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsProviderAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.SettingsProviderAttribute" /> 类的新实例。</summary>
      <param name="providerType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; containing the settings provider type.">包含设置提供程序类型的 <see cref="T:System.Type" />。</param>
    </member>
    <member name="P:System.Configuration.SettingsProviderAttribute.ProviderTypeName">
      <summary vsli:raw="Gets the type name of the settings provider.">获取设置提供程序的类型名称。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the name of the settings provider.">包含设置提供程序名称的 <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Configuration.SettingsProviderCollection">
      <summary vsli:raw="Represents a collection of application settings providers.">表示应用程序设置提供程序的集合。</summary>
    </member>
    <member name="M:System.Configuration.SettingsProviderCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingsProviderCollection&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.SettingsProviderCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.SettingsProviderCollection.Add(System.Configuration.Provider.ProviderBase)">
      <summary vsli:raw="Adds a new settings provider to the collection.">将新设置提供程序添加到集合中。</summary>
      <param name="provider" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.Provider.ProviderBase&quot; /&gt; to add to the collection.">要添加到集合中的 <see cref="T:System.Configuration.Provider.ProviderBase" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;provider&quot; /&gt; parameter is not of type &lt;see cref=&quot;T:System.Configuration.SettingsProvider&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.Configuration.Provider.ProviderBase.Name&quot; /&gt; property of the provider parameter is null or an empty string.  &#xA;  &#xA; -or-  &#xA;  &#xA; A settings provider with the same &lt;see cref=&quot;P:System.Configuration.Provider.ProviderBase.Name&quot; /&gt; already exists in the collection.">
        <paramref name="provider" /> 参数的类型不为 <see cref="T:System.Configuration.SettingsProvider" />。  
  
- 或 - 
提供程序参数的 <see cref="P:System.Configuration.Provider.ProviderBase.Name" /> 属性为 null 或是一个空字符串。  
  
- 或 - 
集合中已经存在一个具有相同 <see cref="P:System.Configuration.Provider.ProviderBase.Name" /> 的设置提供程序。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only.">该集合是只读的。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;provider&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="provider" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Configuration.SettingsProviderCollection.Item(System.String)">
      <summary vsli:raw="Gets the settings provider in the collection that matches the specified name.">获取集合中与指定名称相匹配的设置提供程序。</summary>
      <param name="name" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the friendly name of the settings provider.">包含设置提供程序友好名称的 <see cref="T:System.String" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The collection is read-only when setting this value.">当设置此值时，集合为只读。</exception>
      <returns vsli:raw="If found, the &lt;see cref=&quot;T:System.Configuration.SettingsProvider&quot; /&gt; whose name matches that specified by the name parameter; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">如果找到了匹配项，则为与名称参数所指定的名称匹配的 <see cref="T:System.Configuration.SettingsProvider" />；否则为 <see langword="null" />。</returns>
    </member>
    <member name="T:System.Configuration.SettingsSavingEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Configuration.ApplicationSettingsBase.SettingsSaving&quot; /&gt; event.">表示用来处理 <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" /> 事件的方法。</summary>
      <param name="sender" vsli:raw="The source of the event, typically a data container or data-bound collection.">事件的源，通常为数据容器或数据绑定集合。</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CancelEventArgs&quot; /&gt; that contains the event data.">包含事件数据的 <see cref="T:System.ComponentModel.CancelEventArgs" />。</param>
    </member>
    <member name="T:System.Configuration.SettingsSerializeAs">
      <summary vsli:raw="Determines the serialization scheme used to store application settings.">确定用于存储应用程序设置的序列化方案。</summary>
    </member>
    <member name="F:System.Configuration.SettingsSerializeAs.Binary">
      <summary vsli:raw="The settings property is serialized using binary object serialization.">设置属性使用二进制对象序列化方法来进行序列化。</summary>
    </member>
    <member name="F:System.Configuration.SettingsSerializeAs.ProviderSpecific">
      <summary vsli:raw="The settings provider has implicit knowledge of the property or its type and picks an appropriate serialization mechanism. Often used for custom serialization.">设置提供程序具有属性或其类型的隐式知识，将选择适当的序列化机制。 通常用于自定义序列化。</summary>
    </member>
    <member name="F:System.Configuration.SettingsSerializeAs.String">
      <summary vsli:raw="The settings property is serialized as plain text.">设置属性被序列化为纯文本。</summary>
    </member>
    <member name="F:System.Configuration.SettingsSerializeAs.Xml">
      <summary vsli:raw="The settings property is serialized as XML using XML serialization.">使用 XML 序列化将设置属性序列化为 XML。</summary>
    </member>
    <member name="T:System.Configuration.SettingsSerializeAsAttribute">
      <summary vsli:raw="Specifies the serialization mechanism that the settings provider should use. This class cannot be inherited.">指定设置提供程序应使用的序列化机制。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Configuration.SettingsSerializeAsAttribute.#ctor(System.Configuration.SettingsSerializeAs)">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.Configuration.SettingsSerializeAsAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.SettingsSerializeAsAttribute" /> 类的实例。</summary>
      <param name="serializeAs" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsSerializeAs&quot; /&gt; enumerated value that specifies the serialization scheme.">用于指定序列化方案的 <see cref="T:System.Configuration.SettingsSerializeAs" /> 枚举值。</param>
    </member>
    <member name="P:System.Configuration.SettingsSerializeAsAttribute.SerializeAs">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Configuration.SettingsSerializeAs&quot; /&gt; enumeration value that specifies the serialization scheme.">获取用于指定序列化方案的 <see cref="T:System.Configuration.SettingsSerializeAs" /> 枚举值。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SettingsSerializeAs&quot; /&gt; enumerated value that specifies the serialization scheme.">用于指定序列化方案的 <see cref="T:System.Configuration.SettingsSerializeAs" /> 枚举值。</returns>
    </member>
    <member name="T:System.Configuration.SettingValueElement">
      <summary vsli:raw="Contains the XML representing the serialized value of the setting. This class cannot be inherited.">包含表示设置的序列化值的 XML。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Configuration.SettingValueElement.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SettingValueElement&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.SettingValueElement" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.SettingValueElement.Equals(System.Object)">
      <summary vsli:raw="Compares the current &lt;see cref=&quot;T:System.Configuration.SettingValueElement&quot; /&gt; instance to the specified object.">将当前的 <see cref="T:System.Configuration.SettingValueElement" /> 实例与指定的对象进行比较。</summary>
      <param name="settingValue" vsli:raw="The object to compare.">要比较的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Configuration.SettingValueElement&quot; /&gt; instance is equal to the specified object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Configuration.SettingValueElement" /> 实例等于指定对象，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.SettingValueElement.GetHashCode">
      <summary vsli:raw="Gets a unique value representing the &lt;see cref=&quot;T:System.Configuration.SettingValueElement&quot; /&gt; current instance.">获取表示当前 <see cref="T:System.Configuration.SettingValueElement" /> 实例的唯一值。</summary>
      <returns vsli:raw="A unique value representing the &lt;see cref=&quot;T:System.Configuration.SettingValueElement&quot; /&gt; current instance.">表示当前 <see cref="T:System.Configuration.SettingValueElement" /> 实例的唯一值。</returns>
    </member>
    <member name="P:System.Configuration.SettingValueElement.ValueXml">
      <summary vsli:raw="Gets or sets the value of a &lt;see cref=&quot;T:System.Configuration.SettingValueElement&quot; /&gt; object by using an &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object.">使用 <see cref="T:System.Configuration.SettingValueElement" /> 对象，获取或设置 <see cref="T:System.Xml.XmlNode" /> 对象的值。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object containing the value of a &lt;see cref=&quot;T:System.Configuration.SettingElement&quot; /&gt;.">包含 <see cref="T:System.Xml.XmlNode" /> 值的 <see cref="T:System.Configuration.SettingElement" /> 对象。</returns>
    </member>
    <member name="T:System.Configuration.SingleTagSectionHandler">
      <summary vsli:raw="Handles configuration sections that are represented by a single XML tag in the .config file.">处理 .config 文件中由单个 XML 标记所表示的各配置节。</summary>
    </member>
    <member name="M:System.Configuration.SingleTagSectionHandler.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SingleTagSectionHandler&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.SingleTagSectionHandler" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.SingleTagSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary vsli:raw="Used internally to create a new instance of this object.">在内部用来创建此对象的新实例。</summary>
      <param name="parent" vsli:raw="The parent of this object.">此对象的父级。</param>
      <param name="context" vsli:raw="The context of this object.">此对象的上下文。</param>
      <param name="section" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; object in the configuration.">配置中的 <see cref="T:System.Xml.XmlNode" /> 对象。</param>
      <returns vsli:raw="The created object handler.">创建的对象处理程序。</returns>
    </member>
    <member name="T:System.Configuration.SpecialSetting">
      <summary vsli:raw="Specifies the special setting category of a application settings property.">指定应用程序设置属性的特殊设置类别。</summary>
    </member>
    <member name="F:System.Configuration.SpecialSetting.ConnectionString">
      <summary vsli:raw="The configuration property represents a connection string, typically for a data store or network resource.">该配置属性表示一个通常用于数据存储区或网络资源的连接字符串。</summary>
    </member>
    <member name="F:System.Configuration.SpecialSetting.WebServiceUrl">
      <summary vsli:raw="The configuration property represents a Uniform Resource Locator (URL) to a Web service.">该配置属性表示 Web 服务的统一资源定位器 (URL)。</summary>
    </member>
    <member name="T:System.Configuration.SpecialSettingAttribute">
      <summary vsli:raw="Indicates that an application settings property has a special significance. This class cannot be inherited.">指示应用程序设置属性具有特别意义。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Configuration.SpecialSettingAttribute.#ctor(System.Configuration.SpecialSetting)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SpecialSettingAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.SpecialSettingAttribute" /> 类的新实例。</summary>
      <param name="specialSetting" vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SpecialSetting&quot; /&gt; enumeration value defining the category of the application settings property.">定义应用程序设置属性的类别的 <see cref="T:System.Configuration.SpecialSetting" /> 枚举值。</param>
    </member>
    <member name="P:System.Configuration.SpecialSettingAttribute.SpecialSetting">
      <summary vsli:raw="Gets the value describing the special setting category of the application settings property.">获取描述应用程序设置属性的特殊设置类别的值。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Configuration.SpecialSetting&quot; /&gt; enumeration value defining the category of the application settings property.">定义应用程序设置属性的类别的 <see cref="T:System.Configuration.SpecialSetting" /> 枚举值。</returns>
    </member>
    <member name="T:System.Configuration.StringValidator">
      <summary vsli:raw="Provides validation of a string.">对字符串进行验证。</summary>
    </member>
    <member name="M:System.Configuration.StringValidator.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.StringValidator&quot; /&gt; class, based on a supplied parameter.">使用所提供的参数初始化 <see cref="T:System.Configuration.StringValidator" /> 类的新实例。</summary>
      <param name="minLength" vsli:raw="An integer that specifies the minimum length of the string value.">一个整数，指定字符串值的最小长度。</param>
    </member>
    <member name="M:System.Configuration.StringValidator.#ctor(System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.StringValidator&quot; /&gt; class, based on supplied parameters.">基于所提供的参数初始化 <see cref="T:System.Configuration.StringValidator" /> 类的新实例。</summary>
      <param name="minLength" vsli:raw="An integer that specifies the minimum length of the string value.">一个整数，指定字符串值的最小长度。</param>
      <param name="maxLength" vsli:raw="An integer that specifies the maximum length of the string value.">一个整数，指定字符串值的最大长度。</param>
    </member>
    <member name="M:System.Configuration.StringValidator.#ctor(System.Int32,System.Int32,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.StringValidator&quot; /&gt; class, based on supplied parameters.">基于所提供的参数初始化 <see cref="T:System.Configuration.StringValidator" /> 类的新实例。</summary>
      <param name="minLength" vsli:raw="An integer that specifies the minimum length of the string value.">一个整数，指定字符串值的最小长度。</param>
      <param name="maxLength" vsli:raw="An integer that specifies the maximum length of the string value.">一个整数，指定字符串值的最大长度。</param>
      <param name="invalidCharacters" vsli:raw="A string that represents invalid characters.">一个表示无效字符的字符串。</param>
    </member>
    <member name="M:System.Configuration.StringValidator.CanValidate(System.Type)">
      <summary vsli:raw="Determines whether an object can be validated based on type.">根据类型确定对象是否可验证。</summary>
      <param name="type" vsli:raw="The object type.">对象类型。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter matches a string; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="type" /> 参数与字符串匹配，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.StringValidator.Validate(System.Object)">
      <summary vsli:raw="Determines whether the value of an object is valid.">确定对象的值是否有效。</summary>
      <param name="value" vsli:raw="The object value.">对象值。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is less than &lt;paramref name=&quot;minValue&quot; /&gt; or greater than &lt;paramref name=&quot;maxValue&quot; /&gt; as defined in the constructor.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;value&quot; /&gt; contains invalid characters.">
        <paramref name="value" /> 小于构造函数中定义的 <paramref name="minValue" /> 或大于构造函数中定义的 <paramref name="maxValue" />。  
  
- 或 - 
 <paramref name="value" /> 包含无效字符。</exception>
    </member>
    <member name="T:System.Configuration.StringValidatorAttribute">
      <summary vsli:raw="Declaratively instructs .NET to perform string validation on a configuration property. This class cannot be inherited.">以声明的方式指示 .NET Framework 对配置属性执行字符串验证。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Configuration.StringValidatorAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.StringValidatorAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.StringValidatorAttribute" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Configuration.StringValidatorAttribute.InvalidCharacters">
      <summary vsli:raw="Gets or sets the invalid characters for the property.">获取或设置属性的无效字符。</summary>
      <returns vsli:raw="The string that contains the set of characters that are not allowed for the property.">包含属性不允许的字符集的字符串。</returns>
    </member>
    <member name="P:System.Configuration.StringValidatorAttribute.MaxLength">
      <summary vsli:raw="Gets or sets the maximum length allowed for the string to assign to the property.">获取或设置分配给属性的字符串允许的最大长度。</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The selected value is less than &lt;see cref=&quot;P:System.Configuration.StringValidatorAttribute.MinLength&quot; /&gt;.">选定值小于 <see cref="P:System.Configuration.StringValidatorAttribute.MinLength" />。</exception>
      <returns vsli:raw="An integer that indicates the maximum allowed length for the string to assign to the property.">一个整数，指示分配给属性的字符串允许的最大长度。</returns>
    </member>
    <member name="P:System.Configuration.StringValidatorAttribute.MinLength">
      <summary vsli:raw="Gets or sets the minimum allowed value for the string to assign to the property.">获取或设置分配给属性的字符串允许的最小值。</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The selected value is greater than &lt;see cref=&quot;P:System.Configuration.StringValidatorAttribute.MaxLength&quot; /&gt;.">选定值大于 <see cref="P:System.Configuration.StringValidatorAttribute.MaxLength" />。</exception>
      <returns vsli:raw="An integer that indicates the allowed minimum length for the string to assign to the property.">一个整数，指示分配给属性的字符串允许的最小长度。</returns>
    </member>
    <member name="P:System.Configuration.StringValidatorAttribute.ValidatorInstance">
      <summary vsli:raw="Gets an instance of the &lt;see cref=&quot;T:System.Configuration.StringValidator&quot; /&gt; class.">获取 <see cref="T:System.Configuration.StringValidator" /> 类的实例。</summary>
      <returns vsli:raw="A current &lt;see cref=&quot;T:System.Configuration.StringValidator&quot; /&gt; settings in a &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorBase&quot; /&gt; validator instance.">
        <see cref="T:System.Configuration.StringValidator" /> 验证程序实例中的当前 <see cref="T:System.Configuration.ConfigurationValidatorBase" /> 设置。</returns>
    </member>
    <member name="T:System.Configuration.SubclassTypeValidator">
      <summary vsli:raw="Validates that an object is a derived class of a specified type.">验证一个对象是否是指定类型的派生类。</summary>
    </member>
    <member name="M:System.Configuration.SubclassTypeValidator.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SubclassTypeValidator&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.SubclassTypeValidator" /> 类的新实例。</summary>
      <param name="baseClass" vsli:raw="The base class to validate against.">作为验证依据的基类。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;baseClass&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="baseClass" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Configuration.SubclassTypeValidator.CanValidate(System.Type)">
      <summary vsli:raw="Determines whether an object can be validated based on type.">根据类型确定对象是否可验证。</summary>
      <param name="type" vsli:raw="The object type.">对象类型。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter matches a type that can be validated; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="type" /> 参数与可验证类型匹配，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.SubclassTypeValidator.Validate(System.Object)">
      <summary vsli:raw="Determines whether the value of an object is valid.">确定对象的值是否有效。</summary>
      <param name="value" vsli:raw="The object value.">对象值。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is not of a &lt;see cref=&quot;T:System.Type&quot; /&gt; that can be derived from &lt;paramref name=&quot;baseClass&quot; /&gt; as defined in the constructor.">
        <paramref name="value" /> 不属于可以从构造函数中定义的 <paramref name="baseClass" /> 中派生的 <see cref="T:System.Type" />。</exception>
    </member>
    <member name="T:System.Configuration.SubclassTypeValidatorAttribute">
      <summary vsli:raw="Declaratively instructs .NET to perform validation on a configuration property. This class cannot be inherited.">以声明方式指示 .NET Framework 对配置属性执行验证。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Configuration.SubclassTypeValidatorAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.SubclassTypeValidatorAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.SubclassTypeValidatorAttribute" /> 类的新实例。</summary>
      <param name="baseClass" vsli:raw="The base class type.">基类类型。</param>
    </member>
    <member name="P:System.Configuration.SubclassTypeValidatorAttribute.BaseClass">
      <summary vsli:raw="Gets the base type of the object being validated.">获取所验证的对象的基类型。</summary>
      <returns vsli:raw="The base type of the object being validated.">所验证的对象的基类型。</returns>
    </member>
    <member name="P:System.Configuration.SubclassTypeValidatorAttribute.ValidatorInstance">
      <summary vsli:raw="Gets the validator attribute instance.">获取验证程序特性实例。</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorBase&quot; /&gt; instance.">当前的 <see cref="T:System.Configuration.ConfigurationValidatorBase" /> 实例。</returns>
    </member>
    <member name="T:System.Configuration.TimeSpanMinutesConverter">
      <summary vsli:raw="Converts a time span expressed in minutes.">转换以分钟表示的时间跨度。</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.TimeSpanMinutesConverter&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.TimeSpanMinutesConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">将 <see cref="T:System.String" /> 转换为 <see cref="T:System.TimeSpan" />。</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">用于类型转换的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象。</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object used during conversion.">转换期间使用的 <see cref="T:System.Globalization.CultureInfo" /> 对象。</param>
      <param name="data" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; object to convert.">要转换的 <see cref="T:System.String" /> 对象。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; representing the &lt;paramref name=&quot;data&quot; /&gt; parameter in minutes.">以分钟表示 <paramref name="data" /> 参数的 <see cref="T:System.TimeSpan" />。</returns>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">将 <see cref="T:System.TimeSpan" /> 转换为 <see cref="T:System.String" />。</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">用于类型转换的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象。</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object used during conversion.">转换期间使用的 <see cref="T:System.Globalization.CultureInfo" /> 对象。</param>
      <param name="value" vsli:raw="The value to convert to.">要转换为的值。</param>
      <param name="type" vsli:raw="The type to convert to.">要转换为的类型。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; representing the &lt;paramref name=&quot;value&quot; /&gt; parameter in minutes.">以分钟表示 <paramref name="value" /> 参数的 <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Configuration.TimeSpanMinutesOrInfiniteConverter">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; expressed in minutes or as a standard infinite time span.">转换以分钟表示（或作为标准的无限时间跨度）的 <see cref="T:System.TimeSpan" />。</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesOrInfiniteConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.TimeSpanMinutesOrInfiniteConverter&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.TimeSpanMinutesOrInfiniteConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesOrInfiniteConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">将 <see cref="T:System.String" /> 转换为 <see cref="T:System.TimeSpan" />。</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">用于类型转换的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象。</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object used during conversion.">转换期间使用的 <see cref="T:System.Globalization.CultureInfo" /> 对象。</param>
      <param name="data" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; object to convert.">要转换的 <see cref="T:System.String" /> 对象。</param>
      <returns vsli:raw="The &lt;see cref=&quot;F:System.TimeSpan.MaxValue&quot;&gt;TimeSpan.MaxValue&lt;/see&gt;, if the &lt;paramref name=&quot;data&quot; /&gt; parameter is the &lt;see cref=&quot;T:System.String&quot; /&gt; &quot;infinite&quot;; otherwise, the &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; representing the &lt;paramref name=&quot;data&quot; /&gt; parameter in minutes.">如果 <paramref name="data" /> 参数为 <see cref="F:System.TimeSpan.MaxValue" />“无限”，则为 <see cref="T:System.String" />；否则为以分钟表示 <paramref name="data" /> 参数的 <see cref="T:System.TimeSpan" />。</returns>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesOrInfiniteConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">将 <see cref="T:System.TimeSpan" /> 转换为 <see cref="T:System.String" />。</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">用于类型转换的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象。</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object used during conversion.">转换期间使用的 <see cref="T:System.Globalization.CultureInfo" /> 对象。</param>
      <param name="value" vsli:raw="The value to convert.">要转换的值。</param>
      <param name="type" vsli:raw="The conversion type.">转换类型。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; &quot;infinite&quot;, if the &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see cref=&quot;F:System.TimeSpan.MaxValue&quot;&gt;TimeSpan.MaxValue&lt;/see&gt;; otherwise, the &lt;see cref=&quot;T:System.String&quot; /&gt; representing the &lt;paramref name=&quot;value&quot; /&gt; parameter in minutes.">如果 <paramref name="value" /> 参数是 <see cref="T:System.String" />，则为 <see cref="F:System.TimeSpan.MaxValue" />“infinite”；否则为以分钟表示 <paramref name="value" /> 参数的 <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Configuration.TimeSpanSecondsConverter">
      <summary vsli:raw="Converts a time span expressed in seconds.">转换以秒表示的时间跨度。</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.TimeSpanSecondsConverter&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.TimeSpanSecondsConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">将 <see cref="T:System.String" /> 转换为 <see cref="T:System.TimeSpan" />。</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">用于类型转换的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象。</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object used during conversion.">转换期间使用的 <see cref="T:System.Globalization.CultureInfo" /> 对象。</param>
      <param name="data" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; object to convert.">要转换的 <see cref="T:System.String" /> 对象。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;data&quot; /&gt; cannot be parsed as an integer value.">无法将 <paramref name="data" /> 分析为整数值。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; representing the &lt;paramref name=&quot;data&quot; /&gt; parameter in seconds.">以秒表示 <paramref name="data" /> 参数的 <see cref="T:System.TimeSpan" />。</returns>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">将 <see cref="T:System.TimeSpan" /> 转换为 <see cref="T:System.String" />。</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">用于类型转换的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象。</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object used during conversion.">转换期间使用的 <see cref="T:System.Globalization.CultureInfo" /> 对象。</param>
      <param name="value" vsli:raw="The value to convert to.">要转换为的值。</param>
      <param name="type" vsli:raw="The type to convert to.">要转换为的类型。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the &lt;paramref name=&quot;value&quot; /&gt; parameter in minutes.">以分钟表示 <paramref name="value" /> 参数的 <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Configuration.TimeSpanSecondsOrInfiniteConverter">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; expressed in seconds or as a standard infinite time span.">转换以秒表示的 <see cref="T:System.TimeSpan" />，或将其转换为标准的无限时间跨度。</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsOrInfiniteConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.TimeSpanSecondsOrInfiniteConverter&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.TimeSpanSecondsOrInfiniteConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsOrInfiniteConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; to a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">将 <see cref="T:System.String" /> 转换为 <see cref="T:System.TimeSpan" />。</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">用于类型转换的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象。</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object used during conversion.">转换期间使用的 <see cref="T:System.Globalization.CultureInfo" /> 对象。</param>
      <param name="data" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; object to convert.">要转换的 <see cref="T:System.String" /> 对象。</param>
      <returns vsli:raw="The &lt;see cref=&quot;F:System.TimeSpan.MaxValue&quot;&gt;TimeSpan.MaxValue&lt;/see&gt;, if the &lt;paramref name=&quot;data&quot; /&gt; parameter is the &lt;see cref=&quot;T:System.String&quot; /&gt; &quot;infinite&quot;; otherwise, the &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; representing the &lt;paramref name=&quot;data&quot; /&gt; parameter in seconds.">如果 <paramref name="data" /> 参数是 <see cref="F:System.TimeSpan.MaxValue" />“infinite”，则为 <see cref="T:System.String" />；否则为以秒表示 <paramref name="data" /> 参数的 <see cref="T:System.TimeSpan" />。</returns>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsOrInfiniteConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; to a. &lt;see cref=&quot;T:System.String&quot; /&gt;.">将 <see cref="T:System.TimeSpan" /> 转换为 <see cref="T:System.String" />。</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">用于类型转换的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象。</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object used during conversion.">转换期间使用的 <see cref="T:System.Globalization.CultureInfo" /> 对象。</param>
      <param name="value" vsli:raw="The value to convert.">要转换的值。</param>
      <param name="type" vsli:raw="The conversion type.">转换类型。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; &quot;infinite&quot;, if the &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see cref=&quot;F:System.TimeSpan.MaxValue&quot;&gt;TimeSpan.MaxValue&lt;/see&gt;; otherwise, the &lt;see cref=&quot;T:System.String&quot; /&gt; representing the &lt;paramref name=&quot;value&quot; /&gt; parameter in seconds.">如果 <paramref name="value" /> 参数是 <see cref="T:System.String" />，则为 <see cref="F:System.TimeSpan.MaxValue" />“infinite”；否则为以秒表示 <paramref name="value" /> 参数的 <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Configuration.TimeSpanValidator">
      <summary vsli:raw="Provides validation of a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; object.">对 <see cref="T:System.TimeSpan" /> 对象进行验证。</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanValidator.#ctor(System.TimeSpan,System.TimeSpan)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.TimeSpanValidator&quot; /&gt; class, based on supplied parameters.">基于所提供的参数初始化 <see cref="T:System.Configuration.TimeSpanValidator" /> 类的新实例。</summary>
      <param name="minValue" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; object that specifies the minimum time allowed to pass validation.">
        <see cref="T:System.TimeSpan" /> 对象，指定通过验证所允许的最早时间。</param>
      <param name="maxValue" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; object that specifies the maximum time allowed to pass validation.">
        <see cref="T:System.TimeSpan" /> 对象，指定通过验证所允许的最晚时间。</param>
    </member>
    <member name="M:System.Configuration.TimeSpanValidator.#ctor(System.TimeSpan,System.TimeSpan,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.TimeSpanValidator&quot; /&gt; class, based on supplied parameters.">基于所提供的参数初始化 <see cref="T:System.Configuration.TimeSpanValidator" /> 类的新实例。</summary>
      <param name="minValue" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; object that specifies the minimum time allowed to pass validation.">
        <see cref="T:System.TimeSpan" /> 对象，指定通过验证所允许的最早时间。</param>
      <param name="maxValue" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; object that specifies the maximum time allowed to pass validation.">
        <see cref="T:System.TimeSpan" /> 对象，指定通过验证所允许的最晚时间。</param>
      <param name="rangeIsExclusive" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the validation range is exclusive.">一个 <see cref="T:System.Boolean" /> 值，指定验证范围是否独占。</param>
    </member>
    <member name="M:System.Configuration.TimeSpanValidator.#ctor(System.TimeSpan,System.TimeSpan,System.Boolean,System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.TimeSpanValidator&quot; /&gt; class, based on supplied parameters.">基于所提供的参数初始化 <see cref="T:System.Configuration.TimeSpanValidator" /> 类的新实例。</summary>
      <param name="minValue" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; object that specifies the minimum time allowed to pass validation.">
        <see cref="T:System.TimeSpan" /> 对象，指定通过验证所允许的最早时间。</param>
      <param name="maxValue" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; object that specifies the maximum time allowed to pass validation.">
        <see cref="T:System.TimeSpan" /> 对象，指定通过验证所允许的最晚时间。</param>
      <param name="rangeIsExclusive" vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; value that specifies whether the validation range is exclusive.">一个 <see cref="T:System.Boolean" /> 值，指定验证范围是否独占。</param>
      <param name="resolutionInSeconds" vsli:raw="An &lt;see cref=&quot;T:System.Int64&quot; /&gt; value that specifies a number of seconds.">指定秒数的 <see cref="T:System.Int64" /> 值。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;resolutionInSeconds&quot; /&gt; is less than &lt;see langword=&quot;0&quot; /&gt;.  &#xA;  &#xA;-or-&#xA;  &#xA; &lt;paramref name=&quot;minValue&quot; /&gt; is greater than &lt;paramref name=&quot;maxValue&quot; /&gt;.">
        <paramref name="resolutionInSeconds" /> 小于 <see langword="0" />。  
  
- 或 - 
 <paramref name="minValue" /> 大于 <paramref name="maxValue" />。</exception>
    </member>
    <member name="M:System.Configuration.TimeSpanValidator.CanValidate(System.Type)">
      <summary vsli:raw="Determines whether the type of the object can be validated.">确定是否可以验证该对象的类型。</summary>
      <param name="type" vsli:raw="The type of the object.">对象的类型。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;type&quot; /&gt; parameter matches a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="type" /> 参数与 <see cref="T:System.TimeSpan" /> 值匹配，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Configuration.TimeSpanValidator.Validate(System.Object)">
      <summary vsli:raw="Determines whether the value of an object is valid.">确定对象的值是否有效。</summary>
      <param name="value" vsli:raw="The value of an object.">对象的值。</param>
    </member>
    <member name="T:System.Configuration.TimeSpanValidatorAttribute">
      <summary vsli:raw="Declaratively instructs .NET to perform time validation on a configuration property. This class cannot be inherited.">以声明的方式指示 .NET Framework 对配置属性执行时间验证。 此类不能被继承。</summary>
    </member>
    <member name="F:System.Configuration.TimeSpanValidatorAttribute.TimeSpanMaxValue">
      <summary vsli:raw="Gets the absolute maximum value allowed.">获取允许的绝对最大值。</summary>
    </member>
    <member name="F:System.Configuration.TimeSpanValidatorAttribute.TimeSpanMinValue">
      <summary vsli:raw="Gets the absolute minimum value allowed.">获取允许的绝对最小值。</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanValidatorAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.TimeSpanValidatorAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.TimeSpanValidatorAttribute" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.ExcludeRange">
      <summary vsli:raw="Gets or sets a value that indicates whether to include or exclude the integers in the range as defined by &lt;see cref=&quot;P:System.Configuration.TimeSpanValidatorAttribute.MinValueString&quot; /&gt; and &lt;see cref=&quot;P:System.Configuration.TimeSpanValidatorAttribute.MaxValueString&quot; /&gt;.">获取或设置一个值，指示在 <see cref="P:System.Configuration.TimeSpanValidatorAttribute.MinValueString" /> 和 <see cref="P:System.Configuration.TimeSpanValidatorAttribute.MaxValueString" /> 所定义的范围内是包含还是排除整数。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value must be excluded; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果必须排除值，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.MaxValue">
      <summary vsli:raw="Gets the absolute maximum &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">获取 <see cref="T:System.TimeSpan" /> 的绝对最大值。</summary>
      <returns vsli:raw="The allowed maximum &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">允许的最大 <see cref="T:System.TimeSpan" /> 值。</returns>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.MaxValueString">
      <summary vsli:raw="Gets or sets the relative maximum &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">获取或设置 <see cref="T:System.TimeSpan" /> 的相对最大值。</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The selected value represents less than &lt;see cref=&quot;P:System.Configuration.TimeSpanValidatorAttribute.MinValue&quot; /&gt;.">选定值小于 <see cref="P:System.Configuration.TimeSpanValidatorAttribute.MinValue" />。</exception>
      <returns vsli:raw="The allowed maximum &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">允许的最大 <see cref="T:System.TimeSpan" /> 值。</returns>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.MinValue">
      <summary vsli:raw="Gets the absolute minimum &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">获取 <see cref="T:System.TimeSpan" /> 的绝对最小值。</summary>
      <returns vsli:raw="The allowed minimum &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">允许的最小 <see cref="T:System.TimeSpan" /> 值。</returns>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.MinValueString">
      <summary vsli:raw="Gets or sets the relative minimum &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">获取或设置 <see cref="T:System.TimeSpan" /> 的相对最小值。</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The selected value represents more than &lt;see cref=&quot;P:System.Configuration.TimeSpanValidatorAttribute.MaxValue&quot; /&gt;.">选定值大于 <see cref="P:System.Configuration.TimeSpanValidatorAttribute.MaxValue" />。</exception>
      <returns vsli:raw="The minimum allowed &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">允许的最小 <see cref="T:System.TimeSpan" /> 值。</returns>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.ValidatorInstance">
      <summary vsli:raw="Gets an instance of the &lt;see cref=&quot;T:System.Configuration.TimeSpanValidator&quot; /&gt; class.">获取 <see cref="T:System.Configuration.TimeSpanValidator" /> 类的实例。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Configuration.ConfigurationValidatorBase&quot; /&gt; validator instance.">
        <see cref="T:System.Configuration.ConfigurationValidatorBase" /> 验证程序实例。</returns>
    </member>
    <member name="T:System.Configuration.TypeNameConverter">
      <summary vsli:raw="Converts between type and string values. This class cannot be inherited.">在类型和字符串值之间转换。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Configuration.TypeNameConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.TypeNameConverter&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.TypeNameConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.TypeNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; object to a &lt;see cref=&quot;T:System.Type&quot; /&gt; object.">将 <see cref="T:System.String" /> 对象转换为 <see cref="T:System.Type" /> 对象。</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">用于类型转换的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象。</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object used during conversion.">转换期间使用的 <see cref="T:System.Globalization.CultureInfo" /> 对象。</param>
      <param name="data" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; object to convert.">要转换的 <see cref="T:System.String" /> 对象。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; value cannot be resolved.">无法解析 <see cref="T:System.Type" /> 值。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the &lt;paramref name=&quot;data&quot; /&gt; parameter.">表示 <paramref name="data" /> 参数的 <see cref="T:System.Type" />。</returns>
    </member>
    <member name="M:System.Configuration.TypeNameConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.Type&quot; /&gt; object to a &lt;see cref=&quot;T:System.String&quot; /&gt; object.">将 <see cref="T:System.Type" /> 对象转换为 <see cref="T:System.String" /> 对象。</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">用于类型转换的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象。</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object used during conversion.">转换期间使用的 <see cref="T:System.Globalization.CultureInfo" /> 对象。</param>
      <param name="value" vsli:raw="The value to convert to.">要转换为的值。</param>
      <param name="type" vsli:raw="The type to convert to.">要转换为的类型。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the &lt;paramref name=&quot;value&quot; /&gt; parameter.">表示 <paramref name="value" /> 参数的 <see cref="T:System.String" />。</returns>
    </member>
    <member name="T:System.Configuration.UriSection">
      <summary vsli:raw="Represents the Uri section within a configuration file.">表示配置文件中的 Uri 节。</summary>
    </member>
    <member name="M:System.Configuration.UriSection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.UriSection&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.UriSection" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Configuration.UriSection.Idn">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Configuration.IdnElement&quot; /&gt; object that contains the configuration setting for International Domain Name (IDN) processing in the &lt;see cref=&quot;T:System.Uri&quot; /&gt; class.">获取一个 <see cref="T:System.Configuration.IdnElement" /> 对象，其中包含 <see cref="T:System.Uri" /> 类中用于国际化域名 (IDN) 处理的配置设置。</summary>
      <returns vsli:raw="The configuration setting for International Domain Name (IDN) processing in the &lt;see cref=&quot;T:System.Uri&quot; /&gt; class.">
        <see cref="T:System.Uri" /> 类中用于国际域名 (IDN) 处理的配置设置。</returns>
    </member>
    <member name="P:System.Configuration.UriSection.IriParsing">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Configuration.IriParsingElement&quot; /&gt; object that contains the configuration setting for International Resource Identifiers (IRI) parsing in the &lt;see cref=&quot;T:System.Uri&quot; /&gt; class.">获取一个 <see cref="T:System.Configuration.IriParsingElement" /> 对象，其中包含 <see cref="T:System.Uri" /> 类中用于国际化资源标识符 (IRI) 分析的配置设置。</summary>
      <returns vsli:raw="The configuration setting for International Resource Identifiers (IRI) parsing in the &lt;see cref=&quot;T:System.Uri&quot; /&gt; class.">
        <see cref="T:System.Uri" /> 类中用于国际化资源标识符 (IRI) 分析的配置设置。</returns>
    </member>
    <member name="P:System.Configuration.UriSection.SchemeSettings">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Configuration.SchemeSettingElementCollection&quot; /&gt; object that contains the configuration settings for scheme parsing in the &lt;see cref=&quot;T:System.Uri&quot; /&gt; class.">获取一个 <see cref="T:System.Configuration.SchemeSettingElementCollection" /> 对象，该对象包含 <see cref="T:System.Uri" /> 类中用于方案分析的配置设置。</summary>
      <returns vsli:raw="The configuration settings for scheme parsing in the &lt;see cref=&quot;T:System.Uri&quot; /&gt; class.">
        <see cref="T:System.Uri" /> 类中用于方案分析的配置设置</returns>
    </member>
    <member name="T:System.Configuration.UserScopedSettingAttribute">
      <summary vsli:raw="Specifies that an application settings group or property contains distinct values for each user of an application. This class cannot be inherited.">指定应用程序设置组或属性对于应用程序的每个用户包含不同的值。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Configuration.UserScopedSettingAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.UserScopedSettingAttribute&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.UserScopedSettingAttribute" /> 类的新实例。</summary>
    </member>
    <member name="T:System.Configuration.UserSettingsGroup">
      <summary vsli:raw="Represents a grouping of related user settings sections within a configuration file. This class cannot be inherited.">表示配置文件内的一组相关用户设置节。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Configuration.UserSettingsGroup.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.UserSettingsGroup&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.UserSettingsGroup" /> 类的新实例。</summary>
    </member>
    <member name="T:System.Configuration.ValidatorCallback">
      <summary vsli:raw="Represents a method to be called after the validation of an object.">表示验证一个对象后要调用的方法。</summary>
      <param name="value" vsli:raw="The callback method.">回调方法。</param>
    </member>
    <member name="T:System.Configuration.WhiteSpaceTrimStringConverter">
      <summary vsli:raw="Converts a string to its canonical format.">将字符串转换为它的规范化格式。</summary>
    </member>
    <member name="M:System.Configuration.WhiteSpaceTrimStringConverter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Configuration.WhiteSpaceTrimStringConverter&quot; /&gt; class.">初始化 <see cref="T:System.Configuration.WhiteSpaceTrimStringConverter" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Configuration.WhiteSpaceTrimStringConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; to canonical form.">将 <see cref="T:System.String" /> 转换为规范化形式。</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">用于类型转换的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象。</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object used during conversion.">转换期间使用的 <see cref="T:System.Globalization.CultureInfo" /> 对象。</param>
      <param name="data" vsli:raw="The &lt;see cref=&quot;T:System.String&quot; /&gt; object to convert.">要转换的 <see cref="T:System.String" /> 对象。</param>
      <returns vsli:raw="An object representing the converted value.">一个表示转换后的值的对象。</returns>
    </member>
    <member name="M:System.Configuration.WhiteSpaceTrimStringConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary vsli:raw="Converts a &lt;see cref=&quot;T:System.String&quot; /&gt; to canonical form.">将 <see cref="T:System.String" /> 转换为规范化形式。</summary>
      <param name="ctx" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; object used for type conversions.">用于类型转换的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 对象。</param>
      <param name="ci" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; object used during conversion.">转换期间使用的 <see cref="T:System.Globalization.CultureInfo" /> 对象。</param>
      <param name="value" vsli:raw="The value to convert to.">要转换为的值。</param>
      <param name="type" vsli:raw="The type to convert to.">要转换为的类型。</param>
      <returns vsli:raw="An object representing the converted value.">一个表示转换后的值的对象。</returns>
    </member>
    <member name="T:System.Drawing.Configuration.SystemDrawingSection">
      <summary vsli:raw="Represents the configuration section used by classes in the &lt;see cref=&quot;N:System.Drawing&quot; /&gt; namespace.">表示在 <see cref="N:System.Drawing" /> 命名空间的类使用的配置节。</summary>
    </member>
    <member name="M:System.Drawing.Configuration.SystemDrawingSection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Configuration.SystemDrawingSection&quot; /&gt; class.">初始化 <see cref="T:System.Drawing.Configuration.SystemDrawingSection" /> 类的新实例。</summary>
    </member>
    <member name="P:System.Drawing.Configuration.SystemDrawingSection.BitmapSuffix">
      <summary vsli:raw="Gets or sets the suffix to append to a file name indicated by a &lt;see cref=&quot;T:System.Drawing.ToolboxBitmapAttribute&quot; /&gt; when an assembly is declared with a &lt;see cref=&quot;T:System.Drawing.BitmapSuffixInSameAssemblyAttribute&quot; /&gt; or a &lt;see cref=&quot;T:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute&quot; /&gt;.">获取或设置使用 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 或 <see cref="T:System.Drawing.BitmapSuffixInSameAssemblyAttribute" /> 声明程序集时，附加至由 <see cref="T:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute" /> 指示的文件名称的后缀。</summary>
      <returns vsli:raw="The bitmap suffix.">位图后缀。</returns>
    </member>
    <member name="T:System.UriIdnScope">
      <summary vsli:raw="Provides the possible values for the configuration setting of the &lt;see cref=&quot;T:System.Configuration.IdnElement&quot; /&gt; in the &lt;see cref=&quot;N:System.Configuration&quot; /&gt; namespace.">提供 <see cref="T:System.Configuration.IdnElement" /> 命名空间中的 <see cref="N:System.Configuration" /> 的配置设置的可能值。</summary>
    </member>
    <member name="F:System.UriIdnScope.All">
      <summary vsli:raw="This value will convert any Unicode domain names to their Punycode equivalents (IDN names).">此值会将所有 Unicode 域名转换为它们的 Punycode 等效项（IDN 名称）。</summary>
    </member>
    <member name="F:System.UriIdnScope.AllExceptIntranet">
      <summary vsli:raw="This value will convert all external Unicode domain names to use the Punycode equivalents (IDN names). In this case to handle international names on the local Intranet, the DNS servers that are used for the Intranet should support Unicode names.">此值会将所有外部 Unicode 域名转换为使用 Punycode 等效项（IDN 名称）。 在这种情况下，若要处理本地 Intranet 上的国际化名称，用于 Intranet 的 DNS 服务器应该支持 Unicode 名称。</summary>
    </member>
    <member name="F:System.UriIdnScope.None">
      <summary vsli:raw="Don't convert any Unicode domain names to use Punycode.">此值不会将任何 Unicode 域名转换为使用 Punycode。 这是与 .NET Framework 2.0 行为一致的默认值。</summary>
    </member>
  </members>
</doc>