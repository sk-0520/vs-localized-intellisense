<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Security.Cryptography.Pkcs</name>
  </assembly>
  <members>
    <member name="T:System.Security.Cryptography.CryptographicAttributeObject">
      <summary>包含一个类型和与该类型相关联的值的集合。</summary>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObject.#ctor(System.Security.Cryptography.Oid)">
      <summary>使用指定的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 对象所表示的特性初始化 <see cref="T:System.Security.Cryptography.Oid" /> 类的新实例。</summary>
      <param name="oid">要存储在此 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 对象中的特性。</param>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObject.#ctor(System.Security.Cryptography.Oid,System.Security.Cryptography.AsnEncodedDataCollection)">
      <summary>使用指定的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 对象所表示的特性和与该特性相关联的一组值（由指定的 <see cref="T:System.Security.Cryptography.Oid" /> 集合表示）来初始化 <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> 类的新实例。</summary>
      <param name="oid">要存储在此 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 对象中的特性。</param>
      <param name="values">与 <paramref name="oid" /> 参数表示的特性关联的一组值。</param>
      <exception cref="T:System.InvalidOperationException">集合中包含重复的项。</exception>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObject.Oid">
      <summary>获取指定特性的对象标识符的 <see cref="T:System.Security.Cryptography.Oid" /> 对象。</summary>
      <returns>特性的对象标识符。</returns>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObject.Values">
      <summary>获取包含与该特性相关联的一组值的 <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> 集合。</summary>
      <returns>与该特性关联的一组值。</returns>
    </member>
    <member name="T:System.Security.Cryptography.CryptographicAttributeObjectCollection">
      <summary>包含一组 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 对象。</summary>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.#ctor">
      <summary>初始化 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.#ctor(System.Security.Cryptography.CryptographicAttributeObject)">
      <summary>初始化 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 类的新实例，将指定的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 添加到集合中。</summary>
      <param name="attribute">添加到集合中的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 对象。</param>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.Add(System.Security.Cryptography.AsnEncodedData)">
      <summary>将指定的 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 对象添加到集合。</summary>
      <param name="asnEncodedData">要添加到集合的 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asnEncodedData" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
      <returns>如果方法返回添加项从零开始的索引，则为 <see langword="true" />；否则，为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.Add(System.Security.Cryptography.CryptographicAttributeObject)">
      <summary>将指定的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 对象添加到集合。</summary>
      <param name="attribute">要添加到集合的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asnEncodedData" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
      <exception cref="T:System.InvalidOperationException">集合中已存在指定的项。</exception>
      <returns>如果方法返回添加项从零开始的索引，则为 <see langword="true" />；否则，为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.CopyTo(System.Security.Cryptography.CryptographicAttributeObject[],System.Int32)">
      <summary>将 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 集合复制到 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 对象的数组。</summary>
      <param name="array">将集合复制到的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 对象的数组。</param>
      <param name="index">将集合复制到的 <paramref name="array" /> 中的从零开始的索引。</param>
      <exception cref="T:System.ArgumentException">为方法提供的某一参数无效。</exception>
      <exception cref="T:System.ArgumentNullException">向方法传递 <see langword="null" /> 而该方法不把它作为有效参数接受。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">参数值超出了被调用方法定义的允许值范围。</exception>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.GetEnumerator">
      <summary>获取集合的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectEnumerator" /> 对象。</summary>
      <returns>如果方法返回可用于枚举集合的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectEnumerator" /> 对象，则为 <see langword="true" />；否则，为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.Remove(System.Security.Cryptography.CryptographicAttributeObject)">
      <summary>从集合中移除指定的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 对象。</summary>
      <param name="attribute">要从集合中移除的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="attribute" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>将此 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 集合的元素复制到 <see cref="T:System.Array" /> 数组，从特定的索引开始。</summary>
      <param name="array">作为从此 <see cref="T:System.Array" /> 复制的元素的目标位置的一维 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 数组。 <see cref="T:System.Array" /> 数组必须具有从零开始的索引。</param>
      <param name="index">
        <paramref name="array" /> 中从零开始的索引，从此处开始复制。</param>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>返回一个循环访问 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 集合的枚举数。</summary>
      <returns>可用于遍历 <see cref="T:System.Collections.IEnumerator" /> 集合的一个 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 对象。</returns>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectCollection.Count">
      <summary>获取集合中的项数。</summary>
      <returns>集合中项的数目。</returns>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectCollection.IsSynchronized">
      <summary>获取一个值，该值指示对集合的访问是否是同步的或线程安全的。</summary>
      <returns>如果对集合的访问是线程安全的，则为 <see langword="true" />；否则，为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectCollection.Item(System.Int32)">
      <summary>获取集合中指定索引位置的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 对象。</summary>
      <param name="index">一个 <see cref="T:System.Int32" /> 值，表示要检索的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 对象的从零开始的索引。</param>
      <returns>指定索引处的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 对象。</returns>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectCollection.SyncRoot">
      <summary>获取用于同步访问集合的 <see cref="T:System.Object" /> 对象。</summary>
      <returns>
        <see cref="T:System.Object" />用于同步对集合的访问的对象 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 。</returns>
    </member>
    <member name="T:System.Security.Cryptography.CryptographicAttributeObjectEnumerator">
      <summary>提供 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 集合的枚举功能。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectEnumerator.MoveNext">
      <summary>将枚举前移到 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 集合中的下一个 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 对象。</summary>
      <returns>如果枚举已成功地移动到下一个 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 对象，则为 <see langword="true" />；如果枚举数位于枚举的末尾，则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectEnumerator.Reset">
      <summary>将枚举重置到 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 集合中的第一个 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 对象。</summary>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectEnumerator.Current">
      <summary>从 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 集合中获取当前的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 对象。</summary>
      <returns>一个 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 对象，表示 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 集合中的当前加密特性。</returns>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectEnumerator.System#Collections#IEnumerator#Current">
      <summary>从 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 集合中获取当前的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 对象。</summary>
      <returns>一个 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 对象，表示 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 集合中的当前加密特性。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> 类定义用于加密操作的算法。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor" /> 构造函数通过使用一组默认参数来创建 <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> 类的实例。</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor(System.Security.Cryptography.Oid)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor(System.Security.Cryptography.Oid)" /> 构造函数使用指定的算法标识符创建 <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> 类的实例。</summary>
      <param name="oid">算法的对象标识符。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor(System.Security.Cryptography.Oid,System.Int32)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor(System.Security.Cryptography.Oid,System.Int32)" /> 构造函数使用指定的算法标识符和密钥长度来创建 <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> 类的实例。</summary>
      <param name="oid">算法的对象标识符。</param>
      <param name="keyLength">密钥长度，以位为单位。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.KeyLength">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.KeyLength" /> 属性设置或检索密钥长度（以位为单位）。 对于使用固定密钥长度的算法，不使用此属性。</summary>
      <returns>一个表示密钥长度（以位为单位）的整数值。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.Oid">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.Oid" /> 属性设置或检索 <see cref="T:System.Security.Cryptography.Oid" /> 对象，该对象指定算法的对象标识符。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Oid" />表示算法的对象。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.Parameters">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.Parameters" /> 属性设置或检索算法所需的任何参数。</summary>
      <returns>一个字节值数组，指定算法所需的任何参数。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.CmsRecipient">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 类定义 CMS/PKCS #7 消息的收件人。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipient.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>使用指定的证书、收件人标识符类型以及公钥算法的默认加密模式来初始化 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 类的新实例。</summary>
      <param name="recipientIdentifierType">用于标识所使用的收件人证书的方案。</param>
      <param name="certificate">为此收件人加密时要使用的证书。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">不支持 <paramref name="recipientIdentifierType" /> 值。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipient.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.RSAEncryptionPadding)">
      <summary>使用指定的 RSA 证书、RSA 加密填充和使用者标识符来初始化 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 类的新实例。</summary>
      <param name="recipientIdentifierType">用于标识所使用的收件人证书的方案。</param>
      <param name="certificate">为此收件人加密时要使用的证书。</param>
      <param name="rsaEncryptionPadding">为此收件人加密时要使用的 RSA 填充模式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> 或 <paramref name="rsaEncryptionPadding" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="certificate" /> 参数公钥未被识别为 RSA 公钥。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipient.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>使用指定的证书、公钥算法的默认加密模式以及 <see cref="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.IssuerAndSerialNumber" /> 使用者标识符来初始化 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 类的新实例。</summary>
      <param name="certificate">为此收件人加密时要使用的证书。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipient.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.RSAEncryptionPadding)">
      <summary>使用指定的 RSA 证书、RSA 加密填充以及 <see cref="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.IssuerAndSerialNumber" /> 使用者标识符来初始化 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 类的新实例。</summary>
      <param name="certificate">为此收件人加密时要使用的证书。</param>
      <param name="rsaEncryptionPadding">为此收件人加密时要使用的 RSA 填充模式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> 或 <paramref name="rsaEncryptionPadding" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="certificate" /> 参数公钥未被识别为 RSA 公钥。

- 或 -

不支持 <paramref name="recipientIdentifierType" /> 值。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipient.Certificate">
      <summary>获取为此收件人加密时要使用的证书。</summary>
      <returns>为此收件人加密时要使用的证书。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipient.RecipientIdentifierType">
      <summary>获取用于标识所使用的收件人证书的方案。</summary>
      <returns>用于标识所使用的收件人证书的方案。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipient.RSAEncryptionPadding">
      <summary>获取为此收件人加密时要使用的 RSA 加密填充。</summary>
      <returns>为此收件人加密时使用的 RSA 加密填充。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 类表示 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 对象的集合。 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 实现 <see cref="T:System.Collections.ICollection" /> 接口。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor" /> 构造函数创建 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 类的实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor(System.Security.Cryptography.Pkcs.CmsRecipient)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor(System.Security.Cryptography.Pkcs.CmsRecipient)" /> 构造函数创建 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 类的实例并添加指定的收件人。</summary>
      <param name="recipient">表示指定的 CMS/PKCS #7 收件人的 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 类的一个实例。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)" /> 构造函数创建 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 类的实例并根据指定的主题标识符和标识收件人的证书集添加收件人。</summary>
      <param name="recipientIdentifierType">指定主题标识符类型的 <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> 枚举的成员。</param>
      <param name="certificates">一个 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> 集合，其中包含标识收件人的证书。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Add(System.Security.Cryptography.Pkcs.CmsRecipient)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Add(System.Security.Cryptography.Pkcs.CmsRecipient)" /> 方法向 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 集合中添加收件人。</summary>
      <param name="recipient">一个 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 对象，表示要向 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 集合中添加的收件人。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="recipient" /> 为 <see langword="null" />。</exception>
      <returns>如果此方法成功，则返回一个 <see cref="T:System.Int32" /> 值，该值表示从零开始插入收件人的位置。  
  
如果此方法失败，则会引发异常。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.CopyTo(System.Array,System.Int32)" /> 方法将 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 集合复制到一个数组中。</summary>
      <param name="array">一个 <see cref="T:System.Array" /> 对象，要将 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 集合复制到其中。</param>
      <param name="index">
        <paramref name="array" /> 中从零开始的索引，<see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 集合将被复制到此位置。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> 不够大，无法保存指定的元素。  

- 或 -

<paramref name="array" /> 未包含正确的维数。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 超出了 <paramref name="array" /> 中的元素范围。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.CopyTo(System.Security.Cryptography.Pkcs.CmsRecipient[],System.Int32)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.CopyTo(System.Security.Cryptography.Pkcs.CmsRecipient[],System.Int32)" /> 方法将 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 集合复制到 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 数组中。</summary>
      <param name="array">
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 对象的数组，<see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 集合将被复制到其中。</param>
      <param name="index">
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 对象数组的从零开始的索引，<see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 集合将被复制到该对象所在的 <paramref name="array" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> 不够大，无法保存指定的元素。  

- 或 -

<paramref name="array" /> 未包含正确的维数。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 超出了 <paramref name="array" /> 中的元素范围。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.GetEnumerator">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.GetEnumerator" /> 方法为 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" /> 集合返回一个 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 对象。</summary>
      <returns>可用于对 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" /> 集合进行枚举的 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 对象。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Remove(System.Security.Cryptography.Pkcs.CmsRecipient)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Remove(System.Security.Cryptography.Pkcs.CmsRecipient)" /> 方法将收件人从 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 集合中移除。</summary>
      <param name="recipient">一个 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 对象，该对象表示要从集合中移除的收件人。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="recipient" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.System#Collections#IEnumerable#GetEnumerator" /> 方法为 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" /> 集合返回一个 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 对象。</summary>
      <returns>可用于对 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" /> 集合进行枚举的 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 对象。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Count">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Count" /> 属性检索 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 集合中的项数。</summary>
      <returns>一个表示集合中项数的 <see cref="T:System.Int32" /> 值。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.IsSynchronized">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.IsSynchronized" /> 属性检索对集合的访问是否为同步的，即线程安全的。 此属性始终返回 <see langword="false" />，表示集合不是线程安全的。</summary>
      <returns>
        <see cref="T:System.Boolean" /> 值为 <see langword="false" />，表示集合不是线程安全的。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Item(System.Int32)">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Item(System.Int32)" /> 属性检索集合中指定索引处的 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 对象。</summary>
      <param name="index">一个表示集合中的索引的 <see cref="T:System.Int32" /> 值。 索引是从零开始的。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">参数值超出了被调用方法定义的允许值范围。</exception>
      <returns>指定索引处的 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 对象。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.SyncRoot">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.SyncRoot" /> 属性检索用于同步访问 <see cref="T:System.Object" /> 集合的 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 对象。</summary>
      <returns>用于同步访问 <see cref="T:System.Object" /> 集合的 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 对象。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" /> 类为 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 集合提供枚举功能。 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" /> 实现 <see cref="T:System.Collections.IEnumerator" /> 接口。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.MoveNext">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.MoveNext" /> 方法将枚举前移到 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 集合中的下一个 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 对象。</summary>
      <returns>如果枚举成功移到下一个 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 对象，则为 <see langword="true" />；如果枚举移到枚举中的最后一项之后，则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.Reset">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.Reset" /> 方法将枚举重置到 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 集合中的第一个 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 对象。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.Current">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.Current" /> 属性从 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 集合中检索当前的 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 对象。</summary>
      <returns>一个 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 对象，表示 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 集合中的当前收信方。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.System#Collections#IEnumerator#Current">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.System#Collections#IEnumerator#Current" /> 属性从 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 集合中检索当前的 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 对象。</summary>
      <returns>一个 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 对象，表示 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 集合中的当前收信方。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.CmsSigner">
      <summary>表示 CMS/PKCS # 7 签名消息的潜在签名者。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor">
      <summary>使用默认值初始化 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.CspParameters)">
      <summary>基于保留的密钥来初始化 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 类的新实例。</summary>
      <param name="parameters">用于描述要使用的签名密钥的 CSP 参数。</param>
      <exception cref="T:System.PlatformNotSupportedException">仅限 .NET Core：不支持此成员。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)">
      <summary>使用指定的使用者标识符类型来初始化 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 类的新实例。</summary>
      <param name="signerIdentifierType">用于标识所使用的签名证书的方案。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>使用指定的签名者证书和使用者标识符类型来初始化 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 类的新实例。</summary>
      <param name="signerIdentifierType">用于标识所使用的签名证书的方案。</param>
      <param name="certificate">私钥将用于对消息进行签名的证书。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.AsymmetricAlgorithm)">
      <summary>使用指定的签名者证书、使用者标识符类型和私钥对象来初始化 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 类的新实例。</summary>
      <param name="signerIdentifierType">枚举值之一，指定用于标识所使用的签名证书的方案。</param>
      <param name="certificate">私钥将用于对消息进行签名的证书。</param>
      <param name="privateKey">对消息进行签名时要使用的私钥对象。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>使用指定的签名者证书来初始化 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 类的新实例。</summary>
      <param name="certificate">私钥将用于对消息进行签名的证书。</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.Certificate">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.CmsSigner.Certificate" /> 属性设置或检索表示签名证书的 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 对象。</summary>
      <returns>一个  <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 表示签名证书的对象。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.Certificates">
      <summary>获取与 <see cref="F:System.Security.Cryptography.X509Certificates.X509IncludeOption.WholeChain" /> 和 <see cref="F:System.Security.Cryptography.X509Certificates.X509IncludeOption.ExcludeRoot" /> 一起考虑的证书集合。</summary>
      <returns>被视为和的证书的集合 <see cref="F:System.Security.Cryptography.X509Certificates.X509IncludeOption.WholeChain" /><see cref="F:System.Security.Cryptography.X509Certificates.X509IncludeOption.ExcludeRoot" /> 。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.DigestAlgorithm">
      <summary>获取或设置用于签名的哈希算法的算法标识符。</summary>
      <returns>要用于签名的哈希算法的算法标识符。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.IncludeOption">
      <summary>获取或设置一个选项，该选项指示应将签名者证书的证书链嵌入已签名消息的部分。</summary>
      <exception cref="T:System.ArgumentException">为方法提供的某一参数无效。</exception>
      <returns>枚举值之一，该值指示签名者证书的证书链应嵌入到签名的消息中的多少。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.PrivateKey">
      <summary>获取或设置要在签名过程中使用的私钥对象。</summary>
      <returns>要在签名过程中使用的私钥，或 <see langword="null" /> 要使用与属性相关联的私钥 <see cref="P:System.Security.Cryptography.Pkcs.CmsSigner.Certificate" /> 。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.SignedAttributes">
      <summary>获取与此签名关联且受该签名保护的特性集合。</summary>
      <returns>与此签名关联的属性集合，这些属性也受签名保护。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.SignerIdentifierType">
      <summary>获取用于标识所使用的签名证书的方案。</summary>
      <exception cref="T:System.ArgumentException">为方法提供的某一参数无效。</exception>
      <returns>用于标识所使用的收件人证书的方案。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.UnsignedAttributes">
      <summary>获取与此签名关联但不受该签名保护的特性集合。</summary>
      <returns>与此签名关联的、不受签名保护的特性集合。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.ContentInfo">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 类表示 CMS/PKCS #7 标准文档中定义的 CMS/PKCS #7 ContentInfo 数据结构。 此数据结构是所有 CMS/PKCS #7 消息的基础。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.ContentInfo.#ctor(System.Byte[])">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.ContentInfo.#ctor(System.Byte[])" /> 构造函数通过使用作为数据的字节值数组和表示内容类型的默认 <paramref name="object identifier" /> (OID) 来创建 <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 类的实例。</summary>
      <param name="content">一个表示数据的字节值数组，要从这些数据创建 <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.ContentInfo.#ctor(System.Security.Cryptography.Oid,System.Byte[])">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.ContentInfo.#ctor(System.Security.Cryptography.Oid,System.Byte[])" /> 构造函数通过使用指定的内容类型和用作数据的字节值数组来创建 <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 类的实例。</summary>
      <param name="contentType">一个 <see cref="T:System.Security.Cryptography.Oid" /> 对象，该对象包含指定内容类型的 <c>object identifier</c> (OID)。 可以是 data、digestedData、encryptedData、envelopedData、hashedData、signedAndEnvelopedData 或 signedData。  有关更多信息，请参阅“备注”。</param>
      <param name="content">一个表示数据的字节值数组，要从这些数据创建 <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.ContentInfo.GetContentType(System.Byte[])">
      <summary>检索编码的 CMS ContentInfo 消息的外部内容类型。</summary>
      <param name="encodedMessage">一个字节值数组，表示要从中检索外部内容类型的编码的 CMS ContentInfo 消息。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="encodedMessage" /> 上声明的默认值为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="encodedMessage" /> 无法解码为有效的 CMS ContentInfo 值。</exception>
      <returns>指定的编码 CMS ContentInfo 消息的外部内容类型。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.ContentInfo.GetContentType(System.ReadOnlySpan{System.Byte})">
      <summary>检索编码的 CMS ContentInfo 消息的外部内容类型。</summary>
      <param name="encodedMessage">字节值的一个只读范围，表示要从中检索外部内容类型的编码的 CMS ContentInfo 消息。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="encodedMessage" /> 无法解码为有效的 CMS ContentInfo 值。</exception>
      <returns>指定的编码 CMS ContentInfo 消息的外部内容类型。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.ContentInfo.Content">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.ContentInfo.Content" /> 属性检索 CMS/PKCS #7 消息的内容。</summary>
      <returns>一个表示内容数据的字节值数组。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.ContentInfo.ContentType">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.ContentInfo.ContentType" /> 属性检索 <see cref="T:System.Security.Cryptography.Oid" /> 对象，该对象包含 CMS/PKCS #7 消息内部内容的内容类型的 <paramref name="object identifier" /> (OID)。</summary>
      <returns>一个 <see cref="T:System.Security.Cryptography.Oid" /> 对象，该对象包含表示内容类型的 OID 值。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.EnvelopedCms">
      <summary>表示封装数据的 CMS/PKCS #7 结构。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor">
      <summary>使用默认值初始化 <see cref="T:System.Security.Cryptography.Pkcs.EnvelopedCms" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)">
      <summary>使用指定的内容信息初始化 <see cref="T:System.Security.Cryptography.Pkcs.EnvelopedCms" /> 类的新实例。</summary>
      <param name="contentInfo">要加密的消息内容。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contentInfo" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Security.Cryptography.Pkcs.AlgorithmIdentifier)">
      <summary>使用指定的对称加密算法和内容信息初始化 <see cref="T:System.Security.Cryptography.Pkcs.EnvelopedCms" /> 类的新实例。</summary>
      <param name="contentInfo">要加密的消息内容。</param>
      <param name="encryptionAlgorithm">加密消息内容时要使用的对称加密算法的标识符。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contentInfo" /> 或 <paramref name="encryptionAlgorithm" /> 参数为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decode(System.Byte[])">
      <summary>将字节数组解码为 CMS/PKCS#7 EnvelopedData 消息。</summary>
      <param name="encodedMessage">包含要解码的字节序列的字节数组。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="encodedMessage" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="encodedMessage" /> 参数未成功解码。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decode(System.ReadOnlySpan{System.Byte})">
      <summary>将提供的数据解码为 CMS/PKCS#7 EnvelopedData 消息。</summary>
      <param name="encodedMessage">要解码的数据。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="encodedMessage" /> 参数未成功解码。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt">
      <summary>在证书存储中搜索匹配的证书和密钥，从而通过任何可用收件人对解码的 CMS/PKCS#7 封装消息的内容进行解密。</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
      <exception cref="T:System.InvalidOperationException">一个方法调用对于对象的当前状态无效。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo)">
      <summary>在证书存储中搜索匹配的证书和密钥，从而通过指定收件人信息对解码的 CMS/PKCS#7 封装消息的内容进行解密。</summary>
      <param name="recipientInfo">用于解密的收件人信息。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="recipientInfo" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
      <exception cref="T:System.InvalidOperationException">一个方法调用对于对象的当前状态无效。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo,System.Security.Cryptography.AsymmetricAlgorithm)">
      <summary>使用指定私钥，通过指定收件人信息对解码的 CMS/PKCS#7 封装消息的内容进行解密。</summary>
      <param name="recipientInfo">用于解密的收件人信息。</param>
      <param name="privateKey">用于对特定于收件人的信息进行解密的私钥。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="recipientInfo" /> 或 <paramref name="privateKey" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
      <exception cref="T:System.InvalidOperationException">一个方法调用对于对象的当前状态无效。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary>在证书存储和提供的集合中搜索匹配的证书和密钥，从而通过指定收件人信息对解码的 CMS/PKCS#7 封装消息的内容进行解密。</summary>
      <param name="recipientInfo">用于解密的收件人信息。</param>
      <param name="extraStore">要使用的证书的集合，以及用于查找收件人证书和私钥的证书存储。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="recipientInfo" /> 或 <paramref name="extraStore" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
      <exception cref="T:System.InvalidOperationException">一个方法调用对于对象的当前状态无效。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary>在证书存储和提供的集合中搜索匹配的证书和密钥，从而通过任何可用收件人信息对解码的 CMS/PKCS#7 封装消息的内容进行解密。</summary>
      <param name="extraStore">要使用的证书的集合，以及用于查找收件人证书和私钥的证书存储。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="extraStore" /> 参数是 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
      <exception cref="T:System.InvalidOperationException">一个方法调用对于对象的当前状态无效。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Encode">
      <summary>对 CMS/PKCS#7 封装消息的内容进行编码并将其作为一个字节数组返回。</summary>
      <exception cref="T:System.InvalidOperationException">一个方法调用对于对象的当前状态无效。</exception>
      <returns>一个字节数组，表示 CMS/PKCS#7 消息的编码形式。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Encrypt(System.Security.Cryptography.Pkcs.CmsRecipient)">
      <summary>针对单个指定收件人，对 CMS/PKCS#7 消息的内容进行加密。</summary>
      <param name="recipient">描述此消息的单个收件人的收件人信息。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="recipient" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Encrypt(System.Security.Cryptography.Pkcs.CmsRecipientCollection)">
      <summary>针对一个或多个收件人，对 CMS/PKCS#7 消息的内容进行加密。</summary>
      <param name="recipients">描述消息收件人的集合。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="recipients" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.Certificates">
      <summary>获取与 CMS/PKCS#7 封装消息关联的证书的集合。</summary>
      <returns>与 CMS/PKCS # 7 封装消息关联的证书的集合。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.ContentEncryptionAlgorithm">
      <summary>获取与此消息关联的对称加密算法的标识符。</summary>
      <returns>与此消息关联的对称加密算法的标识符。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.ContentInfo">
      <summary>获取 CMS/PKCS#7 封装消息的内容信息。</summary>
      <returns>CMS/PKCS # 7 封装消息的内容信息。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.RecipientInfos">
      <summary>获取一个集合，该集合表示解码的消息的收件人列表。 默认值为空集合。</summary>
      <returns>一个集合，该集合表示已解码消息的收件人列表。 默认值为空集合。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.UnprotectedAttributes">
      <summary>获取与 CMS/PKCS#7 封装消息关联的未保护（未加密）属性的集合。</summary>
      <returns>与 CMS/PKCS # 7 封装消息关联的未受保护 () 属性的集合。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.Version">
      <summary>获取解码的 CMS/PKCS#7 封装消息的版本。</summary>
      <returns>已解码的 CMS/PKCS # 7 消息的版本。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo" /> 类定义密钥协议收信方信息。 “密钥协议”算法通常使用 Diffie-Hellman 密钥协议算法，在 Diffie-Hellman 密钥协议算法中，建立共享加密密钥的双方都要参与密钥的生成，当然，双方都认同生成的密钥。 这与密钥传输算法不同，在密钥传输算法中，将由一方单独生成密钥，然后将密钥发送或传输给另一方。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Date">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Date" /> 属性检索发信方开始密钥协议的日期和时间。</summary>
      <exception cref="T:System.InvalidOperationException">接收方标识符类型不是主题键标识符。</exception>
      <returns>发信方开始密钥协议的日期和时间。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.EncryptedKey">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.EncryptedKey" /> 属性检索加密的收信方密钥材料。</summary>
      <returns>一个字节值数组，其中包含加密的收信方密钥材料。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.KeyEncryptionAlgorithm">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.KeyEncryptionAlgorithm" /> 属性检索用于执行密钥协议的算法。</summary>
      <returns>用于执行密钥协议的算法的值。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OriginatorIdentifierOrKey">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OriginatorIdentifierOrKey" /> 属性检索关于密钥协议的发信方的信息，以获取保证协议的密钥协议算法。</summary>
      <returns>一个对象，其中包含关于密钥协议的发信方的信息。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OtherKeyAttribute">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OtherKeyAttribute" /> 属性检索密钥材料的特性。</summary>
      <exception cref="T:System.InvalidOperationException">接收方标识符类型不是主题键标识符。</exception>
      <returns>密钥材料的特性。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.RecipientIdentifier">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.RecipientIdentifier" /> 属性检索收信方的标识符。</summary>
      <returns>收件人的标识符。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Version">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Version" /> 属性检索密钥协议收信方的版本。 对于此类中的对象，这是自动设置的，该值暗示收信方参与的是密钥协议算法。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo" /> 对象的版本。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo" /> 类定义密钥传输收信方信息。        “密钥传输”算法通常使用 RSA 算法，在 RSA 算法中，发信方通过生成一个加密密钥然后将其传输给收信方来建立与收信方共享的加密密钥**。 这与“密钥协议”算法不同，在此算法中，要使用一个加密密钥的双方都参与该密钥的生成过程，从而相互认同该密钥**。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.EncryptedKey">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.EncryptedKey" /> 属性检索该密钥传输收信方的加密密钥。</summary>
      <returns>表示加密密钥的字节值数组。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.KeyEncryptionAlgorithm">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.KeyEncryptionAlgorithm" /> 属性检索用于加密内容加密密钥的密钥加密算法。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" />存储密钥加密算法标识符的对象。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.RecipientIdentifier">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.RecipientIdentifier" /> 属性检索与加密内容相关联的使用者标识符。</summary>
      <returns>一个   <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifier" /> 对象，该对象存储参与密钥传输部分的接收方的标识符。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.Version">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.Version" /> 属性检索密钥传输收信方的版本。 会自动为此类的对象设置密钥传输收信方的版本，其值表示收信方参与了一个密钥传输算法。</summary>
      <returns>一个整数值，表示密钥传输 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 对象的版本。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12Builder">
      <summary>启用 PKCS#12 PFX 数据值的创建。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.#ctor">
      <summary>初始化 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12Builder" /> 类的新值。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsEncrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents,System.Byte[],System.Security.Cryptography.PbeParameters)">
      <summary>将内容添加到使用字节数组中基于字节的密码加密的捆绑包中的 PFX。</summary>
      <param name="safeContents">要添加到 PFX 的内容。</param>
      <param name="passwordBytes">加密内容时用作密码的字节数组。</param>
      <param name="pbeParameters">加密内容时使用的基于密码加密 (PBE) 参数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="safeContents" /> 或 <paramref name="pbeParameters" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="safeContents" /> 参数值已经过加密。</exception>
      <exception cref="T:System.InvalidOperationException">PFX 已密封（<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> 为 <see langword="true" />）。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="pbeParameters" /> 指示应使用需要基于 <see cref="T:System.Char" /> 密码的 <see cref="F:System.Security.Cryptography.PbeEncryptionAlgorithm.TripleDes3KeyPkcs12" />。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsEncrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents,System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)">
      <summary>将内容添加到使用字节范围中基于字节的密码加密的捆绑包中的 PFX。</summary>
      <param name="safeContents">要添加到 PFX 的内容。</param>
      <param name="passwordBytes">加密内容时用作密码的字节范围。</param>
      <param name="pbeParameters">加密内容时使用的基于密码加密 (PBE) 参数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="safeContents" /> 或 <paramref name="pbeParameters" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="safeContents" /> 参数值已经过加密。</exception>
      <exception cref="T:System.InvalidOperationException">PFX 已密封（<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> 为 <see langword="true" />）。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="pbeParameters" /> 指示应使用需要基于 <see cref="T:System.Char" /> 密码的 <see cref="F:System.Security.Cryptography.PbeEncryptionAlgorithm.TripleDes3KeyPkcs12" />。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsEncrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents,System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)">
      <summary>将内容添加到使用字节范围中基于字符的密码加密的捆绑包中的 PFX。</summary>
      <param name="safeContents">要添加到 PFX 的内容。</param>
      <param name="password">加密内容时用作密码的范围。</param>
      <param name="pbeParameters">加密内容时使用的基于密码加密 (PBE) 参数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="safeContents" /> 或 <paramref name="pbeParameters" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="safeContents" /> 参数值已经过加密。</exception>
      <exception cref="T:System.InvalidOperationException">PFX 已密封（<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> 为 <see langword="true" />）。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsEncrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents,System.String,System.Security.Cryptography.PbeParameters)">
      <summary>将内容添加到使用字符串中基于字符的密码加密的捆绑包中的 PFX。</summary>
      <param name="safeContents">要添加到 PFX 的内容。</param>
      <param name="password">加密内容时用作密码的字符串。</param>
      <param name="pbeParameters">加密内容时使用的基于密码加密 (PBE) 参数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="safeContents" /> 或 <paramref name="pbeParameters" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="safeContents" /> 参数值已经过加密。</exception>
      <exception cref="T:System.InvalidOperationException">PFX 已密封（<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> 为 <see langword="true" />）。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsUnencrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents)">
      <summary>在不加密的情况下将内容添加到 PFX。</summary>
      <param name="safeContents">要添加到 PFX 的内容。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="safeContents" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">PFX 已密封（<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> 为 <see langword="true" />）。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.Encode">
      <summary>将密封的 PFX 的内容编码并将其作为字节数组返回。</summary>
      <exception cref="T:System.InvalidOperationException">PFX 未密封（<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> 为 <see langword="false" />）。</exception>
      <returns>一个字节数组，表示PFX 的编码形式。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.SealWithMac(System.ReadOnlySpan{System.Char},System.Security.Cryptography.HashAlgorithmName,System.Int32)">
      <summary>密封 PFX 以防止进一步的更改，方法是使用范围中的密码将基于密码的消息验证代码 (MAC) 应用于内容。</summary>
      <param name="password">用作计算 MAC 的密钥的密码。</param>
      <param name="hashAlgorithm">计算 MAC 时要使用的哈希算法。</param>
      <param name="iterationCount">用于计算 MAC 的密钥派生函数 (KDF) 的迭代计数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="iterationCount" /> 参数小于或等于 0。</exception>
      <exception cref="T:System.InvalidOperationException">PFX 已密封（<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> 为 <see langword="true" />）。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.SealWithMac(System.String,System.Security.Cryptography.HashAlgorithmName,System.Int32)">
      <summary>密封 PFX 以防止进一步的更改，方法是使用字符串中的密码将基于密码的消息验证代码 (MAC) 应用于内容。</summary>
      <param name="password">用作计算 MAC 的密钥的密码。</param>
      <param name="hashAlgorithm">计算 MAC 时要使用的哈希算法。</param>
      <param name="iterationCount">用于计算 MAC 的密钥派生函数 (KDF) 的迭代计数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="iterationCount" /> 参数小于或等于 0。</exception>
      <exception cref="T:System.InvalidOperationException">PFX 已密封（<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> 为 <see langword="true" />）。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.SealWithoutIntegrity">
      <summary>密封 PFX 以防止进一步的更改，无需应用防篡改。</summary>
      <exception cref="T:System.InvalidOperationException">PFX 已密封（<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> 为 <see langword="true" />）。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary>尝试将密封的 PFX 内容编码到提供的缓冲区中。</summary>
      <param name="destination">接收 PKCS#12 PFX 数据的字节范围。</param>
      <param name="bytesWritten">此方法返回时，包含一个指示写入 <paramref name="destination" /> 的字节数的值。 该参数未经初始化即被处理。</param>
      <exception cref="T:System.InvalidOperationException">PFX 未密封（<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> 为 <see langword="false" />）。</exception>
      <returns>如果 <paramref name="destination" /> 具有足够的大小以接收输出，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed">
      <summary>获取指示 PFX 数据是否密封的值。</summary>
      <returns>一个值，该值指示是否已密封 PFX 数据。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12CertBag">
      <summary>表示 PKCS#12 CertBag。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12CertBag.#ctor(System.Security.Cryptography.Oid,System.ReadOnlyMemory{System.Byte})">
      <summary>使用指定的证书类型和编码初始化 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12CertBag" /> 类的新实例。</summary>
      <param name="certificateType">证书类型的对象标识符 (OID)。</param>
      <param name="encodedCertificate">编码的证书值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificateType" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="encodedCertificate" /> 参数不表示单个 ASN.1 BER 编码值。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12CertBag.GetCertificate">
      <summary>获取解释为 X.509 公钥证书的 CertBag 的内容。</summary>
      <exception cref="T:System.InvalidOperationException">内容类型不是 x.509 公钥证书内容类型。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">内容对于 x.509 证书内容类型无效。</exception>
      <returns>从 CertBag 的内容解码的证书。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12CertBag.GetCertificateType">
      <summary>获取标识已编码证书值的内容类型的对象标识符 (OID)。</summary>
      <returns>标识已编码证书值的内容类型的对象标识符 (OID)。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12CertBag.EncodedCertificate">
      <summary>获取 CertSafeBag 的未解释证书内容。</summary>
      <returns>CertSafeBag 的未解释的证书内容。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12CertBag.IsX509Certificate">
      <summary>获取一个值，该值指示已编码的证书值的内容类型是否为 x.509 公钥证书内容类型。</summary>
      <returns>
        <see langword="true" /> 如果内容类型为 x.509 公钥证书内容类型 (1.2.840.113549.1.9.22.1) ;否则为 <see langword="false" /> 。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode">
      <summary>表示与 PKCS#12 SafeContents 值关联的加密类型。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.None">
      <summary>SafeContents 值未加密。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Password">
      <summary>SafeContents 值使用密码加密。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.PublicKey">
      <summary>SafeContents 值使用公钥加密进行加密。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Unknown">
      <summary>应用于 SafeContents 的加密类型未知或无法确定。</summary>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12Info">
      <summary>表示 PKCS#12 PFX 内容中的数据。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Info.Decode(System.ReadOnlyMemory{System.Byte},System.Int32@,System.Boolean)">
      <summary>将提供的数据读取为 PKCS#12 PFX，返回内容的对象视图。</summary>
      <param name="encodedBytes">要解释为 PKCS#12 PFX 的数据。</param>
      <param name="bytesConsumed">此方法返回时，包含一个指示 <paramref name="encodedBytes" /> 中的字节数量的值（由此方法读取）。 该参数未经初始化即被处理。</param>
      <param name="skipCopy">
        <see langword="true" /> 表示存储 <paramref name="encodedBytes" /> 而不进行防御性复制；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="encodedBytes" /> 参数的内容未成功解码为 PKCS#12 PFX。</exception>
      <returns>从输入中解码的 PKCS#12 PFX 的对象视图。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Info.VerifyMac(System.ReadOnlySpan{System.Char})">
      <summary>尝试使用由 <c>System.ReadOnlySpan{System.Char}</c> 表示的密码验证 <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> 内容的完整性。</summary>
      <param name="password">用于尝试验证完整性的密码。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.IntegrityMode" /> 值不是 <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.Password" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">PKCS#12 PFX 内容指定的哈希算法选项无法识别或不受此平台支持。</exception>
      <returns>如果密码成功验证了 <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> 内容的完整性，则为 <see langword="true" />；如果密码不正确或内容已更改，则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Info.VerifyMac(System.String)">
      <summary>尝试使用由 <see cref="T:System.String" /> 表示的密码验证 <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> 内容的完整性。</summary>
      <param name="password">用于尝试验证完整性的密码。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.IntegrityMode" /> 值不是 <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.Password" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">PKCS#12 PFX 内容指定的哈希算法选项无法识别或不受此平台支持。</exception>
      <returns>如果密码成功验证了 <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> 内容的完整性，则为 <see langword="true" />；如果密码不正确或内容已更改，则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe">
      <summary>获取 PFX AuthenticatedSafe 中的 SafeContents 值的只读集合。</summary>
      <returns>PFX AuthenticatedSafe 中存在的 SafeContents 值的只读集合。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12Info.IntegrityMode">
      <summary>获取一个值，该值指示为 <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> 内容提供的防篡改的类型。</summary>
      <returns>指示为内容提供的篡改保护类型的枚举成员之一 <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> 。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode">
      <summary>表示应用于 PKCS#12 PFX 值的防篡改类型。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.None">
      <summary>PKCS#12 PFX 值不受篡改保护。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.Password">
      <summary>通过随密码键入的消息验证代码 (MAC) 保护 PKCS#12 PFX 值，使其免受篡改。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.PublicKey">
      <summary>使用通过公钥加密技术生成的数字签名保护 PKCS#12 PFX 值，使其免受篡改。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.Unknown">
      <summary>应用于 PKCS#12 PFX 的防篡改类型未知或无法确定。</summary>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12KeyBag">
      <summary>表示 PKCS#12 中的 KeyBag，即内容为 PKCS#8 PrivateKeyInfo 的容器。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12KeyBag.#ctor(System.ReadOnlyMemory{System.Byte},System.Boolean)">
      <summary>从现有的编码 PKCS#8 PrivateKeyInfo 值初始化 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12KeyBag" /> 的新实例。</summary>
      <param name="pkcs8PrivateKey">BER 编码的 PKCS#8 PrivateKeyInfo 值。</param>
      <param name="skipCopy">
        <see langword="true" /> 表示存储 <paramref name="pkcs8PrivateKey" /> 而不进行防御性复制；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="pkcs8privateKey" /> 参数不表示单个 ASN.1 BER 编码值。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12KeyBag.Pkcs8PrivateKey">
      <summary>获取包含此袋传输的 PKCS#8 PrivateKeyInfo 值的内存值。</summary>
      <returns>包含此袋传输的 PKCS # 8 PrivateKeyInfo 值的内存值。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12SafeBag">
      <summary>定义 PKCS#12 规范中的 SafeBag 值的核心行为，并为派生类提供基类。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.#ctor(System.String,System.ReadOnlyMemory{System.Byte},System.Boolean)">
      <summary>从派生类中的构造函数中调用，用于初始化 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12SafeBag" /> 类。</summary>
      <param name="bagIdValue">以点分隔的十进制格式表示的对象标识符 (OID)，指示此 SafeBag 的数据类型。</param>
      <param name="encodedBagValue">SafeBag 内容的 ASN.1 BER 编码值。</param>
      <param name="skipCopy">
        <see langword="true" /> 表示存储 <paramref name="encodedBagValue" /> 而不进行防御性复制；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bagIdValue" /> 参数为 <see langword="null" /> 或是空字符串。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="encodedBagValue" /> 参数不表示单个 ASN.1 BER 编码值。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.Encode">
      <summary>对 SafeBag 值进行编码并将它作为字节数组返回。</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">传递给构造函数的对象标识符值无效。</exception>
      <returns>一个字节数组，表示 SafeBag 的编码形式。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.GetBagId">
      <summary>获取标识此 SafeBag 的内容类型的对象标识符 (OID)。</summary>
      <returns>标识此 SafeBag 的内容类型的对象标识符 (OID)。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary>尝试将 SafeBag 值编码到提供的缓冲区中。</summary>
      <param name="destination">接收编码 SafeBag 值的字节范围。</param>
      <param name="bytesWritten">此方法返回时，包含一个指示写入 <paramref name="destination" /> 的字节数的值。 该参数未经初始化即被处理。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">传递给构造函数的对象标识符值无效。</exception>
      <returns>如果 <paramref name="destination" /> 具有足够的大小以接收输出，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.Attributes">
      <summary>获取要使用 SafeBag 值编码的属性的可修改集合。</summary>
      <returns>要用 SafeBag 值编码的属性的可修改集合。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.EncodedBagValue">
      <summary>获取此 SafeBag 内容的 ASN.1 BER 编码。</summary>
      <returns>此 SafeBag 内容的 ASN BER 编码。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12SafeContents">
      <summary>表示 PKCS#12 SafeContents 值。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.#ctor">
      <summary>初始化 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12SafeContents" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>通过新 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12CertBag" /> 将证书添加到 SafeContents，并返回新创建的包实例。</summary>
      <param name="certificate">要添加的证书。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">此实例为只读。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="certificate" /> 参数状态无效。</exception>
      <returns>已添加到 SafeContents 的包实例。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddKeyUnencrypted(System.Security.Cryptography.AsymmetricAlgorithm)">
      <summary>通过新 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12KeyBag" /> 将非对称私钥添加到 SafeContents，并返回新创建的包实例。</summary>
      <param name="key">要添加的非对称私钥。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">此实例为只读。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">密钥导出失败。</exception>
      <returns>已添加到 SafeContents 的包实例。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddNestedContents(System.Security.Cryptography.Pkcs.Pkcs12SafeContents)">
      <summary>通过新 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12SafeContentsBag" /> 将嵌套 SafeContents 添加到 SafeContents，并返回新创建的包实例。</summary>
      <param name="safeContents">要添加到 SafeContents 中的嵌套内容。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="safeContents" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="safeContents" /> 参数经过加密。</exception>
      <exception cref="T:System.InvalidOperationException">此实例为只读。</exception>
      <returns>已添加到 SafeContents 的包实例。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddSafeBag(System.Security.Cryptography.Pkcs.Pkcs12SafeBag)">
      <summary>将 SafeBag 添加到 SafeContents 中。</summary>
      <param name="safeBag">要添加的 SafeBag 值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="safeBag" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">此实例为只读。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddSecret(System.Security.Cryptography.Oid,System.ReadOnlyMemory{System.Byte})">
      <summary>通过新 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12SecretBag" /> 将具有指定类型标识符的 ASN.1 BER 编码值添加到 SafeContents，返回新创建的包实例。</summary>
      <param name="secretType">标识机密值的数据类型的对象标识符 (OID)。</param>
      <param name="secretValue">表示要添加的机密的 BER 编码值。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="secretType" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">此实例为只读。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="secretValue" /> 参数不表示单个 ASN.1 BER 编码值。</exception>
      <returns>已添加到 SafeContents 的包实例。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddShroudedKey(System.Security.Cryptography.AsymmetricAlgorithm,System.Byte[],System.Security.Cryptography.PbeParameters)">
      <summary>通过新 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag" /> 从数组中的基于字节的密码将已加密的非对称私钥添加到 SafeContents，并返回新创建的包实例。</summary>
      <param name="key">要添加的非对称私钥。</param>
      <param name="passwordBytes">加密密钥材料时用作密码的字节。</param>
      <param name="pbeParameters">加密密钥材料时使用的基于密码加密 (PBE) 参数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">此实例为只读。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">密钥导出失败。</exception>
      <returns>已添加到 SafeContents 的包实例。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddShroudedKey(System.Security.Cryptography.AsymmetricAlgorithm,System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)">
      <summary>通过新 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag" /> 从范围中的基于字节的密码将已加密的非对称私钥添加到 SafeContents，并返回新创建的包实例。</summary>
      <param name="key">要添加的非对称私钥。</param>
      <param name="passwordBytes">加密密钥材料时用作密码的字节。</param>
      <param name="pbeParameters">加密密钥材料时使用的基于密码加密 (PBE) 参数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">此实例为只读。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">密钥导出失败。</exception>
      <returns>已添加到 SafeContents 的包实例。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddShroudedKey(System.Security.Cryptography.AsymmetricAlgorithm,System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)">
      <summary>通过新 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag" /> 从范围中的基于字符的密码将已加密的非对称私钥添加到 SafeContents，并返回新创建的包实例。</summary>
      <param name="key">要添加的非对称私钥。</param>
      <param name="password">加密密钥材料时使用的密码。</param>
      <param name="pbeParameters">加密密钥材料时使用的基于密码加密 (PBE) 参数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">此实例为只读。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">密钥导出失败。</exception>
      <returns>已添加到 SafeContents 的包实例。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddShroudedKey(System.Security.Cryptography.AsymmetricAlgorithm,System.String,System.Security.Cryptography.PbeParameters)">
      <summary>通过新 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag" /> 从字符串中的基于字符的密码将已加密的非对称私钥添加到 SafeContents，并返回新创建的包实例。</summary>
      <param name="key">要添加的非对称私钥。</param>
      <param name="password">加密密钥材料时使用的密码。</param>
      <param name="pbeParameters">加密密钥材料时使用的基于密码加密 (PBE) 参数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException">此实例为只读。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">密钥导出失败。</exception>
      <returns>已添加到 SafeContents 的包实例。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.Decrypt(System.Byte[])">
      <summary>使用数组中基于字节的密码解密此 SafeContents 值的内容。</summary>
      <param name="passwordBytes">用作用于解密已加密内容的密码的字节。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.ConfidentialityMode" /> 属性不为 <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Password" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">密码不正确。

- 或 -

未成功解密内容。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.Decrypt(System.ReadOnlySpan{System.Byte})">
      <summary>使用范围中基于字节的密码解密此 SafeContents 值的内容。</summary>
      <param name="passwordBytes">用作用于解密已加密内容的密码的字节。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.ConfidentialityMode" /> 属性不为 <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Password" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">密码不正确。

- 或 -

未成功解密内容。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.Decrypt(System.ReadOnlySpan{System.Char})">
      <summary>使用范围中基于字符的密码解密此 SafeContents 值的内容。</summary>
      <param name="password">用于解密加密内容的密码。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.ConfidentialityMode" /> 属性不为 <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Password" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">密码不正确。

- 或 -

未成功解密内容。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.Decrypt(System.String)">
      <summary>使用字符串中基于字符的密码解密此 SafeContents 值的内容。</summary>
      <param name="password">用于解密加密内容的密码。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.ConfidentialityMode" /> 属性不为 <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Password" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">密码不正确。

- 或 -

未成功解密内容。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.GetBags">
      <summary>获取 SafeContents 中包含的 SafeBag 值的可枚举表示形式。</summary>
      <exception cref="T:System.InvalidOperationException">已加密内容。</exception>
      <returns>SafeContents 中包含的 SafeBag 值的可枚举表示形式。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.ConfidentialityMode">
      <summary>获取一个值，该值指示应用于内容的加密类型。</summary>
      <returns>枚举值之一，指示应用于内容的加密类型。 默认值是 <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.None" />。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.IsReadOnly">
      <summary>获取一个值，该值指示此实例是否处于只读状态。</summary>
      <returns>
        <see langword="true" /> 如果此值处于只读状态，则为; 否则为。否则为 <see langword="false" /> 。 默认值是 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12SafeContentsBag">
      <summary>表示 PKCS#12 中的 SafeContentsBag，即内容为 PKCS#12 SafeContents 值的容器。 此类不能被继承。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContentsBag.SafeContents">
      <summary>获取此包中包含的 SafeContents 值。</summary>
      <returns>此包中包含的 SafeContents 值。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12SecretBag">
      <summary>表示 PKCS#12 中的 SecretBag，即内容为包含类型标识符的任意数据的容器。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SecretBag.GetSecretType">
      <summary>获取标识机密值的数据类型的对象标识符 (OID)。</summary>
      <returns>标识机密值的数据类型的对象标识符 (OID)。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12SecretBag.SecretValue">
      <summary>获取包含包的 BER 编码内容的内存值。</summary>
      <returns>一个内存值，包含袋中 BER 编码的内容。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag">
      <summary>表示 PKCS#12 中的 ShroudedKeyBag，即内容为 PKCS#8 EncryptedPrivateKeyInfo 的容器。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag.#ctor(System.ReadOnlyMemory{System.Byte},System.Boolean)">
      <summary>根据现有的已编码 PKCS#8 EncryptedPrivateKeyInfo 值初始化 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag" /> 的新实例。</summary>
      <param name="encryptedPkcs8PrivateKey">BER 编码的 PKCS#8 EncryptedPrivateKeyInfo 值。</param>
      <param name="skipCopy">
        <see langword="true" /> 表示存储 <paramref name="encryptedPkcs8PrivateKey" /> 而不进行防御性复制；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="encryptedPkcs8privateKey" /> 参数不表示单个 ASN.1 BER 编码值。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag.EncryptedPkcs8PrivateKey">
      <summary>获取一个内存值，该值包含此包传输的 PKCS#8 EncryptedPrivateKeyInfo 值。</summary>
      <returns>包含此袋传输的 PKCS # 8 EncryptedPrivateKeyInfo 值的内存值。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo">
      <summary>允许检查和创建 PKCS#8 PrivateKeyInfo 和 EncryptedPrivateKeyInfo 值。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.#ctor(System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.ReadOnlyMemory{System.Byte},System.Boolean)">
      <summary>初始化 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo" /> 类的新实例。</summary>
      <param name="algorithmId">标识此密钥所用于的非对称算法的对象标识符 (OID)。</param>
      <param name="algorithmParameters">与此密钥关联的 BER 编码算法参数；如果在编码时省略算法参数，则为 <see langword="null" />。</param>
      <param name="privateKey">特定于算法的编码私钥。</param>
      <param name="skipCopies">如果存储 <paramref name="algorithmParameters" /> 和 <paramref name="privateKey" /> 而不创建防御性副本，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="algorithmId" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="algorithmParameters" /> 参数不为 <see langword="null" />、空或单个 BER 编码值。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Create(System.Security.Cryptography.AsymmetricAlgorithm)">
      <summary>将指定密钥导出为 PKCS#8 PrivateKeyInfo，并返回其解码后的解释。</summary>
      <param name="privateKey">要用 PKCS#8 PrivateKeyInfo 表示的私钥。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="privateKey" /> 参数为 <see langword="null" />。</exception>
      <returns>导出的 PKCS#8 PrivateKeyInfo 的解码解释。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Decode(System.ReadOnlyMemory{System.Byte},System.Int32@,System.Boolean)">
      <summary>将提供的数据读取为 PKCS#8 PrivateKeyInfo，并返回内容的对象视图。</summary>
      <param name="source">要解释为 PKCS#8 PrivateKeyInfo 值的数据。</param>
      <param name="bytesRead">此方法返回时，包含一个指示从 <paramref name="source" /> 中读取的字节数的值。 该参数未经初始化即被处理。</param>
      <param name="skipCopy">
        <see langword="true" /> 表示存储 <paramref name="source" /> 而不进行防御性复制；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="source" /> 参数的内容未成功解码为 PKCS#8 PrivateKeyInfo。</exception>
      <returns>解码为 PKCS#8 PrivateKeyInfo 的内容的对象视图。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.DecryptAndDecode(System.ReadOnlySpan{System.Byte},System.ReadOnlyMemory{System.Byte},System.Int32@)">
      <summary>使用提供的基于字节的密码对提供的数据进行解密，并将输出解码为 PKCS#8 PrivateKeyInfo 的对象视图。</summary>
      <param name="passwordBytes">解密密钥材料时用作密码的字节。</param>
      <param name="source">要在 ASN.1-BER 编码中读取为 PKCS#8 EncryptedPrivateKeyInfo 结构的数据。</param>
      <param name="bytesRead">此方法返回时，包含一个指示从 <paramref name="source" /> 中读取的字节数的值。 该参数未经初始化即被处理。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">密码不正确。

- 或 -

<paramref name="source" /> 的内容表示要应用的密钥派生功能 (KDF) 是旧的 PKCS#12 KDF，需要基于 <see cref="T:System.Char" /> 的密码。

- 或 -

<paramref name="source" /> 的内容不表示 ASN.1-BER 编码的 PKCS#8 EncryptedPrivateKeyInfo 结构。</exception>
      <returns>解码为 PKCS#8 PrivateKeyInfo 的已解密内容的对象视图。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.DecryptAndDecode(System.ReadOnlySpan{System.Char},System.ReadOnlyMemory{System.Byte},System.Int32@)">
      <summary>使用提供的基于字符的密码对提供的数据进行解密，并将输出解码为 PKCS#8 PrivateKeyInfo 的对象视图。</summary>
      <param name="password">解密密钥材料时使用的密码。</param>
      <param name="source">ASN.1-BER 编码中 PKCS#8 EncryptedPrivateKeyInfo 结构的字节。</param>
      <param name="bytesRead">此方法返回时，包含一个指示从 <paramref name="source" /> 中读取的字节数的值。 该参数未经初始化即被处理。</param>
      <returns>解码为 PKCS#8 PrivateKeyInfo 的已解密内容的对象视图。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encode">
      <summary>将此实例的属性数据编码为 PKCS#8 PrivateKeyInfo，并将编码作为字节数组返回。</summary>
      <returns>一个字节数组，表示 PKCS#8 PrivateKeyInfo 的编码形式。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encrypt(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)">
      <summary>在使用指定的基于字节的密码和加密参数进行加密后，根据此对象的属性内容生成 PKCS#8 EncryptedPrivateKeyInfo。</summary>
      <param name="passwordBytes">加密密钥材料时用作密码的字节。</param>
      <param name="pbeParameters">加密密钥材料时使用的基于密码加密 (PBE) 参数。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="pbeParameters" /> 指示应使用需要基于 <see cref="T:System.Char" /> 密码的 <see cref="F:System.Security.Cryptography.PbeEncryptionAlgorithm.TripleDes3KeyPkcs12" />。</exception>
      <returns>一个字节数组，其中包含 PKCS#8 EncryptedPrivateKeyInfo 的编码形式。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encrypt(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)">
      <summary>在使用指定的基于字符的密码和加密参数进行加密后，根据此对象的属性内容生成 PKCS#8 EncryptedPrivateKeyInfo。</summary>
      <param name="password">加密密钥材料时使用的密码。</param>
      <param name="pbeParameters">加密密钥材料时使用的基于密码加密 (PBE) 参数。</param>
      <returns>一个字节数组，其中包含 PKCS#8 EncryptedPrivateKeyInfo 的编码形式。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary>尝试将此实例的属性数据编码为 PKCS#8 PrivateKeyInfo，并将结果写入到提供的缓冲区中。</summary>
      <param name="destination">接收 PKCS#8 PrivateKeyInfo 数据的字节范围。</param>
      <param name="bytesWritten">此方法返回时，包含一个指示写入 <paramref name="destination" /> 的字节数的值。 该参数未经初始化即被处理。</param>
      <returns>如果 <paramref name="destination" /> 具有足够的大小以接收输出，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncrypt(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)">
      <summary>在使用指定的基于字节的密码和加密参数进行加密后，尝试根据此对象的属性内容生成 PKCS#8 EncryptedPrivateKeyInfo，并将结果写入到提供的缓冲区中。</summary>
      <param name="passwordBytes">加密密钥材料时用作密码的字节。</param>
      <param name="pbeParameters">加密密钥材料时使用的基于密码加密 (PBE) 参数。</param>
      <param name="destination">接收 PKCS#8 EncryptedPrivateKeyInfo 数据的字节范围。</param>
      <param name="bytesWritten">此方法返回时，包含一个指示写入 <paramref name="destination" /> 的字节数的值。 该参数未经初始化即被处理。</param>
      <returns>如果 <paramref name="destination" /> 具有足够的大小以接收输出，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncrypt(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)">
      <summary>在使用指定的基于字符的密码和加密参数进行加密后，尝试根据此对象的属性内容生成 PKCS#8 EncryptedPrivateKeyInfo，并将结果写入到提供的缓冲区中。</summary>
      <param name="password">加密密钥材料时使用的密码。</param>
      <param name="pbeParameters">加密密钥材料时使用的基于密码加密 (PBE) 参数。</param>
      <param name="destination">接收 PKCS#8 EncryptedPrivateKeyInfo 数据的字节范围。</param>
      <param name="bytesWritten">此方法返回时，包含一个指示写入 <paramref name="destination" /> 的字节数的值。 该参数未经初始化即被处理。</param>
      <returns>如果 <paramref name="destination" /> 具有足够的大小以接收输出，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.AlgorithmId">
      <summary>获取对象标识符 (OID) 值，该值标识此密钥所用于的算法。</summary>
      <returns> (OID 的对象标识符) 标识此密钥所适用的算法的值。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.AlgorithmParameters">
      <summary>获取一个内存值，该值包含与此密钥关联的 BER 编码的算法参数。</summary>
      <returns>一个内存值，包含与此键关联的 BER 编码的算法参数， <see langword="null" /> 如果不存在任何参数，则为。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Attributes">
      <summary>获取此私钥的可修改属性集合。</summary>
      <returns>要用私钥进行编码的属性的可修改集合。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.PrivateKeyBytes">
      <summary>获取一个内存值，该值表示特定于算法的编码私钥。</summary>
      <returns>表示算法特定的编码私钥的内存值。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject">
      <summary>表示用于 CMS/PKCS #7 和 PKCS #9 操作的特性。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.#ctor">
      <summary>初始化 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.#ctor(System.Security.Cryptography.AsnEncodedData)">
      <summary>通过将所指定 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> 对象用作 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 类新实例的特性类型及值，对该实例进行初始化。</summary>
      <param name="asnEncodedData">包含要使用的 PKCS #9 特性类型及值的对象。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" /> 的 <paramref name="Oid" /> 成员的 <paramref name="asnEncodedData" /> 成员长度为零。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Oid" /> 成员（属于 <paramref name="asnEncodedData" />）为 <see langword="null" />。  
  
- 或 - 
该 <paramref name="Value" /> 成员的 <paramref name="Oid" /> 成员 <paramref name="asnEncodedData" /> 是 <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.#ctor(System.Security.Cryptography.Oid,System.Byte[])">
      <summary>通过将指定的 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> 对象用作特性类型，并将指定的 ASN.1 编码数据用作特性值，对 <see cref="T:System.Security.Cryptography.Oid" /> 类的新实例进行初始化。</summary>
      <param name="oid">表示 PKCS #9 特性类型的对象。</param>
      <param name="encodedData">表示 PKCS #9 特性值的字节值数组。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.#ctor(System.String,System.Byte[])">
      <summary>通过将指定的对象标识符 (OID) 字符串表示形式用作特性类型，并将指定的 ASN.1 编码数据用作特性值，对 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> 类的新实例进行初始化。</summary>
      <param name="oid">表示 PKCS #9 特性类型的 OID 字符串表示。</param>
      <param name="encodedData">包含 PKCS #9 特性值的字节值数组。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>从指定的 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> 对象中复制此 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 的 PKCS #9 特性类型及值。</summary>
      <param name="asnEncodedData">包含要使用的 PKCS #9 特性类型及值的对象。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="asnEncodeData" /> 不代表兼容特性类型。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asnEncodedData" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.Oid">
      <summary>获取 <see cref="T:System.Security.Cryptography.Oid" /> 对象，该对象表示与此 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> 对象相关联的特性类型。</summary>
      <returns>一个对象，表示与此 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> 对象相关联的特性类型。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9ContentType">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9ContentType" /> 类定义 CMS/PKCS #7 消息的内容类型。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9ContentType.#ctor">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9ContentType.#ctor" /> 构造函数创建 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9ContentType" /> 类的实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9ContentType.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>从 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 对象复制信息。</summary>
      <param name="asnEncodedData">要从中复制信息的 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 对象。</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9ContentType.ContentType">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs9ContentType.ContentType" /> 属性获取一个包含内容类型的 <see cref="T:System.Security.Cryptography.Oid" /> 对象。</summary>
      <returns>包含内容类型的 <see cref="T:System.Security.Cryptography.Oid" /> 对象。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription" /> 类定义 CMS/PKCS #7 消息内容的说明。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor" /> 构造函数创建 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription" /> 类的实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor(System.Byte[])">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor(System.Byte[])" /> 构造函数通过使用指定的字节值数组作为 CMS/PKCS #7 消息内容的已编码说明来创建 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription" /> 类的一个实例。</summary>
      <param name="encodedDocumentDescription">一个字节值数组，指定 CMS/PKCS #7 消息的已编码说明。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor(System.String)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor(System.String)" /> 构造函数使用指定的 CMS/PKCS #7 消息内容的说明创建 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription" /> 类的一个实例。</summary>
      <param name="documentDescription">
        <see cref="T:System.String" /> 类的一个实例，指定 CMS/PKCS #7 消息的说明。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>从 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 对象复制信息。</summary>
      <param name="asnEncodedData">要从中复制信息的 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 对象。</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.DocumentDescription">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.DocumentDescription" /> 属性检索文档说明。</summary>
      <returns>包含文档说明的 <see cref="T:System.String" /> 对象。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName" /> 类定义 CMS/PKCS #7 消息的名称。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor" /> 构造函数创建 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName" /> 类的实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor(System.Byte[])">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor(System.Byte[])" /> 构造函数使用指定的字节值数组作为 CMS/PKCS #7 消息内容的编码名称，从而创建 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName" /> 类的实例。</summary>
      <param name="encodedDocumentName">指定 CMS/PKCS #7 消息的编码名称的字节值数组。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor(System.String)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor(System.String)" /> 构造函数通过使用 CMS/PKCS #7 消息的指定名称创建 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName" /> 类的实例。</summary>
      <param name="documentName">一个 <see cref="T:System.String" /> 对象，该对象指定 CMS/PKCS #7 消息的名称。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>从 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 对象复制信息。</summary>
      <param name="asnEncodedData">要从中复制信息的 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 对象。</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.DocumentName">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.DocumentName" /> 属性检索文档名。</summary>
      <returns>
        <see cref="T:System.String" /> 对象，包含文档名。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId">
      <summary>表示 PKCS#9 中的 LocalKeyId 属性。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId.#ctor">
      <summary>使用空的密钥标识符值初始化 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId.#ctor(System.Byte[])">
      <summary>使用字节数组指定的密钥标识符初始化 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId" /> 类的新实例。</summary>
      <param name="keyId">包含密钥标识符的字节数组。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId.#ctor(System.ReadOnlySpan{System.Byte})">
      <summary>使用字节范围指定的密钥标识符初始化 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId" /> 类的新实例。</summary>
      <param name="keyId">包含密钥标识符的字节数组。</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId.KeyId">
      <summary>获取包含此属性中的密钥标识符的内存值。</summary>
      <returns>包含此属性中的密钥标识符的内存值。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest" /> 类定义 CMS/PKCS #7 消息的消息摘要。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest.#ctor">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest.#ctor" /> 构造函数创建 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest" /> 类的实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>从 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 对象复制信息。</summary>
      <param name="asnEncodedData">要从中复制信息的 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 对象。</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest.MessageDigest">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest.MessageDigest" /> 属性检索消息摘要。</summary>
      <returns>包含消息摘要的字节值数组。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime" /> 类定义签名的签名日期和时间。 当要对数字签名附加经过身份验证的日期和时间时，可将 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime" /> 对象用作 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 对象的经过身份验证的特性。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor" /> 构造函数创建 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime" /> 类的实例。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor(System.Byte[])">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor(System.Byte[])" /> 构造函数通过使用指定的字节值数组作为 CMS/PKCS #7 消息内容的编码签名日期和时间来创建 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime" /> 类的实例。</summary>
      <param name="encodedSigningTime">一个字节值数组，它指定 CMS/PKCS #7 消息的编码签名日期和时间。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor(System.DateTime)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor(System.DateTime)" /> 构造函数通过使用指定的签名日期和时间创建 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime" /> 类的实例。</summary>
      <param name="signingTime">一个 <see cref="T:System.DateTime" /> 结构，它表示签名的日期和时间。</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>从 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 对象复制信息。</summary>
      <param name="asnEncodedData">要从中复制信息的 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 对象。</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.SigningTime">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.SigningTime" /> 属性检索表示消息签名日期和时间的 <see cref="T:System.DateTime" /> 结构。</summary>
      <returns>一个 <see cref="T:System.DateTime" /> 结构，它包含文档的签名日期和时间。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.PublicKeyInfo">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.PublicKeyInfo" /> 类表示与公钥关联的信息。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.PublicKeyInfo.Algorithm">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.PublicKeyInfo.Algorithm" /> 属性检索与公钥关联的算法标识符。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" />表示算法的对象。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.PublicKeyInfo.KeyValue">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.PublicKeyInfo.KeyValue" /> 属性检索此公钥对的编码公共组件的值。</summary>
      <returns>一个字节值数组，表示此公钥对的编码公共组件。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.RecipientInfo">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 类表示有关 CMS/PKCS #7 消息收件人的信息。 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 类是 <see cref="T:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo" /> 和 <see cref="T:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo" /> 类继承而来的抽象类。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfo.EncryptedKey">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfo.EncryptedKey" /> 抽象属性检索加密的收件人密钥材料。</summary>
      <returns>一个字节值数组，其中包含加密的收信方密钥材料。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfo.KeyEncryptionAlgorithm">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfo.KeyEncryptionAlgorithm" /> 抽象属性检索用于建立密钥的算法。</summary>
      <returns>一个 <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> 对象，包含用于在 CMS/PKCS #7 消息的发信方和收件人之间建立密钥的算法的值。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfo.RecipientIdentifier">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfo.RecipientIdentifier" /> 抽象属性检索收件人的标识符。</summary>
      <returns>一个 <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifier" /> 对象，其中包含收信方的标识符。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfo.Type">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfo.Type" /> 属性检索收件人的类型。 收件人的类型决定使用两个主要协议中的哪个协议在 CMS/PKCS #7 消息的发信方和收件人之间建立密钥。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoType" /> 枚举的值，定义收件人的类型。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfo.Version">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfo.Version" /> 抽象属性检索收件人信息的版本。 派生类自动为其对象设置此属性，此值指示正使用 PKCS #7 还是加密消息语法 (CMS) 来保护消息。 此版本还指示 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 对象是按密钥协议算法还是密钥传输算法建立加密密钥。</summary>
      <returns>一个 <see cref="T:System.Int32" /> 值，表示 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 对象的版本。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 类表示 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 对象的集合。 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 实现 <see cref="T:System.Collections.ICollection" /> 接口。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Array,System.Int32)" /> 方法将 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 集合复制到一个数组中。</summary>
      <param name="array">一个 <see cref="T:System.Array" /> 对象，<see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 集合将被复制到该对象。</param>
      <param name="index">
        <paramref name="array" /> 中从零开始的索引，<see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 集合将被复制到此位置。</param>
      <exception cref="T:System.ArgumentException">为方法提供的某一参数无效。</exception>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">参数值超出了被调用方法定义的允许值范围。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.RecipientInfo[],System.Int32)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.RecipientInfo[],System.Int32)" /> 方法将 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 集合复制到 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 数组中。</summary>
      <param name="array">
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 对象的数组，<see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 集合将被复制到其中。</param>
      <param name="index">
        <paramref name="array" /> 中从零开始的索引，<see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 集合将被复制到此位置。</param>
      <exception cref="T:System.ArgumentException">为方法提供的某一参数无效。</exception>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">参数值超出了被调用方法定义的允许值范围。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.GetEnumerator">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.GetEnumerator" /> 方法为 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" /> 集合返回一个 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 对象。</summary>
      <returns>可用于对 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" /> 集合进行枚举的 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 对象。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.System#Collections#IEnumerable#GetEnumerator" /> 方法为 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" /> 集合返回一个 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 对象。</summary>
      <returns>可用于对 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" /> 集合进行枚举的 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 对象。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.Count">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.Count" /> 属性检索 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 集合中的项数。</summary>
      <returns>一个整数值，表示集合中的项数。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.IsSynchronized">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.IsSynchronized" /> 属性检索对集合的访问是否为同步的，即线程安全的。 此属性始终返回 <see langword="false" />，表示集合不是线程安全的。</summary>
      <returns>
        <see cref="T:System.Boolean" /> 值 <see langword="false" />，表示集合不是线程安全的。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.Item(System.Int32)">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.Item(System.Int32)" /> 属性检索集合中指定索引处的 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 对象。</summary>
      <param name="index">一个表示集合中的索引的整数值。 索引是从零开始的。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">参数值超出了被调用方法定义的允许值范围。</exception>
      <returns>指定索引处的 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 对象。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.SyncRoot">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.SyncRoot" /> 属性检索用于同步访问 <see cref="T:System.Object" /> 集合的 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 对象。</summary>
      <returns>
        <see cref="T:System.Object" />用于同步对集合的访问的对象 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" /> 类为 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 集合提供枚举功能。 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" /> 实现 <see cref="T:System.Collections.IEnumerator" /> 接口。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.MoveNext">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.MoveNext" /> 方法将枚举前移到 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 集合中的下一个 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 对象。</summary>
      <returns>此方法返回一个布尔值，指定枚举的前移是否成功。 如果枚举成功移动到下一个 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 对象，该方法将返回 <see langword="true" />。 如果枚举移过枚举中的最后一项，则返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.Reset">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.Reset" /> 方法将枚举重置到 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 集合中的第一个 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 对象。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.Current">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.Current" /> 属性从 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 集合中检索当前的 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 对象。</summary>
      <returns>表示 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 集合中当前收件人信息结构的 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 对象。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.System#Collections#IEnumerator#Current">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.System#Collections#IEnumerator#Current" /> 属性从 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 集合中检索当前的 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 对象。</summary>
      <returns>表示 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 集合中当前收件人信息结构的 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 对象。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.RecipientInfoType">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoType" /> 枚举定义收件人信息的类型。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.RecipientInfoType.KeyAgreement">
      <summary>密钥协议收件人信息。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.RecipientInfoType.KeyTransport">
      <summary>密钥传输收件人信息。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.RecipientInfoType.Unknown">
      <summary>收件人信息类型未知。</summary>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest">
      <summary>表示来自 IETF RFC 3161 的时间戳请求。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.CreateFromData(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Boolean,System.Security.Cryptography.X509Certificates.X509ExtensionCollection)">
      <summary>通过使用指定的算法对提供的数据进行哈希处理，创建时间戳请求。</summary>
      <param name="data">数据到时间戳，将通过此方法进行哈希处理。</param>
      <param name="hashAlgorithm">要与此时间戳请求一起使用的哈希算法。</param>
      <param name="requestedPolicyId">时间戳颁发机构 (TSA) 应使用的时间戳策略的对象标识符 (OID)，或用来表示无首选项的 <see langword="null" />。</param>
      <param name="nonce">一个可选的 nonce（使用一次的数字），用于唯一标识此请求以将其与响应配对。 该值被解释为无符号大端的整数，并且可以规范化为编码格式。</param>
      <param name="requestSignerCertificates">指示时间戳颁发机构 (TSA) 的 <see langword="true" /> 必须在已颁发的时间戳令牌中包含签名证书；否则为 <see langword="false" />。</param>
      <param name="extensions">要包含在请求中的可选扩展集合。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> 为 <see langword="null" /> 或 <see cref="F:System.String.Empty" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="hashAlgorithm" /> 不是已知的哈希算法。</exception>
      <returns>一个 <see cref="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest" />，它表示所选值。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.CreateFromHash(System.ReadOnlyMemory{System.Byte},System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Boolean,System.Security.Cryptography.X509Certificates.X509ExtensionCollection)">
      <summary>使用预先计算的哈希值和哈希算法的名称创建时间戳请求。</summary>
      <param name="hash">要加盖时间戳的预先计算的哈希值。</param>
      <param name="hashAlgorithm">用于生成 <paramref name="hash" /> 的哈希算法。</param>
      <param name="requestedPolicyId">时间戳颁发机构 (TSA) 应使用的时间戳策略的对象标识符 (OID)；若不公开任何首选项，则为 <see langword="null" />。</param>
      <param name="nonce">一个可选值，用于唯一匹配对响应的请求；如果不在请求中包含 nonce，则为 <see langword="null" />。</param>
      <param name="requestSignerCertificates">指示时间戳颁发机构 (TSA) 的 <see langword="true" /> 必须在已颁发的时间戳令牌中包含签名证书；否则为 <see langword="false" />。</param>
      <param name="extensions">要包含在请求中的可选扩展集合。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="hashAlgorithm" /> 不是已知的哈希算法。</exception>
      <returns>一个 <see cref="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest" />，它表示所选值。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.CreateFromHash(System.ReadOnlyMemory{System.Byte},System.Security.Cryptography.Oid,System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Boolean,System.Security.Cryptography.X509Certificates.X509ExtensionCollection)">
      <summary>使用预先计算的哈希值和哈希算法的对象标识符创建时间戳请求。</summary>
      <param name="hash">要加盖时间戳的预先计算的哈希值。</param>
      <param name="hashAlgorithmId">生成 <paramref name="hash" /> 的哈希算法的对象标识符 (OID)。</param>
      <param name="requestedPolicyId">时间戳颁发机构 (TSA) 应使用的时间戳策略的对象标识符 (OID)，或用来表示无首选项的 <see langword="null" />。</param>
      <param name="nonce">一个可选的 nonce（使用一次的数字），用于唯一标识此请求以将其与响应配对。 该值被解释为无符号大端的整数，并且可以规范化为编码格式。</param>
      <param name="requestSignerCertificates">指示时间戳颁发机构 (TSA) 的 <see langword="true" /> 必须在已颁发的时间戳令牌中包含签名证书；否则为 <see langword="false" />。</param>
      <param name="extensions">要包含在请求中的可选扩展集合。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hashAlgorithmId" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="hashAlgorithmId" />.<see cref="P:System.Security.Cryptography.Oid.Value" /> 不是有效的 OID。</exception>
      <returns>一个 <see cref="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest" />，它表示所选值。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.CreateFromSignerInfo(System.Security.Cryptography.Pkcs.SignerInfo,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Boolean,System.Security.Cryptography.X509Certificates.X509ExtensionCollection)">
      <summary>通过使用指定的算法对提供的签名程序的签名进行哈希处理，创建时间戳请求。</summary>
      <param name="signerInfo">要为其生成时间戳请求的 CMS 签名程序信息。</param>
      <param name="hashAlgorithm">要与此时间戳请求一起使用的哈希算法。</param>
      <param name="requestedPolicyId">时间戳颁发机构 (TSA) 应使用的时间戳策略的对象标识符 (OID)；若不公开任何首选项，则为 <see langword="null" />。</param>
      <param name="nonce">一个可选的 nonce（使用一次的数字），用于唯一标识此请求以将其与响应配对。 该值被解释为无符号大端的整数，并且可以规范化为编码格式。</param>
      <param name="requestSignerCertificates">指示时间戳颁发机构 (TSA) 的 <see langword="true" /> 必须在已颁发的时间戳令牌中包含签名证书；否则为 <see langword="false" />。</param>
      <param name="extensions">要包含在请求中的可选扩展集合。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="signerInfo" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> 为 <see langword="null" /> 或 <see cref="F:System.String.Empty" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="hashAlgorithm" /> 不是已知的哈希算法。</exception>
      <returns>一个 <see cref="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest" />，它表示所选值。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.Encode">
      <summary>对时间戳请求进行编码并将它作为字节数组返回。</summary>
      <returns>包含 DER 编码的时间戳请求的字节数组。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.GetExtensions">
      <summary>获取一个集合，其包含此请求中存在的扩展副本。</summary>
      <returns>一个集合，其包含此请求中存在的扩展副本。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.GetMessageHash">
      <summary>获取此时间戳请求的数据哈希。</summary>
      <returns>此时间戳请求的数据哈希（以只读内存值提供）。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.GetNonce">
      <summary>获取此时间戳请求的 nonce。</summary>
      <returns>此时间戳请求的 nonce（以只读内存值提供，若存在）；否则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.ProcessResponse(System.ReadOnlyMemory{System.Byte},System.Int32@)">
      <summary>将编码的时间戳响应与此请求合并，以生成 <see cref="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken" />。</summary>
      <param name="responseBytes">DER 编码的时间戳响应。</param>
      <param name="bytesConsumed">此方法返回时，为从 <paramref name="responseBytes" /> 中读取的字节数。 该参数未经初始化即被处理。</param>
      <returns>与此请求对应的响应中的时间戳标记。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.TryDecode(System.ReadOnlyMemory{System.Byte},System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest@,System.Int32@)">
      <summary>尝试将 <paramref name="encodedBytes" /> 的内容解释为 DER 编码的时间戳请求。</summary>
      <param name="encodedBytes">包含 DER 编码的时间戳请求的缓冲区。</param>
      <param name="request">此方法返回时，如果解码成功，则为已成功解码的时间戳请求；如果解码失败，则为 <see langword="null" />。 该参数未经初始化即被处理。</param>
      <param name="bytesConsumed">此方法返回时，为从 <paramref name="encodedBytes" /> 中读取的字节数。 该参数未经初始化即被处理。</param>
      <returns>如果 <paramref name="encodedBytes" /> 成功解释为时间戳请求，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary>尝试将实例编码为 IETF RFC 3161 <c>TimeStampReq</c>，从而将字节写入到提供的缓冲区中。</summary>
      <param name="destination">要接收已编码请求的缓冲区。</param>
      <param name="bytesWritten">此方法返回时，为写入 <paramref name="destination" /> 的字节总数。 该参数未经初始化即被处理。</param>
      <returns>如果 <paramref name="destination" /> 的长度足以接收编码的请求，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.HasExtensions">
      <summary>指示请求是否具有扩展。</summary>
      <returns>
        <see langword="true" /> 如果请求包含任何扩展，则为;否则为 <see langword="false" /> 。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.HashAlgorithmId">
      <summary>获取与请求关联的哈希算法的对象标识符 (OID)。</summary>
      <returns>与请求关联的哈希算法的对象标识符 (OID) 。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.RequestedPolicyId">
      <summary>获取请求的策略 ID；如果未请求策略 ID，则为 <see langword="null" />。</summary>
      <returns>请求的策略 ID，或 <see langword="null" /> 未请求策略 id 时为。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.RequestSignerCertificate">
      <summary>获取一个值，该值表示请求是否指示响应中必须有时间戳颁发机构证书。</summary>
      <returns>
        <see langword="true" /> 如果响应必须包含时间戳颁发机构证书，则为;否则为 <see langword="false" /> 。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.Version">
      <summary>获取此请求的数据格式版本号。</summary>
      <returns>此请求的数据格式版本号。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken">
      <summary>表示来自 IETF RFC 3161 的时间戳令牌。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.AsSignedCms">
      <summary>获取 RFC3161 时间戳令牌的签名加密消息语法 (CMS) 表示形式。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken" /> 的 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 表示形式。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.TryDecode(System.ReadOnlyMemory{System.Byte},System.Security.Cryptography.Pkcs.Rfc3161TimestampToken@,System.Int32@)">
      <summary>尝试将 <paramref name="encodedBytes" /> 的内容解释为 DER 编码的时间戳令牌。</summary>
      <param name="encodedBytes">包含 DER 编码的时间戳令牌的缓冲区。</param>
      <param name="token">此方法返回结果时，如果解码成功，则为已成功解码的时间戳令牌；如果解码失败，则为 <see langword="null" />。 该参数未经初始化即被处理。</param>
      <param name="bytesConsumed">此方法返回时，为从 <paramref name="encodedBytes" /> 中读取的字节数。 该参数未经初始化即被处理。</param>
      <returns>如果 <paramref name="encodedBytes" /> 成功解释为时间戳令牌，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.VerifySignatureForData(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.X509Certificates.X509Certificate2@,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary>验证当前令牌是否为提供的数据的有效时间戳令牌。</summary>
      <param name="data">要根据此时间戳令牌验证的数据。</param>
      <param name="signerCertificate">此方法返回结果时，从签署此令牌的时间戳颁发机构 (TSA) 返回证书，如果无法确定签名者证书，则返回 <see langword="null" />。 该参数未经初始化即被处理。</param>
      <param name="extraCandidates">除了令牌中可能包含的任何证书之外，还可以考虑作为时间戳颁发机构 (TSA) 证书的可选证书集合。</param>
      <returns>如果找到了时间戳颁发机构（TSA）证书，证书公钥对令牌签名进行了验证，并且该令牌与提供的数据的哈希匹配，则为 <see langword="true" />；否则，为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.VerifySignatureForHash(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.X509Certificates.X509Certificate2@,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary>验证当前令牌是否为提供的数据哈希和算法标识符的有效时间戳令牌。</summary>
      <param name="hash">要根据此时间戳令牌验证的加密哈希。</param>
      <param name="hashAlgorithm">生成 <paramref name="hash" /> 的算法。</param>
      <param name="signerCertificate">此方法返回结果时，从签署此令牌的时间戳颁发机构 (TSA) 返回证书，如果无法确定签名者证书，则返回 <see langword="null" />。 该参数未经初始化即被处理。</param>
      <param name="extraCandidates">除了令牌中可能包含的任何证书之外，还可以考虑作为时间戳颁发机构 (TSA) 证书的可选证书集合。</param>
      <returns>如果找到了时间戳颁发机构（TSA）证书，证书公钥对令牌签名进行了验证，并且该令牌与提供的数据的哈希和算法匹配，则为 <see langword="true" />否则，为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.VerifySignatureForHash(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.Oid,System.Security.Cryptography.X509Certificates.X509Certificate2@,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary>验证当前令牌是否为提供的数据哈希和算法标识符的有效时间戳令牌。</summary>
      <param name="hash">要根据此时间戳令牌验证的加密哈希。</param>
      <param name="hashAlgorithmId" />
      <param name="signerCertificate">此方法返回结果时，从签署此令牌的时间戳颁发机构 (TSA) 返回证书，如果无法确定签名者证书，则返回 <see langword="null" />。 该参数未经初始化即被处理。</param>
      <param name="extraCandidates">除了令牌中可能包含的任何证书之外，还可以考虑作为时间戳颁发机构 (TSA) 证书的可选证书集合。</param>
      <returns>如果找到了时间戳颁发机构（TSA）证书，证书公钥对令牌签名进行了验证，并且该令牌与提供的数据的哈希和算法匹配，则为 <see langword="true" />否则，为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.VerifySignatureForSignerInfo(System.Security.Cryptography.Pkcs.SignerInfo,System.Security.Cryptography.X509Certificates.X509Certificate2@,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary>验证当前令牌是否为提供的 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 的有效时间戳令牌。</summary>
      <param name="signerInfo">用于验证所生成的时间戳的 CMS 签名者信息。</param>
      <param name="signerCertificate">此方法返回结果时，从签署此令牌的时间戳颁发机构 (TSA) 返回证书，如果无法确定签名者证书，则返回 <see langword="null" />。 该参数未经初始化即被处理。</param>
      <param name="extraCandidates">除了令牌中可能包含的任何证书之外，还可以考虑作为时间戳颁发机构 (TSA) 证书的可选证书集合。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="signerInfo" /> 为 <see langword="null" />。</exception>
      <returns>如果找到了时间戳颁发机构（TSA）证书，证书公钥对令牌签名进行了验证，并且该令牌与 <paramref name="signerInfo" /> 的签名匹配，则为 <see langword="true" />；否则，为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.TokenInfo">
      <summary>获取此时间戳令牌的详细信息作为 <see cref="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo" />。</summary>
      <returns>作为此时间戳标记的详细信息 <see cref="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo" /> 。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.#ctor(System.Security.Cryptography.Oid,System.Security.Cryptography.Oid,System.ReadOnlyMemory{System.Byte},System.ReadOnlyMemory{System.Byte},System.DateTimeOffset,System.Nullable{System.Int64},System.Boolean,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Security.Cryptography.X509Certificates.X509ExtensionCollection)">
      <param name="policyId" />
      <param name="hashAlgorithmId" />
      <param name="messageHash" />
      <param name="serialNumber" />
      <param name="timestamp" />
      <param name="accuracyInMicroseconds" />
      <param name="isOrdering" />
      <param name="nonce" />
      <param name="timestampAuthorityName" />
      <param name="extensions" />
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.Encode" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.GetExtensions" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.GetMessageHash" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.GetNonce" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.GetSerialNumber" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.GetTimestampAuthorityName" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.TryDecode(System.ReadOnlyMemory{System.Byte},System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo@,System.Int32@)">
      <param name="encodedBytes" />
      <param name="timestampTokenInfo" />
      <param name="bytesConsumed" />
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.TryEncode(System.Span{System.Byte},System.Int32@)">
      <param name="destination" />
      <param name="bytesWritten" />
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.AccuracyInMicroseconds" />
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.HasExtensions" />
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.HashAlgorithmId" />
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.IsOrdering" />
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.PolicyId" />
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.Timestamp" />
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.Version" />
    <member name="T:System.Security.Cryptography.Pkcs.SignedCms">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 类启用 CMS/PKCS #7 消息的签名和验证。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor" /> 构造函数创建 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 类的实例。</summary>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)" /> 构造函数通过使用指定的内容信息作为内部内容来创建 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 类的一个实例。</summary>
      <param name="contentInfo">一个 <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 对象，它将内容信息指定为 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 消息的内部内容。</param>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)" /> 构造函数通过使用指定的内容信息作为内部内容，同时使用 Detached 状态来创建 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 类的一个实例。</summary>
      <param name="contentInfo">一个 <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 对象，它将内容信息指定为 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 消息的内部内容。</param>
      <param name="detached">一个 <see cref="T:System.Boolean" /> 值，指定 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 对象是否用于分离签名。 如果 <paramref name="detached" /> 为 <see langword="true" />，则分离签名。 如果 <paramref name="detached" /> 为 <see langword="false" />，则不分离签名。</param>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)" /> 构造函数通过使用指定的主题标识符类型作为签名者默认的主题标识符类型来创建 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 类的一个实例。</summary>
      <param name="signerIdentifierType">一个 <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> 成员，为签名者指定默认主题标识符类型。</param>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)" /> 构造函数创建 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 类的一个实例，创建时使用指定的主题标识符类型作为签名者默认的主题标识符类型，将内容信息作为内部内容。</summary>
      <param name="signerIdentifierType">一个 <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> 成员，为签名者指定默认主题标识符类型。</param>
      <param name="contentInfo">一个 <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 对象，它将内容信息指定为 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 消息的内部内容。</param>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)" /> 构造函数创建 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 类的一个实例，创建时使用指定的主题标识符类型作为签名者默认的主题标识符类型，将内容信息作为内部内容，同时使用 Detached 状态。</summary>
      <param name="signerIdentifierType">一个 <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> 成员，为签名者指定默认主题标识符类型。</param>
      <param name="contentInfo">一个 <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 对象，它将内容信息指定为 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 消息的内部内容。</param>
      <param name="detached">一个 <see cref="T:System.Boolean" /> 值，指定 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 对象是否用于分离签名。 如果 <paramref name="detached" /> 为 <see langword="true" />，则分离签名。 如果 detached 为 <see langword="false" />，则不分离签名。</param>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.AddCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>向用于编码 CMS/PKCS #7 消息的证书集合添加证书。</summary>
      <param name="certificate">要添加到集合中的证书。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">集合中已存在该证书。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash" /> 方法验证 CMS/PKCS #7 消息的数据完整性。 <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash" /> 是一个专用方法，用于特定的安全基础结构应用程序，这种应用程序只希望检查 CMS 消息的哈希值，而不执行整个数字签名验证。 由于 <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash" /> 方法并不涉及对数字签名的验证，因此它不对消息的作者和发送者进行身份验证。 要对 CMS/PKCS #7 消息的完整性和真实性进行通用检查，请使用 <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)" /> 或 <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" /> 方法。</summary>
      <exception cref="T:System.InvalidOperationException">一个方法调用对于对象的当前状态无效。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)" /> 方法验证签名 CMS/PKCS #7 消息上的数字签名，并验证签名者的证书（可选）。</summary>
      <param name="verifySignatureOnly">一个 <see cref="T:System.Boolean" /> 值，指定是否只验证数字签名而不验证签名者的证书。  
  
如果 <paramref name="verifySignatureOnly" /> 为 <see langword="true" />，则仅验证数字签名。 如果该值为 <see langword="false" />，则验证数字签名、签名者的证书和证书的用途。 如果证书没有密钥用法或如果密钥用法支持数字签名或认可，则认为该证书的用途有效。</param>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
      <exception cref="T:System.InvalidOperationException">一个方法调用对于对象的当前状态无效。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" /> 方法通过使用指定的证书集合对签名 CMS/PKCS #7 消息的数字签名进行验证，并对签名者的证书进行验证（可选）。</summary>
      <param name="extraStore">可用于验证证书链的 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> 对象。 如果没有其他证书要用于验证证书链，则应使用 <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)" /> 而不是 <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" />。</param>
      <param name="verifySignatureOnly">一个 <see cref="T:System.Boolean" /> 值，指定是否只验证数字签名而不验证签名者的证书。  
  
如果 <paramref name="verifySignatureOnly" /> 为 <see langword="true" />，则仅验证数字签名。 如果该值为 <see langword="false" />，则验证数字签名、签名者的证书和证书的用途。 如果证书没有密钥用法或如果密钥用法支持数字签名或认可，则认为该证书的用途有效。</param>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
      <exception cref="T:System.InvalidOperationException">一个方法调用对于对象的当前状态无效。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature">
      <summary>创建一个签名，并将该签名添加到 CMS/PKCS #7 消息中。</summary>
      <exception cref="T:System.InvalidOperationException">.NET Framework（所有版本）和 .NET Core 3.0 及更高版本：未指定收件人证书。</exception>
      <exception cref="T:System.PlatformNotSupportedException">.NET Core 2.2 版本及更早版本：未提供签名者证书。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner)">
      <summary>使用指定的签名者创建一个签名，并将该签名添加到 CMS/PKCS #7 消息中。</summary>
      <param name="signer">一个表示签名者的 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner,System.Boolean)">
      <summary>使用指定的签名者创建一个签名，并将该签名添加到 CMS/PKCS #7 消息中。</summary>
      <param name="signer">一个表示签名者的 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 对象。</param>
      <param name="silent">仅 .NET Core：如果在禁用 PIN 提示的情况下请求打开密钥（如果支持），则为 <see langword="true" />；否则为 <see langword="false" />。 在 .NET Framework 中，不使用此参数，并且将始终显示 PIN 提示（如果需要）。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="signer" /> 上声明的默认值为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
      <exception cref="T:System.InvalidOperationException">仅限 .NET Framework：未指定签名证书。</exception>
      <exception cref="T:System.PlatformNotSupportedException">仅限 .NET Core：未指定签名证书。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])">
      <summary>对已编码的 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 消息进行解码。</summary>
      <param name="encodedMessage">表示待解码的编码 CMS/PKCS #7 消息的字节值数组。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="encodedMessage" /> 上声明的默认值为 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="encodedMessage" /> 未能成功解码。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.Decode(System.ReadOnlySpan{System.Byte})">
      <param name="encodedMessage">表示待解码的编码 CMS/PKCS #7 消息的字节值只读范围。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="encodedMessage" /> 未能成功解码。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.Encode">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.Encode" /> 方法将对象中的信息编码到一个 CMS/PKCS #7 消息中。</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
      <exception cref="T:System.InvalidOperationException">一个方法调用对于对象的当前状态无效。</exception>
      <returns>表示编码消息的字节值数组。 该编码消息可由 <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])" /> 方法解码。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.RemoveCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>从用于编码 CMS/PKCS #7 消息的证书集合中删除指定的证书。</summary>
      <param name="certificate">要从集合中删除的证书。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">找不到该证书。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Int32)">
      <summary>移除 <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos" /> 集合中指定索引处的签名。</summary>
      <param name="index">要移除的签名的从零开始的索引。</param>
      <exception cref="T:System.InvalidOperationException">CMS/PKCS # 7 消息未签名且 <paramref name="index" /> 无效。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小于零。  
  
或 
 <paramref name="index" /> 比签名数减 1 要大。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">不可删除签名。  
  
 或  
  
 出现内部加密错误。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Security.Cryptography.Pkcs.SignerInfo)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Security.Cryptography.Pkcs.SignerInfo)" /> 方法移除指定 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 对象的签名。</summary>
      <param name="signerInfo">表示被移除的副署的 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">参数值超出了被调用方法定义的允许值范围。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignedCms.Certificates">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.Certificates" /> 属性检索与编码 CMS/PKCS #7 消息相关联的证书。</summary>
      <returns>一个 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> 集合，表示用于编码 CMS/PKCS #7 消息的证书集。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo" /> 属性检索编码 CMS/PKCS #7 消息的内部内容。</summary>
      <returns>一个 <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 对象，表示 CMS/PKCS #7 消息的内容。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignedCms.Detached">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.Detached" /> 属性检索 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 对象是否用于分离签名。</summary>
      <returns>一个 <see cref="T:System.Boolean" /> 值，指定 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 对象是否用于分离签名。 如果此属性为 <see langword="true" />，则分离签名。 如果此属性为 <see langword="false" />，则不分离签名。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos" /> 属性检索与 CMS/PKCS #7 消息相关联的 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 集合。</summary>
      <returns>一个 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 对象，表示 CMS/PKCS #7 消息的签名者信息。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignedCms.Version">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.Version" /> 属性检索 CMS/PKCS #7 消息的版本。</summary>
      <returns>一个 int 值，表示 CMS/PKCS #7 消息的版本。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SignerInfo">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 类表示一个签名者，该签名者与表示 CMS/PKCS #7 消息的 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 对象相关联。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.AddUnsignedAttribute(System.Security.Cryptography.AsnEncodedData)">
      <summary>将指定属性添加到当前文档中。</summary>
      <param name="asnEncodedData">要添加到文档的 ASN.1 编码属性。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">找不到原始签名者。
        
 - 或 -

ASN1 损坏数据。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash" /> 方法验证 CMS/PKCS #7 消息签名者信息的数据完整性。 <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash" /> 是一个专用方法，用于特定的安全基础结构应用程序。在这些应用程序中，在设置 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 对象时，使用者使用 <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> 枚举的 HashOnly 成员****。 由于 <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash" /> 方法并不涉及对数字签名进行验证，因此该方法不对签名者信息进行身份验证。 要对 CMS/PKCS #7 消息签名者信息和副署的完整性和可靠性进行通用检查，请使用 <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)" /> 或 <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" /> 方法。</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)" /> 方法对消息的数字签名进行验证，并对证书进行验证（可选）。</summary>
      <param name="verifySignatureOnly">一个指定是否仅验证数字签名的布尔值。 如果 <paramref name="verifySignatureOnly" /> 为 <see langword="true" />，则仅验证签名。 如果 <paramref name="verifySignatureOnly" /> 为 <see langword="false" />，则将对数字签名、证书链和证书的用途进行验证。 如果证书没有密钥用法或如果密钥用法支持数字签名或认可，则认为该证书的用途有效。</param>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
      <exception cref="T:System.InvalidOperationException">一个方法调用对于对象的当前状态无效。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" /> 方法通过使用指定的证书集合对消息的数字签名进行验证，并对证书进行验证（可选）。</summary>
      <param name="extraStore">可用于验证链的 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> 对象。 如果没有其他要用于验证链的证书，则应使用 <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)" /> 而不应使用 <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" />。</param>
      <param name="verifySignatureOnly">一个指定是否仅验证数字签名的布尔值。 如果 <paramref name="verifySignatureOnly" /> 为 <see langword="true" />，则仅验证签名。 如果 <paramref name="verifySignatureOnly" /> 为 <see langword="false" />，则将对数字签名、证书链和证书的用途进行验证。 如果证书没有密钥用法或如果密钥用法支持数字签名或认可，则认为该证书的用途有效。</param>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
      <exception cref="T:System.InvalidOperationException">一个方法调用对于对象的当前状态无效。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature" /> 方法提示用户选择签名证书、创建副署并向 CMS/PKCS #7 消息添加签名。 副署限制为一层。</summary>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)" /> 方法通过使用指定的签名者创建副署并将签名添加到 CMS/PKCS #7 消息。 副署限制为一层。</summary>
      <param name="signer">表示副署签名者的 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.GetSignature">
      <summary>检索当前 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 对象的签名。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 对象的签名。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Int32)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Int32)" /> 方法移除 <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos" /> 集合中指定索引处的副署。</summary>
      <param name="index">要移除的副署的索引（从零开始）。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)" /> 方法移除指定 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 对象的副署。</summary>
      <param name="counterSignerInfo">表示被移除的副署的 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">参数值超出了被调用方法定义的允许值范围。</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">未能完成加密操作。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveUnsignedAttribute(System.Security.Cryptography.AsnEncodedData)">
      <summary>从当前文档中删除指定属性。</summary>
      <param name="asnEncodedData">要从文档中删除的 ASN.1 编码属性。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">找不到原始签名者。

 - 或 -

找不到属性。

 - 或 -
 
ASN1 损坏数据。</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.Certificate">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.Certificate" /> 属性检索与该签名者信息关联的签名证书。</summary>
      <returns>表示签名证书的 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 对象。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos" /> 属性检索与该签名者信息关联的一组副署签名者。</summary>
      <returns>一个 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 集合，表示该签名者信息的副署签名者。 如果没有副署签名者，则此属性为空集合。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm" /> 属性检索表示用于计算签名的哈希算法的 <see cref="T:System.Security.Cryptography.Oid" /> 对象。</summary>
      <returns>一个 <see cref="T:System.Security.Cryptography.Oid" /> 对象，表示用于计算签名的哈希算法。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.SignatureAlgorithm">
      <summary>获取当前 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 对象使用的签名算法的标识符。</summary>
      <returns>当前 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 对象使用的签名算法的标识符。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes" /> 属性检索与该签名者信息关联的已签名特性的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 集合。 已签名特性与其余的消息内容一起进行签名。</summary>
      <returns>一个表示已签名特性的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 集合。 如果没有已签名特性，则该属性为空集合。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier" /> 属性检索与该签名者信息关联的签名者的证书标识符。</summary>
      <returns>一个 <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifier" /> 对象，此对象唯一地标识与该签名者信息关联的证书。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes" /> 属性检索与 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 内容关联的未签名特性的 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 集合。 可对未签名特性进行修改，这不会导致签名无效。</summary>
      <returns>表示未签名特性的 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 集合。 如果没有未签名特性，则该属性为空集合。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.Version">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.Version" /> 属性检索签名者信息版本。</summary>
      <returns>指定签名者信息版本的整数值。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SignerInfoCollection">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 类表示 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 对象的集合。 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 实现 <see cref="T:System.Collections.ICollection" /> 接口。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.CopyTo(System.Array,System.Int32)" /> 方法将 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 集合复制到一个数组中。</summary>
      <param name="array">一个 <see cref="T:System.Array" /> 对象，要将 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 集合复制到其中。</param>
      <param name="index">
        <paramref name="array" /> 中从零开始的索引，<see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 集合将被复制到此位置。</param>
      <exception cref="T:System.ArgumentException">为方法提供的某一参数无效。</exception>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">参数值超出了被调用方法定义的允许值范围。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.SignerInfo[],System.Int32)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.SignerInfo[],System.Int32)" /> 方法将 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 集合复制到 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 数组中。</summary>
      <param name="array">
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 对象的数组，<see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 集合将被复制到其中。</param>
      <param name="index">
        <paramref name="array" /> 中从零开始的索引，<see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 集合将被复制到此位置。</param>
      <exception cref="T:System.ArgumentException">为方法提供的某一参数无效。</exception>
      <exception cref="T:System.ArgumentNullException">向不接受空引用作为有效参数的方法传递了一个空引用。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">参数值超出了被调用方法定义的允许值范围。</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.GetEnumerator">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.GetEnumerator" /> 方法为 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" /> 集合返回一个 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 对象。</summary>
      <returns>可用于对 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" /> 集合进行枚举的 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 对象。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.System#Collections#IEnumerable#GetEnumerator" /> 方法为 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" /> 集合返回一个 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 对象。</summary>
      <returns>可用于对 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" /> 集合进行枚举的 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 对象。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.Count">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.Count" /> 属性检索 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 集合中的项数。</summary>
      <returns>一个整数值，表示集合中的项数。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.IsSynchronized">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.IsSynchronized" /> 属性检索对集合的访问是否为同步的，即线程安全的。 此属性始终返回 <see langword="false" />，表示集合不是线程安全的。</summary>
      <returns>
        <see cref="T:System.Boolean" /> 值 <see langword="false" />，表示集合不是线程安全的。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.Item(System.Int32)">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.Item(System.Int32)" /> 属性检索集合中指定索引处的 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 对象。</summary>
      <param name="index">一个表示集合中的索引的整数值。 索引是从零开始的。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">参数值超出了被调用方法定义的允许值范围。</exception>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" />位于指定索引处的对象。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.SyncRoot">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.SyncRoot" /> 属性检索用于同步对 <see cref="T:System.Object" /> 集合的访问的 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 对象。</summary>
      <returns>用于同步对 <see cref="T:System.Object" /> 集合的访问的 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 对象。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" /> 类为 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 集合提供枚举功能。 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" /> 实现 <see cref="T:System.Collections.IEnumerator" /> 接口。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.MoveNext">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.MoveNext" /> 方法将枚举前移到 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 集合中的下一个 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 对象。</summary>
      <returns>此方法返回一个布尔值，该值指定枚举是否成功前进。 如果枚举成功移动到下一个 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 对象，该方法将返回 <see langword="true" />。 如果枚举移过枚举中的最后一项，则返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.Reset">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.Reset" /> 方法将枚举重置到 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 集合中的第一个 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 对象。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.Current">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.Current" /> 属性从 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 集合中检索当前的 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 对象。</summary>
      <returns>一个 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 对象，表示 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 集合中的当前签名人信息结构。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.System#Collections#IEnumerator#Current">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.System#Collections#IEnumerator#Current" /> 属性从 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 集合中检索当前的 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 对象。</summary>
      <returns>一个 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 对象，表示 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 集合中的当前签名人信息结构。</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SubjectIdentifier">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifier" /> 类定义主题的标识符类型，例如 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 或 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" />。  可通过证书颁发者和序列号或主题密钥来标识主题。</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SubjectIdentifier.MatchesCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>验证指定证书的使用者标识符是否与当前使用者标识符实例匹配。</summary>
      <param name="certificate">与当前使用者标识符实例匹配的证书。</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">无效的使用者标识符类型。</exception>
      <returns>如果指定证书的标识符与当前使用者标识符实例匹配，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type" /> 属性检索主题标识符的类型。 可通过证书颁发者和序列号或主题密钥来标识主题。</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" />标识主题类型的枚举的成员。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Value">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Value" /> 属性检索主题标识符的值。 使用 <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type" /> 属性可以确定主题标识符的类型，使用 <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Value" /> 属性可以检索相应的值。</summary>
      <returns>一个 <see cref="T:System.Object" /> 对象，用于表示主题标识符的值。 此 <see cref="T:System.Object" /> 可以是下列对象之一，具体是哪个对象由 <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type" /> 属性确定。  
  
 <list type="table"><listheader><term><see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type" /> 属性</term><description> 对象</description></listheader><item><term> IssuerAndSerialNumber</term><description><see cref="T:System.Security.Cryptography.Xml.X509IssuerSerial" /></description></item><item><term> SubjectKeyIdentifier</term><description><see cref="T:System.String" /></description></item></list></returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey" /> 类定义主题的标识符类型，例如 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 或 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" />。  主题可以由证书颁发者和序列号、主题密钥哈希或主题密钥标识。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type" /> 属性检索主题标识符或主题密钥的类型。 主题可以由证书颁发者和序列号、主题密钥哈希或主题密钥标识。</summary>
      <returns>指定主题标识符类型的 <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType" /> 枚举的成员。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Value">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Value" /> 属性检索主题标识符或主题密钥的值。 使用 <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type" /> 属性确定主题标识符或主题密钥的类型，使用 <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Value" /> 属性检索相应的值。</summary>
      <returns>一个 <see cref="T:System.Object" /> 对象，表示主题标识符或主题密钥的值。 此 <see cref="T:System.Object" /> 可以是下列对象之一，具体是哪个对象由 <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type" /> 属性确定。  
  
 <list type="table"><listheader><term><see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type" /> 属性</term><description> 对象</description></listheader><item><term> IssuerAndSerialNumber</term><description><see cref="T:System.Security.Cryptography.Xml.X509IssuerSerial" /></description></item><item><term> SubjectKeyIdentifier</term><description><see cref="T:System.String" /></description></item><item><term> PublicKeyInfo</term><description><see cref="T:System.Security.Cryptography.Pkcs.PublicKeyInfo" /></description></item></list></returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType" /> 枚举定义如何标识使用者。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType.IssuerAndSerialNumber">
      <summary>通过证书颁发者和序列号标识使用者。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType.PublicKeyInfo">
      <summary>通过公钥标识使用者。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType.SubjectKeyIdentifier">
      <summary>通过使用者密钥的哈希值标识使用者。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType.Unknown">
      <summary>类型未知。</summary>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> 枚举定义使用者标识符的类型。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.IssuerAndSerialNumber">
      <summary>通过证书颁发者和序列号标识使用者。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.NoSignature">
      <summary>使用者是在参与只使用哈希算法的完整性检查操作过程中被标识的。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.SubjectKeyIdentifier">
      <summary>使用者是通过使用者公钥的哈希被标识的。 所使用的哈希算法由使用者的证书中的签名算法套件确定。</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.Unknown">
      <summary>使用者标识符的类型未知。</summary>
    </member>
    <member name="T:System.Security.Cryptography.Xml.X509IssuerSerial">
      <summary>表示 XML 数字签名的 &lt;<see langword="X509IssuerSerial" />&gt; 元素。</summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.X509IssuerSerial.IssuerName">
      <summary>获取或设置 X.509 证书颁发者的可分辨名称。</summary>
      <returns>一个 X.509 证书颁发者的识别名。</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.X509IssuerSerial.SerialNumber">
      <summary>获取或设置 X.509 证书颁发者的序列号。</summary>
      <returns>一个 X.509 证书颁发者的序列号。</returns>
    </member>
  </members>
</doc>