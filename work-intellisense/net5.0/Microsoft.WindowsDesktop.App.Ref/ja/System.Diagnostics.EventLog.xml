<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Diagnostics.EventLog</name>
  </assembly>
  <members>
    <member name="T:System.Diagnostics.EntryWrittenEventArgs">
      <summary>
        <see cref="E:System.Diagnostics.EventLog.EntryWritten" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Diagnostics.EntryWrittenEventArgs.#ctor">
      <summary>
        <see cref="T:System.Diagnostics.EntryWrittenEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Diagnostics.EntryWrittenEventArgs.#ctor(System.Diagnostics.EventLogEntry)">
      <summary>指定したイベント ログ エントリを使用して、<see cref="T:System.Diagnostics.EntryWrittenEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="entry">書き込まれたエントリを表す <see cref="T:System.Diagnostics.EventLogEntry" />。</param>
    </member>
    <member name="P:System.Diagnostics.EntryWrittenEventArgs.Entry">
      <summary>ログに書き込まれたイベント ログ エントリを取得します。</summary>
      <returns>イベント ログに書き込まれたエントリを表す <see cref="T:System.Diagnostics.EventLogEntry" />。</returns>
    </member>
    <member name="T:System.Diagnostics.EntryWrittenEventHandler">
      <summary>
        <see cref="T:System.Diagnostics.EventLog" /> の <see cref="E:System.Diagnostics.EventLog.EntryWritten" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベント データを格納している <see cref="T:System.Diagnostics.EntryWrittenEventArgs" />。</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventBookmark">
      <summary>イベント ストリーム内のプレースホルダー (ブックマーク) を表します。 プレースホルダーを使用すると、位置をマークして、イベントのストリーム内のその位置に戻ることができます。 このオブジェクトのインスタンスは、<see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" /> オブジェクトから取得できます。その場合、そのインスタンスはそのイベント レコードの位置に対応します。</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventKeyword">
      <summary>イベントのキーワードを表します。 キーワードはイベント プロバイダーで定義され、イベントの使用方法に基づいてイベントを他の類似イベントと共にグループ化するために使用されます。</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventKeyword.DisplayName">
      <summary>キーワードのローカライズされた名前を取得します。</summary>
      <returns>このキーワードのローカライズされた名前を含む文字列。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventKeyword.Name">
      <summary>キーワードのローカライズされていない名前を取得します。</summary>
      <returns>このキーワードのローカライズされていない名前を含む文字列。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventKeyword.Value">
      <summary>キーワードに関連付けられている数値を取得します。</summary>
      <returns>キーワードに関連付けられている数値。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLevel">
      <summary>イベント プロバイダーで定義されているイベント レベルを格納します。 このレベルは、イベントの重大度を示します。</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLevel.DisplayName">
      <summary>イベント レベルのローカライズされた名前を取得します。 この名前は、このレベルが使用されているイベントの重大度レベルを示しています。</summary>
      <returns>イベントレベルのローカライズされた名前を含む文字列。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLevel.Name">
      <summary>イベント レベルのローカライズされていない名前を取得します。</summary>
      <returns>イベントレベルのローカライズされていない名前を含む文字列。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLevel.Value">
      <summary>イベント レベルの数値を取得します。</summary>
      <returns>イベントレベルの数値。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration">
      <summary>イベント ログの静的な情報および構成設定を格納します。 構成設定の多くは、ログを作成したイベント プロバイダーにより定義されています。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor(System.String)">
      <summary>情報および構成設定の取得対象となるローカル イベント ログを指定して、新しい <see cref="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" /> オブジェクトを初期化します。</summary>
      <param name="logName">情報および構成設定の取得対象となるローカル イベント ログの名前。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor(System.String,System.Diagnostics.Eventing.Reader.EventLogSession)">
      <summary>情報および構成設定の取得対象となるログの名前を指定して、新しい <see cref="T:System.Diagnostics.Eventing.Reader.EventLogConfiguration" /> オブジェクトを初期化します。 このログは、指定したイベント ログ セッションに応じて、ローカル コンピューターまたはリモート コンピューター上に存在します。</summary>
      <param name="logName">情報および構成設定の取得対象となるイベント ログの名前。</param>
      <param name="session">指定したログが属しているイベント ログ サービスを決定するために使用するイベント ログ セッション。 このセッションは、ローカル コンピューターまたはリモート コンピューター上のイベント ログ サービスに接続されています。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose">
      <summary>このオブジェクトに使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose(System.Boolean)">
      <summary>このオブジェクトに使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges">
      <summary>構成設定を保存します。</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsClassicLog">
      <summary>イベント ログが従来のイベント ログかどうかを示す値を取得します。 従来のイベント ログとは、そのイベントが、イベント プロバイダーで使用されるマニフェスト (.xml ファイル) ではなく、.mc ファイルで定義されているイベント ログです。</summary>
      <returns>
        <see langword="true" /> イベントログが従来のログである場合は、それ以外の場合は <see langword="false" /> 。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsEnabled">
      <summary>イベント ログが有効か無効かを示す値を取得または設定します。 有効なログとはイベントを記録できるログで、無効なログとはイベントを記録できないログです。</summary>
      <returns>
        <see langword="true" /> ログが有効な場合は。それ以外の場合は <see langword="false" /> 。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogFilePath">
      <summary>イベントをログに格納するファイルの場所へのファイル ディレクトリ パスを取得または設定します。</summary>
      <returns>イベントログファイルへのパスを含む文字列。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogIsolation">
      <summary>イベント ログが、アプリケーション、システム、またはカスタムのいずれのイベント ログであるかを示す <see cref="T:System.Diagnostics.Eventing.Reader.EventLogIsolation" /> 値を取得します。</summary>
      <returns>列挙値の 1 つ。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogMode">
      <summary>イベント ログがいっぱいになった場合のイベントの処理方法を決定する <see cref="T:System.Diagnostics.Eventing.Reader.EventLogMode" /> 値を取得または設定します。</summary>
      <returns>列挙値の 1 つ。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogName">
      <summary>イベント ログの名前を取得します。</summary>
      <returns>イベント ログの名前。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogType">
      <summary>イベント ログの種類を判断する <see cref="T:System.Diagnostics.Eventing.Reader.EventLogType" /> 値を取得します。</summary>
      <returns>列挙値の 1 つ。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.MaximumSizeInBytes">
      <summary>イベント ログ ファイルの最大サイズ (バイト単位) を取得または設定します。 ファイルがこの最大サイズに達すると、いっぱいであると見なされます。</summary>
      <returns>イベントログファイルの許容最大サイズ (バイト単位)。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.OwningProviderName">
      <summary>このイベント ログを作成したイベント プロバイダーの名前を取得します。</summary>
      <returns>このイベントログを作成したイベントプロバイダーの名前。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderBufferSize">
      <summary>イベント プロバイダーがログにイベントを発行するために使用するバッファーのサイズを取得します。</summary>
      <returns>イベントプロバイダーがログにイベントを発行するために使用するバッファーのサイズ。 <see langword="null" />を指定できます。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderControlGuid">
      <summary>イベント ログがデバッグ ログである場合に、そのログに対するコントロールのグローバル一意識別子 (GUID: Globally Unique Identifier) を取得します。 このログがデバッグ ログでない場合、この値は <see langword="null" /> になります。</summary>
      <returns>GUID 値 <see langword="null" /> 。ログがデバッグログでない場合は。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderKeywords">
      <summary>イベント プロバイダーで使用されるキーワード マスクを取得または設定します。</summary>
      <returns>イベントプロバイダーによって使用されるキーワードマスク <see langword="null" /> 。イベントプロバイダーがキーワードを定義しなかった場合は。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLatency">
      <summary>イベントをログに発行するときにイベント プロバイダーが使用する最大待機時間を取得します。</summary>
      <returns>イベントをログに発行するときにイベントプロバイダーによって使用される最大待機時間 <see langword="null" /> 。イベントプロバイダーによって待機時間が指定されなかった場合は。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLevel">
      <summary>イベント ログに記録できる最大のイベント レベル (これはイベントの重大度レベルを定義します) を取得または設定します。 この値はイベント プロバイダーによって定義されます。</summary>
      <returns>イベントログへの記録が許可される最大のイベントレベル <see langword="null" /> 。イベントプロバイダーで最大イベントレベルが定義されていない場合は。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMaximumNumberOfBuffers">
      <summary>イベントをイベント ログに発行するときにイベント プロバイダーが使用するバッファーの最大数を取得します。</summary>
      <returns>イベントをイベントログに発行するためにイベントプロバイダーによって使用されるバッファーの最大数。 この値は、<see langword="null" /> の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMinimumNumberOfBuffers">
      <summary>イベントをイベント ログに発行するときにイベント プロバイダーが使用するバッファーの最小数を取得します。</summary>
      <returns>イベントをイベントログに発行するためにイベントプロバイダーによって使用されるバッファーの最小数。 この値は、<see langword="null" /> の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderNames">
      <summary>このイベント ログにイベントを発行できるすべてのイベント プロバイダーの名前の列挙可能なコレクションを取得します。</summary>
      <returns>イベント プロバイダーの名前が格納された文字列の列挙可能なコレクションです。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogConfiguration.SecurityDescriptor">
      <summary>イベント ログのセキュリティ記述子を取得または設定します。 セキュリティ記述子は、イベント ログの読み書きができるユーザーおよびユーザーのグループを定義します。</summary>
      <returns>イベントログのセキュリティ記述子を格納している文字列。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogException">
      <summary>イベント ログに関連する情報の読み取り中にエラーが発生した場合にスローされるすべての例外の基本クラスを表します。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor">
      <summary>
        <see cref="T:System.Diagnostics.Eventing.Reader.EventLogException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.Int32)">
      <summary>例外のエラー コードを使用して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="errorCode">イベント ログに関連する情報の読み取り中または構成中に発生したエラーのエラー コード。 イベント ログに関連するエラー コードの詳細および一覧については、https://go.microsoft.com/fwlink/?LinkId=82629 を参照してください。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>シリアル化したデータを使用して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="serializationInfo">スローされている例外に関するシリアル化済みオブジェクト データを保持している <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクト。</param>
      <param name="streamingContext">転送元または転送先についてのコンテキスト情報を保持する <see cref="T:System.Runtime.Serialization.StreamingContext" /> オブジェクトです。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.String)">
      <summary>現在の例外を説明するエラー メッセージを指定して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">現在の例外を説明するエラー メッセージ。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.String,System.Exception)">
      <summary>エラー メッセージおよび内部例外を使用して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">現在の例外を説明するエラー メッセージ。</param>
      <param name="innerException">現在の例外の原因となった例外インスタンス。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>例外に関する情報を使用して、SerializationInfo オブジェクトを設定します。</summary>
      <param name="info">スローされている例外に関するシリアル化済みオブジェクト データを保持している <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクト。</param>
      <param name="context">転送元または転送先についてのコンテキスト情報を保持する <see cref="T:System.Runtime.Serialization.StreamingContext" /> オブジェクトです。</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogException.Message">
      <summary>現在の例外を説明するエラー メッセージを取得します。</summary>
      <returns>現在の例外を説明するエラー メッセージが格納された文字列を返します。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogInformation">
      <summary>アクティブなイベント ログおよびイベント ログ ファイルの、実行時に設定されるプロパティにアクセスできるようにします。 これらのプロパティには、ログ内のイベント数、ログのサイズ、ログがいっぱいかどうかを判断する値、およびログに最後に書き込んだ時刻や最後にアクセスした時刻が格納されます。</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.Attributes">
      <summary>ログに関連付けられているログ ファイルのファイル属性を取得します。</summary>
      <returns>整数値が返されます。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.CreationTime">
      <summary>イベント ログに関連付けられているログ ファイルが作成された時刻を取得します。</summary>
      <returns>
        <see cref="T:System.DateTime" /> オブジェクトを返します。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.FileSize">
      <summary>イベント ログに関連付けられているファイルのサイズ (バイト単位) を取得します。</summary>
      <returns>long 型の値を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.IsLogFull">
      <summary>ログ ファイルが最大サイズに達した (ログがいっぱい) かどうかを判断するブール値を取得します。</summary>
      <returns>ログがいっぱいである場合は <see langword="true" /> を返します。ログがいっぱいではない場合は <see langword="false" /> を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.LastAccessTime">
      <summary>イベント ログに関連付けられているログ ファイルがアクセスされた最後の時刻を取得します。</summary>
      <returns>
        <see cref="T:System.DateTime" /> オブジェクトを返します。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.LastWriteTime">
      <summary>イベント ログに関連付けられているログ ファイルにデータが書き込まれた最後の時刻を取得します。</summary>
      <returns>
        <see cref="T:System.DateTime" /> オブジェクトを返します。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.OldestRecordNumber">
      <summary>イベント ログ内の最も古いイベント レコードの番号を取得します。</summary>
      <returns>イベント ログ内の最も古いイベント レコードの番号を表す long 型の値を返します。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogInformation.RecordCount">
      <summary>イベント ログ内のイベント レコードの数を取得します。</summary>
      <returns>イベント ログ内のイベント レコードの数を表す long 型の値を返します。 この値は null の場合もあります。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException">
      <summary>イベント プロバイダーがイベントで無効なデータを発行したときにスローされる例外を表します。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor">
      <summary>
        <see cref="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>シリアル化したデータを使用して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="serializationInfo">スローされている例外に関するシリアル化済みオブジェクト データを保持している <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクト。</param>
      <param name="streamingContext">転送元または転送先についてのコンテキスト情報を保持する <see cref="T:System.Runtime.Serialization.StreamingContext" /> オブジェクトです。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor(System.String)">
      <summary>現在の例外を説明するエラー メッセージを指定して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">現在の例外を説明するエラー メッセージ。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException.#ctor(System.String,System.Exception)">
      <summary>エラー メッセージおよび内部例外を使用して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogInvalidDataException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">現在の例外を説明するエラー メッセージ。</param>
      <param name="innerException">現在の例外の原因となった例外インスタンス。</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogIsolation">
      <summary>イベント ログの既定のアクセス許可を定義します。 Application 値と System 値は、そのログがアクセス制御リスト (ACL: Access Control List) を該当する Windows ログ (アプリケーション イベント ログまたはシステム イベント ログ) と共有し、ETW (Event Tracing for Windows) セッションを同じ分離の他のログと共有することを示しています。 Custom 分離が設定されたすべてのチャネルは、プライベート ETW セッションを使用します。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogIsolation.Application">
      <summary>このログは、アクセス制御リストをアプリケーション イベント ログと共有し、ETW セッションを Application 分離が設定された他のログと共有します。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogIsolation.Custom">
      <summary>このイベント ログは、独自のプライベート ETW セッションを使用するカスタム イベント ログです。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogIsolation.System">
      <summary>このログは、アクセス制御リストをシステム イベント ログと共有し、ETW セッションを System 分離が設定された他のログと共有します。</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogLink">
      <summary>イベント プロバイダーとそのイベント プロバイダーがイベントを発行する先のイベント ログの間のリンクを表します。 このオブジェクトはインスタンス化できません。</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogLink.DisplayName">
      <summary>イベント ログのローカライズされた名前を取得します。</summary>
      <returns>イベント ログのローカライズされた名前が格納された文字列を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogLink.IsImported">
      <summary>イベント ログが、イベント プロバイダーで定義されたのではなくインポートされたのかどうかを示すブール値を取得します。 インポートされたイベント ログは、別のプロバイダーで定義されます。</summary>
      <returns>イベント ログがイベント プロバイダーによってインポートされている場合は <see langword="true" /> を返します。イベント ログがイベント プロバイダーによってインポートされていない場合は <see langword="false" /> を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogLink.LogName">
      <summary>このオブジェクトに関連付けられているイベント ログのローカライズされていない名前を取得します。</summary>
      <returns>このオブジェクトに関連付けられているイベント ログのローカライズされていない名前が格納された文字列を返します。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogMode">
      <summary>ログが最大サイズに達した (イベント ログがいっぱいになった) 場合にイベント ログを処理するイベント ログ サービスの動作を決定します。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogMode.AutoBackup">
      <summary>ログがいっぱいになったら、アーカイブします。イベントは上書きしません。 このログは、必要に応じて自動的にアーカイブされます。 イベントが上書きされることはありません。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogMode.Circular">
      <summary>ログ ファイルがいっぱいになっても、新しいイベントの格納を継続します。 それぞれの新しい受信イベントで、ログ内の最も古いイベントが置き換えられます。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogMode.Retain">
      <summary>イベントを上書きしません。 ログは、自動ではなく手動でクリアします。</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException">
      <summary>要求されたイベント ログ (通常はイベント ログの名前またはイベント ログ ファイルのパスで指定されます) が存在しないときにスローされる例外を表します。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor">
      <summary>
        <see cref="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>シリアル化したデータを使用して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="serializationInfo">スローされている例外に関するシリアル化済みオブジェクト データを保持している <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクト。</param>
      <param name="streamingContext">転送元または転送先についてのコンテキスト情報を保持する <see cref="T:System.Runtime.Serialization.StreamingContext" /> オブジェクトです。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.String)">
      <summary>現在の例外を説明するエラー メッセージを指定して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">現在の例外を説明するエラー メッセージ。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogNotFoundException.#ctor(System.String,System.Exception)">
      <summary>エラー メッセージおよび内部例外を使用して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogNotFoundException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">現在の例外を説明するエラー メッセージ。</param>
      <param name="innerException">現在の例外の原因となった例外インスタンス。</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogPropertySelector">
      <summary>イベントの XML 表現内の要素に対応する XPath クエリを表す文字列配列を格納します。これは、イベント スキーマに基づいています。 このオブジェクトのクエリは、イベントから値を抽出するために使用されます。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.#ctor(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
        <see cref="T:System.Diagnostics.Eventing.Reader.EventLogPropertySelector" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="propertyQueries">イベントの XML 表現から値を抽出するために使用する XPath クエリ。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.Dispose">
      <summary>このオブジェクトに使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogPropertySelector.Dispose(System.Boolean)">
      <summary>このオブジェクトに使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException">
      <summary>指定したイベント プロバイダー名で、無効にされたイベント プロバイダーが参照されている場合にスローされる例外を表します。 無効にされたイベント プロバイダーは、イベントを発行できません。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor">
      <summary>
        <see cref="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>シリアル化したデータを使用して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="serializationInfo">スローされている例外に関するシリアル化済みオブジェクト データを保持している <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクト。</param>
      <param name="streamingContext">転送元または転送先についてのコンテキスト情報を保持する <see cref="T:System.Runtime.Serialization.StreamingContext" /> オブジェクトです。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor(System.String)">
      <summary>現在の例外を説明するエラー メッセージを指定して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">現在の例外を説明するエラー メッセージ。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException.#ctor(System.String,System.Exception)">
      <summary>エラー メッセージおよび内部例外を使用して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">現在の例外を説明するエラー メッセージ。</param>
      <param name="innerException">現在の例外の原因となった例外インスタンス。</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogQuery">
      <summary>イベント ログ内のイベントのクエリと、クエリの実行方法および実行対象のコンピューターを定義する設定を表します。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)">
      <summary>クエリのターゲットを指定して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogQuery" /> クラスの新しいインスタンスを初期化します。 ターゲットには、アクティブなイベント ログまたはログ ファイルを指定できます。</summary>
      <param name="path">照会するイベント ログの名前、または照会するイベント ログ ファイルのパス。</param>
      <param name="pathType">パスのパラメーターで使用する文字列でイベント ログの名前またはイベント ログ ファイルのパスを指定するかどうかを指定します。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String)">
      <summary>クエリのターゲットおよびイベント クエリを指定して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogQuery" /> クラスの新しいインスタンスを初期化します。 ターゲットには、アクティブなイベント ログまたはログ ファイルを指定できます。</summary>
      <param name="path">照会するイベント ログの名前、または照会するイベント ログ ファイルのパス。</param>
      <param name="pathType">パスのパラメーターで使用する文字列でイベント ログの名前またはイベント ログ ファイルのパスを指定するかどうかを指定します。</param>
      <param name="query">クエリの条件に一致するイベントを取得するために使用するイベント クエリ。</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogQuery.ReverseDirection">
      <summary>イベント ログ内の最も新しいイベントからログ内の最も古いイベントの方向にイベントを読み取るのかどうかを指定するブール値を取得または設定します。</summary>
      <returns>ログ内の最も新しいイベントから最も古いイベントの方向にイベントが読み取られる場合は <see langword="true" /> を返します。ログ内の最も古いイベントから最も新しいイベントの方向にイベントが読み取られる場合は <see langword="false" /> を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogQuery.Session">
      <summary>ローカル コンピューターまたはリモート コンピューターのイベント ログ サービスにアクセスするセッションを取得または設定します。 このオブジェクトは、この <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> オブジェクトと共に <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> オブジェクトまたは <see cref="T:System.Diagnostics.Eventing.Reader.EventLogQuery" /> オブジェクトを作成することで、リモート イベント ログにアクセスするように設定できます。</summary>
      <returns>
        <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> オブジェクトを返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogQuery.TolerateQueryErrors">
      <summary>クエリにエラーがある場合、このクエリがイベントの取得を継続するのかどうかを指定するブール値を取得または設定します。</summary>
      <returns>
        <see langword="true" /> は、一部のログでクエリが失敗する場合でも、このクエリがイベントの取得を継続することを示します。<see langword="false" /> は、クエリが失敗した場合、このクエリがイベントの取得を継続しないことを示します。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogReader">
      <summary>イベント クエリに基づいて、イベント ログからイベントを読み取ることができるようにします。 このオブジェクトによって読み取られるイベントは、<see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" /> オブジェクトとして返されます。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)">
      <summary>イベント クエリを指定して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="eventQuery">イベントを取得するために使用するイベント クエリ。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)">
      <summary>イベント クエリ、およびクエリの開始位置として使用するブックマークを指定して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="eventQuery">イベントを取得するために使用するイベント クエリ。</param>
      <param name="bookmark">イベント ログまたはイベント ストリーム内の開始位置として使用するブックマーク (プレースホルダー)。 ブックマーク イベントより後に記録されるイベントだけが、クエリによって返されます。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String)">
      <summary>イベントの取得対象のアクティブなイベント ログを指定して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="path">イベントの取得対象のイベント ログの名前。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)">
      <summary>イベントの取得対象のイベント ログの名前、またはイベントの取得対象のログ ファイルのパスを指定して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="path">イベントの取得対象のイベント ログの名前、またはイベントの取得対象のイベント ログ ファイルのパス。</param>
      <param name="pathType">パスのパラメーターで使用する文字列でイベント ログの名前またはイベント ログ ファイルのパスを指定するかどうかを指定します。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.CancelReading">
      <summary>現在のクエリ操作をキャンセルします。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.Dispose">
      <summary>このオブジェクトに使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.Dispose(System.Boolean)">
      <summary>このオブジェクトに使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent">
      <summary>このオブジェクト内のイベント クエリから返される次のイベントを読み取ります。</summary>
      <returns>
        <see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" /> オブジェクトを返します。</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.ReadEvent(System.TimeSpan)">
      <summary>このオブジェクト内のイベント クエリから返される次のイベントを読み取ります。</summary>
      <param name="timeout">キャンセルされるまでの、読み取り操作を実行できる最大時間。</param>
      <returns>
        <see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" /> オブジェクトを返します。</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark)">
      <summary>ブックマーク イベントを指定して、読み取られる次のイベントの取得元になるイベント ストリーム内の位置を変更します。 ブックマーク イベントより前に記録されたイベントは取得されません。</summary>
      <param name="bookmark">イベント ログまたはイベント ストリーム内の開始位置として使用するブックマーク (プレースホルダー)。 ブックマーク イベントより後に記録されるイベントだけが、クエリによって返されます。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.Diagnostics.Eventing.Reader.EventBookmark,System.Int64)">
      <summary>ブックマーク イベント、およびブックマークからのイベントのオフセット番号を指定して、読み取られる次のイベントの取得元になるイベント ストリーム内の位置を変更します。 ブックマーク イベントにオフセットを加えた位置より前に記録されたイベントは取得されません。</summary>
      <param name="bookmark">イベント ログまたはイベント ストリーム内の開始位置として使用するブックマーク (プレースホルダー)。 ブックマーク イベントより後に記録されるイベントだけが、クエリによって返されます。</param>
      <param name="offset">ブックマークの位置を変更するためのイベントのオフセット番号。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReader.Seek(System.IO.SeekOrigin,System.Int64)">
      <summary>開始位置、および開始位置からのオフセットを指定して、読み取られる次のイベントの取得元になるイベント ストリーム内の位置を変更します。 開始位置にオフセットを加えた位置より前に記録されたイベントは取得されません。</summary>
      <param name="origin">イベントのストリーム内でイベントに対してクエリを開始する位置を定義する <see cref="T:System.IO.SeekOrigin" /> 列挙値。</param>
      <param name="offset">開始位置に追加するイベントのオフセット番号。</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogReader.BatchSize">
      <summary>読み取り操作のたびにイベントのストリームから取得されるイベントの数を取得または設定します。</summary>
      <returns>整数値が返されます。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogReader.LogStatus">
      <summary>このオブジェクト内のイベント クエリに関連付けられているイベント ログまたはログ ファイルごとのステータスを取得します。</summary>
      <returns>このオブジェクト内のイベント クエリに関連付けられたイベント ログに関するステータス情報がそれぞれに格納されている <see cref="T:System.Diagnostics.Eventing.Reader.EventLogStatus" /> オブジェクトのリストを返します。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogReadingException">
      <summary>イベント ログのイベントに対する読み取り、照会、またはサブスクライブ中にエラーが発生した場合にスローされる例外を表します。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor">
      <summary>
        <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>シリアル化したデータを使用して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="serializationInfo">スローされている例外に関するシリアル化済みオブジェクト データを保持している <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクト。</param>
      <param name="streamingContext">転送元または転送先についてのコンテキスト情報を保持する <see cref="T:System.Runtime.Serialization.StreamingContext" /> オブジェクトです。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor(System.String)">
      <summary>現在の例外を説明するエラー メッセージを指定して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">現在の例外を説明するエラー メッセージ。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogReadingException.#ctor(System.String,System.Exception)">
      <summary>エラー メッセージおよび内部例外を使用して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogReadingException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">現在の例外を説明するエラー メッセージ。</param>
      <param name="innerException">現在の例外の原因となった例外インスタンス。</param>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogRecord">
      <summary>
        <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> オブジェクトから受信するイベントのイベント インスタンスのプロパティを格納します。 イベント プロパティは、イベントが記録されたコンピューターの名前やイベントが作成された時刻などのイベントに関する情報を提供します。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogRecord.Dispose(System.Boolean)">
      <summary>このオブジェクトに使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription">
      <summary>現在のロケールでのイベント メッセージを取得します。</summary>
      <returns>現在のロケールでのイベント メッセージが格納された文字列を返します。</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogRecord.FormatDescription(System.Collections.Generic.IEnumerable{System.Object})">
      <summary>メッセージ内の変数を指定した値に置き換えたイベント メッセージを取得します。</summary>
      <param name="values">イベント メッセージ内の変数を置き換えるために使用する値。 変数は %n で表されます。n は数字です。</param>
      <returns>現在のロケールでのイベント メッセージが格納された文字列を返します。</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogRecord.GetPropertyValues(System.Diagnostics.Eventing.Reader.EventLogPropertySelector)">
      <summary>ユーザーが指定したイベント プロパティの値の列挙体を返します。イベントが XML 表現を持つ場合は、XPath ベースのデータの結果を返します。</summary>
      <param name="propertySelector">返すプロパティ値を選択します。</param>
      <returns>オブジェクトの一覧を返します。</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogRecord.ToXml">
      <summary>イベントの XML 表現を取得します。 すべてのイベント プロパティは、そのイベントの XML の形式で表されます。 XML はイベント スキーマに準拠します。</summary>
      <returns>イベントの XML 表現が格納された文字列を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ActivityId">
      <summary>イベントに関連するプロセス内のアクティビティのグローバル一意識別子 (GUID: Globally Unique Identifier) を取得します。 これにより、コンシューマーは関連するアクティビティをグループ化できます。</summary>
      <returns>GUID 値を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Bookmark">
      <summary>このイベントに対応するプレースホルダー (ブックマーク) を取得します。 これは、イベントのストリーム内でプレースホルダーとして使用できます。</summary>
      <returns>
        <see cref="T:System.Diagnostics.Eventing.Reader.EventBookmark" /> オブジェクトを返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ContainerLog">
      <summary>イベントが格納されるイベント ログまたはイベント ログ ファイルの名前を取得します。</summary>
      <returns>イベントが格納されるイベント ログまたはイベント ログ ファイルの名前を含む文字列を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Id">
      <summary>このイベントの ID を取得します。 この ID 値を持つすべてのイベントは、同じ種類のイベントです。</summary>
      <returns>整数値が返されます。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Keywords">
      <summary>イベントのキーワード マスクを取得します。 このマスクで使用されるキーワードの名前を取得するには、<see cref="P:System.Diagnostics.Eventing.Reader.EventLogRecord.KeywordsDisplayNames" /> プロパティの値を取得します。</summary>
      <returns>long 型の値を返します。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.KeywordsDisplayNames">
      <summary>このイベントのキーワード マスクで使用されるキーワードの表示名を取得します。</summary>
      <returns>このイベントのキーワード マスクで使用されるキーワードの表示名を含んでいる文字列の列挙可能なコレクションを返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Level">
      <summary>イベントのレベルを取得します。 このレベルは、イベントの重大度を示します。 レベルの名前を参照するには、<see cref="P:System.Diagnostics.Eventing.Reader.EventLogRecord.LevelDisplayName" /> プロパティの値を取得します。</summary>
      <returns>バイト値を返します。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.LevelDisplayName">
      <summary>このイベントのレベルの表示名を取得します。</summary>
      <returns>このイベントのレベルの表示名が格納された文字列を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.LogName">
      <summary>このイベントが記録されたイベント ログの名前を取得します。</summary>
      <returns>このイベントを含むイベント ログの名前が格納された文字列を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.MachineName">
      <summary>このイベントが記録されたコンピューターの名前を取得します。</summary>
      <returns>このイベントが記録されたコンピューターの名前が格納された文字列を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.MatchedQueryIds">
      <summary>このイベントに対応するクエリ ID の一覧を取得します。 クエリがこのイベントを返す場合、このイベントはそのクエリに対応します。</summary>
      <returns>整数値の列挙可能なコレクションを返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Opcode">
      <summary>イベントのオペコードを取得します。 オペコードは、アプリケーションでイベントが発生したときに実行していたアクティビティまたはアクティビティ内のポイントを識別する数値を定義します。 オペコードの名前を参照するには、<see cref="P:System.Diagnostics.Eventing.Reader.EventLogRecord.OpcodeDisplayName" /> プロパティの値を取得します。</summary>
      <returns>short 型の値を返します。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.OpcodeDisplayName">
      <summary>このイベントのオペコードの表示名を取得します。</summary>
      <returns>このイベントのオペコードの表示名が格納された文字列を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ProcessId">
      <summary>このイベントを記録するイベント プロバイダーのプロセス ID を取得します。</summary>
      <returns>整数値が返されます。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Properties">
      <summary>このイベントのユーザーが指定したプロパティを取得します。</summary>
      <returns>
        <see cref="T:System.Diagnostics.Eventing.Reader.EventProperty" /> オブジェクトの一覧を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ProviderId">
      <summary>このイベントを発行したイベント プロバイダーのグローバル一意識別子 (GUID: Globally Unique Identifier) を取得します。</summary>
      <returns>GUID 値を返します。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ProviderName">
      <summary>このイベントを発行したイベント プロバイダーの名前を取得します。</summary>
      <returns>このイベントを発行したイベント プロバイダーの名前が格納された文字列を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Qualifiers">
      <summary>イベントの識別に使用される修飾子番号を取得します。</summary>
      <returns>整数値が返されます。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.RecordId">
      <summary>ログ内のイベントのイベント レコード ID を取得します。</summary>
      <returns>long 型の値を返します。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.RelatedActivityId">
      <summary>イベントに関連するプロセス内の関連するアクティビティのグローバル一意識別子 (GUID: Globally Unique Identifier) を取得します。</summary>
      <returns>GUID 値を返します。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Task">
      <summary>イベントを発行するアプリケーションまたはコンポーネントの部分のタスク ID を取得します。 タスクは 16 ビット値で、最大の 16 個の値は予約済みです。 この型では、0x0000 ～ 0xffef の任意の値を使用できます。 タスクの名前を参照するには、<see cref="P:System.Diagnostics.Eventing.Reader.EventLogRecord.TaskDisplayName" /> プロパティの値を取得します。</summary>
      <returns>整数値が返されます。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.TaskDisplayName">
      <summary>イベントのタスクの表示名を取得します。</summary>
      <returns>イベントのタスクの表示名が格納された文字列を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.ThreadId">
      <summary>イベント プロバイダーが実行されているスレッドのスレッド ID を取得します。</summary>
      <returns>整数値が返されます。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.TimeCreated">
      <summary>イベントが作成された時刻を <see cref="T:System.DateTime" /> 形式で取得します。</summary>
      <returns>
        <see cref="T:System.DateTime" /> 値を返します。 値は null でもかまいません。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.UserId">
      <summary>イベントを発行するためにコンテキストを使用するユーザーのセキュリティ記述子を取得します。</summary>
      <returns>
        <see cref="T:System.Security.Principal.SecurityIdentifier" /> 値を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogRecord.Version">
      <summary>イベントのバージョン番号を取得します。</summary>
      <returns>バイト値を返します。 この値は null の場合もあります。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogSession">
      <summary>ローカル コンピューターまたはリモート コンピューターのイベント ログ サービスへのアクセスに使用されます。これにより、コンピューター上のイベント ログおよびイベント プロバイダーに関する情報の管理と収集を行うことができます。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor">
      <summary>新しい <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> オブジェクトを初期化して、ローカルのイベント ログ サービスとの接続を確立します。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String)">
      <summary>新しい <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> オブジェクトを初期化して、指定したコンピューター上のイベント ログ サービスとの接続を確立します。 メソッドを呼び出すユーザーの資格情報 (ユーザー名およびパスワード) が、リモート コンピューターへのアクセスの資格情報に使用されます。</summary>
      <param name="server">イベント ログ サービスに接続するコンピューターの名前。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String,System.String,System.String,System.Security.SecureString,System.Diagnostics.Eventing.Reader.SessionAuthentication)">
      <summary>新しい <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> オブジェクトを初期化して、指定したコンピューター上のイベント ログ サービスとの接続を確立します。 指定した資格情報 (ユーザー名およびパスワード) が、リモート コンピューターへのアクセスの資格情報に使用されます。</summary>
      <param name="server">イベント ログ サービスに接続するコンピューターの名前。</param>
      <param name="domain">指定したユーザーのドメイン。</param>
      <param name="user">リモート コンピューターへの接続に使用するユーザー名。</param>
      <param name="password">リモート コンピューターへの接続に使用するパスワード。</param>
      <param name="logOnType">リモート コンピューターへの接続に使用される接続の種類。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.CancelCurrentOperations">
      <summary>このセッション オブジェクトが接続するイベント ログ サービスの現在アクティブなあらゆる操作 (イベント ログの読み取り、イベント ログのサブスクライブなど) を取り消します。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String)">
      <summary>指定したイベント ログのイベントを消去します。</summary>
      <param name="logName">イベントをすべて消去するイベント ログの名前。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String,System.String)">
      <summary>指定したイベント ログからイベントを消去し、消去したイベントを指定したファイルに保存します。</summary>
      <param name="logName">イベントをすべて消去するイベント ログの名前。</param>
      <param name="backupPath">消去したイベントを保存するファイルのパス。 ファイル名は、.evtx で終わる必要があります。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.Dispose">
      <summary>このオブジェクトに使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.Dispose(System.Boolean)">
      <summary>このオブジェクトに使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)">
      <summary>イベントを外部ログ ファイルにエクスポートします。 イベントは、イベント メッセージなしで格納されます。</summary>
      <param name="path">イベントのエクスポート元となるイベント ログの名前、またはイベントのエクスポート元となるイベント ログ ファイルのパス。</param>
      <param name="pathType">パスのパラメーターで使用する文字列でイベント ログの名前またはイベント ログ ファイルのパスを指定するかどうかを指定します。</param>
      <param name="query">エクスポートするイベントの選択に使用するクエリ。  クエリから返されるイベントのみがエクスポートされます。</param>
      <param name="targetFilePath">このメソッドを実行した後に、エクスポートされたイベントが保存されるログ ファイル (末尾が .evtx) のパスです。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean)">
      <summary>イベントを外部ログ ファイルにエクスポートします。 指定したクエリが一部のログで失敗した場合でも、メソッドによるイベントのエクスポートが続行されることを示すフラグを設定できます。 イベントは、イベント メッセージなしで格納されます。</summary>
      <param name="path">イベントのエクスポート元となるイベント ログの名前、またはイベントのエクスポート元となるイベント ログ ファイルのパス。</param>
      <param name="pathType">パスのパラメーターで使用する文字列でイベント ログの名前またはイベント ログ ファイルのパスを指定するかどうかを指定します。</param>
      <param name="query">エクスポートするイベントの選択に使用するクエリ。 クエリから返されるイベントのみがエクスポートされます。</param>
      <param name="targetFilePath">このメソッドを実行した後に、エクスポートされたイベントが保存されるログ ファイル (末尾が .evtx) のパスです。</param>
      <param name="tolerateQueryErrors">
        <see langword="true" /> は、指定したクエリが一部のログで失敗した場合でも、メソッドによるイベントのエクスポートが続行されることを示します。<see langword="false" /> は、指定したクエリが失敗した場合、このメソッドによるイベントのエクスポートが続行されないことを示します。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)">
      <summary>イベントとそのメッセージを外部のログ ファイルにエクスポートします。</summary>
      <param name="path">イベントのエクスポート元となるイベント ログの名前、またはイベントのエクスポート元となるイベント ログ ファイルのパス。</param>
      <param name="pathType">パスのパラメーターで使用する文字列でイベント ログの名前またはイベント ログ ファイルのパスを指定するかどうかを指定します。</param>
      <param name="query">エクスポートするイベントの選択に使用するクエリ。  クエリから返されるイベントのみがエクスポートされます。</param>
      <param name="targetFilePath">このメソッドを実行した後に、エクスポートされたイベントが保存されるログ ファイル (末尾が .evtx) のパスです。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean,System.Globalization.CultureInfo)">
      <summary>イベントとそのメッセージを外部のログ ファイルにエクスポートします。 指定したクエリが一部のログで失敗した場合でも、メソッドによるイベントのエクスポートが続行されることを示すフラグを設定できます。 イベント メッセージは、指定した言語でエクスポートされます。</summary>
      <param name="path">イベントのエクスポート元となるイベント ログの名前、またはイベントのエクスポート元となるイベント ログ ファイルのパス。</param>
      <param name="pathType">パスのパラメーターで使用する文字列でイベント ログの名前またはイベント ログ ファイルのパスを指定するかどうかを指定します。</param>
      <param name="query">エクスポートするイベントの選択に使用するクエリ。  クエリから返されるイベントのみがエクスポートされます。</param>
      <param name="targetFilePath">このメソッドを実行した後に、エクスポートされたイベントが保存されるログ ファイル (末尾が .evtx) のパスです。</param>
      <param name="tolerateQueryErrors">
        <see langword="true" /> は、指定したクエリが一部のログで失敗した場合でも、メソッドによるイベントのエクスポートが続行されることを示します。<see langword="false" /> は、指定したクエリが失敗した場合、このメソッドによるイベントのエクスポートが続行されないことを示します。</param>
      <param name="targetCultureInfo">エクスポートされるイベント メッセージに含まれる言語を指定するカルチャ。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.GetLogInformation(System.String,System.Diagnostics.Eventing.Reader.PathType)">
      <summary>指定したイベント ログのランタイム情報を格納するオブジェクトを取得します。</summary>
      <param name="logName">情報を取得する対象のイベント ログの名前、または、情報を取得する対象のイベント ログ ファイルのパス。</param>
      <param name="pathType">パスのパラメーターで使用する文字列でイベント ログの名前またはイベント ログ ファイルのパスを指定するかどうかを指定します。</param>
      <returns>指定したログに関する情報が格納されたオブジェクトです。</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.GetLogNames">
      <summary>イベント ログ サービスに登録されているすべてのイベント ログ名の列挙可能なコレクションを取得します。</summary>
      <returns>イベント ログ名を格納する文字列の列挙可能なコレクションです。</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogSession.GetProviderNames">
      <summary>イベント ログ サービスに登録されているすべてのイベント プロバイダー名の列挙可能なコレクションを取得します。 イベント プロバイダーは、イベントをイベント ログに発行するアプリケーションです。</summary>
      <returns>イベント プロバイダーの名前が格納された文字列の列挙可能なコレクションです。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogSession.GlobalSession">
      <summary>ローカル コンピューターのイベント ログ サービスに接続される静的な定義済みのセッション オブジェクトを取得します。</summary>
      <returns>ローカルコンピューターのイベントログサービスに接続されている定義済みのセッションオブジェクト。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogStatus">
      <summary>特定のイベント ログのステータス コードまたはエラー コードを格納します。 このステータスは、イベント ログの操作ができるかどうかを判断するために使用できます。</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogStatus.LogName">
      <summary>ステータス コードの取得対象のイベント ログの名前を取得します。</summary>
      <returns>ステータスコードを取得する対象のイベントログの名前。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogStatus.StatusCode">
      <summary>イベント ログのステータス コードまたはエラー コードを取得します。 このステータスまたはエラーは、このイベント ログに対する読み取り操作またはサブスクリプション操作の結果です。</summary>
      <returns>イベントログのステータスコードまたはエラーコード。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogType">
      <summary>イベント ログに記録されるイベントの種類を定義します。 各ログに含めることができるイベントの種類は 1 つだけです。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogType.Administrative">
      <summary>これらのイベントは、主にエンド ユーザー、管理者、およびサポートで使用されます。 管理用のログに格納されているイベントは、問題と、管理者が実施できるわかりやすい解決策を示しています。 管理イベントの例としては、アプリケーションがプリンターへの接続に失敗したときに発生するイベントがあります。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogType.Analytical">
      <summary>分析用のイベント ログのイベントは、大量に発行されます。 これらは、プログラム操作を記述し、ユーザーの介入によって処理できない問題を示しています。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogType.Debug">
      <summary>デバッグ用のイベント ログのイベントは、開発者がデバッグで問題を診断するためにだけ使用されます。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.EventLogType.Operational">
      <summary>運営用のイベント ログのイベントは、問題や現象を解析および診断するために使用されます。 これらは、問題や現象に基づいてツールやタスクをトリガーするために使用できます。 運営用のイベントの例としては、システムに対してプリンターを追加または削除したときに発生するイベントがあります。</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventLogWatcher">
      <summary>受信イベントにサブスクライブできます。 目的のイベントがイベント ログに発行されるたびに <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> イベントが発生し、このイベントを処理するメソッドが実行されます。</summary>
    </member>
    <member name="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten">
      <summary>このオブジェクトに対するイベント クエリに指定された基準を満たすイベントが発行されるたびに呼び出されるデリゲート (イベント ハンドラー メソッド) を設定できます。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)">
      <summary>イベント クエリを指定して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="eventQuery">イベント サブスクリプションに対するクエリを指定します。 クエリ内に表現された基準を満たすイベントが記録されると、<see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> イベントが発生します。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)">
      <summary>イベント クエリ、およびクエリの開始位置として使用するブックマークを指定して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="eventQuery">イベント サブスクリプションに対するクエリを指定します。 クエリ内に表現された基準を満たすイベントが記録されると、<see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> イベントが発生します。</param>
      <param name="bookmark">イベント ログまたはイベント ストリーム内の開始位置として使用するブックマーク (プレースホルダー)。 ブックマーク イベントより後に記録されるイベントだけが、クエリによって返されます。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark,System.Boolean)">
      <summary>イベント クエリ、クエリの開始位置として使用するブックマーク、およびイベント ログに既に存在するイベントを読み取るかどうかを指定するブール値を指定して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="eventQuery">イベント サブスクリプションに対するクエリを指定します。 クエリ内に表現された基準を満たすイベントが記録されると、<see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> イベントが発生します。</param>
      <param name="bookmark">イベント ログまたはイベント ストリーム内の開始位置として使用するブックマーク (プレースホルダー)。 ブックマーク イベントより後に記録されるイベントだけが、クエリによって返されます。</param>
      <param name="readExistingEvents">イベント ログに既に存在するイベントを読み取るかどうかを指定するブール値。 この値が <see langword="true" /> の場合は既存のイベントが読み取られ、この値が <see langword="false" /> の場合は既存のイベントが読み取られません。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.String)">
      <summary>イベント ログの名前またはパスを指定して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="path">イベントを監視するイベント ログのパスまたは名前。 このイベント ログにいずれかのイベントが記録されると、<see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> イベントが発生します。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose">
      <summary>このオブジェクトに使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose(System.Boolean)">
      <summary>このオブジェクトに使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventLogWatcher.Enabled">
      <summary>このオブジェクトがイベント デリゲートへのイベント配信を開始するかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see langword="true" /> このオブジェクトがイベントデリゲートにイベントを配信できる場合は。 <see langword="false" /> このオブジェクトの配信が停止されたとき。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventMetadata">
      <summary>イベント プロバイダーで定義されているイベントのメタデータ (プロパティおよび設定) を保持します。</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Description">
      <summary>説明の言語に対応する現在のスレッド ロケールを使用して、イベントに関連付けられた説明のテンプレートを取得します。</summary>
      <returns>イベントに関連付けられている説明テンプレートを表す文字列です。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Id">
      <summary>イベント プロバイダーで定義されているイベントの ID を取得します。</summary>
      <returns>イベント識別子。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Keywords">
      <summary>イベント プロバイダーで定義されているイベントに関連付けられたキーワードを取得します。</summary>
      <returns>イベントに関連付けられているキーワードの列挙可能なコレクション。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Level">
      <summary>イベント プロバイダーで定義されているイベントに関連付けられたレベルを取得します。 このレベルは、イベントの重大度レベルを定義します。</summary>
      <returns>イベントに関連付けられているレベル。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.LogLink">
      <summary>プロバイダーがこのイベントを発行したときにこのイベントを受信するイベント ログへのリンクを取得します。</summary>
      <returns>イベントログへのリンク。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Opcode">
      <summary>イベント プロバイダーで定義されているこのイベントに関連付けられたオペコードを取得します。 オペコードは、アプリケーションでイベントが発生したときに実行していたアクティビティまたはアクティビティ内のポイントを識別する数値を定義します。</summary>
      <returns>このイベントに関連付けられているオペコード。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Task">
      <summary>イベントに関連付けられているタスクを取得します。 タスクは、イベントを発行するアプリケーションまたはコンポーネントの部分を識別します。</summary>
      <returns>イベントに関連付けられているタスク。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Template">
      <summary>イベントのテンプレート文字列を取得します。 テンプレートは、イベントの発行時にプロバイダーによって使用されるデータを記述するために使用します。 必要に応じて、テンプレートでイベントの構造を示す XML を指定することもできます。 XML を使用すると、イベントを表示する際にイベントの発行者が提供する値を挿入できます。</summary>
      <returns>イベントのテンプレートを格納している文字列。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventMetadata.Version">
      <summary>イベント ID を修飾するイベントのバージョンを取得します。</summary>
      <returns>イベントのバージョンを含むバイト値。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventOpcode">
      <summary>イベント プロバイダーで定義されているイベント オペコードを格納します。 オペコードは、アプリケーションでイベントが発生したときに実行していたアクティビティまたはアクティビティ内のポイントを識別する数値を定義します。</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventOpcode.DisplayName">
      <summary>イベント オペコードのローカライズされた名前を取得します。</summary>
      <returns>イベントオペコードのローカライズされた名前。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventOpcode.Name">
      <summary>イベント オペコードのローカライズされていない名前を取得します。</summary>
      <returns>イベントオペコードのローカライズされていない名前。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventOpcode.Value">
      <summary>イベント オペコードに関連付けられている数値を取得します。</summary>
      <returns>イベントオペコードに関連付けられている数値。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventProperty">
      <summary>イベントが発行されたときにイベント プロバイダーによって指定されるイベント プロパティの値を格納します。</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventProperty.Value">
      <summary>イベントが発行されたときにイベント プロバイダーによって指定されるイベント プロパティの値を取得します。</summary>
      <returns>イベントプロパティの値。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventRecord">
      <summary>
        <see cref="T:System.Diagnostics.Eventing.Reader.EventLogReader" /> オブジェクトから受信するイベントのイベント インスタンスのプロパティを定義します。 イベント プロパティは、イベントが記録されたコンピューターの名前やイベントが作成された時刻などのイベントに関する情報を提供します。 このクラスは抽象クラスです。 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogRecord" /> クラスは、このクラスを実装します。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.#ctor">
      <summary>
        <see cref="T:System.Diagnostics.Eventing.Reader.EventRecord" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.Dispose">
      <summary>このオブジェクトに使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.Dispose(System.Boolean)">
      <summary>このオブジェクトに使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.FormatDescription">
      <summary>現在のロケールでのイベント メッセージを取得します。</summary>
      <returns>現在のロケールでのイベント メッセージが格納された文字列を返します。</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.FormatDescription(System.Collections.Generic.IEnumerable{System.Object})">
      <summary>メッセージ内の変数を指定した値に置き換えたイベント メッセージを取得します。</summary>
      <param name="values">イベント メッセージ内の変数を置き換えるために使用する値。 変数は %n で表されます。n は数字です。</param>
      <returns>現在のロケールでのイベント メッセージが格納された文字列を返します。</returns>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.EventRecord.ToXml">
      <summary>イベントの XML 表現を取得します。 すべてのイベント プロパティは、そのイベントの XML の形式で表されます。 XML はイベント スキーマに準拠します。</summary>
      <returns>イベントの XML 表現が格納された文字列を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.ActivityId">
      <summary>イベントに関連するプロセス内のアクティビティのグローバル一意識別子 (GUID: Globally Unique Identifier) を取得します。 これにより、コンシューマーは関連するアクティビティをグループ化できます。</summary>
      <returns>GUID 値を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Bookmark">
      <summary>このイベントに対応するプレースホルダー (ブックマーク) を取得します。 これは、イベントのストリーム内でプレースホルダーとして使用できます。</summary>
      <returns>
        <see cref="T:System.Diagnostics.Eventing.Reader.EventBookmark" /> オブジェクトを返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Id">
      <summary>このイベントの ID を取得します。 この ID 値を持つすべてのイベントは、同じ種類のイベントです。</summary>
      <returns>整数値が返されます。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Keywords">
      <summary>イベントのキーワード マスクを取得します。 このマスクで使用されるキーワードの名前を取得するには、<see cref="P:System.Diagnostics.Eventing.Reader.EventRecord.KeywordsDisplayNames" /> プロパティの値を取得します。</summary>
      <returns>long 型の値を返します。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.KeywordsDisplayNames">
      <summary>このイベントのキーワード マスクで使用されるキーワードの表示名を取得します。</summary>
      <returns>このイベントのキーワード マスクで使用されるキーワードの表示名を含んでいる文字列の列挙可能なコレクションを返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Level">
      <summary>イベントのレベルを取得します。 このレベルは、イベントの重大度を示します。 レベルの名前を参照するには、<see cref="P:System.Diagnostics.Eventing.Reader.EventRecord.LevelDisplayName" /> プロパティの値を取得します。</summary>
      <returns>バイト値を返します。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.LevelDisplayName">
      <summary>このイベントのレベルの表示名を取得します。</summary>
      <returns>このイベントのレベルの表示名が格納された文字列を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.LogName">
      <summary>このイベントが記録されたイベント ログの名前を取得します。</summary>
      <returns>このイベントを含むイベント ログの名前が格納された文字列を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.MachineName">
      <summary>このイベントが記録されたコンピューターの名前を取得します。</summary>
      <returns>このイベントが記録されたコンピューターの名前が格納された文字列を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Opcode">
      <summary>イベントのオペコードを取得します。 オペコードは、アプリケーションでイベントが発生したときに実行していたアクティビティまたはアクティビティ内のポイントを識別する数値を定義します。 オペコードの名前を参照するには、<see cref="P:System.Diagnostics.Eventing.Reader.EventRecord.OpcodeDisplayName" /> プロパティの値を取得します。</summary>
      <returns>short 型の値を返します。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.OpcodeDisplayName">
      <summary>このイベントのオペコードの表示名を取得します。</summary>
      <returns>このイベントのオペコードの表示名が格納された文字列を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.ProcessId">
      <summary>このイベントを記録するイベント プロバイダーのプロセス ID を取得します。</summary>
      <returns>整数値が返されます。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Properties">
      <summary>このイベントのユーザーが指定したプロパティを取得します。</summary>
      <returns>
        <see cref="T:System.Diagnostics.Eventing.Reader.EventProperty" /> オブジェクトの一覧を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.ProviderId">
      <summary>このイベントを発行したイベント プロバイダーのグローバル一意識別子 (GUID: Globally Unique Identifier) を取得します。</summary>
      <returns>GUID 値を返します。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.ProviderName">
      <summary>このイベントを発行したイベント プロバイダーの名前を取得します。</summary>
      <returns>このイベントを発行したイベント プロバイダーの名前が格納された文字列を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Qualifiers">
      <summary>イベントの識別に使用される修飾子番号を取得します。</summary>
      <returns>整数値が返されます。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.RecordId">
      <summary>ログ内のイベントのイベント レコード ID を取得します。</summary>
      <returns>long 型の値を返します。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.RelatedActivityId">
      <summary>イベントに関連するプロセス内の関連するアクティビティのグローバル一意識別子 (GUID: Globally Unique Identifier) を取得します。</summary>
      <returns>GUID 値を返します。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Task">
      <summary>イベントを発行するアプリケーションまたはコンポーネントの部分のタスク ID を取得します。 タスクは 16 ビット値で、最大の 16 個の値は予約済みです。 この型では、0x0000 ～ 0xffef の任意の値を使用できます。 タスクの名前を取得するには、<see cref="P:System.Diagnostics.Eventing.Reader.EventRecord.TaskDisplayName" /> プロパティの値を取得します。</summary>
      <returns>整数値が返されます。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.TaskDisplayName">
      <summary>イベントのタスクの表示名を取得します。</summary>
      <returns>イベントのタスクの表示名が格納された文字列を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.ThreadId">
      <summary>イベント プロバイダーが実行されているスレッドのスレッド ID を取得します。</summary>
      <returns>整数値が返されます。 この値は null の場合もあります。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.TimeCreated">
      <summary>イベントが作成された時刻を <see cref="T:System.DateTime" /> 形式で取得します。</summary>
      <returns>
        <see cref="T:System.DateTime" /> 値を返します。 値は null でもかまいません。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.UserId">
      <summary>イベントを発行するためにコンテキストを使用するユーザーのセキュリティ記述子を取得します。</summary>
      <returns>
        <see cref="T:System.Security.Principal.SecurityIdentifier" /> 値を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecord.Version">
      <summary>イベントのバージョン番号を取得します。</summary>
      <returns>バイト値を返します。 この値は null の場合もあります。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs">
      <summary>
        <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> イベントが発生したときに、そのイベントを処理するデリゲート メソッドにこのオブジェクトのインスタンスが渡されます。 このオブジェクトには、イベント ログに発行されたイベント、またはイベント サブスクリプションが失敗したときに発生した例外が格納されています。</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventException">
      <summary>イベント サブスクリプションが失敗したときに発生した例外を取得します。 この例外には、サブスクリプションが失敗した理由の記述が含まれています。</summary>
      <returns>イベントサブスクリプションが失敗したときに発生した例外。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs.EventRecord">
      <summary>イベント ログに発行されたイベント レコードを取得します。 このイベントは、イベント サブスクリプションで指定されたクエリの基準に一致します。</summary>
      <returns>イベントレコード。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.EventTask">
      <summary>イベント プロバイダーで定義されているイベント タスクを格納します。 このタスクは、イベントを発行するアプリケーションまたはコンポーネントの部分を識別します。 タスクは 16 ビット値で、最大の 16 個の値は予約済みです。</summary>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventTask.DisplayName">
      <summary>イベント タスクのローカライズされた名前を取得します。</summary>
      <returns>イベントタスクのローカライズされた名前。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventTask.EventGuid">
      <summary>タスクに関連付けられた、イベントのグローバル一意識別子 (GUID: Globally Unique Identifier) を取得します。</summary>
      <returns>タスクに関連付けられているイベント GUID。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventTask.Name">
      <summary>イベント タスクのローカライズされていない名前を取得します。</summary>
      <returns>イベントタスクのローカライズされていない名前。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.EventTask.Value">
      <summary>タスクに関連付けられている数値を取得します。</summary>
      <returns>タスクに関連付けられている数値。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.PathType">
      <summary>文字列に、イベント ログの名前が格納されているか、またはイベント ログ ファイルのファイル システム パスが格納されているかを指定します。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.PathType.FilePath">
      <summary>path パラメーターに、イベント ログ ファイルのファイル システム パスが格納されます。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.PathType.LogName">
      <summary>path パラメーターに、イベント ログの名前が格納されます。</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.ProviderMetadata">
      <summary>プロバイダーの名前と ID、プロバイダーで定義されているイベントのコレクションなど、イベント プロバイダーに関する静的な情報を格納します。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.#ctor(System.String)">
      <summary>情報の取得対象となるプロバイダーの名前を指定して、<see cref="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="providerName">情報の取得対象となるイベント プロバイダーの名前。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.#ctor(System.String,System.Diagnostics.Eventing.Reader.EventLogSession,System.Globalization.CultureInfo)">
      <summary>情報の取得対象となるプロバイダーの名前、プロバイダーが登録されているイベント ログ サービス、および情報を返す際の言語を指定して、<see cref="T:System.Diagnostics.Eventing.Reader.ProviderMetadata" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="providerName">情報の取得対象となるイベント プロバイダーの名前。</param>
      <param name="session">プロバイダー情報をローカル コンピューターのプロバイダーから取得するのか、またはリモート コンピューターのプロバイダーから取得するのかを指定する <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> オブジェクト。</param>
      <param name="targetCultureInfo">情報を返す際の言語を指定するカルチャ。</param>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.Dispose">
      <summary>このオブジェクトに使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.Diagnostics.Eventing.Reader.ProviderMetadata.Dispose(System.Boolean)">
      <summary>このオブジェクトに使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.DisplayName">
      <summary>イベント プロバイダーのローカライズされた名前を取得します。</summary>
      <returns>イベント プロバイダーのローカライズされた名前が格納された文字列を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Events">
      <summary>
        <see cref="T:System.Diagnostics.Eventing.Reader.EventMetadata" /> オブジェクトの列挙可能なコレクションを取得します。各オブジェクトは、プロバイダーで定義されているイベントを表します。</summary>
      <returns>
        <see cref="T:System.Diagnostics.Eventing.Reader.EventMetadata" /> オブジェクトの列挙可能なコレクションを返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.HelpLink">
      <summary>このイベント プロバイダーのイベントに対するヘルプ要求を作成するために使用する URL のベースを取得します。</summary>
      <returns>
        <see cref="T:System.Uri" /> 値を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Id">
      <summary>イベント プロバイダーのグローバル一意識別子 (GUID: Globally Unique Identifier) を取得します。</summary>
      <returns>イベント プロバイダーの GUID 値を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Keywords">
      <summary>
        <see cref="T:System.Diagnostics.Eventing.Reader.EventKeyword" /> オブジェクトの列挙可能なコレクションを取得します。各オブジェクトは、イベント プロバイダーで定義されているイベント キーワードを表します。</summary>
      <returns>
        <see cref="T:System.Diagnostics.Eventing.Reader.EventKeyword" /> オブジェクトの列挙可能なコレクションを返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Levels">
      <summary>
        <see cref="T:System.Diagnostics.Eventing.Reader.EventLevel" /> オブジェクトの列挙可能なコレクションを取得します。各オブジェクトは、イベント プロバイダーで定義されているレベルを表します。</summary>
      <returns>
        <see cref="T:System.Diagnostics.Eventing.Reader.EventLevel" /> オブジェクトの列挙可能なコレクションを返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.LogLinks">
      <summary>
        <see cref="T:System.Diagnostics.Eventing.Reader.EventLogLink" /> オブジェクトの列挙可能なコレクションを取得します。各オブジェクトは、イベント プロバイダーで使用されているイベント ログへのリンクを表します。</summary>
      <returns>
        <see cref="T:System.Diagnostics.Eventing.Reader.EventLogLink" /> オブジェクトの列挙可能なコレクションを返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.MessageFilePath">
      <summary>プロバイダーのメタデータに関連付けられている文字列を含むメッセージ テーブル リソースが格納されたファイルのパスを取得します。</summary>
      <returns>プロバイダーのメッセージ ファイルのパスが格納された文字列を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Name">
      <summary>イベント プロバイダーの一意の名前を取得します。</summary>
      <returns>イベント プロバイダーの一意の名前が格納された文字列を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Opcodes">
      <summary>
        <see cref="T:System.Diagnostics.Eventing.Reader.EventOpcode" /> オブジェクトの列挙可能なコレクションを取得します。各オブジェクトは、イベント プロバイダーで定義されているオペコードを表します。</summary>
      <returns>
        <see cref="T:System.Diagnostics.Eventing.Reader.EventOpcode" /> オブジェクトの列挙可能なコレクションを返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.ParameterFilePath">
      <summary>イベントの説明にあるパラメーターの代用に使用される文字列を含むメッセージ テーブル リソースが格納されたファイルのパスを取得します。</summary>
      <returns>イベントの説明にあるパラメーターの代用に使用される文字列を含むメッセージ テーブル リソースを格納するファイルのパスが格納された文字列を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.ResourceFilePath">
      <summary>プロバイダーに関連付けられているメタデータを格納するファイルのパスを取得します。</summary>
      <returns>プロバイダーに関連付けられているメタデータを格納するファイルのパスが格納された文字列を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Eventing.Reader.ProviderMetadata.Tasks">
      <summary>
        <see cref="T:System.Diagnostics.Eventing.Reader.EventTask" /> オブジェクトの列挙可能なコレクションを取得します。各オブジェクトは、イベント プロバイダーで定義されているタスクを表します。</summary>
      <returns>
        <see cref="T:System.Diagnostics.Eventing.Reader.EventTask" /> オブジェクトの列挙可能なコレクションを返します。</returns>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.SessionAuthentication">
      <summary>サーバーにリモート プロシージャ コール (RPC: Remote Procedure Call) ログインするときに使用する認証の種類の値を定義します。 このログインは、リモート コンピューターへの接続を指定する <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> オブジェクトを作成するときに発生します。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.SessionAuthentication.Default">
      <summary>RPC ログイン時に、既定の認証方法を使用します。 既定の認証はネゴシエートと同じです。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.SessionAuthentication.Kerberos">
      <summary>RPC ログイン時に、Kerberos 認証を使用します。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.SessionAuthentication.Negotiate">
      <summary>RPC ログイン時に、ネゴシエート認証方法を使用します。 これにより、状況に応じて最適な認証方法 (NTLM または Kerberos) をクライアント アプリケーションで選択できます。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.SessionAuthentication.Ntlm">
      <summary>RPC ログイン時に、Windows NT LAN Manager (NTLM) 認証を使用します。</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.StandardEventKeywords">
      <summary>イベント プロバイダーによりイベントにアタッチされる標準のキーワードを定義します。 キーワードの詳細については、「<see cref="T:System.Diagnostics.Eventing.Reader.EventKeyword" />」を参照してください。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.AuditFailure">
      <summary>失敗したすべてのセキュリティ監査イベントにアタッチされます。 このキーワードは、セキュリティ ログ内のイベントにだけ使用してください。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.AuditSuccess">
      <summary>成功したすべてのセキュリティ監査イベントにアタッチされます。 このキーワードは、セキュリティ ログ内のイベントにだけ使用してください。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.CorrelationHint">
      <summary>関連アクティビティ ID (相関 ID) が算出された値で、一意であるとは限らない (実際の GUID ではない) 転送イベントにアタッチされます。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.CorrelationHint2">
      <summary>関連アクティビティ ID (相関 ID) が算出された値で、一意であるとは限らない (実際の GUID ではない) 転送イベントにアタッチされます。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.EventLogClassic">
      <summary>RaiseEvent 関数を使用して発生するイベントにアタッチされます。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.None">
      <summary>この値は、イベントの発行時にキーワードに関するフィルター処理が行われなかったことを示します。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.ResponseTime">
      <summary>すべての応答時間イベントにアタッチされます。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.Sqm">
      <summary>すべての SQM (Service Quality Mechanism) イベントにアタッチされます。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.WdiContext">
      <summary>すべての Windows 診断インフラストラクチャ (WDI: Windows Diagnostic Infrastructure) コンテキスト イベントにアタッチされます。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventKeywords.WdiDiagnostic">
      <summary>すべての Windows 診断インフラストラクチャ (WDI: Windows Diagnostic Infrastructure) 診断イベントにアタッチされます。</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.StandardEventLevel">
      <summary>イベント ログ サービスで使用される標準のイベント レベルを定義します。 このレベルは、イベントの重大度レベルを定義します。 これらの標準レベルの他、カスタムのイベント レベルを定義できます。 レベルの詳細については、「<see cref="T:System.Diagnostics.Eventing.Reader.EventLevel" />」を参照してください。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Critical">
      <summary>このレベルは、重大なエラーに対応します。これは、主要なエラーを発生させる深刻なエラーです。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Error">
      <summary>このレベルは、問題を示す通常のエラーに対応します。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Informational">
      <summary>このレベルは、エラーではない情報イベントまたは情報メッセージに対応します。 これらのイベントは、アプリケーションの進行状況や状態を追跡するのに役立ちます。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.LogAlways">
      <summary>この値は、イベントの発行時にレベルに関するフィルター処理が行われなかったことを示します。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Verbose">
      <summary>このレベルは、詳細なイベントまたはメッセージに対応します。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventLevel.Warning">
      <summary>このレベルは、警告イベントに対応します。 たとえば、ディスクの空き容量がほとんどないために発行されたイベントは、警告イベントです。</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.StandardEventOpcode">
      <summary>イベント プロバイダーによりイベントにアタッチされる標準のオペコードを定義します。 オペコードの詳細については、「<see cref="T:System.Diagnostics.Eventing.Reader.EventOpcode" />」を参照してください。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.DataCollectionStart">
      <summary>このオペコードがあるイベントは、トレース コレクションの開始イベントです。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.DataCollectionStop">
      <summary>このオペコードがあるイベントは、トレース コレクションの停止イベントです。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Extension">
      <summary>このオペコードがあるイベントは、拡張イベントです。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Info">
      <summary>このオペコードがあるイベントは、情報イベントです。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Receive">
      <summary>このオペコードがあるイベントは、アプリケーション内のアクティビティがデータを受信したときに発行されます。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Reply">
      <summary>このオペコードがあるイベントは、アプリケーション内のアクティビティがイベントに応答した後に発行されます。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Resume">
      <summary>このオペコードがあるイベントは、アプリケーション内のアクティビティが中断状態から再開した後に発行されます。 このイベントは、Suspend オペコードがあるイベントに続いて発行されます。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Send">
      <summary>このオペコードがあるイベントは、アプリケーション内のアクティビティがデータまたはシステム リソースを別のアクティビティに転送したときに発行されます。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Start">
      <summary>このオペコードがあるイベントは、アプリケーションが新しいトランザクションまたはアクティビティを開始したときに発行されます。 Start オペコードがあるイベントが、Stop オペコードのあるイベントを介さずに複数個連続している場合は、別のトランザクションまたはアクティビティに埋め込まれている可能性があります。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Stop">
      <summary>このオペコードがあるイベントは、アプリケーション内のアクティビティまたはトランザクションが終了したときに発行されます。 このイベントは、Start オペコードがあり、対になっていない直前のイベントに対応しています。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventOpcode.Suspend">
      <summary>このオペコードがあるイベントは、アプリケーション内のアクティビティが中断されたときに発行されます。</summary>
    </member>
    <member name="T:System.Diagnostics.Eventing.Reader.StandardEventTask">
      <summary>イベント プロバイダーによりイベントにアタッチされる標準のタスクを定義します。 タスクの詳細については、「<see cref="T:System.Diagnostics.Eventing.Reader.EventTask" />」を参照してください。</summary>
    </member>
    <member name="F:System.Diagnostics.Eventing.Reader.StandardEventTask.None">
      <summary>タスクを使用せずに、イベントを発行するアプリケーションの部分を識別します。</summary>
    </member>
    <member name="T:System.Diagnostics.EventInstance">
      <summary>イベント ログ エントリの言語に中立的な情報を表します。</summary>
    </member>
    <member name="M:System.Diagnostics.EventInstance.#ctor(System.Int64,System.Int32)">
      <summary>イベント エントリのローカライズされたメッセージおよびカテゴリ テキストに指定されたリソース識別子を使用して、<see cref="T:System.Diagnostics.EventInstance" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="instanceId">イベント ソースのメッセージ リソース ファイルで定義された文字列に対応するリソース識別子。</param>
      <param name="categoryId">イベント ソースのカテゴリ リソース ファイルで定義された文字列に対応するリソース識別子。イベントにカテゴリを指定しない場合は、ゼロになります。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="instanceId" /> パラメーターは、負の値または <see cref="F:System.UInt32.MaxValue" /> より大きい値です。  
  
- または - 
<paramref name="categoryId" /> パラメーターは、負の値または <see cref="F:System.UInt16.MaxValue" /> より大きい値です。</exception>
    </member>
    <member name="M:System.Diagnostics.EventInstance.#ctor(System.Int64,System.Int32,System.Diagnostics.EventLogEntryType)">
      <summary>イベント エントリのローカライズされたメッセージとカテゴリ テキストに指定されたリソース識別子および指定されたイベント ログ エントリの種類を使用して、<see cref="T:System.Diagnostics.EventInstance" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="instanceId">イベント ソースのメッセージ リソース ファイルで定義された文字列に対応するリソース識別子。</param>
      <param name="categoryId">イベント ソースのカテゴリ リソース ファイルで定義された文字列に対応するリソース識別子。イベントにカテゴリを指定しない場合は、ゼロになります。</param>
      <param name="entryType">イベントの種類を示す <see cref="T:System.Diagnostics.EventLogEntryType" /> 値。</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="entryType" /> は正しい <see cref="T:System.Diagnostics.EventLogEntryType" /> 値ではありません。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="instanceId" /> は、負の値または <see cref="F:System.UInt32.MaxValue" /> より大きい値です。  
  
- または - 
 <paramref name="categoryId" /> は、負の値または <see cref="F:System.UInt16.MaxValue" /> より大きい値です。</exception>
    </member>
    <member name="P:System.Diagnostics.EventInstance.CategoryId">
      <summary>イベント エントリのアプリケーション定義のカテゴリを指定するリソース識別子を取得または設定します。</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">プロパティが負の値または <see cref="F:System.UInt16.MaxValue" /> より大きい値に設定されています。</exception>
      <returns>イベント ソースのカテゴリ リソース ファイルで定義された文字列に対応するカテゴリ値またはリソース識別子。 既定値はゼロです。これは、イベント エントリに対してカテゴリが表示されないことを示します。</returns>
    </member>
    <member name="P:System.Diagnostics.EventInstance.EntryType">
      <summary>イベント ログ エントリのイベントの種類を取得または設定します。</summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">プロパティが有効な <see cref="T:System.Diagnostics.EventLogEntryType" /> 値に設定されていません。</exception>
      <returns>イベント エントリの種類を示す <see cref="T:System.Diagnostics.EventLogEntryType" /> 値。 既定値は <see cref="F:System.Diagnostics.EventLogEntryType.Information" /> です。</returns>
    </member>
    <member name="P:System.Diagnostics.EventInstance.InstanceId">
      <summary>イベント エントリのメッセージ テキストを指定するリソース識別子を取得または設定します。</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">プロパティが負の値または <see cref="F:System.UInt32.MaxValue" /> より大きい値に設定されています。</exception>
      <returns>イベント ソースのメッセージ リソース ファイルで定義された文字列に対応するリソース識別子。</returns>
    </member>
    <member name="T:System.Diagnostics.EventLog">
      <summary>Windows イベント ログとの相互作用を提供します。</summary>
    </member>
    <member name="E:System.Diagnostics.EventLog.EntryWritten">
      <summary>ローカル コンピューター上のイベント ログにエントリが書き込まれたときに発生します。</summary>
    </member>
    <member name="M:System.Diagnostics.EventLog.#ctor">
      <summary>
        <see cref="T:System.Diagnostics.EventLog" /> クラスの新しいインスタンスを初期化します。 このインスタンスは、ログとは関連付けられません。</summary>
    </member>
    <member name="M:System.Diagnostics.EventLog.#ctor(System.String)">
      <summary>
        <see cref="T:System.Diagnostics.EventLog" /> クラスの新しいインスタンスを初期化します。 ローカル コンピューター上のログにインスタンスを関連付けます。</summary>
      <param name="logName">ローカル コンピューター上のログの名前。</param>
      <exception cref="T:System.ArgumentNullException">ログ名が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">ログ名が無効です。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.#ctor(System.String,System.String)">
      <summary>
        <see cref="T:System.Diagnostics.EventLog" /> クラスの新しいインスタンスを初期化します。 指定したコンピューター上のログにインスタンスを関連付けます。</summary>
      <param name="logName">指定したコンピューター上のログの名前。</param>
      <param name="machineName">ログが存在するコンピューター。</param>
      <exception cref="T:System.ArgumentNullException">ログ名が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">ログ名が無効です。  
  
 - または -  
  
 コンピューター名が無効です。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.#ctor(System.String,System.String,System.String)">
      <summary>
        <see cref="T:System.Diagnostics.EventLog" /> クラスの新しいインスタンスを初期化します。 指定したコンピューター上のログにインスタンスを関連付け、指定したソースを作成するか、または <see cref="T:System.Diagnostics.EventLog" /> に割り当てます。</summary>
      <param name="logName">指定したコンピューター上のログの名前。</param>
      <param name="machineName">ログが存在するコンピューター。</param>
      <param name="source">イベント ログ エントリのソース。</param>
      <exception cref="T:System.ArgumentNullException">ログ名が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">ログ名が無効です。  
  
 - または -  
  
 コンピューター名が無効です。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.BeginInit">
      <summary>フォームまたは別のコンポーネントで使用される <see cref="T:System.Diagnostics.EventLog" /> の初期化を開始します。 初期化は実行時に発生します。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Diagnostics.EventLog" /> は、既に初期化されています。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.Clear">
      <summary>イベント ログからすべてのエントリを削除します。</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">イベント ログが正常に消去されませんでした。  
  
 - または -  
  
 ログを開くことができません。 Windows のエラー コードは使用できません。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Diagnostics.EventLog.Log" /> プロパティの値が指定されていません。 ログ名が空の文字列でないことを確認してください。</exception>
      <exception cref="T:System.InvalidOperationException">ログが存在しません。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.Close">
      <summary>イベント ログを閉じ、読み取りハンドルと書き込みハンドルを解放します。</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">イベント ログの読み取りハンドルまたは書き込みハンドルが解放されませんでした。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.CreateEventSource(System.Diagnostics.EventSourceCreationData)">
      <summary>イベント ソースおよび対応するイベント ログに指定された構成プロパティを使用して、ローカライズされたイベント メッセージを書き込むための有効なイベント ソースを設定します。</summary>
      <param name="sourceData">イベント ソースおよび対象のイベント ログの構成プロパティ。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourceData" /> で指定されたコンピューター名が無効です。  
  
- または - 
<paramref name="sourceData" /> で指定されたソース名が <see langword="null" /> です。  
  
- または - 
<paramref name="sourceData" /> で指定されたログ名が無効です。 イベント ログ名は、印字可能な文字で構成されている必要があります。文字 '*'、'?'、または '\' を含めないでください。  
  
- または - 
<paramref name="sourceData" /> で指定されたログ名は、ユーザー ログの作成には無効です。 イベント ログ名 AppEvent、SysEvent、および SecEvent は、システムで使用するために予約されています。  
  
- または - 
ログ名が既存のイベント ソース名に一致します。  
  
- または - 
<paramref name="sourceData" /> で指定されたソース名は、254 文字を超えるレジストリ キーのパスになります。  
  
- または - 
<paramref name="sourceData" /> で指定されたログ名の最初の 8 文字が一意ではありません。  
  
- または - 
<paramref name="sourceData" /> で指定されたソース名は既に登録されています。  
  
- または - 
<paramref name="sourceData" /> で指定されたソース名が既存のイベント ログ名に一致しません。</exception>
      <exception cref="T:System.InvalidOperationException">イベント ログのレジストリ キーを開けませんでした。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceData" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.CreateEventSource(System.String,System.String)">
      <summary>ローカル コンピューター上のログにエントリを書き込むための有効なイベント ソースとして指定したソース名を設定します。 また、このメソッドによってローカル コンピューター上に新しいカスタム ログを作成することもできます。</summary>
      <param name="source">アプリケーションをローカル コンピューター上に登録するときに使用するソース名。</param>
      <param name="logName">ソースのエントリが書き込まれるログの名前。 指定できる値は、"Application"、"System"、またはカスタム イベント ログです。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> が空の文字列 ("") または <see langword="null" />  
  
- または - 
 <paramref name="logName" /> が有効なイベント ログ名ではありません。 イベント ログ名は、印字可能な文字で構成されている必要があります。文字 '*'、'?'、または '\' を含めないでください。  
  
- または - 
 <paramref name="logName" /> はユーザー ログの作成に有効ではありません。 イベント ログ名 AppEvent、SysEvent、および SecEvent は、システムで使用するために予約されています。  
  
- または - 
ログ名が既存のイベント ソース名に一致します。  
  
- または - 
ソース名は、254 文字を超えるレジストリ キーのパスになります。  
  
- または - 
<paramref name="logName" /> の最初の 8 文字が既存のイベント ログ名の最初の 8 文字に一致します。  
  
- または - 
ローカル コンピューター上に既にソースが存在するため、ソースを登録できません。  
  
- または - 
ソース名が既存のイベント ログ名に一致します。</exception>
      <exception cref="T:System.InvalidOperationException">ローカル コンピューター上のイベント ログのレジストリ キーを開けませんでした。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.CreateEventSource(System.String,System.String,System.String)">
      <summary>指定したコンピューター上のログにエントリを書き込むための有効なイベント ソースとして指定したソース名を設定します。 このメソッドを使用して、指定したコンピューター上に新しいカスタム ログを作成することもできます。</summary>
      <param name="source">アプリケーションを指定されたコンピューターに登録するために使用されるソース。</param>
      <param name="logName">ソースのエントリが書き込まれるログの名前。 指定できる値は、"Application"、"System"、またはカスタム イベント ログです。 値を指定しなかった場合、<paramref name="logName" /> は既定によりアプリケーションに設定されます。</param>
      <param name="machineName">このイベント ソースを登録するコンピューターの名前。ローカル コンピューターの場合は "."。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="machineName" /> が有効なコンピューター名ではありません。  
  
- または - 
 <paramref name="source" /> が空の文字列 ("") または <see langword="null" />  
  
- または - 
 <paramref name="logName" /> が有効なイベント ログ名ではありません。 イベント ログ名は、印字可能な文字で構成されている必要があります。文字 '*'、'?'、または '\' を含めないでください。  
  
- または - 
 <paramref name="logName" /> はユーザー ログの作成に有効ではありません。 イベント ログ名 AppEvent、SysEvent、および SecEvent は、システムで使用するために予約されています。  
  
- または - 
ログ名が既存のイベント ソース名に一致します。  
  
- または - 
ソース名は、254 文字を超えるレジストリ キーのパスになります。  
  
- または - 
<paramref name="logName" /> の最初の 8 文字が指定したコンピューター上の既存のイベント ログ名の最初の 8 文字に一致します。  
  
- または - 
指定したコンピューター上に既にソースが存在するため、ソースを登録できません。  
  
- または - 
ソース名が既存のイベント ソース名に一致します。</exception>
      <exception cref="T:System.InvalidOperationException">指定したコンピューター上のイベント ログのレジストリ キーを開けませんでした。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.Delete(System.String)">
      <summary>ローカル コンピューターからイベント ログを削除します。</summary>
      <param name="logName">削除するログの名前。 指定できる値は、アプリケーション、セキュリティ、システム、およびコンピューター上の任意のカスタム イベント ログです。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="logName" /> が空の文字列 ("") または <see langword="null" /></exception>
      <exception cref="T:System.InvalidOperationException">ローカル コンピューター上のイベント ログのレジストリ キーを開けませんでした。  
  
- または -
  
 ローカル コンピューター上にログが存在しません。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">イベント ログが正常に消去されませんでした。  
  
 - または -  
  
 ログを開くことができません。 Windows のエラー コードは使用できません。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.Delete(System.String,System.String)">
      <summary>指定したコンピューターからイベント ログを削除します。</summary>
      <param name="logName">削除するログの名前。 指定できる値は、アプリケーション、セキュリティ、システム、および指定したコンピューター上の任意のカスタム イベント ログです。</param>
      <param name="machineName">ログを削除するコンピューターの名前。ローカル コンピューターの場合は "."。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="logName" /> が空の文字列 ("") または <see langword="null" />  
  
- または - 
 <paramref name="machineName" /> が有効なコンピューター名ではありません。</exception>
      <exception cref="T:System.InvalidOperationException">指定したコンピューター上のイベント ログのレジストリ キーを開けませんでした。  
  
- または -
  
 指定したコンピューター上にログが存在しません。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">イベント ログが正常に消去されませんでした。  
  
 - または -  
  
 ログを開くことができません。 Windows のエラー コードは使用できません。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)">
      <summary>ローカル コンピューターのイベント ログからイベント ソースの登録を削除します。</summary>
      <param name="source">イベント ログ システムにアプリケーションを登録するときに使用する名前。</param>
      <exception cref="T:System.ArgumentException">ローカル コンピューターのレジストリに <paramref name="source" /> パラメーターがありません。  
  
- または - 
イベント ログのレジストリ キーに対する書き込みアクセス許可がありません。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.DeleteEventSource(System.String,System.String)">
      <summary>指定したコンピューターからアプリケーションのイベント ソース登録を削除します。</summary>
      <param name="source">イベント ログ システムにアプリケーションを登録するときに使用する名前。</param>
      <param name="machineName">登録を削除するコンピューターの名前。ローカル コンピューターの場合は "."。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="machineName" /> パラメーターが正しくありません。  
  
- または - 
指定したコンピューターのレジストリに <paramref name="source" /> パラメーターがありません。  
  
- または - 
イベント ログのレジストリ キーに対する書き込みアクセス許可がありません。</exception>
      <exception cref="T:System.InvalidOperationException">レジストリで <paramref name="source" /> の親レジストリ キーに同じ名前のサブキーが含まれないため、<paramref name="source" /> は削除できません。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.Diagnostics.EventLog" /> が使用しているアンマネージド リソースを解放します。オプションとして、マネージド リソースを解放することもできます。</summary>
      <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Diagnostics.EventLog.EndInit">
      <summary>フォームまたは別のコンポーネントで使用される <see cref="T:System.Diagnostics.EventLog" /> の初期化を終了します。 初期化は実行時に発生します。</summary>
    </member>
    <member name="M:System.Diagnostics.EventLog.Exists(System.String)">
      <summary>ローカル コンピューター上にログが存在するかどうかを確認します。</summary>
      <param name="logName">検索するログの名前。 指定できる値は、アプリケーション、セキュリティ、システム、アプリケーション固有のその他のログ (Active Directory に関連するログなど)、またはコンピューター上の任意のカスタム ログです。</param>
      <exception cref="T:System.ArgumentException">logName が <see langword="null" /> です。または値が空です。</exception>
      <returns>ローカル コンピューター上にログが存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.EventLog.Exists(System.String,System.String)">
      <summary>指定したコンピューター上にログが存在するかどうかを確認します。</summary>
      <param name="logName">検索するログ。 指定できる値は、アプリケーション、セキュリティ、システム、アプリケーション固有のその他のログ (Active Directory に関連するログなど)、またはコンピューター上の任意のカスタム ログです。</param>
      <param name="machineName">ログ検索の対象となるコンピューターの名前。ローカル コンピューターの場合は "."。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="machineName" /> パラメーターの書式が無効です。 検索しているコンピューターに対して正しい構文を使用したかどうかを確認してください。  
  
- または - 
<paramref name="logName" /> が <see langword="null" /> です。または値が空です。</exception>
      <returns>指定したコンピューター上にログが存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.EventLog.GetEventLogs">
      <summary>ローカル コンピューター上のすべてのイベント ログを検索し、リストを格納する <see cref="T:System.Diagnostics.EventLog" /> オブジェクトの配列を作成します。</summary>
      <exception cref="T:System.SystemException">レジストリの読み取りアクセス許可がありません。  
  
 - または -  
  
 コンピューター上にイベント ログ サービスがありません。</exception>
      <returns>ローカル コンピューター上のログを表す <see cref="T:System.Diagnostics.EventLog" /> 型の配列。</returns>
    </member>
    <member name="M:System.Diagnostics.EventLog.GetEventLogs(System.String)">
      <summary>指定したコンピューター上のすべてのイベント ログを検索し、リストを格納する <see cref="T:System.Diagnostics.EventLog" /> オブジェクトの配列を作成します。</summary>
      <param name="machineName">イベント ログの検索対象となるコンピューター。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="machineName" /> パラメーターに無効なコンピューター名が指定されています。</exception>
      <exception cref="T:System.InvalidOperationException">レジストリの読み取りアクセス許可がありません。  
  
 - または -  
  
 コンピューター上にイベント ログ サービスがありません。</exception>
      <returns>指定したコンピューター上のログを表す <see cref="T:System.Diagnostics.EventLog" /> 型の配列。</returns>
    </member>
    <member name="M:System.Diagnostics.EventLog.LogNameFromSourceName(System.String,System.String)">
      <summary>指定したソースが登録されているログの名前を取得します。</summary>
      <param name="source">イベント ソースの名前。</param>
      <param name="machineName">検索対象のコンピューターの名前。ローカル コンピューターの場合は "."。</param>
      <returns>レジストリ内で指定したソースに関連付けられているログの名前。</returns>
    </member>
    <member name="M:System.Diagnostics.EventLog.ModifyOverflowPolicy(System.Diagnostics.OverflowAction,System.Int32)">
      <summary>イベント ログが最大ファイル サイズに達した場合に、新しいエントリを書き込むように構成された動作を変更します。</summary>
      <param name="action">イベント ログに新しいエントリを書き込むためのオーバーフロー動作。</param>
      <param name="retentionDays">イベント ログの各エントリが保持される最小日数。 このパラメーターは、<paramref name="action" /> が <see cref="F:System.Diagnostics.OverflowAction.OverwriteOlder" /> に設定されている場合にのみ使用されます。</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="action" /> は正しい <see cref="P:System.Diagnostics.EventLog.OverflowAction" /> 値ではありません。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="retentionDays" /> が 1 未満であるか、365 を超えています。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Diagnostics.EventLog.Log" /> 値が有効なログ名ではありません。  
  
- または - 
ターゲット コンピューター上のイベント ログのレジストリ キーを開けませんでした。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.RegisterDisplayName(System.String,System.Int64)">
      <summary>イベント ログのローカライズされた名前を指定します。これは、サーバーのイベント ビューアーに表示されます。</summary>
      <param name="resourceFile">ローカライズされたリソース ファイルの完全指定パス。</param>
      <param name="resourceId">リソース ファイル内のローカライズされた文字列のインデックスを示すリソース識別子。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Diagnostics.EventLog.Log" /> 値が有効なログ名ではありません。  
  
- または - 
ターゲット コンピューター上のイベント ログのレジストリ キーを開けませんでした。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resourceFile" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.SourceExists(System.String)">
      <summary>ローカル コンピューターにイベント ソースが登録されているかどうかを確認します。</summary>
      <param name="source">イベント ソースの名前。</param>
      <exception cref="T:System.Security.SecurityException">
        <paramref name="source" /> が見つかりませんでしたが、イベント ログの一部またはすべてが検索できませんでした。</exception>
      <returns>ローカル コンピューターにイベント ソースが存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.EventLog.SourceExists(System.String,System.String)">
      <summary>指定したコンピューターにイベント ソースが登録されているかどうかを確認します。</summary>
      <param name="source">イベント ソースの名前。</param>
      <param name="machineName">検索対象のコンピューターの名前。ローカル コンピューターの場合は "."。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="machineName" /> が無効なコンピューター名です。</exception>
      <exception cref="T:System.Security.SecurityException">
        <paramref name="source" /> が見つかりませんでしたが、イベント ログの一部またはすべてが検索できませんでした。</exception>
      <returns>指定したコンピューターにイベント ソースが登録されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String)">
      <summary>種類が Information のエントリを、指定したメッセージ テキストと共にイベント ログに書き込みます。</summary>
      <param name="message">イベント ログに書き込む文字列。</param>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Diagnostics.EventLog.Source" /> の <see cref="T:System.Diagnostics.EventLog" /> プロパティが設定されていません。  
  
- または - 
メソッドが新しいイベント ソースを登録しようとしましたが、<see cref="P:System.Diagnostics.EventLog.MachineName" /> のコンピューター名が無効です。  
  
- または - 
ソースは既に別のイベント ログに登録されています。  
  
- または - 
メッセージ文字列は 31,839 バイト (Windows Vista より前の Windows オペレーティング システムでは 32,766 バイト) を超えています。  
  
- または - 
ソース名は、254 文字を超えるレジストリ キーのパスになります。</exception>
      <exception cref="T:System.InvalidOperationException">イベント ログのレジストリ キーを開けませんでした。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。 Windows のエラー コードは使用できません。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType)">
      <summary>エラー、警告、情報、監査正常終了、または監査エラー エントリを、指定したメッセージ テキストと共にイベント ログに書き込みます。</summary>
      <param name="message">イベント ログに書き込む文字列。</param>
      <param name="type">
        <see cref="T:System.Diagnostics.EventLogEntryType" /> 値のいずれか 1 つ。</param>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Diagnostics.EventLog.Source" /> の <see cref="T:System.Diagnostics.EventLog" /> プロパティが設定されていません。  
  
- または - 
メソッドが新しいイベント ソースを登録しようとしましたが、<see cref="P:System.Diagnostics.EventLog.MachineName" /> のコンピューター名が無効です。  
  
- または - 
ソースは既に別のイベント ログに登録されています。  
  
- または - 
メッセージ文字列は 31,839 バイト (Windows Vista より前の Windows オペレーティング システムでは 32,766 バイト) を超えています。  
  
- または - 
ソース名は、254 文字を超えるレジストリ キーのパスになります。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="type" /> は有効な <see cref="T:System.Diagnostics.EventLogEntryType" /> ではありません。</exception>
      <exception cref="T:System.InvalidOperationException">イベント ログのレジストリ キーを開けませんでした。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。 Windows のエラー コードは使用できません。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32)">
      <summary>エントリを、指定したメッセージ テキストおよびアプリケーション定義のイベント識別子と共にイベント ログに書き込みます。</summary>
      <param name="message">イベント ログに書き込む文字列。</param>
      <param name="type">
        <see cref="T:System.Diagnostics.EventLogEntryType" /> 値のいずれか 1 つ。</param>
      <param name="eventID">イベントの、アプリケーション固有の識別子。</param>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Diagnostics.EventLog.Source" /> の <see cref="T:System.Diagnostics.EventLog" /> プロパティが設定されていません。  
  
- または - 
メソッドが新しいイベント ソースを登録しようとしましたが、<see cref="P:System.Diagnostics.EventLog.MachineName" /> のコンピューター名が無効です。  
  
- または - 
ソースは既に別のイベント ログに登録されています。  
  
- または - 
 <paramref name="eventID" /> が 0 未満であるか、<see cref="F:System.UInt16.MaxValue" /> を超えています。  
  
- または - 
メッセージ文字列は 31,839 バイト (Windows Vista より前の Windows オペレーティング システムでは 32,766 バイト) を超えています。  
  
- または - 
ソース名は、254 文字を超えるレジストリ キーのパスになります。</exception>
      <exception cref="T:System.InvalidOperationException">イベント ログのレジストリ キーを開けませんでした。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="type" /> は有効な <see cref="T:System.Diagnostics.EventLogEntryType" /> ではありません。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。 Windows のエラー コードは使用できません。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16)">
      <summary>指定したメッセージ テキスト、アプリケーション定義のイベント識別子、およびアプリケーション定義のカテゴリと共にエントリをイベント ログに書き込みます。</summary>
      <param name="message">イベント ログに書き込む文字列。</param>
      <param name="type">
        <see cref="T:System.Diagnostics.EventLogEntryType" /> 値のいずれか 1 つ。</param>
      <param name="eventID">イベントの、アプリケーション固有の識別子。</param>
      <param name="category">メッセージと関連付けられた、アプリケーション固有のサブカテゴリ。</param>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Diagnostics.EventLog.Source" /> の <see cref="T:System.Diagnostics.EventLog" /> プロパティが設定されていません。  
  
- または - 
メソッドが新しいイベント ソースを登録しようとしましたが、<see cref="P:System.Diagnostics.EventLog.MachineName" /> のコンピューター名が無効です。  
  
- または - 
ソースは既に別のイベント ログに登録されています。  
  
- または - 
 <paramref name="eventID" /> が 0 未満であるか、<see cref="F:System.UInt16.MaxValue" /> を超えています。  
  
- または - 
メッセージ文字列は 31,839 バイト (Windows Vista より前の Windows オペレーティング システムでは 32,766 バイト) を超えています。  
  
- または - 
ソース名は、254 文字を超えるレジストリ キーのパスになります。</exception>
      <exception cref="T:System.InvalidOperationException">イベント ログのレジストリ キーを開けませんでした。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="type" /> は有効な <see cref="T:System.Diagnostics.EventLogEntryType" /> ではありません。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。 Windows のエラー コードは使用できません。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16,System.Byte[])">
      <summary>指定したメッセージ テキスト、アプリケーション定義のイベント識別子、およびアプリケーション定義のカテゴリと共にエントリをイベント ログに書き込み、メッセージにバイナリ データを付加します。</summary>
      <param name="message">イベント ログに書き込む文字列。</param>
      <param name="type">
        <see cref="T:System.Diagnostics.EventLogEntryType" /> 値のいずれか 1 つ。</param>
      <param name="eventID">イベントの、アプリケーション固有の識別子。</param>
      <param name="category">メッセージと関連付けられた、アプリケーション固有のサブカテゴリ。</param>
      <param name="rawData">エントリに関連付けられているバイナリ データを保持するバイト配列。</param>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Diagnostics.EventLog.Source" /> の <see cref="T:System.Diagnostics.EventLog" /> プロパティが設定されていません。  
  
- または - 
メソッドが新しいイベント ソースを登録しようとしましたが、<see cref="P:System.Diagnostics.EventLog.MachineName" /> のコンピューター名が無効です。  
  
- または - 
ソースは既に別のイベント ログに登録されています。  
  
- または - 
 <paramref name="eventID" /> が 0 未満であるか、<see cref="F:System.UInt16.MaxValue" /> を超えています。  
  
- または - 
メッセージ文字列は 31,839 バイト (Windows Vista より前の Windows オペレーティング システムでは 32,766 バイト) を超えています。  
  
- または - 
ソース名は、254 文字を超えるレジストリ キーのパスになります。</exception>
      <exception cref="T:System.InvalidOperationException">イベント ログのレジストリ キーを開けませんでした。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="type" /> は有効な <see cref="T:System.Diagnostics.EventLogEntryType" /> ではありません。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。 Windows のエラー コードは使用できません。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String)">
      <summary>指定した登録イベント ソースを使用して、種類が Information のエントリを、指定したメッセージ テキストと共にイベント ログに書き込みます。</summary>
      <param name="source">アプリケーションを指定されたコンピューターに登録するために使用されるソース。</param>
      <param name="message">イベント ログに書き込む文字列。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> 値が空の文字列 ("") です。  
  
- または - 
<paramref name="source" /> 値は <see langword="null" /> です。  
  
- または - 
メッセージ文字列は 31,839 バイト (Windows Vista より前の Windows オペレーティング システムでは 32,766 バイト) を超えています。  
  
- または - 
ソース名は、254 文字を超えるレジストリ キーのパスになります。</exception>
      <exception cref="T:System.InvalidOperationException">イベント ログのレジストリ キーを開けませんでした。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。 Windows のエラー コードは使用できません。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType)">
      <summary>指定した登録イベント ソースを使用して、エラー、警告、情報、監査正常終了、または監査エラー エントリを、指定したメッセージ テキストと共にイベント ログに書き込みます。</summary>
      <param name="source">アプリケーションを指定されたコンピューターに登録するために使用されるソース。</param>
      <param name="message">イベント ログに書き込む文字列。</param>
      <param name="type">
        <see cref="T:System.Diagnostics.EventLogEntryType" /> 値のいずれか 1 つ。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> 値が空の文字列 ("") です。  
  
- または - 
<paramref name="source" /> 値は <see langword="null" /> です。  
  
- または - 
メッセージ文字列は 31,839 バイト (Windows Vista より前の Windows オペレーティング システムでは 32,766 バイト) を超えています。  
  
- または - 
ソース名は、254 文字を超えるレジストリ キーのパスになります。</exception>
      <exception cref="T:System.InvalidOperationException">イベント ログのレジストリ キーを開けませんでした。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="type" /> は有効な <see cref="T:System.Diagnostics.EventLogEntryType" /> ではありません。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。 Windows のエラー コードは使用できません。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32)">
      <summary>指定した登録イベント ソースを使用して、指定したメッセージ テキストおよびアプリケーション定義のイベント識別子と共にエントリをイベント ログに書き込みます。</summary>
      <param name="source">アプリケーションを指定されたコンピューターに登録するために使用されるソース。</param>
      <param name="message">イベント ログに書き込む文字列。</param>
      <param name="type">
        <see cref="T:System.Diagnostics.EventLogEntryType" /> 値のいずれか 1 つ。</param>
      <param name="eventID">イベントの、アプリケーション固有の識別子。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> 値が空の文字列 ("") です。  
  
- または - 
<paramref name="source" /> 値は <see langword="null" /> です。  
  
- または - 
 <paramref name="eventID" /> が 0 未満であるか、<see cref="F:System.UInt16.MaxValue" /> を超えています。  
  
- または - 
メッセージ文字列は 31,839 バイト (Windows Vista より前の Windows オペレーティング システムでは 32,766 バイト) を超えています。  
  
- または - 
ソース名は、254 文字を超えるレジストリ キーのパスになります。</exception>
      <exception cref="T:System.InvalidOperationException">イベント ログのレジストリ キーを開けませんでした。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="type" /> は有効な <see cref="T:System.Diagnostics.EventLogEntryType" /> ではありません。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。 Windows のエラー コードは使用できません。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16)">
      <summary>指定した登録イベント ソースを使用して、メッセージ テキスト、アプリケーション定義のイベント識別子、およびアプリケーション定義のカテゴリと共にエントリをイベント ログに書き込みます。 <paramref name="category" /> は、イベント ビューアーでログ内のイベントをフィルター処理するときに使用できます。</summary>
      <param name="source">アプリケーションを指定されたコンピューターに登録するために使用されるソース。</param>
      <param name="message">イベント ログに書き込む文字列。</param>
      <param name="type">
        <see cref="T:System.Diagnostics.EventLogEntryType" /> 値のいずれか 1 つ。</param>
      <param name="eventID">イベントの、アプリケーション固有の識別子。</param>
      <param name="category">メッセージと関連付けられた、アプリケーション固有のサブカテゴリ。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> 値が空の文字列 ("") です。  
  
- または - 
<paramref name="source" /> 値は <see langword="null" /> です。  
  
- または - 
 <paramref name="eventID" /> が 0 未満であるか、<see cref="F:System.UInt16.MaxValue" /> を超えています。  
  
- または - 
メッセージ文字列は 31,839 バイト (Windows Vista より前の Windows オペレーティング システムでは 32,766 バイト) を超えています。  
  
- または - 
ソース名は、254 文字を超えるレジストリ キーのパスになります。</exception>
      <exception cref="T:System.InvalidOperationException">イベント ログのレジストリ キーを開けませんでした。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="type" /> は有効な <see cref="T:System.Diagnostics.EventLogEntryType" /> ではありません。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。 Windows のエラー コードは使用できません。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16,System.Byte[])">
      <summary>指定した登録イベント ソースを使用して、指定したメッセージ テキスト、アプリケーション定義のイベント識別子、およびアプリケーション定義のカテゴリと共にエントリをイベント ログに書き込み、メッセージにバイナリ データを付加します。</summary>
      <param name="source">アプリケーションを指定されたコンピューターに登録するために使用されるソース。</param>
      <param name="message">イベント ログに書き込む文字列。</param>
      <param name="type">
        <see cref="T:System.Diagnostics.EventLogEntryType" /> 値のいずれか 1 つ。</param>
      <param name="eventID">イベントの、アプリケーション固有の識別子。</param>
      <param name="category">メッセージと関連付けられた、アプリケーション固有のサブカテゴリ。</param>
      <param name="rawData">エントリに関連付けられているバイナリ データを保持するバイト配列。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> 値が空の文字列 ("") です。  
  
- または - 
<paramref name="source" /> 値は <see langword="null" /> です。  
  
- または - 
 <paramref name="eventID" /> が 0 未満であるか、<see cref="F:System.UInt16.MaxValue" /> を超えています。  
  
- または - 
メッセージ文字列は 31,839 バイト (Windows Vista より前の Windows オペレーティング システムでは 32,766 バイト) を超えています。  
  
- または - 
ソース名は、254 文字を超えるレジストリ キーのパスになります。</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="type" /> は有効な <see cref="T:System.Diagnostics.EventLogEntryType" /> ではありません。</exception>
      <exception cref="T:System.InvalidOperationException">イベント ログのレジストリ キーを開けませんでした。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。 Windows のエラー コードは使用できません。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEvent(System.Diagnostics.EventInstance,System.Byte[],System.Object[])">
      <summary>指定したイベント データ、メッセージ置換文字列、および関連するバイナリ データと共にイベント ログ エントリを書き込みます。</summary>
      <param name="instance">ローカライズされたイベント ログ エントリを表す <see cref="T:System.Diagnostics.EventInstance" /> インスタンス。</param>
      <param name="data">エントリに関連付けられているバイナリ データを保持するバイト配列。</param>
      <param name="values">イベント ログ エントリのメッセージ テキストにマージする文字列の配列。</param>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Diagnostics.EventLog.Source" /> の <see cref="T:System.Diagnostics.EventLog" /> プロパティが設定されていません。  
  
- または - 
メソッドが新しいイベント ソースを登録しようとしましたが、<see cref="P:System.Diagnostics.EventLog.MachineName" /> のコンピューター名が無効です。  
  
- または - 
ソースは既に別のイベント ログに登録されています。  
  
- または - 
 <paramref name="instance.InstanceId" /> が 0 未満であるか、<see cref="F:System.UInt16.MaxValue" /> を超えています。  
  
- または - 
 <paramref name="values" /> には 256 を超える要素が格納されています。  
  
- または - 
<paramref name="values" /> 要素の 1 つが 32766 バイトを超えています。  
  
- または - 
ソース名は、254 文字を超えるレジストリ キーのパスになります。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.InvalidOperationException">イベント ログのレジストリ キーを開けませんでした。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。 Windows のエラー コードは使用できません。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEvent(System.Diagnostics.EventInstance,System.Object[])">
      <summary>ローカライズされたエントリをイベント ログに書き込みます。</summary>
      <param name="instance">ローカライズされたイベント ログ エントリを表す <see cref="T:System.Diagnostics.EventInstance" /> インスタンス。</param>
      <param name="values">イベント ログ エントリのメッセージ テキストにマージする文字列の配列。</param>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Diagnostics.EventLog.Source" /> の <see cref="T:System.Diagnostics.EventLog" /> プロパティが設定されていません。  
  
- または - 
メソッドが新しいイベント ソースを登録しようとしましたが、<see cref="P:System.Diagnostics.EventLog.MachineName" /> のコンピューター名が無効です。  
  
- または - 
ソースは既に別のイベント ログに登録されています。  
  
- または - 
 <paramref name="instance.InstanceId" /> が 0 未満であるか、<see cref="F:System.UInt16.MaxValue" /> を超えています。  
  
- または - 
 <paramref name="values" /> には 256 を超える要素が格納されています。  
  
- または - 
<paramref name="values" /> 要素の 1 つが 32766 バイトを超えています。  
  
- または - 
ソース名は、254 文字を超えるレジストリ キーのパスになります。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.InvalidOperationException">イベント ログのレジストリ キーを開けませんでした。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。 Windows のエラー コードは使用できません。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEvent(System.String,System.Diagnostics.EventInstance,System.Byte[],System.Object[])">
      <summary>指定した登録イベント ソースを使用して、指定したイベント データ、メッセージ置換文字列、および関連するバイナリ データと共にイベント ログ エントリを書き込みます。</summary>
      <param name="source">指定したコンピューター上のアプリケーションに登録されるイベント ソースの名前。</param>
      <param name="instance">ローカライズされたイベント ログ エントリを表す <see cref="T:System.Diagnostics.EventInstance" /> インスタンス。</param>
      <param name="data">エントリに関連付けられているバイナリ データを保持するバイト配列。</param>
      <param name="values">イベント ログ エントリのメッセージ テキストにマージする文字列の配列。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> 値が空の文字列 ("") です。  
  
- または - 
<paramref name="source" /> 値は <see langword="null" /> です。  
  
- または - 
 <paramref name="instance.InstanceId" /> が 0 未満であるか、<see cref="F:System.UInt16.MaxValue" /> を超えています。  
  
- または - 
 <paramref name="values" /> には 256 を超える要素が格納されています。  
  
- または - 
<paramref name="values" /> 要素の 1 つが 32766 バイトを超えています。  
  
- または - 
ソース名は、254 文字を超えるレジストリ キーのパスになります。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.InvalidOperationException">イベント ログのレジストリ キーを開けませんでした。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。 Windows のエラー コードは使用できません。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLog.WriteEvent(System.String,System.Diagnostics.EventInstance,System.Object[])">
      <summary>指定した登録イベント ソースを使用して、指定したイベント データとメッセージ置換文字列と共にイベント ログ エントリを書き込みます。</summary>
      <param name="source">指定したコンピューター上のアプリケーションに登録されるイベント ソースの名前。</param>
      <param name="instance">ローカライズされたイベント ログ エントリを表す <see cref="T:System.Diagnostics.EventInstance" /> インスタンス。</param>
      <param name="values">イベント ログ エントリのメッセージ テキストにマージする文字列の配列。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> 値が空の文字列 ("") です。  
  
- または - 
<paramref name="source" /> 値は <see langword="null" /> です。  
  
- または - 
 <paramref name="instance.InstanceId" /> が 0 未満であるか、<see cref="F:System.UInt16.MaxValue" /> を超えています。  
  
- または - 
 <paramref name="values" /> には 256 を超える要素が格納されています。  
  
- または - 
<paramref name="values" /> 要素の 1 つが 32766 バイトを超えています。  
  
- または - 
ソース名は、254 文字を超えるレジストリ キーのパスになります。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="instance" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.InvalidOperationException">イベント ログのレジストリ キーを開けませんでした。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">イベント エントリをイベント ログに書き込むときにオペレーティング システムからエラーが報告されました。 Windows のエラー コードは使用できません。</exception>
    </member>
    <member name="P:System.Diagnostics.EventLog.EnableRaisingEvents">
      <summary>
        <see cref="T:System.Diagnostics.EventLog" /> が <see cref="E:System.Diagnostics.EventLog.EntryWritten" /> イベント通知を受信するかどうかを示す値を取得または設定します。</summary>
      <exception cref="T:System.InvalidOperationException">イベント ログは、リモート コンピューター上にあります。</exception>
      <returns>エントリがログに書き込まれたときに <see cref="T:System.Diagnostics.EventLog" /> が通知を受信する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLog.Entries">
      <summary>イベント ログの内容を取得します。</summary>
      <returns>イベント ログのエントリを保持している <see cref="T:System.Diagnostics.EventLogEntryCollection" />。 1 つのエントリが <see cref="T:System.Diagnostics.EventLogEntry" /> クラスの 1 つのインスタンスに関連付けられます。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLog.Log">
      <summary>読み取るログまたは書き込むログの名前を取得または設定します。</summary>
      <returns>ログの名前。 ログ名には、アプリケーション ログ名、システム ログ名、セキュリティ ログ名、またはカスタム ログ名を指定できます。 既定値は、空の文字列 ("") です。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLog.LogDisplayName">
      <summary>イベント ログの表示名を取得します。</summary>
      <exception cref="T:System.InvalidOperationException">このコンピューターのレジストリに、指定した <see cref="P:System.Diagnostics.EventLog.Log" /> が存在しません。</exception>
      <returns>システムのイベント ビューアーのイベント ログを表す名前。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLog.MachineName">
      <summary>イベントを読み取るコンピューターまたは書き込むコンピューターの名前を取得または設定します。</summary>
      <exception cref="T:System.ArgumentException">コンピューター名が無効です。</exception>
      <returns>イベント ログが存在するサーバーの名前。 既定値はローカル コンピューター (".") です。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLog.MaximumKilobytes">
      <summary>イベント ログの最大サイズを KB 単位で取得または設定します。</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">指定した値が 64 未満か、4194240 を超える値です。または、64 の倍数ではありません。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Diagnostics.EventLog.Log" /> 値が有効なログ名ではありません。  
  
- または - 
ターゲット コンピューター上のイベント ログのレジストリ キーを開けませんでした。</exception>
      <returns>イベント ログの最大サイズ。単位は KB です。 既定値は、512 KB の最大ファイル サイズを示す 512 です。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLog.MinimumRetentionDays">
      <summary>イベント ログ内のエントリを保持する日数を取得します。</summary>
      <returns>イベント ログ内のエントリが保持される日数。 既定値は 7 です。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLog.OverflowAction">
      <summary>イベント ログが最大ファイル サイズに達した場合に、新しいエントリを格納するように構成された動作を取得します。</summary>
      <returns>イベント ログが最大サイズに達した場合に、新しいエントリを格納するために構成された動作を指定する <see cref="T:System.Diagnostics.OverflowAction" /> 値。 既定値は、<see cref="F:System.Diagnostics.OverflowAction.OverwriteOlder" /> です。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLog.Source">
      <summary>イベント ログを書き込むときに登録して使用するソース名を取得または設定します。</summary>
      <exception cref="T:System.ArgumentException">ソース名は、254 文字を超えるレジストリ キーのパスになります。</exception>
      <returns>エントリのソースとしてイベント ログに登録される名前。 既定値は、空の文字列 ("") です。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLog.SynchronizingObject">
      <summary>
        <see cref="T:System.Diagnostics.EventLog" /> エントリ書き込みイベントの結果として発行されるイベント ハンドラー呼び出しをマーシャリングするために使用するオブジェクトを取得または設定します。</summary>
      <returns>イベント ログの <see cref="E:System.Diagnostics.EventLog.EntryWritten" /> イベントの結果として発行されるイベント ハンドラー呼び出しをマーシャリングするために使用する <see cref="T:System.ComponentModel.ISynchronizeInvoke" />。</returns>
    </member>
    <member name="T:System.Diagnostics.EventLogEntry">
      <summary>イベント ログの単一レコードをカプセル化します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogEntry.Equals(System.Diagnostics.EventLogEntry)">
      <summary>2 つのイベント ログ エントリを比較します。</summary>
      <param name="otherEntry">比較対象の <see cref="T:System.Diagnostics.EventLogEntry" />。</param>
      <returns>
        <see cref="T:System.Diagnostics.EventLogEntry" /> オブジェクトが同じ場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogEntry.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> に、オブジェクトをシリアル化するために必要なデータを設定します。</summary>
      <param name="info">データの読み込み先となる <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">このシリアル化のシリアル化先 (<see cref="T:System.Runtime.Serialization.StreamingContext" /> を参照)。</param>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.Category">
      <summary>このエントリの <see cref="P:System.Diagnostics.EventLogEntry.CategoryNumber" /> プロパティに関連付けられているテキストを取得します。</summary>
      <exception cref="T:System.Exception">カテゴリに関連付けられている挿入文字列の 1 つに空白を割り当てることはできませんでした。</exception>
      <returns>アプリケーション固有のカテゴリ テキスト。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.CategoryNumber">
      <summary>イベント ログ エントリのカテゴリ番号を取得します。</summary>
      <returns>このエントリのアプリケーション固有のカテゴリ番号。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.Data">
      <summary>エントリに関連付けられているバイナリ データを取得します。</summary>
      <returns>エントリに関連付けられているバイナリ データを保持するバイト配列。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.EntryType">
      <summary>エントリのイベントの種類を取得します。</summary>
      <returns>イベント ログ内のエントリに関連付けられているイベントの種類。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.EventID">
      <summary>現在のイベント エントリのアプリケーション固有のイベント識別子を取得します。</summary>
      <returns>イベント メッセージの、アプリケーション固有の識別子。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.Index">
      <summary>イベント ログでのこのエントリのインデックスを取得します。</summary>
      <returns>イベント ログでのこのエントリのインデックス。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.InstanceId">
      <summary>イベント エントリのメッセージ テキストを指定するリソース識別子を取得します。</summary>
      <returns>イベント ソースのメッセージ リソース ファイルの文字列定義に対応するリソース識別子。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.MachineName">
      <summary>エントリを生成したコンピューターの名前を取得します。</summary>
      <returns>イベント ログを格納しているコンピューターの名前。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.Message">
      <summary>イベント エントリに関連付けられているローカライズ済みのメッセージを取得します。</summary>
      <exception cref="T:System.Exception">メッセージに関連付けられている挿入文字列の 1 つに空白を割り当てることはできませんでした。</exception>
      <returns>メッセージ用の書式設定されローカライズされたテキスト。 これには関連付けられた置換文字列が含まれます。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.ReplacementStrings">
      <summary>イベント ログ エントリに関連付けられている置換文字列を取得します。</summary>
      <returns>イベント エントリに格納されている置換文字列を保持する配列。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.Source">
      <summary>このイベントを発生させたアプリケーションの名前を取得します。</summary>
      <returns>このイベントのソースとしてイベント ログに登録される名前。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.TimeGenerated">
      <summary>このイベントが生成された現地時間を取得します。</summary>
      <returns>このイベントが生成された現地時間。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.TimeWritten">
      <summary>このイベントがログに書き込まれた現地時間を取得します。</summary>
      <returns>このイベントがログに書き込まれた現地時間。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntry.UserName">
      <summary>このイベントを発生させたユーザーの名前を取得します。</summary>
      <exception cref="T:System.SystemException">ユーザーの SID に対するアカウント情報を取得できませんでした。</exception>
      <returns>ユーザーまたはグループを一意に識別するセキュリティ識別子 (SID: Security Identifier)。</returns>
    </member>
    <member name="T:System.Diagnostics.EventLogEntryCollection">
      <summary>
        <see cref="T:System.Diagnostics.EventLogEntry" /> インスタンスのコレクションのサイズと列挙子を定義します。</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogEntryCollection.CopyTo(System.Diagnostics.EventLogEntry[],System.Int32)">
      <summary>
        <see cref="T:System.Diagnostics.EventLogEntryCollection" /> の要素を、<see cref="T:System.Diagnostics.EventLogEntry" /> インスタンスの配列にコピーします (インスタンス配列の特定の配列インデックスからコピーが開始されます)。</summary>
      <param name="entries">コレクションからコピーされる要素のコピー先である <see cref="T:System.Diagnostics.EventLogEntry" /> インスタンスの 1 次元配列。 配列には、0 から始まるインデックスが設定されている必要があります。</param>
      <param name="index">配列内のコピーを開始する位置を示す、0 から始まるインデックスです。</param>
    </member>
    <member name="M:System.Diagnostics.EventLogEntryCollection.GetEnumerator">
      <summary>
        <see cref="T:System.Diagnostics.EventLogEntryCollection" /> オブジェクトに対する単純な反復処理をサポートします。</summary>
      <returns>コレクションを反復処理するために使用できるオブジェクト。</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>コレクションの要素を <see cref="T:System.Array" /> にコピーします。<see cref="T:System.Array" /> の特定のインデックスからコピーが開始されます。</summary>
      <param name="array">コレクションの要素のコピー先となる 1 次元の <see cref="T:System.Array" />。 <see cref="T:System.Array" /> には、0 から始まるインデックス番号が必要です。</param>
      <param name="index">コピーの開始位置とする <paramref name="array" /> のインデックス (0 から始まる)。</param>
    </member>
    <member name="P:System.Diagnostics.EventLogEntryCollection.Count">
      <summary>イベント ログのエントリ数 (<see cref="T:System.Diagnostics.EventLogEntry" /> コレクション内の要素数) を取得します。</summary>
      <returns>現時点でイベント ログに存在するエントリの数。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntryCollection.Item(System.Int32)">
      <summary>0 (ゼロ) から始まるインデックスに基づいて、イベント ログのエントリを取得します。</summary>
      <param name="index">イベント ログ エントリに関連付けられた、0 から始まるインデックス。</param>
      <returns>
        <paramref name="index" /> パラメーターで指定した位置にあるイベント ログ エントリ。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#IsSynchronized">
      <summary>
        <see cref="T:System.Diagnostics.EventLogEntryCollection" /> へのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。</summary>
      <returns>コレクションへのアクセスが同期されていない (スレッド セーフでない) 場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#SyncRoot">
      <summary>
        <see cref="T:System.Diagnostics.EventLogEntryCollection" /> オブジェクトへのアクセスを同期するために使用できるオブジェクトを取得します。</summary>
      <returns>コレクションへのアクセスの同期に使用できるオブジェクトです。</returns>
    </member>
    <member name="T:System.Diagnostics.EventLogEntryType">
      <summary>イベント ログ エントリのイベントの種類を指定します。</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogEntryType.Error">
      <summary>エラー イベント。 ユーザーに知らせる必要がある重大な問題を示します。通常は、機能またはデータの損失です。</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogEntryType.FailureAudit">
      <summary>監査エラーイベント。 ファイルを開けなかった場合など、監査アクセスに失敗した場合に発生するセキュリティ イベントを示します。</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogEntryType.Information">
      <summary>情報イベント。 有効で成功した操作を示します。</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogEntryType.SuccessAudit">
      <summary>成功した監査イベント。 たとえば、ログオンに成功した場合のように、監査アクセスに成功した場合に発生するセキュリティ イベントを示します。</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogEntryType.Warning">
      <summary>警告イベント。 緊急を要する問題ではありませんが、今後問題の原因となりうることを示します。</summary>
    </member>
    <member name="T:System.Diagnostics.EventLogTraceListener">
      <summary>トレース出力またはデバッグ出力を <see cref="T:System.Diagnostics.EventLog" /> に転送する簡単なリスナーを提供します。</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.#ctor">
      <summary>トレース リスナーを指定せずに、<see cref="T:System.Diagnostics.EventLogTraceListener" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.#ctor(System.Diagnostics.EventLog)">
      <summary>イベント ログを指定して、<see cref="T:System.Diagnostics.EventLogTraceListener" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="eventLog">書き込み先のイベント ログ。</param>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.#ctor(System.String)">
      <summary>ソースを指定して、<see cref="T:System.Diagnostics.EventLogTraceListener" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="source">既存のイベント ログ ソースの名前。</param>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.Close">
      <summary>イベント ログを終了して、トレース出力またはデバッグ出力を受信しないようにします。</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
      <summary>トレース情報、データ オブジェクト、およびイベント情報をイベント ログに書き込みます。</summary>
      <param name="eventCache">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納しているオブジェクト。</param>
      <param name="source">出力を識別するために使用される名前。通常は、トレース イベントを生成したアプリケーションの名前。</param>
      <param name="severity">トレースを発生させたイベントの種類を指定する列挙値の 1 つ。</param>
      <param name="id">イベントの数値識別子。 <paramref name="source" /> および <paramref name="id" /> の組み合わせにより、イベントが一意に識別されます。</param>
      <param name="data">出力ファイルまたは出力ストリームに書き込むデータ オブジェクト。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> が指定されていません。  
  
- または - 
ログ エントリの文字列の長さが 32,766 文字を超えています。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
      <summary>トレース情報、データ オブジェクトの配列、およびイベント情報をイベント ログに書き込みます。</summary>
      <param name="eventCache">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納しているオブジェクト。</param>
      <param name="source">出力を識別するために使用される名前。通常は、トレース イベントを生成したアプリケーションの名前。</param>
      <param name="severity">トレースを発生させたイベントの種類を指定する列挙値の 1 つ。</param>
      <param name="id">イベントの数値識別子。 <paramref name="source" /> および <paramref name="id" /> の組み合わせにより、イベントが一意に識別されます。</param>
      <param name="data">データ オブジェクトの配列。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> が指定されていません。  
  
- または - 
ログ エントリの文字列の長さが 32,766 文字を超えています。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
      <summary>トレース情報、メッセージ、およびイベント情報をイベント ログに書き込みます。</summary>
      <param name="eventCache">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納しているオブジェクト。</param>
      <param name="source">出力を識別するために使用される名前。通常は、トレース イベントを生成したアプリケーションの名前。</param>
      <param name="severity">トレースを発生させたイベントの種類を指定する列挙値の 1 つ。</param>
      <param name="id">イベントの数値識別子。 <paramref name="source" /> および <paramref name="id" /> の組み合わせにより、イベントが一意に識別されます。</param>
      <param name="message">トレース メッセージ。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> が指定されていません。  
  
- または - 
ログ エントリの文字列の長さが 32,766 文字を超えています。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
      <summary>トレース情報、オブジェクトの書式付き配列、およびイベント情報をイベント ログに書き込みます。</summary>
      <param name="eventCache">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納しているオブジェクト。</param>
      <param name="source">出力を識別するために使用される名前。通常は、トレース イベントを生成したアプリケーションの名前。</param>
      <param name="severity">トレースを発生させたイベントの種類を指定する列挙値の 1 つ。</param>
      <param name="id">イベントの数値識別子。 <paramref name="source" /> および <paramref name="id" /> の組み合わせにより、イベントが一意に識別されます。</param>
      <param name="format">0 個以上の書式項目を格納している書式指定文字列。<paramref name="args" /> 配列内のオブジェクトに対応します。</param>
      <param name="args">0 個以上の書式設定対象オブジェクトを含んだ <see langword="object" /> 配列。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="source" /> が指定されていません。  
  
- または - 
ログ エントリの文字列の長さが 32,766 文字を超えています。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.Write(System.String)">
      <summary>このインスタンスのイベント ログにメッセージを書き込みます。</summary>
      <param name="message">書き込むメッセージ。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="message" /> が 32,766 文字を超えています。</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogTraceListener.WriteLine(System.String)">
      <summary>このインスタンスのイベント ログにメッセージを書き込みます。</summary>
      <param name="message">書き込むメッセージ。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="message" /> が 32,766 文字を超えています。</exception>
    </member>
    <member name="P:System.Diagnostics.EventLogTraceListener.EventLog">
      <summary>書き込み先となるイベント ログを取得または設定します。</summary>
      <returns>書き込み先のイベント ログ。</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogTraceListener.Name">
      <summary>この <see cref="T:System.Diagnostics.EventLogTraceListener" /> の名前を取得または設定します。</summary>
      <returns>トレース リスナーの名前。</returns>
    </member>
    <member name="T:System.Diagnostics.EventSourceCreationData">
      <summary>ローカル コンピューターまたはリモート コンピューターでイベント ログ ソースを作成するために使用される構成設定を表します。</summary>
    </member>
    <member name="M:System.Diagnostics.EventSourceCreationData.#ctor(System.String,System.String)">
      <summary>指定したイベント ソースおよびイベント ログ名を使用して、<see cref="T:System.Diagnostics.EventSourceCreationData" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="source">エントリのソースとしてイベント ログに登録する名前。</param>
      <param name="logName">ソースのエントリが書き込まれるログの名前。</param>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.CategoryCount">
      <summary>カテゴリ リソース ファイル内のカテゴリの数を取得または設定します。</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">プロパティが負の値または <see cref="F:System.UInt16.MaxValue" /> より大きい値に設定されています。</exception>
      <returns>カテゴリ リソース ファイル内のカテゴリの数。 既定値はゼロです。</returns>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.CategoryResourceFile">
      <summary>ソースのカテゴリ文字列が格納されたリソース ファイルのパスを取得または設定します。</summary>
      <returns>カテゴリ リソース ファイルのパス。 既定値は、空の文字列 ("") です。</returns>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.LogName">
      <summary>ソースがエントリを書き込むイベント ログの名前を取得または設定します。</summary>
      <returns>イベント ログの名前。 ログ名には、アプリケーション ログ名、システム ログ名、またはカスタム ログ名を指定できます。 既定値は "Application" です。</returns>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.MachineName">
      <summary>イベント ソースを登録するコンピューターの名前を取得または設定します。</summary>
      <exception cref="T:System.ArgumentException">コンピューター名が無効です。</exception>
      <returns>イベント ソースを登録するシステムの名前。 既定値はローカル コンピューター (".") です。</returns>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.MessageResourceFile">
      <summary>ソースのメッセージ書式指定文字列が格納されたメッセージ リソース ファイルのパスを取得または設定します。</summary>
      <returns>メッセージ リソース ファイルのパス。 既定値は、空の文字列 ("") です。</returns>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.ParameterResourceFile">
      <summary>ソースのメッセージ パラメーター文字列が格納されたリソース ファイルのパスを取得または設定します。</summary>
      <returns>パラメーター リソース ファイルのパス。 既定値は、空の文字列 ("") です。</returns>
    </member>
    <member name="P:System.Diagnostics.EventSourceCreationData.Source">
      <summary>イベント ソースとしてイベント ログに登録する名前を取得または設定します。</summary>
      <returns>エントリのソースとしてイベント ログに登録する名前。 既定値は、空の文字列 ("") です。</returns>
    </member>
    <member name="T:System.Diagnostics.OverflowAction">
      <summary>最大ファイル サイズに達したイベント ログ内のエントリの処理方法を指定します。</summary>
    </member>
    <member name="F:System.Diagnostics.OverflowAction.DoNotOverwrite">
      <summary>イベント ログがいっぱいになった場合、既存のエントリを保持し、新規のエントリが破棄されることを示します。</summary>
    </member>
    <member name="F:System.Diagnostics.OverflowAction.OverwriteAsNeeded">
      <summary>イベント ログがいっぱいになった場合、最も古いエントリが新規のエントリで上書きされることを示します。</summary>
    </member>
    <member name="F:System.Diagnostics.OverflowAction.OverwriteOlder">
      <summary>イベント ログがいっぱいになった場合、<see cref="P:System.Diagnostics.EventLog.MinimumRetentionDays" /> プロパティ値の指定よりも古いイベントが新規のイベントで上書きされることを示します。 イベント ログがいっぱいになり、<see cref="P:System.Diagnostics.EventLog.MinimumRetentionDays" /> プロパティ値の指定よりも古いイベントが存在しない場合、新規のイベントは破棄されます。</summary>
    </member>
  </members>
</doc>