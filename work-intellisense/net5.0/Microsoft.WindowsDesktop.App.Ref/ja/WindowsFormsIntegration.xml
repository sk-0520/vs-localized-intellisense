<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>WindowsFormsIntegration</name>
  </assembly>
  <members>
    <member name="T:System.Windows.Automation.Peers.WindowsFormsHostAutomationPeer">
      <summary>UI オートメーションに <see cref="T:System.Windows.Forms.Integration.WindowsFormsHost" /> 型を公開します。</summary>
    </member>
    <member name="M:System.Windows.Automation.Peers.WindowsFormsHostAutomationPeer.#ctor(System.Windows.Forms.Integration.WindowsFormsHost)">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.WindowsFormsHostAutomationPeer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner">この <see cref="T:System.Windows.Automation.Peers.WindowsFormsHostAutomationPeer" /> に関連付けられた <see cref="T:System.Windows.Forms.Integration.WindowsFormsHost" />。</param>
    </member>
    <member name="T:System.Windows.Forms.Integration.ChildChangedEventArgs">
      <summary>
        <see cref="E:System.Windows.Forms.Integration.WindowsFormsHost.ChildChanged" /> イベントおよび <see cref="E:System.Windows.Forms.Integration.ElementHost.ChildChanged" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Integration.ChildChangedEventArgs.#ctor(System.Object)">
      <summary>
        <see cref="T:System.Windows.Forms.Integration.ChildChangedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="previousChild">新しい値が割り当てられる前の <see cref="P:System.Windows.Forms.Integration.WindowsFormsHost.Child" /> プロパティの値。</param>
    </member>
    <member name="P:System.Windows.Forms.Integration.ChildChangedEventArgs.PreviousChild">
      <summary>新しい値が割り当てられる前の <see cref="P:System.Windows.Forms.Integration.WindowsFormsHost.Child" /> プロパティの値を取得します。</summary>
      <returns>新しい値が割り当てられる前の <see cref="P:System.Windows.Forms.Integration.WindowsFormsHost.Child" /> プロパティの値。</returns>
    </member>
    <member name="T:System.Windows.Forms.Integration.ElementHost">
      <summary>Windows Presentation Foundation (WPF) 要素のホストに使用できる Windows フォーム コントロール。</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.BindingContextChanged">
      <summary>
        <see cref="T:System.Windows.Forms.BindingContext" /> プロパティの値が変化したときに発生します。</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.ChildChanged">
      <summary>
        <see cref="P:System.Windows.Forms.Integration.WindowsFormsHost.Child" /> プロパティを設定したときに発生します。</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.Click">
      <summary>コントロールがクリックされたときに発生します。</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.ClientSizeChanged">
      <summary>
        <see cref="P:System.Windows.Forms.Control.ClientSize" /> プロパティの値が変化したときに発生します。</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.ControlAdded">
      <summary>新しいコントロールが <see cref="T:System.Windows.Forms.Control.ControlCollection" /> に追加されたときに発生します。</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.ControlRemoved">
      <summary>
        <see cref="T:System.Windows.Forms.Control.ControlCollection" /> からコントロールが削除されたときに発生します。</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.CursorChanged">
      <summary>
        <see cref="P:System.Windows.Forms.Control.Cursor" /> プロパティの値が変化したときに発生します。</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.DoubleClick">
      <summary>コントロールがダブルクリックされたときに発生します。</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.DragDrop">
      <summary>ドラッグ アンド ドロップ操作が完了したときに発生します。</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.DragEnter">
      <summary>オブジェクトがコントロールの境界内にドラッグされると発生します。</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.DragLeave">
      <summary>オブジェクトがコントロールの境界外にドラッグされたときに発生します。</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.DragOver">
      <summary>オブジェクトがコントロールの境界を越えてドラッグされると発生します。</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.Enter">
      <summary>コントロールが入力されると発生します。</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.FontChanged">
      <summary>
        <see cref="P:System.Windows.Forms.Control.Font" /> プロパティの値が変化すると発生します。</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.ForeColorChanged">
      <summary>
        <see cref="P:System.Windows.Forms.Control.ForeColor" /> プロパティの値が変化すると発生します。</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.GiveFeedback">
      <summary>ドラッグ操作中に発生します。</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.GotFocus">
      <summary>コントロールがフォーカスを受け取ると発生します。</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.Invalidated">
      <summary>コントロールの表示に再描画が必要なときに発生します。</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.KeyDown">
      <summary>コントロールにフォーカスがあるときにキーが押されると発生します。</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.KeyPress">
      <summary>コントロールにフォーカスがあるときにキーが押されると発生します。</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.KeyUp">
      <summary>コントロールにフォーカスがあるときにキーが離されると発生します。</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.Layout">
      <summary>コントロールの子コントロールの位置を変更する必要があるときに発生します。</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.Leave">
      <summary>入力フォーカスがコントロールを離れると発生します。</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.LostFocus">
      <summary>コントロールがフォーカスを失ったときに発生します。</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.MouseCaptureChanged">
      <summary>コントロールでマウスのキャプチャを失ったか取得したときに発生します。</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.MouseClick">
      <summary>マウスでコントロールをクリックしたときに発生します。</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.MouseDoubleClick">
      <summary>マウスでコントロールをダブルクリックしたときに発生します。</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.MouseDown">
      <summary>マウス ポインターがコントロール上にあり、マウス ボタンがクリックされると発生します。</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.MouseEnter">
      <summary>マウス ポインターによってコントロールが入力されると発生します。</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.MouseHover">
      <summary>マウス ポインターをコントロールの上に重ねると発生します。</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.MouseLeave">
      <summary>マウス ポインターがコントロールを離れると発生します。</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.MouseMove">
      <summary>マウス ポインターがコントロール上を移動すると発生します。</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.MouseUp">
      <summary>マウス ポインターがコントロール上にある状態でマウス ボタンが離されると発生します。</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.MouseWheel">
      <summary>コントロールにフォーカスがある間に、マウスのホイールを移動したときに発生します。</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.PaddingChanged">
      <summary>コントロールの埋め込みが変更されたときに発生します。</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.Paint">
      <summary>
        <see cref="T:System.Windows.Forms.Integration.ElementHost" /> コントロールが再描画されると発生します。</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.PreviewKeyDown">
      <summary>このコントロールにフォーカスがあるときにキーが押された場合、<see cref="E:System.Windows.Forms.Control.KeyDown" /> イベントの前に発生します。</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.QueryContinueDrag">
      <summary>ドラッグ アンド ドロップ操作中に発生し、ドラッグ ソースがドラッグ アンド ドロップ操作をキャンセルする必要があるかどうかを決定できるようにします。</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.Resize">
      <summary>コントロールのサイズが変更されると発生します。</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.RightToLeftChanged">
      <summary>
        <see cref="P:System.Windows.Forms.Control.RightToLeft" /> プロパティの値が変化すると発生します。</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.SizeChanged">
      <summary>
        <see cref="P:System.Windows.Forms.Control.Size" /> プロパティの値が変化すると発生します。</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.ElementHost.TextChanged">
      <summary>
        <see cref="P:System.Windows.Forms.Control.Text" /> プロパティの値が変化すると発生します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Integration.ElementHost.#ctor">
      <summary>
        <see cref="T:System.Windows.Forms.Integration.ElementHost" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Integration.ElementHost.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.Windows.Forms.Integration.ElementHost" /> コントロールで使用されているシステム リソースを直ちに解放します。</summary>
      <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Integration.ElementHost.EnableModelessKeyboardInterop(System.Windows.Window)">
      <summary>
        <see cref="T:System.Windows.Window" /> を Windows フォームからモードレスで開いたときに、このウィンドウがキーボード メッセージを正しく受け取ることができるようにします。</summary>
      <param name="window">モードレスで開く Windows Presentation Foundation (WPF) ウィンドウ。</param>
    </member>
    <member name="M:System.Windows.Forms.Integration.ElementHost.GetPreferredSize(System.Drawing.Size)">
      <summary>基本クラスの実装である <see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" /> をオーバーライドし、ホストされる Windows Presentation Foundation (WPF) 要素に適切なレイアウト動作を提供します。</summary>
      <param name="proposedSize">WPF 要素のカスタム サイズ領域。</param>
      <returns>
        <see cref="T:System.Drawing.Size" /> コントロールが <paramref name="proposedSize" /> で指定された制約に従って算出した <see cref="T:System.Windows.Forms.Integration.ElementHost" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Integration.ElementHost.IsInputChar(System.Char)">
      <summary>すべての WM_CHAR キー メッセージがホストされた要素に転送されることを確認します。</summary>
      <param name="charCode">転送する文字。</param>
      <returns>常に <see langword="true" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Integration.ElementHost.OnEnabledChanged(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.EnabledChanged" /> イベントを発生させます。</summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:System.Windows.Forms.Integration.ElementHost.OnGotFocus(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Integration.ElementHost.GotFocus" /> イベントを発生させます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Integration.ElementHost.OnHandleCreated(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.HandleCreated" /> イベントを発生させます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Integration.ElementHost.OnLeave(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.Leave" /> イベントを発生させます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Integration.ElementHost.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.Paint" /> イベントを発生させます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.PaintEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Integration.ElementHost.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
      <summary>コントロールの背景を描画します。</summary>
      <param name="pevent">描画するコントロールに関する情報を格納する <see cref="T:System.Windows.Forms.PaintEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Integration.ElementHost.OnPrint(System.Windows.Forms.PaintEventArgs)">
      <summary>提供された <see cref="T:System.Drawing.Graphics" /> オブジェクトを使用してコントロールをレンダリングします。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.Windows.Forms.PaintEventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Integration.ElementHost.OnPropertyChanged(System.String,System.Object)">
      <summary>プロパティが変更されたことを <see cref="P:System.Windows.Forms.Integration.ElementHost.PropertyMap" /> に通知します。</summary>
      <param name="propertyName">変換を必要とする、変更されたプロパティの名前。</param>
      <param name="value">プロパティの新しい値。</param>
    </member>
    <member name="M:System.Windows.Forms.Integration.ElementHost.OnVisibleChanged(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.VisibleChanged" /> イベントを発生させます。</summary>
      <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Integration.ElementHost.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
      <summary>コマンド キーを処理し、ホストされた要素が通常の Windows フォーム処理の前にコマンドを処理できるようにします。</summary>
      <param name="msg">処理するウィンドウ メッセージを表す、参照渡しされた <see cref="T:System.Windows.Forms.Message" />。</param>
      <param name="keyData">処理するキーを表す <see cref="T:System.Windows.Forms.Keys" /> 値の 1 つ。</param>
      <returns>文字が Windows Presentation Foundation (WPF) のショートカット キーの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Integration.ElementHost.ProcessMnemonic(System.Char)">
      <summary>ニーモニック文字を処理し、ホストされた要素が通常の Windows フォーム処理の前にニーモニックを処理できるようにします。</summary>
      <param name="charCode">処理対象の文字。</param>
      <returns>文字が Windows Presentation Foundation (WPF) のショートカット キーの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Integration.ElementHost.ScaleCore(System.Single,System.Single)">
      <summary>親コンテナーとホストされた Windows フォーム コントロールをスケーリングします。</summary>
      <param name="dx">x 軸のスケール ファクター。</param>
      <param name="dy">y 軸のスケール ファクター。</param>
    </member>
    <member name="M:System.Windows.Forms.Integration.ElementHost.Select(System.Boolean,System.Boolean)">
      <summary>ホストされた要素をアクティブにします。</summary>
      <param name="directed">選択するコントロールの方向を指定する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="forward">タブ オーダー内を前方に移動する場合は <see langword="true" />。後方に移動する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Integration.ElementHost.WndProc(System.Windows.Forms.Message@)">
      <summary>Windows メッセージを処理します。</summary>
      <param name="m">処理するメッセージ。</param>
    </member>
    <member name="P:System.Windows.Forms.Integration.ElementHost.AutoSize">
      <summary>内容をすべて表示するためにコントロールのサイズを自動調整するかどうかを示す値を取得または設定します。</summary>
      <returns>表示内容に合わせてコントロールのサイズを調整する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="P:System.Windows.Forms.Integration.ElementHost.BackColorTransparent">
      <summary>ホストされる要素が透明な背景を持つかどうかを示す値を取得または設定します。</summary>
      <returns>ホストされている要素の背景が透明である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Windows.Forms.Integration.ElementHost.CanEnableIme">
      <summary>
        <see cref="P:System.Windows.Forms.Control.ImeMode" /> プロパティをアクティブな値に設定して、IME サポートを有効にできるかどうかを示す値を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Integration.ElementHost" /> に <see cref="P:System.Windows.Forms.Integration.ElementHost.Child" /> 要素が含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Integration.ElementHost.Child">
      <summary>
        <see cref="T:System.Windows.UIElement" /> コントロールによってホストされる <see cref="T:System.Windows.Forms.Integration.ElementHost" /> を取得または設定します。</summary>
      <returns>ホストされる Windows Presentation Foundation (WPF) 要素。</returns>
    </member>
    <member name="P:System.Windows.Forms.Integration.ElementHost.DefaultSize">
      <summary>コントロールの既定のサイズを取得します。</summary>
      <returns>コントロールの既定の <see cref="T:System.Drawing.Size" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Integration.ElementHost.Focused">
      <summary>コントロールに入力フォーカスがあるかどうかを示す値を取得します。</summary>
      <returns>コントロールにフォーカスがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Integration.ElementHost.HostContainer">
      <summary>ホストされる Windows Presentation Foundation (WPF) 要素の親コンテナーを取得します。</summary>
      <returns>親コンテナーです。</returns>
    </member>
    <member name="P:System.Windows.Forms.Integration.ElementHost.ImeModeBase">
      <summary>コントロールの IME モードを取得または設定します。</summary>
      <returns>コントロールの IME モード。</returns>
    </member>
    <member name="P:System.Windows.Forms.Integration.ElementHost.PropertyMap">
      <summary>
        <see cref="T:System.Windows.Forms.Integration.ElementHost" /> コントロールのプロパティ設定がホストされた Windows Presentation Foundation (WPF) 要素に与える影響を確認するプロパティ マップを取得します。</summary>
      <returns>ホストされた WPF 要素のプロパティに <see cref="T:System.Windows.Forms.Integration.PropertyMap" /> をマップする <see cref="T:System.Windows.Forms.Integration.ElementHost" />。</returns>
    </member>
    <member name="T:System.Windows.Forms.Integration.IntegrationExceptionEventArgs">
      <summary>オプションで例外の発生をサポートする <see cref="T:System.EventArgs" /> クラスの基本クラスを提供します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Integration.IntegrationExceptionEventArgs.#ctor(System.Boolean,System.Exception)">
      <summary>
        <see cref="T:System.Windows.Forms.Integration.IntegrationExceptionEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="throwException">
        <paramref name="exception" /> で指定した <see cref="T:System.Exception" /> を発生させる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="exception">発生させる <see cref="T:System.Exception" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="exception" /> が <see langword="null" />です。</exception>
    </member>
    <member name="P:System.Windows.Forms.Integration.IntegrationExceptionEventArgs.Exception">
      <summary>この <see cref="T:System.Exception" /> に関連付けられている <see cref="T:System.Windows.Forms.Integration.IntegrationExceptionEventArgs" /> を取得します。</summary>
      <returns>この <see cref="T:System.Exception" /> に関連付けられている <see cref="T:System.Windows.Forms.Integration.IntegrationExceptionEventArgs" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Integration.IntegrationExceptionEventArgs.ThrowException">
      <summary>
        <see cref="T:System.Exception" /> プロパティで指定した <see cref="P:System.Windows.Forms.Integration.IntegrationExceptionEventArgs.Exception" /> を発生させるかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Windows.Forms.Integration.IntegrationExceptionEventArgs.Exception" /> を発生させる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="T:System.Windows.Forms.Integration.LayoutExceptionEventArgs">
      <summary>
        <see cref="E:System.Windows.Forms.Integration.WindowsFormsHost.LayoutError" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Integration.LayoutExceptionEventArgs.#ctor(System.Exception)">
      <summary>
        <see cref="T:System.Windows.Forms.Integration.LayoutExceptionEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="exception">発生させる <see cref="T:System.Exception" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="exception" /> が <see langword="null" />です。</exception>
    </member>
    <member name="T:System.Windows.Forms.Integration.PropertyMap">
      <summary>Windows フォーム コントロールと Windows Presentation Foundation (WPF) 要素の間でプロパティ値を変換する方法を提供します。</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.PropertyMap.PropertyMappingError">
      <summary>プロパティ トランスレーターによって例外が発生したときに発生します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Integration.PropertyMap.#ctor">
      <summary>
        <see cref="T:System.Windows.Forms.Integration.PropertyMap" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Integration.PropertyMap.#ctor(System.Object)">
      <summary>指定されたソース オブジェクトを使用して、<see cref="T:System.Windows.Forms.Integration.PropertyMap" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="source">変換するプロパティを持つオブジェクト。</param>
    </member>
    <member name="M:System.Windows.Forms.Integration.PropertyMap.Add(System.String,System.Windows.Forms.Integration.PropertyTranslator)">
      <summary>特定のプロパティに関する <see cref="T:System.Windows.Forms.Integration.PropertyTranslator" /> デリゲートを <see cref="T:System.Windows.Forms.Integration.PropertyMap" /> に追加します。</summary>
      <param name="propertyName">マップするプロパティの名前。</param>
      <param name="translator">
        <paramref name="propertyName" /> の変更時に呼び出される <see cref="T:System.Windows.Forms.Integration.PropertyTranslator" /> デリゲート。</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="propertyName" /> には既存のマッピングがあります。</exception>
    </member>
    <member name="M:System.Windows.Forms.Integration.PropertyMap.Apply(System.String)">
      <summary>ソース オブジェクトの現在のプロパティ値に基づいて、指定されたプロパティのプロパティ トランスレーターを実行します。</summary>
      <param name="propertyName">変換するプロパティの名前。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="propertyName" /> で指定されたプロパティが <see cref="P:System.Windows.Forms.Integration.PropertyMap.SourceObject" /> 上に存在しません。</exception>
    </member>
    <member name="M:System.Windows.Forms.Integration.PropertyMap.ApplyAll">
      <summary>ソース オブジェクトの現在のプロパティ値に基づいて、マップされた各プロパティのプロパティ トランスレーターを実行します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Integration.PropertyMap.Clear">
      <summary>プロパティ マッピングをすべて削除します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Integration.PropertyMap.Contains(System.String)">
      <summary>指定されたプロパティがマップされているかどうかを示す値を取得します。</summary>
      <param name="propertyName">検索するプロパティの名前。</param>
      <returns>プロパティ マップの中に <paramref name="propertyName" /> が存在する場合、<see langword="true" />。そうでない場合、<see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Integration.PropertyMap.Remove(System.String)">
      <summary>マッピングから指定されたプロパティを削除します。</summary>
      <param name="propertyName">削除するプロパティの名前。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="propertyName" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Windows.Forms.Integration.PropertyMap.Reset(System.String)">
      <summary>指定されたプロパティの既定のプロパティ マッピングを復元します。</summary>
      <param name="propertyName">復元するプロパティの名前。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="propertyName" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Windows.Forms.Integration.PropertyMap.ResetAll">
      <summary>既定のプロパティ マッピングを復元します。</summary>
    </member>
    <member name="P:System.Windows.Forms.Integration.PropertyMap.DefaultTranslators">
      <summary>既定で定義されているプロパティ マッピングのコレクションを取得します。</summary>
      <returns>プロパティ名を、対応する <see cref="T:System.Windows.Forms.Integration.PropertyTranslator" /> デリゲートにマップする <see cref="T:System.Collections.Generic.Dictionary`2" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Integration.PropertyMap.Item(System.String)">
      <summary>特定のプロパティに関する <see cref="T:System.Windows.Forms.Integration.PropertyTranslator" /> デリゲートを取得または設定します。</summary>
      <param name="propertyName">マップするプロパティの名前。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="propertyName" /> は <see langword="null" /> または空の文字列です。つまり、指定された <see cref="T:System.Windows.Forms.Integration.PropertyTranslator" /> デリゲートは <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="propertyName" /> で指定されたプロパティが <see cref="P:System.Windows.Forms.Integration.PropertyMap.SourceObject" /> 上に存在しません。</exception>
      <returns>
        <paramref name="propertyName" /> によって指定されたプロパティに対応する <see cref="T:System.Windows.Forms.Integration.PropertyTranslator" /> デリゲート。</returns>
    </member>
    <member name="P:System.Windows.Forms.Integration.PropertyMap.Keys">
      <summary>
        <see cref="T:System.Windows.Forms.Integration.PropertyMap" /> コレクションのプロパティ名を格納している <see cref="T:System.Collections.ICollection" /> オブジェクトを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Integration.PropertyMap" /> コレクションのプロパティ名を格納している <see cref="T:System.Collections.ICollection" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Forms.Integration.PropertyMap.SourceObject">
      <summary>変換するプロパティを持つオブジェクトを取得します。</summary>
      <returns>変換するプロパティを持つオブジェクト。</returns>
    </member>
    <member name="P:System.Windows.Forms.Integration.PropertyMap.Values">
      <summary>
        <see cref="T:System.Windows.Forms.Integration.PropertyMap" /> コレクションにプロパティ トランスレーターが含まれる <see cref="T:System.Collections.ICollection" /> を取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Integration.PropertyMap" /> コレクションにプロパティ トランスレーターが含まれる <see cref="T:System.Collections.ICollection" />。</returns>
    </member>
    <member name="T:System.Windows.Forms.Integration.PropertyMappingExceptionEventArgs">
      <summary>
        <see cref="E:System.Windows.Forms.Integration.PropertyMap.PropertyMappingError" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Integration.PropertyMappingExceptionEventArgs.#ctor(System.Exception,System.String,System.Object)">
      <summary>
        <see cref="T:System.Windows.Forms.Integration.PropertyMappingExceptionEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="exception">発生させる <see cref="T:System.Exception" />。</param>
      <param name="propertyName">プロパティの割り当てエラーに関連付けられているプロパティの名前。</param>
      <param name="propertyValue">プロパティの割り当てエラーに関連付けられているプロパティの値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="exception" /> が <see langword="null" /> です。<paramref name="propertyName" /> が <see langword="null" /> であるか、空の文字列を参照しています。</exception>
    </member>
    <member name="P:System.Windows.Forms.Integration.PropertyMappingExceptionEventArgs.PropertyName">
      <summary>プロパティの割り当てエラーに関連付けられているプロパティの名前を取得します。</summary>
      <returns>プロパティの割り当てエラーに関連付けられているプロパティの名前を表す文字列。</returns>
    </member>
    <member name="P:System.Windows.Forms.Integration.PropertyMappingExceptionEventArgs.PropertyValue">
      <summary>プロパティの割り当てエラーに関連付けられているプロパティの値を取得します。</summary>
      <returns>プロパティの割り当てエラーに関連付けられているプロパティの値を表すオブジェクト。</returns>
    </member>
    <member name="T:System.Windows.Forms.Integration.PropertyTranslator">
      <summary>ホスト コントロールの割り当てられたプロパティに変換機能を提供します。</summary>
      <param name="host">割り当てられるプロパティを含むホスト コントロール。 ホスト コントロールは、<see cref="T:System.Windows.Forms.Integration.WindowsFormsHost" /> または <see cref="T:System.Windows.Forms.Integration.ElementHost" /> のいずれかです。</param>
      <param name="propertyName">変換されるプロパティの名前。</param>
      <param name="value">プロパティの新しい値。</param>
    </member>
    <member name="T:System.Windows.Forms.Integration.WindowsFormsHost">
      <summary>Windows フォーム コントロールを WPF ページ上にホストできるようにする要素。</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.WindowsFormsHost.ChildChanged">
      <summary>
        <see cref="P:System.Windows.Forms.Integration.WindowsFormsHost.Child" /> プロパティを設定したときに発生します。</summary>
    </member>
    <member name="E:System.Windows.Forms.Integration.WindowsFormsHost.LayoutError">
      <summary>
        <see cref="T:System.Windows.Forms.Integration.WindowsFormsHost" /> がサポートしていない傾斜や回転などのレイアウト エラーが検出されたときに発生します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Integration.WindowsFormsHost.BackgroundProperty">
      <summary>
        <see cref="P:System.Windows.Forms.Integration.WindowsFormsHost.Background" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Integration.WindowsFormsHost.FontFamilyProperty">
      <summary>
        <see cref="P:System.Windows.Forms.Integration.WindowsFormsHost.FontFamily" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Integration.WindowsFormsHost.FontSizeProperty">
      <summary>
        <see cref="P:System.Windows.Forms.Integration.WindowsFormsHost.FontSize" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Integration.WindowsFormsHost.FontStyleProperty">
      <summary>
        <see cref="P:System.Windows.Forms.Integration.WindowsFormsHost.FontStyle" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Integration.WindowsFormsHost.FontWeightProperty">
      <summary>
        <see cref="P:System.Windows.Forms.Integration.WindowsFormsHost.FontWeight" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Integration.WindowsFormsHost.ForegroundProperty">
      <summary>
        <see cref="P:System.Windows.Forms.Integration.WindowsFormsHost.Foreground" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Integration.WindowsFormsHost.PaddingProperty">
      <summary>
        <see cref="P:System.Windows.Forms.Integration.WindowsFormsHost.Padding" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="F:System.Windows.Forms.Integration.WindowsFormsHost.TabIndexProperty">
      <summary>
        <see cref="P:System.Windows.Forms.Integration.WindowsFormsHost.TabIndex" /> 依存関係プロパティを識別します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Integration.WindowsFormsHost.#ctor">
      <summary>
        <see cref="T:System.Windows.Forms.Integration.WindowsFormsHost" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Windows.Forms.Integration.WindowsFormsHost.ArrangeOverride(System.Windows.Size)">
      <summary>派生クラスで実装された場合、子要素を配置し、<see cref="T:System.Windows.FrameworkElement" /> 派生クラスのサイズを決定します。</summary>
      <param name="finalSize">この要素が要素自体と子を配置するために使用する親の末尾の領域。</param>
      <returns>使用する実際のサイズ。</returns>
    </member>
    <member name="M:System.Windows.Forms.Integration.WindowsFormsHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)">
      <summary>
        <see cref="M:System.Windows.Interop.HwndHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)" /> の基本クラスの実装をオーバーライドし、ホストされる Windows フォーム コントロールを構築します。</summary>
      <param name="hwndParent">親ウィンドウのハンドル (HWND)。</param>
      <returns>このオブジェクトのウィンドウ ハンドル。</returns>
    </member>
    <member name="M:System.Windows.Forms.Integration.WindowsFormsHost.DestroyWindowCore(System.Runtime.InteropServices.HandleRef)">
      <summary>
        <see cref="M:System.Windows.Interop.HwndHost.DestroyWindowCore(System.Runtime.InteropServices.HandleRef)" /> をオーバーライドして、このオブジェクトを含むウィンドウを削除します。</summary>
      <param name="hwnd">ウィンドウ ハンドル。 このパラメーターは使用されません。</param>
    </member>
    <member name="M:System.Windows.Forms.Integration.WindowsFormsHost.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.Windows.Forms.Integration.WindowsFormsHost" /> が使用しているアンマネージド リソースを解放します。オプションとして、マネージド リソースを解放することもできます。</summary>
      <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Windows.Forms.Integration.WindowsFormsHost.EnableWindowsFormsInterop">
      <summary>
        <see cref="T:System.Windows.Forms.Form" /> を WPF からモードレスで開いたときに、このフォームが正常に機能するようにします。</summary>
    </member>
    <member name="M:System.Windows.Forms.Integration.WindowsFormsHost.MeasureOverride(System.Windows.Size)">
      <summary>
        <see cref="M:System.Windows.Interop.HwndHost.MeasureOverride(System.Windows.Size)" /> の基本クラスの実装をオーバーライドし、<see cref="T:System.Windows.Forms.Integration.WindowsFormsHost" /> オブジェクトのサイズを測定してレイアウト エンジンに適正なサイズを返します。</summary>
      <param name="constraint">
        <see cref="T:System.Windows.Forms.Integration.WindowsFormsHost" /> オブジェクトで使用可能なサイズ。</param>
      <returns>
        <see cref="T:System.Windows.Forms.Integration.WindowsFormsHost" /> オブジェクトの必要なサイズ。</returns>
    </member>
    <member name="M:System.Windows.Forms.Integration.WindowsFormsHost.OnCreateAutomationPeer">
      <summary>
        <see cref="T:System.Windows.Automation.Peers.WindowsFormsHostAutomationPeer" /> 要素の <see cref="T:System.Windows.Forms.Integration.WindowsFormsHost" /> を作成します。</summary>
      <returns>
        <see cref="T:System.Windows.Automation.Peers.WindowsFormsHostAutomationPeer" /> 要素の <see cref="T:System.Windows.Forms.Integration.WindowsFormsHost" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Integration.WindowsFormsHost.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>割り当てられたプロパティの変換を強制します。</summary>
      <param name="e">変更されたプロパティを識別し、そのプロパティの古い値と新しい値を提供する引数。</param>
    </member>
    <member name="M:System.Windows.Forms.Integration.WindowsFormsHost.ScaleChild(System.Windows.Vector)">
      <summary>ホストされた Windows フォーム コントロールをスケーリングし、スケール ファクターを追跡します。</summary>
      <param name="newScale">新しいスケール ファクター。</param>
      <returns>ホストされた Windows フォーム コントロールに適用されるスケール ファクターを表す <see cref="T:System.Windows.Vector" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Integration.WindowsFormsHost.TabInto(System.Windows.Input.TraversalRequest)">
      <summary>WPF から、ホストされた Windows フォーム コントロールにフォーカスを転送します。</summary>
      <param name="request">フォーカスの動作を指定する <see cref="T:System.Windows.Input.TraversalRequest" />。</param>
      <returns>コントロールがアクティブにされた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Windows.Forms.Integration.WindowsFormsHost.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
      <summary>派生クラスで実装された場合、ホストされた子ウィンドウのウィンドウ プロセスにアクセスします。</summary>
      <param name="hwnd">ホストされたウィンドウのウィンドウ ハンドル。</param>
      <param name="msg">アクションの対象となるメッセージ。</param>
      <param name="wParam">メッセージの処理に関連する可能性のある情報。 通常、これは、フラグなどの小規模の情報を格納するために使用されます。</param>
      <param name="lParam">メッセージの処理に関連する可能性のある情報。 通常、これは、オブジェクトの参照に使用されます。</param>
      <param name="handled">イベント結果を処理済みとしてマークするかどうか。</param>
      <returns>子ウィンドウのウィンドウ ハンドル。</returns>
    </member>
    <member name="P:System.Windows.Forms.Integration.WindowsFormsHost.Background">
      <summary>ホストされているコントロールの背景をアンビエント プロパティとして取得または設定します。</summary>
      <returns>背景色に設定する <see cref="T:System.Windows.Media.Brush" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Integration.WindowsFormsHost.Child">
      <summary>
        <see cref="T:System.Windows.Forms.Integration.WindowsFormsHost" /> 要素によってホストされる子コントロールを取得または設定します。</summary>
      <exception cref="T:System.ArgumentException">トップレベルのフォームをホストされるコントロールとして割り当てようとしました。</exception>
      <returns>ホストされている Windows フォームコントロール。</returns>
    </member>
    <member name="P:System.Windows.Forms.Integration.WindowsFormsHost.FontFamily">
      <summary>ホストされるコントロールのフォント ファミリを取得または設定します。</summary>
      <returns>ホストされるコントロールで使用されるフォント ファミリ。</returns>
    </member>
    <member name="P:System.Windows.Forms.Integration.WindowsFormsHost.FontSize">
      <summary>ホストされるコントロールのフォント サイズを取得または設定します。</summary>
      <returns>ホストされるコントロールで使用されるフォント サイズ。</returns>
    </member>
    <member name="P:System.Windows.Forms.Integration.WindowsFormsHost.FontStyle">
      <summary>ホストされるコントロールのフォント スタイルを取得または設定します。</summary>
      <returns>ホストされるコントロールで使用されるフォント スタイル。</returns>
    </member>
    <member name="P:System.Windows.Forms.Integration.WindowsFormsHost.FontWeight">
      <summary>ホストされるコントロールのフォントの太さを取得または設定します。</summary>
      <returns>ホストされるコントロールで使用されるフォントの太さ。</returns>
    </member>
    <member name="P:System.Windows.Forms.Integration.WindowsFormsHost.Foreground">
      <summary>ホストされるコントロールの前景色を取得または設定します。</summary>
      <returns>ホストされるコントロールの前景色を設定する <see cref="T:System.Windows.Media.Brush" />。</returns>
    </member>
    <member name="P:System.Windows.Forms.Integration.WindowsFormsHost.Padding">
      <summary>ホストされた Windows フォーム コントロールに必要な埋め込みサイズを指定します。</summary>
      <returns>ホストされ <see cref="T:System.Windows.Thickness" /> ている Windows フォームコントロールの埋め込み pf を表す構造体。</returns>
    </member>
    <member name="P:System.Windows.Forms.Integration.WindowsFormsHost.PropertyMap">
      <summary>
        <see cref="T:System.Windows.Forms.Integration.WindowsFormsHost" /> 要素のプロパティ設定がホストされた Windows フォーム コントロールに与える影響を確認するプロパティ マップを取得します。</summary>
      <returns>
        <see cref="T:System.Windows.Forms.Integration.PropertyMap" />ホストされている Windows フォームコントロールのプロパティ <see cref="T:System.Windows.Forms.Integration.WindowsFormsHost" /> にプロパティをマップする。</returns>
    </member>
    <member name="P:System.Windows.Forms.Integration.WindowsFormsHost.TabIndex">
      <summary>ホストされたコントロールのタブ インデックスを取得または設定します。</summary>
      <returns>タブのナビゲーションとフォーカス用のタブ インデックス。</returns>
    </member>
  </members>
</doc>