<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Diagnostics.PerformanceCounter</name>
  </assembly>
  <members>
    <member name="T:System.Diagnostics.CounterCreationData">
      <summary vsli:raw="Defines the counter type, name, and Help string for a custom counter.">사용자 지정 카운터의 카운터 형식, 이름 및 도움말 문자열을 정의합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.CounterCreationData.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.CounterCreationData&quot; /&gt; class, to a counter of type &lt;see langword=&quot;NumberOfItems32&quot; /&gt;, and with empty name and help strings.">
        <see cref="T:System.Diagnostics.CounterCreationData" /> 클래스의 새 인스턴스를 이름과 도움말 문자열을 비어있는 <see langword="NumberOfItems32" /> 형식의 카운터로 초기화합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.CounterCreationData.#ctor(System.String,System.String,System.Diagnostics.PerformanceCounterType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.CounterCreationData&quot; /&gt; class, to a counter of the specified type, using the specified counter name and Help strings.">지정 카운터 이름과 도움말 문자열을 이용해 <see cref="T:System.Diagnostics.CounterCreationData" /> 클래스의 새 인스턴스를 지정 형식의 카운터로 초기화합니다.</summary>
      <param name="counterName" vsli:raw="The name of the counter, which must be unique within its category.">카운터의 이름은 해당 범주내에서 고유해야 합니다.</param>
      <param name="counterHelp" vsli:raw="The text that describes the counter's behavior.">카운터의 동작을 설명하는 텍스트입니다.</param>
      <param name="counterType" vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounterType&quot; /&gt; that identifies the counter's behavior.">카운터의 동작을 식별하는 <see cref="T:System.Diagnostics.PerformanceCounterType" /> 입니다.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="You have specified a value for &lt;paramref name=&quot;counterType&quot; /&gt; that is not a member of the &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounterType&quot; /&gt; enumeration.">
        <see cref="T:System.Diagnostics.PerformanceCounterType" /> 열거형의 멤버가 아닌 <paramref name="counterType" />의 값을 지정한 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;counterHelp&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="counterHelp" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.Diagnostics.CounterCreationData.CounterHelp">
      <summary vsli:raw="Gets or sets the custom counter's description.">사용자 지정 카운터의 설명을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The specified value is &lt;see langword=&quot;null&quot; /&gt;.">지정한 값이 <see langword="null" />인 경우</exception>
      <returns vsli:raw="The text that describes the counter's behavior.">카운터의 동작을 설명하는 텍스트입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.CounterCreationData.CounterName">
      <summary vsli:raw="Gets or sets the name of the custom counter.">특성의 이름을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The specified value is &lt;see langword=&quot;null&quot; /&gt;.">지정한 값이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The specified value is not between 1 and 80 characters long or contains double quotes, control characters or leading or trailing spaces.">지정한 값이 길이가 1-80자가 아니거나 큰따옴표, 제어 문자 또는 선행 공백이나 후행 공백을 포함하는 경우</exception>
      <returns vsli:raw="A name for the counter, which is unique in its category.">해당 범주내에서 고유한 카운터의 이름입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.CounterCreationData.CounterType">
      <summary vsli:raw="Gets or sets the performance counter type of the custom counter.">사용자 지정 카운터의 성능 카운터 형식을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="You have specified a type that is not a member of the &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounterType&quot; /&gt; enumeration.">
        <see cref="T:System.Diagnostics.PerformanceCounterType" /> 열거형의 멤버가 아닌 형식을 지정한 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounterType&quot; /&gt; that defines the behavior of the performance counter.">성능 카운터 동작을 정의하는 <see cref="T:System.Diagnostics.PerformanceCounterType" /> 입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.CounterCreationDataCollection">
      <summary vsli:raw="Provides a strongly typed collection of &lt;see cref=&quot;T:System.Diagnostics.CounterCreationData&quot; /&gt; objects.">
        <see cref="T:System.Diagnostics.CounterCreationData" /> 개체의 강력한 형식의 컬렉션을 제공합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.CounterCreationDataCollection&quot; /&gt; class, with no associated &lt;see cref=&quot;T:System.Diagnostics.CounterCreationData&quot; /&gt; instances.">연결된 <see cref="T:System.Diagnostics.CounterCreationData" /> 인스턴스가 없는 상태에서 <see cref="T:System.Diagnostics.CounterCreationDataCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.#ctor(System.Diagnostics.CounterCreationData[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.CounterCreationDataCollection&quot; /&gt; class by using the specified array of &lt;see cref=&quot;T:System.Diagnostics.CounterCreationData&quot; /&gt; instances.">
        <see cref="T:System.Diagnostics.CounterCreationDataCollection" /> 인스턴스의 지정된 배열을 사용하여 <see cref="T:System.Diagnostics.CounterCreationData" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="value" vsli:raw="An array of &lt;see cref=&quot;T:System.Diagnostics.CounterCreationData&quot; /&gt; instances with which to initialize this &lt;see cref=&quot;T:System.Diagnostics.CounterCreationDataCollection&quot; /&gt;.">이 <see cref="T:System.Diagnostics.CounterCreationData" />을 초기화하는 데 사용할 <see cref="T:System.Diagnostics.CounterCreationDataCollection" /> 인스턴스의 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.#ctor(System.Diagnostics.CounterCreationDataCollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.CounterCreationDataCollection&quot; /&gt; class by using the specified collection of &lt;see cref=&quot;T:System.Diagnostics.CounterCreationData&quot; /&gt; instances.">
        <see cref="T:System.Diagnostics.CounterCreationDataCollection" /> 인스턴스의 지정된 컬렉션을 사용하여 <see cref="T:System.Diagnostics.CounterCreationData" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.CounterCreationDataCollection&quot; /&gt; that holds &lt;see cref=&quot;T:System.Diagnostics.CounterCreationData&quot; /&gt; instances with which to initialize this &lt;see cref=&quot;T:System.Diagnostics.CounterCreationDataCollection&quot; /&gt;.">이 <see cref="T:System.Diagnostics.CounterCreationDataCollection" />을 초기화하는 데 사용할 <see cref="T:System.Diagnostics.CounterCreationData" /> 인스턴스가 포함된 <see cref="T:System.Diagnostics.CounterCreationDataCollection" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.Add(System.Diagnostics.CounterCreationData)">
      <summary vsli:raw="Adds an instance of the &lt;see cref=&quot;T:System.Diagnostics.CounterCreationData&quot; /&gt; class to the collection.">
        <see cref="T:System.Diagnostics.CounterCreationData" /> 클래스의 인스턴스를 컬렉션에 추가합니다.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.CounterCreationData&quot; /&gt; object to append to the existing collection.">기존 컬렉션에 추가할 <see cref="T:System.Diagnostics.CounterCreationData" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is not a &lt;see cref=&quot;T:System.Diagnostics.CounterCreationData&quot; /&gt; object.">
        <paramref name="value" />이 <see cref="T:System.Diagnostics.CounterCreationData" /> 개체가 아닙니다.</exception>
      <returns vsli:raw="The index of the new &lt;see cref=&quot;T:System.Diagnostics.CounterCreationData&quot; /&gt; object.">새 <see cref="T:System.Diagnostics.CounterCreationData" /> 개체의 인덱스입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.AddRange(System.Diagnostics.CounterCreationData[])">
      <summary vsli:raw="Adds the specified array of &lt;see cref=&quot;T:System.Diagnostics.CounterCreationData&quot; /&gt; instances to the collection.">컬렉션에 <see cref="T:System.Diagnostics.CounterCreationData" /> 인스턴스의 지정된 배열을 추가합니다.</summary>
      <param name="value" vsli:raw="An array of &lt;see cref=&quot;T:System.Diagnostics.CounterCreationData&quot; /&gt; instances to append to the existing collection.">기존 컬렉션에 추가할 <see cref="T:System.Diagnostics.CounterCreationData" /> 인스턴스의 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.AddRange(System.Diagnostics.CounterCreationDataCollection)">
      <summary vsli:raw="Adds the specified collection of &lt;see cref=&quot;T:System.Diagnostics.CounterCreationData&quot; /&gt; instances to the collection.">컬렉션에 <see cref="T:System.Diagnostics.CounterCreationData" /> 인스턴스의 지정된 컬렉션을 추가합니다.</summary>
      <param name="value" vsli:raw="A collection of &lt;see cref=&quot;T:System.Diagnostics.CounterCreationData&quot; /&gt; instances to append to the existing collection.">기존 컬렉션에 추가할 <see cref="T:System.Diagnostics.CounterCreationData" /> 인스턴스의 컬렉션입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.Contains(System.Diagnostics.CounterCreationData)">
      <summary vsli:raw="Determines whether a &lt;see cref=&quot;T:System.Diagnostics.CounterCreationData&quot; /&gt; instance exists in the collection.">
        <see cref="T:System.Diagnostics.CounterCreationData" /> 인스턴스가 컬렉션에 있는지 여부를 확인합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.CounterCreationData&quot; /&gt; object to find in the collection.">컬렉션에서 찾을 <see cref="T:System.Diagnostics.CounterCreationData" /> 개체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Diagnostics.CounterCreationData&quot; /&gt; object exists in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 <see cref="T:System.Diagnostics.CounterCreationData" /> 개체가 컬렉션에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.CopyTo(System.Diagnostics.CounterCreationData[],System.Int32)">
      <summary vsli:raw="Copies the elements of the &lt;see cref=&quot;T:System.Diagnostics.CounterCreationData&quot; /&gt; to an array, starting at the specified index of the array.">배열의 지정된 인덱스에서 시작하여 <see cref="T:System.Diagnostics.CounterCreationData" />의 요소를 배열에 복사합니다.</summary>
      <param name="array" vsli:raw="An array of &lt;see cref=&quot;T:System.Diagnostics.CounterCreationData&quot; /&gt; instances to add to the collection.">컬렉션에 추가할 <see cref="T:System.Diagnostics.CounterCreationData" /> 인스턴스의 배열입니다.</param>
      <param name="index" vsli:raw="The location at which to add the new instances.">새 인스턴스를 추가할 위치입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0.">
        <paramref name="index" /> 가 0보다 작습니다.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The number of elements in the &lt;see cref=&quot;T:System.Diagnostics.CounterCreationDataCollection&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination array.">
        <see cref="T:System.Diagnostics.CounterCreationDataCollection" />의 요소 수가 <paramref name="index" />에서 대상 배열 끝까지 사용 가능한 공간보다 큰 경우</exception>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.IndexOf(System.Diagnostics.CounterCreationData)">
      <summary vsli:raw="Returns the index of a &lt;see cref=&quot;T:System.Diagnostics.CounterCreationData&quot; /&gt; object in the collection.">컬렉션에 있는 <see cref="T:System.Diagnostics.CounterCreationData" /> 개체의 인덱스를 반환합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.CounterCreationData&quot; /&gt; object to locate in the collection.">컬렉션에서 찾을 <see cref="T:System.Diagnostics.CounterCreationData" /> 개체입니다.</param>
      <returns vsli:raw="The zero-based index of the specified &lt;see cref=&quot;T:System.Diagnostics.CounterCreationData&quot; /&gt;, if it is found, in the collection; otherwise, -1.">컬렉션에서 개체를 찾은 경우 지정된 <see cref="T:System.Diagnostics.CounterCreationData" />의 인덱스(0부터 시작)이고, 개체를 찾지 못한 경우 -1입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.Insert(System.Int32,System.Diagnostics.CounterCreationData)">
      <summary vsli:raw="Inserts a &lt;see cref=&quot;T:System.Diagnostics.CounterCreationData&quot; /&gt; object into the collection, at the specified index.">컬렉션의 지정된 인덱스에 <see cref="T:System.Diagnostics.CounterCreationData" /> 개체를 삽입합니다.</summary>
      <param name="index" vsli:raw="The zero-based index of the location at which the &lt;see cref=&quot;T:System.Diagnostics.CounterCreationData&quot; /&gt; is to be inserted.">
        <see cref="T:System.Diagnostics.CounterCreationData" />가 삽입될 0부터 시작하는 인덱스입니다.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.CounterCreationData&quot; /&gt; to insert into the collection.">컬렉션에 삽입할 <see cref="T:System.Diagnostics.CounterCreationData" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is not a &lt;see cref=&quot;T:System.Diagnostics.CounterCreationData&quot; /&gt; object.">
        <paramref name="value" />이 <see cref="T:System.Diagnostics.CounterCreationData" /> 개체가 아닙니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is greater than the number of items in the collection.">
        <paramref name="index" /> 가 0보다 작습니다.  
  
또는 
 <paramref name="index" />가 컬렉션의 항목 수보다 큰 경우</exception>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.OnValidate(System.Object)">
      <summary vsli:raw="Checks the specified object to determine whether it is a valid &lt;see cref=&quot;T:System.Diagnostics.CounterCreationData&quot; /&gt; type.">지정된 개체를 검사하여 유효한 <see cref="T:System.Diagnostics.CounterCreationData" /> 형식인지 확인합니다.</summary>
      <param name="value" vsli:raw="The object that will be validated.">유효성을 검사할 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is not a &lt;see cref=&quot;T:System.Diagnostics.CounterCreationData&quot; /&gt; object.">
        <paramref name="value" />이 <see cref="T:System.Diagnostics.CounterCreationData" /> 개체가 아닙니다.</exception>
    </member>
    <member name="M:System.Diagnostics.CounterCreationDataCollection.Remove(System.Diagnostics.CounterCreationData)">
      <summary vsli:raw="Removes a &lt;see cref=&quot;T:System.Diagnostics.CounterCreationData&quot; /&gt; object from the collection.">컬렉션에서 <see cref="T:System.Diagnostics.CounterCreationData" /> 개체를 제거합니다.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.CounterCreationData&quot; /&gt; to remove from the collection.">컬렉션에서 제거할 <see cref="T:System.Diagnostics.CounterCreationData" />입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is not a &lt;see cref=&quot;T:System.Diagnostics.CounterCreationData&quot; /&gt; object.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;value&quot; /&gt; does not exist in the collection.">
        <paramref name="value" />이 <see cref="T:System.Diagnostics.CounterCreationData" /> 개체가 아닙니다.  
  
또는 
 <paramref name="value" />이 컬렉션에 없습니다.</exception>
    </member>
    <member name="P:System.Diagnostics.CounterCreationDataCollection.Item(System.Int32)">
      <summary vsli:raw="Indexes the &lt;see cref=&quot;T:System.Diagnostics.CounterCreationData&quot; /&gt; collection.">
        <see cref="T:System.Diagnostics.CounterCreationData" /> 컬렉션을 인덱싱합니다.</summary>
      <param name="index" vsli:raw="An index into the &lt;see cref=&quot;T:System.Diagnostics.CounterCreationDataCollection&quot; /&gt;.">
        <see cref="T:System.Diagnostics.CounterCreationDataCollection" />의 인덱스입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is equal to or greater than the number of items in the collection.">
        <paramref name="index" /> 가 0보다 작습니다.  
  
또는 
 <paramref name="index" />가 컬렉션의 항목 수보다 크거나 같은 경우</exception>
      <returns vsli:raw="The collection index, which is used to access individual elements of the collection.">컬렉션의 개별 요소에 액세스하는 데 사용되는 컬렉션 인덱스입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.CounterSample">
      <summary vsli:raw="Defines a structure that holds the raw data for a performance counter.">성능 카운터의 원시 데이터를 보유하는 구조체를 정의합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.CounterSample.Empty">
      <summary vsli:raw="Defines an empty, uninitialized performance counter sample of type &lt;see langword=&quot;NumberOfItems32&quot; /&gt;.">
        <see langword="NumberOfItems32" /> 형식의 초기화되지 않은 빈 성능 카운터 샘플을 정의합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.CounterSample.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Diagnostics.PerformanceCounterType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.CounterSample&quot; /&gt; structure and sets the &lt;see cref=&quot;P:System.Diagnostics.CounterSample.CounterTimeStamp&quot; /&gt; property to 0 (zero).">
        <see cref="T:System.Diagnostics.CounterSample" /> 구조체의 새 인스턴스를 초기화하고 <see cref="P:System.Diagnostics.CounterSample.CounterTimeStamp" /> 속성을 0으로 설정합니다.</summary>
      <param name="rawValue" vsli:raw="The numeric value associated with the performance counter sample.">성능 카운터 샘플과 연결된 숫자 값입니다.</param>
      <param name="baseValue" vsli:raw="An optional, base raw value for the counter, to use only if the sample is based on multiple counters.">샘플이 여러 개의 카운터에 기반하는 경우에 사용할 카운터의 선택적인 기본 원시 값입니다.</param>
      <param name="counterFrequency" vsli:raw="The frequency with which the counter is read.">카운터를 읽는 빈도입니다.</param>
      <param name="systemFrequency" vsli:raw="The frequency with which the system reads from the counter.">시스템에서 카운터를 읽는 빈도입니다.</param>
      <param name="timeStamp" vsli:raw="The raw time stamp.">원시 타임스탬프입니다.</param>
      <param name="timeStamp100nSec" vsli:raw="The raw, high-fidelity time stamp.">초정밀 원시 타임스탬프입니다.</param>
      <param name="counterType" vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounterType&quot; /&gt; object that indicates the type of the counter for which this sample is a snapshot.">이 샘플이 스냅샷으로 사용되는 카운터의 형식을 나타내는 <see cref="T:System.Diagnostics.PerformanceCounterType" /> 개체입니다.</param>
    </member>
    <member name="M:System.Diagnostics.CounterSample.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Diagnostics.PerformanceCounterType,System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.CounterSample&quot; /&gt; structure and sets the &lt;see cref=&quot;P:System.Diagnostics.CounterSample.CounterTimeStamp&quot; /&gt; property to the value that is passed in.">
        <see cref="T:System.Diagnostics.CounterSample" /> 구조체의 새 인스턴스를 초기화하고 <see cref="P:System.Diagnostics.CounterSample.CounterTimeStamp" /> 속성을 전달된 값으로 설정합니다.</summary>
      <param name="rawValue" vsli:raw="The numeric value associated with the performance counter sample.">성능 카운터 샘플과 연결된 숫자 값입니다.</param>
      <param name="baseValue" vsli:raw="An optional, base raw value for the counter, to use only if the sample is based on multiple counters.">샘플이 여러 개의 카운터에 기반하는 경우에 사용할 카운터의 선택적인 기본 원시 값입니다.</param>
      <param name="counterFrequency" vsli:raw="The frequency with which the counter is read.">카운터를 읽는 빈도입니다.</param>
      <param name="systemFrequency" vsli:raw="The frequency with which the system reads from the counter.">시스템에서 카운터를 읽는 빈도입니다.</param>
      <param name="timeStamp" vsli:raw="The raw time stamp.">원시 타임스탬프입니다.</param>
      <param name="timeStamp100nSec" vsli:raw="The raw, high-fidelity time stamp.">초정밀 원시 타임스탬프입니다.</param>
      <param name="counterType" vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounterType&quot; /&gt; object that indicates the type of the counter for which this sample is a snapshot.">이 샘플이 스냅샷으로 사용되는 카운터의 형식을 나타내는 <see cref="T:System.Diagnostics.PerformanceCounterType" /> 개체입니다.</param>
      <param name="counterTimeStamp" vsli:raw="The time at which the sample was taken.">샘플을 가져온 시간입니다.</param>
    </member>
    <member name="M:System.Diagnostics.CounterSample.Calculate(System.Diagnostics.CounterSample)">
      <summary vsli:raw="Calculates the performance data of the counter, using a single sample point. This method is generally used for uncalculated performance counter types.">단일 샘플 위치를 사용하여 카운터의 성능 데이터를 계산합니다. 일반적으로 이 메서드는 계산되지 않은 성능 카운터 형식에 사용됩니다.</summary>
      <param name="counterSample" vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.CounterSample&quot; /&gt; structure to use as a base point for calculating performance data.">성능 데이터를 계산하는 기준점으로 사용할 <see cref="T:System.Diagnostics.CounterSample" /> 구조체입니다.</param>
      <returns vsli:raw="The calculated performance value.">계산된 성능 값입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.CounterSample.Calculate(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)">
      <summary vsli:raw="Calculates the performance data of the counter, using two sample points. This method is generally used for calculated performance counter types, such as averages.">샘플 위치 두 개를 사용하여 카운터의 성능 데이터를 계산합니다. 일반적으로 이 메서드는 평균 등의 계산된 성능 카운터 형식에 사용됩니다.</summary>
      <param name="counterSample" vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.CounterSample&quot; /&gt; structure to use as a base point for calculating performance data.">성능 데이터를 계산하는 기준점으로 사용할 <see cref="T:System.Diagnostics.CounterSample" /> 구조체입니다.</param>
      <param name="nextCounterSample" vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.CounterSample&quot; /&gt; structure to use as an ending point for calculating performance data.">성능 데이터를 계산하는 끝점으로 사용할 <see cref="T:System.Diagnostics.CounterSample" /> 구조체입니다.</param>
      <returns vsli:raw="The calculated performance value.">계산된 성능 값입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.CounterSample.Equals(System.Diagnostics.CounterSample)">
      <summary vsli:raw="Indicates whether the specified &lt;see cref=&quot;T:System.Diagnostics.CounterSample&quot; /&gt; structure is equal to the current &lt;see cref=&quot;T:System.Diagnostics.CounterSample&quot; /&gt; structure.">지정된 <see cref="T:System.Diagnostics.CounterSample" /> 구조체가 현재 <see cref="T:System.Diagnostics.CounterSample" /> 구조체와 같은지 여부를 나타냅니다.</summary>
      <param name="sample" vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.CounterSample&quot; /&gt; structure to be compared with this instance.">해당 인스턴스와 비교할 <see cref="T:System.Diagnostics.CounterSample" /> 구조체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;sample&quot; /&gt; is equal to the current instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="sample" />가 현재 인스턴스와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.CounterSample.Equals(System.Object)">
      <summary vsli:raw="Indicates whether the specified structure is a &lt;see cref=&quot;T:System.Diagnostics.CounterSample&quot; /&gt; structure and is identical to the current &lt;see cref=&quot;T:System.Diagnostics.CounterSample&quot; /&gt; structure.">지정된 구조체가 <see cref="T:System.Diagnostics.CounterSample" /> 구조체이고 현재 <see cref="T:System.Diagnostics.CounterSample" /> 구조체와 동일한지 여부를 나타냅니다.</summary>
      <param name="o" vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.CounterSample&quot; /&gt; structure to be compared with the current structure.">현재 구조체와 비교할 <see cref="T:System.Diagnostics.CounterSample" /> 구조체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;o&quot; /&gt; is a &lt;see cref=&quot;T:System.Diagnostics.CounterSample&quot; /&gt; structure and is identical to the current instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="o" />가 <see cref="T:System.Diagnostics.CounterSample" /> 구조체이고 현재 인스턴스와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.CounterSample.GetHashCode">
      <summary vsli:raw="Gets a hash code for the current counter sample.">현재 카운터 샘플의 해시 코드를 가져옵니다.</summary>
      <returns vsli:raw="A hash code for the current counter sample.">현재 카운터 샘플의 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.CounterSample.op_Equality(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)">
      <summary vsli:raw="Returns a value that indicates whether two &lt;see cref=&quot;T:System.Diagnostics.CounterSample&quot; /&gt; structures are equal.">두 <see cref="T:System.Diagnostics.CounterSample" /> 구조체가 같은지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="a" vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.CounterSample&quot; /&gt; structure.">
        <see cref="T:System.Diagnostics.CounterSample" /> 구조체입니다.</param>
      <param name="b" vsli:raw="Another &lt;see cref=&quot;T:System.Diagnostics.CounterSample&quot; /&gt; structure to be compared to the structure specified by the &lt;paramref name=&quot;a&quot; /&gt; parameter.">
        <paramref name="a" /> 매개 변수로 지정한 구조체와 비교할 다른 <see cref="T:System.Diagnostics.CounterSample" /> 구조체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;a&quot; /&gt; and &lt;paramref name=&quot;b&quot; /&gt; are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="a" />과 <paramref name="b" />가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.CounterSample.op_Inequality(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)">
      <summary vsli:raw="Returns a value that indicates whether two &lt;see cref=&quot;T:System.Diagnostics.CounterSample&quot; /&gt; structures are not equal.">두 <see cref="T:System.Diagnostics.CounterSample" /> 구조체가 다른지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="a" vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.CounterSample&quot; /&gt; structure.">
        <see cref="T:System.Diagnostics.CounterSample" /> 구조체입니다.</param>
      <param name="b" vsli:raw="Another &lt;see cref=&quot;T:System.Diagnostics.CounterSample&quot; /&gt; structure to be compared to the structure specified by the &lt;paramref name=&quot;a&quot; /&gt; parameter.">
        <paramref name="a" /> 매개 변수로 지정한 구조체와 비교할 다른 <see cref="T:System.Diagnostics.CounterSample" /> 구조체입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;a&quot; /&gt; and &lt;paramref name=&quot;b&quot; /&gt; are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="a" />와 <paramref name="b" />가 같지 않으면 <see langword="true" />이고 같으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.CounterSample.BaseValue">
      <summary vsli:raw="Gets an optional, base raw value for the counter.">카운터의 선택적인 기본 원시 값을 가져옵니다.</summary>
      <returns vsli:raw="The base raw value, which is used only if the sample is based on multiple counters.">샘플이 여러 개의 카운터에 기반하는 경우에만 사용되는 기본 원시 값입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.CounterSample.CounterFrequency">
      <summary vsli:raw="Gets the raw counter frequency.">원시 카운터 빈도를 가져옵니다.</summary>
      <returns vsli:raw="The frequency with which the counter is read.">카운터를 읽는 빈도입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.CounterSample.CounterTimeStamp">
      <summary vsli:raw="Gets the counter's time stamp.">카운터의 타임스탬프를 가져옵니다.</summary>
      <returns vsli:raw="The time at which the sample was taken.">샘플을 가져온 시간입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.CounterSample.CounterType">
      <summary vsli:raw="Gets the performance counter type.">성능 카운터 형식을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounterType&quot; /&gt; object that indicates the type of the counter for which this sample is a snapshot.">이 샘플이 스냅샷으로 사용되는 카운터의 형식을 나타내는 <see cref="T:System.Diagnostics.PerformanceCounterType" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.CounterSample.RawValue">
      <summary vsli:raw="Gets the raw value of the counter.">카운터의 원시 값을 가져옵니다.</summary>
      <returns vsli:raw="The numeric value that is associated with the performance counter sample.">성능 카운터 샘플과 연결된 숫자 값입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.CounterSample.SystemFrequency">
      <summary vsli:raw="Gets the raw system frequency.">원시 시스템 빈도를 가져옵니다.</summary>
      <returns vsli:raw="The frequency with which the system reads from the counter.">시스템에서 카운터를 읽는 빈도입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.CounterSample.TimeStamp">
      <summary vsli:raw="Gets the raw time stamp.">원시 타임스탬프를 가져옵니다.</summary>
      <returns vsli:raw="The system time stamp.">시스템 타임스탬프입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.CounterSample.TimeStamp100nSec">
      <summary vsli:raw="Gets the raw, high-fidelity time stamp.">초정밀 원시 타임스탬프를 가져옵니다.</summary>
      <returns vsli:raw="The system time stamp, represented within 0.1 millisecond.">0.1밀리초 내에서 표현되는 시스템 타임스탬프입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.CounterSampleCalculator">
      <summary vsli:raw="Provides a set of utility functions for interpreting performance counter data.">성능 카운터 데이터를 해석하는 유틸리티 함수 집합을 제공합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(System.Diagnostics.CounterSample)">
      <summary vsli:raw="Computes the calculated value of a single raw counter sample.">원시 카운터 샘플 하나의 계산된 값을 구합니다.</summary>
      <param name="newSample" vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.CounterSample&quot; /&gt; that indicates the most recent sample the system has taken.">시스템이 가장 최근에 가져온 샘플을 나타내는 <see cref="T:System.Diagnostics.CounterSample" /> 입니다.</param>
      <returns vsli:raw="A floating-point representation of the performance counter's calculated value.">성능 카운터 계산값의 부동 소수점 표현입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)">
      <summary vsli:raw="Computes the calculated value of two raw counter samples.">원시 카운터 샘플 두 개의 계산된 값을 구합니다.</summary>
      <param name="oldSample" vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.CounterSample&quot; /&gt; that indicates a previous sample the system has taken.">시스템이 이전에 가져온 샘플을 나타내는 <see cref="T:System.Diagnostics.CounterSample" /> 입니다.</param>
      <param name="newSample" vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.CounterSample&quot; /&gt; that indicates the most recent sample the system has taken.">시스템이 가장 최근에 가져온 샘플을 나타내는 <see cref="T:System.Diagnostics.CounterSample" /> 입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;oldSample&quot; /&gt; uses a counter type that is different from &lt;paramref name=&quot;newSample&quot; /&gt;.">
        <paramref name="oldSample" />이 <paramref name="newSample" />과 다른 카운터 형식을 사용하는 경우</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="&lt;paramref name=&quot;newSample&quot; /&gt; counter type has a Performance Data Helper (PDH) error. For more information, see &quot;Checking PDH Interface Return Values&quot; in the Win32 and COM Development section of this documentation.">
        <paramref name="newSample" /> 카운터 형식에 PDH(성능 데이터 도우미) 오류가 있는 경우. 자세한 내용은 이 설명서의 Win32 및 COM 개발 단원에서 "PDH 인터페이스 반환 값 확인"을 참조하십시오.</exception>
      <returns vsli:raw="A floating-point representation of the performance counter's calculated value.">성능 카운터 계산값의 부동 소수점 표현입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.ICollectData">
      <summary vsli:raw="Prepares performance data for the performance DLL the system loads when working with performance counters.">성능 카운터를 사용하여 작업할 때 시스템이 로드하는 성능 DLL에 대한 성능 데이터를 준비합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.ICollectData.CloseData">
      <summary vsli:raw="Called by the performance DLL's close performance data function.">성능 DLL의 성능 데이터 닫기 함수에 의해 호출됩니다.</summary>
    </member>
    <member name="M:System.Diagnostics.ICollectData.CollectData(System.Int32,System.IntPtr,System.IntPtr,System.Int32,System.IntPtr@)">
      <summary vsli:raw="Collects the performance data for the performance DLL.">성능 DLL에 대한 성능 데이터를 수집합니다.</summary>
      <param name="id" vsli:raw="The call index.">호출 인덱스입니다.</param>
      <param name="valueName" vsli:raw="A pointer to a Unicode string list with the requested object identifiers.">요청된 개체 식별자가 포함된 유니코드 문자열 목록에 대한 포인터입니다.</param>
      <param name="data" vsli:raw="A pointer to the data buffer.">데이터 버퍼에 대한 포인터입니다.</param>
      <param name="totalBytes" vsli:raw="A pointer to a number of bytes.">바이트 수에 대한 포인터입니다.</param>
      <param name="res" vsli:raw="When this method returns, contains a &lt;see cref=&quot;T:System.IntPtr&quot; /&gt; to the first byte after the data, -1 for an error, or -2 if a larger buffer is required. This parameter is passed uninitialized.">이 메서드는 반환될 때 데이터 뒤의 첫 번째 바이트에 대한 <see cref="T:System.IntPtr" />를 포함하고, 오류가 발생한 경우 -1, 더 큰 버퍼가 필요한 경우에는 -2를 포함합니다. 이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</param>
    </member>
    <member name="T:System.Diagnostics.InstanceData">
      <summary vsli:raw="Holds instance data associated with a performance counter sample.">성능 카운터 샘플과 관련된 인스턴스 데이터를 보유합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.InstanceData.#ctor(System.String,System.Diagnostics.CounterSample)">
      <summary vsli:raw="Initializes a new instance of the InstanceData class, using the specified sample and performance counter instance.">지정 샘플과 성능 카운터 인스턴스를 이용해 새 InstanceData 클래스 인스턴스를 초기화합니다.</summary>
      <param name="instanceName" vsli:raw="The name of an instance associated with the performance counter.">성능 카운터와 관련된 인스턴스 이름입니다.</param>
      <param name="sample" vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.CounterSample&quot; /&gt; taken from the instance specified by the &lt;paramref name=&quot;instanceName&quot; /&gt; parameter.">
        <paramref name="instanceName" /> 매개 변수가 지정한 인스턴스에서 가져온 <see cref="T:System.Diagnostics.CounterSample" /> 입니다.</param>
    </member>
    <member name="P:System.Diagnostics.InstanceData.InstanceName">
      <summary vsli:raw="Gets the instance name associated with this instance data.">이러한 인스턴스 데이터와 관련된 인스턴스 이름을 가져옵니다.</summary>
      <returns vsli:raw="The name of an instance associated with the performance counter.">성능 카운터와 관련된 인스턴스 이름입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.InstanceData.RawValue">
      <summary vsli:raw="Gets the raw data value associated with the performance counter sample.">성능 카운터 샘플과 관련된 원시 데이터 값을 가져옵니다.</summary>
      <returns vsli:raw="The raw value read by the performance counter sample associated with the &lt;see cref=&quot;P:System.Diagnostics.InstanceData.Sample&quot; /&gt; property.">
        <see cref="P:System.Diagnostics.InstanceData.Sample" /> 속성과 관련된 성능 카운터 샘플이 읽은 원시 값입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.InstanceData.Sample">
      <summary vsli:raw="Gets the performance counter sample that generated this data.">이 데이터를 생성한 성능 카운터 샘플을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.CounterSample&quot; /&gt; taken from the instance specified by the &lt;see cref=&quot;P:System.Diagnostics.InstanceData.InstanceName&quot; /&gt; property.">
        <see cref="T:System.Diagnostics.CounterSample" /> 속성이 지정한 인스턴스에서 가져온 <see cref="P:System.Diagnostics.InstanceData.InstanceName" /> 입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.InstanceDataCollection">
      <summary vsli:raw="Provides a strongly typed collection of &lt;see cref=&quot;T:System.Diagnostics.InstanceData&quot; /&gt; objects.">
        <see cref="T:System.Diagnostics.InstanceData" /> 개체의 강력한 형식의 컬렉션을 제공합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.InstanceDataCollection.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.InstanceDataCollection&quot; /&gt; class, using the specified performance counter (which defines a performance instance).">성능 인스턴스를 정의하는 지정된 성능 카운터를 사용하여 <see cref="T:System.Diagnostics.InstanceDataCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="counterName" vsli:raw="The name of the counter, which often describes the quantity that is being counted.">자주 계산하고 있는 수량을 설명하는 카운터의 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;counterName&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="counterName" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Diagnostics.InstanceDataCollection.Contains(System.String)">
      <summary vsli:raw="Determines whether a performance instance with a specified name (identified by one of the indexed &lt;see cref=&quot;T:System.Diagnostics.InstanceData&quot; /&gt; objects) exists in the collection.">인덱싱된 <see cref="T:System.Diagnostics.InstanceData" /> 개체 중 하나로 식별되는 지정된 이름의 성능 인스턴스가 해당 컬렉션에 존재하는지 여부를 확인합니다.</summary>
      <param name="instanceName" vsli:raw="The name of the instance to find in this collection.">이 컬렉션에서 찾을 인스턴스의 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;instanceName&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instanceName" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instance exists in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">해당 인스턴스가 컬렉션에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.InstanceDataCollection.CopyTo(System.Diagnostics.InstanceData[],System.Int32)">
      <summary vsli:raw="Copies the items in the collection to the specified one-dimensional array at the specified index.">컬렉션의 항목을 지정된 1차원 배열의 지정된 인덱스에 복사합니다.</summary>
      <param name="instances" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the values copied from the collection.">컬렉션에서 복사된 값의 대상인 1차원 <see cref="T:System.Array" />입니다.</param>
      <param name="index" vsli:raw="The zero-based index value at which to add the new instances.">새 인스턴스를 추가할 인덱스 값(0부터 시작)입니다.</param>
    </member>
    <member name="P:System.Diagnostics.InstanceDataCollection.CounterName">
      <summary vsli:raw="Gets the name of the performance counter whose instance data you want to get.">해당 인스턴스 데이터가 들어 있는 성능 카운터의 이름을 가져옵니다.</summary>
      <returns vsli:raw="The performance counter name.">성능 카운터의 이름입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.InstanceDataCollection.Item(System.String)">
      <summary vsli:raw="Gets the instance data associated with this counter. This is typically a set of raw counter values.">이 카운터와 관련된 인스턴스 데이터를 가져옵니다. 이 데이터는 일반적으로 원시 카운터 값의 집합입니다.</summary>
      <param name="instanceName" vsli:raw="The name of the performance counter category instance, or an empty string (&quot;&quot;) if the category contains a single instance.">성능 카운터 범주 인스턴스의 이름이거나, 범주에 단일 인스턴스가 포함된 경우 빈 문자열("")입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;instanceName&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instanceName" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Diagnostics.InstanceData&quot; /&gt; item, by which the &lt;see cref=&quot;T:System.Diagnostics.InstanceDataCollection&quot; /&gt; object is indexed.">
        <see cref="T:System.Diagnostics.InstanceData" /> 개체가 인덱싱될 때 기준이 되는 <see cref="T:System.Diagnostics.InstanceDataCollection" /> 항목입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.InstanceDataCollection.Keys">
      <summary vsli:raw="Gets the object and counter registry keys for the objects associated with this instance data.">이 인스턴스 데이터와 관련된 개체 및 개체의 카운터 레지스트리 키를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that represents a set of object-specific registry keys.">개체별 레지스트리 키 집합을 나타내는 <see cref="T:System.Collections.ICollection" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.InstanceDataCollection.Values">
      <summary vsli:raw="Gets the raw counter values that comprise the instance data for the counter.">카운터의 인스턴스 데이터를 구성하는 원시 카운터 값을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that represents the counter's raw data values.">카운터의 원시 데이터 값을 나타내는 <see cref="T:System.Collections.ICollection" />입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.InstanceDataCollectionCollection">
      <summary vsli:raw="Provides a strongly typed collection of &lt;see cref=&quot;T:System.Diagnostics.InstanceDataCollection&quot; /&gt; objects.">
        <see cref="T:System.Diagnostics.InstanceDataCollection" /> 개체의 강력한 형식의 컬렉션을 제공합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.InstanceDataCollectionCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.InstanceDataCollectionCollection&quot; /&gt; class.">
        <see cref="T:System.Diagnostics.InstanceDataCollectionCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.InstanceDataCollectionCollection.Contains(System.String)">
      <summary vsli:raw="Determines whether an instance data collection for the specified counter (identified by one of the indexed &lt;see cref=&quot;T:System.Diagnostics.InstanceDataCollection&quot; /&gt; objects) exists in the collection.">인덱싱된 <see cref="T:System.Diagnostics.InstanceDataCollection" /> 개체 중 하나로 식별되는 지정된 카운터의 인스턴스 데이터 컬렉션이 해당 컬렉션에 존재하는지 여부를 확인합니다.</summary>
      <param name="counterName" vsli:raw="The name of the performance counter.">성능 카운터의 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;counterName&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="counterName" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an instance data collection containing the specified counter exists in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">지정된 카운터를 포함하는 인스턴스 데이터 컬렉션이 해당 컬렉션에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.InstanceDataCollectionCollection.CopyTo(System.Diagnostics.InstanceDataCollection[],System.Int32)">
      <summary vsli:raw="Copies an array of &lt;see cref=&quot;T:System.Diagnostics.InstanceDataCollection&quot; /&gt; instances to the collection, at the specified index.">컬렉션의 지정된 인덱스에 <see cref="T:System.Diagnostics.InstanceDataCollection" /> 인스턴스의 배열을 복사합니다.</summary>
      <param name="counters" vsli:raw="An array of &lt;see cref=&quot;T:System.Diagnostics.InstanceDataCollection&quot; /&gt; instances (identified by the counters they contain) to add to the collection.">포함된 카운터로 식별되는, 컬렉션에 추가할 <see cref="T:System.Diagnostics.InstanceDataCollection" /> 인스턴스의 배열입니다.</param>
      <param name="index" vsli:raw="The location at which to add the new instances.">새 인스턴스를 추가할 위치입니다.</param>
    </member>
    <member name="P:System.Diagnostics.InstanceDataCollectionCollection.Item(System.String)">
      <summary vsli:raw="Gets the instance data for the specified counter.">지정한 카운터의 인스턴스 데이터를 가져옵니다.</summary>
      <param name="counterName" vsli:raw="The name of the performance counter.">성능 카운터의 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;counterName&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="counterName" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Diagnostics.InstanceDataCollection&quot; /&gt; item, by which the &lt;see cref=&quot;T:System.Diagnostics.InstanceDataCollectionCollection&quot; /&gt; object is indexed.">
        <see cref="T:System.Diagnostics.InstanceDataCollection" /> 개체가 인덱싱될 때 기준이 되는 <see cref="T:System.Diagnostics.InstanceDataCollectionCollection" /> 항목입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.InstanceDataCollectionCollection.Keys">
      <summary vsli:raw="Gets the object and counter registry keys for the objects associated with this instance data collection.">해당 개체 및 이 인스턴스 데이터 컬렉션과 관련된 개체의 카운터 레지스트리 키를 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that represents a set of object-specific registry keys.">개체별 레지스트리 키 집합을 나타내는 <see cref="T:System.Collections.ICollection" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.InstanceDataCollectionCollection.Values">
      <summary vsli:raw="Gets the instance data values that comprise the collection of instances for the counter.">카운터의 인스턴스 컬렉션을 구성하는 인스턴스 데이터 값을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that represents the counter's instances and their associated data values.">카운터의 인스턴스 및 관련된 데이터 값을 나타내는 <see cref="T:System.Collections.ICollection" />입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounter">
      <summary vsli:raw="Represents a Windows NT performance counter component.">Windows NT 성능 카운터 구성 요소를 나타냅니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounter.DefaultFileMappingSize">
      <summary vsli:raw="Specifies the size, in bytes, of the global memory shared by performance counters. The default size is 524,288 bytes.">성능 카운터에서 공유하는 전역 메모리의 크기(바이트)를 지정합니다. 기본 크기는 524,288바이트입니다.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.#ctor">
      <summary vsli:raw="Initializes a new, read-only instance of the &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounter&quot; /&gt; class, without associating the instance with any system or custom performance counter.">
        <see cref="T:System.Diagnostics.PerformanceCounter" /> 클래스의 새 읽기 전용 인스턴스를 초기화하면서 이 인스턴스를 시스템이나 사용자 지정 성능 카운터와 연결하지 않습니다.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new, read-only instance of the &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounter&quot; /&gt; class and associates it with the specified system or custom performance counter on the local computer. This constructor requires that the category have a single instance.">
        <see cref="T:System.Diagnostics.PerformanceCounter" /> 클래스의 새 읽기 전용 인스턴스를 초기화하고 로컬 컴퓨터의 지정 시스템이나 사용자 지정 성능 카운터에 연결합니다. 이 생성자를 사용하려면 범주에 단일 인스턴스가 있어야 합니다.</summary>
      <param name="categoryName" vsli:raw="The name of the performance counter category (performance object) with which this performance counter is associated.">이 성능 카운터와 연결된 성능 카운터 범주(성능 개체)의 이름입니다.</param>
      <param name="counterName" vsli:raw="The name of the performance counter.">성능 카운터의 이름입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;categoryName&quot; /&gt; is an empty string (&quot;&quot;).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;counterName&quot; /&gt; is an empty string (&quot;&quot;).  &#xA;  &#xA; -or-  &#xA;  &#xA; The category specified does not exist.  &#xA;  &#xA; -or-  &#xA;  &#xA; The category specified is marked as multi-instance and requires the performance counter to be created with an instance name.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;categoryName&quot; /&gt; and &lt;paramref name=&quot;counterName&quot; /&gt; have been localized into different languages.">
        <paramref name="categoryName" />가 빈 문자열("")인 경우  
  
또는 
 <paramref name="counterName" />가 빈 문자열("")인 경우  
  
또는 
지정한 범주가 없는 경우  
  
또는 
지정된 범주가 다중 인스턴스로 표시되어 있으며 인스턴스 이름을 사용하여 성능 카운터를 만들어야 합니다.  
  
또는 
 <paramref name="categoryName" />과 <paramref name="counterName" />이 서로 다른 언어로 지역화된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;categoryName&quot; /&gt; or &lt;paramref name=&quot;counterName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="categoryName" /> 또는 <paramref name="counterName" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="An error occurred when accessing a system API.">시스템 API에 액세스할 때 오류가 발생했습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="Code that is executing without administrative privileges attempted to read a performance counter.">관리자 권한 없이 실행되는 코드가 성능 카운터를 읽으려고 한 경우</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.Boolean)">
      <summary vsli:raw="Initializes a new, read-only or read/write instance of the &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounter&quot; /&gt; class and associates it with the specified system or custom performance counter on the local computer. This constructor requires that the category contain a single instance.">
        <see cref="T:System.Diagnostics.PerformanceCounter" /> 클래스의 새 읽기 전용 인스턴스 또는 읽기/쓰기 인스턴스를 초기화하여 로컬 컴퓨터의 지정 시스템이나 사용자 지정 성능 카운터에 연결합니다. 이 생성자를 사용하려면 범주에 단일 인스턴스가 있어야 합니다.</summary>
      <param name="categoryName" vsli:raw="The name of the performance counter category (performance object) with which this performance counter is associated.">이 성능 카운터와 연결된 성능 카운터 범주(성능 개체)의 이름입니다.</param>
      <param name="counterName" vsli:raw="The name of the performance counter.">성능 카운터의 이름입니다.</param>
      <param name="readOnly" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to access the counter in read-only mode (although the counter itself could be read/write); &lt;see langword=&quot;false&quot; /&gt; to access the counter in read/write mode.">카운터 자체는 읽기/쓰기가 가능할 수도 있지만 읽기 전용 모드로 카운터에 액세스하려면 <see langword="true" />이고, 읽기/쓰기 모드로 카운터에 액세스하려면 <see langword="false" />입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;categoryName&quot; /&gt; is an empty string (&quot;&quot;).  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;counterName&quot; /&gt; is an empty string (&quot;&quot;).  &#xA;  &#xA; -or-  &#xA;  &#xA; The category specified does not exist. (if &lt;paramref name=&quot;readOnly&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;).  &#xA;  &#xA; -or-  &#xA;  &#xA; The category specified is not a .NET Framework custom category (if &lt;paramref name=&quot;readOnly&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;).  &#xA;  &#xA; -or-  &#xA;  &#xA; The category specified is marked as multi-instance and requires the performance counter to be created with an instance name.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;categoryName&quot; /&gt; and &lt;paramref name=&quot;counterName&quot; /&gt; have been localized into different languages.">
        <paramref name="categoryName" />이 빈 문자열("")인 경우  
  
또는 
<paramref name="counterName" />이 빈 문자열("")인 경우  
  
또는 
지정한 범주가 없는 경우 (<paramref name="readOnly" />가 <see langword="true" />인 경우)  
  
또는 
지정한 범주가 .NET Framework 사용자 지정 범주가 아닌 경우(<paramref name="readOnly" />가 <see langword="false" />인 경우)  
  
또는 
지정된 범주가 다중 인스턴스로 표시되어 있으며 인스턴스 이름을 사용하여 성능 카운터를 만들어야 합니다.  
  
또는 
 <paramref name="categoryName" />과 <paramref name="counterName" />이 서로 다른 언어로 지역화된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;categoryName&quot; /&gt; or &lt;paramref name=&quot;counterName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="categoryName" /> 또는 <paramref name="counterName" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="An error occurred when accessing a system API.">시스템 API에 액세스할 때 오류가 발생했습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="Code that is executing without administrative privileges attempted to read a performance counter.">관리자 권한 없이 실행되는 코드가 성능 카운터를 읽으려고 한 경우</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new, read-only instance of the &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounter&quot; /&gt; class and associates it with the specified system or custom performance counter and category instance on the local computer.">
        <see cref="T:System.Diagnostics.PerformanceCounter" /> 클래스의 새 읽기 전용 인스턴스를 초기화하여 로컬 컴퓨터의 지정 시스템이나 사용자 지정 성능 카운터 및 범주 인스턴스에 연결합니다.</summary>
      <param name="categoryName" vsli:raw="The name of the performance counter category (performance object) with which this performance counter is associated.">이 성능 카운터와 연결된 성능 카운터 범주(성능 개체)의 이름입니다.</param>
      <param name="counterName" vsli:raw="The name of the performance counter.">성능 카운터의 이름입니다.</param>
      <param name="instanceName" vsli:raw="The name of the performance counter category instance, or an empty string (&quot;&quot;), if the category contains a single instance.">성능 카운터 범주 인스턴스의 이름입니다. 범주에 단일 인스턴스가 포함된 경우에는 빈 문자열("") 입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;categoryName&quot; /&gt; is an empty string (&quot;&quot;).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;counterName&quot; /&gt; is an empty string (&quot;&quot;).  &#xA;  &#xA; -or-  &#xA;  &#xA; The category specified is not valid.  &#xA;  &#xA; -or-  &#xA;  &#xA; The category specified is marked as multi-instance and requires the performance counter to be created with an instance name.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;instanceName&quot; /&gt; is longer than 127 characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;categoryName&quot; /&gt; and &lt;paramref name=&quot;counterName&quot; /&gt; have been localized into different languages.">
        <paramref name="categoryName" />가 빈 문자열("")인 경우  
  
또는 
 <paramref name="counterName" />가 빈 문자열("")인 경우  
  
또는 
지정한 범주가 잘못된 경우  
  
또는 
지정된 범주가 다중 인스턴스로 표시되어 있으며 인스턴스 이름을 사용하여 성능 카운터를 만들어야 합니다.  
  
또는 
 <paramref name="instanceName" />이 127자보다 긴 경우  
  
또는 
 <paramref name="categoryName" />과 <paramref name="counterName" />이 서로 다른 언어로 지역화된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;categoryName&quot; /&gt; or &lt;paramref name=&quot;counterName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="categoryName" /> 또는 <paramref name="counterName" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="An error occurred when accessing a system API.">시스템 API에 액세스할 때 오류가 발생했습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="Code that is executing without administrative privileges attempted to read a performance counter.">관리자 권한 없이 실행되는 코드가 성능 카운터를 읽으려고 한 경우</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.Boolean)">
      <summary vsli:raw="Initializes a new, read-only or read/write instance of the &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounter&quot; /&gt; class and associates it with the specified system or custom performance counter and category instance on the local computer.">
        <see cref="T:System.Diagnostics.PerformanceCounter" /> 클래스의 새 읽기 전용 또는 읽기/쓰기 인스턴스를 초기화하여 로컬 컴퓨터의 지정 시스템이나 사용자 지정 성능 카운터 및 범주 인스턴스에 연결합니다.</summary>
      <param name="categoryName" vsli:raw="The name of the performance counter category (performance object) with which this performance counter is associated.">이 성능 카운터와 연결된 성능 카운터 범주(성능 개체)의 이름입니다.</param>
      <param name="counterName" vsli:raw="The name of the performance counter.">성능 카운터의 이름입니다.</param>
      <param name="instanceName" vsli:raw="The name of the performance counter category instance, or an empty string (&quot;&quot;), if the category contains a single instance.">성능 카운터 범주 인스턴스의 이름입니다. 범주에 단일 인스턴스가 포함된 경우에는 빈 문자열("") 입니다.</param>
      <param name="readOnly" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to access a counter in read-only mode; &lt;see langword=&quot;false&quot; /&gt; to access a counter in read/write mode.">읽기 전용 모드로 카운터에 액세스하려면 <see langword="true" />이고, 읽기/쓰기 모드로 카운터에 액세스하려면 <see langword="false" />입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;categoryName&quot; /&gt; is an empty string (&quot;&quot;).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;counterName&quot; /&gt; is an empty string (&quot;&quot;).  &#xA;  &#xA; -or-  &#xA;  &#xA; The read/write permission setting requested is invalid for this counter.  &#xA;  &#xA; -or-  &#xA;  &#xA; The category specified does not exist (if &lt;paramref name=&quot;readOnly&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;).  &#xA;  &#xA; -or-  &#xA;  &#xA; The category specified is not a .NET Framework custom category (if &lt;paramref name=&quot;readOnly&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;).  &#xA;  &#xA; -or-  &#xA;  &#xA; The category specified is marked as multi-instance and requires the performance counter to be created with an instance name.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;instanceName&quot; /&gt; is longer than 127 characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;categoryName&quot; /&gt; and &lt;paramref name=&quot;counterName&quot; /&gt; have been localized into different languages.">
        <paramref name="categoryName" />가 빈 문자열("")인 경우  
  
또는 
 <paramref name="counterName" />가 빈 문자열("")인 경우  
  
또는 
요청된 읽기/쓰기 권한 설정이 이 카운터에 대해 유효하지 않습니다.  
  
또는 
지정한 범주가 없는 경우(<paramref name="readOnly" />가 <see langword="true" />인 경우)  
  
또는 
지정한 범주가 .NET Framework 사용자 지정 범주가 아닌 경우(<paramref name="readOnly" />가 <see langword="false" />인 경우)  
  
또는 
지정된 범주가 다중 인스턴스로 표시되어 있으며 인스턴스 이름을 사용하여 성능 카운터를 만들어야 합니다.  
  
또는 
 <paramref name="instanceName" />이 127자보다 긴 경우  
  
또는 
 <paramref name="categoryName" />과 <paramref name="counterName" />이 서로 다른 언어로 지역화된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;categoryName&quot; /&gt; or &lt;paramref name=&quot;counterName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="categoryName" /> 또는 <paramref name="counterName" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="An error occurred when accessing a system API.">시스템 API에 액세스할 때 오류가 발생했습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="Code that is executing without administrative privileges attempted to read a performance counter.">관리자 권한 없이 실행되는 코드가 성능 카운터를 읽으려고 한 경우</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new, read-only instance of the &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounter&quot; /&gt; class and associates it with the specified system or custom performance counter and category instance, on the specified computer.">
        <see cref="T:System.Diagnostics.PerformanceCounter" /> 클래스의 새 읽기 전용 인스턴스를 초기화하여 특정 컴퓨터의 지정 시스템이나 사용자 지정 성능 카운터 및 범주 인스턴스에 연결합니다.</summary>
      <param name="categoryName" vsli:raw="The name of the performance counter category (performance object) with which this performance counter is associated.">이 성능 카운터와 연결된 성능 카운터 범주(성능 개체)의 이름입니다.</param>
      <param name="counterName" vsli:raw="The name of the performance counter.">성능 카운터의 이름입니다.</param>
      <param name="instanceName" vsli:raw="The name of the performance counter category instance, or an empty string (&quot;&quot;), if the category contains a single instance.">성능 카운터 범주 인스턴스의 이름입니다. 범주에 단일 인스턴스가 포함된 경우에는 빈 문자열("") 입니다.</param>
      <param name="machineName" vsli:raw="The computer on which the performance counter and its associated category exist.">성능 카운터 및 관련 범주가 있는 컴퓨터입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;categoryName&quot; /&gt; is an empty string (&quot;&quot;).  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;counterName&quot; /&gt; is an empty string (&quot;&quot;).  &#xA;  &#xA; -or-  &#xA;  &#xA; The read/write permission setting requested is invalid for this counter.  &#xA;  &#xA; -or-  &#xA;  &#xA; The counter does not exist on the specified computer.  &#xA;  &#xA; -or-  &#xA;  &#xA; The category specified is marked as multi-instance and requires the performance counter to be created with an instance name.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;instanceName&quot; /&gt; is longer than 127 characters.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;categoryName&quot; /&gt; and &lt;paramref name=&quot;counterName&quot; /&gt; have been localized into different languages.">
        <paramref name="categoryName" />가 빈 문자열("")인 경우  
  
또는 
 <paramref name="counterName" />가 빈 문자열("")인 경우  
  
또는 
요청된 읽기/쓰기 권한 설정이 이 카운터에 대해 유효하지 않습니다.  
  
또는 
지정한 컴퓨터에 카운터가 없는 경우  
  
또는 
지정된 범주가 다중 인스턴스로 표시되어 있으며 인스턴스 이름을 사용하여 성능 카운터를 만들어야 합니다.  
  
또는 
 <paramref name="instanceName" />이 127자보다 긴 경우  
  
또는 
 <paramref name="categoryName" />과 <paramref name="counterName" />이 서로 다른 언어로 지역화된 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;machineName&quot; /&gt; parameter is not valid.">
        <paramref name="machineName" /> 매개 변수가 잘못된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;categoryName&quot; /&gt; or &lt;paramref name=&quot;counterName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="categoryName" /> 또는 <paramref name="counterName" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="An error occurred when accessing a system API.">시스템 API에 액세스할 때 오류가 발생했습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="Code that is executing without administrative privileges attempted to read a performance counter.">관리자 권한 없이 실행되는 코드가 성능 카운터를 읽으려고 한 경우</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.BeginInit">
      <summary vsli:raw="Begins the initialization of a &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounter&quot; /&gt; instance used on a form or by another component. The initialization occurs at runtime.">폼 또는 다른 구성 요소에서 사용하는 <see cref="T:System.Diagnostics.PerformanceCounter" /> 인스턴스의 초기화를 시작합니다. 초기화는 런타임에 발생합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.Close">
      <summary vsli:raw="Closes the performance counter and frees all the resources allocated by this performance counter instance.">성능 카운터를 닫고 이 성능 카운터 인스턴스가 할당한 모든 리소스를 해제합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.CloseSharedResources">
      <summary vsli:raw="Frees the performance counter library shared state allocated by the counters.">카운터에서 할당한 성능 카운터 라이브러리의 공유 상태를 해제합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.Decrement">
      <summary vsli:raw="Decrements the associated performance counter by one through an efficient atomic operation.">효율적인 원자 단위 연산을 통해 관련 성능 카운터를 1씩 감소시킵니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The counter is read-only, so the application cannot decrement it.  &#xA;  &#xA; -or-  &#xA;  &#xA; The instance is not correctly associated with a performance counter.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.Diagnostics.PerformanceCounter.InstanceLifetime&quot; /&gt; property is set to &lt;see cref=&quot;F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process&quot; /&gt; when using global shared memory.">카운터는 읽기 전용이므로 애플리케이션에서 카운터를 감소시킬 수 없는 경우  
  
또는 
인스턴스가 성능 카운터와 제대로 연결되어 있지 않은 경우  
  
또는 
전역 공유 메모리를 사용할 때 <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> 속성이 <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" />로 설정되어 있습니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="An error occurred when accessing a system API.">시스템 API에 액세스할 때 오류가 발생했습니다.</exception>
      <returns vsli:raw="The decremented counter value.">감소된 카운터 값입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.EndInit">
      <summary vsli:raw="Ends the initialization of a &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounter&quot; /&gt; instance that is used on a form or by another component. The initialization occurs at runtime.">폼 또는 다른 구성 요소에서 사용하는 <see cref="T:System.Diagnostics.PerformanceCounter" /> 인스턴스의 초기화를 끝냅니다. 초기화는 런타임에 발생합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.Increment">
      <summary vsli:raw="Increments the associated performance counter by one through an efficient atomic operation.">효율적인 원자 단위 연산을 통해 관련 성능 카운터를 1씩 증가시킵니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The counter is read-only, so the application cannot increment it.  &#xA;  &#xA; -or-  &#xA;  &#xA; The instance is not correctly associated with a performance counter.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.Diagnostics.PerformanceCounter.InstanceLifetime&quot; /&gt; property is set to &lt;see cref=&quot;F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process&quot; /&gt; when using global shared memory.">카운터는 읽기 전용이므로 애플리케이션에서 카운터를 증가시킬 수 없는 경우  
  
또는 
인스턴스가 성능 카운터와 제대로 연결되어 있지 않은 경우  
  
또는 
전역 공유 메모리를 사용할 때 <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> 속성이 <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" />로 설정되어 있습니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="An error occurred when accessing a system API.">시스템 API에 액세스할 때 오류가 발생했습니다.</exception>
      <returns vsli:raw="The incremented counter value.">증가된 카운터 값입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.IncrementBy(System.Int64)">
      <summary vsli:raw="Increments or decrements the value of the associated performance counter by a specified amount through an efficient atomic operation.">효율적인 원자 단위 연산을 통해 관련 성능 카운터의 값을 지정한 양 만큼 증가 또는 감소시킵니다.</summary>
      <param name="value" vsli:raw="The value to increment by. (A negative value decrements the counter.)">증분 값입니다. (음수 값은 카운터를 감소시킵니다.)</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The counter is read-only, so the application cannot increment it.  &#xA;  &#xA; -or-  &#xA;  &#xA; The instance is not correctly associated with a performance counter.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.Diagnostics.PerformanceCounter.InstanceLifetime&quot; /&gt; property is set to &lt;see cref=&quot;F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process&quot; /&gt; when using global shared memory.">카운터는 읽기 전용이므로 애플리케이션에서 카운터를 증가시킬 수 없는 경우  
  
또는 
인스턴스가 성능 카운터와 제대로 연결되어 있지 않은 경우  
  
또는 
전역 공유 메모리를 사용할 때 <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> 속성이 <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" />로 설정되어 있습니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="An error occurred when accessing a system API.">시스템 API에 액세스할 때 오류가 발생했습니다.</exception>
      <returns vsli:raw="The new counter value.">새 카운터 값입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.NextSample">
      <summary vsli:raw="Obtains a counter sample, and returns the raw, or uncalculated, value for it.">카운터 샘플을 가져와서 이에 대한 원시 값 또는 계산되지 않은 값을 반환합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The instance is not correctly associated with a performance counter.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.Diagnostics.PerformanceCounter.InstanceLifetime&quot; /&gt; property is set to &lt;see cref=&quot;F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process&quot; /&gt; when using global shared memory.">인스턴스가 성능 카운터와 제대로 연결되어 있지 않은 경우  
  
또는 
전역 공유 메모리를 사용할 때 <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> 속성이 <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" />로 설정되어 있습니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="An error occurred when accessing a system API.">시스템 API에 액세스할 때 오류가 발생했습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="Code that is executing without administrative privileges attempted to read a performance counter.">관리자 권한 없이 실행되는 코드가 성능 카운터를 읽으려고 한 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.CounterSample&quot; /&gt; that represents the next raw value that the system obtains for this counter.">이 카운터에 대해 시스템이 다음에 가져오는 원시 값을 나타내는 <see cref="T:System.Diagnostics.CounterSample" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.NextValue">
      <summary vsli:raw="Obtains a counter sample and returns the calculated value for it.">카운터 샘플을 가져와 계산된 값을 반환합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The instance is not correctly associated with a performance counter.">인스턴스가 성능 카운터와 제대로 연결되어 있지 않은 경우</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="An error occurred when accessing a system API.">시스템 API에 액세스할 때 오류가 발생했습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="Code that is executing without administrative privileges attempted to read a performance counter.">관리자 권한 없이 실행되는 코드가 성능 카운터를 읽으려고 한 경우</exception>
      <returns vsli:raw="The next calculated value that the system obtains for this counter.">이 카운터에 대해 시스템이 다음에 가져오는 계산된 값입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounter.RemoveInstance">
      <summary vsli:raw="Deletes the category instance specified by the &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounter&quot; /&gt; object &lt;see cref=&quot;P:System.Diagnostics.PerformanceCounter.InstanceName&quot; /&gt; property.">
        <see cref="T:System.Diagnostics.PerformanceCounter" /> 개체의 <see cref="P:System.Diagnostics.PerformanceCounter.InstanceName" /> 속성에서 지정한 범주 인스턴스를 삭제합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This counter is read-only, so any instance that is associated with the category cannot be removed.  &#xA;  &#xA; -or-  &#xA;  &#xA; The instance is not correctly associated with a performance counter.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.Diagnostics.PerformanceCounter.InstanceLifetime&quot; /&gt; property is set to &lt;see cref=&quot;F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process&quot; /&gt; when using global shared memory.">이 카운터가 읽기 전용이기 때문에 해당 범주와 관련된 인스턴스를 제거할 수 없는 경우  
  
또는 
인스턴스가 성능 카운터와 제대로 연결되어 있지 않은 경우  
  
또는 
전역 공유 메모리를 사용할 때 <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> 속성이 <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" />로 설정되어 있습니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="An error occurred when accessing a system API.">시스템 API에 액세스할 때 오류가 발생했습니다.</exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.CategoryName">
      <summary vsli:raw="Gets or sets the name of the performance counter category for this performance counter.">이 성능 카운터에 대한 성능 카운터 범주의 이름을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.PerformanceCounter.CategoryName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="P:System.Diagnostics.PerformanceCounter.CategoryName" />이 <see langword="null" />인 경우</exception>
      <returns vsli:raw="The name of the performance counter category (performance object) with which this performance counter is associated.">이 성능 카운터와 연결된 성능 카운터 범주(성능 개체)의 이름입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.CounterHelp">
      <summary vsli:raw="Gets the description for this performance counter.">이 성능 카운터에 대한 설명을 가져옵니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounter&quot; /&gt; instance is not associated with a performance counter.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.Diagnostics.PerformanceCounter.InstanceLifetime&quot; /&gt; property is set to &lt;see cref=&quot;F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process&quot; /&gt; when using global shared memory.">
        <see cref="T:System.Diagnostics.PerformanceCounter" /> 인스턴스가 성능 카운터와 연결되어 있지 않은 경우  
  
또는 
전역 공유 메모리를 사용할 때 <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> 속성이 <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" />로 설정되어 있습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="Code that is executing without administrative privileges attempted to read a performance counter.">관리자 권한 없이 실행되는 코드가 성능 카운터를 읽으려고 한 경우</exception>
      <returns vsli:raw="A description of the item or quantity that this performance counter measures.">이 성능 카운터가 측정하는 항목 또는 수량에 대한 설명입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.CounterName">
      <summary vsli:raw="Gets or sets the name of the performance counter that is associated with this &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounter&quot; /&gt; instance.">이 <see cref="T:System.Diagnostics.PerformanceCounter" /> 인스턴스와 연결된 성능 카운터의 이름을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.PerformanceCounter.CounterName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="P:System.Diagnostics.PerformanceCounter.CounterName" />이 <see langword="null" />인 경우</exception>
      <returns vsli:raw="The name of the counter, which generally describes the quantity being counted. This name is displayed in the list of counters of the Performance Counter Manager MMC snap in's Add Counters dialog box.">일반적으로 계산하고 있는 수량을 설명하는 카운터의 이름입니다. 이 이름은 성능 카운터 관리자 MMC 스냅인의 카운터 추가 대화 상자에서 카운터 목록에 표시됩니다.</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.CounterType">
      <summary vsli:raw="Gets the counter type of the associated performance counter.">관련된 성능 카운터의 카운터 형식을 가져옵니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The instance is not correctly associated with a performance counter.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.Diagnostics.PerformanceCounter.InstanceLifetime&quot; /&gt; property is set to &lt;see cref=&quot;F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process&quot; /&gt; when using global shared memory.">인스턴스가 성능 카운터와 제대로 연결되어 있지 않은 경우  
  
또는 
전역 공유 메모리를 사용할 때 <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> 속성이 <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" />로 설정되어 있습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="Code that is executing without administrative privileges attempted to read a performance counter.">관리자 권한 없이 실행되는 코드가 성능 카운터를 읽으려고 한 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounterType&quot; /&gt; that describes both how the counter interacts with a monitoring application and the nature of the values it contains (for example, calculated or uncalculated).">카운터가 모니터링 애플리케이션과 상호 작용하는 방법, 카운터에 들어 있는 값의 속성(예: 계산된 값 또는 계산되지 않은 값) 등을 설명하는 <see cref="T:System.Diagnostics.PerformanceCounterType" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.InstanceLifetime">
      <summary vsli:raw="Gets or sets the lifetime of a process.">프로세스의 수명을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value set is not a member of the &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounterInstanceLifetime&quot; /&gt; enumeration.">값 집합이 <see cref="T:System.Diagnostics.PerformanceCounterInstanceLifetime" /> 열거형의 멤버가 아닌 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.Diagnostics.PerformanceCounter.InstanceLifetime&quot; /&gt; is set after the &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounter&quot; /&gt; has been initialized.">
        <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" />가 초기화된 후에 <see cref="T:System.Diagnostics.PerformanceCounter" />이 설정된 경우</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounterInstanceLifetime&quot; /&gt; values. The default is &lt;see cref=&quot;F:System.Diagnostics.PerformanceCounterInstanceLifetime.Global&quot; /&gt;.">
        <see cref="T:System.Diagnostics.PerformanceCounterInstanceLifetime" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Global" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.InstanceName">
      <summary vsli:raw="Gets or sets an instance name for this performance counter.">이 성능 카운터에 대한 인스턴스 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The name of the performance counter category instance, or an empty string (&quot;&quot;), if the counter is a single-instance counter.">성능 카운터 범주 인스턴스의 이름이거나, 카운터가 단일 인스턴스 카운터인 경우 빈 문자열("") 입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.MachineName">
      <summary vsli:raw="Gets or sets the computer name for this performance counter.">이 성능 카운터에 대한 컴퓨터 이름을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.PerformanceCounter.MachineName&quot; /&gt; format is invalid.">
        <see cref="P:System.Diagnostics.PerformanceCounter.MachineName" /> 형식이 잘못된 경우</exception>
      <returns vsli:raw="The server on which the performance counter and its associated category reside.">성능 카운터와 관련 범주가 있는 서버입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.RawValue">
      <summary vsli:raw="Gets or sets the raw, or uncalculated, value of this counter.">이 카운터의 원시 값 또는 계산되지 않은 값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="You are trying to set the counter's raw value, but the counter is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The instance is not correctly associated with a performance counter.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;P:System.Diagnostics.PerformanceCounter.InstanceLifetime&quot; /&gt; property is set to &lt;see cref=&quot;F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process&quot; /&gt; when using global shared memory.">카운터의 원시 값을 설정하려 했으나 읽기 전용 카운터인 경우  
  
또는 
인스턴스가 성능 카운터와 제대로 연결되어 있지 않은 경우  
  
또는 
전역 공유 메모리를 사용할 때 <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /> 속성이 <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" />로 설정되어 있습니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="An error occurred when accessing a system API.">시스템 API에 액세스할 때 오류가 발생했습니다.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="Code that is executing without administrative privileges attempted to read a performance counter.">관리자 권한 없이 실행되는 코드가 성능 카운터를 읽으려고 한 경우</exception>
      <returns vsli:raw="The raw value of the counter.">카운터의 원시 값입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounter.ReadOnly">
      <summary vsli:raw="Gets or sets a value indicating whether this &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounter&quot; /&gt; instance is in read-only mode.">이 <see cref="T:System.Diagnostics.PerformanceCounter" /> 인스턴스가 읽기 전용 모드에 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounter&quot; /&gt; instance is in read-only mode (even if the counter itself is a custom .NET Framework counter); &lt;see langword=&quot;false&quot; /&gt; if it is in read/write mode. The default is the value set by the constructor.">카운터가 사용자 지정 .NET Framework 카운터이더라도 <see cref="T:System.Diagnostics.PerformanceCounter" /> 인스턴스가 읽기 전용 모드에 있으면 <see langword="true" />이고, 읽기/쓰기 모드에 있으면 <see langword="false" />입니다. 생성자가 설정한 값이 기본값입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterCategory">
      <summary vsli:raw="Represents a performance object, which defines a category of performance counters.">성능 카운터의 범주를 정의하는 성능 개체를 나타냅니다.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounterCategory&quot; /&gt; class, leaves the &lt;see cref=&quot;P:System.Diagnostics.PerformanceCounterCategory.CategoryName&quot; /&gt; property empty, and sets the &lt;see cref=&quot;P:System.Diagnostics.PerformanceCounterCategory.MachineName&quot; /&gt; property to the local computer.">
        <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> 클래스의 새 인스턴스를 초기화하고 <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> 속성을 비운 다음 <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> 속성을 로컬 컴퓨터로 설정합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounterCategory&quot; /&gt; class, sets the &lt;see cref=&quot;P:System.Diagnostics.PerformanceCounterCategory.CategoryName&quot; /&gt; property to the specified value, and sets the &lt;see cref=&quot;P:System.Diagnostics.PerformanceCounterCategory.MachineName&quot; /&gt; property to the local computer.">
        <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> 클래스의 새 인스턴스를 초기화하고 <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> 속성을 지정한 값으로 설정한 다음 <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> 속성을 로컬 컴퓨터로 설정합니다.</summary>
      <param name="categoryName" vsli:raw="The name of the performance counter category, or performance object, with which to associate this &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounterCategory&quot; /&gt; instance.">이 <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> 인스턴스에 연결할 성능 카운터 범주 또는 성능 개체의 이름입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;categoryName&quot; /&gt; is an empty string (&quot;&quot;).">
        <paramref name="categoryName" />이 빈 문자열("")인 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;categoryName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="categoryName" />이 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounterCategory&quot; /&gt; class and sets the &lt;see cref=&quot;P:System.Diagnostics.PerformanceCounterCategory.CategoryName&quot; /&gt; and &lt;see cref=&quot;P:System.Diagnostics.PerformanceCounterCategory.MachineName&quot; /&gt; properties to the specified values.">
        <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> 클래스의 새 인스턴스를 초기화하고 <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />과 <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> 속성을 지정한 값으로 설정합니다.</summary>
      <param name="categoryName" vsli:raw="The name of the performance counter category, or performance object, with which to associate this &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounterCategory&quot; /&gt; instance.">이 <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> 인스턴스에 연결할 성능 카운터 범주 또는 성능 개체의 이름입니다.</param>
      <param name="machineName" vsli:raw="The computer on which the performance counter category and its associated counters exist.">성능 카운터 범주 및 관련 카운터가 있는 컴퓨터입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;categoryName&quot; /&gt; is an empty string (&quot;&quot;).  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;machineName&quot; /&gt; syntax is invalid.">
        <paramref name="categoryName" />이 빈 문자열("")인 경우  
  
또는 
<paramref name="machineName" /> 구문이 잘못된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;categoryName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="categoryName" />이 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)">
      <summary vsli:raw="Determines whether the specified counter is registered to this category, which is indicated by the &lt;see cref=&quot;P:System.Diagnostics.PerformanceCounterCategory.CategoryName&quot; /&gt; and &lt;see cref=&quot;P:System.Diagnostics.PerformanceCounterCategory.MachineName&quot; /&gt; properties.">지정한 카운터가 <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />과 <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> 속성이 나타내는 이 범주에 등록되었는지 여부를 확인합니다.</summary>
      <param name="counterName" vsli:raw="The name of the performance counter to look for.">찾을 성능 카운터의 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;counterName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="counterName" />이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.PerformanceCounterCategory.CategoryName&quot; /&gt; property has not been set.">
        <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> 속성이 설정되어 있지 않은 경우</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="A call to an underlying system API failed.">내부 시스템 API를 호출하지 못한 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="Code that is executing without administrative privileges attempted to read a performance counter.">관리자 권한 없이 실행되는 코드가 성능 카운터를 읽으려고 한 경우</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the counter is registered to the category that is specified by the &lt;see cref=&quot;P:System.Diagnostics.PerformanceCounterCategory.CategoryName&quot; /&gt; and &lt;see cref=&quot;P:System.Diagnostics.PerformanceCounterCategory.MachineName&quot; /&gt; properties; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">카운터가 <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> 및 <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> 속성에 지정된 범주에 등록되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String,System.String)">
      <summary vsli:raw="Determines whether the specified counter is registered to the specified category on the local computer.">지정한 카운터가 로컬 컴퓨터의 지정한 범주에 등록되었는지 여부를 확인합니다.</summary>
      <param name="counterName" vsli:raw="The name of the performance counter to look for.">찾을 성능 카운터의 이름입니다.</param>
      <param name="categoryName" vsli:raw="The name of the performance counter category, or performance object, with which the specified performance counter is associated.">지정한 성능 카운터와 관련된 성능 카운터 범주 또는 성능 개체의 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;categoryName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;counterName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="categoryName" />이 <see langword="null" />인 경우  
  
또는 
<paramref name="counterName" />이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;categoryName&quot; /&gt; is an empty string (&quot;&quot;).">
        <paramref name="categoryName" />이 빈 문자열("")인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The category name does not exist.">범주 이름이 없습니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="A call to an underlying system API failed.">내부 시스템 API를 호출하지 못한 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="Code that is executing without administrative privileges attempted to read a performance counter.">관리자 권한 없이 실행되는 코드가 성능 카운터를 읽으려고 한 경우</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the counter is registered to the specified category on the local computer; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">카운터가 로컬 컴퓨터의 지정한 범주에 등록되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String,System.String,System.String)">
      <summary vsli:raw="Determines whether the specified counter is registered to the specified category on a remote computer.">지정한 카운터가 원격 컴퓨터의 지정한 범주에 등록되었는지 여부를 확인합니다.</summary>
      <param name="counterName" vsli:raw="The name of the performance counter to look for.">찾을 성능 카운터의 이름입니다.</param>
      <param name="categoryName" vsli:raw="The name of the performance counter category, or performance object, with which the specified performance counter is associated.">지정한 성능 카운터와 관련된 성능 카운터 범주 또는 성능 개체의 이름입니다.</param>
      <param name="machineName" vsli:raw="The name of the computer on which the performance counter category and its associated counters exist.">성능 카운터 범주 및 관련 카운터가 있는 컴퓨터의 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;categoryName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;counterName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="categoryName" />이 <see langword="null" />인 경우  
  
또는 
<paramref name="counterName" />이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;categoryName&quot; /&gt; is an empty string (&quot;&quot;).  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;machineName&quot; /&gt; is invalid.">
        <paramref name="categoryName" />이 빈 문자열("")인 경우  
  
또는 
<paramref name="machineName" />가 잘못되었습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The category name does not exist.">범주 이름이 없습니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="A call to an underlying system API failed.">내부 시스템 API를 호출하지 못한 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="Code that is executing without administrative privileges attempted to read a performance counter.">관리자 권한 없이 실행되는 코드가 성능 카운터를 읽으려고 한 경우</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the counter is registered to the specified category on the specified computer; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">카운터가 지정한 컴퓨터의 지정한 범주에 등록되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.CounterCreationDataCollection)">
      <summary vsli:raw="Registers the custom performance counter category containing the specified counters on the local computer.">지정한 카운터를 포함하는 사용자 지정 성능 카운터 범주를 로컬 컴퓨터에 등록합니다.</summary>
      <param name="categoryName" vsli:raw="The name of the custom performance counter category to create and register with the system.">만들어서 시스템에 등록할 사용자 지정 성능 카운터 범주의 이름입니다.</param>
      <param name="categoryHelp" vsli:raw="A description of the custom category.">사용자 지정 범주에 대한 설명입니다.</param>
      <param name="counterData" vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.CounterCreationDataCollection&quot; /&gt; that specifies the counters to create as part of the new category.">새 범주의 일부로 만들 카운터를 지정하는 <see cref="T:System.Diagnostics.CounterCreationDataCollection" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A counter name that is specified within the &lt;paramref name=&quot;counterData&quot; /&gt; collection is &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;).  &#xA;  &#xA; -or-  &#xA;  &#xA; A counter that is specified within the &lt;paramref name=&quot;counterData&quot; /&gt; collection already exists.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;counterName&quot; /&gt; parameter has invalid syntax. It might contain backslash characters (&quot;\&quot;) or have length greater than 80 characters.">
        <paramref name="counterData" /> 컬렉션에 지정된 카운터 이름이 <see langword="null" />이거나 빈 문자열("")인 경우  
  
또는 
지정된 카운터가 <paramref name="counterData" /> 컬렉션에 이미 있는 경우  
  
또는 
<paramref name="counterName" /> 매개 변수 구문이 잘못된 경우. 구문에 백슬래시 문자("\")가 포함되었거나 구문의 길이가 80자를 넘은 것 같습니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;categoryName&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="categoryName" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The category already exists on the local computer.  &#xA;  &#xA; -or-  &#xA;  &#xA; The layout of the &lt;paramref name=&quot;counterData&quot; /&gt; collection is incorrect for base counters. A counter of type &lt;see langword=&quot;AverageCount64&quot; /&gt;, &lt;see langword=&quot;AverageTimer32&quot; /&gt;, &lt;see langword=&quot;CounterMultiTimer&quot; /&gt;, &lt;see langword=&quot;CounterMultiTimerInverse&quot; /&gt;, &lt;see langword=&quot;CounterMultiTimer100Ns&quot; /&gt;, &lt;see langword=&quot;CounterMultiTimer100NsInverse&quot; /&gt;, &lt;see langword=&quot;RawFraction&quot; /&gt;, &lt;see langword=&quot;SampleFraction&quot; /&gt; or &lt;see langword=&quot;SampleCounter&quot; /&gt; has to be immediately followed by one of the base counter types (&lt;see langword=&quot;AverageBase&quot; /&gt;, &lt;see langword=&quot;MultiBase&quot; /&gt;, &lt;see langword=&quot;RawBase&quot; /&gt;, or &lt;see langword=&quot;SampleBase&quot; /&gt;).">범주가 이미 로컬 컴퓨터에 있는 경우  
  
또는 
<paramref name="counterData" /> 컬렉션의 레이아웃이 기본 카운터에 맞지 않는 경우. <see langword="AverageCount64" />, <see langword="AverageTimer32" />, <see langword="CounterMultiTimer" />, <see langword="CounterMultiTimerInverse" />, <see langword="CounterMultiTimer100Ns" />, <see langword="CounterMultiTimer100NsInverse" />, <see langword="RawFraction" />, <see langword="SampleFraction" /> 또는 <see langword="SampleCounter" /> 형식의 카운터 바로 다음에는 기본 카운터 형식(<see langword="AverageBase" />, <see langword="MultiBase" />, <see langword="RawBase" /> 또는 <see langword="SampleBase" />)중 하나가 와야 합니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="A call to an underlying system API failed.">내부 시스템 API를 호출하지 못한 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="Code that is executing without administrative privileges attempted to read a performance counter.">관리자 권한 없이 실행되는 코드가 성능 카운터를 읽으려고 한 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounterCategory&quot; /&gt; that is associated with the new custom category, or performance object.">새 사용자 지정 범주 또는 성능 개체와 관련된 <see cref="T:System.Diagnostics.PerformanceCounterCategory" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.Diagnostics.CounterCreationDataCollection)">
      <summary vsli:raw="Registers the custom performance counter category containing the specified counters on the local computer.">지정한 카운터를 포함하는 사용자 지정 성능 카운터 범주를 로컬 컴퓨터에 등록합니다.</summary>
      <param name="categoryName" vsli:raw="The name of the custom performance counter category to create and register with the system.">만들어서 시스템에 등록할 사용자 지정 성능 카운터 범주의 이름입니다.</param>
      <param name="categoryHelp" vsli:raw="A description of the custom category.">사용자 지정 범주에 대한 설명입니다.</param>
      <param name="categoryType" vsli:raw="One of the &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounterCategoryType&quot; /&gt; values.">
        <see cref="T:System.Diagnostics.PerformanceCounterCategoryType" /> 값 중 하나입니다.</param>
      <param name="counterData" vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.CounterCreationDataCollection&quot; /&gt; that specifies the counters to create as part of the new category.">새 범주의 일부로 만들 카운터를 지정하는 <see cref="T:System.Diagnostics.CounterCreationDataCollection" />입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A counter name that is specified within the &lt;paramref name=&quot;counterData&quot; /&gt; collection is &lt;see langword=&quot;null&quot; /&gt; or an empty string (&quot;&quot;).  &#xA;  &#xA; -or-  &#xA;  &#xA; A counter that is specified within the &lt;paramref name=&quot;counterData&quot; /&gt; collection already exists.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;counterName&quot; /&gt; has invalid syntax. It might contain backslash characters (&quot;\&quot;) or have length greater than 80 characters.">
        <paramref name="counterData" /> 컬렉션에 지정된 카운터 이름이 <see langword="null" />이거나 빈 문자열("")인 경우  
  
또는 
지정된 카운터가 <paramref name="counterData" /> 컬렉션에 이미 있는 경우  
  
또는 
 <paramref name="counterName" />에 잘못된 구문이 있는 경우. 구문에 백슬래시 문자("\")가 포함되었거나 구문의 길이가 80자를 넘은 것 같습니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;categoryName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;counterData&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="categoryName" />이(가) <see langword="null" />인 경우  
  
또는 
 <paramref name="counterData" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;categoryType&quot; /&gt; value is outside of the range of the following values: &lt;see langword=&quot;MultiInstance&quot; /&gt;, &lt;see langword=&quot;SingleInstance&quot; /&gt;, or &lt;see langword=&quot;Unknown&quot; /&gt;.">
        <paramref name="categoryType" /> 값이 <see langword="MultiInstance" />, <see langword="SingleInstance" /> 또는 <see langword="Unknown" /> 값의 범위를 벗어난 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The category already exists on the local computer.  &#xA;  &#xA; -or-  &#xA;  &#xA; The layout of the &lt;paramref name=&quot;counterData&quot; /&gt; collection is incorrect for base counters. A counter of type &lt;see langword=&quot;AverageCount64&quot; /&gt;, &lt;see langword=&quot;AverageTimer32&quot; /&gt;, &lt;see langword=&quot;CounterMultiTimer&quot; /&gt;, &lt;see langword=&quot;CounterMultiTimerInverse&quot; /&gt;, &lt;see langword=&quot;CounterMultiTimer100Ns&quot; /&gt;, &lt;see langword=&quot;CounterMultiTimer100NsInverse&quot; /&gt;, &lt;see langword=&quot;RawFraction&quot; /&gt;, &lt;see langword=&quot;SampleFraction&quot; /&gt;, or &lt;see langword=&quot;SampleCounter&quot; /&gt; must be immediately followed by one of the base counter types (&lt;see langword=&quot;AverageBase&quot; /&gt;, &lt;see langword=&quot;MultiBase&quot; /&gt;, &lt;see langword=&quot;RawBase&quot; /&gt;, or &lt;see langword=&quot;SampleBase&quot; /&gt;).">범주가 이미 로컬 컴퓨터에 있는 경우  
  
또는 
<paramref name="counterData" /> 컬렉션의 레이아웃이 기본 카운터에 맞지 않는 경우. <see langword="AverageCount64" />, <see langword="AverageTimer32" />, <see langword="CounterMultiTimer" />, <see langword="CounterMultiTimerInverse" />, <see langword="CounterMultiTimer100Ns" />, <see langword="CounterMultiTimer100NsInverse" />, <see langword="RawFraction" />, <see langword="SampleFraction" /> 또는 <see langword="SampleCounter" /> 형식의 카운터 바로 다음에는 기본 카운터 형식(<see langword="AverageBase" />, <see langword="MultiBase" />, <see langword="RawBase" /> 또는 <see langword="SampleBase" />)중 하나가 와야 합니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="A call to an underlying system API failed.">내부 시스템 API를 호출하지 못한 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="Code that is executing without administrative privileges attempted to read a performance counter.">관리자 권한 없이 실행되는 코드가 성능 카운터를 읽으려고 한 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounterCategory&quot; /&gt; that is associated with the new custom category, or performance object.">새 사용자 지정 범주 또는 성능 개체와 관련된 <see cref="T:System.Diagnostics.PerformanceCounterCategory" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.String,System.String)">
      <summary vsli:raw="Registers the custom performance counter category containing a single counter of type &lt;see cref=&quot;F:System.Diagnostics.PerformanceCounterType.NumberOfItems32&quot; /&gt; on the local computer.">
        <see cref="F:System.Diagnostics.PerformanceCounterType.NumberOfItems32" /> 형식의 단일 카운터를 포함하는 사용자 지정 성능 카운터 범주를 로컬 컴퓨터에 등록합니다.</summary>
      <param name="categoryName" vsli:raw="The name of the custom performance counter category to create and register with the system.">만들어서 시스템에 등록할 사용자 지정 성능 카운터 범주의 이름입니다.</param>
      <param name="categoryHelp" vsli:raw="A description of the custom category.">사용자 지정 범주에 대한 설명입니다.</param>
      <param name="categoryType" vsli:raw="One of the &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounterCategoryType&quot; /&gt; values specifying whether the category is &lt;see cref=&quot;F:System.Diagnostics.PerformanceCounterCategoryType.MultiInstance&quot; /&gt;, &lt;see cref=&quot;F:System.Diagnostics.PerformanceCounterCategoryType.SingleInstance&quot; /&gt;, or &lt;see cref=&quot;F:System.Diagnostics.PerformanceCounterCategoryType.Unknown&quot; /&gt;.">범주가 <see cref="F:System.Diagnostics.PerformanceCounterCategoryType.MultiInstance" />, <see cref="F:System.Diagnostics.PerformanceCounterCategoryType.SingleInstance" /> 또는 <see cref="F:System.Diagnostics.PerformanceCounterCategoryType.Unknown" />인지를 지정하는 <see cref="T:System.Diagnostics.PerformanceCounterCategoryType" /> 값 중 하나입니다.</param>
      <param name="counterName" vsli:raw="The name of a new counter to create as part of the new category.">새 범주의 일부로 만들 새 카운터의 이름입니다.</param>
      <param name="counterHelp" vsli:raw="A description of the counter that is associated with the new custom category.">새 사용자 지정 범주와 관련된 카운터에 대한 설명입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;counterName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or is an empty string (&quot;&quot;).  &#xA;  &#xA; -or-  &#xA;  &#xA; The counter that is specified by &lt;paramref name=&quot;counterName&quot; /&gt; already exists.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;counterName&quot; /&gt; has invalid syntax. It might contain backslash characters (&quot;\&quot;) or have length greater than 80 characters.">
        <paramref name="counterName" />이 <see langword="null" />이거나 빈 문자열("")인 경우  
  
또는 
<paramref name="counterName" />이 지정한 카운터가 이미 있는 경우  
  
또는 
 <paramref name="counterName" />에 잘못된 구문이 있는 경우. 구문에 백슬래시 문자("\")가 포함되었거나 구문의 길이가 80자를 넘은 것 같습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The category already exists on the local computer.">범주가 이미 로컬 컴퓨터에 있는 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;categoryName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;counterHelp&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="categoryName" />이(가) <see langword="null" />인 경우  
  
또는 
 <paramref name="counterHelp" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="A call to an underlying system API failed.">내부 시스템 API를 호출하지 못한 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="Code that is executing without administrative privileges attempted to read a performance counter.">관리자 권한 없이 실행되는 코드가 성능 카운터를 읽으려고 한 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounterCategory&quot; /&gt; that is associated with the new system category, or performance object.">새 시스템 범주 또는 성능 개체와 관련된 <see cref="T:System.Diagnostics.PerformanceCounterCategory" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Registers a custom performance counter category containing a single counter of type &lt;see langword=&quot;NumberOfItems32&quot; /&gt; on the local computer.">
        <see langword="NumberOfItems32" /> 형식의 단일 카운터를 포함하는 사용자 지정 성능 카운터 범주를 로컬 컴퓨터에 등록합니다.</summary>
      <param name="categoryName" vsli:raw="The name of the custom performance counter category to create and register with the system.">만들어서 시스템에 등록할 사용자 지정 성능 카운터 범주의 이름입니다.</param>
      <param name="categoryHelp" vsli:raw="A description of the custom category.">사용자 지정 범주에 대한 설명입니다.</param>
      <param name="counterName" vsli:raw="The name of a new counter, of type &lt;see langword=&quot;NumberOfItems32&quot; /&gt;, to create as part of the new category.">새 범주의 일부로 만들 <see langword="NumberOfItems32" /> 형식의 새 카운터 이름입니다.</param>
      <param name="counterHelp" vsli:raw="A description of the counter that is associated with the new custom category.">새 사용자 지정 범주와 관련된 카운터에 대한 설명입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;counterName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or is an empty string (&quot;&quot;).  &#xA;  &#xA; -or-  &#xA;  &#xA; The counter that is specified by &lt;paramref name=&quot;counterName&quot; /&gt; already exists.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;counterName&quot; /&gt; has invalid syntax. It might contain backslash characters (&quot;\&quot;) or have length greater than 80 characters.">
        <paramref name="counterName" />이 <see langword="null" />이거나 빈 문자열("")인 경우  
  
또는 
<paramref name="counterName" />이 지정한 카운터가 이미 있는 경우  
  
또는 
 <paramref name="counterName" />에 잘못된 구문이 있는 경우. 구문에 백슬래시 문자("\")가 포함되었거나 구문의 길이가 80자를 넘은 것 같습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The category already exists on the local computer.">범주가 이미 로컬 컴퓨터에 있는 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;categoryName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;counterHelp&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="categoryName" />이(가) <see langword="null" />인 경우  
  
또는 
 <paramref name="counterHelp" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="A call to an underlying system API failed.">내부 시스템 API를 호출하지 못한 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="Code that is executing without administrative privileges attempted to read a performance counter.">관리자 권한 없이 실행되는 코드가 성능 카운터를 읽으려고 한 경우</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounterCategory&quot; /&gt; that is associated with the new system category, or performance object.">새 시스템 범주 또는 성능 개체와 관련된 <see cref="T:System.Diagnostics.PerformanceCounterCategory" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)">
      <summary vsli:raw="Removes the category and its associated counters from the local computer.">로컬 컴퓨터에서 범주와 관련 카운터를 제거합니다.</summary>
      <param name="categoryName" vsli:raw="The name of the custom performance counter category to delete.">삭제할 사용자 지정 성능 카운터 범주의 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;categoryName&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="categoryName" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;categoryName&quot; /&gt; parameter has invalid syntax. It might contain backslash characters (&quot;\&quot;) or have length greater than 80 characters.">
        <paramref name="categoryName" /> 매개 변수 구문이 잘못된 경우. 구문에 백슬래시 문자("\")가 포함되었거나 구문의 길이가 80자를 넘은 것 같습니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="A call to an underlying system API failed.">내부 시스템 API를 호출하지 못한 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The category cannot be deleted because it is not a custom category.">이 범주가 사용자 지정 범주가 아니므로 삭제될 수 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="Code that is executing without administrative privileges attempted to read a performance counter.">관리자 권한 없이 실행되는 코드가 성능 카운터를 읽으려고 한 경우</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)">
      <summary vsli:raw="Determines whether the category is registered on the local computer.">범주가 로컬 시스템에 등록되었는지 여부를 확인합니다.</summary>
      <param name="categoryName" vsli:raw="The name of the performance counter category to look for.">찾을 성능 카운터 범주의 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;categoryName&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="categoryName" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;categoryName&quot; /&gt; parameter is an empty string (&quot;&quot;).">
        <paramref name="categoryName" /> 매개 변수가 빈 문자열("")입니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="A call to an underlying system API failed.">내부 시스템 API를 호출하지 못한 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="Code that is executing without administrative privileges attempted to read a performance counter.">관리자 권한 없이 실행되는 코드가 성능 카운터를 읽으려고 한 경우</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the category is registered; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">범주가 등록되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String,System.String)">
      <summary vsli:raw="Determines whether the category is registered on the specified computer.">범주가 지정한 컴퓨터에 등록되었는지 여부를 확인합니다.</summary>
      <param name="categoryName" vsli:raw="The name of the performance counter category to look for.">찾을 성능 카운터 범주의 이름입니다.</param>
      <param name="machineName" vsli:raw="The name of the computer to examine for the category.">해당 범주에 대해 조사할 컴퓨터의 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;categoryName&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="categoryName" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;categoryName&quot; /&gt; parameter is an empty string (&quot;&quot;).  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;machineName&quot; /&gt; parameter is invalid.">
        <paramref name="categoryName" /> 매개 변수가 빈 문자열("")입니다.  
  
또는 
<paramref name="machineName" /> 매개 변수가 잘못되었습니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="A call to an underlying system API failed.">내부 시스템 API를 호출하지 못한 경우</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The network path cannot be found.">네트워크 경로를 찾을 수 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The caller does not have the required permission.  &#xA;  &#xA; -or-  &#xA;  &#xA; Code that is executing without administrative privileges attempted to read a performance counter.">호출자에게 필요한 권한이 없는 경우  
  
 또는  
  
 관리자 권한 없이 실행되는 코드가 성능 카운터를 읽으려고 한 경우</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the category is registered; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">범주가 등록되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.GetCategories">
      <summary vsli:raw="Retrieves a list of the performance counter categories that are registered on the local computer.">로컬 컴퓨터에 등록된 성능 카운터 범주의 목록을 검색합니다.</summary>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="A call to an underlying system API failed.">내부 시스템 API를 호출하지 못한 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="Code that is executing without administrative privileges attempted to read a performance counter.">관리자 권한 없이 실행되는 코드가 성능 카운터를 읽으려고 한 경우</exception>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounterCategory&quot; /&gt; objects indicating the categories that are registered on the local computer.">로컬 컴퓨터에 등록된 범주를 나타내는 <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> 개체의 배열입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.GetCategories(System.String)">
      <summary vsli:raw="Retrieves a list of the performance counter categories that are registered on the specified computer.">지정한 컴퓨터에 등록된 성능 카운터 범주의 목록을 검색합니다.</summary>
      <param name="machineName" vsli:raw="The computer to look on.">조사할 컴퓨터입니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;machineName&quot; /&gt; parameter is invalid.">
        <paramref name="machineName" /> 매개 변수가 잘못되었습니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="A call to an underlying system API failed.">내부 시스템 API를 호출하지 못한 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="Code that is executing without administrative privileges attempted to read a performance counter.">관리자 권한 없이 실행되는 코드가 성능 카운터를 읽으려고 한 경우</exception>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounterCategory&quot; /&gt; objects indicating the categories that are registered on the specified computer.">지정한 컴퓨터에 등록된 범주를 나타내는 <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> 개체의 배열입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.GetCounters">
      <summary vsli:raw="Retrieves a list of the counters in a performance counter category that contains exactly one instance.">정확히 하나의 인스턴스가 포함된 성능 카운터 범주에서 카운터 목록을 검색합니다.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The category is not a single instance.">범주가 단일 인스턴스가 아닌 경우</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="A call to an underlying system API failed.">내부 시스템 API를 호출하지 못한 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The category does not have an associated instance.">범주에 연관된 인스턴스가 없는 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="Code that is executing without administrative privileges attempted to read a performance counter.">관리자 권한 없이 실행되는 코드가 성능 카운터를 읽으려고 한 경우</exception>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounter&quot; /&gt; objects indicating the counters that are associated with this single-instance performance counter category.">이러한 단일 인스턴스 성능 카운터 범주와 관련된 범주를 나타내는 <see cref="T:System.Diagnostics.PerformanceCounter" /> 개체의 배열입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.GetCounters(System.String)">
      <summary vsli:raw="Retrieves a list of the counters in a performance counter category that contains one or more instances.">인스턴스가 하나 이상 포함된 성능 카운터 범주에서 카운터 목록을 검색합니다.</summary>
      <param name="instanceName" vsli:raw="The performance object instance for which to retrieve the list of associated counters.">관련 카운터 목록을 검색할 성능 개체 인스턴스입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;instanceName&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instanceName" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.PerformanceCounterCategory.CategoryName&quot; /&gt; property for this &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounterCategory&quot; /&gt; instance has not been set.  &#xA;  &#xA; -or-  &#xA;  &#xA; The category does not contain the instance that is specified by the &lt;paramref name=&quot;instanceName&quot; /&gt; parameter.">이 <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />의 <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> 속성을 설정하지 않은 경우  
  
또는 
이 범주에 <paramref name="instanceName" /> 매개 변수에 의해 지정된 인스턴스가 없는 경우</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="A call to an underlying system API failed.">내부 시스템 API를 호출하지 못한 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="Code that is executing without administrative privileges attempted to read a performance counter.">관리자 권한 없이 실행되는 코드가 성능 카운터를 읽으려고 한 경우</exception>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounter&quot; /&gt; objects indicating the counters that are associated with the specified object instance of this performance counter category.">이러한 성능 카운터 범주의 지정한 개체 인스턴스와 관련된 카운터를 나타내는 <see cref="T:System.Diagnostics.PerformanceCounter" /> 개체의 배열입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.GetInstanceNames">
      <summary vsli:raw="Retrieves the list of performance object instances that are associated with this category.">이 범주와 관련된 성능 개체 인스턴스 목록을 검색합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.PerformanceCounterCategory.CategoryName&quot; /&gt; property is &lt;see langword=&quot;null&quot; /&gt;. The property might not have been set.  &#xA;  &#xA; -or-  &#xA;  &#xA; The category does not have an associated instance.">
        <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> 속성은 <see langword="null" />입니다. 속성을 설정하지 않았을 수도 있습니다.  
  
또는 
범주에 연관된 인스턴스가 없는 경우</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="A call to an underlying system API failed.">내부 시스템 API를 호출하지 못한 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="Code that is executing without administrative privileges attempted to read a performance counter.">관리자 권한 없이 실행되는 코드가 성능 카운터를 읽으려고 한 경우</exception>
      <returns vsli:raw="An array of strings representing the performance object instance names that are associated with this category or, if the category contains only one performance object instance, a single-entry array that contains an empty string (&quot;&quot;).">이 범주와 관련된 성능 개체 인스턴스 이름을 나타내는 문자열 배열이거나, 해당 범주에 성능 개체 인스턴스가 하나만 있는 경우 빈 문자열("")을 포함하는 단일 엔트리 배열입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)">
      <summary vsli:raw="Determines whether the specified performance object instance exists in the category that is identified by this &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounterCategory&quot; /&gt; object's &lt;see cref=&quot;P:System.Diagnostics.PerformanceCounterCategory.CategoryName&quot; /&gt; property.">지정한 성능 개체 인스턴스가 이 <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> 개체의 <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> 속성에 의해 식별된 범주에 있는지 여부를 확인합니다.</summary>
      <param name="instanceName" vsli:raw="The performance object instance in this performance counter category to search for.">이 성능 카운터 범주에서 검색할 성능 개체 인스턴스입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.PerformanceCounterCategory.CategoryName&quot; /&gt; property is &lt;see langword=&quot;null&quot; /&gt;. The property might not have been set.">
        <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> 속성은 <see langword="null" />입니다. 속성을 설정하지 않았을 수도 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;instanceName&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instanceName" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="A call to an underlying system API failed.">내부 시스템 API를 호출하지 못한 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="Code that is executing without administrative privileges attempted to read a performance counter.">관리자 권한 없이 실행되는 코드가 성능 카운터를 읽으려고 한 경우</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the category contains the specified performance object instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">해당 범주에 지정한 성능 개체 인스턴스가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String,System.String)">
      <summary vsli:raw="Determines whether a specified category on the local computer contains the specified performance object instance.">로컬 컴퓨터의 지정한 범주에 지정한 성능 개체 인스턴스가 있는지 여부를 확인합니다.</summary>
      <param name="instanceName" vsli:raw="The performance object instance to search for.">검색할 성능 개체 인스턴스입니다.</param>
      <param name="categoryName" vsli:raw="The performance counter category to search.">검색할 성능 카운터 범주입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;instanceName&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;categoryName&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instanceName" /> 매개 변수가 <see langword="null" />인 경우  
  
또는 
<paramref name="categoryName" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;categoryName&quot; /&gt; parameter is an empty string (&quot;&quot;).">
        <paramref name="categoryName" /> 매개 변수가 빈 문자열("")입니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="A call to an underlying system API failed.">내부 시스템 API를 호출하지 못한 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="Code that is executing without administrative privileges attempted to read a performance counter.">관리자 권한 없이 실행되는 코드가 성능 카운터를 읽으려고 한 경우</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the category contains the specified performance object instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">해당 범주에 지정한 성능 개체 인스턴스가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String,System.String,System.String)">
      <summary vsli:raw="Determines whether a specified category on a specified computer contains the specified performance object instance.">지정한 컴퓨터의 지정한 범주에 지정한 성능 개체 인스턴스가 있는지 여부를 확인합니다.</summary>
      <param name="instanceName" vsli:raw="The performance object instance to search for.">검색할 성능 개체 인스턴스입니다.</param>
      <param name="categoryName" vsli:raw="The performance counter category to search.">검색할 성능 카운터 범주입니다.</param>
      <param name="machineName" vsli:raw="The name of the computer on which to look for the category instance pair.">범주 인스턴스 쌍을 찾을 대상 컴퓨터의 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;instanceName&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;categoryName&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="instanceName" /> 매개 변수가 <see langword="null" />인 경우  
  
또는 
<paramref name="categoryName" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;categoryName&quot; /&gt; parameter is an empty string (&quot;&quot;).  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;machineName&quot; /&gt; parameter is invalid.">
        <paramref name="categoryName" /> 매개 변수가 빈 문자열("")입니다.  
  
또는 
<paramref name="machineName" /> 매개 변수가 잘못되었습니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="A call to an underlying system API failed.">내부 시스템 API를 호출하지 못한 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="Code that is executing without administrative privileges attempted to read a performance counter.">관리자 권한 없이 실행되는 코드가 성능 카운터를 읽으려고 한 경우</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the category contains the specified performance object instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">해당 범주에 지정한 성능 개체 인스턴스가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterCategory.ReadCategory">
      <summary vsli:raw="Reads all the counter and performance object instance data that is associated with this performance counter category.">이 성능 카운터 범주와 관련된 카운터와 성능 개체 인스턴스를 모두 읽습니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.PerformanceCounterCategory.CategoryName&quot; /&gt; property is &lt;see langword=&quot;null&quot; /&gt;. The property might not have been set.">
        <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> 속성은 <see langword="null" />입니다. 속성을 설정하지 않았을 수도 있습니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="A call to an underlying system API failed.">내부 시스템 API를 호출하지 못한 경우</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="Code that is executing without administrative privileges attempted to read a performance counter.">관리자 권한 없이 실행되는 코드가 성능 카운터를 읽으려고 한 경우</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Diagnostics.InstanceDataCollectionCollection&quot; /&gt; that contains the counter and performance object instance data for the category.">해당 범주에 대한 카운터와 성능 개체 인스턴스 데이터가 들어 있는 <see cref="T:System.Diagnostics.InstanceDataCollectionCollection" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterCategory.CategoryHelp">
      <summary vsli:raw="Gets the category's help text.">범주의 도움말 텍스트를 가져옵니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.PerformanceCounterCategory.CategoryName&quot; /&gt; property is &lt;see langword=&quot;null&quot; /&gt;. The category name must be set before getting the category help.">
        <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> 속성은 <see langword="null" />입니다. 범주 도움말을 가져오기 전에 범주 이름을 설정해야 합니다.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="A call to an underlying system API failed.">내부 시스템 API를 호출하지 못한 경우</exception>
      <returns vsli:raw="A description of the performance object that this category measures.">이 범주가 측정하는 성능 개체에 대한 설명입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterCategory.CategoryName">
      <summary vsli:raw="Gets or sets the name of the performance object that defines this category.">이 범주를 정의하는 성능 개체의 이름을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.PerformanceCounterCategory.CategoryName&quot; /&gt; is an empty string (&quot;&quot;).">
        <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />이 빈 문자열("")인 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.PerformanceCounterCategory.CategoryName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />이 <see langword="null" />인 경우</exception>
      <returns vsli:raw="The name of the performance counter category, or performance object, with which to associate this &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounterCategory&quot; /&gt; instance.">이 <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> 인스턴스에 연결할 성능 카운터 범주 또는 성능 개체의 이름입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterCategory.CategoryType">
      <summary vsli:raw="Gets the performance counter category type.">성능 카운터 범주 형식을 가져옵니다.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounterCategoryType&quot; /&gt; values.">
        <see cref="T:System.Diagnostics.PerformanceCounterCategoryType" /> 값 중 하나입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterCategory.MachineName">
      <summary vsli:raw="Gets or sets the name of the computer on which this category exists.">이 범주가 있는 컴퓨터의 이름을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;see cref=&quot;P:System.Diagnostics.PerformanceCounterCategory.MachineName&quot; /&gt; syntax is invalid.">
        <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> 구문이 잘못된 경우</exception>
      <returns vsli:raw="The name of the computer on which the performance counter category and its associated counters exist.">성능 카운터 범주 및 관련 카운터가 있는 컴퓨터의 이름입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterCategoryType">
      <summary vsli:raw="Indicates whether the performance counter category can have multiple instances.">성능 카운터 범주가 다중 인스턴스를 가질 수 있는지 여부를 나타냅니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterCategoryType.MultiInstance">
      <summary vsli:raw="The performance counter category can have multiple instances.">성능 카운터 범주가 다중 인스턴스를 가질 수 있습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterCategoryType.SingleInstance">
      <summary vsli:raw="The performance counter category can have only a single instance.">성능 카운터 범주가 단일 인스턴스만을 가질 수 있습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterCategoryType.Unknown">
      <summary vsli:raw="The instance functionality for the performance counter category is unknown.">성능 카운터 범주의 인스턴스 기능을 알 수 없습니다.</summary>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterInstanceLifetime">
      <summary vsli:raw="Specifies the lifetime of a performance counter instance.">성능 카운터 인스턴스의 수명을 지정합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Global">
      <summary vsli:raw="Remove the performance counter instance when no counters are using the process category.">프로세스 범주를 사용하는 카운터가 없는 경우 성능 카운터 인스턴스를 제거합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process">
      <summary vsli:raw="Remove the performance counter instance when the process is closed.">프로세스가 닫히면 성능 카운터 인스턴스를 제거합니다.</summary>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterManager">
      <summary vsli:raw="Prepares performance data for the performance.dll the system loads when working with performance counters.">성능 카운터를 사용하여 작업할 때 시스템이 로드하는 performance.dll에 대한 성능 데이터를 준비합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterManager.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.PerformanceCounterManager&quot; /&gt; class.">
        <see cref="T:System.Diagnostics.PerformanceCounterManager" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterManager.System#Diagnostics#ICollectData#CloseData">
      <summary vsli:raw="Called by the perf dll's close performance data.">performance.dll의 성능 데이터 닫기에 의해 호출됩니다.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterManager.System#Diagnostics#ICollectData#CollectData(System.Int32,System.IntPtr,System.IntPtr,System.Int32,System.IntPtr@)">
      <summary vsli:raw="Performance data collection routine. Called by the PerfCount perf dll.">성능 데이터 수집 루틴입니다. 성능 카운터 performance.dll에 의해 호출됩니다.</summary>
      <param name="callIdx" vsli:raw="The call index.">호출 인덱스입니다.</param>
      <param name="valueNamePtr" vsli:raw="A pointer to a Unicode string list with the requested Object identifiers.">요청된 개체 ID가 포함된 유니코드 문자열 목록에 대한 포인터입니다.</param>
      <param name="dataPtr" vsli:raw="A pointer to the data buffer.">데이터 버퍼에 대한 포인터입니다.</param>
      <param name="totalBytes" vsli:raw="A pointer to a number of bytes.">바이트 수에 대한 포인터입니다.</param>
      <param name="res" vsli:raw="When this method returns, contains a &lt;see cref=&quot;T:System.IntPtr&quot; /&gt; with a value of -1.">이 메서드는 반환될 때 값이 -1인 <see cref="T:System.IntPtr" />를 포함합니다.</param>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterType">
      <summary vsli:raw="Specifies performance counter types that map directly to native types.">
        <see cref="M:System.Diagnostics.PerformanceCounter.NextValue" /> 인스턴스의 <see cref="T:System.Diagnostics.PerformanceCounter" /> 메서드를 계산하는 데 사용되는 수식을 지정합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.AverageBase">
      <summary vsli:raw="A base counter that is used in the calculation of time or count averages, such as &lt;see cref=&quot;F:System.Diagnostics.PerformanceCounterType.AverageTimer32&quot; /&gt; and &lt;see cref=&quot;F:System.Diagnostics.PerformanceCounterType.AverageCount64&quot; /&gt;. Stores the denominator for calculating a counter to present &quot;time per operation&quot; or &quot;count per operation&quot;.">
        <see langword="AverageTimer32" /> 및 <see langword="AverageCount64" />처럼 시간이나 횟수 평균을 계산하는 데 사용되는 기본 카운터입니다. "연산 당 시간" 또는 "연산 당 수"를 나타내는 카운터를 계산하는 데 사용되는 분모를 저장합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.AverageCount64">
      <summary vsli:raw="An average counter that shows how many items are processed, on average, during an operation. Counters of this type display a ratio of the items processed to the number of operations completed. The ratio is calculated by comparing the number of items processed during the last interval to the number of operations completed during the last interval. Counters of this type include PhysicalDisk\ Avg. Disk Bytes/Transfer.">작업하는 동안에 처리되는 평균 항목 수를 표시하는 평균 카운터입니다. 이 형식의 카운터는 완성되는 작업 수에 대한 처리되는 항목의 비율을 표시합니다. 이 비율은 마지막 기간 동안 처리되는 항목의 수를 해당 기간 동안 완성되는 작업의 수와 비교하여 계산됩니다. 이 형식의 카운터는 PhysicalDisk \ Avg. Disk Bytes/Transfer를 포함 합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.AverageTimer32">
      <summary vsli:raw="An average counter that measures the time it takes, on average, to complete a process or operation. Counters of this type display a ratio of the total elapsed time of the sample interval to the number of processes or operations completed during that time. This counter type measures time in ticks of the system clock. Counters of this type include PhysicalDisk\ Avg. Disk sec/Transfer.">프로세스나 작업을 완성하는 데 소요되는 평균 시간을 측정하는 평균 카운터입니다. 이 형식의 카운터는 샘플 기간 동안 완성되는 프로세스나 작업의 수에 대한 해당 기간의 총 경과 시간의 비율을 표시합니다. 이 카운터 형식은 시스템 시계의 틱을 단위로 하여 시간을 측정합니다. 이 형식의 카운터는 PhysicalDisk \ Avg. Disk sec/Transfer를 포함 합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterDelta32">
      <summary vsli:raw="A difference counter that shows the change in the measured attribute between the two most recent sample intervals.">가장 최근의 두 샘플 기간 사이에 측정된 특성의 변경 내용을 표시하는 차이 카운터입니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterDelta64">
      <summary vsli:raw="A difference counter that shows the change in the measured attribute between the two most recent sample intervals. It is the same as the &lt;see cref=&quot;F:System.Diagnostics.PerformanceCounterType.CounterDelta32&quot; /&gt; counter type except that is uses larger fields to accommodate larger values.">가장 최근의 두 샘플 기간 사이에 측정된 특성의 변경 내용을 표시하는 차이 카운터입니다. 더 큰 값을 수용하기 위해 큰 필드를 사용하는 것을 제외하면 <see langword="CounterDelta32" /> 카운터 형식과 동일합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterMultiBase">
      <summary vsli:raw="A base counter that indicates the number of items sampled. It is used as the denominator in the calculations to get an average among the items sampled when taking timings of multiple, but similar items. Used with &lt;see cref=&quot;F:System.Diagnostics.PerformanceCounterType.CounterMultiTimer&quot; /&gt;, &lt;see cref=&quot;F:System.Diagnostics.PerformanceCounterType.CounterMultiTimerInverse&quot; /&gt;, &lt;see cref=&quot;F:System.Diagnostics.PerformanceCounterType.CounterMultiTimer100Ns&quot; /&gt;, and &lt;see cref=&quot;F:System.Diagnostics.PerformanceCounterType.CounterMultiTimer100NsInverse&quot; /&gt;.">샘플링되는 항목의 수를 나타내는 기본 카운터입니다. 이 카운터는 여러 개의 유사한 타이밍 항목을 사용하는 경우에 샘플링된 항목들의 평균을 구하는 계산에서 분모로 사용됩니다. <see langword="CounterMultiTimer" />, <see langword="CounterMultiTimerInverse" />, <see langword="CounterMultiTimer100Ns" /> 및 <see langword="CounterMultiTimer100NsInverse" />와 함께 사용됩니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterMultiTimer">
      <summary vsli:raw="A percentage counter that displays the active time of one or more components as a percentage of the total time of the sample interval. Because the numerator records the active time of components operating simultaneously, the resulting percentage can exceed 100 percent. This counter type differs from &lt;see cref=&quot;F:System.Diagnostics.PerformanceCounterType.CounterMultiTimer100Ns&quot; /&gt; in that it measures time in units of ticks of the system performance timer, rather than in 100 nanosecond units. This counter type is a multitimer.">하나 이상의 구성 요소에 대한 활성 시간을 샘플 기간의 총 시간에 대한 백분율로 표시하는 백분율 카운터입니다. 분자는 동시에 작동하는 구성 요소의 활성 시간을 기록하므로 결과 백분율은 100%를 초과할 수 있습니다. 이 카운터 형식은 100나노초가 아닌 시스템 성능 타이머의 틱을 단위로 하여 시간을 측정한다는 점에서 <see langword="CounterMultiTimer100Ns" />와는 다릅니다. 이 카운터 형식은 멀티타이머입니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterMultiTimer100Ns">
      <summary vsli:raw="A percentage counter that shows the active time of one or more components as a percentage of the total time of the sample interval. It measures time in 100 nanosecond (ns) units. This counter type is a multitimer.">하나 이상의 구성 요소에 대한 활성 시간을 샘플 기간의 총 시간에 대한 백분율로 표시하는 백분율 카운터입니다. 이 카운터는 100나노초(ns)를 단위로 하여 시간을 측정합니다. 이 카운터 형식은 멀티타이머입니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterMultiTimer100NsInverse">
      <summary vsli:raw="A percentage counter that shows the active time of one or more components as a percentage of the total time of the sample interval. Counters of this type measure time in 100 nanosecond (ns) units. They derive the active time by measuring the time that the components were not active and subtracting the result from multiplying 100 percent by the number of objects monitored. This counter type is an inverse multitimer.">하나 이상의 구성 요소에 대한 활성 시간을 샘플 기간의 총 시간에 대한 백분율로 표시하는 백분율 카운터입니다. 이 형식의 카운터는 100나노초(ns)를 단위로 하여 시간을 측정하며, 구성 요소가 비활성 상태인 시간을 측정한 다음 모니터링되는 개체의 수에 100%를 곱한 값에서 이 시간을 빼서 활성 시간을 구합니다. 이 카운터 형식은 멀티타이머와는 정반대입니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterMultiTimerInverse">
      <summary vsli:raw="A percentage counter that shows the active time of one or more components as a percentage of the total time of the sample interval. It derives the active time by measuring the time that the components were not active and subtracting the result from 100 percent by the number of objects monitored. This counter type is an inverse multitimer. It differs from &lt;see cref=&quot;F:System.Diagnostics.PerformanceCounterType.CounterMultiTimer100NsInverse&quot; /&gt; in that it measures time in units of ticks of the system performance timer, rather than in 100 nanosecond units.">하나 이상의 구성 요소에 대한 활성 시간을 샘플 기간의 총 시간에 대한 백분율로 표시하는 백분율 카운터입니다. 이 카운터는 구성 요소가 비활성 상태인 시간을 측정한 다음 모니터링되는 개체의 수에 100%를 곱한 값에서 이 시간을 빼서 활성 시간을 계산합니다. 이 카운터 형식은 멀티타이머와는 정반대입니다. 이는 100나노초가 아닌 시스템 성능 타이머의 틱을 단위로 하여 시간을 측정한다는 점에서 CounterMultiTimer100NsInverse와는 다릅니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterTimer">
      <summary vsli:raw="A percentage counter that shows the average time that a component is active as a percentage of the total sample time.">구성 요소가 활성 상태인 평균 시간을 총 샘플 시간에 대한 백분율로 나타내는 백분율 카운터입니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CounterTimerInverse">
      <summary vsli:raw="A percentage counter that displays the average percentage of active time observed during sample interval. The value of these counters is calculated by monitoring the percentage of time that the service was inactive and then subtracting that value from 100 percent. This is an inverse counter type. It measures time in units of ticks of the system performance timer.">샘플 기간 동안 관찰되는 활성 시간의 평균 백분율을 표시하는 백분율 카운터입니다. 이러한 카운터의 값은 서비스가 비활성 상태인 시간의 백분율을 모니터링한 다음 이 값을 100%에서 빼서 계산합니다. 이 형식은 카운터 형식과는 정반대입니다. 이는 100나노초 단위가 아닌 시스템 성능 타이머의 틱을 단위로 시간을 측정한다는 점을 제외하고 CounterTimer100NsInv와는 동일합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CountPerTimeInterval32">
      <summary vsli:raw="An average counter designed to monitor the average length of a queue to a resource over time. It shows the difference between the queue lengths observed during the last two sample intervals divided by the duration of the interval. This type of counter is typically used to track the number of items that are queued or waiting.">평균 카운터는 시간 경과에 따라 리소스 큐의 평균 길이를 모니터링하도록 설계되었으며, 기간별로 나누어진 마지막 두 샘플 기간 중에 관찰되는 큐 길이 간 차이를 표시합니다. 일반적으로 이 형식의 카운터는 큐에 들어와 있거나 대기 중인 항목 수를 추적하는 데 사용됩니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.CountPerTimeInterval64">
      <summary vsli:raw="An average counter that monitors the average length of a queue to a resource over time. Counters of this type display the difference between the queue lengths observed during the last two sample intervals, divided by the duration of the interval. This counter type is the same as &lt;see cref=&quot;F:System.Diagnostics.PerformanceCounterType.CountPerTimeInterval32&quot; /&gt; except that it uses larger fields to accommodate larger values. This type of counter is typically used to track a high-volume or very large number of items that are queued or waiting.">시간 경과에 따라 리소스 큐의 평균 길이를 모니터링하는 평균 카운터입니다. 이 형식의 카운터는 기간별로 나누어진 마지막 두 샘플 기간 중에 관찰되는 큐 길이 간 차이를 표시합니다. 큰 값을 수용하기 위해 좀 더 큰 필드를 사용한다는 점을 제외하면 이 카운터 형식은 <see langword="CountPerTimeInterval32" />와 같습니다. 일반적으로 이 형식의 카운터는 큐에 들어와 있거나 대기 중인 대용량 또는 다수의 항목을 추적하는 데 사용됩니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.ElapsedTime">
      <summary vsli:raw="A difference timer that shows the total time between when the component or process started and the time when this value is calculated. Counters of this type include System\ System Up Time.">구성 요소나 프로세스가 시작된 시간과 이 값이 계산되는 시간 간의 총 시간을 표시하는 차이 타이머입니다. 이 형식의 카운터에는 System\System Up Time이 포함됩니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.NumberOfItems32">
      <summary vsli:raw="An instantaneous counter that shows the most recently observed value. Used, for example, to maintain a simple count of items or operations. Counters of this type include Memory\Available Bytes.">가장 최근에 관찰된 값을 표시하는 순간 카운터입니다. 예를 들어, 항목 또는 연산의 단순한 수를 유지하는 데 사용됩니다. 이 형식의 카운터에는 Memory\Available Bytes가 포함됩니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.NumberOfItems64">
      <summary vsli:raw="An instantaneous counter that shows the most recently observed value. Used, for example, to maintain a simple count of a very large number of items or operations. It is the same as &lt;see cref=&quot;F:System.Diagnostics.PerformanceCounterType.NumberOfItems32&quot; /&gt; except that it uses larger fields to accommodate larger values.">가장 최근에 관찰된 값을 표시하는 순간 카운터입니다. 예를 들어, 매우 많은 항목 또는 연산의 단순한 수를 유지하는 데 사용됩니다. 큰 값을 수용하기 위해 좀 더 큰 필드를 사용한다는 점을 제외하면 이 카운터 형식은 <see langword="NumberOfItems32" />와 같습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX32">
      <summary vsli:raw="An instantaneous counter that shows the most recently observed value in hexadecimal format. Used, for example, to maintain a simple count of items or operations.">가장 최근에 관찰된 값을 16진수 형식으로 표시하는 순간 카운터입니다. 예를 들어, 항목 또는 연산의 단순한 수를 유지하는 데 사용됩니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX64">
      <summary vsli:raw="An instantaneous counter that shows the most recently observed value. Used, for example, to maintain a simple count of a very large number of items or operations. It is the same as &lt;see cref=&quot;F:System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX32&quot; /&gt; except that it uses larger fields to accommodate larger values.">가장 최근에 관찰된 값을 표시하는 순간 카운터입니다. 예를 들어, 매우 많은 항목 또는 연산의 단순한 수를 유지하는 데 사용됩니다. 큰 값을 수용하기 위해 좀 더 큰 필드를 사용한다는 점을 제외하면 이 카운터 형식은 <see langword="NumberOfItemsHEX32" />와 같습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond32">
      <summary vsli:raw="A difference counter that shows the average number of operations completed during each second of the sample interval. Counters of this type measure time in ticks of the system clock. Counters of this type include System\ File Read Operations/sec.">샘플 기간에 초 당 완성되는 평균 작업 수를 표시하는 차이 카운터입니다. 이 형식의 카운터는 시스템 시계의 틱을 단위로 하여 시간을 측정합니다. 이 형식의 카운터에는 System\File Read Operations/sec가 포함됩니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond64">
      <summary vsli:raw="A difference counter that shows the average number of operations completed during each second of the sample interval. Counters of this type measure time in ticks of the system clock. This counter type is the same as the &lt;see cref=&quot;F:System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond32&quot; /&gt; type, but it uses larger fields to accommodate larger values to track a high-volume number of items or operations per second, such as a byte-transmission rate. Counters of this type include System\ File Read Bytes/sec.">샘플 기간에 초 당 완성되는 평균 작업 수를 표시하는 차이 카운터입니다. 이 형식의 카운터는 시스템 시계의 틱을 단위로 하여 시간을 측정합니다. 이 카운터 형식은 <see langword="RateOfCountsPerSecond32" /> 형식과 같지만 큰 값을 수용하기 위해 좀 더 큰 필드를 사용하여 초 당 많은 수의 항목 또는 작업을 추적합니다(예: 바이트 전송률). 이 형식의 카운터에는 System\File Read Bytes/sec가 포함됩니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.RawBase">
      <summary vsli:raw="A base counter that stores the denominator of a counter that presents a general arithmetic fraction. Check that this value is greater than zero before using it as the denominator in a &lt;see cref=&quot;F:System.Diagnostics.PerformanceCounterType.RawFraction&quot; /&gt; value calculation.">일반 산술 분수를 제공하는 카운터의 분모를 저장하는 기본 카운터입니다. 해당 값을 분모로 사용하여 <see langword="RawFraction" /> 값을 계산하려는 경우 이 값이 0보다 커야 합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.RawFraction">
      <summary vsli:raw="An instantaneous percentage counter that shows the ratio of a subset to its set as a percentage. For example, it compares the number of bytes in use on a disk to the total number of bytes on the disk. Counters of this type display the current percentage only, not an average over time. Counters of this type include Paging File\% Usage Peak.">해당 집합에 대한 하위 집합의 비율을 백분율로 표시하는 순간 백분율 카운터입니다. 예를 들어, 이 카운터는 디스크에서 사용되는 바이트 수를 디스크에 있는 총 바이트 수와 비교합니다. 이 형식의 카운터는 현재 백분율만 표시하며 시간 경과에 따른 평균은 표시하지 않습니다. 이 형식의 카운터에는 Paging File\% Usage Peak이 포함됩니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.SampleBase">
      <summary vsli:raw="A base counter that stores the number of sampling interrupts taken and is used as a denominator in the sampling fraction. The sampling fraction is the number of samples that were 1 (or &lt;see langword=&quot;true&quot; /&gt;) for a sample interrupt. Check that this value is greater than zero before using it as the denominator in a calculation of &lt;see cref=&quot;F:System.Diagnostics.PerformanceCounterType.SampleFraction&quot; /&gt;.">샘플링한 샘플링 인터럽트의 수를 저장하며 샘플링 분수에서 분모로 사용되는 기본 카운터입니다. 샘플링 분수는 샘플 인터럽트가1(또는 <see langword="true" />)인 샘플의 수입니다. 해당 값을 분모로 사용하여 <see langword="SampleFraction" />을 계산하려는 경우 이 값이 0보다 커야 합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.SampleCounter">
      <summary vsli:raw="An average counter that shows the average number of operations completed in one second. When a counter of this type samples the data, each sampling interrupt returns one or zero. The counter data is the number of ones that were sampled. It measures time in units of ticks of the system performance timer.">초 당 완성되는 평균 작업 수를 표시하는 평균 카운터입니다. 이 형식의 카운터가 데이터를 샘플링할 때 각 샘플링 인터럽트가 1 또는 0을 반환합니다. 카운터 데이터는 샘플링된 데이터 수입니다. 이는 시스템 성능 타이머의 틱을 단위로 하여 시간을 측정합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.SampleFraction">
      <summary vsli:raw="A percentage counter that shows the average ratio of hits to all operations during the last two sample intervals. Counters of this type include Cache\Pin Read Hits %.">마지막 두 샘플 기간 동안의 모든 작업에 대한 평균 적중 비율을 표시하는 백분율 카운터입니다. 이 형식의 카운터에는 Cache\Pin Read Hits %가 포함됩니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.Timer100Ns">
      <summary vsli:raw="A percentage counter that shows the active time of a component as a percentage of the total elapsed time of the sample interval. It measures time in units of 100 nanoseconds (ns). Counters of this type are designed to measure the activity of one component at a time. Counters of this type include Processor\% User Time.">구성 요소의 활성 시간을 샘플 기간의 총 경과 시간에 대한 백분율로 표시하는 백분율 카운터입니다. 이 카운터는 100나노초(ns)를 단위로 하여 시간을 측정합니다. 이 형식의 카운터는 한 번에 하나의 구성 요소에 대한 작업을 측정하도록 설계되었습니다. 이 형식의 카운터에는 Processor\% User Time이 포함됩니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterType.Timer100NsInverse">
      <summary vsli:raw="A percentage counter that shows the average percentage of active time observed during the sample interval. This is an inverse counter. Counters of this type include Processor\% Processor Time.">샘플 기간 동안 관찰되는 활성 시간의 평균 백분율을 표시하는 백분율 카운터입니다. 이는 역 카운터입니다. 이 형식의 카운터에는 Processor\% Processor Time이 포함됩니다.</summary>
    </member>
    <member name="T:System.Diagnostics.PerformanceData.CounterData">
      <summary vsli:raw="Contains the raw data for a counter.">카운터의 원시 데이터가 들어 있습니다.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterData.Decrement">
      <summary vsli:raw="Decrements the counter value by 1.">카운터 값이 1만큼 감소합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterData.Increment">
      <summary vsli:raw="Increments the counter value by 1.">카운터 값이 1만큼 증가합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterData.IncrementBy(System.Int64)">
      <summary vsli:raw="Increments the counter value by the specified amount.">카운터 값이 지정된 양만큼 증가합니다.</summary>
      <param name="value" vsli:raw="The amount by which to increment the counter value. The increment value can be positive or negative.">카운터 값이 증가할 양입니다. 증가 값은 양수 또는 음수가 될 수 있습니다.</param>
    </member>
    <member name="P:System.Diagnostics.PerformanceData.CounterData.RawValue">
      <summary vsli:raw="Gets or sets the raw counter data.">원시 카운터 데이터를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The raw counter data.">원시 카운터 데이터입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceData.CounterData.Value">
      <summary vsli:raw="Gets or sets the counter data.">카운터 데이터를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The counter data.">카운터 데이터입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.PerformanceData.CounterSet">
      <summary vsli:raw="Defines a set of logical counters.">논리 카운터 집합을 정의합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSet.#ctor(System.Guid,System.Guid,System.Diagnostics.PerformanceData.CounterSetInstanceType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Diagnostics.PerformanceData.CounterSet&quot; /&gt; class.">
        <see cref="T:System.Diagnostics.PerformanceData.CounterSet" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="providerGuid" vsli:raw="Guid that uniquely identifies the provider of the counter data. Use the Guid specified in the manifest.">카운터 데이터의 공급자를 고유하게 식별하는 GUID입니다. 매니페스트에 지정된 GUID를 사용해야 합니다.</param>
      <param name="counterSetGuid" vsli:raw="Guid that uniquely identifies the counter set for a provider. Use the Guid specified in the manifest.">공급자의 카운터 집합을 고유하게 식별하는 GUID입니다. 매니페스트에 지정된 GUID를 사용해야 합니다.</param>
      <param name="instanceType" vsli:raw="Identifies the type of the counter set, for example, whether the counter set is a single or multiple instance counter set.">카운터 집합의 형식을 식별합니다. 예를 들어 카운터 집합이 단일 인스턴스인지 아니면 여러 인스턴스인지 여부를 식별합니다.</param>
      <exception cref="T:System.InsufficientMemoryException" vsli:raw="Not enough memory is available to complete the operation.">메모리가 부족 하 여 작업을 완료할 수 없습니다.</exception>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw="Not supported prior to Windows Vista.">Windows Vista 이전 버전이므로 지원되지 않는 경우</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="One of the parameters is NULL or not valid.">매개 변수 중 하나가 NULL이거나 잘못된 경우</exception>
      <exception cref="T:System.ComponentModel.Win32Exception" vsli:raw="An underlying Win32 function call failed.">내부 Win32 함수 호출에 실패한 경우</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType)">
      <summary vsli:raw="Adds a counter to the counter set by using the specified counter identifier and type.">지정된 카운터 식별자 및 형식을 사용하여 카운터 집합에 카운터를 추가합니다.</summary>
      <param name="counterId" vsli:raw="Identifies the counter. Use the same value that you used in the manifest to define the counter.">카운터를 식별합니다. 매니페스트에서 카운터를 정의하는 데 사용한 것과 동일한 값을 사용해야 합니다.</param>
      <param name="counterType" vsli:raw="Identifies the counter type. The counter type determines how the counter data is calculated, averaged, and displayed.">카운터 형식을 식별합니다. 카운터 형식은 카운터 데이터를 계산하고 평균을 구하여 표시하는 방법을 결정합니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The counter identifier already exists in the set or is negative, or the counter type is NULL or not valid.">카운터 식별자가 이미 집합에 있거나 음수이거나 NULL이거나 잘못된 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="You cannot add counters to the counter set after creating an instance of the counter set.">카운터 집합의 인스턴스를 만든 후 카운터 집합에 카운터를 추가한 경우</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType,System.String)">
      <summary vsli:raw="Adds a counter to the counter set by using the specified counter identifier and type and a display name for the counter.">지정된 카운터 식별자, 카운터 형식 및 표시 이름을 사용하여 카운터 집합에 카운터를 추가합니다.</summary>
      <param name="counterId" vsli:raw="Identifies the counter. Use the same value that you used in the manifest to define the counter.">카운터를 식별합니다. 매니페스트에서 카운터를 정의하는 데 사용한 것과 동일한 값을 사용해야 합니다.</param>
      <param name="counterType" vsli:raw="Identifies the counter type. The counter type determines how the counter data is calculated, averaged, and displayed.">카운터 형식을 식별합니다. 카운터 형식은 카운터 데이터를 계산하고 평균을 구하여 표시하는 방법을 결정합니다.</param>
      <param name="counterName" vsli:raw="Name of the counter. You can use this name to index the counter in the counter set instance. (See &lt;see cref=&quot;P:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Item(System.String)&quot; /&gt;.)">카운터의 이름입니다. 이 이름을 사용하여 카운터 집합 인스턴스에서 카운터를 인덱싱할 수 있습니다. <see cref="P:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Item(System.String)" />을 참조하십시오.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The counter identifier already exists in the set or is negative, or the counter type is NULL or not valid.">카운터 식별자가 이미 집합에 있거나 음수이거나 NULL이거나 잘못된 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="You cannot add counters to the counter set after creating an instance of the counter set.">카운터 집합의 인스턴스를 만든 후 카운터 집합에 카운터를 추가한 경우</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance(System.String)">
      <summary vsli:raw="Creates an instance of the counter set.">카운터 집합의 인스턴스를 만듭니다.</summary>
      <param name="instanceName" vsli:raw="Name of the instance. The name must be unique.">인스턴스 이름입니다. 이름은 고유해야 합니다.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The instance name is NULL.">인스턴스 이름이 NULL인 경우</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="You must add counters to the counter set before creating an instance of the counter set.">카운터 집합의 인스턴스를 만들기 전에 카운터 집합에 카운터를 추가한 경우</exception>
      <returns vsli:raw="An instance of the counter set which will contain the counter data.">카운터 데이터를 포함할 카운터 집합의 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSet.Dispose">
      <summary vsli:raw="Releases all unmanaged resources used by this object.">이 개체에서 사용하는 관리되지 않는 리소스를 모두 해제합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSet.Dispose(System.Boolean)">
      <summary vsli:raw="Releases all unmanaged resources used by this object and optionally release the managed resources.">이 개체에서 사용하는 관리되지 않는 모든 리소스를 해제하고, 관리되는 리소스를 선택적으로 해제합니다.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;True&quot; /&gt; if this was called from the Dispose method, &lt;see langword=&quot;False&quot; /&gt; if called from the finalizer.">Dispose 메서드에서 호출된 경우 <see langword="True" />이고, 종료자에서 호출된 경우 <see langword="False" />입니다.</param>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSet.Finalize">
      <summary vsli:raw="Frees resources before the object is reclaimed by garbage collection.">가비지 수집에서 개체를 회수해 넣기 전에 리소스를 해제합니다.</summary>
    </member>
    <member name="T:System.Diagnostics.PerformanceData.CounterSetInstance">
      <summary vsli:raw="Creates an instance of the logical counters defined in the &lt;see cref=&quot;T:System.Diagnostics.PerformanceData.CounterSet&quot; /&gt; class.">
        <see cref="T:System.Diagnostics.PerformanceData.CounterSet" /> 클래스에서 정의된 논리 카운터의 인스턴스를 만듭니다.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSetInstance.Dispose">
      <summary vsli:raw="Releases all unmanaged resources used by this object.">이 개체에서 사용하는 관리되지 않는 리소스를 모두 해제합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSetInstance.Finalize">
      <summary vsli:raw="Releases unmanaged resources and performs other cleanup operations.">관리되지 않는 리소스를 해제하고 다른 정리 작업을 수행합니다.</summary>
    </member>
    <member name="P:System.Diagnostics.PerformanceData.CounterSetInstance.Counters">
      <summary vsli:raw="Retrieves the collection of counter data for the counter set instance.">카운터 집합 인스턴스에 대한 카운터 데이터의 컬렉션을 검색합니다.</summary>
      <returns vsli:raw="A collection of the counter data contained in the counter set instance.">카운터 집합 인스턴스에 포함된 카운터 데이터의 컬렉션입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet">
      <summary vsli:raw="Contains the collection of counter values.">카운터 값의 컬렉션이 들어 있습니다.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Dispose">
      <summary vsli:raw="Releases all unmanaged resources used by this object.">이 개체에서 사용하는 관리되지 않는 리소스를 모두 해제합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Finalize">
      <summary vsli:raw="Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.">가비지 컬렉션이 회수하기 전에 개체가 리소스를 해제하고 다른 정리 작업을 수행할 수 있게 합니다.</summary>
    </member>
    <member name="P:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Item(System.Int32)">
      <summary vsli:raw="Accesses a counter value in the collection by using the specified counter identifier.">지정된 카운터 식별자를 사용하여 컬렉션의 카운터 값에 액세스합니다.</summary>
      <param name="counterId" vsli:raw="Identifier of the counter. This is the identifier you used when you added the counter to the counter set.">카운터의 식별자입니다. 이는 카운터 집합에 카운터를 추가할 때 사용한 식별자입니다.</param>
      <returns vsli:raw="The counter data.">카운터 데이터입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Item(System.String)">
      <summary vsli:raw="Accesses a counter value in the collection by using the specified counter name.">지정된 카운터 이름을 사용하여 컬렉션의 카운터 값에 액세스합니다.</summary>
      <param name="counterName" vsli:raw="Name of the counter. This is the name that you used when you added the counter to the counter set.">카운터의 이름입니다. 이는 카운터 집합에 카운터를 추가할 때 사용한 이름입니다.</param>
      <returns vsli:raw="The counter data.">카운터 데이터입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.PerformanceData.CounterSetInstanceType">
      <summary vsli:raw="Specifies whether the counter set allows multiple instances such as processes and physical disks, or a single instance such as memory.">카운터 집합에 프로세스 및 실제 디스크와 같은 여러 인스턴스를 사용할 수 있는지 아니면 메모리와 같은 단일 인스턴스를 사용할 수 있는지를 지정합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.GlobalAggregate">
      <summary vsli:raw="The counter set contains single instance counters whose aggregate value is obtained from one or more sources. For example, a counter in this type of counter set might obtain the number of reads from each of the three hard disks on the computer and sum their values.">카운터 집합에 하나 이상의 소스에서 가져온 집계 값을 갖는 단일 인스턴스 카운터가 들어 있습니다. 예를 들어 이 형식의 카운터 집합에 있는 카운터는 컴퓨터에 있는 하드 디스크 세 대에서 읽은 바이트 수를 각각 가져와 모두 더할 수 있습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.GlobalAggregateWithHistory">
      <summary vsli:raw="This type is similar to &lt;see cref=&quot;F:System.Diagnostics.PerformanceData.CounterSetInstanceType.GlobalAggregate&quot; /&gt; except that this counter set type stores all counter values for the lifetime of the consumer application (the counter value is cached beyond the lifetime of the counter). For example, if one of the hard disks in the global aggregate example were to become unavailable, the total bytes read by that disk would still be available and used to calculate the aggregate value.">이 형식은 <see cref="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.GlobalAggregate" />와 비슷하지만 이 카운터 집합 형식에는 소비자 애플리케이션의 전체 수명 동안 수집한 모든 카운터 값이 저장된다는 점이 다릅니다. 카운터 값은 카운터 수명이 경과된 이후에도 캐시됩니다. 예를 들어 위에 나와 있는 전역 집계 예제에서 하드 디스크 중 하나를 사용할 수 없게 되어도 해당 디스크에서 읽은 총 바이트 수를 계속 사용하여 집계 값을 계산할 수 있습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.InstanceAggregate">
      <summary vsli:raw="This type is similar to &lt;see cref=&quot;F:System.Diagnostics.PerformanceData.CounterSetInstanceType.MultipleAggregate&quot; /&gt;, except that instead of aggregating all instance data to one aggregated (_Total) instance, it will aggregate counter data from instances of the same name. For example, if multiple provider processes contained instances named IExplore, &lt;see cref=&quot;F:System.Diagnostics.PerformanceData.CounterSetInstanceType.Multiple&quot; /&gt; and &lt;see cref=&quot;F:System.Diagnostics.PerformanceData.CounterSetInstanceType.MultipleAggregate&quot; /&gt; CounterSet will show multiple IExplore instances (IExplore, IExplore#1, IExplore#2, and so on); however, a &lt;see cref=&quot;F:System.Diagnostics.PerformanceData.CounterSetInstanceType.InstanceAggregate&quot; /&gt; instance type will publish only one IExplore instance with aggregated counter data from all instances named IExplore.">이 형식은 <see cref="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.MultipleAggregate" />와 비슷하지만 모든 인스턴스 데이터를 단일 집계 인스턴스(_Total)로 집계하는 대신 이름이 같은 인스턴스의 카운터 데이터를 집계한다는 점이 다릅니다. 예를 들어 여러 공급자 프로세스에 IExplore라는 인스턴스가 들어 있는 경우 <see cref="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.Multiple" /> 및 <see cref="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.MultipleAggregate" /> CounterSet은 IExplore, IExplore#1, IExplore#2 등의 여러 IExplore 인스턴스를 표시하지만 <see cref="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.InstanceAggregate" /> 인스턴스 형식은 IExplore라는 모든 인스턴스의 카운터 데이터를 집계하여 하나의 IExplore 인스턴스만 게시합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.Multiple">
      <summary vsli:raw="The counter set contains multiple instance counters, for example, a counter that measures the average disk I/O for a process.">카운터 집합에 프로세스의 평균 디스크 I/O를 측정하는 카운터와 같은 여러 인스턴스 카운터가 들어 있습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.MultipleAggregate">
      <summary vsli:raw="The counter set contains multiple instance counters whose aggregate value is obtained from all instances of the counter. For example, a counter in this type of counter set might obtain the total thread execution time for all threads in a multithreaded application and sum their values.">카운터 집합에 카운터의 모든 인스턴스에서 가져온 집계 값을 갖는 여러 인스턴스 카운터가 들어 있습니다. 예를 들어 이 형식의 카운터 집합에 있는 카운터는 다중 스레드 애플리케이션의 모든 스레드에서 총 스레드 실행 시간을 가져와 모두 더할 수 있습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterSetInstanceType.Single">
      <summary vsli:raw="The counter set contains single instance counters, for example, a counter that measures physical memory.">카운터 집합에 실제 메모리를 측정하는 카운터와 같은 단일 카운터 인스턴스가 들어 있습니다.</summary>
    </member>
    <member name="T:System.Diagnostics.PerformanceData.CounterType">
      <summary vsli:raw="Defines the possible types of counters. Each counter is assigned a counter type. The counter type determines how the counter data is calculated, averaged, and displayed.">카운터의 가능한 형식을 정의합니다. 각 카운터에는 카운터 형식이 할당됩니다. 카운터 형식은 카운터 데이터를 계산하고 평균을 구하여 표시하는 방법을 결정합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.AverageBase">
      <summary vsli:raw="This counter is used as the base data (denominator) in the computation of time or count averages for the &lt;see cref=&quot;F:System.Diagnostics.PerformanceData.CounterType.AverageCount64&quot; /&gt; and &lt;see cref=&quot;F:System.Diagnostics.PerformanceData.CounterType.AverageTimer32&quot; /&gt; counter types. This counter type collects the last observed value only. (See the PERF_AVERAGE_BASE counter type in the deployment kit.)">이 카운터는 <see cref="F:System.Diagnostics.PerformanceData.CounterType.AverageCount64" /> 및 <see cref="F:System.Diagnostics.PerformanceData.CounterType.AverageTimer32" /> 카운터 형식에서 시간을 계산하거나 평균을 구할 때 기본 데이터(분모)로 사용됩니다. 이 카운터 형식은 마지막으로 관찰된 값만 수집합니다. 자세한 내용은 배포 키트에서 PERF_AVERAGE_BASE 카운터 형식을 참조하십시오.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.AverageCount64">
      <summary vsli:raw="This counter type shows how many items are processed, on average, during an operation. Counters of this type display a ratio of the items processed (such as bytes sent) to the number of operations completed. The ratio is calculated by comparing the number of items processed during the last interval to the number of operations completed during the last interval. (See the PERF_AVERAGE_BULK counter type in the deployment kit.)">이 카운터 형식은 작업 도중 처리된 평균 항목 수를 표시합니다. 이 형식의 카운터는 완료된 작업 수에 대한 처리된 항목(예: 전송된 바이트 수)의 비율을 표시합니다. 이 비율은 마지막 기간 동안 처리되는 항목의 수를 해당 기간 동안 완성되는 작업의 수와 비교하여 계산됩니다. 자세한 내용은 배포 키트에서 PERF_AVERAGE_BULK 카운터 형식을 참조하십시오.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.AverageTimer32">
      <summary vsli:raw="This counter type measures the average time it takes to complete a process or operation. Counters of this type display a ratio of the total elapsed time of the sample interval to the number of processes or operations completed during that time. This counter type measures time in ticks of the system clock. (See the PERF_AVERAGE_TIMER counter type in the deployment kit.)">이 카운터 형식은 프로세스나 작업을 완료하는 데 걸리는 평균 시간을 측정합니다. 이 형식의 카운터는 샘플 기간 동안 완성되는 프로세스나 작업의 수에 대한 해당 기간의 총 경과 시간의 비율을 표시합니다. 이 카운터 형식은 시스템 시계의 틱을 단위로 하여 시간을 측정합니다. 자세한 내용은 배포 키트에서 PERF_AVERAGE_TIMER 카운터 형식을 참조하십시오.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.Delta32">
      <summary vsli:raw="This counter type shows the change in the measured attribute between the two most recent sample intervals. (See the PERF_COUNTER_DELTA counter type in the deployment kit.)">이 카운터 형식은 가장 최근의 두 샘플 기간 사이에 측정된 특성의 변경 내용을 표시합니다. 자세한 내용은 배포 키트에서 PERF_COUNTER_DELTA 카운터 형식을 참조하십시오.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.Delta64">
      <summary vsli:raw="This counter type shows the change in the measured attribute between the two most recent sample intervals. It is the same as the &lt;see cref=&quot;F:System.Diagnostics.PerformanceData.CounterType.Delta32&quot; /&gt; counter type, except that it uses larger fields to accommodate larger values. (See the PERF_COUNTER_LARGE_DELTA counter type in the deployment kit.)">이 카운터 형식은 가장 최근의 두 샘플 기간 사이에 측정된 특성의 변경 내용을 표시합니다. 이 형식은 <see cref="F:System.Diagnostics.PerformanceData.CounterType.Delta32" /> 카운터 형식과 같지만 보다 큰 값을 수용할 수 있도록 더 큰 필드를 사용한다는 점이 다릅니다. 자세한 내용은 배포 키트에서 PERF_COUNTER_LARGE_DELTA 카운터 형식을 참조하십시오.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.ElapsedTime">
      <summary vsli:raw="This counter type shows the total time between when the component or process started and the time when this value is calculated. (See the PERF_ELAPSED_TIME counter type in the deployment kit.)">이 카운터 형식은 구성 요소나 프로세스가 시작된 시간과 이 값이 계산되는 시간 사이의 총 시간을 표시합니다. 자세한 내용은 배포 키트에서 PERF_ELAPSED_TIME 카운터 형식을 참조하십시오.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.LargeQueueLength">
      <summary vsli:raw="This counter type monitors the average length of a queue to a resource over time. Counters of this type display the difference between the queue lengths observed during the last two sample intervals, divided by the duration of the interval. This counter type is the same as the &lt;see cref=&quot;F:System.Diagnostics.PerformanceData.CounterType.QueueLength&quot; /&gt; counter type, except that it uses larger fields to accommodate larger values. (See the PERF_COUNTER_LARGE_QUEUELEN_TYPE counter type in the deployment kit.)">이 카운터 형식은 일정 시간 동안 리소스 큐의 평균 길이를 모니터링합니다. 이 형식의 카운터는 기간별로 나누어진 마지막 두 샘플 기간 중에 관찰되는 큐 길이 간 차이를 표시합니다. 이 카운터 형식은 <see cref="F:System.Diagnostics.PerformanceData.CounterType.QueueLength" /> 카운터 형식과 같지만 보다 큰 값을 수용할 수 있도록 더 큰 필드를 사용한다는 점이 다릅니다. 자세한 내용은 배포 키트에서 PERF_COUNTER_LARGE_QUEUELEN_TYPE 카운터 형식을 참조하십시오.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerBase">
      <summary vsli:raw="Indicates the number of items sampled. It is used as the denominator in the calculations to get an average among the items sampled when taking timings of multiple, but similar, items. This type supports the following counter types: &lt;see cref=&quot;F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageActive&quot; /&gt;, &lt;see cref=&quot;F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageNotActive&quot; /&gt;, &lt;see cref=&quot;F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageActive100Ns&quot; /&gt;, and &lt;see cref=&quot;F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageNotActive100Ns&quot; /&gt;.">샘플링된 항목 수를 나타냅니다. 이 수는 서로 비슷한 여러 항목의 타이밍을 측정할 때 샘플링된 항목의 평균을 구하는 계산에서 분모로 사용됩니다. 이 형식은 카운터 형식 <see cref="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageActive" />, <see cref="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageNotActive" />, <see cref="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageActive100Ns" /> 및 <see cref="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageNotActive100Ns" />를 지원합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageActive">
      <summary vsli:raw="This counter type is a multitimer. Multitimers collect data from more than one instance of a component, such as a processor or disk. Counters of this type display the active time of one or more components as a percentage of the total time of the sample interval. Because the numerator records the active time of components operating simultaneously, the resulting percentage can exceed 100 percent. This counter type differs from &lt;see cref=&quot;F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageActive100Ns&quot; /&gt; in that it measures time in units of ticks of the system performance timer, rather than in 100 nanosecond units. (See the PERF_COUNTER_MULTI_TIMER counter type in the deployment kit.)">이 카운터 형식은 멀티타이머입니다. 멀티타이머는 둘 이상의 구성 요소 인스턴스에서 데이터를 수집합니다(예: 프로세서 또는 디스크). 이 형식의 카운터는 하나 이상의 구성 요소에 대한 활성 시간을 샘플 기간의 총 시간에 대한 백분율로 표시합니다. 분자는 동시에 작동하는 구성 요소의 활성 시간을 기록하므로 결과 백분율은 100%를 초과할 수 있습니다. 이 카운터 형식은 100나노초가 아닌 시스템 성능 타이머의 틱을 단위로 하여 시간을 측정한다는 점에서 <see cref="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageActive100Ns" />와는 다릅니다. 자세한 내용은 배포 키트에서 PERF_COUNTER_MULTI_TIMER 카운터 형식을 참조하십시오.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageActive100Ns">
      <summary vsli:raw="This counter type shows the active time of one or more components as a percentage of the total time of the sample interval. It measures time in 100 nanosecond units. This counter type is a multitimer. Multitimers are designed to monitor more than one instance of a component, such as a processor or disk. (See the PERF_100NSEC_MULTI_TIMER counter type in the deployment kit.)">이 카운터 형식은 하나 이상의 구성 요소에 대한 활성 시간을 샘플 기간의 총 시간에 대한 백분율로 표시합니다. 시간은 100나노초 단위로 측정됩니다. 이 카운터 형식은 멀티타이머입니다. 멀티타이머는 둘 이상의 구성 요소 인스턴스를 모니터링하도록 설계되었습니다(예: 프로세서 또는 디스크). 자세한 내용은 배포 키트에서 PERF_100NSEC_MULTI_TIMER 카운터 형식을 참조하십시오.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageNotActive">
      <summary vsli:raw="This counter type shows the active time of one or more components as a percentage of the total time of the sample interval. This counter type is an inverse multitimer. Multitimers monitor more than one instance of a component, such as a processor or disk. Inverse counters measure the time that a component is not active and derive the active time from that measurement. This counter differs from &lt;see cref=&quot;F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageNotActive100Ns&quot; /&gt; in that it measures time in units of ticks of the system performance timer, rather than in 100 nanosecond units. (See the PERF_COUNTER_MULTI_TIMER_INV counter type in the deployment kit.)">이 카운터 형식은 하나 이상의 구성 요소에 대한 활성 시간을 샘플 기간의 총 시간에 대한 백분율로 표시합니다. 이 카운터 형식은 멀티타이머와는 정반대입니다. 멀티타이머는 둘 이상의 구성 요소 인스턴스를 모니터링합니다(예: 프로세서 또는 디스크). 역 카운터는 구성 요소가 비활성 상태인 시간을 측정한 다음 이 측정 값으로부터 활성 시간을 구합니다. 이 카운터는 100나노초가 아닌 시스템 성능 타이머의 틱을 단위로 하여 시간을 측정한다는 점에서 <see cref="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageNotActive100Ns" />와는 다릅니다. 자세한 내용은 배포 키트에서 PERF_COUNTER_MULTI_TIMER_INV 카운터 형식을 참조하십시오.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.MultiTimerPercentageNotActive100Ns">
      <summary vsli:raw="This counter type shows the active time of one or more components as a percentage of the total time of the sample interval. Counters of this type measure time in 100 nanosecond units. This counter type is an inverse multitimer. Multitimers are designed to monitor more than one instance of a component, such as a processor or disk. Inverse counters measure the time that a component is not active and derive its active time from the measurement of inactive time. (See the PERF_100NSEC_MULTI_TIMER_INV counter type in the deployment kit.)">이 카운터 형식은 하나 이상의 구성 요소에 대한 활성 시간을 샘플 기간의 총 시간에 대한 백분율로 표시합니다. 이 형식의 카운터는 시간을 100나노초 단위로 측정합니다. 이 카운터 형식은 멀티타이머와는 정반대입니다. 멀티타이머는 둘 이상의 구성 요소 인스턴스를 모니터링하도록 설계되었습니다(예: 프로세서 또는 디스크). 역 카운터는 구성 요소가 비활성 상태로 유지된 시간을 측정한 다음 이 측정 값으로부터 활성 시간을 구합니다. 자세한 내용은 배포 키트에서 PERF_100NSEC_MULTI_TIMER_INV 카운터 형식을 참조하십시오.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.ObjectSpecificTimer">
      <summary vsli:raw="This 64-bit counter type is a timer that displays in object-specific units. (See the PERF_OBJ_TIME_TIMER counter type in the deployment kit.)">이 64비트 카운터 형식은 개체별 단위로 표시되는 타이머입니다. 자세한 내용은 배포 키트에서 PERF_OBJ_TIME_TIMER 카운터 형식을 참조하십시오.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.PercentageActive">
      <summary vsli:raw="This counter type shows the average time that a component was active as a percentage of the total sample time. (See the PERF_COUNTER_TIMER counter type in the deployment kit.)">이 카운터 형식은 구성 요소가 활성 상태인 평균 시간을 총 샘플 시간에 대한 백분율로 표시합니다. 자세한 내용은 배포 키트에서 PERF_COUNTER_TIMER 카운터 형식을 참조하십시오.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.PercentageActive100Ns">
      <summary vsli:raw="This counter type shows the active time of a component as a percentage of the total elapsed time of the sample interval. It measures time in units of 100 nanoseconds. Counters of this type are designed to measure the activity of one component at a time. (See the PERF_100NSEC_TIMER counter type in the deployment kit.)">이 카운터 형식은 구성 요소의 활성 시간을 샘플 기간의 총 경과 시간에 대한 백분율로 표시합니다. 시간은 100나노초 단위로 측정됩니다. 이 형식의 카운터는 한 번에 하나의 구성 요소에 대한 작업을 측정하도록 설계되었습니다. 자세한 내용은 배포 키트에서 PERF_100NSEC_TIMER 카운터 형식을 참조하십시오.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.PercentageNotActive">
      <summary vsli:raw="This is an inverse counter type. Inverse counters measure the time that a component is not active and derive the active time from that measurement. Counters of this type display the average percentage of active time observed during sample interval. The value of these counters is calculated by monitoring the percentage of time that the service was inactive and then subtracting that value from 100 percent. This counter type is the same as the &lt;see cref=&quot;F:System.Diagnostics.PerformanceData.CounterType.PercentageNotActive100Ns&quot; /&gt; counter type, except that it measures time in units of ticks of the system performance timer, rather than in 100 nanosecond units. (See the PERF_COUNTER_TIMER_INV counter type in the deployment kit.)">이 형식은 카운터 형식과는 정반대입니다. 역 카운터는 구성 요소가 비활성 상태인 시간을 측정한 다음 이 측정 값으로부터 활성 시간을 구합니다. 이 형식의 카운터는 샘플 기간 동안 관찰되는 활성 시간의 평균 백분율을 표시합니다. 이러한 카운터의 값은 서비스가 비활성 상태인 시간의 백분율을 모니터링한 다음 이 값을 100%에서 빼서 계산합니다. 이 카운터 형식은 <see cref="F:System.Diagnostics.PerformanceData.CounterType.PercentageNotActive100Ns" /> 카운터 형식과 같지만 시간을 100나노초 단위가 아닌 시스템 성능 타이머의 틱 단위로 측정한다는 점이 다릅니다. 자세한 내용은 배포 키트에서 PERF_COUNTER_TIMER_INV 카운터 형식을 참조하십시오.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.PercentageNotActive100Ns">
      <summary vsli:raw="This counter type shows the average percentage of active time observed during the sample interval. This is an inverse counter. Inverse counters are calculated by monitoring the percentage of time that the service was inactive and then subtracting that value from 100 percent. (See the PERF_100NSEC_TIMER_INV counter type in the deployment kit.)">이 카운터 형식은 샘플 기간 동안 관찰되는 활성 시간의 평균 백분율을 표시합니다. 이는 역 카운터입니다. 역 카운터의 값은 서비스가 비활성 상태인 시간의 백분율을 모니터링한 다음 이 값을 100%에서 빼서 계산합니다. 자세한 내용은 배포 키트에서 PERF_100NSEC_TIMER_INV 카운터 형식을 참조하십시오.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.PrecisionObjectSpecificTimer">
      <summary vsli:raw="This counter type shows a value that consists of two counter values: the count of the elapsed time of the event being monitored, and the frequency specified in the PerfFreq field of the object header. This counter type differs from other counter timers in that the clock tick value accompanies the counter value so as to eliminate any possible difference due to latency from the function call. Precision counter types are used when standard system timers are not precise enough for accurate readings. (See the PERF_PRECISION_OBJECT_TIMER counter type in the deployment kit.)">이 카운터 형식은 두 카운터 값으로 구성된 값을 보여 줍니다. 첫 번째 값은 모니터링되는 이벤트의 경과 시간이고, 두 번째 값은 개체 헤더의 PerfFreq 필드에 지정된 빈도입니다. 이 카운터 형식은 시계 틱 값이 카운터 값과 함께 사용되므로 함수 호출에 따르는 지연으로 인한 오차가 없다는 점에서 다른 카운터 타이머와 다릅니다. 정밀 카운터 형식은 표준 시스템 타이머의 정밀도가 부족한 경우에 사용됩니다. 자세한 내용은 배포 키트에서 PERF_PRECISION_OBJECT_TIMER 카운터 형식을 참조하십시오.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.PrecisionSystemTimer">
      <summary vsli:raw="This counter type shows a value that consists of two counter values: the count of the elapsed time of the event being monitored, and the frequency from the system performance timer. This counter type differs from other counter timers in that the clock tick value accompanies the counter value, eliminating any possible difference due to latency from the function call. Precision counter types are used when standard system timers are not precise enough for accurate readings. (See the PERF_PRECISION_TIMER counter type in the deployment kit.)">이 카운터 형식은 두 카운터 값으로 구성된 값을 보여 줍니다. 첫 번째 값은 모니터링되는 이벤트의 경과 시간이고, 두 번째 값은 시스템 성능 타이머의 빈도입니다. 이 카운터 형식은 시계 틱 값이 카운터 값과 함께 사용되므로 함수 호출에 따르는 지연으로 인한 오차가 없다는 점에서 다른 카운터 타이머와 다릅니다. 정밀 카운터 형식은 표준 시스템 타이머의 정밀도가 부족한 경우에 사용됩니다. 자세한 내용은 배포 키트에서 PERF_PRECISION_TIMER 카운터 형식을 참조하십시오.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.PrecisionTimer100Ns">
      <summary vsli:raw="This counter type shows a value that consists of two counter values: the count of the elapsed time of the event being monitored, and the &quot;clock&quot; time from a private timer in the same units. It measures time in 100 nanosecond units. This counter type differs from other counter timers in that the clock tick value accompanies the counter value eliminating any possible difference due to latency from the function call. Precision counter types are used when standard system timers are not precise enough for accurate readings. (See the PERF_PRECISION_100NS_TIMER counter type in the deployment kit.)">이 카운터 형식은 두 카운터 값으로 구성된 값을 보여 줍니다. 첫 번째 값은 모니터링되는 이벤트의 경과 시간이고, 두 번째 값은 같은 단위의 프라이빗 타이머에서 가져온 "시계" 시간입니다. 시간은 100나노초 단위로 측정됩니다. 이 카운터 형식은 시계 틱 값이 카운터 값과 함께 사용되므로 함수 호출에 따르는 지연으로 인한 오차가 없다는 점에서 다른 카운터 타이머와 다릅니다. 정밀 카운터 형식은 표준 시스템 타이머의 정밀도가 부족한 경우에 사용됩니다. 자세한 내용은 배포 키트에서 PERF_PRECISION_100NS_TIMER 카운터 형식을 참조하십시오.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.QueueLength">
      <summary vsli:raw="This counter type is designed to monitor the average length of a queue to a resource over time. It shows the difference between the queue lengths observed during the last two sample intervals divided by the duration of the interval. (See the PERF_COUNTER_QUEUELEN_TYPE counter type in the deployment kit.)">이 카운터 형식은 일정 시간 동안 리소스 큐의 평균 길이를 모니터링하도록 설계되었습니다. 기간별로 나누어진 마지막 두 샘플 기간 중에 관찰되는 큐 길이 간 차이를 표시합니다. 자세한 내용은 배포 키트에서 PERF_COUNTER_QUEUELEN_TYPE 카운터 형식을 참조하십시오.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.QueueLength100Ns">
      <summary vsli:raw="This counter type measures the queue-length space-time product using a 100-nanosecond time base. (See the PERF_COUNTER_100NS_QUEUELEN_TYPE counter type in the deployment kit.)">이 카운터 형식은 100나노초 시간 기준을 사용하여 큐 길이와 시간의 곱을 측정합니다. 자세한 내용은 배포 키트에서 PERF_COUNTER_100NS_QUEUELEN_TYPE 카운터 형식을 참조하십시오.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.QueueLengthObjectTime">
      <summary vsli:raw="This counter type measures the queue-length space-time product using an object-specific time base. (See the PERF_COUNTER_OBJ_QUEUELEN_TYPE counter type in the deployment kit.)">이 카운터 형식은 개체별 시간 기준을 사용하여 큐 길이와 시간의 곱을 측정합니다. 자세한 내용은 배포 키트에서 PERF_COUNTER_OBJ_QUEUELEN_TYPE 카운터 형식을 참조하십시오.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RateOfCountPerSecond32">
      <summary vsli:raw="This counter type shows the average number of operations completed during each second of the sample interval. Counters of this type measure time in ticks of the system clock. (See the PERF_COUNTER_COUNTER counter type in the deployment kit.)">이 카운터 형식은 샘플 기간 동안 1초마다 완료되는 작업 수를 표시합니다. 이 형식의 카운터는 시스템 시계의 틱을 단위로 하여 시간을 측정합니다. 자세한 내용은 배포 키트에서 PERF_COUNTER_COUNTER 카운터 형식을 참조하십시오.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RateOfCountPerSecond64">
      <summary vsli:raw="This counter type shows the average number of operations completed during each second of the sample interval. Counters of this type measure time in ticks of the system clock. This counter type is the same as the &lt;see cref=&quot;F:System.Diagnostics.PerformanceData.CounterType.RateOfCountPerSecond32&quot; /&gt; type, but it uses larger fields to accommodate larger values. (See the PERF_COUNTER_BULK_COUNT counter type in the deployment kit.)">이 카운터 형식은 샘플 기간 동안 1초마다 완료되는 작업 수를 표시합니다. 이 형식의 카운터는 시스템 시계의 틱을 단위로 하여 시간을 측정합니다. 이 카운터 형식은 <see cref="F:System.Diagnostics.PerformanceData.CounterType.RateOfCountPerSecond32" /> 형식과 같지만 보다 큰 값을 수용할 수 있도록 더 큰 필드를 사용하는 점이 다릅니다. 자세한 내용은 배포 키트에서 PERF_COUNTER_BULK_COUNT 카운터 형식을 참조하십시오.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawBase32">
      <summary vsli:raw="This counter type collects the last observed value only. The value is used as the denominator of a counter that presents a general arithmetic fraction. This type supports the &lt;see cref=&quot;F:System.Diagnostics.PerformanceData.CounterType.RawFraction32&quot; /&gt; counter type. (See the PERF_RAW_BASE counter type in the deployment kit.)">이 카운터 형식은 마지막으로 관찰된 값만 수집합니다. 이 값은 일반 산술 분수를 제공하는 카운터의 분모로 사용됩니다. 이 형식은 <see cref="F:System.Diagnostics.PerformanceData.CounterType.RawFraction32" /> 카운터 형식을 지원합니다. 자세한 내용은 배포 키트에서 PERF_RAW_BASE 카운터 형식을 참조하십시오.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawBase64">
      <summary vsli:raw="This counter type collects the last observed value. It is the same as the &lt;see cref=&quot;F:System.Diagnostics.PerformanceData.CounterType.RawBase32&quot; /&gt; counter type except that it uses larger fields to accommodate larger values. This type supports the &lt;see cref=&quot;F:System.Diagnostics.PerformanceData.CounterType.RawFraction64&quot; /&gt; counter type. (See the PERF_LARGE_RAW_BASE counter type in the deployment kit.)">이 카운터 형식은 마지막으로 관찰된 값을 수집합니다. 이 형식은 <see cref="F:System.Diagnostics.PerformanceData.CounterType.RawBase32" /> 카운터 형식과 같지만 보다 큰 값을 수용할 수 있도록 더 큰 필드를 사용한다는 점이 다릅니다. 이 형식은 <see cref="F:System.Diagnostics.PerformanceData.CounterType.RawFraction64" /> 카운터 형식을 지원합니다. 자세한 내용은 배포 키트에서 PERF_LARGE_RAW_BASE 카운터 형식을 참조하십시오.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawData32">
      <summary vsli:raw="This counter type shows the last observed value only. It does not display an average. (See the PERF_COUNTER_RAWCOUNT counter type in the deployment kit.)">이 카운터 형식은 마지막으로 관찰된 값만 표시합니다. 평균은 표시되지 않습니다. 자세한 내용은 배포 키트에서 PERF_COUNTER_RAWCOUNT 카운터 형식을 참조하십시오.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawData64">
      <summary vsli:raw="This counter type shows the last observed value only, not an average. It is the same as the &lt;see cref=&quot;F:System.Diagnostics.PerformanceData.CounterType.RawData32&quot; /&gt; counter type, except that it uses larger fields to accommodate larger values. (See the PERF_COUNTER_LARGE_RAWCOUNT counter type in the deployment kit.)">이 카운터 형식은 평균이 아닌 마지막으로 관찰된 값만 표시합니다. 이 형식은 <see cref="F:System.Diagnostics.PerformanceData.CounterType.RawData32" /> 카운터 형식과 같지만 보다 큰 값을 수용할 수 있도록 더 큰 필드를 사용한다는 점이 다릅니다. 자세한 내용은 배포 키트에서 PERF_COUNTER_LARGE_RAWCOUNT 카운터 형식을 참조하십시오.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawDataHex32">
      <summary vsli:raw="This counter type shows the most recently observed value, in hexadecimal format. It does not display an average. (See the PERF_COUNTER_RAWCOUNT_HEX counter type in the deployment kit.)">이 카운터 형식은 가장 최근에 관찰된 값을 16진수 형식으로 표시합니다. 평균은 표시되지 않습니다. 자세한 내용은 배포 키트에서 PERF_COUNTER_RAWCOUNT_HEX 카운터 형식을 참조하십시오.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawDataHex64">
      <summary vsli:raw="This counter type shows the last observed value, in hexadecimal format. It is the same as the &lt;see cref=&quot;F:System.Diagnostics.PerformanceData.CounterType.RawDataHex32&quot; /&gt; counter type, except that it uses larger fields to accommodate larger values. (See the PERF_COUNTER_LARGE_RAWCOUNT_HEX counter type in the deployment kit.)">이 카운터 형식은 마지막으로 관찰된 값을 16진수 형식으로 표시합니다. 이 형식은 <see cref="F:System.Diagnostics.PerformanceData.CounterType.RawDataHex32" /> 카운터 형식과 같지만 보다 큰 값을 수용할 수 있도록 더 큰 필드를 사용한다는 점이 다릅니다. 자세한 내용은 배포 키트에서 PERF_COUNTER_LARGE_RAWCOUNT_HEX 카운터 형식을 참조하십시오.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawFraction32">
      <summary vsli:raw="This counter type shows the ratio of a subset to its set as a percentage. For example, it compares the number of bytes in use on a disk to the total number of bytes on the disk. Counters of this type display the current percentage only, not an average over time. (See the PERF_RAW_FRACTION counter type in the deployment kit.)">이 카운터 형식은 전체 집합에 대한 부분 집합의 비율을 백분율로 표시합니다. 예를 들어, 이 카운터는 디스크에서 사용되는 바이트 수를 디스크에 있는 총 바이트 수와 비교합니다. 이 형식의 카운터는 현재 백분율만 표시하며 시간 경과에 따른 평균은 표시하지 않습니다. 자세한 내용은 배포 키트에서 PERF_RAW_FRACTION 카운터 형식을 참조하십시오.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.RawFraction64">
      <summary vsli:raw="This counter type shows the ratio of a subset to its set as a percentage. For example, it compares the number of bytes in use on a disk to the total number of bytes on the disk. Counters of this type display the current percentage only, not an average over time. It is the same as the &lt;see cref=&quot;F:System.Diagnostics.PerformanceData.CounterType.RawFraction32&quot; /&gt; counter type, except that it uses larger fields to accommodate larger values.">이 카운터 형식은 전체 집합에 대한 부분 집합의 비율을 백분율로 표시합니다. 예를 들어, 이 카운터는 디스크에서 사용되는 바이트 수를 디스크에 있는 총 바이트 수와 비교합니다. 이 형식의 카운터는 현재 백분율만 표시하며 시간 경과에 따른 평균은 표시하지 않습니다. 이 형식은 <see cref="F:System.Diagnostics.PerformanceData.CounterType.RawFraction32" /> 카운터 형식과 같지만 보다 큰 값을 수용할 수 있도록 더 큰 필드를 사용한다는 점이 다릅니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.SampleBase">
      <summary vsli:raw="This counter stores the number of sampling interrupts taken and is used as a denominator in the sampling fraction. This type supports the &lt;see cref=&quot;F:System.Diagnostics.PerformanceData.CounterType.SampleFraction&quot; /&gt; counter type.">이 카운터는 샘플링한 샘플링 인터럽트의 수를 저장하며, 샘플링 분수에서 분모로 사용됩니다. 이 형식은 <see cref="F:System.Diagnostics.PerformanceData.CounterType.SampleFraction" /> 카운터 형식을 지원합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.SampleCounter">
      <summary vsli:raw="This counter type shows the average number of operations completed in one second. It measures time in units of ticks of the system performance timer. The variable F represents the number of ticks that occur in one second. The value of F is factored into the equation so that the result is displayed in seconds. (See the PERF_SAMPLE_COUNTER counter type in the deployment kit.)">이 카운터 형식은 1초마다 완료되는 평균 작업 수를 표시합니다. 이는 시스템 성능 타이머의 틱을 단위로 하여 시간을 측정합니다. 변수 F는 1초에 발생하는 틱 수를 나타냅니다. 결과가 초 단위로 표시되도록 수식에서 F 값이 함께 계산됩니다. 자세한 내용은 배포 키트에서 PERF_SAMPLE_COUNTER 카운터 형식을 참조하십시오.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceData.CounterType.SampleFraction">
      <summary vsli:raw="This counter type shows the average ratio of hits to all operations during the last two sample intervals. (See the PERF_SAMPLE_FRACTION counter type in the deployment kit.)">이 카운터 형식은 마지막 두 샘플 기간 동안의 모든 작업에 대한 평균 적중 비율을 표시합니다. 자세한 내용은 배포 키트에서 PERF_SAMPLE_FRACTION 카운터 형식을 참조하십시오.</summary>
    </member>
  </members>
</doc>