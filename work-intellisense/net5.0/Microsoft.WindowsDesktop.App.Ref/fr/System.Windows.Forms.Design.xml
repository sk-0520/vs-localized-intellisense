<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Windows.Forms.Design</name>
  </assembly>
  <members>
    <member name="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged&quot; /&gt; event.">Fournit des données pour l'événement <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs.#ctor(System.ComponentModel.Design.DesignSurface,System.ComponentModel.Design.DesignSurface)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs" />.</summary>
      <param name="oldSurface" vsli:raw="The design surface that is losing activation.">Aire de conception qui perd l'activation.</param>
      <param name="newSurface" vsli:raw="The design surface that is gaining activation.">Aire de conception activée.</param>
    </member>
    <member name="P:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs.NewSurface">
      <summary vsli:raw="Gets the design surface that is gaining activation.">Obtient l'aire de conception activée.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; that is gaining activation.">
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> qui est activé.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs.OldSurface">
      <summary vsli:raw="Gets the design surface that is losing activation.">Obtient l'aire de conception qui perd l'activation.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; that is losing activation.">
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> qui perd l'activation.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged&quot; /&gt; event of a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceManager&quot; /&gt;. This class cannot be inherited.">Représente la méthode qui gérera l'événement <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged" /> d'un <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />. Cette classe ne peut pas être héritée.</summary>
      <param name="sender" vsli:raw="The source of the event, the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceManager&quot; /&gt;.">La source de l'événement, le <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />.</param>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="T:System.ComponentModel.Design.ArrayEditor">
      <summary vsli:raw="Provides a user interface for editing arrays at design time.">Fournit une interface utilisateur qui permet de modifier des tableaux au moment du design.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of &lt;see cref=&quot;T:System.ComponentModel.Design.ArrayEditor&quot; /&gt; using the specified data type for the array.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.ArrayEditor" /> avec le type de données spécifié du tableau.</summary>
      <param name="type" vsli:raw="The data type of the items in the array.">Type de données des éléments du tableau.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.CreateCollectionItemType">
      <summary vsli:raw="Gets the data type that this collection is designed to contain.">Obtient le type des données que cette collection est destinée à contenir par son design.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that indicates the data type that the collection is designed to contain.">
        <see cref="T:System.Type" /> qui indique le type des données que la collection est destinée à contenir par son design.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.GetItems(System.Object)">
      <summary vsli:raw="Gets the items in the array.">Obtient les éléments contenus dans le tableau.</summary>
      <param name="editValue" vsli:raw="The array from which to retrieve the items.">Tableau à partir duquel récupérer les éléments.</param>
      <returns vsli:raw="An array consisting of the items within the specified array. If the object specified in the &lt;paramref name=&quot;editValue&quot; /&gt; parameter is not an array, a new empty object is returned.">Tableau constitué des éléments contenus dans le tableau spécifié. Si l'objet spécifié dans le paramètre <paramref name="editValue" /> n'est pas un tableau, un nouvel objet vide est retourné.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.SetItems(System.Object,System.Object[])">
      <summary vsli:raw="Sets the items in the array.">Définit les éléments du tableau.</summary>
      <param name="editValue" vsli:raw="The array to set the items to.">Tableau pour lequel définir les éléments.</param>
      <param name="value" vsli:raw="The array of objects to set as the items of the array.">Tableau d'objets à définir comme éléments du tableau.</param>
      <returns vsli:raw="An instance of the new array. If the object specified by the &lt;paramref name=&quot;editValue&quot; /&gt; parameter is not an array, the object specified by the &lt;paramref name=&quot;editValue&quot; /&gt; parameter is returned.">Instance du nouveau tableau. Si l'objet spécifié par le paramètre <paramref name="editValue" /> n'est pas un tableau, l'objet spécifié par le paramètre <paramref name="editValue" /> est retourné.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.BinaryEditor">
      <summary vsli:raw="Provides a user interface for editing binary data.">Fournit une interface utilisateur qui permet de modifier des données binaires.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.BinaryEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.BinaryEditor&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.BinaryEditor" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.BinaryEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the value of the specified object using the specified service provider and context.">Modifie la valeur de l'objet spécifié à l'aide du fournisseur de services et du contexte spécifiés.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <param name="provider" vsli:raw="A service provider object through which editing services may be obtained.">Objet fournisseur de services par le biais duquel des services d'édition peuvent être obtenus.</param>
      <param name="value" vsli:raw="The object to edit the value of.">Objet dont la valeur doit être modifiée.</param>
      <returns vsli:raw="The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.">Nouvelle valeur de l'objet. Si la valeur de l'objet n'a pas été modifiée, cette méthode retourne le même objet qui lui a été passé.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.BinaryEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editor style used by the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.Design.BinaryEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot;&gt;&lt;/xref&gt; method.">Obtient le style de l'éditeur utilisé par la méthode <see cref="M:System.ComponentModel.Design.BinaryEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <returns vsli:raw="An &lt;code data-dev-comment-type=&quot;langword&quot;&gt;enum&lt;/code&gt; value indicating the provided editing style.">Valeur <see langword="enum" /> indiquant le style de modification fourni.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ByteViewer">
      <summary vsli:raw="Displays byte arrays in hexadecimal, ANSI, and Unicode formats.">Affiche les tableaux d'octets aux formats hexadécimal, ANSI et Unicode.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.ByteViewer&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.ByteViewer" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.GetBytes">
      <summary vsli:raw="Gets the bytes in the buffer.">Obtient les octets contenus dans la mémoire tampon.</summary>
      <returns vsli:raw="The unsigned byte array reference.">Référence non signée du tableau d'octets.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.GetDisplayMode">
      <summary vsli:raw="Gets the display mode for the control.">Obtient le mode d'affichage pour le contrôle.</summary>
      <returns vsli:raw="The display mode that this control uses. The returned value is defined in &lt;see cref=&quot;T:System.ComponentModel.Design.DisplayMode&quot; /&gt;.">Mode d'affichage que ce contrôle utilise. La valeur retournée est définie dans <see cref="T:System.ComponentModel.Design.DisplayMode" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Windows.Forms.Control.KeyDown&quot; /&gt; event.">Déclenche l’événement <see cref="E:System.Windows.Forms.Control.KeyDown" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.KeyEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Windows.Forms.KeyEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Windows.Forms.Control.Layout&quot; /&gt; event.">Déclenche l’événement <see cref="E:System.Windows.Forms.Control.Layout" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.LayoutEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Windows.Forms.LayoutEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Windows.Forms.Control.Paint&quot; /&gt; event.">Déclenche l’événement <see cref="E:System.Windows.Forms.Control.Paint" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.PaintEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Windows.Forms.PaintEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SaveToFile(System.String)">
      <summary vsli:raw="Writes the raw data from the data buffer to a file.">Écrit dans un fichier les données brutes de la mémoire tampon des données.</summary>
      <param name="path" vsli:raw="The file path to save to.">Chemin d'accès du fichier dans lequel effectuer l'enregistrement.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="path" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is an empty string (&quot;&quot;), contains only white space, or contains one or more invalid characters.">
        <paramref name="path" /> est une chaîne vide (""), contient seulement un espace blanc ou contient un ou plusieurs caractères non valides.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The specified path is invalid, such as being on an unmapped drive.">Le chemin spécifié n’est pas valide, par exemple si l’emplacement est un lecteur non mappé.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file write failed.">L'écriture dans le fichier a échoué.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The specified path, file name, or both exceed the system-defined maximum length.">Le chemin et/ou le nom de fichier spécifiés dépassent la longueur maximale définie par le système.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The access requested is not permitted by the operating system for the specified &lt;paramref name=&quot;path&quot; /&gt;, such as when access is &lt;see langword=&quot;Write&quot; /&gt; or &lt;see langword=&quot;ReadWrite&quot; /&gt; and the file or directory is set for read-only access.">L'accès demandé n'est pas autorisé par le système d'exploitation pour le <paramref name="path" /> spécifié, comme lorsque l'accès est <see langword="Write" /> ou <see langword="ReadWrite" /> et que le fichier ou le répertoire est défini pour l'accès en lecture seule.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.ScrollChanged(System.Object,System.EventArgs)">
      <summary vsli:raw="Handles the &lt;see cref=&quot;E:System.Windows.Forms.ScrollBar.ValueChanged&quot; /&gt; event on the &lt;see cref=&quot;T:System.ComponentModel.Design.ByteViewer&quot; /&gt; control's &lt;see cref=&quot;T:System.Windows.Forms.ScrollBar&quot; /&gt;.">Gère l'événement <see cref="E:System.Windows.Forms.ScrollBar.ValueChanged" /> sur <see cref="T:System.ComponentModel.Design.ByteViewer" /> du contrôle <see cref="T:System.Windows.Forms.ScrollBar" />.</summary>
      <param name="source" vsli:raw="The source of the event.">Source de l'événement.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.EventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SetBytes(System.Byte[])">
      <summary vsli:raw="Sets the byte array to display in the viewer.">Définit le tableau d'octets à afficher dans la visionneuse.</summary>
      <param name="bytes" vsli:raw="The byte array to display.">Tableau d'octets à afficher.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The specified byte array is &lt;see langword=&quot;null&quot; /&gt;.">Le tableau d'octets spécifié est <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SetDisplayMode(System.ComponentModel.Design.DisplayMode)">
      <summary vsli:raw="Sets the current display mode.">Définit le mode d'affichage actuel.</summary>
      <param name="mode" vsli:raw="The display mode to set.">Mode d'affichage à définir.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="The specified display mode is not from the &lt;see cref=&quot;T:System.ComponentModel.Design.DisplayMode&quot; /&gt; enumeration.">Le mode d'affichage spécifié ne provient pas de l'énumération <see cref="T:System.ComponentModel.Design.DisplayMode" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SetFile(System.String)">
      <summary vsli:raw="Sets the file to display in the viewer.">Définit le fichier à afficher dans la visionneuse.</summary>
      <param name="path" vsli:raw="The file path to load from.">Chemin d'accès du fichier à partir duquel effectuer le chargement.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="path" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is an empty string (&quot;&quot;), contains only white space, or contains one or more invalid characters.">
        <paramref name="path" /> est une chaîne vide (""), contient seulement un espace blanc ou contient un ou plusieurs caractères non valides.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The specified path is invalid, such as being on an unmapped drive.">Le chemin spécifié n’est pas valide, par exemple si l’emplacement est un lecteur non mappé.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file load failed.">Le chargement du fichier a échoué.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The specified path, file name, or both exceed the system-defined maximum length.">Le chemin et/ou le nom de fichier spécifiés dépassent la longueur maximale définie par le système.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The access requested is not permitted by the operating system for the specified &lt;paramref name=&quot;path&quot; /&gt;, such as when access is &lt;see langword=&quot;Write&quot; /&gt; or &lt;see langword=&quot;ReadWrite&quot; /&gt; and the file or directory is set for read-only access.">L'accès demandé n'est pas autorisé par le système d'exploitation pour le <paramref name="path" /> spécifié, comme lorsque l'accès est <see langword="Write" /> ou <see langword="ReadWrite" /> et que le fichier ou le répertoire est défini pour l'accès en lecture seule.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SetStartLine(System.Int32)">
      <summary vsli:raw="Sets the current line for the &lt;see cref=&quot;F:System.ComponentModel.Design.DisplayMode.Hexdump&quot; /&gt; view.">Définit la ligne active pour la vue <see cref="F:System.ComponentModel.Design.DisplayMode.Hexdump" />.</summary>
      <param name="line" vsli:raw="The current line to display from.">Ligne active à partir de laquelle commencer l'affichage.</param>
    </member>
    <member name="T:System.ComponentModel.Design.CollectionEditor">
      <summary vsli:raw="Provides a user interface that can edit most types of collections at design time.">Fournit une interface utilisateur qui peut modifier la plupart des types de collection au moment du design.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.CollectionEditor&quot; /&gt; class using the specified collection type.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.CollectionEditor" /> à l'aide du type de collection spécifié.</summary>
      <param name="type" vsli:raw="The type of the collection for this editor to edit.">Type de la collection à modifier au moyen de cet éditeur.</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CancelChanges">
      <summary vsli:raw="Cancels changes to the collection.">Annule les modifications effectuées dans la collection.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CanRemoveInstance(System.Object)">
      <summary vsli:raw="Indicates whether original members of the collection can be removed.">Indique si les membres d'origine de la collection peuvent être supprimés.</summary>
      <param name="value" vsli:raw="The value to remove.">Valeur à supprimer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if it is permissible to remove this value from the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default implementation always returns &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> s'il est permis de supprimer cette valeur de la collection ; sinon, <see langword="false" />. L'implémentation par défaut retourne toujours <see langword="true" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CanSelectMultipleInstances">
      <summary vsli:raw="Indicates whether multiple collection items can be selected at once.">Indique si plusieurs éléments de la collection peuvent être sélectionnés simultanément.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if it multiple collection members can be selected at the same time; otherwise, &lt;see langword=&quot;false&quot; /&gt;. By default, this returns &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si plusieurs membres de la collection peuvent être sélectionnés simultanément ; sinon, <see langword="false" />. Retourne <see langword="true" /> par défaut.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateCollectionForm">
      <summary vsli:raw="Creates a new form to display and edit the current collection.">Crée un nouveau formulaire pour afficher et modifier la collection en cours.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CollectionEditor.CollectionForm&quot; /&gt; to provide as the user interface for editing the collection.">
        <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" /> à proposer comme interface utilisateur pour la modification de la collection.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateCollectionItemType">
      <summary vsli:raw="Gets the data type that this collection contains.">Obtient le type des données contenues dans cette collection.</summary>
      <returns vsli:raw="The data type of the items in the collection, or an &lt;see cref=&quot;T:System.Object&quot; /&gt; if no &lt;see langword=&quot;Item&quot; /&gt; property can be located on the collection.">Type de données des éléments de la collection ou <see cref="T:System.Object" /> si aucune propriété <see langword="Item" /> n'est détectée dans la collection.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateInstance(System.Type)">
      <summary vsli:raw="Creates a new instance of the specified collection item type.">Crée une nouvelle instance du type d'élément de la collection spécifié.</summary>
      <param name="itemType" vsli:raw="The type of item to create.">Type de l'élément à créer.</param>
      <returns vsli:raw="A new instance of the specified object.">Nouvelle instance de l'objet spécifié.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateNewItemTypes">
      <summary vsli:raw="Gets the data types that this collection editor can contain.">Obtient les types de données que cet éditeur de collections peut contenir.</summary>
      <returns vsli:raw="An array of data types that this collection can contain.">Tableau des types de données que cette collection peut contenir.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.DestroyInstance(System.Object)">
      <summary vsli:raw="Destroys the specified instance of the object.">Détruit l'instance spécifiée de l'objet.</summary>
      <param name="instance" vsli:raw="The object to destroy.">Objet à détruire.</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the value of the specified object using the specified service provider and context.">Modifie la valeur de l'objet spécifié à l'aide du fournisseur de services et du contexte spécifiés.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <param name="provider" vsli:raw="A service provider object through which editing services can be obtained.">Objet fournisseur de services par le biais duquel des services d'édition peuvent être obtenus.</param>
      <param name="value" vsli:raw="The object to edit the value of.">Objet dont la valeur doit être modifiée.</param>
      <exception cref="T:System.ComponentModel.Design.CheckoutException" vsli:raw="An attempt to check out a file that is checked into a source code management program did not succeed.">Une tentative d'extraction d'un fichier archivé dans un programme de gestion de code source a échoué.</exception>
      <returns vsli:raw="The new value of the object. If the value of the object has not changed, this should return the same object it was passed.">Nouvelle valeur de l'objet. Si la valeur de l'objet n'a pas changé, l'objet retourné doit être le même que celui qui a été passé.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetDisplayText(System.Object)">
      <summary vsli:raw="Retrieves the display text for the given list item.">Récupère le texte affiché pour l'élément de liste donné.</summary>
      <param name="value" vsli:raw="The list item for which to retrieve display text.">Élément de liste pour lequel le texte affiché doit être récupéré.</param>
      <returns vsli:raw="The display text for &lt;paramref name=&quot;value&quot; /&gt;.">Texte affiché pour <paramref name="value" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the edit style used by the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.Design.CollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot;&gt;&lt;/xref&gt; method.">Obtient le style de modification utilisé par la méthode <see cref="M:System.ComponentModel.Design.CollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <returns vsli:raw="A &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle&quot;&gt;&lt;/xref&gt; enumeration value indicating the provided editing style. If the method is not supported in the specified context, this method will return the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle.None&quot;&gt;&lt;/xref&gt; identifier.">Valeur d'énumération <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> indiquant le style de modification fourni. Si la méthode n'est pas prise en charge dans le contexte spécifié, elle retourne l'identificateur <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetItems(System.Object)">
      <summary vsli:raw="Gets an array of objects containing the specified collection.">Obtient un tableau d'objets contenant la collection spécifiée.</summary>
      <param name="editValue" vsli:raw="The collection to edit.">Collection à modifier.</param>
      <returns vsli:raw="An array containing the collection objects, or an empty object array if the specified collection does not inherit from &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">Tableau contenant les objets de collection ou tableau d'objets vide si la collection spécifiée n'hérite pas de <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetObjectsFromInstance(System.Object)">
      <summary vsli:raw="Returns a list containing the given object.">Retourne une liste contenant l’objet donné.</summary>
      <param name="instance" vsli:raw="An &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; returned as an object.">
        <see cref="T:System.Collections.ArrayList" /> retourné en tant qu'objet.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; which contains the individual objects to be created.">
        <see cref="T:System.Collections.ArrayList" /> qui contient les objets individuels à créer.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetService(System.Type)">
      <summary vsli:raw="Gets the requested service, if it is available.">Obtient le service demandé, s'il est disponible.</summary>
      <param name="serviceType" vsli:raw="The type of service to retrieve.">Type de service à récupérer.</param>
      <returns vsli:raw="An instance of the service, or &lt;see langword=&quot;null&quot; /&gt; if the service cannot be found.">Instance du service ou <see langword="null" /> si le service est introuvable.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.SetItems(System.Object,System.Object[])">
      <summary vsli:raw="Sets the specified array as the items of the collection.">Définit le contenu du tableau spécifié comme éléments de la collection.</summary>
      <param name="editValue" vsli:raw="The collection to edit.">Collection à modifier.</param>
      <param name="value" vsli:raw="An array of objects to set as the collection items.">Tableau d'objets à définir comme éléments de la collection.</param>
      <returns vsli:raw="The newly created collection object or, otherwise, the collection indicated by the &lt;paramref name=&quot;editValue&quot; /&gt; parameter.">Objet de collection récemment créé ou, sinon, collection indiquée par le paramètre <paramref name="editValue" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.ShowHelp">
      <summary vsli:raw="Displays the default Help topic for the collection editor.">Affiche la rubrique d'aide par défaut de l'éditeur de collections.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionItemType">
      <summary vsli:raw="Gets the data type of each item in the collection.">Obtient le type de données de chaque élément contenu dans la collection.</summary>
      <returns vsli:raw="The data type of the collection items.">Type de données des éléments de la collection.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionType">
      <summary vsli:raw="Gets the data type of the collection object.">Obtient le type de données de l'objet de collection.</summary>
      <returns vsli:raw="The data type of the collection object.">Type de données de l'objet de collection.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.Context">
      <summary vsli:raw="Gets a type descriptor that indicates the current context.">Obtient un descripteur de type qui indique le contexte en cours.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that indicates the context currently in use, or &lt;see langword=&quot;null&quot; /&gt; if no context is available.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> indiquant le contexte en cours d'utilisation ou <see langword="null" /> si aucun contexte n'est disponible.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.HelpTopic">
      <summary vsli:raw="Gets the Help keyword to display the Help topic or topic list for when the editor's dialog box Help button or the F1 key is pressed.">Obtient le mot clé d'aide pour lequel afficher la rubrique ou la liste des rubriques d'aide lorsque vous cliquez sur le bouton Aide de la boîte de dialogue de l'éditeur ou que vous appuyez sur la touche F1.</summary>
      <returns vsli:raw="The Help keyword to display the Help topic or topic list for when Help is requested from the editor.">Mot clé d'aide pour lequel afficher la rubrique ou la liste des rubriques d'aide lorsque vous demandez de l'aide à partir de l'éditeur.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.NewItemTypes">
      <summary vsli:raw="Gets the available types of items that can be created for this collection.">Obtient les types d'éléments disponibles qui peuvent être créés pour cette collection.</summary>
      <returns vsli:raw="The types of items that can be created.">Types d'éléments pouvant être créés.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.CollectionEditor.CollectionForm">
      <summary vsli:raw="Provides a modal dialog box for editing the contents of a collection using a &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditor&quot; /&gt;.">Fournit une boîte de dialogue modale pour la modification du contenu d'une collection à l'aide de <see cref="T:System.Drawing.Design.UITypeEditor" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.#ctor(System.ComponentModel.Design.CollectionEditor)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.CollectionEditor.CollectionForm&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" />.</summary>
      <param name="editor" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.CollectionEditor&quot; /&gt; to use for editing the collection.">
        <see cref="T:System.ComponentModel.Design.CollectionEditor" /> à utiliser pour la modification de la collection.</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CanRemoveInstance(System.Object)">
      <summary vsli:raw="Indicates whether you can remove the original members of the collection.">Indique si vous pouvez supprimer les membres d'origine de la collection.</summary>
      <param name="value" vsli:raw="The value to remove.">Valeur à supprimer.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if it is permissible to remove this value from the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;. By default, this method returns the value from &lt;see cref=&quot;M:System.ComponentModel.Design.CollectionEditor.CanRemoveInstance(System.Object)&quot; /&gt; of the &lt;see cref=&quot;T:System.ComponentModel.Design.CollectionEditor&quot; /&gt; for this form.">
        <see langword="true" /> s'il est permis de supprimer cette valeur de la collection ; sinon, <see langword="false" />. Par défaut, cette méthode retourne la valeur à partir de <see cref="M:System.ComponentModel.Design.CollectionEditor.CanRemoveInstance(System.Object)" /> du <see cref="T:System.ComponentModel.Design.CollectionEditor" /> pour ce formulaire.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CanSelectMultipleInstances">
      <summary vsli:raw="Indicates whether multiple collection items can be selected at once.">Indique si plusieurs éléments de la collection peuvent être sélectionnés simultanément.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if it multiple collection members can be selected at the same time; otherwise, &lt;see langword=&quot;false&quot; /&gt;. By default, this method returns the value from &lt;see cref=&quot;M:System.ComponentModel.Design.CollectionEditor.CanSelectMultipleInstances&quot; /&gt; of the &lt;see cref=&quot;T:System.ComponentModel.Design.CollectionEditor&quot; /&gt; for this form.">
        <see langword="true" /> si plusieurs membres de la collection peuvent être sélectionnés simultanément ; sinon, <see langword="false" />. Par défaut, cette méthode retourne la valeur à partir de <see cref="M:System.ComponentModel.Design.CollectionEditor.CanSelectMultipleInstances" /> du <see cref="T:System.ComponentModel.Design.CollectionEditor" /> pour ce formulaire.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CreateInstance(System.Type)">
      <summary vsli:raw="Creates a new instance of the specified collection item type.">Crée une nouvelle instance du type d'élément de la collection spécifié.</summary>
      <param name="itemType" vsli:raw="The type of item to create.">Type de l'élément à créer.</param>
      <returns vsli:raw="A new instance of the specified object, or &lt;see langword=&quot;null&quot; /&gt; if the user chose to cancel the creation of this instance.">Nouvelle instance de l'objet spécifié ou <see langword="null" /> si l'utilisateur a choisi d'annuler la création de cette instance.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.DestroyInstance(System.Object)">
      <summary vsli:raw="Destroys the specified instance of the object.">Détruit l'instance spécifiée de l'objet.</summary>
      <param name="instance" vsli:raw="The object to destroy.">Objet à détruire.</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.DisplayError(System.Exception)">
      <summary vsli:raw="Displays the specified exception to the user.">Affiche l'exception spécifiée pour l'utilisateur.</summary>
      <param name="e" vsli:raw="The exception to display.">Exception à afficher.</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.GetService(System.Type)">
      <summary vsli:raw="Gets the requested service, if it is available.">Obtient le service demandé, s'il est disponible.</summary>
      <param name="serviceType" vsli:raw="The type of service to retrieve.">Type de service à récupérer.</param>
      <returns vsli:raw="An instance of the service, or &lt;see langword=&quot;null&quot; /&gt; if the service cannot be found.">Instance du service ou <see langword="null" /> si le service est introuvable.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.OnEditValueChanged">
      <summary vsli:raw="Provides an opportunity to perform processing when a collection value has changed.">Offre une possibilité d'effectuer le traitement lorsqu'une valeur de collection a été modifiée.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.ShowEditorDialog(System.Windows.Forms.Design.IWindowsFormsEditorService)">
      <summary vsli:raw="Shows the dialog box for the collection editor using the specified &lt;see cref=&quot;T:System.Windows.Forms.Design.IWindowsFormsEditorService&quot; /&gt; object.">Affiche la boîte de dialogue de l'éditeur de collections avec l'objet <see cref="T:System.Windows.Forms.Design.IWindowsFormsEditorService" /> spécifié.</summary>
      <param name="edSvc" vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.Design.IWindowsFormsEditorService&quot; /&gt; that can be used to show the dialog box.">
        <see cref="T:System.Windows.Forms.Design.IWindowsFormsEditorService" /> pouvant être utilisé pour afficher la boîte de dialogue.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DialogResult&quot; /&gt; that indicates the result code returned from the dialog box.">
        <see cref="T:System.Windows.Forms.DialogResult" /> indiquant le code obtenu et retourné par la boîte de dialogue.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.CollectionItemType">
      <summary vsli:raw="Gets the data type of each item in the collection.">Obtient le type de données de chaque élément contenu dans la collection.</summary>
      <returns vsli:raw="The data type of the collection items.">Type de données des éléments de la collection.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.CollectionType">
      <summary vsli:raw="Gets the data type of the collection object.">Obtient le type de données de l'objet de collection.</summary>
      <returns vsli:raw="The data type of the collection object.">Type de données de l'objet de collection.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.Context">
      <summary vsli:raw="Gets a type descriptor that indicates the current context.">Obtient un descripteur de type qui indique le contexte en cours.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that indicates the context currently in use, or &lt;see langword=&quot;null&quot; /&gt; if no context is available.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> indiquant le contexte en cours d'utilisation ou <see langword="null" /> si aucun contexte n'est disponible.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.EditValue">
      <summary vsli:raw="Gets or sets the collection object to edit.">Obtient ou définit l'objet de la collection à modifier.</summary>
      <returns vsli:raw="The collection object to edit.">Objet de collection à modifier.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.Items">
      <summary vsli:raw="Gets or sets the array of items for this form to display.">Obtient ou définit le tableau des éléments à afficher par ce formulaire.</summary>
      <returns vsli:raw="An array of objects for the form to display.">Tableau des objets à afficher par le formulaire.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.NewItemTypes">
      <summary vsli:raw="Gets the available item types that can be created for this collection.">Obtient les types d'éléments disponibles qui peuvent être créés pour cette collection.</summary>
      <returns vsli:raw="The types of items that can be created.">Types d'éléments pouvant être créés.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentDesigner">
      <summary vsli:raw="Extends the design mode behavior of a component.">Étend le comportement en mode design d’un composant.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentDesigner&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentDesigner&quot; /&gt;.">Libère toutes les ressources utilisées par <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentDesigner&quot; /&gt; and optionally releases the managed resources.">Libère les ressources non managées utilisées par <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.DoDefaultAction">
      <summary vsli:raw="Creates a method signature in the source code file for the default event on the component and navigates the user's cursor to that location.">Crée une signature de méthode dans le fichier de code source de l'événement par défaut du composant et déplace le curseur de l'utilisateur jusqu'à cet emplacement.</summary>
      <exception cref="T:System.ComponentModel.Design.CheckoutException" vsli:raw="An attempt to check out a file that is checked into a source code management program failed.">Une tentative d'extraction d'un fichier archivé dans un programme de gestion de code source a échoué.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.GetService(System.Type)">
      <summary vsli:raw="Attempts to retrieve the specified type of service from the design mode site of the designer's component.">Tente de récupérer le type spécifié de service du composant du concepteur du site en mode Design.</summary>
      <param name="serviceType" vsli:raw="The type of service to request.">Type de service à demander.</param>
      <returns vsli:raw="An object implementing the requested service, or &lt;see langword=&quot;null&quot; /&gt; if the service cannot be resolved.">Objet implémentant le service demandé, ou <see langword="null" /> si le service ne peut pas être résolu.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary vsli:raw="Prepares the designer to view, edit, and design the specified component.">Prépare le concepteur à afficher, à modifier et à créer le composant spécifié.</summary>
      <param name="component" vsli:raw="The component for this designer.">Composant pour ce concepteur.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeExistingComponent(System.Collections.IDictionary)">
      <summary vsli:raw="Reinitializes an existing component.">Réinitialise un composant existant.</summary>
      <param name="defaultValues" vsli:raw="A name/value dictionary of default values to apply to properties. May be &lt;see langword=&quot;null&quot; /&gt; if no default values are specified.">Dictionnaire de noms/valeurs de valeurs par défaut à appliquer aux propriétés. Peut avoir la valeur <see langword="null" /> si aucune valeur par défaut n’est spécifiée.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <summary vsli:raw="Initializes a newly created component.">Initialise un composant nouvellement créé.</summary>
      <param name="defaultValues" vsli:raw="A name/value dictionary of default values to apply to properties. May be &lt;see langword=&quot;null&quot; /&gt; if no default values are specified.">Dictionnaire de noms/valeurs de valeurs par défaut à appliquer aux propriétés. Peut avoir la valeur <see langword="null" /> si aucune valeur par défaut n’est spécifiée.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeNonDefault">
      <summary vsli:raw="Initializes the settings for an imported component that is already initialized to settings other than the defaults.">Initialise les paramètres d'un composant importé qui est déjà initialisé pour utiliser des paramètres autres que ceux par défaut.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InvokeGetInheritanceAttribute(System.ComponentModel.Design.ComponentDesigner)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.ComponentModel.InheritanceAttribute&quot; /&gt; of the specified &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentDesigner&quot; /&gt;.">Obtient le <see cref="T:System.ComponentModel.InheritanceAttribute" /> du <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> spécifié.</summary>
      <param name="toInvoke" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentDesigner&quot; /&gt; whose inheritance attribute to retrieve.">
        <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> duquel récupérer l'attribut d'héritage.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.InheritanceAttribute&quot; /&gt; of the specified designer.">Obtient le <see cref="T:System.ComponentModel.InheritanceAttribute" /> du concepteur spécifié.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.OnSetComponentDefaults">
      <summary vsli:raw="Sets the default properties for the component.">Définit les propriétés par défaut du composant.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes(System.Collections.IDictionary)">
      <summary vsli:raw="Allows a designer to change or remove items from the set of attributes that it exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">Permet à un concepteur de modifier ou de supprimer des éléments de l'ensemble d'attributs qu'il expose à l'aide d'un <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="attributes" vsli:raw="The attributes for the class of the component.">Attributs de la classe du composant.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents(System.Collections.IDictionary)">
      <summary vsli:raw="Allows a designer to change or remove items from the set of events that it exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">Permet à un concepteur de modifier ou de supprimer des éléments de l'ensemble d'événements à l'aide d'un <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="events" vsli:raw="The events for the class of the component.">Événements de la classe du composant.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="Allows a designer to change or remove items from the set of properties that it exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">Permet à un concepteur de modifier ou de supprimer des éléments de l'ensemble de propriétés qu'il expose à l'aide d'un <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties" vsli:raw="The properties for the class of the component.">Propriétés de la classe de composant.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterAttributes(System.Collections.IDictionary)">
      <summary vsli:raw="Allows a designer to add to the set of attributes that it exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">Permet à un concepteur d'ajouter des éléments à l'ensemble d'attributs qu'il expose à l'aide d'un <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="attributes" vsli:raw="The attributes for the class of the component.">Attributs de la classe du composant.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterEvents(System.Collections.IDictionary)">
      <summary vsli:raw="Allows a designer to add to the set of events that it exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">Permet à un concepteur d'ajouter des éléments à l'ensemble d'événements qu'il expose à l'aide d'un <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="events" vsli:raw="The events for the class of the component.">Événements de la classe du composant.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="Allows a designer to add to the set of properties that it exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">Permet à un concepteur d'ajouter des éléments à l'ensemble de propriétés qu'il expose à l'aide d'un <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties" vsli:raw="The properties for the class of the component.">Propriétés de la classe de composant.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanged(System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
      <summary vsli:raw="Notifies the &lt;see cref=&quot;T:System.ComponentModel.Design.IComponentChangeService&quot; /&gt; that this component has been changed.">Avertit le <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> que ce composant a été modifié.</summary>
      <param name="member" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.MemberDescriptor&quot; /&gt; that indicates the member that has been changed.">
        <see cref="T:System.ComponentModel.MemberDescriptor" /> indiquant le membre modifié.</param>
      <param name="oldValue" vsli:raw="The old value of the member.">Ancienne valeur du membre.</param>
      <param name="newValue" vsli:raw="The new value of the member.">Nouvelle valeur du membre.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanging(System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Notifies the &lt;see cref=&quot;T:System.ComponentModel.Design.IComponentChangeService&quot; /&gt; that this component is about to be changed.">Avertit le <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> que ce composant est sur le point d'être modifié.</summary>
      <param name="member" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.MemberDescriptor&quot; /&gt; that indicates the member that is about to be changed.">
        <see cref="T:System.ComponentModel.MemberDescriptor" /> indiquant le membre sur le point d'être modifié.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterAttributes(System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)&quot; /&gt; method.">Pour obtenir une description de ce membre, consultez la méthode <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" />.</summary>
      <param name="attributes" vsli:raw="The &lt;see cref=&quot;T:System.Attribute&quot; /&gt; objects for the class of the component. The keys in the dictionary of attributes are the &lt;see cref=&quot;P:System.Attribute.TypeId&quot; /&gt; values of the attributes.">Objets <see cref="T:System.Attribute" /> de la classe du composant. Les clés du dictionnaire d'attributs sont les valeurs <see cref="P:System.Attribute.TypeId" /> des attributs.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterEvents(System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)&quot; /&gt; method.">Pour obtenir une description de ce membre, consultez la méthode <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" />.</summary>
      <param name="events" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; objects that represent the events of the class of the component. The keys in the dictionary of events are event names.">Objets <see cref="T:System.ComponentModel.EventDescriptor" /> représentant les événements de la classe du composant. Les clés du dictionnaire d'événements sont des noms d'événements.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)&quot; /&gt; method.">Pour obtenir une description de ce membre, consultez la méthode <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" />.</summary>
      <param name="properties" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects that represent the properties of the class of the component. The keys in the dictionary of properties are property names.">Objets <see cref="T:System.ComponentModel.PropertyDescriptor" /> représentant les propriétés de la classe du composant. Les clés du dictionnaire de propriétés sont des noms de propriétés.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterAttributes(System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)&quot; /&gt; method.">Pour obtenir une description de ce membre, consultez la méthode <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" />.</summary>
      <param name="attributes" vsli:raw="The &lt;see cref=&quot;T:System.Attribute&quot; /&gt; objects for the class of the component. The keys in the dictionary of attributes are the &lt;see cref=&quot;P:System.Attribute.TypeId&quot; /&gt; values of the attributes.">Objets <see cref="T:System.Attribute" /> de la classe du composant. Les clés du dictionnaire d'attributs sont les valeurs <see cref="P:System.Attribute.TypeId" /> des attributs.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterEvents(System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)&quot; /&gt; method.">Pour obtenir une description de ce membre, consultez la méthode <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" />.</summary>
      <param name="events" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; objects that represent the events of the class of the component. The keys in the dictionary of events are event names.">Objets <see cref="T:System.ComponentModel.EventDescriptor" /> représentant les événements de la classe du composant. Les clés du dictionnaire d'événements sont des noms d'événements.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)&quot; /&gt; method.">Pour obtenir une description de ce membre, consultez la méthode <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" />.</summary>
      <param name="properties" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects that represent the properties of the class of the component. The keys in the dictionary of properties are property names.">Objets <see cref="T:System.ComponentModel.PropertyDescriptor" /> représentant les propriétés de la classe du composant. Les clés du dictionnaire de propriétés sont des noms de propriétés.</param>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ActionLists">
      <summary vsli:raw="Gets the design-time action lists supported by the component associated with the designer.">Obtient les listes d'actions au moment du design prises en charge par le composant associé au concepteur.</summary>
      <returns vsli:raw="The design-time action lists supported by the component associated with the designer.">Listes d'actions au moment du design prises en charge par le composant associé au concepteur.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.AssociatedComponents">
      <summary vsli:raw="Gets the collection of components associated with the component managed by the designer.">Obtient la collection de composants associés au composant géré par le concepteur.</summary>
      <returns vsli:raw="The components that are associated with the component managed by the designer.">Composants associés au composant géré par le concepteur.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Component">
      <summary vsli:raw="Gets the component this designer is designing.">Obtient le composant qui est créé par ce concepteur.</summary>
      <returns vsli:raw="The component managed by the designer.">Composant géré par le concepteur.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute">
      <summary vsli:raw="Gets an attribute that indicates the type of inheritance of the associated component.">Obtient un attribut qui indique le type d'héritage du composant associé.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.InheritanceAttribute&quot; /&gt; for the associated component.">
        <see cref="T:System.ComponentModel.InheritanceAttribute" /> pour le composant associé.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Inherited">
      <summary vsli:raw="Gets a value indicating whether this component is inherited.">Obtient une valeur indiquant si ce composant est hérité.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component is inherited; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le composant est hérité ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ParentComponent">
      <summary vsli:raw="Gets the parent component for this designer.">Obtient le composant parent de ce concepteur.</summary>
      <returns vsli:raw="The parent component for this designer, or &lt;see langword=&quot;null&quot; /&gt; if this designer is the root component.">Composant parent de ce concepteur ou <see langword="null" /> si ce concepteur est le composant racine.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ShadowProperties">
      <summary vsli:raw="Gets a collection of property values that override user settings.">Obtient une collection de valeurs de propriétés qui substituent les paramètres utilisateur.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection&quot; /&gt; that indicates the shadow properties of the design document.">
        <see cref="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection" /> indiquant les propriétés d'ombrage du document de design.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Children">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;P:System.ComponentModel.Design.ITreeDesigner.Children&quot; /&gt; property.">Pour obtenir une description de ce membre, consultez la propriété<see cref="P:System.ComponentModel.Design.ITreeDesigner.Children" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the collection of &lt;see cref=&quot;T:System.ComponentModel.Design.IDesigner&quot; /&gt; designers contained in the current parent designer.">
        <see cref="T:System.Collections.ICollection" /> qui contient la collection de concepteurs <see cref="T:System.ComponentModel.Design.IDesigner" /> contenue dans le concepteur parent actuel.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Parent">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;P:System.ComponentModel.Design.ITreeDesigner.Parent&quot; /&gt; property.">Pour obtenir une description de ce membre, consultez la propriété<see cref="P:System.ComponentModel.Design.ITreeDesigner.Parent" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.Design.IDesigner&quot; /&gt; representing the parent designer, or &lt;see langword=&quot;null&quot; /&gt; if there is no parent.">
        <see cref="T:System.ComponentModel.Design.IDesigner" /> représentant le concepteur parent ou <see langword="null" /> s'il n'existe aucun parent.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Verbs">
      <summary vsli:raw="Gets the design-time verbs supported by the component that is associated with the designer.">Obtient les verbes de design pris en charge par le composant associé au concepteur.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerVerbCollection&quot; /&gt; of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerVerb&quot; /&gt; objects, or &lt;see langword=&quot;null&quot; /&gt; if no designer verbs are available. This default implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> d'objets <see cref="T:System.ComponentModel.Design.DesignerVerb" />, ou <see langword="null" /> si aucun verbe du concepteur n'est disponible. Cette implémentation par défaut retourne toujours <see langword="null" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection">
      <summary vsli:raw="Represents a collection of shadow properties that should override inherited default or assigned values for specific properties. This class cannot be inherited.">Représente une collection de propriétés d'ombrage qui doivent substituer les valeurs par défaut héritées ou les valeurs assignées à des propriétés particulières. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Contains(System.String)">
      <summary vsli:raw="Indicates whether a property matching the specified name exists in the collection.">Indique si une propriété correspondant au nom spécifié existe dans la collection.</summary>
      <param name="propertyName" vsli:raw="The name of the property to check for in the collection.">Nom de la propriété à rechercher dans la collection.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property exists in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la propriété existe dans la collection ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the object at the specified index.">Obtient ou définit l'objet à l'index spécifié.</summary>
      <param name="propertyName" vsli:raw="The name of the property to access in the collection.">Nom de la propriété à laquelle accéder dans la collection.</param>
      <returns vsli:raw="The value of the specified property, if it exists in the collection. Otherwise, the value is retrieved from the current value of the nonshadowed property.">Valeur de la propriété spécifiée, si elle existe dans la collection. Sinon, la valeur est récupérée de la valeur actuelle de la propriété non occultée.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DateTimeEditor">
      <summary vsli:raw="This date time editor is a &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditor&quot; /&gt; suitable for visually editing &lt;see cref=&quot;T:System.DateTime&quot; /&gt; objects.">Cet éditeur de date et d'heure est un <see cref="T:System.Drawing.Design.UITypeEditor" /> convenable pour modifier les objets <see cref="T:System.DateTime" /> visuellement.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DateTimeEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DateTimeEditor&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DateTimeEditor" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DateTimeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the specified object value using the editor style provided by GetEditorStyle. A service provider is provided so that any required editing services can be obtained.">Modifie la valeur de l'objet spécifié avec le style de l'éditeur fourni par GetEditorStyle. Un fournisseur de services est prévu pour que tous les services d"édition requis puissent être obtenus.</summary>
      <param name="context" vsli:raw="A type descriptor context that can be used to provide additional context information.">Contexte de descripteur de type qui peut être utilisé pour fournir des informations de contexte supplémentaires.</param>
      <param name="provider" vsli:raw="A service provider object through which editing services may be obtained.">Objet fournisseur de services par le biais duquel des services d'édition peuvent être obtenus.</param>
      <param name="value" vsli:raw="An instance of the value being edited.">Instance de la valeur en cours de modification.</param>
      <returns vsli:raw="The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.">Nouvelle valeur de l'objet. Si la valeur de l'objet n'a pas été modifiée, cette méthode retourne le même objet qui lui a été passé.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DateTimeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Retrieves the editing style of the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.Design.DateTimeEditor.EditValue*&quot;&gt;&lt;/xref&gt; method. If the method is not supported, this will return None.">Récupère le style de modification de la méthode <see cref="Overload:System.ComponentModel.Design.DateTimeEditor.EditValue" />. Si la méthode n'est pas prise en charge, la valeur None est retournée.</summary>
      <param name="context" vsli:raw="A type descriptor context that can be used to provide additional context information.">Contexte de descripteur de type qui peut être utilisé pour fournir des informations de contexte supplémentaires.</param>
      <returns vsli:raw="An &lt;code data-dev-comment-type=&quot;langword&quot;&gt;enum&lt;/code&gt; value indicating the provided editing style.">Valeur <see langword="enum" /> indiquant le style de modification fourni.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionHeaderItem">
      <summary vsli:raw="Represents a static header item on a smart tag panel. This class cannot be inherited.">Représente un élément d'en-tête statique sur un panneau des balises actives. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionHeaderItem.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionHeaderItem&quot; /&gt; class using the provided name string.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignerActionHeaderItem" /> à l'aide de la chaîne de nom fournie.</summary>
      <param name="displayName" vsli:raw="The text to be displayed in the header.">Texte à afficher dans l'en-tête.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionHeaderItem.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionHeaderItem&quot; /&gt; class using the provided name and category strings.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignerActionHeaderItem" /> à l'aide des chaînes de nom et de catégorie fournies.</summary>
      <param name="displayName" vsli:raw="The text to be displayed in the header.">Texte à afficher dans l'en-tête.</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; that defines the groupings of panel entries.">
        <see cref="T:System.String" /> respectant la casse qui définit les groupements d'entrées de panneau.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionItem">
      <summary vsli:raw="Provides the base class for types that represent a panel item on a smart tag panel.">Fournit la classe de base des types qui représentent un élément de panneau sur un panneau des balises actives.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItem.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignerActionItem" />.</summary>
      <param name="displayName" vsli:raw="The panel text for this item.">Texte du panneau pour cet élément.</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; that defines the groupings of panel entries.">
        <see cref="T:System.String" /> respectant la casse qui définit les groupements d'entrées de panneau.</param>
      <param name="description" vsli:raw="Supplemental text for this item, potentially used in ToolTips or the status bar.">Texte supplémentaire pour cet élément, éventuellement utilisé dans les info-bulles ou la barre d'état.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.AllowAssociate">
      <summary vsli:raw="Gets or sets a value indicating whether to allow this item to be placed into a group of items that have the same &lt;see cref=&quot;P:System.ComponentModel.Design.DesignerActionItem.Category&quot; /&gt; property value.">Obtient ou définit une valeur qui indique s'il faut autoriser cet élément à être placé dans un groupe d'éléments ayant la même valeur de propriété <see cref="P:System.ComponentModel.Design.DesignerActionItem.Category" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the item can be grouped; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'élément peut être placé dans un groupe ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Category">
      <summary vsli:raw="Gets the group name for an item.">Obtient le nom de groupe d'un élément.</summary>
      <returns vsli:raw="A string that represents the group that the item is a member of.">Chaîne qui représente le groupe dont l'élément est membre.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Description">
      <summary vsli:raw="Gets the supplemental text for the item.">Obtient le texte supplémentaire de l'élément.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the descriptive text for the item.">
        <see cref="T:System.String" /> qui contient le texte de description de l'élément.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.DisplayName">
      <summary vsli:raw="Gets the text for this item.">Obtient le texte pour cet élément.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the display text for the item.">
        <see cref="T:System.String" /> qui contient le texte d'affichage de l'élément.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Properties">
      <summary vsli:raw="Gets a reference to a collection that can be used to store programmer-defined key/value pairs.">Obtient une référence à une collection qui peut être utilisée pour stocker des paires clé/valeur définies par le programmeur.</summary>
      <returns vsli:raw="A collection that implements &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt;.">Collection qui implémente <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.ShowInSourceView">
      <summary vsli:raw="Gets or sets a value that indicates whether this item appears in source code view.">Obtient ou définit une valeur qui indique si cet élément s'affiche dans la vue de code source.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this item appears in source code view; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si cet élément apparaît dans l'affichage du code source ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionItemCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; objects.">Représente une collection d'objets <see cref="T:System.ComponentModel.Design.DesignerActionItem" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Add(System.ComponentModel.Design.DesignerActionItem)">
      <summary vsli:raw="Adds the supplied &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; to the current collection.">Ajoute le <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> fourni à la collection actuelle.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; to add.">
        <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> à ajouter.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt; index at which the value has been added.">Index <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> auquel la valeur a été ajoutée.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Contains(System.ComponentModel.Design.DesignerActionItem)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt; contains a specific element.">Détermine si <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> contient un élément spécifique.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; to locate in the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> à rechercher dans <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt; contains the specified value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'élément <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> contient la valeur spécifiée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.CopyTo(System.ComponentModel.Design.DesignerActionItem[],System.Int32)">
      <summary vsli:raw="Copies the elements of the current collection into the supplied array, starting at the specified array index.">Copie les éléments de la collection actuelle dans le tableau fourni, à partir de l'index de tableau spécifié.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; array that is the destination of the elements copied from the current collection. The array must have zero-based indexing.">Tableau <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> unidimensionnel qui constitue la destination des éléments copiés à partir de la collection actuelle. Ce tableau doit avoir une indexation de base zéro.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.IndexOf(System.ComponentModel.Design.DesignerActionItem)">
      <summary vsli:raw="Determines the index of a specific item in the collection.">Détermine l'index d'un élément spécifique de la collection.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; to locate in the collection.">
        <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> à rechercher dans la collection.</param>
      <returns vsli:raw="The zero-based index of the first occurrence of &lt;paramref name=&quot;value&quot; /&gt; within the entire &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt;, if found; otherwise, -1.">Index de base zéro de la première occurrence de <paramref name="value" /> dans l'ensemble du <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />, s'il existe ; sinon, -1.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Insert(System.Int32,System.ComponentModel.Design.DesignerActionItem)">
      <summary vsli:raw="Inserts an element into the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt; at the specified index.">Insère un élément dans la classe <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> au niveau de l'index spécifié.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; should be inserted.">Index de base zéro au niveau duquel <paramref name="value" /> doit être inséré.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; to insert.">
        <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> à insérer.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Remove(System.ComponentModel.Design.DesignerActionItem)">
      <summary vsli:raw="Removes the first occurrence of a specific object from the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt;.">Supprime la première occurrence d’un objet spécifique de <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; to remove from the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> à supprimer de <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItemCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">Obtient ou définit l'élément au niveau de l'index spécifié.</summary>
      <param name="index" vsli:raw="The zero-based index of the element.">Index de base zéro de l’élément.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; at the specified index.">
        <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> au niveau de l'index spécifié.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionList">
      <summary vsli:raw="Provides the base class for types that define a list of items used to create a smart tag panel.">Fournit la classe de base pour les types qui définissent une liste d'éléments utilisés pour créer un panneau des balises actives.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.#ctor(System.ComponentModel.IComponent)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
      <param name="component" vsli:raw="A component related to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt;.">Composant lié à <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.GetService(System.Type)">
      <summary vsli:raw="Returns an object that represents a service provided by the component associated with the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt;.">Retourne un objet qui représente un service fourni par le composant associé à <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
      <param name="serviceType" vsli:raw="A service provided by the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;.">Service fourni par <see cref="T:System.ComponentModel.Component" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents a service provided by the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;. This value is &lt;see langword=&quot;null&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; does not provide the specified service.">
        <see cref="T:System.Object" /> qui représente un service fourni par <see cref="T:System.ComponentModel.Component" />. Cette valeur est <see langword="null" /> si <see cref="T:System.ComponentModel.Component" /> ne fournit pas le service spécifié.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems">
      <summary vsli:raw="Returns the collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; objects contained in the list.">Retourne la collection d'objets <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> contenus dans la liste.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; array that contains the items in this list.">Tableau <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> qui contient les éléments de cette liste.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionList.AutoShow">
      <summary vsli:raw="Gets or sets a value indicating whether the smart tag panel should automatically be displayed when it is created.">Obtient ou définit une valeur qui indique si le panneau des balises actives doit être affiché automatiquement lorsqu'il est créé.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the panel should be shown when the owning component is created; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le panneau doit être affiché lorsque le composant propriétaire est créé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionList.Component">
      <summary vsli:raw="Gets the component related to &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt;.">Obtient le composant lié à <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
      <returns vsli:raw="A component related to &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt;.">Composant lié à <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects.">Représente une collection d'objets <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; class with default settings.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> avec les paramètres par défaut.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.#ctor(System.ComponentModel.Design.DesignerActionList[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; class with the specified panel items.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> avec les éléments de panneau spécifiés.</summary>
      <param name="value" vsli:raw="The array of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects to populate the collection.">Tableau d'objets <see cref="T:System.ComponentModel.Design.DesignerActionList" /> à ajouter dans la collection.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Add(System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Adds the supplied &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to the current collection.">Ajoute le <see cref="T:System.ComponentModel.Design.DesignerActionList" /> fourni à la collection actuelle.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to add.">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> à ajouter.</param>
      <returns vsli:raw="The position into which the new element is inserted into the collection's internal list.">Emplacement dans lequel le nouvel élément est inséré dans la liste interne de la collection.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.AddRange(System.ComponentModel.Design.DesignerActionList[])">
      <summary vsli:raw="Adds the elements of the supplied &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; array to the end of the current collection.">Ajoute les éléments du tableau <see cref="T:System.ComponentModel.Design.DesignerActionList" /> fourni à la fin de la collection actuelle.</summary>
      <param name="value" vsli:raw="The array of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects to add.">Tableau d'objets <see cref="T:System.ComponentModel.Design.DesignerActionList" /> à ajouter.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.AddRange(System.ComponentModel.Design.DesignerActionListCollection)">
      <summary vsli:raw="Adds the elements of the supplied &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; to the end of the current collection.">Ajoute les éléments du <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> fourni à la fin de la collection actuelle.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; to add.">
        <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> à ajouter.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Contains(System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Indicates whether the collection contains a specific value.">Indique si la collection contient une valeur spécifique.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to search for.">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> à rechercher.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains the specified value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la collection contient la valeur spécifiée ; <see langword="false" /> dans le cas contraire.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.CopyTo(System.ComponentModel.Design.DesignerActionList[],System.Int32)">
      <summary vsli:raw="Copies the elements of the current collection into the supplied array, starting at the specified array index.">Copie les éléments de la collection actuelle dans le tableau fourni, à partir de l'index de tableau spécifié.</summary>
      <param name="array" vsli:raw="The one-dimensional array of type &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that is the destination of the elements copied from the current collection. The array must have zero-based indexing.">Tableau unidimensionnel de type <see cref="T:System.ComponentModel.Design.DesignerActionList" />, qui constitue la destination des éléments copiés à partir de la collection actuelle. Ce tableau doit avoir une indexation de base zéro.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0.">
        <paramref name="index" /> est inférieur à 0.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in the current collection is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination array.">
        <paramref name="array" /> est multidimensionnel.  
  
- ou - 
Le nombre d'éléments de la collection actuelle est supérieur à la quantité d'espace disponible entre <paramref name="index" /> et la fin du tableau de destination.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="A problem occurred casting the elements of the current collection to the type of the destination array, perhaps as the result of a failed downcast.">Un problème s'est produit lors du cast des éléments de la collection actuelle dans le type du tableau de destination, peut-être suite à l'échec d'un cast aval.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.IndexOf(System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Determines the index of a specific item in the collection.">Détermine l'index d'un élément spécifique de la collection.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to locate in the collection.">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> à rechercher dans la collection.</param>
      <returns vsli:raw="The index of &lt;paramref name=&quot;value&quot; /&gt; if found in the internal list; otherwise, -1.">Index de <paramref name="value" /> s'il figure dans la liste interne ; sinon -1.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Insert(System.Int32,System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Inserts the supplied &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; into the collection at the specified position.">Insère dans la collection le <see cref="T:System.ComponentModel.Design.DesignerActionList" /> fourni à l'emplacement spécifié.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; should be inserted.">Index de base zéro au niveau duquel <paramref name="value" /> doit être inséré.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to insert into the collection.">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> à insérer dans la collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0 or greater than the count of elements in the current collection.">
        <paramref name="index" /> est inférieur à 0 ou supérieur au nombre d'éléments de la collection actuelle.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.OnValidate(System.Object)">
      <summary vsli:raw="Performs additional custom processes when validating a value.">Exécute des processus personnalisés supplémentaires lors de la validation d'une valeur.</summary>
      <param name="value" vsli:raw="The object to validate.">Objet à valider.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Remove(System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Removes the first occurrence of a specific &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; from the collection.">Supprime la première occurrence d'un <see cref="T:System.ComponentModel.Design.DesignerActionList" /> spécifique de la collection.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to remove from the current collection.">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> à supprimer de la collection actuelle.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">Obtient ou définit l'élément au niveau de l'index spécifié.</summary>
      <param name="index" vsli:raw="The zero-based index of the element.">Index de base zéro de l’élément.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; at the specified index.">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> au niveau de l'index spécifié.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged&quot; /&gt; event.">Fournit des données pour l'événement <see cref="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.#ctor(System.Object,System.ComponentModel.Design.DesignerActionListsChangedType,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs" />.</summary>
      <param name="relatedObject" vsli:raw="The object that is associated with the collection.">Objet associé à la collection.</param>
      <param name="changeType" vsli:raw="A value that specifies whether a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; has been added or removed from the collection.">Valeur qui spécifie si <see cref="T:System.ComponentModel.Design.DesignerActionList" /> a été ajouté dans la collection ou en a été supprimé.</param>
      <param name="actionLists" vsli:raw="The collection of list elements after the action has been applied.">Collection d'éléments de liste après l'application de l'action.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.ActionLists">
      <summary vsli:raw="Gets the collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects associated with this event.">Obtient la collection d'objets <see cref="T:System.ComponentModel.Design.DesignerActionList" /> associés à cet événement.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; that represents the current state of the collection.">
        <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> représentant l'état actuel de la collection.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.ChangeType">
      <summary vsli:raw="Gets a flag indicating whether an element has been added or removed from the collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects.">Obtient un indicateur qui signale si un élément a été ajouté dans la collection d'objets <see cref="T:System.ComponentModel.Design.DesignerActionList" /> ou en a été supprimé.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListsChangedType&quot; /&gt; that indicates the type of change.">
        <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedType" /> qui indique le type de modification.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.RelatedObject">
      <summary vsli:raw="Gets the object that is associated with the collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects.">Obtient l’objet associé à la collection d’objets <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; associated with the managed &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt;.">
        <see cref="T:System.Object" /> associé au <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> managé.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged&quot; /&gt; event of a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionService&quot; /&gt;. This class cannot be inherited.">Représente la méthode qui gérera l'événement <see cref="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged" /> d'un <see cref="T:System.ComponentModel.Design.DesignerActionService" />. Cette classe ne peut pas être héritée.</summary>
      <param name="sender" vsli:raw="The source of the event.">Source de l'événement.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedType">
      <summary vsli:raw="Specifies the type of change occurring in a collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects.">Spécifie le type de modification qui se produit dans une collection d'objets <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionListsChangedType.ActionListsAdded">
      <summary vsli:raw="One or more &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects have been added to the collection.">Un ou plusieurs objets <see cref="T:System.ComponentModel.Design.DesignerActionList" /> ont été ajoutés à la collection.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionListsChangedType.ActionListsRemoved">
      <summary vsli:raw="One or more &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects have been removed from the collection.">Un ou plusieurs objets <see cref="T:System.ComponentModel.Design.DesignerActionList" /> ont été supprimés de la collection.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionMethodItem">
      <summary vsli:raw="Represents a smart tag panel item that is associated with a method in a class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt;.">Représente un élément de panneau des balises actives associé à une méthode dans une classe dérivée de <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; class, with the specified method and display names.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />, avec la méthode et les noms complets spécifiés.</summary>
      <param name="actionList" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that contains the method this item is associated with.">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> qui contient la méthode à laquelle cet élément est associé.</param>
      <param name="memberName" vsli:raw="The case-sensitive name of the method in the class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to invoke through the panel item.">Nom respectant la casse de la méthode de la classe dérivée de <see cref="T:System.ComponentModel.Design.DesignerActionList" /> à appeler via l'élément du panneau.</param>
      <param name="displayName" vsli:raw="The panel text for this item.">Texte du panneau pour cet élément.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; class, with the specified method and display names, and a flag that indicates whether the item should appear in other user interface contexts.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />, avec la méthode et les noms complets spécifiés, ainsi qu'un indicateur signalant si l'élément doit apparaître dans d'autres contextes d'interface utilisateur.</summary>
      <param name="actionList" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that contains the method this item is associated with.">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> qui contient la méthode à laquelle cet élément est associé.</param>
      <param name="memberName" vsli:raw="The case-sensitive name of the method in the class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to invoke through the panel item.">Nom respectant la casse de la méthode de la classe dérivée de <see cref="T:System.ComponentModel.Design.DesignerActionList" /> à appeler via l'élément du panneau.</param>
      <param name="displayName" vsli:raw="The panel text for this item.">Texte du panneau pour cet élément.</param>
      <param name="includeAsDesignerVerb" vsli:raw="A flag that specifies whether to also treat the associated method as a designer verb.">Indicateur qui spécifie si la méthode associée en tant que verbe du concepteur doit également être traitée.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; class, with the specified method, display, and category names.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />, avec la méthode, les noms complets et les noms de catégories spécifiés.</summary>
      <param name="actionList" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that contains the method this item is associated with.">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> qui contient la méthode à laquelle cet élément est associé.</param>
      <param name="memberName" vsli:raw="The case-sensitive name of the method in the class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to invoke through the panel item.">Nom respectant la casse de la méthode de la classe dérivée de <see cref="T:System.ComponentModel.Design.DesignerActionList" /> à appeler via l'élément du panneau.</param>
      <param name="displayName" vsli:raw="The panel text for this item.">Texte du panneau pour cet élément.</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; used to group similar items on the panel.">
        <see cref="T:System.String" /> respectant la casse, utilisé pour regrouper des éléments similaires sur le panneau.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; class, with the specified method, display, and category names, and a flag that indicates whether the item should appear in other user interface contexts.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />, avec la méthode, les noms complets et les noms de catégories spécifiés, ainsi qu'un indicateur signalant si l'élément doit apparaître dans d'autres contextes d'interface utilisateur.</summary>
      <param name="actionList" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that contains the method this item is associated with.">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> qui contient la méthode à laquelle cet élément est associé.</param>
      <param name="memberName" vsli:raw="The case-sensitive name of the method in the class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to invoke through the panel item.">Nom respectant la casse de la méthode de la classe dérivée de <see cref="T:System.ComponentModel.Design.DesignerActionList" /> à appeler via l'élément du panneau.</param>
      <param name="displayName" vsli:raw="The panel text for this item.">Texte du panneau pour cet élément.</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; used to group similar items on the panel.">
        <see cref="T:System.String" /> respectant la casse, utilisé pour regrouper des éléments similaires sur le panneau.</param>
      <param name="includeAsDesignerVerb" vsli:raw="A flag that specifies whether to also treat the associated method as a designer verb for the associated component.">Indicateur qui spécifie si la méthode associée en tant que verbe du concepteur pour le composant associé doit également être traitée.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; class, with the specified method and category names, and display and description text.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />, avec la méthode et les noms des catégories spécifiés, ainsi que le texte d'affichage et de description.</summary>
      <param name="actionList" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that contains the method this item is associated with.">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> qui contient la méthode à laquelle cet élément est associé.</param>
      <param name="memberName" vsli:raw="The case-sensitive name of the method in the class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to invoke through the panel item.">Nom respectant la casse de la méthode de la classe dérivée de <see cref="T:System.ComponentModel.Design.DesignerActionList" /> à appeler via l'élément du panneau.</param>
      <param name="displayName" vsli:raw="The panel text for this item.">Texte du panneau pour cet élément.</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; used to group similar items on the panel.">
        <see cref="T:System.String" /> respectant la casse, utilisé pour regrouper des éléments similaires sur le panneau.</param>
      <param name="description" vsli:raw="Supplemental text for this item, used in ToolTips or the status bar.">Texte supplémentaire pour cet élément, utilisé dans les info-bulles ou la barre d'état.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; class, with the specified method and category names, display and description text, and a flag that indicates whether the item should appear in other user interface contexts.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />, avec la méthode, les noms de catégories spécifiés, le texte d'affichage et de description, ainsi qu'un indicateur signalant si l'élément doit apparaître dans d'autres contextes d'interface utilisateur.</summary>
      <param name="actionList" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that contains the method this item is associated with.">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> qui contient la méthode à laquelle cet élément est associé.</param>
      <param name="memberName" vsli:raw="The case-sensitive name of the method in the class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to invoke through the panel item.">Nom respectant la casse de la méthode de la classe dérivée de <see cref="T:System.ComponentModel.Design.DesignerActionList" /> à appeler via l'élément du panneau.</param>
      <param name="displayName" vsli:raw="The panel text for this item.">Texte du panneau pour cet élément.</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; used to group similar items on the panel.">
        <see cref="T:System.String" /> respectant la casse, utilisé pour regrouper des éléments similaires sur le panneau.</param>
      <param name="description" vsli:raw="Supplemental text for this item, used in ToolTips or the status bar.">Texte supplémentaire pour cet élément, utilisé dans les info-bulles ou la barre d'état.</param>
      <param name="includeAsDesignerVerb" vsli:raw="A flag that specifies whether to also treat the associated method as a designer verb for the associated component.">Indicateur qui spécifie si la méthode associée en tant que verbe du concepteur pour le composant associé doit également être traitée.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.Invoke">
      <summary vsli:raw="Programmatically executes the method associated with the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt;.">Exécute par programme la méthode associée à <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The method, named in &lt;see cref=&quot;P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName&quot; /&gt; cannot be found.">La méthode, nommée dans <see cref="P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName" />, est introuvable.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb">
      <summary vsli:raw="Gets a value that indicates the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; should appear in other user interface contexts.">Obtient une valeur qui indique que <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> doit apparaître dans d'autres contextes d'interface utilisateur.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the item is to be used in shortcut menus; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'élément doit être utilisé dans les menus contextuels ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName">
      <summary vsli:raw="Gets the name of the method that this &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; is associated with.">Obtient le nom de la méthode à laquelle ce <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> est associé.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the name of the associated method.">
        <see cref="T:System.String" /> qui contient le nom de la méthode associée.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.RelatedComponent">
      <summary vsli:raw="Gets or sets a component that contributes its &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; objects to the current panel.">Obtient ou définit un composant qui fournit ses objets <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> au panneau actuel.</summary>
      <returns vsli:raw="The contributing component, which should have an associated designer that supplies items.">Composant contributeur, qui doit avoir un concepteur associé qui fournit des éléments.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionPropertyItem">
      <summary vsli:raw="Represents a panel item that is associated with a property in a class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt;. This class cannot be inherited.">Représente un élément de panneau associé à une propriété dans une classe dérivée de <see cref="T:System.ComponentModel.Design.DesignerActionList" />. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionPropertyItem&quot; /&gt; class, with the specified property and display names.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" />, avec la propriété et les noms complets spécifiés.</summary>
      <param name="memberName" vsli:raw="The case-sensitive name of the property associated with this panel item.">Nom qui respecte la casse de la propriété associée à cet élément de panneau.</param>
      <param name="displayName" vsli:raw="The panel text for this item.">Texte du panneau pour cet élément.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionPropertyItem&quot; /&gt; class, with the specified property and category names, and display text.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" />, avec la propriété et les noms des catégories spécifiés, ainsi que le texte d'affichage.</summary>
      <param name="memberName" vsli:raw="The case-sensitive name of the property associated with this panel item.">Nom qui respecte la casse de la propriété associée à cet élément de panneau.</param>
      <param name="displayName" vsli:raw="The panel text for this item.">Texte du panneau pour cet élément.</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; used to group similar items on the panel.">
        <see cref="T:System.String" /> respectant la casse, utilisé pour regrouper des éléments similaires sur le panneau.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionPropertyItem&quot; /&gt; class, with the specified property and category names, and display and description text.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" />, avec la propriété et les noms des catégories spécifiés, ainsi que le texte d'affichage et de description.</summary>
      <param name="memberName" vsli:raw="The case-sensitive name of the property associated with this panel item.">Nom qui respecte la casse de la propriété associée à cet élément de panneau.</param>
      <param name="displayName" vsli:raw="The panel text for this item.">Texte du panneau pour cet élément.</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; used to group similar items on the panel.">
        <see cref="T:System.String" /> respectant la casse, utilisé pour regrouper des éléments similaires sur le panneau.</param>
      <param name="description" vsli:raw="Supplemental text for this item, used in ToolTips or the status bar.">Texte supplémentaire pour cet élément, utilisé dans les info-bulles ou la barre d'état.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionPropertyItem.MemberName">
      <summary vsli:raw="Gets the name of the property that this item is associated with.">Obtient le nom de la propriété à laquelle cet élément est associé.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the name of the associated property.">
        <see cref="T:System.String" /> qui contient le nom de la propriété associée.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionPropertyItem.RelatedComponent">
      <summary vsli:raw="Gets or sets a component that contributes its items to the current panel.">Obtient ou définit un composant qui fournit ses éléments au panneau actuel.</summary>
      <returns vsli:raw="The contributing component, which should have an associated designer that supplies &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; objects.">Composant contributeur, qui doit avoir un concepteur associé qui fournit des objets <see cref="T:System.ComponentModel.Design.DesignerActionItem" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionService">
      <summary vsli:raw="Establishes a design-time service that manages the collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; objects for components.">Établit un service au moment du design qui gère la collection d'objets <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> pour les composants.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged">
      <summary vsli:raw="Occurs when a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; is removed or added for any component.">Se produit lorsque <see cref="T:System.ComponentModel.Design.DesignerActionList" /> est supprimé ou ajouté pour n'importe quel composant.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.#ctor(System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionService&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignerActionService" />.</summary>
      <param name="serviceProvider" vsli:raw="The service provider for the current design-time environment.">Fournisseur de services pour l'environnement au moment du design actuel.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to the current collection of managed smart tags.">Ajoute <see cref="T:System.ComponentModel.Design.DesignerActionList" /> à la collection actuelle de balises actives managées.</summary>
      <param name="comp" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to associate the smart tags with.">
        <see cref="T:System.ComponentModel.IComponent" /> auquel associer les balises actives.</param>
      <param name="actionList" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that contains the new smart tag items to be added.">
        <see cref="T:System.ComponentModel.Design.DesignerActionList" /> qui contient les nouveaux éléments de balises actives à ajouter.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the parameters are &lt;see langword=&quot;null&quot; /&gt;.">Au moins l’un des deux paramètres a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; to the current collection of managed smart tags.">Ajoute <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> à la collection actuelle de balises actives managées.</summary>
      <param name="comp" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to associate the smart tags with.">
        <see cref="T:System.ComponentModel.IComponent" /> auquel associer les balises actives.</param>
      <param name="designerActionListCollection" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; that contains the new smart tag items to be added.">
        <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> qui contient les nouveaux éléments de balises actives à ajouter.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the parameters are &lt;see langword=&quot;null&quot; /&gt;.">Au moins l’un des deux paramètres a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Clear">
      <summary vsli:raw="Releases all components from management and clears all push-model smart tag lists.">Libère tous les composants de la gestion et efface toutes les listes de balises actives de modèle push.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Contains(System.ComponentModel.IComponent)">
      <summary vsli:raw="Determines whether the current smart tag service manages the action lists for the specified component.">Détermine si le service de balises actives actuel gère les listes d'actions pour le composant spécifié.</summary>
      <param name="comp" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to search for.">
        <see cref="T:System.ComponentModel.IComponent" /> à rechercher.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;comp&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="comp" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component is managed by the current service; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le composant est géré par le service actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionService&quot; /&gt; class.">Libère toutes les ressources utilisées par la classe <see cref="T:System.ComponentModel.Design.DesignerActionService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionService&quot; /&gt; and optionally releases the managed resources.">Libère les ressources non managées utilisées par <see cref="T:System.ComponentModel.Design.DesignerActionService" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent)">
      <summary vsli:raw="Returns the collection of smart tag item lists associated with a component.">Retourne la collection de listes d'éléments de balises actives associée à un composant.</summary>
      <param name="component" vsli:raw="The component that the smart tags are associated with.">Composant auquel les balises actives sont associées.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;comp&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="comp" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="The collection of smart tags for the specified component.">Collection de balises actives du composant spécifié.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent,System.Windows.Forms.Design.ComponentActionsType)">
      <summary vsli:raw="Returns the collection of designer action item lists of the specified type associated with a component.">Retourne la collection de listes d’éléments d’action de concepteur du type spécifié associé à un composant.</summary>
      <param name="component" vsli:raw="The component that the DesignerActions are associated with.">Composant auquel les DesignerActions sont associés.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentActionsType&quot; /&gt; to filter the associated designer actions with.">
        <see cref="T:System.ComponentModel.Design.ComponentActionsType" />À utiliser pour filtrer les actions de concepteur associées.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;component&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="component" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="The collection of designer actions of the specified type for the specified component.">Collection d’actions de concepteur du type spécifié pour le composant spécifié.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary vsli:raw="Retrieves the pull-model smart tags associated with a component.">Récupère les balises actives de modèle d'extraction associées à un composant.</summary>
      <param name="component" vsli:raw="The component that the smart tags are associated with.">Composant auquel les balises actives sont associées.</param>
      <param name="actionLists" vsli:raw="The collection to add the associated smart tags to.">Collection à laquelle ajouter les balises actives associées.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the parameters are &lt;see langword=&quot;null&quot; /&gt;.">Au moins l’un des deux paramètres a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary vsli:raw="Retrieves the push-model smart tags associated with a component.">Récupère les balises actives de modèle push associées à un composant.</summary>
      <param name="component" vsli:raw="The component that the smart tags are associated with.">Composant auquel les balises actives sont associées.</param>
      <param name="actionLists" vsli:raw="The collection to add the associated smart tags to.">Collection à laquelle ajouter les balises actives associées.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the parameters are &lt;see langword=&quot;null&quot; /&gt;.">Au moins l’un des deux paramètres a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Removes the specified smart tag list from all components managed by the current service.">Supprime la liste de balises actives spécifiée de tous les composants gérés par le service actuel.</summary>
      <param name="actionList" vsli:raw="The list of smart tags to be removed.">Liste de balises actives à supprimer.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;actionList&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="actionList" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent)">
      <summary vsli:raw="Removes all the smart tag lists associated with the specified component.">Supprime toutes les listes de balises actives associées au composant spécifié.</summary>
      <param name="comp" vsli:raw="The component to disassociate the smart tags from.">Composant à dissocier des balises actives.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;comp&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="comp" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Removes the specified smart tag list from the specified component.">Supprime la liste de balises actives spécifiée du composant spécifié.</summary>
      <param name="comp" vsli:raw="The component to disassociate the smart tags from.">Composant à dissocier des balises actives.</param>
      <param name="actionList" vsli:raw="The smart tag list to remove.">Liste de balises actives à supprimer.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the parameters are &lt;see langword=&quot;null&quot; /&gt;.">Au moins l’un des deux paramètres a la valeur <see langword="null" />.</exception>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionTextItem">
      <summary vsli:raw="Represents a static text item on a smart tag panel.">Représente un élément de texte statique sur un panneau des balises actives.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionTextItem.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionTextItem&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignerActionTextItem" />.</summary>
      <param name="displayName" vsli:raw="The panel text for this item.">Texte du panneau pour cet élément.</param>
      <param name="category" vsli:raw="The category used to group similar items on the panel.">Catégorie utilisée pour regrouper des éléments similaires sur le panneau.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIService">
      <summary vsli:raw="Manages the user interface (UI) for a smart tag panel. This class cannot be inherited.">Gère l'interface utilisateur pour un panneau des balises actives. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange">
      <summary vsli:raw="Occurs when a request is made to show or hide a smart tag panel.">Se produit lorsqu'une demande est faite pour afficher ou masquer un panneau des balises actives.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionUIService&quot; /&gt; class.">Libère toutes les ressources utilisées par la classe <see cref="T:System.ComponentModel.Design.DesignerActionUIService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.HideUI(System.ComponentModel.IComponent)">
      <summary vsli:raw="Hides the smart tag panel for a component.">Masque le panneau des balises actives d'un composant.</summary>
      <param name="component" vsli:raw="The component whose smart tag panel should be hidden.">Composant dont le panneau des balises actives doit être masqué.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.Refresh(System.ComponentModel.IComponent)">
      <summary vsli:raw="Updates the smart tag panel.">Met à jour le panneau des balises actives.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to refresh.">
        <see cref="T:System.ComponentModel.IComponent" /> à actualiser.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.ShouldAutoShow(System.ComponentModel.IComponent)">
      <summary vsli:raw="Indicates whether to automatically show the smart tag panel.">Indique si le panneau des balises actives doit être affiché automatiquement.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to automatically show.">
        <see cref="T:System.ComponentModel.IComponent" /> à afficher automatiquement.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to automatically show the smart tag panel; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour afficher automatiquement le panneau des balises actives ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.ShowUI(System.ComponentModel.IComponent)">
      <summary vsli:raw="Displays the smart tag panel for a component.">Affiche le panneau des balises actives d'un composant.</summary>
      <param name="component" vsli:raw="The component whose smart tag panel should be displayed.">Composant dont le panneau des balises actives doit être affiché.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange&quot; /&gt; event.">Fournit des données pour l'événement <see cref="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.#ctor(System.Object,System.ComponentModel.Design.DesignerActionUIStateChangeType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs" />.</summary>
      <param name="relatedObject" vsli:raw="The object that is associated with the panel.">Objet associé au panneau.</param>
      <param name="changeType" vsli:raw="A value that specifies whether the panel is being displayed or hidden.">Valeur qui spécifie si le panneau est affiché ou masqué.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.ChangeType">
      <summary vsli:raw="Gets a flag indicating whether the smart tag panel is being displayed or hidden.">Obtient un indicateur signalant si le panneau des balises actives est affiché ou masqué.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionUIStateChangeType&quot; /&gt; that indicates the state of the panel.">
        <see cref="T:System.ComponentModel.Design.DesignerActionUIStateChangeType" /> qui indique l'état du panneau.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.RelatedObject">
      <summary vsli:raw="Gets the object that is associated with the smart tag panel.">Obtient l'objet associé au panneau des balises actives.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; associated with the smart tag panel.">
        <see cref="T:System.Object" /> associé au panneau des balises actives.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange&quot; /&gt; event of a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionUIService&quot; /&gt;.">Représente la méthode qui gérera l'événement <see cref="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange" /> d'un <see cref="T:System.ComponentModel.Design.DesignerActionUIService" />.</summary>
      <param name="sender" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; that raised the event.">
        <see cref="T:System.Object" /> qui a déclenché l'événement.</param>
      <param name="e" vsli:raw="The event-specific information.">Informations spécifiques à l'événement.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeType">
      <summary vsli:raw="Specifies the display state of a smart tag panel.">Spécifie l'état d'affichage d'un panneau des balises actives.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Hide">
      <summary vsli:raw="The smart tag panel is being hidden.">Le panneau des balises actives est masqué.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Refresh">
      <summary vsli:raw="The smart tag panel is being refreshed.">Le panneau des balises actives est actualisé.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Show">
      <summary vsli:raw="The smart tag panel is being displayed.">Le panneau des balises actives est affiché.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerCommandSet">
      <summary vsli:raw="Represents a base class for design-time tools, not derived from &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentDesigner&quot; /&gt;, that provide smart tag or designer verb capabilities.">Représente une classe de base pour des outils au moment du design, ne dérivant pas de <see cref="T:System.ComponentModel.Design.ComponentDesigner" />, qui offrent des fonctionnalités de balises actives ou de verbe de concepteur.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerCommandSet.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerCommandSet&quot; /&gt; class.">Initialise une instance de la classe <see cref="T:System.ComponentModel.Design.DesignerCommandSet" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerCommandSet.GetCommands(System.String)">
      <summary vsli:raw="Returns a collection of command objects.">Retourne une collection d'objets de commande.</summary>
      <param name="name" vsli:raw="The type of collection to return, indicating either a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; or a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerVerbCollection&quot; /&gt;.">Type de collection à retourner, indiquant soit un <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />, soit un <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" />.</param>
      <returns vsli:raw="A collection that contains the specified type - either &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; or &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerVerb&quot; /&gt; - of command objects. The base implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">Collection qui contient le type spécifié (<see cref="T:System.ComponentModel.Design.DesignerActionList" /> ou <see cref="T:System.ComponentModel.Design.DesignerVerb" />) d’objets de commande. L'implémentation de base retourne toujours <see langword="null" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerCommandSet.ActionLists">
      <summary vsli:raw="Gets the collection of all the smart tags associated with the designed component.">Obtient la collection de toutes les balises actives associées au composant conçu.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; that contains the smart tags for the associated designed component.">
        <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> qui contient les balises actives du composant conçu associé.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerCommandSet.Verbs">
      <summary vsli:raw="Gets the collection of all the designer verbs associated with the designed component.">Obtient la collection de tous les verbes de concepteur associés au composant conçu.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerVerbCollection&quot; /&gt; that contains the designer verbs for the associated designed component.">
        <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> qui contient les verbes de concepteur pour le composant conçu associé.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurface">
      <summary vsli:raw="Presents a user interface for designing components.">Présente une interface utilisateur pour concevoir des composants.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Disposed">
      <summary vsli:raw="Occurs when the design surface is disposed.">Se produit lorsque l'aire de conception est supprimée.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Flushed">
      <summary vsli:raw="Occurs when a call is made to the &lt;see cref=&quot;M:System.ComponentModel.Design.DesignSurface.Flush&quot; /&gt; method of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt;.">Se produit lorsque la méthode <see cref="M:System.ComponentModel.Design.DesignSurface.Flush" /> de <see cref="T:System.ComponentModel.Design.DesignSurface" /> est appelée.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Loaded">
      <summary vsli:raw="Occurs when the designer load has completed.">Se produit lorsque le chargement du concepteur est terminé.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Loading">
      <summary vsli:raw="Occurs when the designer is about to be loaded.">Se produit lorsque le concepteur est sur le point d'être chargé.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Unloaded">
      <summary vsli:raw="Occurs when a designer has finished unloading.">Se produit lorsqu'un concepteur a terminé un déchargement.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Unloading">
      <summary vsli:raw="Occurs when a designer is about to unload.">Se produit lorsqu'un concepteur est sur le point de décharger.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.ViewActivated">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;M:System.ComponentModel.Design.IDesignerHost.Activate&quot; /&gt; method has been called on &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt;.">Se produit lorsque la méthode <see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" /> a été appelée sur <see cref="T:System.ComponentModel.Design.IDesignerHost" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">Le <see cref="T:System.ComponentModel.Design.IDesignerHost" /> joint à <see cref="T:System.ComponentModel.Design.DesignSurface" /> a été supprimé.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
      <param name="parentProvider" vsli:raw="The parent service provider, or &lt;see langword=&quot;null&quot; /&gt; if there is no parent used to resolve services.">Fournisseur de services parent ou valeur <see langword="null" /> si aucun parent n'est utilisé pour résoudre des services.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">Le <see cref="T:System.ComponentModel.Design.IDesignerHost" /> joint à <see cref="T:System.ComponentModel.Design.DesignSurface" /> a été supprimé.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
      <param name="parentProvider" vsli:raw="The parent service provider, or &lt;see langword=&quot;null&quot; /&gt; if there is no parent used to resolve services.">Fournisseur de services parent ou valeur <see langword="null" /> si aucun parent n'est utilisé pour résoudre des services.</param>
      <param name="rootComponentType" vsli:raw="The type of root component to create.">Type du composant racine à créer.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rootComponent&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rootComponent" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">Le <see cref="T:System.ComponentModel.Design.IDesignerHost" /> joint à <see cref="T:System.ComponentModel.Design.DesignSurface" /> a été supprimé.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
      <param name="rootComponentType" vsli:raw="The type of root component to create.">Type du composant racine à créer.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rootComponent&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rootComponent" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">Le <see cref="T:System.ComponentModel.Design.IDesignerHost" /> joint à <see cref="T:System.ComponentModel.Design.DesignSurface" /> a été supprimé.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)">
      <summary vsli:raw="Begins the loading process with the given designer loader.">Commence le processus de chargement par le chargeur de concepteur donné.</summary>
      <param name="loader" vsli:raw="The designer loader to use for loading the designer.">Chargeur de concepteur à utiliser pour le chargement du concepteur.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;loader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="loader" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">Le <see cref="T:System.ComponentModel.Design.IDesignerHost" /> joint à <see cref="T:System.ComponentModel.Design.DesignSurface" /> a été supprimé.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)">
      <summary vsli:raw="Begins the loading process.">Commence le processus de chargement.</summary>
      <param name="rootComponentType" vsli:raw="The type of component to create in design mode.">Type de composant à créer en mode design.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rootComponentType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rootComponentType" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">Le <see cref="T:System.ComponentModel.Design.IDesignerHost" /> joint à <see cref="T:System.ComponentModel.Design.DesignSurface" /> a été supprimé.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)">
      <summary vsli:raw="Creates an instance of a component.">Crée une instance d'un composant.</summary>
      <param name="componentType" vsli:raw="The type of component to create.">Type du composant à créer.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;componentType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="componentType" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">Le <see cref="T:System.ComponentModel.Design.IDesignerHost" /> joint à <see cref="T:System.ComponentModel.Design.DesignSurface" /> a été supprimé.</exception>
      <returns vsli:raw="The newly created component.">Nouveau composant qui vient d'être créé.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
      <summary vsli:raw="Creates a designer when a component is added to the container.">Crée un concepteur lorsqu'un composant est ajouté au conteneur.</summary>
      <param name="component" vsli:raw="The component for which the designer should be created.">Composant pour lequel le concepteur doit être créé.</param>
      <param name="rootDesigner" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to create a root designer; &lt;see langword=&quot;false&quot; /&gt; to create a normal designer.">
        <see langword="true" /> pour créer un concepteur racine ; <see langword="false" /> pour créer un concepteur normal.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;component&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="component" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">Le <see cref="T:System.ComponentModel.Design.IDesignerHost" /> joint à <see cref="T:System.ComponentModel.Design.DesignSurface" /> a été supprimé.</exception>
      <returns vsli:raw="An instance of the requested designer, or &lt;see langword=&quot;null&quot; /&gt; if no matching designer could be found.">Instance du concepteur demandé ou <see langword="null" /> si un concepteur correspondant est introuvable.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)">
      <summary vsli:raw="Creates an instance of the given type.">Crée une instance du type donné.</summary>
      <param name="type" vsli:raw="The type to create.">Type à créer.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">Le <see cref="T:System.ComponentModel.Design.IDesignerHost" /> joint à <see cref="T:System.ComponentModel.Design.DesignSurface" /> a été supprimé.</exception>
      <returns vsli:raw="The newly created object.">Objet nouvellement créé.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)">
      <summary vsli:raw="Creates a container suitable for nesting controls or components.">Crée un conteneur approprié à l'imbrication de contrôles ou de composants.</summary>
      <param name="owningComponent" vsli:raw="The component that manages the nested container.">Composant qui gère le conteneur imbriqué.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;owningComponent&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="owningComponent" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">Le <see cref="T:System.ComponentModel.Design.IDesignerHost" /> joint à <see cref="T:System.ComponentModel.Design.DesignSurface" /> a été supprimé.</exception>
      <returns vsli:raw="The nested container.">Conteneur imbriqué.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)">
      <summary vsli:raw="Creates a container suitable for nesting controls or components.">Crée un conteneur approprié à l'imbrication de contrôles ou de composants.</summary>
      <param name="owningComponent" vsli:raw="The component that manages the nested container.">Composant qui gère le conteneur imbriqué.</param>
      <param name="containerName" vsli:raw="An additional name for the nested container.">Nom supplémentaire pour le conteneur imbriqué.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;owningComponent&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="owningComponent" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">Le <see cref="T:System.ComponentModel.Design.IDesignerHost" /> joint à <see cref="T:System.ComponentModel.Design.DesignSurface" /> a été supprimé.</exception>
      <returns vsli:raw="The nested container.">Conteneur imbriqué.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Dispose">
      <summary vsli:raw="Releases the resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt;.">Libère les ressources utilisées par le <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt;.">Libère les ressources utilisées par le <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Flush">
      <summary vsli:raw="Serializes changes to the design surface.">Sérialise des modifications dans l'aire de conception.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.GetService(System.Type)">
      <summary vsli:raw="Gets a service from the service container.">Obtient un service du conteneur de services.</summary>
      <param name="serviceType" vsli:raw="The type of service to retrieve.">Type de service à récupérer.</param>
      <returns vsli:raw="An object that implements, or is a derived class of, &lt;paramref name=&quot;serviceType&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if the service does not exist in the service container.">Objet qui implémente <paramref name="serviceType" /> ou en est une classe dérivée ou <see langword="null" /> si le service n'existe pas dans le conteneur de services.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnLoaded(System.ComponentModel.Design.LoadedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurface.Loaded&quot; /&gt; event.">Déclenche l’événement <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.LoadedEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.Design.LoadedEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnLoading(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurface.Loading&quot; /&gt; event.">Déclenche l’événement <see cref="E:System.ComponentModel.Design.DesignSurface.Loading" />.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.EventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnUnloaded(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurface.Unloaded&quot; /&gt; event.">Déclenche l’événement <see cref="E:System.ComponentModel.Design.DesignSurface.Unloaded" />.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.EventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnUnloading(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurface.Unloading&quot; /&gt; event.">Déclenche l’événement <see cref="E:System.ComponentModel.Design.DesignSurface.Unloading" />.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.EventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnViewActivate(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurface.ViewActivated&quot; /&gt; event.">Déclenche l’événement <see cref="E:System.ComponentModel.Design.DesignSurface.ViewActivated" />.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.EventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.ComponentContainer">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt; implementation within the design surface.">Obtient l'implémentation de <see cref="T:System.ComponentModel.IContainer" /> dans l'aire de conception.</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">Le <see cref="T:System.ComponentModel.Design.IDesignerHost" /> joint à <see cref="T:System.ComponentModel.Design.DesignSurface" /> a été supprimé.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt; implementation within the design surface.">Implémentation de <see cref="T:System.ComponentModel.IContainer" /> dans l'aire de conception.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.DtelLoading">
      <summary vsli:raw="Gets a value indicating whether the Design-time Error List is loading.">Obtient une valeur indiquant si la **Liste d’erreurs au moment du design** se charge.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Design-time Error List is loading; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Si le **liste d’erreurs au moment du design est en** cours de chargement ; Sinon, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.IsLoaded">
      <summary vsli:raw="Gets a value indicating whether the design surface is currently loaded.">Obtient une valeur indiquant si l'aire de conception est actuellement chargée.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the design surface is currently loaded; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'aire de conception est actuellement chargée ; <see langword="false" /> dans le cas contraire.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.LoadErrors">
      <summary vsli:raw="Returns a collection of loading errors or a void collection.">Retourne une collection d'erreurs de chargement ou une collection vide.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; of loading errors.">
        <see cref="T:System.Collections.ICollection" /> d'erreurs de chargement.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.ServiceContainer">
      <summary vsli:raw="Gets the service container.">Obtient le conteneur de services.</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">Le <see cref="T:System.ComponentModel.Design.IDesignerHost" /> joint à <see cref="T:System.ComponentModel.Design.DesignSurface" /> a été supprimé.</exception>
      <returns vsli:raw="The service container that provides all services to designers contained within the design surface.">Conteneur de services qui fournit tous les services aux concepteurs contenus dans l'aire de conception.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.View">
      <summary vsli:raw="Gets the view for the root designer.">Obtient l'affichage du concepteur racine.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The design surface is not loading, the designer loader has not yet created a root designer, or the design surface finished the load, but failed. More information may available in the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt;.">L'aire de conception ne se charge pas, le chargeur du concepteur n'a pas encore créé de concepteur racine ou l'aire de conception a fini le chargement, mais ne l'a pas réussi. Plus d'informations sont disponibles dans <see cref="P:System.Exception.InnerException" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The designer loaded, but it does not offer a view compatible with this design surface.">Le concepteur est chargé mais n'offre aucune vue compatible avec cette aire de conception.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">Le <see cref="T:System.ComponentModel.Design.IDesignerHost" /> joint à <see cref="T:System.ComponentModel.Design.DesignSurface" /> a été supprimé.</exception>
      <returns vsli:raw="The view for the root designer.">Affichage du concepteur racine.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurfaceCollection">
      <summary vsli:raw="Contains a collection of design surfaces. This class cannot be inherited.">Contient une collection d’aires de conception. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceCollection.CopyTo(System.ComponentModel.Design.DesignSurface[],System.Int32)">
      <summary vsli:raw="Copies the collection members to the specified &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; array beginning at the specified destination index.">Copie les membres de la collection vers le tableau <see cref="T:System.ComponentModel.Design.DesignSurface" /> spécifié, en commençant à l'index de destination déterminé.</summary>
      <param name="array" vsli:raw="The array to copy collection members to.">Tableau dans lequel copier les membres de la collection.</param>
      <param name="index" vsli:raw="The destination index to begin copying to.">Index de destination à partir duquel commencer la copie.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceCollection.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that can iterate through the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceCollection&quot; /&gt; instance.">Retourne un énumérateur qui peut itérer au sein de l'instance <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceCollection&quot; /&gt; instance.">
        <see cref="T:System.Collections.IEnumerator" /> pour l'instance du <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)&quot; /&gt; method.">Pour obtenir une description de ce membre, consultez la méthode <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the values copied from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceCollection&quot; /&gt;.">
        <see cref="T:System.Array" /> unidimensionnel qui est la destination des valeurs copiées à partir de la <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.</param>
      <param name="index" vsli:raw="The index in &lt;paramref name=&quot;array&quot; /&gt; where copying begins.">L'index dans <paramref name="array" /> où commence la copie.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.Collections.IEnumerable.GetEnumerator&quot; /&gt; method.">Pour obtenir une description de ce membre, consultez la méthode <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceCollection&quot; /&gt; instance.">
        <see cref="T:System.Collections.IEnumerator" /> pour l'instance du <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.Count">
      <summary vsli:raw="Gets the total number of design surfaces in the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceCollection&quot; /&gt;.">Obtient le nombre total d'aires de conception dans <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.</summary>
      <returns vsli:raw="The total number of elements in the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceCollection&quot; /&gt;.">Nombre total d'éléments dans la collection <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the design surface at the specified index.">Obtient l'aire de conception à l'index spécifié.</summary>
      <param name="index" vsli:raw="The index of the design surface to return.">Index de l'aire de conception à retourner.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The design surface specified by &lt;paramref name=&quot;index&quot; /&gt; is not supported.">L'aire de conception spécifiée par <paramref name="index" /> n'est pas prise en charge.</exception>
      <returns vsli:raw="The design surface at the specified index.">Aire de conception à l'index spécifié.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#Count">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;P:System.Collections.ICollection.Count&quot; /&gt; property.">Pour obtenir une description de ce membre, consultez la propriété<see cref="P:System.Collections.ICollection.Count" />.</summary>
      <returns vsli:raw="The number of elements contained in the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceCollection&quot; /&gt;.">Nombre d'éléments contenus dans <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;P:System.Collections.ICollection.IsSynchronized&quot; /&gt; property.">Pour obtenir une description de ce membre, consultez la propriété<see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceCollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'accès à <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" /> est synchronisé (thread-safe) ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;P:System.Collections.ICollection.SyncRoot&quot; /&gt; property.">Pour obtenir une description de ce membre, consultez la propriété<see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceCollection&quot; /&gt;.">Objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurfaceEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated&quot; /&gt; event.">Fournit des données pour l'événement <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceEventArgs.#ctor(System.ComponentModel.Design.DesignSurface)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceEventArgs&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignSurfaceEventArgs" />.</summary>
      <param name="surface" vsli:raw="The design surface that is being created.">Aire de conception en cours de création.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;surface&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="surface" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceEventArgs.Surface">
      <summary vsli:raw="Gets the design surface that is being created.">Obtient l'aire de conception en cours de création.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; that is being created.">
        <see cref="T:System.ComponentModel.Design.DesignSurface" /> en cours de création.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurfaceEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated&quot; /&gt; event of a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceManager&quot; /&gt; class. This class cannot be inherited.">Représente la méthode destinée à gérer l’événement <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated" /> d’une classe <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />. Cette classe ne peut pas être héritée.</summary>
      <param name="sender" vsli:raw="The source of the event.">Source de l'événement.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.Design.DesignSurfaceEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurfaceManager">
      <summary vsli:raw="Manages a collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; objects.">Gère une collection d’objets <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged">
      <summary vsli:raw="Occurs when the currently active designer changes.">Se produit lorsque le concepteur actuellement actif change.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated">
      <summary vsli:raw="Occurs when a designer is created.">Se produit lors de la création d'un concepteur.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed">
      <summary vsli:raw="Occurs when a designer is disposed.">Se produit lors de la suppression d'un concepteur.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged">
      <summary vsli:raw="Occurs when the global selection changes.">Se produit lors du changement de la sélection globale.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceManager&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor(System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceManager&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />.</summary>
      <param name="parentProvider" vsli:raw="A parent service provider. Service requests are forwarded to this provider if they cannot be resolved by the design surface manager.">Fournisseur de services parent. Les demandes de services sont envoyées à ce fournisseur si elles ne peuvent pas être résolues par le gestionnaire d'aire de conception.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface">
      <summary vsli:raw="Creates an instance of a design surface.">Crée une instance d'une aire de conception.</summary>
      <returns vsli:raw="A new design surface instance.">Nouvelle instance d'aire de conception.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)">
      <summary vsli:raw="Creates an instance of a design surface.">Crée une instance d'une aire de conception.</summary>
      <param name="parentProvider" vsli:raw="A parent service provider. A new merged service provider will be created that will first ask this provider for a service, and then delegate any failures to the design surface manager object. This merged provider will be passed into the &lt;see cref=&quot;M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)&quot; /&gt; method.">Fournisseur de services parent. Un nouveau fournisseur de services fusionné sera créé ; il demandera d'abord un service à ce fournisseur, puis déléguera toute défaillance à l'objet du gestionnaire d'aire de conception. Ce fournisseur fusionné sera passé dans la méthode <see cref="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;parentProvider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="parentProvider" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="A new design surface instance.">Nouvelle instance d'aire de conception.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)">
      <summary vsli:raw="Implementation that creates the design surface.">Implémentation qui crée l'aire de conception.</summary>
      <param name="parentProvider" vsli:raw="A service provider to pass to the design surface. This is either an instance of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceManager&quot; /&gt; or an object that implements &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt;, and represents a merge between the service provider of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceManager&quot; /&gt; class and an externally passed provider.">Fournisseur de services à passer à l'aire de conception. Il s'agit soit d'une instance de <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> ou d'un objet qui implémente <see cref="T:System.IServiceProvider" /> et constitue une fusion entre le fournisseur de services de la classe <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> et un fournisseur passé extérieurement.</param>
      <returns vsli:raw="A new design surface instance.">Nouvelle instance d'aire de conception.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose">
      <summary vsli:raw="Releases the resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceManager&quot; /&gt;.">Libère les ressources utilisées par le <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceManager&quot; /&gt; and optionally releases the managed resources.">Libère les ressources non managées utilisées par <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.GetService(System.Type)">
      <summary vsli:raw="Gets a service in the design surface manager's service container.">Obtient un service dans le conteneur de services du gestionnaire d’aire de conception.</summary>
      <param name="serviceType" vsli:raw="The service type to retrieve.">Type de service à récupérer.</param>
      <returns vsli:raw="An object that implements, or is a derived class of, the given service type; otherwise, &lt;see langword=&quot;null&quot; /&gt; if the service does not exist in the service container.">Objet qui implémente le type de service donné ou qui est une classe dérivée de ce type de service ; <see langword="null" /> si le service n'existe pas dans le conteneur de services.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface">
      <summary vsli:raw="Gets or sets the active designer.">Obtient ou définit le concepteur actif.</summary>
      <returns vsli:raw="The active designer.">Concepteur actif.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces">
      <summary vsli:raw="Gets a collection of design surfaces.">Obtient une collection d'aires de conception.</summary>
      <returns vsli:raw="A collection of design surfaces that are currently hosted by the design surface manager.">Collection d'aires de conception actuellement hébergées par le gestionnaire d'aire de conception.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer">
      <summary vsli:raw="Gets the design surface manager's &lt;see cref=&quot;P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer&quot; /&gt;.">Obtient le <see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" /> du gestionnaire d'aire de conception.</summary>
      <returns vsli:raw="The design surface manager's &lt;see cref=&quot;P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer&quot; /&gt;.">
        <see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" /> du gestionnaire d'aire de conception.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DisplayMode">
      <summary vsli:raw="Defines identifiers that indicate the display modes used by &lt;see cref=&quot;T:System.ComponentModel.Design.ByteViewer&quot; /&gt;.">Définit des identificateurs qui indiquent les modes d'affichage utilisés par <see cref="T:System.ComponentModel.Design.ByteViewer" />.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DisplayMode.Ansi">
      <summary vsli:raw="An ANSI format display.">Affichage au format ANSI.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DisplayMode.Auto">
      <summary vsli:raw="A display mode that automatically selects a display mode. In this mode, the bytes are examined to determine if they are hexadecimal or printable. If the bytes are in hexadecimal format, the &lt;see cref=&quot;F:System.ComponentModel.Design.DisplayMode.Hexdump&quot; /&gt; mode is selected. If the characters match a printable character set, a test is run to automatically select either the &lt;see cref=&quot;F:System.ComponentModel.Design.DisplayMode.Ansi&quot; /&gt; or &lt;see cref=&quot;F:System.ComponentModel.Design.DisplayMode.Unicode&quot; /&gt; display mode.">Mode d'affichage qui sélectionne automatiquement un mode d'affichage. Dans ce mode, les octets sont examinés afin de déterminer s'ils sont au format hexadécimal ou imprimable. Si les octets sont au format hexadécimal, le mode <see cref="F:System.ComponentModel.Design.DisplayMode.Hexdump" /> est sélectionné. Si les caractères correspondent à un jeu de caractères imprimables, un test s'exécute pour sélectionner automatiquement le mode d'affichage <see cref="F:System.ComponentModel.Design.DisplayMode.Ansi" /> ou <see cref="F:System.ComponentModel.Design.DisplayMode.Unicode" />.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DisplayMode.Hexdump">
      <summary vsli:raw="A hexadecimal format display.">Affichage au format hexadécimal.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DisplayMode.Unicode">
      <summary vsli:raw="A Unicode format display.">Affichage au format Unicode.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.EventBindingService">
      <summary vsli:raw="A default implementation of the &lt;see cref=&quot;T:System.ComponentModel.Design.IEventBindingService&quot; /&gt; interface.">Implémentation par défaut de l'interface <see cref="T:System.ComponentModel.Design.IEventBindingService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.#ctor(System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.EventBindingService&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.EventBindingService" />.</summary>
      <param name="provider" vsli:raw="The service provider from which &lt;see cref=&quot;T:System.ComponentModel.Design.EventBindingService&quot; /&gt; will query for services.">Fournisseur de services à partir duquel <see cref="T:System.ComponentModel.Design.EventBindingService" /> interrogera les services.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;provider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="provider" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
      <summary vsli:raw="Creates a unique method name.">Crée un nom de méthode unique.</summary>
      <param name="component" vsli:raw="The component for which the method name will be created.">Composant pour lequel le nom de méthode sera créé.</param>
      <param name="e" vsli:raw="The event to create a name for.">Événement pour lequel créer un nom.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;component&quot; /&gt; or &lt;paramref name=&quot;e&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="component" /> ou <paramref name="e" /> est <see langword="null" />.</exception>
      <returns vsli:raw="The unique method name.">Nom de méthode unique.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.FreeMethod(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor,System.String)">
      <summary vsli:raw="Provides a notification that a particular method is no longer being used by an event handler.">Fournit une notification indiquant qu'une méthode particulière n'est plus utilisée par un gestionnaire d'événements.</summary>
      <param name="component" vsli:raw="The component to which the method is bound.">Composant auquel la méthode est liée.</param>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; for the event handler.">
        <see cref="T:System.ComponentModel.EventDescriptor" /> pour le gestionnaire d'événements.</param>
      <param name="methodName" vsli:raw="The name of the method to be freed.">Nom de la méthode à libérer.</param>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.GetCompatibleMethods(System.ComponentModel.EventDescriptor)">
      <summary vsli:raw="Returns a collection of names of compatible methods.">Retourne une collection de noms de méthodes compatibles.</summary>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; containing the compatible delegate.">
        <see cref="T:System.ComponentModel.EventDescriptor" /> qui contient le délégué compatible.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;e&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="e" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="A collection of strings that are names of compatible methods.">Collection de chaînes représentant des noms de méthodes compatibles.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.GetService(System.Type)">
      <summary vsli:raw="Gets the requested service from the service provider.">Obtient le service demandé de la part du fournisseur de services.</summary>
      <param name="serviceType" vsli:raw="The type of service to retrieve.">Type de service à récupérer.</param>
      <returns vsli:raw="A reference to the service specified by &lt;paramref name=&quot;serviceType&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if the requested service is not available.">Référence au service spécifié par <paramref name="serviceType" /> ou <see langword="null" /> si le service demandé n'est pas disponible.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.ShowCode">
      <summary vsli:raw="Displays user code.">Affiche le code utilisateur.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if it is possible to display the code; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> s'il est possible d'afficher le code ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor,System.String)">
      <summary vsli:raw="Displays the user code for the specified method.">Affiche le code utilisateur de la méthode spécifiée.</summary>
      <param name="component" vsli:raw="The component to which the method is bound.">Composant auquel la méthode est liée.</param>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; for the event handler.">
        <see cref="T:System.ComponentModel.EventDescriptor" /> pour le gestionnaire d'événements.</param>
      <param name="methodName" vsli:raw="The name of the method for which to display code.">Nom de la méthode pour laquelle afficher du code.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if it is possible to display the code; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> s'il est possible d'afficher le code ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.ShowCode(System.Int32)">
      <summary vsli:raw="Displays the user code at the given line number.">Affiche le code utilisateur au numéro de ligne donné.</summary>
      <param name="lineNumber" vsli:raw="The line number to show.">Numéro de ligne à afficher.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if it is possible to display the code; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> s'il est possible d'afficher le code ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
      <summary vsli:raw="Creates a unique name for an event-handler method for the specified component and event.">Crée un nom unique pour une méthode de gestionnaire d'événements pour le composant et l'événement spécifiés.</summary>
      <param name="component" vsli:raw="The component instance the event is connected to.">Instance du composant à laquelle l'événement est connecté.</param>
      <param name="e" vsli:raw="The event to create a name for.">Événement pour lequel créer un nom.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;component&quot; /&gt; or &lt;paramref name=&quot;e&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="component" /> ou <paramref name="e" /> est <see langword="null" />.</exception>
      <returns vsli:raw="The recommended name for the event-handler method for this event.">Nom recommandé pour la méthode de gestionnaire d'événements de cet événement.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetCompatibleMethods(System.ComponentModel.EventDescriptor)">
      <summary vsli:raw="Gets a collection of event-handler methods that have a method signature compatible with the specified event.">Obtient une collection de méthodes de gestionnaire d'événements possédant une signature de méthode compatible avec l'événement spécifié.</summary>
      <param name="e" vsli:raw="The event to get the compatible event-handler methods for.">Événement pour lequel obtenir les méthodes de gestionnaire d'événements compatibles.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;e&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="e" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="A collection of strings that are names of compatible methods.">Collection de chaînes représentant des noms de méthodes compatibles.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetEvent(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; for the event that the specified property descriptor represents, if it represents an event.">Obtient <see cref="T:System.ComponentModel.EventDescriptor" /> pour l'événement représenté par le descripteur de propriété spécifié, s'il représente un événement.</summary>
      <param name="property" vsli:raw="The property that represents an event.">Propriété qui représente un événement.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; for the event that the property represents, or &lt;see langword=&quot;null&quot; /&gt; if the property does not represent an event.">
        <see cref="T:System.ComponentModel.EventDescriptor" /> pour l'événement représenté par la propriété, ou <see langword="null" /> si la propriété ne représente pas un événement.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetEventProperties(System.ComponentModel.EventDescriptorCollection)">
      <summary vsli:raw="Converts a set of event descriptors to a set of property descriptors.">Convertit un ensemble de descripteurs d'événement en un ensemble de descripteurs de propriété.</summary>
      <param name="events" vsli:raw="The events to convert to properties.">Événements à convertir en propriétés.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;events&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="events" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects that describe the event set.">Tableau d'objets <see cref="T:System.ComponentModel.PropertyDescriptor" /> qui décrivent l'ensemble d'événements.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetEventProperty(System.ComponentModel.EventDescriptor)">
      <summary vsli:raw="Converts a single event descriptor to a property descriptor.">Convertit un descripteur d'événement unique en un descripteur de propriété.</summary>
      <param name="e" vsli:raw="The event to convert.">Événement à convertir.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;e&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="e" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that describes the event.">
        <see cref="T:System.ComponentModel.PropertyDescriptor" /> qui décrit l'événement.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode">
      <summary vsli:raw="Displays the user code for the designer.">Affiche le code utilisateur du concepteur.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the code is displayed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le code est affiché ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
      <summary vsli:raw="Displays the user code for the specified event.">Affiche le code utilisateur de l'événement spécifié.</summary>
      <param name="component" vsli:raw="The component that the event is connected to.">Composant auquel l'événement est connecté.</param>
      <param name="e" vsli:raw="The event to display.">Événement à afficher.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;events&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="events" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the code is displayed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le code est affiché ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode(System.Int32)">
      <summary vsli:raw="Displays the user code for the designer at the specified line.">Affiche le code utilisateur du concepteur à la ligne spécifiée.</summary>
      <param name="lineNumber" vsli:raw="The line number to place the caret on.">Numéro de la ligne sur laquelle placer le signe insertion.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the code is displayed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le code est affiché ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.UseMethod(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor,System.String)">
      <summary vsli:raw="Provides a notification that a particular method is being used by an event handler.">Fournit une notification indiquant qu'une méthode particulière est utilisée par un gestionnaire d'événements.</summary>
      <param name="component" vsli:raw="The component to which the method is bound.">Composant auquel la méthode est liée.</param>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; for the event handler.">
        <see cref="T:System.ComponentModel.EventDescriptor" /> pour le gestionnaire d'événements.</param>
      <param name="methodName" vsli:raw="The name of the method.">Nom de la méthode.</param>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.ValidateMethodName(System.String)">
      <summary vsli:raw="Validates that the provided method name is valid for the language or script being used.">Vérifie que le nom de méthode fourni est correct pour le langage ou le script utilisé.</summary>
      <param name="methodName" vsli:raw="The method name to validate.">Nom de méthode à valider.</param>
    </member>
    <member name="T:System.ComponentModel.Design.ExceptionCollection">
      <summary vsli:raw="Represents the collection of exceptions.">Représente la collection d'exceptions.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ExceptionCollection.#ctor(System.Collections.ArrayList)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.ExceptionCollection&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.ExceptionCollection" />.</summary>
      <param name="exceptions" vsli:raw="An array of type &lt;see cref=&quot;T:System.Exception&quot; /&gt;, containing the objects to populate the collection.">Tableau de type <see cref="T:System.Exception" />, contenant les objets à ajouter à la collection.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ExceptionCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; with the data needed to serialize the &lt;see cref=&quot;T:System.ComponentModel.Design.ExceptionCollection&quot; /&gt;.">Remplit <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec les données nécessaires pour sérialiser <see cref="T:System.ComponentModel.Design.ExceptionCollection" />.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to populate with data.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> à remplir de données.</param>
      <param name="context" vsli:raw="The destination (see &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;) for this serialization.">Destination (consultez <see cref="T:System.Runtime.Serialization.StreamingContext" />) de cette sérialisation.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.ExceptionCollection.Exceptions">
      <summary vsli:raw="Gets the array of &lt;see cref=&quot;T:System.Exception&quot; /&gt; objects that represent the collection of exceptions.">Obtient le tableau d'objets <see cref="T:System.Exception" /> qui représentent la collection d'exceptions.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; array that represent the collection of exceptions.">Tableau <see cref="T:System.Exception" /> représentant la collection d'exceptions.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.IMultitargetHelperService">
      <summary vsli:raw="Defines multi-target type name resolution services in a design-time environment.">Définit les services de résolution de nom de type multi-cibles dans un environnement au moment du design.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IMultitargetHelperService.GetAssemblyQualifiedName(System.Type)">
      <summary vsli:raw="Resolves a type for the target framework to an assembly-qualified name.">Résout un type de la version cible de .NET Framework en un nom qualifié d'assembly.</summary>
      <param name="type" vsli:raw="The type to resolve.">Type à résoudre.</param>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Type.AssemblyQualifiedName&quot; /&gt; for &lt;paramref name=&quot;type&quot; /&gt; in the target framework.">
        <see cref="P:System.Type.AssemblyQualifiedName" /> pour <paramref name="type" /> dans la version cible de .NET Framework.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.InheritanceService">
      <summary vsli:raw="Provides a set of methods for identifying inherited components.">Fournit un jeu de méthodes pour identifier des composants hérités.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.InheritanceService&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.InheritanceService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.ComponentModel.IComponent,System.ComponentModel.IContainer)">
      <summary vsli:raw="Adds the components inherited by the specified component to the &lt;see cref=&quot;T:System.ComponentModel.Design.InheritanceService&quot; /&gt;.">Ajoute les composants hérités par le composant spécifié à <see cref="T:System.ComponentModel.Design.InheritanceService" />.</summary>
      <param name="component" vsli:raw="The component to search for inherited components to add to the specified container.">Composant dans lequel les composants hérités à ajouter au conteneur spécifié doivent être recherchés.</param>
      <param name="container" vsli:raw="The container to add the inherited components to.">Conteneur dans lequel les composants hérités doivent être ajoutés.</param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.Type,System.ComponentModel.IComponent,System.ComponentModel.IContainer)">
      <summary vsli:raw="Adds the components of the specified type that are inherited by the specified component to the &lt;see cref=&quot;T:System.ComponentModel.Design.InheritanceService&quot; /&gt;.">Ajoute les composants du type spécifié qui sont hérités par le composant spécifié à <see cref="T:System.ComponentModel.Design.InheritanceService" />.</summary>
      <param name="type" vsli:raw="The base type to search for.">Type de base à rechercher.</param>
      <param name="component" vsli:raw="The component to search for inherited components to add to the specified container.">Composant dans lequel les composants hérités à ajouter au conteneur spécifié doivent être recherchés.</param>
      <param name="container" vsli:raw="The container to add the inherited components to.">Conteneur dans lequel les composants hérités doivent être ajoutés.</param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.InheritanceService&quot; /&gt;.">Libère toutes les ressources utilisées par <see cref="T:System.ComponentModel.Design.InheritanceService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.InheritanceService&quot; /&gt; and optionally releases the managed resources.">Libère les ressources non managées utilisées par <see cref="T:System.ComponentModel.Design.InheritanceService" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.GetInheritanceAttribute(System.ComponentModel.IComponent)">
      <summary vsli:raw="Gets the inheritance attribute of the specified component.">Obtient l'attribut d'héritage du composant spécifié.</summary>
      <param name="component" vsli:raw="The component to retrieve the inheritance attribute for.">Composant pour lequel l'attribut d'héritage doit être récupéré.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.InheritanceAttribute&quot; /&gt; that describes the level of inheritance that this component comes from.">
        <see cref="T:System.ComponentModel.InheritanceAttribute" /> qui décrit le niveau d'héritage d'où provient ce composant.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.IgnoreInheritedMember(System.Reflection.MemberInfo,System.ComponentModel.IComponent)">
      <summary vsli:raw="Indicates whether to ignore the specified member.">Indique s'il faut ignorer le membre spécifié.</summary>
      <param name="member" vsli:raw="The member to check. This member is either a &lt;see cref=&quot;T:System.Reflection.FieldInfo&quot; /&gt; or a &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt;.">Membre à vérifier. Ce membre est soit <see cref="T:System.Reflection.FieldInfo" />, soit <see cref="T:System.Reflection.MethodInfo" />.</param>
      <param name="component" vsli:raw="The component instance this member is bound to.">Instance du composant à laquelle ce membre est lié.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified member should be included in the set of inherited components; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le membre spécifié doit être inclus dans le jeu de composants hérités ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.LoadedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurface.Loaded&quot; /&gt; event. This class cannot be inherited.">Fournit des données pour l'événement <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" />. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.LoadedEventArgs.#ctor(System.Boolean,System.Collections.ICollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.LoadedEventArgs&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.LoadedEventArgs" />.</summary>
      <param name="succeeded" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the designer load was successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour indiquer que le chargement du concepteur a été correctement effectué ; sinon <see langword="false" />.</param>
      <param name="errors" vsli:raw="A collection of errors that occurred while the designer was loading.">Collection des erreurs qui se sont produites pendant le chargement du concepteur.</param>
    </member>
    <member name="P:System.ComponentModel.Design.LoadedEventArgs.Errors">
      <summary vsli:raw="Gets a collection of errors that occurred while the designer was loading.">Obtient une collection des erreurs qui se sont produites pendant le chargement du concepteur.</summary>
      <returns vsli:raw="A collection of errors that occurred while the designer was loading.">Collection des erreurs qui se sont produites pendant le chargement du concepteur.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.LoadedEventArgs.HasSucceeded">
      <summary vsli:raw="Gets a value that indicates whether the designer load was successful.">Obtient une valeur qui indique si le chargement du concepteur a été correctement effectué.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the designer load was successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le chargement du concepteur a été correctement effectué ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.LoadedEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurface.Loaded&quot; /&gt; event of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; class. This class cannot be inherited.">Représente la méthode qui gère l’événement <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /> de la classe <see cref="T:System.ComponentModel.Design.DesignSurface" />. Cette classe ne peut pas être héritée.</summary>
      <param name="sender" vsli:raw="The source of the event.">Source de l'événement.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.LoadedEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.Design.LoadedEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged&quot; /&gt; event.">Fournit des données pour l'événement <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandsChangedEventArgs.#ctor(System.ComponentModel.Design.MenuCommandsChangedType,System.ComponentModel.Design.MenuCommand)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommandsChangedEventArgs&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" />.</summary>
      <param name="changeType" vsli:raw="The type of change.">Type de modification.</param>
      <param name="command" vsli:raw="The menu command.">Commande de menu.</param>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommandsChangedEventArgs.ChangeType">
      <summary vsli:raw="Gets the type of change that caused &lt;see cref=&quot;E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged&quot; /&gt; to be raised.">Obtient le type de modification qui a levé <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommandsChangedType&quot; /&gt; that caused &lt;see cref=&quot;E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged&quot; /&gt; to be raised.">
        <see cref="T:System.ComponentModel.Design.MenuCommandsChangedType" /> qui a levé <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommandsChangedEventArgs.Command">
      <summary vsli:raw="Gets the command that was added, removed, or changed.">Obtient la commande qui a été ajoutée, supprimée ou modifiée.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommand&quot; /&gt; that was added, removed, or changed.">
        <see cref="T:System.ComponentModel.Design.MenuCommand" /> ayant été ajouté, supprimé ou modifié.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommandsChangedEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged&quot; /&gt; event of a &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommandService&quot; /&gt;. This class cannot be inherited.">Représente la méthode qui gérera l'événement <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" /> d'un <see cref="T:System.ComponentModel.Design.MenuCommandService" />. Cette classe ne peut pas être héritée.</summary>
      <param name="sender" vsli:raw="The source of the event.">Source de l'événement.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommandsChangedEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommandsChangedType">
      <summary vsli:raw="Specifies the type of action that occurred to the related object's &lt;see cref=&quot;T:System.Windows.Forms.Design.MenuCommands&quot; /&gt; collection.">Spécifie le type d'action qui s'est produite sur la collection <see cref="T:System.Windows.Forms.Design.MenuCommands" /> de l'objet connexe.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.MenuCommandsChangedType.CommandAdded">
      <summary vsli:raw="Specifies that one or more command objects were added.">Spécifie qu'un ou plusieurs objets de commande ont été ajoutés.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.MenuCommandsChangedType.CommandChanged">
      <summary vsli:raw="Specifies that one or more commands have changed their status.">Spécifie qu'une ou plusieurs commandes ont modifié leur état.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.MenuCommandsChangedType.CommandRemoved">
      <summary vsli:raw="Specifies that one or more commands were removed.">Spécifie qu'une ou plusieurs commandes ont été supprimées.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommandService">
      <summary vsli:raw="Implements the &lt;see cref=&quot;T:System.ComponentModel.Design.IMenuCommandService&quot; /&gt; interface.">Implémente l'interface <see cref="T:System.ComponentModel.Design.IMenuCommandService" />.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged">
      <summary vsli:raw="Occurs when the status of a menu command has changed.">Se produit lorsque l'état d'une commande de menu a changé.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.#ctor(System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommandService&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</summary>
      <param name="serviceProvider" vsli:raw="The service provider that this service uses to obtain other services.">Fournisseur de services que ce service utilise pour obtenir d'autres services.</param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)">
      <summary vsli:raw="Adds a command handler to the menu command service.">Ajoute un gestionnaire de commandes au service de commande de menu.</summary>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommand&quot; /&gt; to add.">
        <see cref="T:System.ComponentModel.Design.MenuCommand" /> à ajouter.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;command&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="command" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="A command handler &lt;paramref name=&quot;command&quot; /&gt; already exists.">Un gestionnaire de commandes <paramref name="command" /> existe déjà.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)">
      <summary vsli:raw="Adds a verb to the verb table of the &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommandService&quot; /&gt;.">Ajoute un verbe à la table de verbes de <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</summary>
      <param name="verb" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerVerb&quot; /&gt; to add.">
        <see cref="T:System.ComponentModel.Design.DesignerVerb" /> à ajouter.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;verb&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="verb" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommandService&quot; /&gt;.">Libère toutes les ressources utilisées par <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.Dispose(System.Boolean)">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommandService&quot; /&gt;.">Libère toutes les ressources utilisées par <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.EnsureVerbs">
      <summary vsli:raw="Ensures that the verb list has been created.">Garantit que la liste de verbes a été créée.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)">
      <summary vsli:raw="Searches for the &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommand&quot; /&gt; associated with the given command ID.">Recherches du <see cref="T:System.ComponentModel.Design.MenuCommand" /> associé à l'ID de commande donné.</summary>
      <param name="commandID" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; to find.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> à rechercher.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommand&quot; /&gt; associated with the given command; otherwise, &lt;see langword=&quot;null&quot; /&gt; if the command is not found.">
        <see cref="T:System.ComponentModel.Design.MenuCommand" /> associé à la commande donnée ; sinon, <see langword="null" /> si la commande est introuvable.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.Guid,System.Int32)">
      <summary vsli:raw="Searches for the &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommand&quot; /&gt; associated with the given command.">Recherches du <see cref="T:System.ComponentModel.Design.MenuCommand" /> associé à la commande donnée.</summary>
      <param name="guid" vsli:raw="The GUID of the command.">GUID de la commande.</param>
      <param name="id" vsli:raw="The ID of the command.">ID de la commande.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommand&quot; /&gt; associated with the given command; otherwise, &lt;see langword=&quot;null&quot; /&gt; if the command is not found.">
        <see cref="T:System.ComponentModel.Design.MenuCommand" /> associé à la commande donnée ; sinon, <see langword="null" /> si la commande est introuvable.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.GetCommandList(System.Guid)">
      <summary vsli:raw="Gets the command list for a given GUID.">Reçoit la liste des commandes pour un GUID donné.</summary>
      <param name="guid" vsli:raw="The GUID of the command list.">GUID de la liste de commandes.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; of commands.">
        <see cref="T:System.Collections.ICollection" /> de commandes.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.GetService(System.Type)">
      <summary vsli:raw="Gets a reference to the requested service.">Obtient une référence au service demandé.</summary>
      <param name="serviceType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the service to retrieve.">
        <see cref="T:System.Type" /> du service à récupérer.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serviceType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serviceType" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="A reference to &lt;paramref name=&quot;serviceType&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt; if the service is not found.">Référence au <paramref name="serviceType" /> ; sinon, <see langword="null" /> si le service est introuvable.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)">
      <summary vsli:raw="Invokes the given command on the local form or in the global environment.">Appelle la commande donnée dans le formulaire local ou l'environnement global.</summary>
      <param name="commandID" vsli:raw="The command to invoke.">Commande à appeler.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the command was found; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, si la commande a été trouvée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID,System.Object)">
      <summary vsli:raw="Invokes the given command with the given parameter on the local form or in the global environment.">Appelle la commande donnée avec le paramètre donné dans le formulaire local ou l'environnement global.</summary>
      <param name="commandId" vsli:raw="The command to invoke.">Commande à appeler.</param>
      <param name="arg" vsli:raw="A parameter for the invocation.">Paramètre pour l'appel.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the command was found; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, si la commande a été trouvée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged&quot; /&gt; event.">Déclenche l’événement <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommandsChangedEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)">
      <summary vsli:raw="Removes the given menu command from the document.">Supprime la commande de menu donnée du document.</summary>
      <param name="command" vsli:raw="The command to remove.">Commande à supprimer.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;command&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="command" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)">
      <summary vsli:raw="Removes the given verb from the document.">Supprime le verbe donné du document.</summary>
      <param name="verb" vsli:raw="The verb to remove.">Verbe à supprimer.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;verb&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="verb" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)">
      <summary vsli:raw="Shows the shortcut menu with the given command ID at the given location.">Affiche le menu contextuel avec l'ID de commande donné à l'endroit indiqué.</summary>
      <param name="menuID" vsli:raw="The shortcut menu to display.">Menu contextuel à afficher.</param>
      <param name="x" vsli:raw="The x-coordinate of the shortcut menu's location.">Coordonnée x de l'emplacement du menu contextuel.</param>
      <param name="y" vsli:raw="The y-coordinate of the shortcut menu's location.">Coordonnée y de l'emplacement du menu contextuel.</param>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommandService.Verbs">
      <summary vsli:raw="Gets a collection of the designer verbs that are currently available.">Obtient une collection des verbes du concepteur actuellement disponibles.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerVerbCollection&quot; /&gt; of the designer verbs that are currently available.">
        <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> des verbes du concepteur actuellement disponibles.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.MultilineStringEditor">
      <summary vsli:raw="Displays a dialog for editing multi-line strings in design mode.">Affiche une boîte de dialogue permettant de modifier des chaînes multilignes en mode Design.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.MultilineStringEditor&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.MultilineStringEditor" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the specified object value using the edit style provided by &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)&quot;&gt;&lt;/xref&gt;.">Modifie la valeur de l'objet spécifié avec le style de l'éditeur fourni par <see cref="M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <param name="provider" vsli:raw="A service provider object through which editing services can be obtained.">Objet fournisseur de services par le biais duquel des services d'édition peuvent être obtenus.</param>
      <param name="value" vsli:raw="An instance of the value being edited.">Instance de la valeur en cours de modification.</param>
      <returns vsli:raw="The new value of the object. If the value of the object has not changed, this method should return the same object passed to it.">Nouvelle valeur de l'objet. Si la valeur de l'objet n'a pas été modifiée, cette méthode devrait retourner le même objet que celui qui a été passé.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editing style of the &lt;see cref=&quot;M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot; /&gt; method.">Obtient le style de modification de la méthode <see cref="M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditorEditStyle&quot; /&gt; enumeration value indicating the supported editing style.">Valeur d'énumération <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> qui indique le style de modification pris en charge.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets a value indicating whether this editor supports painting a representation of an object's value.">Obtient une valeur indiquant si cet éditeur permet de peindre une représentation de la valeur d'un objet.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt;, indicating that this &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditor&quot; /&gt; does not display a visual representation in the Properties Window.">
        <see langword="false" /> indique que ce <see cref="T:System.Drawing.Design.UITypeEditor" /> n'affiche pas de représentation visuelle dans la fenêtre Propriétés.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ObjectSelectorEditor">
      <summary vsli:raw="Implements the basic functionality that can be used to design value editors. These editors can, in turn, provide a user interface for representing and editing the values of objects of the supported data types.">Implémente les fonctionnalités de base qui peuvent être utilisées pour concevoir des éditeurs de valeurs. Ces éditeurs peuvent, à leur tour, fournir une interface utilisateur pour représenter et modifier les valeurs d'objets des types de données pris en charge.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.currValue">
      <summary vsli:raw="Represents the current value of &lt;see cref=&quot;T:System.ComponentModel.Design.ObjectSelectorEditor&quot; /&gt;.">Représente la valeur actuelle de <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" />.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.prevValue">
      <summary vsli:raw="Represents the previous value of &lt;see cref=&quot;T:System.ComponentModel.Design.ObjectSelectorEditor&quot; /&gt;.">Représente la valeur précédente de <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" />.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.SubObjectSelector">
      <summary vsli:raw="Controls whether or not the nodes within the hierarchical collection of labeled items are accessible.">Contrôle si les nœuds de la collection hiérarchique d'éléments étiquetés sont accessibles ou pas.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.ObjectSelectorEditor&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.ObjectSelectorEditor&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" />.</summary>
      <param name="subObjectSelector" vsli:raw="The specified sub-object selector value.">Valeur du sélecteur de sous-objet spécifié.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.ApplyTreeViewThemeStyles(System.Windows.Forms.TreeView)">
      <summary vsli:raw="Modify a Windows Forms &lt;see cref=&quot;T:System.Windows.Forms.TreeView&quot; /&gt; control to use the new Explorer style theme.">Modifiez un <see cref="T:System.Windows.Forms.TreeView" /> contrôle Windows Forms pour utiliser le  nouveau thème de style Explorateur.</summary>
      <param name="treeView" vsli:raw="The tree view control to modify.">Contrôle d'arborescence à modifier.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the value of the specified object using the editor style indicated by &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.Design.ObjectSelectorEditor.GetEditStyle*&quot;&gt;&lt;/xref&gt;.">Modifie la valeur de l'objet spécifié à l'aide du style d'éditeur indiqué par <see cref="Overload:System.ComponentModel.Design.ObjectSelectorEditor.GetEditStyle" />.</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <param name="provider" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.IServiceProvider&quot;&gt;&lt;/xref&gt; that this editor can use to obtain services.">
        <see cref="T:System.IServiceProvider" /> pouvant être utilisé par cet éditeur pour obtenir des services.</param>
      <param name="value" vsli:raw="The object to edit.">Objet à modifier.</param>
      <returns vsli:raw="The new value of the object. If the value of the object has not changed, the method should return the same object it was passed.">Nouvelle valeur de l'objet. Si la valeur de l'objet n'a pas été modifiée, la méthode doit retourner le même objet que celui qui a été passé.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.EqualsToValue(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Détermine si l'objet <see cref="T:System.Object" /> spécifié est égal à l'objet <see cref="T:System.Object" /> actuel.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare with the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">
        <see cref="T:System.Object" /> à comparer avec l'objet <see cref="T:System.Object" /> actuel.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Object&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <see cref="T:System.Object" /> spécifié est égal au <see cref="T:System.Object" /> actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.FillTreeWithData(System.ComponentModel.Design.ObjectSelectorEditor.Selector,System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider)">
      <summary vsli:raw="Fills a hierarchical collection of labeled items, with each item represented by a &lt;see cref=&quot;T:System.Windows.Forms.TreeNode&quot; /&gt;.">Remplit une collection hiérarchique d'éléments étiquetés, dont chacun est représenté par <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
      <param name="selector" vsli:raw="A hierarchical collection of labeled items.">Collection hiérarchique d'éléments étiquetés.</param>
      <param name="context" vsli:raw="The context information for a component.">Informations de contexte d'un composant.</param>
      <param name="provider" vsli:raw="The &lt;see cref=&quot;M:System.IServiceProvider.GetService(System.Type)&quot; /&gt; method of this interface that obtains the object that provides the service.">Méthode <see cref="M:System.IServiceProvider.GetService(System.Type)" /> de cette interface qui obtient l'objet qui fournit le service.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editor style used by the &lt;see cref=&quot;Overload:System.ComponentModel.Design.ObjectSelectorEditor.EditValue&quot; /&gt; method.">Obtient le style de l'éditeur utilisé par la méthode <see cref="Overload:System.ComponentModel.Design.ObjectSelectorEditor.EditValue" />.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditorEditStyle&quot; /&gt; value that indicates the style of editor used by &lt;see cref=&quot;Overload:System.ComponentModel.Design.ObjectSelectorEditor.EditValue&quot; /&gt;.">Valeur <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> qui indique le style de l'éditeur utilisé par <see cref="Overload:System.ComponentModel.Design.ObjectSelectorEditor.EditValue" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.SetValue(System.Object)">
      <summary vsli:raw="Sets the current &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.Design.ObjectSelectorEditor&quot;&gt;&lt;/xref&gt; to the specified value.">Affecte la valeur spécifiée au <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" /> actuel.</summary>
      <param name="value" vsli:raw="The specified value.">Valeur spécifiée.</param>
    </member>
    <member name="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector">
      <summary vsli:raw="Displays a hierarchical collection of labeled items, each represented by a &lt;see cref=&quot;T:System.Windows.Forms.TreeNode&quot; /&gt;.">Affiche une collection hiérarchique d'éléments étiquetés, dont chacun est représenté par un objet <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.Selector.clickSeen">
      <summary vsli:raw="This field is for internal use only.">Ce champ est exclusivement destiné à un usage interne.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.#ctor(System.ComponentModel.Design.ObjectSelectorEditor)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.ObjectSelectorEditor.Selector&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector" />.</summary>
      <param name="editor" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.ObjectSelectorEditor&quot; /&gt;.">L’<see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" />opérateur</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.AddNode(System.String,System.Object,System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode)">
      <summary vsli:raw="Adds a new tree node to the collection.">Ajoute un nouveau nœud d'arbre à la collection.</summary>
      <param name="label" vsli:raw="The label for the node.">Étiquette du nœud.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the value for the node.">
        <see cref="T:System.Object" /> qui représente la valeur du nœud.</param>
      <param name="parent" vsli:raw="The parent of the node.">Parent du nœud.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode&quot; /&gt; added to the collection.">
        <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode" /> ajouté à la collection.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Clear">
      <summary vsli:raw="Removes all tree nodes from the collection.">Supprime tous les nœuds d'arbre de la collection.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnAfterSelect(System.Object,System.Windows.Forms.TreeViewEventArgs)">
      <summary vsli:raw="Occurs after the tree node is selected.">Se produit après la sélection du nœud d'arbre.</summary>
      <param name="sender" vsli:raw="The source of an event.">Source d'un événement.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.TreeViewEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Windows.Forms.TreeViewEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary vsli:raw="Occurs when a key is pressed while the control has focus.">Se produit lorsqu'une touche est enfoncée alors que le contrôle a le focus.</summary>
      <param name="e" vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Windows.Forms.Control.KeyDown&quot; /&gt; event.">Fournit des données pour l'événement <see cref="E:System.Windows.Forms.Control.KeyDown" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary vsli:raw="Occurs when a key is pressed while the control has focus.">Se produit lorsqu'une touche est enfoncée alors que le contrôle a le focus.</summary>
      <param name="e" vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Windows.Forms.Control.KeyPress&quot; /&gt; event.">Fournit des données pour l'événement <see cref="E:System.Windows.Forms.Control.KeyPress" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnNodeMouseClick(System.Windows.Forms.TreeNodeMouseClickEventArgs)">
      <summary vsli:raw="Occurs when the mouse pointer is over the control and a mouse button is clicked.">Se produit lorsque le pointeur de la souris se trouve sur le contrôle et qu'un bouton de la souris est enfoncé.</summary>
      <param name="e" vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Windows.Forms.Control.MouseUp&quot; /&gt;, &lt;see cref=&quot;E:System.Windows.Forms.Control.MouseDown&quot; /&gt;, and &lt;see cref=&quot;E:System.Windows.Forms.Control.MouseMove&quot; /&gt; events.">Fournit les données des événements <see cref="E:System.Windows.Forms.Control.MouseUp" />, <see cref="E:System.Windows.Forms.Control.MouseDown" /> et <see cref="E:System.Windows.Forms.Control.MouseMove" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.SetSelection(System.Object,System.Windows.Forms.TreeNodeCollection)">
      <summary vsli:raw="Sets the collection nodes to a specific value.">Affecte une valeur spécifique aux nœuds de la collection.</summary>
      <param name="value" vsli:raw="The value to be set.">Valeur à définir.</param>
      <param name="nodes" vsli:raw="The nodes collection.">Collection de nœuds.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection nodes were set; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les nœuds de la collection ont été définis ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Start(System.Windows.Forms.Design.IWindowsFormsEditorService,System.Object)">
      <summary vsli:raw="Initializes the editor service.">Initialise le service d'éditeur.</summary>
      <param name="edSvc" vsli:raw="The editor service.">Service d'éditeur.</param>
      <param name="value" vsli:raw="The value to be set.">Valeur à définir.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Stop">
      <summary vsli:raw="Removes the editor service.">Supprime le service d'éditeur.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.WndProc(System.Windows.Forms.Message@)">
      <summary vsli:raw="Processes Windows messages.">Traite les messages Windows.</summary>
      <param name="m" vsli:raw="The Windows &lt;see cref=&quot;T:System.Windows.Forms.Message&quot; /&gt; to process.">
        <see cref="T:System.Windows.Forms.Message" /> Windows à traiter.</param>
    </member>
    <member name="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode">
      <summary vsli:raw="Represents a node of a &lt;see cref=&quot;T:System.Windows.Forms.TreeView&quot; /&gt;.">Représente un nœud de <see cref="T:System.Windows.Forms.TreeView" />.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode.value">
      <summary vsli:raw="Represents the value for the node.">Représente la valeur du nœud.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode.#ctor(System.String,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode" />.</summary>
      <param name="label" vsli:raw="The label for the node.">Étiquette du nœud.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the value for the node.">
        <see cref="T:System.Object" /> qui représente la valeur du nœud.</param>
    </member>
    <member name="T:System.ComponentModel.Design.ProjectTargetFrameworkAttribute">
      <summary vsli:raw="Specifies the target framework for a project.">Spécifie la version cible de .Net Framework pour un projet.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ProjectTargetFrameworkAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.ProjectTargetFrameworkAttribute&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.ProjectTargetFrameworkAttribute" />.</summary>
      <param name="targetFrameworkMoniker" vsli:raw="The target framework for the project.">Version cible de .Net Framework pour le projet.</param>
    </member>
    <member name="P:System.ComponentModel.Design.ProjectTargetFrameworkAttribute.TargetFrameworkMoniker">
      <summary vsli:raw="Gets the target framework for the project.">Obtient la version cible de .Net Framework pour le projet.</summary>
      <returns vsli:raw="The target framework for the project.">Version cible de .Net Framework pour le projet.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader">
      <summary vsli:raw="Provides an implementation of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderService&quot; /&gt; interface.">Fournit une implémentation de l’interface <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.BasicDesignerLoader&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)">
      <summary vsli:raw="Starts the loading process.">Démarre le processus de chargement.</summary>
      <param name="host" vsli:raw="The designer loader host to load.">Hôte du chargeur de concepteur à charger.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;host&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="host" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The designer is already loaded, or &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)&quot; /&gt; has been called with a different designer loader host.">Le concepteur est déjà chargé ou <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" /> a été appelé avec un hôte de chargeur de concepteur différent.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="&lt;paramref name=&quot;host&quot; /&gt; has been disposed.">
        <paramref name="host" /> a été supprimé.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose">
      <summary vsli:raw="Releases the resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.BasicDesignerLoader&quot; /&gt;.">Libère les ressources utilisées par le <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.EnableComponentNotification(System.Boolean)">
      <summary vsli:raw="Enables or disables component notification with the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.DesignerLoader&quot; /&gt;.">Active ou désactive la notification de composant avec <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />.</summary>
      <param name="enable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to enable component notification by the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.DesignerLoader&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; to disable component notification by the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.DesignerLoader&quot; /&gt;.">
        <see langword="true" /> pour activer la notification de composant par <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" /> ; <see langword="false" /> pour désactiver la notification de composant par <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component notification was enabled prior to this call; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la notification de composant a été activée avant cet appel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush">
      <summary vsli:raw="Flushes pending changes to the designer loader.">Vide les modifications en attente apportées au chargeur de concepteur.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.GetService(System.Type)">
      <summary vsli:raw="Gets the requested service.">Obtient le service demandé.</summary>
      <param name="serviceType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the service.">
        <see cref="T:System.Type" /> du service.</param>
      <returns vsli:raw="The requested service, or &lt;see langword=&quot;null&quot; /&gt; if the requested service cannot be found.">Service demandé ou <see langword="null" /> si le service demandé est introuvable.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize">
      <summary vsli:raw="Initializes services.">Initialise des services.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has not been initialized.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> n'a pas été initialisé.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has been disposed.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> a été supprimé.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded">
      <summary vsli:raw="Indicates whether the designer should be reloaded.">Indique si le concepteur doit être rechargé.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the designer should be reloaded; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default implementation always returns &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si le concepteur doit être rechargé ; sinon, <see langword="false" />. L'implémentation par défaut retourne toujours <see langword="true" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad">
      <summary vsli:raw="Notifies the designer loader that loading is about to begin.">Indique au chargeur de concepteur que le chargement est sur le point de commencer.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload">
      <summary vsli:raw="Notifies the designer loader that unloading is about to begin.">Indique au chargeur de concepteur que le déchargement est sur le point de commencer.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)">
      <summary vsli:raw="Notifies the designer loader that loading is complete.">Indique au chargeur de concepteur que le chargement est terminé.</summary>
      <param name="successful" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the load completed successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le chargement s'est correctement effectué ; sinon, <see langword="false" />.</param>
      <param name="errors" vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; containing objects (usually exceptions) that were reported as errors.">
        <see cref="T:System.Collections.ICollection" /> contenant des objets (généralement des exceptions) qui ont été signalés comme des erreurs.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has not been initialized.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> n'a pas été initialisé.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has been disposed.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> a été supprimé.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying">
      <summary vsli:raw="Notifies the designer loader that the state of the document is about to be modified.">Prévient le chargeur de concepteur que l'état du document est sur le point d'être modifié.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary vsli:raw="Flushes all changes to the designer.">Vide toutes les modifications apportées au concepteur.</summary>
      <param name="serializationManager" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for persisting the state of loaded designers.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pour rendre persistant l'état des concepteurs chargés.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary vsli:raw="Loads a designer from persistence.">Charge un concepteur à partir de données persistantes.</summary>
      <param name="serializationManager" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for loading state for the designers.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pour charger l'état des concepteurs.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)">
      <summary vsli:raw="Queues a reload of the designer.">Met un rechargement du concepteur en file d'attente.</summary>
      <param name="flags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions&quot; /&gt; values.">Combinaison d'opérations de bits des valeurs <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors(System.Collections.ICollection)">
      <summary vsli:raw="Reports errors that occurred while flushing changes.">Signale des erreurs qui se sont produites en vidant des modifications.</summary>
      <param name="errors" vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; containing error objects, usually exceptions.">
        <see cref="T:System.Collections.ICollection" /> qui contient des objets d'erreur, habituellement des exceptions.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="One or more errors occurred while flushing changes.">Une ou plusieurs erreurs se sont produites en vidant des modifications.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName(System.String)">
      <summary vsli:raw="Sets the full class name of the base component.">Définit le nom de la classe complet du composant de base.</summary>
      <param name="name" vsli:raw="A string representing the full name of the component to be designed.">Chaîne qui représente le nom complet du composant à créer.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency">
      <summary vsli:raw="Registers an external component as part of the load process managed by &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderService&quot; /&gt;.">Inscrit un composant externe comme appartenant au processus de chargement managé par <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has not been initialized.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> n'a pas été initialisé.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#DependentLoadComplete(System.Boolean,System.Collections.ICollection)">
      <summary vsli:raw="Signals that a dependent load has finished.">Signale qu'un chargement dépendant est terminé.</summary>
      <param name="successful" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to load successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le chargement est un succès ; sinon, <see langword="false" />.</param>
      <param name="errorCollection" vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; containing errors that occurred during the load.">
        <see cref="T:System.Collections.ICollection" /> qui contient des erreurs qui se sont produites pendant le chargement.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No load dependencies have been added by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency&quot; /&gt;, or the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has not been initialized.">Aucune dépendance de charge n'a été ajoutée par <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency" /> ou <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> n'a pas été initialisé.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has been disposed.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> a été supprimé.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#Reload">
      <summary vsli:raw="Reloads the design document.">Recharge le document de design.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reload request is accepted; &lt;see langword=&quot;false&quot; /&gt; if the loader does not allow the reload.">
        <see langword="true" /> si la demande de rechargement est acceptée ; <see langword="false" /> si le chargeur ne permet pas le rechargement.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost">
      <summary vsli:raw="Gets the loader host.">Obtient l'hôte du chargeur.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has not been initialized.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> n'a pas été initialisé.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has been disposed.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> a été supprimé.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; that was passed to the &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)&quot; /&gt; method.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> qui a été passé à la méthode <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Loading">
      <summary vsli:raw="Gets a value indicating whether the designer loader is loading the design surface.">Obtient une valeur qui indique si le chargeur du concepteur charge l'aire de conception.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the designer loader is currently loading the design surface; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le chargeur du concepteur charge actuellement l'aire de conception ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified">
      <summary vsli:raw="Gets or sets a value indicating whether the designer has been modified.">Obtient ou définit une valeur indiquant si le concepteur a été modifié.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the designer has been modified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le concepteur a été modifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PropertyProvider">
      <summary vsli:raw="Gets or sets the property provider for the serialization manager being used by the loader.">Obtient ou définit le fournisseur de propriétés pour le gestionnaire de sérialisation utilisé par le chargeur.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has not been initialized.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> n'a pas été initialisé.</exception>
      <returns vsli:raw="An object whose properties are to be provided to the serialization manager.">Objet dont les propriétés doivent être fournies au gestionnaire de sérialisation.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadPending">
      <summary vsli:raw="Gets a value indicating whether a reload has been queued.">Obtient une valeur indiquant si un rechargement a été mis en file d'attente.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if a call to &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)&quot; /&gt; has queued a reload request; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, si un appel à <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)" /> a mis une demande de rechargement en file d'attente ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions">
      <summary vsli:raw="Defines the behavior of the &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)&quot; /&gt; method. These flags can be combined using the bitwise &lt;see langword=&quot;OR&quot; /&gt; operator.">Définit le comportement de la méthode <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)" />. Ces indicateurs peuvent être associés à l'aide de l'opérateur de bits <see langword="OR" />.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions.Default">
      <summary vsli:raw="The designer loader flushes changes before reloading, but it does not force a reload, and it also does not set the &lt;see cref=&quot;P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified&quot; /&gt; property to &lt;see langword=&quot;true&quot; /&gt; if load errors occur.">Le chargeur de concepteur vide les modifications avant de recharger, mais il n'impose pas de rechargement et il n'affecte pas non plus <see langword="true" /> à la propriété <see cref="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified" /> si des erreurs de chargement se produisent.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions.Force">
      <summary vsli:raw="The designer loader forces the reload to occur. Normally, a reload occurs only if the &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded&quot; /&gt; method returns &lt;see langword=&quot;true&quot; /&gt;. This flag bypasses calling this method and always performs the reload.">Le chargeur de concepteur impose le rechargement. Normalement, un rechargement ne se produit que si la méthode <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded" /> retourne <see langword="true" />. Cet indicateur ignore l'appel à cette méthode et exécute toujours le rechargement.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions.ModifyOnError">
      <summary vsli:raw="The designer loader will set the &lt;see cref=&quot;P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified&quot; /&gt; property to &lt;see langword=&quot;true&quot; /&gt; if load errors occur. This flag is useful if you want a flush of the loader to overwrite persistent state that had errors.">Le chargeur de concepteur affecte la valeur <see langword="true" /> à la propriété <see cref="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified" /> si des erreurs de chargement se produisent. Cet indicateur est utile si vous souhaitez que le chargeur soit vidé pour annuler un état persistant comportant des erreurs.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions.NoFlush">
      <summary vsli:raw="The designer loader abandons any changes before reloading.">Le chargeur de concepteur abandonne toute modification avant de recharger.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService">
      <summary vsli:raw="Serializes a set of components into a serialization store.">Sérialise un jeu de composants dans un magasin de sérialisation.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.#ctor(System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService&quot; /&gt; class using the given service provider to resolve services.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService" /> à l'aide du fournisseur de services donné pour résoudre des services.</summary>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; to use for resolving services.">
        <see cref="T:System.IServiceProvider" /> à utiliser pour résoudre des services.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt;.">Crée un <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</summary>
      <returns vsli:raw="A new serialization store.">Nouveau magasin de sérialisations.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore)">
      <summary vsli:raw="Deserializes the given store to produce a collection of objects.">Désérialise le magasin donné pour produire une collection d'objets.</summary>
      <param name="store" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; from which objects will be deserialized.">
        <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> à partir duquel les objets seront désérialisés.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="store" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is not a supported type of serialization store. Use a store returned by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore&quot; /&gt;.">
        <paramref name="store" /> n’est pas un type de magasin de sérialisation pris en charge. Utilisez un magasin retourné par <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
      <returns vsli:raw="A collection of deserialized components.">Collection de composants désérialisés.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)">
      <summary vsli:raw="Deserializes the given store and populates the given &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt; with deserialized &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects.">Désérialise le magasin donné et remplit le <see cref="T:System.ComponentModel.IContainer" /> donné avec des objets <see cref="T:System.ComponentModel.IComponent" /> désérialisés.</summary>
      <param name="store" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; from which objects will be deserialized.">
        <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> à partir duquel les objets seront désérialisés.</param>
      <param name="container" vsli:raw="A container to which &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects will be added.">Conteneur auquel des objets <see cref="T:System.ComponentModel.IComponent" /> seront ajoutés.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; or &lt;paramref name=&quot;container&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="store" /> ou <paramref name="container" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is not a supported type of serialization store. Use a store returned by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore&quot; /&gt;.">
        <paramref name="store" /> n’est pas un type de magasin de sérialisation pris en charge. Utilisez un magasin retourné par <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
      <returns vsli:raw="A collection of deserialized components.">Collection de composants désérialisés.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean,System.Boolean)">
      <summary vsli:raw="Deserializes the given &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; to the given container, optionally applying default property values.">Désérialise le <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> spécifié dans le conteneur donné, en appliquant éventuellement des valeurs de propriété par défaut.</summary>
      <param name="store" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; from which the objects will be deserialized.">
        <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> à partir duquel les objets seront désérialisés.</param>
      <param name="container" vsli:raw="A container of objects to which data will be applied.">Conteneur d'objets auquel des données seront appliquées.</param>
      <param name="validateRecycledTypes" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to validate the recycled type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour valider le type recyclé ; sinon, <see langword="false" />.</param>
      <param name="applyDefaults" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to apply default property values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour appliquer des valeurs de propriété par défaut ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; or &lt;paramref name=&quot;container&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="store" /> ou <paramref name="container" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is not a supported type of serialization store. Use a store returned by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore&quot; /&gt;.">
        <paramref name="store" /> n’est pas un type de magasin de sérialisation pris en charge. Utilisez un magasin retourné par <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.LoadStore(System.IO.Stream)">
      <summary vsli:raw="Loads a &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; from the given stream.">Charge <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> à partir du flux donné.</summary>
      <param name="stream" vsli:raw="The stream from which to load the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt;.">Flux à partir duquel <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> doit être chargé.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; supports seeking, but its length is 0.">
        <paramref name="stream" /> prend en charge la recherche, mais sa longueur est nulle.</exception>
      <returns vsli:raw="The loaded &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> chargé.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)">
      <summary vsli:raw="Serializes the given object to the given &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt;.">Sérialise l'objet donné dans le <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> donné.</summary>
      <param name="store" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; to which &lt;paramref name=&quot;value&quot; /&gt; will be serialized.">
        <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> dans lequel <paramref name="value" /> sera sérialisé.</param>
      <param name="value" vsli:raw="The object to serialize.">L'objet à sérialiser.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="store" /> ou <paramref name="value" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is closed, or &lt;paramref name=&quot;store&quot; /&gt; is not a supported type of serialization store. Use a store returned by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore&quot; /&gt;.">
        <paramref name="store" /> est fermé ou <paramref name="store" /> n’est pas un type de magasin de sérialisation pris en charge. Utilisez un magasin retourné par <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)">
      <summary vsli:raw="Serializes the given object, accounting for default property values.">Sérialise l'objet donné en prenant en compte les valeurs de propriétés par défaut.</summary>
      <param name="store" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; to which &lt;paramref name=&quot;value&quot; /&gt; will be serialized.">
        <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> dans lequel <paramref name="value" /> sera sérialisé.</param>
      <param name="value" vsli:raw="The object to serialize.">L'objet à sérialiser.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="store" /> ou <paramref name="value" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is closed, or &lt;paramref name=&quot;store&quot; /&gt; is not a supported type of serialization store. Use a store returned by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore&quot; /&gt;.">
        <paramref name="store" /> est fermé ou <paramref name="store" /> n’est pas un type de magasin de sérialisation pris en charge. Utilisez un magasin retourné par <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Serializes the given member on the given object.">Sérialise le membre donné sur l’objet donné.</summary>
      <param name="store" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; to which &lt;paramref name=&quot;member&quot; /&gt; will be serialized.">
        <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> dans lequel <paramref name="member" /> sera sérialisé.</param>
      <param name="owningObject" vsli:raw="The object that owns the &lt;paramref name=&quot;member&quot; /&gt;.">Objet qui possède le <paramref name="member" />.</param>
      <param name="member" vsli:raw="The given member.">Membre donné.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt;, &lt;paramref name=&quot;owningObject&quot; /&gt;, or &lt;paramref name=&quot;member&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="store" />, <paramref name="owningObject" /> ou <paramref name="member" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is closed, or &lt;paramref name=&quot;store&quot; /&gt; is not a supported type of serialization store. Use a store returned by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore&quot; /&gt;.">
        <paramref name="store" /> est fermé ou <paramref name="store" /> n’est pas un type de magasin de sérialisation pris en charge. Utilisez un magasin retourné par <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Serializes the given member on the given object, but also serializes the member if it contains the default property value.">Sérialise le membre donné sur l’objet donné, mais sérialise également le membre s’il contient la valeur de propriété par défaut.</summary>
      <param name="store" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; to which &lt;paramref name=&quot;member&quot; /&gt; will be serialized.">
        <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> dans lequel <paramref name="member" /> sera sérialisé.</param>
      <param name="owningObject" vsli:raw="The object that owns the &lt;paramref name=&quot;member&quot; /&gt;.">Objet qui possède le <paramref name="member" />.</param>
      <param name="member" vsli:raw="The given member.">Membre donné.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt;, &lt;paramref name=&quot;owningObject&quot; /&gt;, or &lt;paramref name=&quot;member&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="store" />, <paramref name="owningObject" /> ou <paramref name="member" /> est <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is closed, or &lt;paramref name=&quot;store&quot; /&gt; is not a supported type of serialization store. Use a store returned by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore&quot; /&gt;.">
        <paramref name="store" /> est fermé ou <paramref name="store" /> n’est pas un type de magasin de sérialisation pris en charge. Utilisez un magasin retourné par <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader">
      <summary vsli:raw="Provides the base class for implementing a CodeDOM-based designer loader.">Fournit la classe de base pour implémenter un chargeur de concepteur CodeDOM.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose">
      <summary vsli:raw="Releases the resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader&quot; /&gt; class.">Libère les ressources utilisées par la classe <see cref="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Initialize">
      <summary vsli:raw="Initializes services.">Initialise des services.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has not been initialized, or the designer loader did not supply a type resolution service, which is required for CodeDom serialization.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> n'a pas été initialisé ou le chargeur de concepteur n'a pas fourni de service de résolution de type, requis pour la sérialisation CodeDom.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.IsReloadNeeded">
      <summary vsli:raw="Returns a value indicating whether a reload is required.">Retourne une valeur qui indique si un rechargement est requis.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The language did not provide a code parser for this file; this file type may not support a designer.">Le langage n'a pas fourni d'analyseur de code pour ce fichier ; il se peut que ce type de fichier ne prenne pas en charge de concepteur.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The class can be designed, but it is not the first class in the file, or the designer could not be shown for this file because none of the classes within it can be designed.">La classe peut être conçue, mais il ne s'agit pas de la première classe dans le fichier, ou le concepteur n'a pas pu être indiqué pour ce fichier car aucune des classes qu'il contient ne peut être conçue.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider&quot; /&gt; decides a reload is required; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" /> décide qu'un rechargement est requis ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginLoad">
      <summary vsli:raw="Notifies the designer loader that loading is about to begin.">Indique au chargeur de concepteur que le chargement est sur le point de commencer.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginUnload">
      <summary vsli:raw="Notifies the designer loader that unloading is about to begin.">Indique au chargeur de concepteur que le déchargement est sur le point de commencer.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnComponentRename(System.Object,System.String,System.String)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentRename&quot; /&gt; event.">Déclenche l’événement <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" />.</summary>
      <param name="component" vsli:raw="The component to rename.">Composant à renommer.</param>
      <param name="oldName" vsli:raw="The original name of the component.">Nom d'origine du composant.</param>
      <param name="newName" vsli:raw="The new name of the component.">Nouveau nom du composant.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)">
      <summary vsli:raw="Notifies the designer loader that loading is complete.">Indique au chargeur de concepteur que le chargement est terminé.</summary>
      <param name="successful" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the load completed successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour indiquer que le chargement a été correctement effectué ; sinon <see langword="false" />.</param>
      <param name="errors" vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; of objects (usually exceptions) that were reported as errors.">
        <see cref="T:System.Collections.ICollection" /> d'objets (généralement des exceptions) qui ont été signalés comme des erreurs.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Parse">
      <summary vsli:raw="Parses the text or other persistent storage and returns a &lt;see cref=&quot;T:System.CodeDom.CodeCompileUnit&quot; /&gt;.">Analyse le texte ou tout autre stockage persistant et retourne <see cref="T:System.CodeDom.CodeCompileUnit" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeCompileUnit&quot; /&gt; resulting from a parse operation.">
        <see cref="T:System.CodeDom.CodeCompileUnit" /> qui résulte d'une opération d'analyse.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary vsli:raw="Requests serialization of the root component of the designer.">Demande la sérialisation du composant racine du concepteur.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; from which to request the serializer.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à partir duquel le sérialiseur doit être demandé.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The language did not provide a code parser for this file; this file type may not support a designer.">Le langage n'a pas fourni d'analyseur de code pour ce fichier ; il se peut que ce type de fichier ne prenne pas en charge de concepteur.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The class can be designed, but it is not the first class in the file, or the designer could not be shown for this file because none of the classes within it can be designed.">La classe peut être conçue, mais il ne s'agit pas de la première classe dans le fichier, ou le concepteur n'a pas pu être indiqué pour ce fichier car aucune des classes qu'il contient ne peut être conçue.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary vsli:raw="Parses code from a CodeDOM provider.">Analyse le code d'un fournisseur CodeDOM.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; from which to request the serializer.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à partir duquel le sérialiseur doit être demandé.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The language did not provide a code parser for this file; this file type may not support a designer.">Le langage n'a pas fourni d'analyseur de code pour ce fichier ; il se peut que ce type de fichier ne prenne pas en charge de concepteur.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The class can be designed, but it is not the first class in the file, or the designer could not be shown for this file because none of the classes within it can be designed.">La classe peut être conçue, mais il ne s'agit pas de la première classe dans le fichier, ou le concepteur n'a pas pu être indiqué pour ce fichier car aucune des classes qu'il contient ne peut être conçue.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerSerializationService#Deserialize(System.Object)">
      <summary vsli:raw="Deserializes the specified serialization data object and returns a collection of objects represented by that data.">Désérialise l'objet de données de sérialisation spécifié et retourne une collection d'objets représentés par ces données.</summary>
      <param name="serializationData" vsli:raw="An object consisting of serialized data.">Objet constitué de données sérialisées.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;serializationData&quot; /&gt; is not a &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt;.">
        <paramref name="serializationData" /> n’est pas un <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</exception>
      <returns vsli:raw="A collection of objects represented by &lt;paramref name=&quot;serializationData&quot; /&gt;.">Collection d'objets représentée par <paramref name="serializationData" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerSerializationService#Serialize(System.Collections.ICollection)">
      <summary vsli:raw="Serializes the specified collection of objects and stores them in a serialization data object.">Sérialise la collection d'objets spécifiée et les stocke dans un objet de données de sérialisation.</summary>
      <param name="objects" vsli:raw="A collection of objects to serialize.">Collection d'objets à sérialiser.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ComponentSerializationService&quot; /&gt; was not found.">
        <see cref="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" /> est introuvable.</exception>
      <returns vsli:raw="An object that contains the serialized state of the specified collection of objects.">Objet qui contient l'état sérialisé de la collection d'objets spécifiée.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#CreateName(System.ComponentModel.IContainer,System.Type)">
      <summary vsli:raw="Creates a new name that is unique to all components in the specified container.">Crée un nouveau nom spécifique à tous les composants du conteneur spécifié.</summary>
      <param name="container" vsli:raw="The container where the new object is added.">Conteneur dans lequel le nouvel objet est ajouté.</param>
      <param name="dataType" vsli:raw="The data type of the object that receives the name.">Type de données de l'objet auquel le nom est attribué.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dataType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dataType" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="A unique name for the data type.">Nom unique pour le type de données.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#IsValidName(System.String)">
      <summary vsli:raw="Gets a value indicating whether the specified name is valid.">Obtient une valeur indiquant si le nom spécifié est valide.</summary>
      <param name="name" vsli:raw="The name to validate.">Nom à valider.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the name is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le nom est valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#ValidateName(System.String)">
      <summary vsli:raw="Gets a value indicating whether the specified name is valid.">Obtient une valeur indiquant si le nom spécifié est valide.</summary>
      <param name="name" vsli:raw="The name to validate.">Nom à valider.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is not a valid identifier, or there is already a component with the same name.">
        <paramref name="name" /> n'est pas un identificateur valide ou il existe déjà un composant avec le même nom.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write(System.CodeDom.CodeCompileUnit)">
      <summary vsli:raw="Writes compile-unit changes to persistent storage.">Écrit des modifications d'unité de compilation dans un stockage persistant.</summary>
      <param name="unit" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeCompileUnit&quot; /&gt; to be persisted.">
        <see cref="T:System.CodeDom.CodeCompileUnit" /> à rendre persistant.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider&quot; /&gt; this designer loader will use.">Obtient le <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" /> que ce chargeur de concepteur utilisera.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider&quot; /&gt; this designer loader will use.">
        <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" /> que ce chargeur de concepteur utilisera.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.TypeResolutionService">
      <summary vsli:raw="Gets the type resolution service to be used with this designer loader.">Obtient le service de résolution de type à utiliser avec ce chargeur de concepteur.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.Design.ITypeResolutionService&quot; /&gt; that the CodeDOM serializers will use when resolving types.">
        <see cref="T:System.ComponentModel.Design.ITypeResolutionService" /> que les sérialiseurs CodeDOM utiliseront pour résoudre des types.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel">
      <summary vsli:raw="Determines the localization model to be used by the CodeDom resource adapter.">Détermine le modèle de localisation devant être utilisé par l'adaptateur de ressources CodeDom.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel.None">
      <summary vsli:raw="The localization provider should ignore localized properties. It will still write out resources for objects that do not support code generation and are serializable.">Le fournisseur de localisation doit ignorer les propriétés localisées. Il écrira toujours les ressources pour les objets sérialisables qui ne prennent pas en charge la génération du code.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel.PropertyAssignment">
      <summary vsli:raw="The localization provider will write out localized properties by assigning a resource to each property. This model is fast when the number of properties is small, but it scales poorly as the number of properties containing default values grows.">Le fournisseur de localisation écrit les propriétés localisées en affectant une ressource à chaque propriété. Ce modèle est performant avec un nombre de propriétés restreint, mais il met de plus en plus difficilement à l'échelle à mesure que le nombre de propriétés contenant des valeurs par défaut augmente.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel.PropertyReflection">
      <summary vsli:raw="The localization provider will write localized property values into a resource file and use the &lt;see cref=&quot;T:System.ComponentModel.ComponentResourceManager&quot; /&gt; class to reflect on properties by name to fill them at runtime. This uses reflection at runtime so it can be slow, but it scales better for large numbers of properties with default values.">Le fournisseur de localisation écrit les valeurs de propriété localisées dans un fichier de ressources et utilise la classe <see cref="T:System.ComponentModel.ComponentResourceManager" /> pour appliquer la réflexion sur les propriétés par leur nom afin de les remplir pendant l'exécution. Ce modèle utilise la réflexion pendant l'exécution ce qui peut ralentir le processus, mais il facilite la mise à l'échelle avec un nombre important de propriétés comportant des valeurs par défaut.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider">
      <summary vsli:raw="Provides CodeDOM resource serialization services. This class cannot be inherited.">Fournit des services de sérialisation de ressources CodeDOM. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.#ctor(System.IServiceProvider,System.ComponentModel.Design.Serialization.CodeDomLocalizationModel)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider" />.</summary>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; used by the localization provider to add its extender properties.">
        <see cref="T:System.IServiceProvider" /> utilisé par le fournisseur de localisation pour ajouter ses propriétés d'extendeur.</param>
      <param name="model" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel&quot; /&gt; value indicating the localization model to be used by the CodeDOM resource adapter.">Valeur de <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel" /> indiquant le modèle de localisation à utiliser par l'adaptateur de ressources CodeDom.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.#ctor(System.IServiceProvider,System.ComponentModel.Design.Serialization.CodeDomLocalizationModel,System.Globalization.CultureInfo[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider" />.</summary>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; used by the localization provider to add its extender properties.">
        <see cref="T:System.IServiceProvider" /> utilisé par le fournisseur de localisation pour ajouter ses propriétés d'extendeur.</param>
      <param name="model" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel&quot; /&gt; value indicating the localization model to be used by the CodeDOM resource adapter.">Valeur de <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel" /> indiquant le modèle de localisation à utiliser par l'adaptateur de ressources CodeDom.</param>
      <param name="supportedCultures" vsli:raw="An array of cultures that this resource adapter should support.">Tableau des cultures que cet adaptateur de ressources doit prendre en charge.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider&quot; /&gt;.">Libère toutes les ressources utilisées par <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.System#ComponentModel#Design#Serialization#IDesignerSerializationProvider#GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Type,System.Type)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Type,System.Type)&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Type,System.Type)" />.</summary>
      <param name="manager" vsli:raw="The serialization manager requesting the serializer.">Gestionnaire de sérialisation qui demande le sérialiseur.</param>
      <param name="currentSerializer" vsli:raw="An instance of the current serializer of the specified type. This can be &lt;see langword=&quot;null&quot; /&gt; if no serializer of the specified type exists.">Instance du sérialiseur en cours du type spécifié. Cela peut être <see langword="null" /> s'il n'existe aucun sérialiseur du type spécifié.</param>
      <param name="objectType" vsli:raw="The data type of the object to serialize.">Type des données de l'objet à sérialiser.</param>
      <param name="serializerType" vsli:raw="The data type of the serializer to create.">Type des données du sérialiseur à créer.</param>
      <returns vsli:raw="An instance of a serializer of the type requested, or &lt;see langword=&quot;null&quot; /&gt; if the request cannot be satisfied.">Instance d'un sérialiseur du type demandé, ou <see langword="null" /> si la demande ne peut pas être satisfaite.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializer">
      <summary vsli:raw="Serializes an object graph to a series of CodeDOM statements. This class provides an abstract base class for a serializer.">Sérialise un graphique d'objet en une série d'instructions CodeDOM. Cette classe fournit une classe de base abstraite pour un sérialiseur.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializer&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Deserializes the specified serialized CodeDOM object into an object.">Désérialise en un objet l'objet CodeDOM sérialisé spécifié.</summary>
      <param name="manager" vsli:raw="A serialization manager interface that is used during the deserialization process.">Interface du gestionnaire de sérialisation utilisée pendant le processus de désérialisation.</param>
      <param name="codeObject" vsli:raw="A serialized CodeDOM object to deserialize.">Objet CodeDOM sérialisé à désérialiser.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;codeObject&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> ou <paramref name="codeObject" /> est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;codeObject&quot; /&gt; is an unsupported code element.">
        <paramref name="codeObject" /> est un élément de code non pris en charge.</exception>
      <returns vsli:raw="The deserialized CodeDOM object.">Objet CodeDOM désérialisé.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.DeserializeStatementToInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)">
      <summary vsli:raw="Deserializes a single statement.">Désérialise une instruction seule.</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">Gestionnaire de sérialisation à utiliser pour la sérialisation.</param>
      <param name="statement" vsli:raw="The statement to deserialize.">Instruction à désérialiser.</param>
      <returns vsli:raw="An object instance resulting from deserializing &lt;paramref name=&quot;statement&quot; /&gt;.">Instance d'objet qui résulte de la désérialisation de <paramref name="statement" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.GetTargetComponentName(System.CodeDom.CodeStatement,System.CodeDom.CodeExpression,System.Type)">
      <summary vsli:raw="Determines which statement group the given statement should belong to.">Détermine à quel groupe d'instructions l'instruction donnée doit appartenir.</summary>
      <param name="statement" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeStatement&quot; /&gt; for which to determine the group.">
        <see cref="T:System.CodeDom.CodeStatement" /> pour lequel déterminer le groupe.</param>
      <param name="expression" vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; that &lt;paramref name=&quot;statement&quot; /&gt; has been reduced to.">
        <see cref="T:System.CodeDom.CodeExpression" /> auquel <paramref name="statement" /> a été réduit.</param>
      <param name="targetType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of &lt;paramref name=&quot;statement&quot; /&gt;.">
        <see cref="T:System.Type" /> de <paramref name="statement" />.</param>
      <returns vsli:raw="The name of the component with which &lt;paramref name=&quot;statement&quot; /&gt; should be grouped.">Nom du composant avec lequel <paramref name="statement" /> doit être groupé.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Serializes the specified object into a CodeDOM object.">Sérialise l’objet spécifié en un objet CodeDOM.</summary>
      <param name="manager" vsli:raw="The serialization manager to use during serialization.">Gestionnaire de sérialisation à utiliser pendant la sérialisation.</param>
      <param name="value" vsli:raw="The object to serialize.">L'objet à sérialiser.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> ou <paramref name="value" /> est <see langword="null" />.</exception>
      <returns vsli:raw="A CodeDOM object representing the object that has been serialized.">Objet CodeDOM représentant l'objet qui a été sérialisé.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeAbsolute(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Serializes the given object, accounting for default values.">Sérialise l'objet donné en prenant en compte les valeurs par défaut.</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">Gestionnaire de sérialisation à utiliser pour la sérialisation.</param>
      <param name="value" vsli:raw="The object to serialize.">L'objet à sérialiser.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> ou <paramref name="value" /> est <see langword="null" />.</exception>
      <returns vsli:raw="A CodeDom object representing &lt;paramref name=&quot;value&quot; /&gt;.">Objet CodeDom représentant <paramref name="value" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeMember(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Serializes the given member on the given object.">Sérialise le membre donné sur l’objet donné.</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">Gestionnaire de sérialisation à utiliser pour la sérialisation.</param>
      <param name="owningObject" vsli:raw="The object to which is &lt;paramref name=&quot;member&quot; /&gt; attached.">Objet auquel <paramref name="member" /> est attaché.</param>
      <param name="member" vsli:raw="The member to serialize.">Membre à sérialiser.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;owningObject&quot; /&gt;, or &lt;paramref name=&quot;member&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />, <paramref name="owningObject" /> ou <paramref name="member" /> est <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;member&quot; /&gt; is not a serializable type.">
        <paramref name="member" /> n’est pas un type sérialisable.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeStatementCollection&quot; /&gt; representing the serialized state of &lt;paramref name=&quot;member&quot; /&gt;.">
        <see cref="T:System.CodeDom.CodeStatementCollection" /> qui représente l’état sérialisé de <paramref name="member" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Serializes the given member, accounting for default values.">Sérialise le membre donné en tenant compte des valeurs par défaut.</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">Gestionnaire de sérialisation à utiliser pour la sérialisation.</param>
      <param name="owningObject" vsli:raw="The object to which is &lt;paramref name=&quot;member&quot; /&gt; attached.">Objet auquel <paramref name="member" /> est attaché.</param>
      <param name="member" vsli:raw="The member to serialize.">Membre à sérialiser.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;owningObject&quot; /&gt;, or &lt;paramref name=&quot;member&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />, <paramref name="owningObject" /> ou <paramref name="member" /> est <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;member&quot; /&gt; is not a serializable type.">
        <paramref name="member" /> n’est pas un type sérialisable.</exception>
      <returns vsli:raw="A CodeDom object representing &lt;paramref name=&quot;member&quot; /&gt;.">Objet CodeDom représentant <paramref name="member" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeToReferenceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Serializes the specified value to a CodeDOM expression.">Sérialise la valeur spécifiée en une expression CodeDOM.</summary>
      <param name="manager" vsli:raw="The serialization manager to use during serialization.">Gestionnaire de sérialisation à utiliser pendant la sérialisation.</param>
      <param name="value" vsli:raw="The object to serialize.">L'objet à sérialiser.</param>
      <returns vsli:raw="The serialized value. This returns &lt;see langword=&quot;null&quot; /&gt; if no reference expression can be obtained for the specified value, or the value cannot be serialized.">Valeur sérialisée. Cela retourne <see langword="null" /> si aucune expression de référence ne peut être obtenue pour la valeur spécifiée ou si la valeur ne peut pas être sérialisée.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializerBase">
      <summary vsli:raw="Provides a base class for &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializer&quot; /&gt; classes.">Fournit une classe de base pour les classes <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
      <summary vsli:raw="Deserializes the given expression into an in-memory object.">Désérialise l'expression donnée dans un objet en mémoire.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pour la sérialisation.</param>
      <param name="name" vsli:raw="The name of the object that results from the expression. Can be &lt;see langword=&quot;null&quot; /&gt; if there is no need to name the object.">Nom de l'objet qui résulte de l'expression. Peut être <see langword="null" /> s'il n'est pas nécessaire de nommer l'objet.</param>
      <param name="expression" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; to interpret.">
        <see cref="T:System.CodeDom.CodeExpression" /> à interpréter.</param>
      <returns vsli:raw="An object resulting from interpretation of &lt;paramref name=&quot;expression&quot; /&gt;.">Objet qui résulte de l'interprétation de <paramref name="expression" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)">
      <summary vsli:raw="Returns an instance of the given type.">Retourne une instance du type donné.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pour la sérialisation.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the instance to return.">
        <see cref="T:System.Type" /> de l'instance à retourner.</param>
      <param name="parameters" vsli:raw="The parameters to pass to the constructor for &lt;paramref name=&quot;type&quot; /&gt;.">Paramètres à passer au constructeur pour <paramref name="type" />.</param>
      <param name="name" vsli:raw="The name of the deserialized object.">Nom de l'objet désérialisé.</param>
      <param name="addToContainer" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to add this object to the design container; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The object must implement &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; for this to have any effect.">
        <see langword="true" /> pour ajouter cet objet au conteneur de design ; sinon, <see langword="false" />. L'objet doit implémenter <see cref="T:System.ComponentModel.IComponent" /> pour qu'il entre en vigueur.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> ou <paramref name="type" /> est <see langword="null" />.</exception>
      <returns vsli:raw="An instance of &lt;paramref name=&quot;type&quot; /&gt;.">Instance de <paramref name="type" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
      <summary vsli:raw="Deserializes properties on the given object from the invariant culture's resource bundle.">Désérialise les propriétés sur l’objet donné à partir du bundle de ressources de la culture invariante.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pour la sérialisation.</param>
      <param name="value" vsli:raw="The object from which the properties are to be deserialized.">Objet dont les propriétés doivent être désérialisées.</param>
      <param name="filter" vsli:raw="An &lt;see cref=&quot;T:System.Attribute&quot; /&gt; array that filters which properties will be deserialized.">Tableau <see cref="T:System.Attribute" /> qui filtre les propriétés à désérialiser.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)">
      <summary vsli:raw="Deserializes a statement by interpreting and executing a CodeDOM statement.">Désérialise une instruction en interprétant et en exécutant une instruction CodeDOM.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pour la sérialisation.</param>
      <param name="statement" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeStatement&quot; /&gt; to deserialize.">
        <see cref="T:System.CodeDom.CodeStatement" /> à désérialiser.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
      <summary vsli:raw="Gets a collection of attributes as defined in the project's target version of .NET.">Obtient une collection d'attributs définis dans la version cible du projet du .NET Framework.</summary>
      <param name="manager" vsli:raw="The serialization manager.">Gestionnaire de sérialisation.</param>
      <param name="type" vsli:raw="The target type.">Type cible.</param>
      <returns vsli:raw="A collection of attributes as defined in the project's target version of .NET.">Collection d'attributs définis dans la version cible du projet du .NET Framework.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Gets a collection of attributes as defined in the project's target version of .NET.">Obtient une collection d'attributs définis dans la version cible du projet du .NET Framework.</summary>
      <param name="manager" vsli:raw="The serialization manager.">Gestionnaire de sérialisation.</param>
      <param name="instance" vsli:raw="An object of the target type.">Objet du type cible.</param>
      <returns vsli:raw="A collection of attributes as defined in the project's target version of .NET.">Collection d'attributs définis dans la version cible du projet du .NET Framework.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
      <summary vsli:raw="Gets a collection of events as defined in the project's target version of .NET.">Obtient une collection d'événements définis dans la version cible du projet du .NET Framework.</summary>
      <param name="manager" vsli:raw="The serialization manager.">Gestionnaire de sérialisation.</param>
      <param name="instance" vsli:raw="An object of the target type.">Objet du type cible.</param>
      <param name="attributes" vsli:raw="An array of attributes to pass to the target version of .NET.">Tableau d'attributs à passer à la version cible du .NET Framework.</param>
      <returns vsli:raw="A collection of events as defined in the project's target version of .NET.">Collection d'événements définis dans la version cible du projet du .NET Framework.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Returns an expression for the given object.">Retourne une expression pour l'objet donné.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pour la sérialisation.</param>
      <param name="value" vsli:raw="The object for which to get an expression.">Objet pour lequel une expression doit être obtenue.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; representing &lt;paramref name=&quot;value&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if there is no existing expression for &lt;paramref name=&quot;value&quot; /&gt;.">
        <see cref="T:System.CodeDom.CodeExpression" /> représentant <paramref name="value" /> ou <see langword="null" /> s’il n’existe pas d’expression pour <paramref name="value" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
      <summary vsli:raw="Gets a collection of properties as defined in the project's target version of .NET.">Obtient une collection de propriétés définies dans la version cible du projet du .NET Framework.</summary>
      <param name="manager" vsli:raw="The serialization manager.">Gestionnaire de sérialisation.</param>
      <param name="instance" vsli:raw="An object of the target type.">Objet du type cible.</param>
      <param name="attributes" vsli:raw="An array of attributes to pass to the target version of .NET.">Tableau d'attributs à passer à la version cible du .NET Framework.</param>
      <returns vsli:raw="A collection of properties as defined in the project's target version of .NET.">Collection de propriétés définies dans la version cible du projet du .NET Framework.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
      <summary vsli:raw="Gets a reflection type generated from type metadata.">Obtient un type de réflexion généré à partir de métadonnées de type.</summary>
      <param name="manager" vsli:raw="The serialization manager.">Gestionnaire de sérialisation.</param>
      <param name="type" vsli:raw="The type to use metadata from.">Type à partir duquel utiliser des métadonnées.</param>
      <returns vsli:raw="A reflection type generated from the metadata of &lt;paramref name=&quot;type&quot; /&gt;.">Type de réflexion généré à partir des métadonnées de <paramref name="type" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Gets a reflection type generated from object metadata.">Obtient un type de réflexion généré à partir de métadonnées d'objets.</summary>
      <param name="manager" vsli:raw="The serialization manager.">Gestionnaire de sérialisation.</param>
      <param name="instance" vsli:raw="The object to use metadata from.">Objet à partir duquel utiliser des métadonnées.</param>
      <returns vsli:raw="A reflection type generated from the metadata of &lt;paramref name=&quot;object&quot; /&gt;.">Type de réflexion généré à partir des métadonnées de <paramref name="object" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Locates a serializer for the given object value.">Recherche un sérialiseur pour la valeur d'objet donnée.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pour la sérialisation.</param>
      <param name="value" vsli:raw="The object specifying the serializer to retrieve.">Objet spécifiant le sérialiseur à récupérer.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> ou <paramref name="value" /> est <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializer&quot; /&gt; that is appropriate for &lt;paramref name=&quot;value&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> approprié pour <paramref name="value" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
      <summary vsli:raw="Locates a serializer for the given type.">Recherche un sérialiseur pour le type donné.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pour la sérialisation.</param>
      <param name="valueType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; specifying the serializer to retrieve.">
        <see cref="T:System.Type" /> spécifiant le sérialiseur à récupérer.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;valueType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> ou <paramref name="valueType" /> est <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializer&quot; /&gt; that is appropriate for &lt;paramref name=&quot;valueType&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> approprié pour <paramref name="valueType" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(System.IServiceProvider,System.Object)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptionProvider&quot; /&gt; that is aware of the target version of .NET, for use in type filtering.">Obtient un <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> qui connaît la version cible du .NET Framework, à utiliser dans le filtrage de types.</summary>
      <param name="provider" vsli:raw="The type description provider service.">Service de fournisseur de description de type.</param>
      <param name="instance" vsli:raw="An object from which the type description provider service can be derived, if &lt;paramref name=&quot;provider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Objet duquel le service de fournisseur de description de type peut être dérivé, si <paramref name="provider" /> est <see langword="null" />.</param>
      <returns vsli:raw="A .NET-aware type description provider.">Fournisseur de description de type connaissant .NET Framework.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Returns a unique name for the given object.">Retourne un nom unique pour l'objet donné.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pour la sérialisation.</param>
      <param name="value" vsli:raw="The object for which the name will be retrieved.">Objet pour lequel le nom doit être récupéré.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> ou <paramref name="value" /> est <see langword="null" />.</exception>
      <returns vsli:raw="A unique name for &lt;paramref name=&quot;value&quot; /&gt;.">Nom unique pour <paramref name="value" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Returns a value indicating whether the given object has been serialized.">Retourne une valeur qui indique si l'objet donné a été sérialisé.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pour la sérialisation.</param>
      <param name="value" vsli:raw="The object to test for previous serialization.">Objet dont la sérialisation précédente doit être testée.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> ou <paramref name="value" /> est <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; has been serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="value" /> a été sérialisé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
      <summary vsli:raw="Returns a value indicating whether the given object has been serialized, optionally considering preset expressions.">Retourne une valeur qui indique si l'objet donné a été sérialisé, en tenant éventuellement compte des expressions prédéfinies.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pour la sérialisation.</param>
      <param name="value" vsli:raw="The object to test for previous serialization.">Objet dont la sérialisation précédente doit être testée.</param>
      <param name="honorPreset" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to include preset expressions; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour inclure des expressions prédéfinies ; sinon <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> ou <paramref name="value" /> est <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; has been serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="value" /> a été sérialisé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)">
      <summary vsli:raw="Returns an expression representing the creation of the given object.">Retourne une expression qui représente la création de l'objet donné.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pour la sérialisation.</param>
      <param name="value" vsli:raw="The object to serialize.">L'objet à sérialiser.</param>
      <param name="isComplete" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; was fully serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="value" /> a été entièrement sérialisé ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> ou <paramref name="value" /> est <see langword="null" />.</exception>
      <returns vsli:raw="An expression representing the creation of &lt;paramref name=&quot;value&quot; /&gt;.">Expression qui représente la création de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)">
      <summary vsli:raw="Serializes the given event into the given statement collection.">Sérialise l’événement donné dans la collection d’instructions donnée.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pour la sérialisation.</param>
      <param name="statements" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeStatementCollection&quot; /&gt; into which the event will be serialized.">
        <see cref="T:System.CodeDom.CodeStatementCollection" /> dans lequel l’événement est sérialisé.</param>
      <param name="value" vsli:raw="The object to which &lt;paramref name=&quot;descriptor&quot; /&gt; is bound.">Objet auquel <paramref name="descriptor" /> est lié.</param>
      <param name="descriptor" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; specifying the event to serialize.">
        <see cref="T:System.ComponentModel.EventDescriptor" /> qui spécifie l’événement à sérialiser.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;value&quot; /&gt;, &lt;paramref name=&quot;statements&quot; /&gt;, or &lt;paramref name=&quot;descriptor&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />, <paramref name="value" />, <paramref name="statements" /> ou <paramref name="descriptor" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" vsli:raw="&lt;see cref=&quot;T:System.ComponentModel.Design.IEventBindingService&quot; /&gt; is not available.">
        <see cref="T:System.ComponentModel.Design.IEventBindingService" /> n’est pas disponible.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary vsli:raw="Serializes the specified events into the given statement collection.">Sérialise les événements spécifiés dans la collection d’instructions donnée.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pour la sérialisation.</param>
      <param name="statements" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeStatementCollection&quot; /&gt; into which the event will be serialized.">
        <see cref="T:System.CodeDom.CodeStatementCollection" /> dans lequel l’événement est sérialisé.</param>
      <param name="value" vsli:raw="The object on which events will be serialized.">Objet sur lequel les événements doivent être sérialisés.</param>
      <param name="filter" vsli:raw="An &lt;see cref=&quot;T:System.Attribute&quot; /&gt; array that filters which events will be serialized.">Tableau de <see cref="T:System.Attribute" /> qui filtre les événements à sérialiser.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;value&quot; /&gt;, or &lt;paramref name=&quot;statements&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />, <paramref name="value" /> ou <paramref name="statements" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary vsli:raw="Serializes the properties on the given object into the given statement collection.">Sérialise les propriétés sur l’objet donné dans la collection d’instructions donnée.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pour la sérialisation.</param>
      <param name="statements" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeStatementCollection&quot; /&gt; into which the properties will be serialized.">
        <see cref="T:System.CodeDom.CodeStatementCollection" /> dans lequel les propriétés doivent être sérialisées.</param>
      <param name="value" vsli:raw="The object on which the properties will be serialized.">Objet dans lequel les propriétés doivent être sérialisées.</param>
      <param name="filter" vsli:raw="An &lt;see cref=&quot;T:System.Attribute&quot; /&gt; array that filters which properties will be serialized.">Tableau de <see cref="T:System.Attribute" /> qui filtre les propriétés à sérialiser.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;value&quot; /&gt;, or &lt;paramref name=&quot;statements&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />, <paramref name="value" /> ou <paramref name="statements" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary vsli:raw="Serializes the properties on the given object into the invariant culture's resource bundle.">Sérialise les propriétés sur l’objet donné dans le bundle de ressources de la culture invariante.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pour la sérialisation.</param>
      <param name="statements" vsli:raw="Not used.">Non utilisé.</param>
      <param name="value" vsli:raw="The object whose properties will be serialized.">Objet dont les propriétés seront sérialisées.</param>
      <param name="filter" vsli:raw="An &lt;see cref=&quot;T:System.Attribute&quot; /&gt; array that filters which properties will be serialized.">Tableau de <see cref="T:System.Attribute" /> qui filtre les propriétés à sérialiser.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;value&quot; /&gt;, or &lt;paramref name=&quot;statements&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />, <paramref name="value" /> ou <paramref name="statements" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Serializes a property on the given object.">Sérialise une propriété sur l’objet donné.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pour la sérialisation.</param>
      <param name="statements" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeStatementCollection&quot; /&gt; into which the property will be serialized.">
        <see cref="T:System.CodeDom.CodeStatementCollection" /> dans lequel la propriété est sérialisée.</param>
      <param name="value" vsli:raw="The object on which the property will be serialized.">Objet sur lequel la propriété est sérialisée.</param>
      <param name="propertyToSerialize" vsli:raw="The property to serialize.">Propriété à sérialiser.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;value&quot; /&gt;, &lt;paramref name=&quot;statements&quot; /&gt;, or &lt;paramref name=&quot;propertyToSerialize&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />, <paramref name="value" />, <paramref name="statements" /> ou <paramref name="propertyToSerialize" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
      <summary vsli:raw="Serializes the given object into a resource bundle using the given resource name.">Sérialise l'objet donné dans un groupe de ressources à l'aide du nom de ressource donné.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pour la sérialisation.</param>
      <param name="resourceName" vsli:raw="The name of the resource bundle into which &lt;paramref name=&quot;value&quot; /&gt; will be serialized.">Nom du groupe de ressources dans lequel <paramref name="value" /> sera sérialisé.</param>
      <param name="value" vsli:raw="The object to serialize.">L'objet à sérialiser.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
      <summary vsli:raw="Serializes the given object into a resource bundle using the given resource name.">Sérialise l'objet donné dans un groupe de ressources à l'aide du nom de ressource donné.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pour la sérialisation.</param>
      <param name="resourceName" vsli:raw="The name of the resource bundle into which &lt;paramref name=&quot;value&quot; /&gt; will be serialized.">Nom du groupe de ressources dans lequel <paramref name="value" /> sera sérialisé.</param>
      <param name="value" vsli:raw="The object to serialize.">L'objet à sérialiser.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Serializes the given object into an expression.">Sérialise l'objet donné dans une expression.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pour la sérialisation.</param>
      <param name="value" vsli:raw="The object to serialize. Can be &lt;see langword=&quot;null&quot; /&gt;.">L'objet à sérialiser. Peut être <see langword="null" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; object if &lt;paramref name=&quot;value&quot; /&gt; can be serialized; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Objet <see cref="T:System.CodeDom.CodeExpression" /> si <paramref name="value" /> peut être sérialisé ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Serializes the given object into an expression.">Sérialise l'objet donné dans une expression.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pour la sérialisation.</param>
      <param name="value" vsli:raw="The object to serialize.">L'objet à sérialiser.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; containing &lt;paramref name=&quot;value&quot; /&gt; as a serialized expression.">
        <see cref="T:System.CodeDom.CodeExpression" /> qui contient <paramref name="value" /> comme expression sérialisée.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
      <summary vsli:raw="Serializes the given object into an expression appropriate for the invariant culture.">Sérialise l'objet donné dans une expression appropriée pour la culture dite indifférente.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pour la sérialisation.</param>
      <param name="value" vsli:raw="The object to serialize.">L'objet à sérialiser.</param>
      <param name="ensureInvariant" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize into the invariant culture; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour sérialiser dans la culture dite indifférente ; sinon <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; containing &lt;paramref name=&quot;value&quot; /&gt; as a serialized expression.">
        <see cref="T:System.CodeDom.CodeExpression" /> qui contient <paramref name="value" /> comme expression sérialisée.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)">
      <summary vsli:raw="Associates an object with an expression.">Associe un objet à une expression.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pour la sérialisation.</param>
      <param name="value" vsli:raw="The object to serialize.">L'objet à sérialiser.</param>
      <param name="expression" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; with which to associate &lt;paramref name=&quot;value&quot; /&gt;.">
        <see cref="T:System.CodeDom.CodeExpression" /> auquel associer <paramref name="value" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;value&quot; /&gt;, or &lt;paramref name=&quot;expression&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />, <paramref name="value" /> ou <paramref name="expression" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)">
      <summary vsli:raw="Associates an object with an expression, optionally specifying a preset expression.">Associe un objet à une expression, en spécifiant éventuellement une expression prédéfinie.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pour la sérialisation.</param>
      <param name="value" vsli:raw="The object to serialize.">L'objet à sérialiser.</param>
      <param name="expression" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; with which to associate &lt;paramref name=&quot;value&quot; /&gt;.">
        <see cref="T:System.CodeDom.CodeExpression" /> auquel associer <paramref name="value" />.</param>
      <param name="isPreset" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify a preset expression; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour spécifier une expression prédéfinie ; sinon, <see langword="false" />.</param>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException">
      <summary vsli:raw="The exception that is thrown when line number information is available for a serialization error.">Exception levée si des informations sur le numéro de la ligne sont disponibles pour une erreur de sérialisation.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.Exception,System.CodeDom.CodeLinePragma)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializerException&quot; /&gt; class using the specified exception and line information.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> avec l'exception et les informations sur la ligne spécifiées.</summary>
      <param name="ex" vsli:raw="The exception to throw.">Exception à lever.</param>
      <param name="linePragma" vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeLinePragma&quot; /&gt; that indicates where the exception occurred.">
        <see cref="T:System.CodeDom.CodeLinePragma" /> indiquant l'endroit où l'erreur s'est produite.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.Exception,System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializerException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" />.</summary>
      <param name="ex" vsli:raw="The exception to throw.">Exception à lever.</param>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; object from which to extract the context.">Objet <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à partir duquel extraire le contexte.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Manager&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="Manager" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.String,System.CodeDom.CodeLinePragma)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializerException&quot; /&gt; class using the specified message and line information.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> avec le message et les informations sur la ligne spécifiées.</summary>
      <param name="message" vsli:raw="A message describing the exception.">Message décrivant l'exception.</param>
      <param name="linePragma" vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeLinePragma&quot; /&gt; that indicates where the exception occurred.">
        <see cref="T:System.CodeDom.CodeLinePragma" /> indiquant l'endroit où l'erreur s'est produite.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.String,System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializerException&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" />.</summary>
      <param name="message" vsli:raw="A message describing the exception.">Message décrivant l'exception.</param>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; object from which to extract the context.">Objet <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à partir duquel extraire le contexte.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Manager&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="Manager" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object with the parameter name and additional exception information.">Définit l'objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec le nom du paramètre et d'autres informations se rapportant à l'exception.</summary>
      <param name="info" vsli:raw="Stores the data that was being used to serialize or deserialize the object that the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializer&quot; /&gt; was serializing or deserializing.">Stocke les données utilisées pour sérialiser ou désérialiser l'objet que <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> sérialisait ou désérialisait.</param>
      <param name="context" vsli:raw="Describes the source and destination of the stream that generated the exception, as well as a means for serialization to retain that context and an additional caller-defined context.">Décrit la source et la destination du flux ayant généré l'exception, ainsi qu'un moyen pour la sérialisation de conserver ce contexte et un contexte supplémentaire défini par l'appelant.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;info&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Le paramètre <paramref name="info" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.CodeDomSerializerException.LinePragma">
      <summary vsli:raw="Gets or sets the line information for the error associated with this exception.">Obtient ou définit les informations sur la ligne pour l'erreur associée à l'exception.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeLinePragma&quot; /&gt; that indicates the line information for the error.">
        <see cref="T:System.CodeDom.CodeLinePragma" /> indiquant les informations sur la ligne pour l'erreur.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer">
      <summary vsli:raw="Serializes collections.">Sérialise des collections.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.MethodSupportsSerialization(System.Reflection.MethodInfo)">
      <summary vsli:raw="Verifies serialization support by the &lt;paramref name=&quot;method&quot; /&gt;.">Vérifie la prise en charge de la sérialisation par <paramref name="method" />.</summary>
      <param name="method" vsli:raw="The &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; to check for serialization attributes.">
        <see cref="T:System.Reflection.MethodInfo" /> dont les attributs de sérialisation doivent être vérifiés.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;method&quot; /&gt; supports serialization; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="method" /> prend en charge la sérialisation ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Serializes the given collection into a CodeDOM object.">Sérialise la collection donnée dans un objet CodeDOM.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use during serialization.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pendant la sérialisation.</param>
      <param name="value" vsli:raw="The object to serialize.">L'objet à sérialiser.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> ou <paramref name="value" /> est <see langword="null" />.</exception>
      <returns vsli:raw="A CodeDOM object representing &lt;paramref name=&quot;value&quot; /&gt;.">Objet CodeDom qui représente <paramref name="value" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.SerializeCollection(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeExpression,System.Type,System.Collections.ICollection,System.Collections.ICollection)">
      <summary vsli:raw="Serializes the given collection.">Sérialise la collection donnée.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use during serialization.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> à utiliser pendant la sérialisation.</param>
      <param name="targetExpression" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; that refers to the collection.">
        <see cref="T:System.CodeDom.CodeExpression" /> qui fait référence à la collection</param>
      <param name="targetType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the collection.">
        <see cref="T:System.Type" /> de la collection.</param>
      <param name="originalCollection" vsli:raw="The collection to serialize.">Collection à sérialiser.</param>
      <param name="valuesToSerialize" vsli:raw="The values to serialize.">Valeurs à sérialiser.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;targetType&quot; /&gt;, &lt;paramref name=&quot;originalCollection&quot; /&gt;, or &lt;paramref name=&quot;valuesToSerialize&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />, <paramref name="targetType" />, <paramref name="originalCollection" /> ou <paramref name="valuesToSerialize" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="Serialized collection if the serialization process succeeded; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Collection sérialisée si le processus de sérialisation a réussi ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
      <summary vsli:raw="Provides an implementation of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; interface.">Fournit une implémentation de l’interface <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated">
      <summary vsli:raw="Occurs when a session is created.">Se produit lors de la création d'une session.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed">
      <summary vsli:raw="Occurs when a session is disposed.">Se produit lors de la suppression d'une session.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ResolveName">
      <summary vsli:raw="Occurs when &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)&quot; /&gt; cannot locate the specified name in the serialization manager's name table.">Se produit lorsque la méthode <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" /> ne parvient pas à trouver le nom spécifié dans la table de noms du gestionnaire de sérialisation.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The serialization manager does not have an active serialization session.">Le gestionnaire de sérialisation ne dispose d'aucune session de sérialisation active.</exception>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SerializationComplete">
      <summary vsli:raw="Occurs when serialization is complete.">Se produit lorsque la sérialisation est terminée.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The serialization manager does not have an active serialization session.">Le gestionnaire de sérialisation ne dispose d'aucune session de sérialisation active.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.DesignerSerializationManager&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor(System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.DesignerSerializationManager&quot; /&gt; class with the given service provider.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> avec le fournisseur de services donné.</summary>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt;.">Élément <see cref="T:System.IServiceProvider" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;provider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="provider" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
      <summary vsli:raw="Creates an instance of a type.">Crée une instance d'un type.</summary>
      <param name="type" vsli:raw="The type to create an instance of.">Type dont une instance doit être créée.</param>
      <param name="arguments" vsli:raw="The parameters of the type's constructor. This can be &lt;see langword=&quot;null&quot; /&gt; or an empty collection to invoke the parameterless constructor.">Paramètres du constructeur du type. Il peut s’agir de <see langword="null" /> ou d’une collection vide pour appeler le constructeur sans paramètre.</param>
      <param name="name" vsli:raw="A name to give the object. If &lt;see langword=&quot;null&quot; /&gt;, the object will not be given a name, unless the object is added to a container and the container gives the object a name.">Nom à attribuer à l'objet. Si la valeur est <see langword="null" />, aucun nom n'est attribué à l'objet, à moins que celui-ci soit ajouté à un conteneur et que le conteneur donne un nom à l'objet.</param>
      <param name="addToContainer" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to add the object to the container if the object implements &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour ajouter l'objet au conteneur si l'objet implémente <see cref="T:System.ComponentModel.IComponent" /> ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; does not have a constructor that takes parameters contained in &lt;paramref name=&quot;arguments&quot; /&gt;.">
        <paramref name="type" /> n'a pas de constructeur qui prend des paramètres contenus dans <paramref name="arguments" />.</exception>
      <returns vsli:raw="A new instance of the type specified by &lt;paramref name=&quot;type&quot; /&gt;.">Nouvelle instance du type spécifié par <paramref name="type" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession">
      <summary vsli:raw="Creates a new serialization session.">Crée une nouvelle session de sérialisation.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The serialization manager is already within a session. This version of &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.DesignerSerializationManager&quot; /&gt; does not support simultaneous sessions.">Le gestionnaire de sérialisation se trouve déjà dans une session. Cette version de <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> ne prend pas en charge des sessions simultanées.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; that represents a new serialization session.">
        <see cref="T:System.IDisposable" /> qui représente une nouvelle session de sérialisation.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(System.String)">
      <summary vsli:raw="Gets the type corresponding to the specified type name.">Obtient le type correspondant au nom de type spécifié.</summary>
      <param name="typeName" vsli:raw="The name of the type to get.">Nom du type à obtenir.</param>
      <returns vsli:raw="The specified type.">Type spécifié.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)">
      <summary vsli:raw="Gets the serializer for the given object type.">Obtient le sérialiseur pour le type d'objet donné.</summary>
      <param name="objectType" vsli:raw="The type of object for which to retrieve the serializer.">Type d'objet pour lequel le sérialiseur doit être récupéré.</param>
      <param name="serializerType" vsli:raw="The type of serializer to retrieve.">Type de sérialiseur à récupérer.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;objectType&quot; /&gt; or &lt;paramref name=&quot;serializerType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="objectType" /> ou <paramref name="serializerType" /> est <see langword="null" />.</exception>
      <returns vsli:raw="The serializer for &lt;paramref name=&quot;objectType&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;, if not found.">Sérialiseur de <paramref name="objectType" /> ou <see langword="null" />, s'il est introuvable.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(System.Type)">
      <summary vsli:raw="Gets the requested service.">Obtient le service demandé.</summary>
      <param name="serviceType" vsli:raw="The type of service to retrieve.">Type de service à récupérer.</param>
      <returns vsli:raw="The requested service, or &lt;see langword=&quot;null&quot; /&gt; if the service cannot be resolved.">Service demandé ou <see langword="null" /> si le service ne peut pas être résolu.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(System.String)">
      <summary vsli:raw="Gets the requested type.">Obtient le type demandé.</summary>
      <param name="typeName" vsli:raw="The name of the type to retrieve.">Nom du type à récupérer.</param>
      <returns vsli:raw="The requested type, or &lt;see langword=&quot;null&quot; /&gt; if the type cannot be resolved.">Type demandé ou <see langword="null" /> si le type ne peut pas être résolu.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName&quot; /&gt; event.">Déclenche l’événement <see cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ResolveNameEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.Design.Serialization.ResolveNameEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated&quot; /&gt; event.">Déclenche l’événement <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated" />.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.EventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed&quot; /&gt; event.">Déclenche l’événement <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed" />.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.EventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
      <summary vsli:raw="Adds a custom serialization provider to the serialization manager.">Ajoute un fournisseur de sérialisation personnalisé au gestionnaire de sérialisation.</summary>
      <param name="provider" vsli:raw="The serialization provider to add.">Fournisseur de sérialisation à ajouter.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
      <summary vsli:raw="Implements the &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; method.">Implémente la méthode <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />.</summary>
      <param name="type" vsli:raw="The data type to create.">Type de données à créer.</param>
      <param name="arguments" vsli:raw="The arguments to pass to the constructor for this type.">Arguments à passer au constructeur de ce type.</param>
      <param name="name" vsli:raw="The name of the object. This name can be used to access the object later through &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)&quot; /&gt;. If &lt;see langword=&quot;null&quot; /&gt; is passed, the object is still created but cannot be accessed by name.">Nom de l'objet. Ce nom peut être utilisé pour accéder ultérieurement à l'objet via <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" />. Si <see langword="null" /> est passée, l'objet est toujours créé, mais n'est pas accessible par son nom.</param>
      <param name="addToContainer" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to add this object to the design container. The object must implement &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; for this to have any effect.">
        <see langword="true" /> pour ajouter cet objet au conteneur de design. L'objet doit implémenter <see cref="T:System.ComponentModel.IComponent" /> pour qu'il entre en vigueur.</param>
      <returns vsli:raw="The newly created object instance.">Instance de l'objet qui vient d'être créé.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)">
      <summary vsli:raw="Retrieves an instance of a created object of the specified name.">Récupère une instance d'un objet créé du nom spécifié.</summary>
      <param name="name" vsli:raw="The name of the object to retrieve.">Le nom de l'objet à récupérer.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was accessed outside of a serialization session.">L'accès à cette propriété s'est effectué en dehors d'une session de sérialisation.</exception>
      <returns vsli:raw="An instance of the object with the given name, or &lt;see langword=&quot;null&quot; /&gt; if no object by that name can be found.">Instance de l'objet portant le nom donné, ou <see langword="null" /> si aucun objet portant ce nom n'est détecté.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)">
      <summary vsli:raw="Retrieves a name for the specified object.">Récupère un nom pour l'objet spécifié.</summary>
      <param name="value" vsli:raw="The object for which to retrieve the name.">Objet pour lequel le nom doit être récupéré.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was accessed outside of a serialization session.">L'accès à cette propriété s'est effectué en dehors d'une session de sérialisation.</exception>
      <returns vsli:raw="The name of the object, or &lt;see langword=&quot;null&quot; /&gt; if the object is unnamed.">Nom de l'objet, ou <see langword="null" /> si l'objet est sans nom.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)">
      <summary vsli:raw="Gets a serializer of the requested type for the specified object type.">Obtient un sérialiseur du type demandé pour le type d'objet spécifié.</summary>
      <param name="objectType" vsli:raw="The type of the object to get the serializer for.">Type de l'objet pour lequel le sérialiseur doit être obtenu.</param>
      <param name="serializerType" vsli:raw="The type of the serializer to retrieve.">Type du sérialiseur à récupérer.</param>
      <returns vsli:raw="An instance of the requested serializer, or &lt;see langword=&quot;null&quot; /&gt; if no appropriate serializer can be located.">Instance du sérialiseur demandé, ou <see langword="null" /> si aucun sérialiseur approprié n'est détecté.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)">
      <summary vsli:raw="Gets a type of the specified name.">Obtient un type portant le nom spécifié.</summary>
      <param name="typeName" vsli:raw="The fully qualified name of the type to load.">Nom qualifié complet du type à charger.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was accessed outside of a serialization session.">L'accès à cette propriété s'est effectué en dehors d'une session de sérialisation.</exception>
      <returns vsli:raw="An instance of the type, or &lt;see langword=&quot;null&quot; /&gt; if the type cannot be loaded.">Instance du type, ou <see langword="null" /> si le type ne peut pas être chargé.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
      <summary vsli:raw="Removes a previously added serialization provider.">Supprime un fournisseur de sérialisation précédemment ajouté.</summary>
      <param name="provider" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider&quot; /&gt; to remove.">
        <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" /> à supprimer.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)">
      <summary vsli:raw="Used to report a recoverable error in serialization.">Utilisé pour signaler une erreur récupérable dans une sérialisation.</summary>
      <param name="errorInformation" vsli:raw="An object containing the error information, usually of type &lt;see cref=&quot;T:System.String&quot; /&gt; or &lt;see cref=&quot;T:System.Exception&quot; /&gt;.">Objet qui contient les informations relatives à l'erreur, généralement de type <see cref="T:System.String" /> ou <see cref="T:System.Exception" />.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was accessed outside of a serialization session.">L'accès à cette propriété s'est effectué en dehors d'une session de sérialisation.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)">
      <summary vsli:raw="Sets the name for the specified object.">Définit le nom de l'objet spécifié.</summary>
      <param name="instance" vsli:raw="The object to set the name.">Objet dont le nom doit être défini.</param>
      <param name="name" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; used as the name of the object.">
        <see cref="T:System.String" /> utilisé comme nom de l'objet.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the parameters are &lt;see langword=&quot;null&quot; /&gt;.">Au moins l’un des deux paramètres a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The object specified by instance already has a name, or &lt;paramref name=&quot;name&quot; /&gt; is already used by another named object.">L'objet spécifié par instance a déjà un nom ou <paramref name="name" /> est déjà utilisé par un autre objet nommé.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was accessed outside of a serialization session.">L'accès à cette propriété s'est effectué en dehors d'une session de sérialisation.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService(System.Type)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.IServiceProvider.GetService(System.Type)&quot; /&gt; method.">Pour obtenir une description de ce membre, consultez la méthode <see cref="M:System.IServiceProvider.GetService(System.Type)" />.</summary>
      <param name="serviceType" vsli:raw="An object that specifies the type of service object to get.">Objet spécifiant le type d'objet service à obtenir.</param>
      <returns vsli:raw="A service object of type &lt;paramref name=&quot;serviceType&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; if there is no service object of type &lt;paramref name=&quot;serviceType&quot; /&gt;.">Objet service de type <paramref name="serviceType" />.  
  
- ou - 
 <see langword="null" /> s’il n’existe aucun objet de service de type <paramref name="serviceType" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container">
      <summary vsli:raw="Gets or sets to the container for this serialization manager.">Obtient ou définit le conteneur pour ce gestionnaire de sérialisation.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The serialization manager has an active serialization session.">Le gestionnaire de sérialisation dispose d'une session de sérialisation active.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt; to which the serialization manager will add components.">
        <see cref="T:System.ComponentModel.IContainer" /> auquel le gestionnaire de sérialisation ajoute des composants.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors">
      <summary vsli:raw="Gets the list of errors that occurred during serialization or deserialization.">Obtient la liste d'erreurs qui se sont produites pendant une sérialisation ou une désérialisation.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was accessed outside of a serialization session.">L'accès à cette propriété s'est effectué en dehors d'une session de sérialisation.</exception>
      <returns vsli:raw="The list of errors that occurred during serialization or deserialization.">Liste d'erreurs qui se sont produites pendant une sérialisation ou une désérialisation.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames">
      <summary vsli:raw="Gets or sets a value indicating whether the &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; method should check for the presence of the given name in the container.">Obtient ou définit une valeur qui indique si la méthode <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> doit vérifier la présence du nom donné dans le conteneur.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was changed from within a serialization session.">Cette propriété a été changée à partir d'une session de sérialisation.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; will pass the given component name; &lt;see langword=&quot;false&quot; /&gt; if &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; will check for the presence of the given name in the container. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> passe le nom du composant donné ; <see langword="false" /> si <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> vérifie la présence du nom donné dans le conteneur. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider">
      <summary vsli:raw="Gets the object that should be used to provide properties to the serialization manager's &lt;see cref=&quot;P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties&quot; /&gt; property.">Obtient l'objet qui doit être utilisé pour fournir des propriétés à la propriété <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> du gestionnaire de sérialisation.</summary>
      <returns vsli:raw="The object that should be used to provide properties to the serialization manager's &lt;see cref=&quot;P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties&quot; /&gt; property.">Objet qui doit être utilisé pour fournir des propriétés à la propriété <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> du gestionnaire de sérialisation.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances">
      <summary vsli:raw="Gets or sets a value that indicates whether &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; will always create a new instance of a type.">Obtient ou définit une valeur qui indique si <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> créera toujours une nouvelle instance d’un type.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The serialization manager has an active serialization session.">Le gestionnaire de sérialisation dispose d'une session de sérialisation active.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; will return the existing instance; &lt;see langword=&quot;false&quot; /&gt; if &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; will create a new instance of a type. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> retourne l'instance existante ; <see langword="false" /> si <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> crée une nouvelle instance d'un type. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context">
      <summary vsli:raw="Gets the context stack for this serialization session.">Obtient la pile de contexte pour cette session de sérialisation.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was accessed outside of a serialization session.">L'accès à cette propriété s'est effectué en dehors d'une session de sérialisation.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ContextStack&quot; /&gt; that stores data.">
        <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> qui stocke des données.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties">
      <summary vsli:raw="Implements the &lt;see cref=&quot;P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties&quot; /&gt; property.">Implémente la propriété <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; containing the properties to be serialized.">
        <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> qui contient les propriétés à sérialiser.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; method will verify that matching names refer to the same type.">Obtient ou définit une valeur qui indique si la méthode <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> vérifie que les noms correspondants font référence au même type.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The serialization manager has an active serialization session.">Le gestionnaire de sérialisation dispose d'une session de sérialisation active.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; verifies types; otherwise, &lt;see langword=&quot;false&quot; /&gt; if it does not. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> vérifie les types ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ExpressionContext">
      <summary vsli:raw="Provides a means of passing context state among serializers. This class cannot be inherited.">Fournit un moyen de passer l'état de contexte à des sérialiseurs. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ExpressionContext&quot; /&gt; class with the given expression and owner.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> avec l’expression et le propriétaire donnés.</summary>
      <param name="expression" vsli:raw="The given code expression.">Expression de code donnée.</param>
      <param name="expressionType" vsli:raw="The given code expression type.">Type de l’expression de code donnée.</param>
      <param name="owner" vsli:raw="The given code expression owner.">Propriétaire de l’expression de code donnée.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;expression&quot; /&gt;, &lt;paramref name=&quot;expressionType&quot; /&gt;, or &lt;paramref name=&quot;owner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="expression" />, <paramref name="expressionType" /> ou <paramref name="owner" /> est <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ExpressionContext&quot; /&gt; class with a current value.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> avec une valeur actuelle.</summary>
      <param name="expression" vsli:raw="The given code expression.">Expression de code donnée.</param>
      <param name="expressionType" vsli:raw="The given code expression type.">Type de l’expression de code donnée.</param>
      <param name="owner" vsli:raw="The given code expression owner.">Propriétaire de l’expression de code donnée.</param>
      <param name="presetValue" vsli:raw="The given code expression preset value.">Valeur prédéfinie de l’expression de code donnée.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;expression&quot; /&gt;, &lt;paramref name=&quot;expressionType&quot; /&gt;, or &lt;paramref name=&quot;owner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="expression" />, <paramref name="expressionType" /> ou <paramref name="owner" /> est <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.Expression">
      <summary vsli:raw="Gets the expression this context represents.">Obtient l'expression que ce contexte représente.</summary>
      <returns vsli:raw="The expression this context represents.">Expression que ce contexte représente.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.ExpressionType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Type&quot; /&gt; of the expression.">Obtient le <see cref="T:System.Type" /> de l'expression.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the expression.">
        <see cref="T:System.Type" /> de l'expression.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.Owner">
      <summary vsli:raw="Gets the object owning this expression.">Obtient l'objet propriétaire de cette expression.</summary>
      <returns vsli:raw="The object owning this expression.">Objet propriétaire de cette expression.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue">
      <summary vsli:raw="Gets the preset value of an expression.">Obtient la valeur prédéfinie d'une expression.</summary>
      <returns vsli:raw="The preset value of this expression, or &lt;see langword=&quot;null&quot; /&gt; if not assigned.">Valeur prédéfinie de cette expression ou <see langword="null" /> si elle n'est pas assignée.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload">
      <summary vsli:raw="Provides an interface that can be used to optimize the reloading of a designer.">Fournit une interface pouvant être utilisée pour optimiser le rechargement d'un concepteur.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload.ShouldReloadDesigner(System.CodeDom.CodeCompileUnit)">
      <summary vsli:raw="Indicates whether the designer should reload in order to import the specified compile unit correctly.">Indique si le concepteur doit être rechargé de manière à importer correctement l'unité de compilation spécifiée.</summary>
      <param name="newTree" vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeCompileUnit&quot; /&gt; containing the designer document code.">
        <see cref="T:System.CodeDom.CodeCompileUnit" /> contenant le code du document du concepteur.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the designer should reload; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le concepteur doit être rechargé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer">
      <summary vsli:raw="Provides the base class for serializing a reflection primitive within the object graph.">Fournit la classe de base pour sérialiser une primitive de réflexion dans le graphique d'objets.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor,System.CodeDom.CodeStatementCollection)">
      <summary vsli:raw="Serializes the given member descriptor on the given value to a statement collection.">Sérialise le descripteur membre donné sur la valeur donnée vers une collection d'instructions.</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">Gestionnaire de sérialisation à utiliser pour la sérialisation.</param>
      <param name="value" vsli:raw="The object to which the member is bound.">Objet auquel le membre est lié.</param>
      <param name="descriptor" vsli:raw="The descriptor of the member to serialize.">Descripteur du membre à sérialiser.</param>
      <param name="statements" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeStatementCollection&quot; /&gt; into which &lt;paramref name=&quot;descriptor&quot; /&gt; is serialized.">
        <see cref="T:System.CodeDom.CodeStatementCollection" /> dans lequel <paramref name="descriptor" /> est sérialisé.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.ShouldSerialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Determines if the given member should be serialized.">Détermine si le membre donné doit être sérialisé.</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">Gestionnaire de sérialisation à utiliser pour la sérialisation.</param>
      <param name="value" vsli:raw="The object to which the member is bound.">Objet auquel le membre est lié.</param>
      <param name="descriptor" vsli:raw="The descriptor of the member to serialize.">Descripteur du membre à sérialiser.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the member described by &lt;paramref name=&quot;descriptor&quot; /&gt; should be serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, si le membre décrit par <paramref name="descriptor" /> doit être sérialisé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection">
      <summary vsli:raw="Holds a table of statements that is offered by the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.StatementContext&quot; /&gt;. This class cannot be inherited.">Contient une table d'instructions fournies par <see cref="T:System.ComponentModel.Design.Serialization.StatementContext" />. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.ContainsKey(System.Object)">
      <summary vsli:raw="Determines whether the table contains the given statement owner.">Détermine si la table contient le propriétaire d'instructions donné.</summary>
      <param name="statementOwner" vsli:raw="The owner of the statement collection.">Propriétaire de la collection d'instructions.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;statementOwner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="statementOwner" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;statementOwner&quot; /&gt; is in the table; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="statementOwner" /> se trouve dans la table ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.GetEnumerator">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ObjectStatementCollection&quot; /&gt;.">Retourne un <see cref="T:System.Collections.IEnumerator" /> pour <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ObjectStatementCollection&quot; /&gt;.">
        <see cref="T:System.Collections.IEnumerator" /> pour <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Populate(System.Collections.ICollection)">
      <summary vsli:raw="Populates the statement table with a collection of statement owners.">Remplit la table d'instructions avec une collection de propriétaires d'instructions.</summary>
      <param name="statementOwners" vsli:raw="A collection of statement owners to add to the table.">Collection de propriétaires d'instructions à ajouter à la table.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;statementOwner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="statementOwner" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Populate(System.Object)">
      <summary vsli:raw="Populates the statement table with a statement owner.">Remplit la table d'instructions avec un propriétaire d'instructions.</summary>
      <param name="owner" vsli:raw="The statement owner to add to the table.">Propriétaire d'instructions à ajouter à la table.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;owner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="owner" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.Collections.IEnumerable.GetEnumerator&quot; /&gt; method.">Pour obtenir une description de ce membre, consultez la méthode <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through the collection.">
        <see cref="T:System.Collections.IEnumerator" /> qui peut être utilisé pour itérer la collection.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Item(System.Object)">
      <summary vsli:raw="Gets the statement collection for the given owner.">Reçoit la collection d'instructions pour le propriétaire donné.</summary>
      <param name="statementOwner" vsli:raw="The owner of the statement collection.">Propriétaire de la collection d'instructions.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;statementOwner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="statementOwner" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="The statement collection for &lt;paramref name=&quot;statementOwner&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if &lt;paramref name=&quot;statementOwner&quot; /&gt; is not in the table.">Collection d'instructions pour <paramref name="statementOwner" /> ou <see langword="null" /> si <paramref name="statementOwner" /> n'est pas dans la table.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.RootContext">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializer&quot; /&gt; adds a root context to provide a definition of the root object. This class cannot be inherited.">
        <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> ajoute un contexte racine pour fournir une définition de l'objet racine. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.RootContext.#ctor(System.CodeDom.CodeExpression,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.RootContext&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.RootContext" />.</summary>
      <param name="expression" vsli:raw="The expression representing the root object in the object graph.">Expression qui représente l'objet racine dans le graphique d'objets.</param>
      <param name="value" vsli:raw="The root object of the object graph.">Objet racine du graphique d'objets.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;expression&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="expression" /> ou <paramref name="value" /> est <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.RootContext.Expression">
      <summary vsli:raw="Gets the expression representing the root object in the object graph.">Obtient l'expression qui représente l'objet racine dans le graphique d'objets.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; representing the root object in the object graph.">
        <see cref="T:System.CodeDom.CodeExpression" /> qui représente l'objet racine dans le graphique d'objets.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.RootContext.Value">
      <summary vsli:raw="Gets the root object of the object graph.">Obtient l'objet racine du graphique d'objets.</summary>
      <returns vsli:raw="The root object of the object graph.">Objet racine du graphique d'objets.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext">
      <summary vsli:raw="Specifies that serializers should handle default values. This class cannot be inherited.">Indique que les sérialiseurs doivent gérer des valeurs par défaut. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.#ctor(System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext&quot; /&gt; class with the option of binding to a specific member.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext" /> avec la possibilité d'établir un lien à un membre spécifique.</summary>
      <param name="member" vsli:raw="The member to which this context is bound. Can be &lt;see langword=&quot;null&quot; /&gt;.">Membre auquel ce contexte est lié. Peut être <see langword="null" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.ShouldSerialize(System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Gets a value indicating whether the given member should be serialized in this context.">Obtient une valeur qui indique si le membre donné doit être sérialisé dans ce contexte.</summary>
      <param name="member" vsli:raw="The member to be examined for serialization.">Membre à examiner pour la sérialisation.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the given member should be serialized in this context; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le membre donné doit être sérialisé dans ce contexte ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.Member">
      <summary vsli:raw="Gets the member to which this context is bound.">Obtient le membre auquel ce contexte est lié.</summary>
      <returns vsli:raw="The member to which this context is bound, or &lt;see langword=&quot;null&quot; /&gt; if the context is bound to all members of an object.">Membre auquel ce contexte est lié ou <see langword="null" /> si le contexte est lié à tous les membres d'un objet.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.StatementContext">
      <summary vsli:raw="Provides a location into which statements can be serialized. This class cannot be inherited.">Fournit un emplacement dans lequel des instructions peuvent être sérialisées. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.StatementContext.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.StatementContext&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.StatementContext" />.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.StatementContext.StatementCollection">
      <summary vsli:raw="Gets a collection of statements offered by the statement context.">Obtient une collection d'instructions offerte par le contexte d'instruction.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ObjectStatementCollection&quot; /&gt; containing statements offered by the statement context.">
        <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" /> qui contient des instructions offertes par le contexte d'instruction.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer">
      <summary vsli:raw="Serializes an object to a new type.">Sérialise un objet vers un type nouveau.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
      <summary vsli:raw="Deserializes the given type declaration.">Désérialise la déclaration de type donnée.</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">Gestionnaire de sérialisation à utiliser pour la sérialisation.</param>
      <param name="declaration" vsli:raw="Type declaration to use for serialization.">Déclaration de type à utiliser pour une sérialisation.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;typeDecl&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> ou <paramref name="typeDecl" /> est <see langword="null" />.</exception>
      <returns vsli:raw="The root object.">Objet racine.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)">
      <summary vsli:raw="Returns the method where statements used to serialize a member are stored.">Retourne la méthode dans laquelle sont stockées les instructions utilisées pour sérialiser un membre.</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">Gestionnaire de sérialisation à utiliser pour la sérialisation.</param>
      <param name="declaration" vsli:raw="The type declaration to use for serialization.">Déclaration de type à utiliser pour la sérialisation.</param>
      <param name="value" vsli:raw="The value to use for serialization.">Valeur à utiliser pour la sérialisation.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;typeDecl&quot; /&gt;, or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />, <paramref name="typeDecl" /> ou <paramref name="value" /> est <see langword="null" />.</exception>
      <returns vsli:raw="The method used to emit all of the initialization code for the given member.">Méthode utilisée pour émettre tout le code d’initialisation pour le membre donné.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
      <summary vsli:raw="Returns an array of methods to be interpreted during deserialization.">Retourne un tableau de méthodes à interpréter pendant une désérialisation.</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">Gestionnaire de sérialisation à utiliser pour la sérialisation.</param>
      <param name="declaration" vsli:raw="The type declaration to use for serialization.">Déclaration de type à utiliser pour la sérialisation.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;typeDecl&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> ou <paramref name="typeDecl" /> est <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeMemberMethod&quot; /&gt; array of methods to be interpreted during deserialization.">Tableau de méthodes <see cref="T:System.CodeDom.CodeMemberMethod" /> à interpréter pendant une désérialisation.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
      <summary vsli:raw="Serializes the object root by creating a new type declaration that defines root.">Sérialise la racine de l'objet en créant une nouvelle déclaration de type qui définit la racine.</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">Gestionnaire de sérialisation à utiliser pour la sérialisation.</param>
      <param name="root" vsli:raw="The object to serialize.">L'objet à sérialiser.</param>
      <param name="members" vsli:raw="Optional collection of members. Can be &lt;see langword=&quot;null&quot; /&gt; or empty.">Collection facultative de membres. Peut être <see langword="null" /> ou vide.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;root&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> ou <paramref name="root" /> est <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeTypeDeclaration&quot; /&gt; that defines the root object.">
        <see cref="T:System.CodeDom.CodeTypeDeclaration" /> qui définit l'objet racine.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.UndoEngine">
      <summary vsli:raw="Specifies generic undo/redo functionality at design time.">Spécifie la fonctionnalité générique Annuler/Refaire au moment du design.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.UndoEngine.Undoing">
      <summary vsli:raw="Occurs immediately before an undo action is performed.">Se produit immédiatement avant l'exécution d'une opération d'annulation.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.UndoEngine.Undone">
      <summary vsli:raw="Occurs immediately after an undo action is performed.">Se produit immédiatement après l'exécution d'une opération d'annulation.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.#ctor(System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.UndoEngine" />.</summary>
      <param name="provider" vsli:raw="A parenting service provider.">Fournisseur de services apparentés.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;provider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="provider" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A required service cannot be found. See &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; for required services. If you have removed this service, ensure that you provide a replacement.">Un service requis est introuvable. Consultez <see cref="T:System.ComponentModel.Design.UndoEngine" /> pour les services requis. Si vous avez supprimé ce service, assurez-vous d'en fournir un en remplacement.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.AddUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt; to the undo stack.">Ajoute <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> à la pile d'annulation.</summary>
      <param name="unit" vsli:raw="The undo unit to add.">Unité d'annulation à ajouter.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.CreateUndoUnit(System.String,System.Boolean)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt;.">Crée un <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</summary>
      <param name="name" vsli:raw="The name of the unit to create.">Nom de l'unité à créer.</param>
      <param name="primary" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to create the first of a series of nested units; &lt;see langword=&quot;false&quot; /&gt; to create subsequent nested units.">
        <see langword="true" /> pour créer la première unité d'une série d'unités imbriquées ; <see langword="false" /> pour créer les unités imbriquées suivantes.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt; with a specified name.">Nouveau <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> avec un nom spécifié.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)">
      <summary vsli:raw="Discards an &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt;.">Élimine <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</summary>
      <param name="unit" vsli:raw="The unit to discard.">Unité à éliminer.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt;.">Libère toutes les ressources utilisées par <see cref="T:System.ComponentModel.Design.UndoEngine" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; and optionally releases the managed resources.">Libère les ressources non managées utilisées par <see cref="T:System.ComponentModel.Design.UndoEngine" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.GetRequiredService(System.Type)">
      <summary vsli:raw="Gets the requested service.">Obtient le service demandé.</summary>
      <param name="serviceType" vsli:raw="The type of service to retrieve.">Type de service à récupérer.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serviceType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serviceType" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;serviceType&quot; /&gt; is required but cannot be found. If you have removed this service, ensure that you provide a replacement.">
        <paramref name="serviceType" /> est requis, mais est introuvable. Si vous avez supprimé ce service, assurez-vous d'en fournir un en remplacement.</exception>
      <returns vsli:raw="The requested service, if found.">Le service demandé, s'il existe.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.GetService(System.Type)">
      <summary vsli:raw="Gets the requested service.">Obtient le service demandé.</summary>
      <param name="serviceType" vsli:raw="The type of service to retrieve.">Type de service à récupérer.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serviceType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serviceType" /> a la valeur <see langword="null" />.</exception>
      <returns vsli:raw="The requested service, or &lt;see langword=&quot;null&quot; /&gt; if the requested service is not found.">Service demandé ou <see langword="null" /> si le service demandé est introuvable.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.OnUndoing(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.UndoEngine.Undoing&quot; /&gt; event.">Déclenche l’événement <see cref="E:System.ComponentModel.Design.UndoEngine.Undoing" />.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.EventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.OnUndone(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.UndoEngine.Undone&quot; /&gt; event.">Déclenche l’événement <see cref="E:System.ComponentModel.Design.UndoEngine.Undone" />.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.EventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.Enabled">
      <summary vsli:raw="Enables or disables the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt;.">Active ou désactive <see cref="T:System.ComponentModel.Design.UndoEngine" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.ComponentModel.Design.UndoEngine" /> est activé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoInProgress">
      <summary vsli:raw="Indicates if an undo action is in progress.">Indique si une opération d'annulation est en cours.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an undo action is in progress; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si une opération d'annulation est en cours ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.UndoEngine.UndoUnit">
      <summary vsli:raw="Encapsulates a unit of work that a user can undo.">Encapsule une unité de travail qu'un utilisateur peut annuler.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.#ctor(System.ComponentModel.Design.UndoEngine,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</summary>
      <param name="engine" vsli:raw="The undo engine that owns this undo unit.">Moteur d'annulation à qui cette unité d'annulation appartient.</param>
      <param name="name" vsli:raw="The name for this undo unit.">Nom de cette unité d'annulation.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;engine&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="engine" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Close">
      <summary vsli:raw="Receives a call from the undo engine to close this unit.">Reçoit un appel du moteur d'annulation pour fermer cette unité.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdded(System.ComponentModel.Design.ComponentEventArgs)">
      <summary vsli:raw="Receives a call from the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; in response to a &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded&quot; /&gt; event.">Reçoit un appel de <see cref="T:System.ComponentModel.Design.UndoEngine" /> en réponse à un événement <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdding(System.ComponentModel.Design.ComponentEventArgs)">
      <summary vsli:raw="Receives a call from the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; in response to a &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding&quot; /&gt; event.">Reçoit un appel de <see cref="T:System.ComponentModel.Design.UndoEngine" /> en réponse à un événement <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanged(System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary vsli:raw="Receives a call from the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; in response to a &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&quot; /&gt; event.">Reçoit un appel de <see cref="T:System.ComponentModel.Design.UndoEngine" /> en réponse à un événement <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentChangedEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanging(System.ComponentModel.Design.ComponentChangingEventArgs)">
      <summary vsli:raw="Receives a call from the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; in response to a &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging&quot; /&gt; event.">Reçoit un appel de <see cref="T:System.ComponentModel.Design.UndoEngine" /> en réponse à un événement <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentChangedEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoved(System.ComponentModel.Design.ComponentEventArgs)">
      <summary vsli:raw="Receives a call from the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; in response to a &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved&quot; /&gt; event.">Reçoit un appel de <see cref="T:System.ComponentModel.Design.UndoEngine" /> en réponse à un événement <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoving(System.ComponentModel.Design.ComponentEventArgs)">
      <summary vsli:raw="Receives a call from the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; in response to a &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving&quot; /&gt; event.">Reçoit un appel de <see cref="T:System.ComponentModel.Design.UndoEngine" /> en réponse à un événement <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRename(System.ComponentModel.Design.ComponentRenameEventArgs)">
      <summary vsli:raw="Receives a call from the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; in response to a &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentRename&quot; /&gt; event.">Reçoit un appel de <see cref="T:System.ComponentModel.Design.UndoEngine" /> en réponse à un événement <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentRenameEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.ComponentModel.Design.ComponentRenameEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.GetService(System.Type)">
      <summary vsli:raw="Gets an instance of the requested service.">Obtient une instance du service demandé.</summary>
      <param name="serviceType" vsli:raw="The type of service to retrieve.">Type de service à récupérer.</param>
      <returns vsli:raw="An instance of the given service, or &lt;see langword=&quot;null&quot; /&gt; if the service cannot be resolved.">Instance du service donné ou <see langword="null" /> si le service ne peut pas être résolu.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ToString">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the current name of the unit.">Retourne <see cref="T:System.String" /> qui représente le nom actuel de l'unité.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the current name of the unit.">
        <see cref="T:System.String" /> qui représente le nom actuel de l'unité.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo">
      <summary vsli:raw="Performs an undo or redo action.">Exécute une action d'annulation ou de répétition.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore">
      <summary vsli:raw="Called by &lt;see cref=&quot;M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo&quot; /&gt; to perform an undo action.">Appelé par <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> pour exécuter une opération d'annulation.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.IsEmpty">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt; contains no events.">Obtient une valeur indiquant si <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> ne contient pas d'événement.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt; contains no events; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> ne contient pas d'événement ; <see langword="false" /> dans le cas contraire.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.Name">
      <summary vsli:raw="Gets the name of the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt;.">Obtient le nom du <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt;.">Nom de l'objet <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine">
      <summary vsli:raw="Gets the parent &lt;see cref=&quot;P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine&quot; /&gt;.">Obtient le <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" /> parent.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine&quot; /&gt; to which this &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt; is attached.">
        <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" /> auquel <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> est attaché.</returns>
    </member>
    <member name="T:System.Drawing.Design.BitmapEditor">
      <summary vsli:raw="Provides a user interface for selecting bitmap files in a property browser.">Fournit une interface utilisateur qui permet de sélectionner des fichiers bitmap dans un Explorateur de propriétés.</summary>
    </member>
    <member name="F:System.Drawing.Design.BitmapEditor.BitmapExtensions">
      <summary vsli:raw="Provides the list of default file extensions used to filter the file list.">Fournit la liste des extensions de fichier par défaut utilisées pour le filtrage de la liste de fichiers.</summary>
    </member>
    <member name="M:System.Drawing.Design.BitmapEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.BitmapEditor&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Design.BitmapEditor" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.BitmapEditor.GetExtensions">
      <summary vsli:raw="Gets the extensions for the file list filter that the bitmap editor will initially use to filter the file list.">Obtient les extensions du filtre de liste de fichiers que l'éditeur de bitmaps utilise initialement pour filtrer la liste de fichiers.</summary>
      <returns vsli:raw="The default set of file extensions used to filter the file list.">Jeu d'extensions de fichier par défaut utilisé pour le filtrage de la liste de fichiers.</returns>
    </member>
    <member name="M:System.Drawing.Design.BitmapEditor.GetFileDialogDescription">
      <summary vsli:raw="Gets the description for the default file list filter provided by this editor.">Obtient la description du filtre de liste de fichiers par défaut fourni par cet éditeur.</summary>
      <returns vsli:raw="The description for the default type of files to filter the file list for.">Description du type de fichier par défaut sur lequel la liste doit être filtrée.</returns>
    </member>
    <member name="M:System.Drawing.Design.BitmapEditor.LoadFromStream(System.IO.Stream)">
      <summary vsli:raw="Loads an image from the specified stream.">Charge une image à partir du flux spécifié.</summary>
      <param name="stream" vsli:raw="The stream from which to load the image.">Flux à partir duquel l'image doit être chargée.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Image&quot; /&gt; loaded from the stream.">
        <see cref="T:System.Drawing.Image" /> chargé à partir du flux.</returns>
    </member>
    <member name="T:System.Drawing.Design.ColorEditor">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditor&quot; /&gt; for visually picking a color.">Fournit <see cref="T:System.Drawing.Design.UITypeEditor" /> pour sélectionner visuellement une couleur.</summary>
    </member>
    <member name="M:System.Drawing.Design.ColorEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ColorEditor&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Design.ColorEditor" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.ColorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the given object value using the editor style provided by the &lt;see cref=&quot;M:System.Drawing.Design.ColorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)&quot; /&gt; method.">Modifie la valeur de l'objet spécifié à l'aide du style de l'éditeur fourni par la méthode <see cref="M:System.Drawing.Design.ColorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; through which editing services may be obtained.">
        <see cref="T:System.IServiceProvider" /> par le biais duquel des services d'édition peuvent être obtenus.</param>
      <param name="value" vsli:raw="An instance of the value being edited.">Instance de la valeur en cours de modification.</param>
      <returns vsli:raw="The new value of the object. If the value of the object has not changed, this should return the same object it was passed.">Nouvelle valeur de l'objet. Si la valeur de l'objet n'a pas changé, l'objet retourné doit être le même que celui qui a été passé.</returns>
    </member>
    <member name="M:System.Drawing.Design.ColorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editing style of the Edit method. If the method is not supported, this will return &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle.None&quot;&gt;&lt;/xref&gt;.">Obtient le style de modification de la méthode Edit. Si la méthode n'est pas prise en charge, <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" /> sera retourné.</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <returns vsli:raw="An enum value indicating the provided editing style.">Valeur enum indiquant le style de modification fourni.</returns>
    </member>
    <member name="M:System.Drawing.Design.ColorEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets a value indicating if this editor supports the painting of a representation of an object's value.">Obtient une valeur indiquant si cet éditeur permet de peindre une représentation de la valeur d'un objet.</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <returns vsli:raw="&lt;code data-dev-comment-type=&quot;langword&quot;&gt;true&lt;/code&gt; if &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.ColorEditor.PaintValue*&quot;&gt;&lt;/xref&gt; is implemented; otherwise, &lt;code data-dev-comment-type=&quot;langword&quot;&gt;false&lt;/code&gt;.">
        <see langword="true" /> si <see cref="Overload:System.Drawing.Design.ColorEditor.PaintValue" /> est implémenté ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.ColorEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary vsli:raw="Paints a representative value of the given object to the provided canvas.">Peint une valeur représentative de l'objet donné sur la toile fournie.</summary>
      <param name="e" vsli:raw="What to paint and where to paint it.">Indique l'élément à peindre et l'emplacement où il doit être peint.</param>
    </member>
    <member name="T:System.Drawing.Design.ContentAlignmentEditor">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditor&quot; /&gt; for visually editing content alignment.">Fournit un <see cref="T:System.Drawing.Design.UITypeEditor" /> pour modifier visuellement l'alignement du contenu.</summary>
    </member>
    <member name="M:System.Drawing.Design.ContentAlignmentEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ContentAlignmentEditor&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Design.ContentAlignmentEditor" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.ContentAlignmentEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the given object value using the editor style provided by the &lt;see cref=&quot;Overload:System.Drawing.Design.ContentAlignmentEditor.GetEditStyle&quot; /&gt; method.">Modifie la valeur de l'objet spécifié à l'aide du style de l'éditeur fourni par la méthode <see cref="Overload:System.Drawing.Design.ContentAlignmentEditor.GetEditStyle" />.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; through which editing services may be obtained.">
        <see cref="T:System.IServiceProvider" /> par le biais duquel des services d'édition peuvent être obtenus.</param>
      <param name="value" vsli:raw="An instance of the value being edited.">Instance de la valeur en cours de modification.</param>
      <returns vsli:raw="The new value of the object. If the value of the object has not changed, this should return the same object it was passed.">Nouvelle valeur de l'objet. Si la valeur de l'objet n'a pas changé, l'objet retourné doit être le même que celui qui a été passé.</returns>
    </member>
    <member name="M:System.Drawing.Design.ContentAlignmentEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editing style of the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.ContentAlignmentEditor.EditValue*&quot;&gt;&lt;/xref&gt; method.">Obtient le style de modification de la méthode <see cref="Overload:System.Drawing.Design.ContentAlignmentEditor.EditValue" />.</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <returns vsli:raw="A &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle&quot;&gt;&lt;/xref&gt; value indicating the provided editing style. If the method to retrieve the edit style is not supported, this will return &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle.None&quot;&gt;&lt;/xref&gt;.">Valeur <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> indiquant le style de modification fourni. Si la méthode de récupération du style de modification n'est pas prise en charge, <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" /> sera retourné.</returns>
    </member>
    <member name="T:System.Drawing.Design.CursorEditor">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditor&quot; /&gt; that can perform default file searching for cursor (.cur) files.">Fournit un <see cref="T:System.Drawing.Design.UITypeEditor" /> pouvant effectuer une recherche de fichier par défaut pour les fichiers curseur (.cur).</summary>
    </member>
    <member name="M:System.Drawing.Design.CursorEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.CursorEditor&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Design.CursorEditor" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.CursorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the given object value using the editor style provided by the &lt;see cref=&quot;Overload:System.Drawing.Design.CursorEditor.GetEditStyle&quot; /&gt; method.">Modifie la valeur de l'objet spécifié à l'aide du style de l'éditeur fourni par la méthode <see cref="Overload:System.Drawing.Design.CursorEditor.GetEditStyle" />.</summary>
      <param name="context" vsli:raw="A type descriptor context that can be used to provide additional context information.">Contexte de descripteur de type qui peut être utilisé pour fournir des informations de contexte supplémentaires.</param>
      <param name="provider" vsli:raw="A service provider object through which editing services may be obtained.">Objet fournisseur de services par le biais duquel des services d'édition peuvent être obtenus.</param>
      <param name="value" vsli:raw="An instance of the value being edited.">Instance de la valeur en cours de modification.</param>
      <returns vsli:raw="The new value of the object. If the value of the object has not changed, this should return the same object it was passed.">Nouvelle valeur de l'objet. Si la valeur de l'objet n'a pas changé, l'objet retourné doit être le même que celui qui a été passé.</returns>
    </member>
    <member name="M:System.Drawing.Design.CursorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Retrieves the editing style of the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.CursorEditor.EditValue*&quot;&gt;&lt;/xref&gt; method.">Récupère le style de modification de la méthode <see cref="Overload:System.Drawing.Design.CursorEditor.EditValue" />.</summary>
      <param name="context" vsli:raw="A type descriptor context that can be used to provide additional context information.">Contexte de descripteur de type qui peut être utilisé pour fournir des informations de contexte supplémentaires.</param>
      <returns vsli:raw="An enum value indicating the provided editing style. If the method is not supported, this will return &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle.None&quot;&gt;&lt;/xref&gt;.">Valeur enum indiquant le style de modification fourni. Si la méthode n'est pas prise en charge, <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" /> sera retourné.</returns>
    </member>
    <member name="P:System.Drawing.Design.CursorEditor.IsDropDownResizable">
      <summary vsli:raw="Gets a value indicating whether drop-down editors should be resizable by the user.">Obtient une valeur indiquant si les éditeurs déroulants doivent être redimensionnables par l’utilisateur.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if drop-down editors are resizable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les éditeurs déroulants sont redimensionnables ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Drawing.Design.FontEditor">
      <summary vsli:raw="Provides a user interface to select and configure a &lt;see cref=&quot;T:System.Drawing.Font&quot; /&gt; object.">Fournit une interface utilisateur qui permet de sélectionner et de configurer un objet <see cref="T:System.Drawing.Font" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.FontEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.FontEditor&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Design.FontEditor" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.FontEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the value of the specified object using the editor style indicated by &lt;see cref=&quot;M:System.Drawing.Design.FontEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)&quot; /&gt;.">Modifie la valeur de l'objet spécifié à l'aide du style d'éditeur indiqué par <see cref="M:System.Drawing.Design.FontEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; that this editor can use to obtain services.">
        <see cref="T:System.IServiceProvider" /> pouvant être utilisé par cet éditeur pour obtenir des services.</param>
      <param name="value" vsli:raw="The object to edit.">Objet à modifier.</param>
      <returns vsli:raw="The new value of the object. If the value of the object has not changed, this should return the same object that was passed to it.">Nouvelle valeur de l'objet. Si la valeur de l'objet n'a pas changé, l'objet retourné devrait être le même que celui qui lui a été passé.</returns>
    </member>
    <member name="M:System.Drawing.Design.FontEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editor style used by the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.FontEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot;&gt;&lt;/xref&gt; method.">Obtient le style de l'éditeur utilisé par la méthode <see cref="M:System.Drawing.Design.FontEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <returns vsli:raw="A &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle&quot;&gt;&lt;/xref&gt; value that indicates the style of editor used by &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.FontEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot;&gt;&lt;/xref&gt;.">Valeur <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> qui indique le style de l'éditeur utilisé par <see cref="M:System.Drawing.Design.FontEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.</returns>
    </member>
    <member name="T:System.Drawing.Design.FontNameEditor">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditor&quot; /&gt; that paints a glyph for the font name.">Fournit un <see cref="T:System.Drawing.Design.UITypeEditor" /> qui peint un glyphe pour le nom de police.</summary>
    </member>
    <member name="M:System.Drawing.Design.FontNameEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.FontNameEditor&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Design.FontNameEditor" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.FontNameEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Determines if this editor supports the painting of a representation of an object's value.">Détermine si cet éditeur permet de peindre une représentation de la valeur d'un objet.</summary>
      <param name="context" vsli:raw="A type descriptor context that can be used to provide additional context information.">Contexte de descripteur de type qui peut être utilisé pour fournir des informations de contexte supplémentaires.</param>
      <returns vsli:raw="&lt;code data-dev-comment-type=&quot;langword&quot;&gt;true&lt;/code&gt; if &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.FontNameEditor.PaintValue*&quot;&gt;&lt;/xref&gt; is implemented; otherwise, &lt;code data-dev-comment-type=&quot;langword&quot;&gt;false&lt;/code&gt;.">
        <see langword="true" /> si <see cref="Overload:System.Drawing.Design.FontNameEditor.PaintValue" /> est implémenté ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.FontNameEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary vsli:raw="Paints a representative value of the given object to the provided canvas. Painting should be done within the boundaries of the provided rectangle.">Peint une valeur représentative de l'objet donné sur la toile fournie. La peinture doit être effectuée dans les limites du rectangle fourni.</summary>
      <param name="e" vsli:raw="What to paint and where to paint it.">Indique l'élément à peindre et l'emplacement où il doit être peint.</param>
    </member>
    <member name="T:System.Drawing.Design.IconEditor">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditor&quot; /&gt; for visually choosing an icon.">Fournit <see cref="T:System.Drawing.Design.UITypeEditor" /> pour choisir visuellement une icône.</summary>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.IconEditor&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Design.IconEditor" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.CreateExtensionsString(System.String[],System.String)">
      <summary vsli:raw="Creates a string representing the valid file extensions for icons.">Crée une chaîne qui représente les extensions de fichier valides pour les icônes.</summary>
      <param name="extensions" vsli:raw="An array of strings holding valid file extensions.">Tableau de chaînes contenant des extensions de fichier valides.</param>
      <param name="sep" vsli:raw="A string that specifies the separator character.">Chaîne qui spécifie le caractère de séparation.</param>
      <returns vsli:raw="A string containing the icon file extensions, or &lt;see langword=&quot;null&quot; /&gt; if &lt;paramref name=&quot;extensions&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or empty.">Chaîne qui contient les extensions de fichiers icône ou <see langword="null" /> si <paramref name="extensions" /> est <see langword="null" /> ou vide.</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.CreateFilterEntry(System.Drawing.Design.IconEditor)">
      <summary vsli:raw="Creates a filter string for the file dialog box.">Crée une chaîne de filtrage pour la boîte de dialogue Fichier.</summary>
      <param name="editor" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.IconEditor&quot; /&gt; for which the filter string will be created.">
        <see cref="T:System.Drawing.Design.IconEditor" /> pour lequel la chaîne de filtrage sera créée.</param>
      <returns vsli:raw="The filter string, created from the string returned by &lt;see cref=&quot;M:System.Drawing.Design.IconEditor.CreateExtensionsString(System.String[],System.String)&quot; /&gt;.">Chaîne de filtrage, créée à partir de la chaîne retournée par <see cref="M:System.Drawing.Design.IconEditor.CreateExtensionsString(System.String[],System.String)" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the given object value using the editor style provided by the &lt;see cref=&quot;M:System.Drawing.Design.IconEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)&quot; /&gt; method.">Modifie la valeur de l'objet spécifié à l'aide du style de l'éditeur fourni par la méthode <see cref="M:System.Drawing.Design.IconEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <param name="context" vsli:raw="A type descriptor context that can be used to provide additional context information.">Contexte de descripteur de type qui peut être utilisé pour fournir des informations de contexte supplémentaires.</param>
      <param name="provider" vsli:raw="A service provider object through which editing services may be obtained.">Objet fournisseur de services par le biais duquel des services d'édition peuvent être obtenus.</param>
      <param name="value" vsli:raw="An instance of the value being edited.">Instance de la valeur en cours de modification.</param>
      <returns vsli:raw="The new value of the object. If the value of the object has not changed, this should return the same object it was passed.">Nouvelle valeur de l'objet. Si la valeur de l'objet n'a pas changé, l'objet retourné doit être le même que celui qui a été passé.</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Retrieves the editing style of the &lt;see cref=&quot;Overload:System.Drawing.Design.IconEditor.EditValue&quot; /&gt; method.">Récupère le style de modification de la méthode <see cref="Overload:System.Drawing.Design.IconEditor.EditValue" />.</summary>
      <param name="context" vsli:raw="A type descriptor context that can be used to provide additional context information.">Contexte de descripteur de type qui peut être utilisé pour fournir des informations de contexte supplémentaires.</param>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditorEditStyle&quot; /&gt; values indicating the provided editing style.">Une des valeurs <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> indiquant le style de modification fourni.</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.GetExtensions">
      <summary vsli:raw="Retrieves an array of valid file extensions for icons.">Récupère un tableau d'extensions de fichier valides pour les icônes.</summary>
      <returns vsli:raw="An array of valid file extensions for icons.">Tableau d'extensions de fichier valides pour les icônes.</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.GetFileDialogDescription">
      <summary vsli:raw="Gets the description for the default file list filter provided by this editor.">Obtient la description du filtre de liste de fichiers par défaut fourni par cet éditeur.</summary>
      <returns vsli:raw="The description for the default type of files to filter the file list for.">Description du type de fichier par défaut sur lequel la liste doit être filtrée.</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Determines if this editor supports the painting of a representation of an object's value.">Détermine si cet éditeur permet de peindre une représentation de la valeur d'un objet.</summary>
      <param name="context" vsli:raw="A type descriptor context that can be used to provide additional context information.">Contexte de descripteur de type qui peut être utilisé pour fournir des informations de contexte supplémentaires.</param>
      <returns vsli:raw="&lt;code data-dev-comment-type=&quot;langword&quot;&gt;true&lt;/code&gt; if &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditor.PaintValue*&quot;&gt;&lt;/xref&gt; is implemented; otherwise, &lt;code data-dev-comment-type=&quot;langword&quot;&gt;false&lt;/code&gt;.">
        <see langword="true" /> si <see cref="Overload:System.Drawing.Design.UITypeEditor.PaintValue" /> est implémenté ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.LoadFromStream(System.IO.Stream)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Drawing.Icon&quot; /&gt; from the given stream.">Crée un nouveau <see cref="T:System.Drawing.Icon" /> à partir du flux donné.</summary>
      <param name="stream" vsli:raw="The source stream from which the icon will be created.">Flux source à partir duquel l'icône sera créée.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Drawing.Icon&quot; /&gt;.">Objet <see cref="T:System.Drawing.Icon" /> nouvellement créé.</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary vsli:raw="Paints a representative value of the given object to the provided canvas.">Peint une valeur représentative de l'objet donné sur la toile fournie.</summary>
      <param name="e" vsli:raw="What to paint and where to paint it.">Indique l'élément à peindre et l'emplacement où il doit être peint.</param>
    </member>
    <member name="T:System.Drawing.Design.ImageEditor">
      <summary vsli:raw="Provides a user interface for selecting an image for a property in a property grid.">Fournit une interface utilisateur qui permet de sélectionner une image pour une propriété dans une grille de propriétés.</summary>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ImageEditor&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Design.ImageEditor" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.CreateExtensionsString(System.String[],System.String)">
      <summary vsli:raw="Creates a string of file name extensions using the specified array of file extensions and the specified separator.">Crée une chaîne d'extensions de nom de fichier à l'aide du tableau d'extensions de fichier et du séparateur spécifiés.</summary>
      <param name="extensions" vsli:raw="The extensions to filter for.">Extensions sur lesquelles les fichiers sont filtrés.</param>
      <param name="sep" vsli:raw="The separator to use.">Séparateur à utiliser.</param>
      <returns vsli:raw="A string containing the specified file name extensions, each separated by the specified separator.">Chaîne contenant les extensions de nom de fichier spécifiées, séparées à l'aide du séparateur spécifié.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.CreateFilterEntry(System.Drawing.Design.ImageEditor)">
      <summary vsli:raw="Creates a filter entry for a file dialog box's file list.">Crée une entrée de filtre pour la liste de fichiers d'une boîte de dialogue Fichier.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.Drawing.Design.ImageEditor&quot; /&gt; to get the filter entry from.">
        <see cref="T:System.Drawing.Design.ImageEditor" /> à partir duquel obtenir l'entrée de filtre.</param>
      <returns vsli:raw="The new filter entry string.">Nouvelle chaîne d'entrée de filtre.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the specified object value using the edit style provided by the &lt;see cref=&quot;M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)&quot; /&gt; method.">Modifie la valeur de l'objet spécifié à l'aide du style d'édition fourni par la méthode <see cref="M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; through which editing services can be obtained.">
        <see cref="T:System.IServiceProvider" /> par le biais duquel des services d'édition peuvent être obtenus.</param>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; being edited.">
        <see cref="T:System.Object" /> en cours de modification.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; representing the new value. If the value of the object has not changed, &lt;see cref=&quot;M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot; /&gt; returns the object that was passed to it.">
        <see cref="T:System.Object" /> représentant la nouvelle valeur. Si la valeur de l'objet n'a pas changé, <see cref="M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> retourne l'objet qui lui a été passé.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editing style of the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot;&gt;&lt;/xref&gt; method.">Obtient le style de modification de la méthode <see cref="M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <returns vsli:raw="One of the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle&quot;&gt;&lt;/xref&gt; values indicating the supported editing style.">Une des valeurs <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> indiquant le style de modification pris en charge.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.GetExtensions">
      <summary vsli:raw="Gets the extensions for the file-list filter that this editor initially uses to filter the file list.">Obtient les extensions du filtre de liste de fichiers que l’éditeur utilise initialement pour filtrer la liste de fichiers.</summary>
      <returns vsli:raw="A set of file extensions used to filter the file list.">Ensemble d’extensions de fichier utilisées pour filtrer la liste de fichiers.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.GetFileDialogDescription">
      <summary vsli:raw="Gets the description for the default file-list filter provided by this editor.">Obtient la description du filtre de liste de fichiers par défaut fourni par cet éditeur.</summary>
      <returns vsli:raw="The description for the default file-list filter.">Description du filtre de liste de fichiers par défaut.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.GetImageExtenders">
      <summary vsli:raw="Gets an array of supported image types.">Obtient un tableau de types d'images pris en charge.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Type&quot; /&gt; representing supported image types.">Tableau de <see cref="T:System.Type" /> représentant les types d'images pris en charge.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets a value indicating whether this editor supports painting a representation of an object's value.">Obtient une valeur indiquant si cet éditeur permet de peindre une représentation de la valeur d'un objet.</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <returns vsli:raw="&lt;code data-dev-comment-type=&quot;langword&quot;&gt;true&lt;/code&gt; if &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.ImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)&quot;&gt;&lt;/xref&gt; is implemented; otherwise, &lt;code data-dev-comment-type=&quot;langword&quot;&gt;false&lt;/code&gt;.">
        <see langword="true" /> si <see cref="M:System.Drawing.Design.ImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)" /> est implémenté ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.LoadFromStream(System.IO.Stream)">
      <summary vsli:raw="Loads an image from the specified stream.">Charge une image à partir du flux spécifié.</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; that contains the image to load.">
        <see cref="T:System.IO.Stream" /> qui contient l’image à charger.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Image&quot; /&gt; that has been loaded.">Le <see cref="T:System.Drawing.Image" /> qui a été chargé.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary vsli:raw="Paints a value indicated by the specified &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.PaintValueEventArgs&quot;&gt;&lt;/xref&gt;.">Peint une valeur indiquée par le <see cref="T:System.Drawing.Design.PaintValueEventArgs" /> spécifié.</summary>
      <param name="e" vsli:raw="A &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.PaintValueEventArgs&quot;&gt;&lt;/xref&gt; indicating what to paint and where to paint it.">
        <see cref="T:System.Drawing.Design.PaintValueEventArgs" /> qui indique l'élément à peindre et l'emplacement où il doit être peint.</param>
    </member>
    <member name="T:System.Drawing.Design.IToolboxItemProvider">
      <summary vsli:raw="Exposes a collection of toolbox items.">Expose une collection d'éléments de boîte à outils.</summary>
    </member>
    <member name="P:System.Drawing.Design.IToolboxItemProvider.Items">
      <summary vsli:raw="Gets a collection of &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; objects.">Obtient une collection d'objets <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; objects.">Collection d'objets <see cref="T:System.Drawing.Design.ToolboxItem" />.</returns>
    </member>
    <member name="T:System.Drawing.Design.IToolboxService">
      <summary vsli:raw="Provides methods and properties to manage and query the toolbox in the development environment.">Fournit des méthodes et des propriétés permettant de gérer et d'interroger la boîte à outils dans l'environnement de développement.</summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddCreator(System.Drawing.Design.ToolboxItemCreatorCallback,System.String)">
      <summary vsli:raw="Adds a new toolbox item creator for a specified data format.">Ajoute un nouveau créateur d'élément de boîte à outils pour un format de données spécifié.</summary>
      <param name="creator" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCreatorCallback&quot; /&gt; that can create a component when the toolbox item is invoked.">
        <see cref="T:System.Drawing.Design.ToolboxItemCreatorCallback" /> pouvant créer un composant lorsque l'élément de boîte à outils est appelé.</param>
      <param name="format" vsli:raw="The data format that the creator handles.">Format de données géré par le créateur.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddCreator(System.Drawing.Design.ToolboxItemCreatorCallback,System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Adds a new toolbox item creator for a specified data format and designer host.">Ajoute un nouveau créateur d'élément de boîte à outils pour un format de données et un hôte du concepteur spécifiés.</summary>
      <param name="creator" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCreatorCallback&quot; /&gt; that can create a component when the toolbox item is invoked.">
        <see cref="T:System.Drawing.Design.ToolboxItemCreatorCallback" /> pouvant créer un composant lorsque l'élément de boîte à outils est appelé.</param>
      <param name="format" vsli:raw="The data format that the creator handles.">Format de données géré par le créateur.</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that represents the designer host to associate with the creator.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> représentant l'hôte du concepteur à associer au créateur.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddLinkedToolboxItem(System.Drawing.Design.ToolboxItem,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Adds the specified project-linked toolbox item to the toolbox.">Ajoute l'élément de boîte à outils lié à un projet spécifié à la boîte à outils.</summary>
      <param name="toolboxItem" vsli:raw="The linked &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to add to the toolbox.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> lié à ajouter à la boîte à outils.</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; for the current design document.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> pour le document de design en cours.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddLinkedToolboxItem(System.Drawing.Design.ToolboxItem,System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Adds the specified project-linked toolbox item to the toolbox in the specified category.">Ajoute l'élément de boîte à outils lié à un projet spécifié à la boîte à outils, dans la catégorie spécifiée.</summary>
      <param name="toolboxItem" vsli:raw="The linked &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to add to the toolbox.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> lié à ajouter à la boîte à outils.</param>
      <param name="category" vsli:raw="The toolbox item category to add the toolbox item to.">Catégorie d'éléments de boîte à outils à laquelle ajouter cet élément de boîte à outils.</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; for the current design document.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> pour le document de design en cours.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Adds the specified toolbox item to the toolbox.">Ajoute l'élément de boîte à outils spécifié à la boîte à outils.</summary>
      <param name="toolboxItem" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to add to the toolbox.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> à ajouter à la boîte à outils.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddToolboxItem(System.Drawing.Design.ToolboxItem,System.String)">
      <summary vsli:raw="Adds the specified toolbox item to the toolbox in the specified category.">Ajoute l'élément de boîte à outils spécifié à la boîte à outils, dans la catégorie spécifiée.</summary>
      <param name="toolboxItem" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to add to the toolbox.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> à ajouter à la boîte à outils.</param>
      <param name="category" vsli:raw="The toolbox item category to add the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to.">Catégorie d'éléments de boîte à outils à laquelle ajouter <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.DeserializeToolboxItem(System.Object)">
      <summary vsli:raw="Gets a toolbox item from the specified object that represents a toolbox item in serialized form.">Obtient un élément de boîte à outils à partir de l'objet spécifié représentant un élément de boîte à outils dans un formulaire sérialisé.</summary>
      <param name="serializedObject" vsli:raw="The object that contains the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to retrieve.">Objet contenant le <see cref="T:System.Drawing.Design.ToolboxItem" /> à récupérer.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; created from the serialized object.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> créé à partir de l'objet sérialisé.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.DeserializeToolboxItem(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Gets a toolbox item from the specified object that represents a toolbox item in serialized form, using the specified designer host.">Obtient un élément de boîte à outils à partir de l'objet spécifié représentant un élément de boîte à outils dans un formulaire sérialisé, à l'aide de l'hôte concepteur spécifié.</summary>
      <param name="serializedObject" vsli:raw="The object that contains the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to retrieve.">Objet contenant le <see cref="T:System.Drawing.Design.ToolboxItem" /> à récupérer.</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; to associate with this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> à associer à cet objet <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; created from deserialization.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> créé à partir de la désérialisation.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetSelectedToolboxItem">
      <summary vsli:raw="Gets the currently selected toolbox item.">Obtient l'élément de boîte à outils actuellement sélectionné.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; that is currently selected, or &lt;see langword=&quot;null&quot; /&gt; if no toolbox item has been selected.">Le <see cref="T:System.Drawing.Design.ToolboxItem" /> actuellement sélectionné ou <see langword="null" /> si aucun élément de boîte à outils n'a été sélectionné.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetSelectedToolboxItem(System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Gets the currently selected toolbox item if it is available to all designers, or if it supports the specified designer.">Obtient l'élément de boîte à outils actuellement sélectionné s'il est accessible à tous les concepteurs, ou s'il prend en charge le concepteur spécifié.</summary>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that the selected tool must be associated with for it to be returned.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> auquel l'outil sélectionné doit être associé pour être retourné.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; that is currently selected, or &lt;see langword=&quot;null&quot; /&gt; if no toolbox item is currently selected.">Le <see cref="T:System.Drawing.Design.ToolboxItem" /> actuellement sélectionné ou <see langword="null" /> si aucun élément de boîte à outils n'est actuellement sélectionné.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems">
      <summary vsli:raw="Gets the entire collection of toolbox items from the toolbox.">Obtient toute la collection d'éléments de boîte à outils à partir de la boîte à outils.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCollection&quot; /&gt; that contains the current toolbox items.">
        <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> contenant les éléments de boîte à outils en cours.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems(System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Gets the collection of toolbox items that are associated with the specified designer host from the toolbox.">Obtient la collection d'éléments de boîte à outils associés à l'hôte concepteur spécifié à partir de la boîte à outils.</summary>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that is associated with the toolbox items to retrieve.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> associé aux éléments de boîte à outils à récupérer.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCollection&quot; /&gt; that contains the current toolbox items that are associated with the specified designer host.">
        <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> contenant les éléments de boîte à outils en cours qui sont associés à l'hôte concepteur spécifié.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems(System.String)">
      <summary vsli:raw="Gets a collection of toolbox items from the toolbox that match the specified category.">Obtient une collection d'éléments de boîte à outils correspondant à la catégorie spécifiée à partir de la boîte à outils.</summary>
      <param name="category" vsli:raw="The toolbox item category to retrieve all the toolbox items from.">Catégorie d'éléments de boîte à outils à partir de laquelle récupérer les éléments de boîte à outils.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCollection&quot; /&gt; that contains the current toolbox items that are associated with the specified category.">
        <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> contenant les éléments de boîte à outils en cours associés à la catégorie spécifiée.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems(System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Gets the collection of toolbox items that are associated with the specified designer host and category from the toolbox.">Obtient la collection d'éléments de boîte à outils associés à l'hôte concepteur et à la catégorie spécifiés à partir de la boîte à outils.</summary>
      <param name="category" vsli:raw="The toolbox item category to retrieve the toolbox items from.">Catégorie d'éléments de boîte à outils à partir de laquelle récupérer les éléments de boîte à outils.</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that is associated with the toolbox items to retrieve.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> associé aux éléments de boîte à outils à récupérer.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCollection&quot; /&gt; that contains the current toolbox items that are associated with the specified category and designer host.">
        <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> contenant les éléments de boîte à outils en cours qui sont associés à la catégorie et à l'hôte concepteur spécifiés.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsSupported(System.Object,System.Collections.ICollection)">
      <summary vsli:raw="Gets a value indicating whether the specified object which represents a serialized toolbox item matches the specified attributes.">Obtient une valeur indiquant si l'objet spécifié qui représente un élément de boîte à outils sérialisé correspond aux attributs spécifiés.</summary>
      <param name="serializedObject" vsli:raw="The object that contains the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to retrieve.">Objet contenant le <see cref="T:System.Drawing.Design.ToolboxItem" /> à récupérer.</param>
      <param name="filterAttributes" vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the attributes to test the serialized object for.">
        <see cref="T:System.Collections.ICollection" /> contenant les attributs à vérifier dans l'objet sérialisé.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object matches the specified attributes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet correspond aux attributs spécifiés ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsSupported(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Gets a value indicating whether the specified object which represents a serialized toolbox item can be used by the specified designer host.">Obtient une valeur indiquant si l'objet spécifié qui représente un élément de boîte à outils sérialisé peut être utilisé par l'hôte concepteur spécifié.</summary>
      <param name="serializedObject" vsli:raw="The object that contains the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to retrieve.">Objet contenant le <see cref="T:System.Drawing.Design.ToolboxItem" /> à récupérer.</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; to test for support for the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> dont la compatibilité avec <see cref="T:System.Drawing.Design.ToolboxItem" /> doit être vérifiée.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified object is compatible with the specified designer host; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet spécifié est compatible avec l'hôte concepteur spécifié ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsToolboxItem(System.Object)">
      <summary vsli:raw="Gets a value indicating whether the specified object is a serialized toolbox item.">Obtient une valeur indiquant si l'objet spécifié est un élément de boîte à outils sérialisé.</summary>
      <param name="serializedObject" vsli:raw="The object to inspect.">Objet à inspecter.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object contains a toolbox item object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet contient un élément de boîte à outils ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsToolboxItem(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Gets a value indicating whether the specified object is a serialized toolbox item, using the specified designer host.">Obtient une valeur indiquant si l'objet spécifié est un élément de boîte à outils sérialisé, à l'aide de l'hôte concepteur spécifié.</summary>
      <param name="serializedObject" vsli:raw="The object to inspect.">Objet à inspecter.</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that is making this request.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> qui est l'auteur de cette demande.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object contains a toolbox item object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'objet contient un élément de boîte à outils ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.Refresh">
      <summary vsli:raw="Refreshes the state of the toolbox items.">Actualise l'état des éléments de boîte à outils.</summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveCreator(System.String)">
      <summary vsli:raw="Removes a previously added toolbox item creator of the specified data format.">Supprime un créateur d'élément de boîte à outils du format de données spécifié ajouté au préalable.</summary>
      <param name="format" vsli:raw="The data format of the creator to remove.">Format de données du créateur à supprimer.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveCreator(System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Removes a previously added toolbox creator that is associated with the specified data format and the specified designer host.">Supprime un créateur de boîte à outils ajouté au préalable qui est associé au format de données et à l'hôte du concepteur spécifiés.</summary>
      <param name="format" vsli:raw="The data format of the creator to remove.">Format de données du créateur à supprimer.</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that is associated with the creator to remove.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> associé au créateur à supprimer.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Removes the specified toolbox item from the toolbox.">Supprime l'élément de boîte à outils spécifié de la boîte à outils.</summary>
      <param name="toolboxItem" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to remove from the toolbox.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> à supprimer de la boîte à outils.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveToolboxItem(System.Drawing.Design.ToolboxItem,System.String)">
      <summary vsli:raw="Removes the specified toolbox item from the toolbox.">Supprime l'élément de boîte à outils spécifié de la boîte à outils.</summary>
      <param name="toolboxItem" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to remove from the toolbox.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> à supprimer de la boîte à outils.</param>
      <param name="category" vsli:raw="The toolbox item category to remove the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; from.">Catégorie d'éléments de boîte à outils de laquelle <see cref="T:System.Drawing.Design.ToolboxItem" /> doit être supprimé.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SelectedToolboxItemUsed">
      <summary vsli:raw="Notifies the toolbox service that the selected tool has been used.">Informe le service boîte à outils que l'outil sélectionné a été utilisé.</summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SerializeToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Gets a serializable object that represents the specified toolbox item.">Obtient un objet sérialisable représentant l'élément de boîte à outils spécifié.</summary>
      <param name="toolboxItem" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to serialize.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> à sérialiser.</param>
      <returns vsli:raw="An object that represents the specified &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Objet représentant le <see cref="T:System.Drawing.Design.ToolboxItem" /> spécifié.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SetCursor">
      <summary vsli:raw="Sets the current application's cursor to a cursor that represents the currently selected tool.">Assigne un curseur représentant l'outil actuellement sélectionné au curseur de l'application en cours.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the cursor is set by the currently selected tool, &lt;see langword=&quot;false&quot; /&gt; if there is no tool selected and the cursor is set to the standard windows cursor.">
        <see langword="true" /> si l'outil actuellement sélectionné est affecté au curseur, <see langword="false" /> si aucun outil n'est sélectionné et si le curseur correspond au curseur Windows standard.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SetSelectedToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Selects the specified toolbox item.">Sélectionne l'élément de boîte à outils spécifié.</summary>
      <param name="toolboxItem" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to select.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> à sélectionner.</param>
    </member>
    <member name="P:System.Drawing.Design.IToolboxService.CategoryNames">
      <summary vsli:raw="Gets the names of all the tool categories currently on the toolbox.">Obtient le nom de toutes les catégories d'outils figurant dans la boîte à outils actuellement.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.CategoryNameCollection&quot; /&gt; containing the tool categories.">
        <see cref="T:System.Drawing.Design.CategoryNameCollection" /> contenant les catégories d'outils.</returns>
    </member>
    <member name="P:System.Drawing.Design.IToolboxService.SelectedCategory">
      <summary vsli:raw="Gets or sets the name of the currently selected tool category from the toolbox.">Obtient ou définit le nom de la catégorie d'outils actuellement sélectionnée dans la boîte à outils.</summary>
      <returns vsli:raw="The name of the currently selected category.">Nom de la catégorie actuellement sélectionnée.</returns>
    </member>
    <member name="T:System.Drawing.Design.IToolboxUser">
      <summary vsli:raw="Defines an interface for setting the currently selected toolbox item and indicating whether a designer supports a particular toolbox item.">Définit une interface permettant de déterminer l'élément de boîte à outils actuellement sélectionné et d'indiquer si un concepteur prend en charge un élément de boîte à outils particulier.</summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Gets a value indicating whether the specified tool is supported by the current designer.">Obtient une valeur indiquant si l'outil spécifié est pris en charge par le concepteur actuel.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to be tested for toolbox support.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> dont la prise en charge de la boîte à outils est à vérifier.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the tool is supported by the toolbox and can be enabled; &lt;see langword=&quot;false&quot; /&gt; if the document designer does not know how to use the tool.">
        <see langword="true" /> si l'outil est pris en charge par la boîte à outils et s'il peut être activé ; <see langword="false" /> si le Concepteur de documents n'est pas capable d'utiliser l'outil.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Selects the specified tool.">Sélectionne l'outil spécifié.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to select.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> à sélectionner.</param>
    </member>
    <member name="T:System.Drawing.Design.MetafileEditor">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditor&quot; /&gt; that can perform default file searching for metafile (.emf) files.">Fournit un <see cref="T:System.Drawing.Design.UITypeEditor" /> pouvant effectuer une recherche de fichier par défaut pour les métafichiers (.emf).</summary>
    </member>
    <member name="M:System.Drawing.Design.MetafileEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.MetafileEditor&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Design.MetafileEditor" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.MetafileEditor.GetExtensions">
      <summary vsli:raw="Gets the extensions for the file-list filter that this editor initially uses to filter the file list.">Obtient les extensions du filtre de liste de fichiers que l’éditeur utilise initialement pour filtrer la liste de fichiers.</summary>
      <returns vsli:raw="A set of file extensions used to filter the file list.">Ensemble d’extensions de fichier utilisées pour filtrer la liste de fichiers.</returns>
    </member>
    <member name="M:System.Drawing.Design.MetafileEditor.GetFileDialogDescription">
      <summary vsli:raw="Gets the description for the default file-list filter provided by this editor.">Obtient la description du filtre de liste de fichiers par défaut fourni par cet éditeur.</summary>
      <returns vsli:raw="The description for the default file-list filter.">Description du filtre de liste de fichiers par défaut.</returns>
    </member>
    <member name="M:System.Drawing.Design.MetafileEditor.LoadFromStream(System.IO.Stream)">
      <summary vsli:raw="Loads an image from the specified stream.">Charge une image à partir du flux spécifié.</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; that contains the image to load.">
        <see cref="T:System.IO.Stream" /> qui contient l’image à charger.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Image&quot; /&gt; that has been loaded.">Le <see cref="T:System.Drawing.Image" /> qui a été chargé.</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Drawing.Design.ToolboxItem.ComponentsCreated&quot; /&gt; event that occurs when components are added to the toolbox.">Fournit des données pour l'événement <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreated" /> déclenché lorsque des composants sont ajoutés à la boîte à outils.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxComponentsCreatedEventArgs.#ctor(System.ComponentModel.IComponent[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs" />.</summary>
      <param name="components" vsli:raw="The components to include in the toolbox.">Composants à inclure dans la boîte à outils.</param>
    </member>
    <member name="P:System.Drawing.Design.ToolboxComponentsCreatedEventArgs.Components">
      <summary vsli:raw="Gets or sets an array containing the components to add to the toolbox.">Obtient ou définit un tableau contenant les composants à ajouter à la boîte à outils.</summary>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; indicating the components to add to the toolbox.">Tableau de type <see cref="T:System.ComponentModel.IComponent" /> qui indique les composants à ajouter à la boîte à outils.</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatedEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Drawing.Design.ToolboxItem.ComponentsCreated&quot; /&gt; event.">Représente la méthode qui gère l’événement <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreated" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Source de l'événement.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs&quot; /&gt; that provides data for the event.">
        <see cref="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs" /> qui fournit des données pour l'événement.</param>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Drawing.Design.ToolboxItem.ComponentsCreating&quot; /&gt; event that occurs when components are added to the toolbox.">Fournit des données pour l'événement <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreating" /> déclenché lorsque des composants sont ajoutés à la boîte à outils.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxComponentsCreatingEventArgs.#ctor(System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs" />.</summary>
      <param name="host" vsli:raw="The designer host that is making the request.">Hôte concepteur adressant la demande.</param>
    </member>
    <member name="P:System.Drawing.Design.ToolboxComponentsCreatingEventArgs.DesignerHost">
      <summary vsli:raw="Gets or sets an instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that made the request to create toolbox components.">Obtient ou définit une instance du <see cref="T:System.ComponentModel.Design.IDesignerHost" /> qui a demandé la création de composants pour la boîte à outils.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that made the request to create toolbox components, or &lt;see langword=&quot;null&quot; /&gt; if no designer host was provided to the toolbox item.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> ayant adressé la demande de création de composants pour la boîte à outils ou <see langword="null" /> si aucun hôte concepteur n'a été fourni à l'élément de boîte à outils.</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatingEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Drawing.Design.ToolboxItem.ComponentsCreating&quot; /&gt; event.">Représente la méthode qui gère l’événement <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreating" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Source de l'événement.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs&quot; /&gt; that provides data for the event.">
        <see cref="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs" /> qui fournit des données pour l'événement.</param>
    </member>
    <member name="T:System.Drawing.Design.ToolboxItem">
      <summary vsli:raw="Provides a base implementation of a toolbox item.">Fournit une implémentation de base d'un élément de boîte à outils.</summary>
    </member>
    <member name="E:System.Drawing.Design.ToolboxItem.ComponentsCreated">
      <summary vsli:raw="Occurs immediately after components are created.">Se produit dès que les composants ont été créés.</summary>
    </member>
    <member name="E:System.Drawing.Design.ToolboxItem.ComponentsCreating">
      <summary vsli:raw="Occurs when components are about to be created.">Se produit quand des composants sont sur le point d'être créés.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; class that creates the specified type of component.">Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Design.ToolboxItem" /> qui crée le type de composant spécifié.</summary>
      <param name="toolType" vsli:raw="The type of &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; that the toolbox item creates.">Type de <see cref="T:System.ComponentModel.IComponent" /> que crée l'élément de boîte à outils.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; was locked.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> est verrouillé.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CheckUnlocked">
      <summary vsli:raw="Throws an exception if the toolbox item is currently locked.">Lève une exception si l'élément de boîte à outils est actuellement verrouillé.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; is locked.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> est verrouillé.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponents">
      <summary vsli:raw="Creates the components that the toolbox item is configured to create.">Crée les composants que l'élément de boîte à outils est configuré pour créer.</summary>
      <returns vsli:raw="An array of created &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects.">Tableau d'objets <see cref="T:System.ComponentModel.IComponent" /> créés.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponents(System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Creates the components that the toolbox item is configured to create, using the specified designer host.">Crée les composants que l'élément de boîte à outils est configuré pour créer, à l'aide de l'hôte du concepteur spécifié.</summary>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; to use when creating the components.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> à utiliser lors de la création des composants.</param>
      <returns vsli:raw="An array of created &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects.">Tableau d'objets <see cref="T:System.ComponentModel.IComponent" /> créés.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponents(System.ComponentModel.Design.IDesignerHost,System.Collections.IDictionary)">
      <summary vsli:raw="Creates the components that the toolbox item is configured to create, using the specified designer host and default values.">Crée les composants que l'élément de boîte à outils est configuré pour créer, à l'aide de l'hôte du concepteur spécifié et des valeurs par défaut.</summary>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; to use when creating the components.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> à utiliser lors de la création des composants.</param>
      <param name="defaultValues" vsli:raw="A dictionary of property name/value pairs of default values with which to initialize the component.">Dictionnaire de paires nom/valeur de propriété des valeurs par défaut avec lequel initialiser le composant.</param>
      <returns vsli:raw="An array of created &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects.">Tableau d'objets <see cref="T:System.ComponentModel.IComponent" /> créés.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponentsCore(System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Creates a component or an array of components when the toolbox item is invoked.">Crée un composant ou un tableau de composants quand l'élément de boîte à outils est appelé.</summary>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; to host the toolbox item.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> qui doit héberger l'élément de boîte à outils.</param>
      <returns vsli:raw="An array of created &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects.">Tableau d'objets <see cref="T:System.ComponentModel.IComponent" /> créés.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponentsCore(System.ComponentModel.Design.IDesignerHost,System.Collections.IDictionary)">
      <summary vsli:raw="Creates an array of components when the toolbox item is invoked.">Crée un tableau de composants quand l'élément de boîte à outils est appelé.</summary>
      <param name="host" vsli:raw="The designer host to use when creating components.">Hôte du concepteur à utiliser pendant la création de composants.</param>
      <param name="defaultValues" vsli:raw="A dictionary of property name/value pairs of default values with which to initialize the component.">Dictionnaire de paires nom/valeur de propriété des valeurs par défaut avec lequel initialiser le composant.</param>
      <returns vsli:raw="An array of created &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects.">Tableau d'objets <see cref="T:System.ComponentModel.IComponent" /> créés.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Deserialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Loads the state of the toolbox item from the specified serialization information object.">Charge l'état de l'élément de boîte à outils à partir de l'objet des informations de sérialisation spécifiées.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to load from.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> à partir duquel l'état est chargé.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that indicates the stream characteristics.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui indique les caractéristiques du flux.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Equals(System.Object)">
      <summary vsli:raw="Determines whether two &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; instances are equal.">Détermine si deux instances <see cref="T:System.Drawing.Design.ToolboxItem" /> sont égales.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to compare with the current &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> à comparer avec l'objet <see cref="T:System.Drawing.Design.ToolboxItem" /> actuel.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <see cref="T:System.Drawing.Design.ToolboxItem" /> spécifié est égal au <see cref="T:System.Drawing.Design.ToolboxItem" /> actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.FilterPropertyValue(System.String,System.Object)">
      <summary vsli:raw="Filters a property value before returning it.">Filtre une valeur de propriété avant de la retourner.</summary>
      <param name="propertyName" vsli:raw="The name of the property to filter.">Nom de la propriété à filtrer.</param>
      <param name="value" vsli:raw="The value against which to filter the property.">Valeur sur laquelle filtrer la propriété.</param>
      <returns vsli:raw="A filtered property value.">Valeur de propriété filtrée.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Retourne le code de hachage de cette instance.</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Code de hachage du <see cref="T:System.Drawing.Design.ToolboxItem" /> actuel.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.GetType(System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Enables access to the type associated with the toolbox item.">Permet l'accès au type associé à l'élément de boîte à outils.</summary>
      <param name="host" vsli:raw="The designer host to query for &lt;see cref=&quot;T:System.ComponentModel.Design.ITypeResolutionService&quot; /&gt;.">Hôte du concepteur à interroger pour obtenir <see cref="T:System.ComponentModel.Design.ITypeResolutionService" />.</param>
      <returns vsli:raw="The type associated with the toolbox item.">Type associé à l'élément de boîte à outils.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.GetType(System.ComponentModel.Design.IDesignerHost,System.Reflection.AssemblyName,System.String,System.Boolean)">
      <summary vsli:raw="Creates an instance of the specified type, optionally using a specified designer host and assembly name.">Crée une instance du type spécifié, en utilisant éventuellement un hôte du concepteur et un nom d'assembly spécifiés.</summary>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; for the current document. This can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> pour le document actif. Il peut s’agir de <see langword="null" />.</param>
      <param name="assemblyName" vsli:raw="An &lt;see cref=&quot;T:System.Reflection.AssemblyName&quot; /&gt; that indicates the assembly that contains the type to load. This can be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Reflection.AssemblyName" /> indiquant l'assembly contenant le type à charger. Il peut s’agir de <see langword="null" />.</param>
      <param name="typeName" vsli:raw="The name of the type to create an instance of.">Nom du type dont une instance sera créée.</param>
      <param name="reference" vsli:raw="A value indicating whether or not to add a reference to the assembly that contains the specified type to the designer host's set of references.">Valeur indiquant s'il faut ou non ajouter une référence à l'assembly qui contient le type spécifié à l'ensemble de références de l'hôte concepteur.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;typeName&quot; /&gt; is not specified.">
        <paramref name="typeName" /> n'est pas spécifié.</exception>
      <returns vsli:raw="An instance of the specified type, if it can be located.">Instance du type spécifié, si elle peut être localisée.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Initialize(System.Type)">
      <summary vsli:raw="Initializes the current toolbox item with the specified type to create.">Initialise l'élément de boîte à outils actuel avec le type spécifié à créer.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that the toolbox item creates.">
        <see cref="T:System.Type" /> que crée l'élément de boîte à outils.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; was locked.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> est verrouillé.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Lock">
      <summary vsli:raw="Locks the toolbox item and prevents changes to its properties.">Verrouille l'élément de boîte à outils et empêche toute modification de ses propriétés.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.OnComponentsCreated(System.Drawing.Design.ToolboxComponentsCreatedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Drawing.Design.ToolboxItem.ComponentsCreated&quot; /&gt; event.">Déclenche l’événement <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreated" />.</summary>
      <param name="args" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs&quot; /&gt; that provides data for the event.">
        <see cref="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs" /> qui fournit des données pour l'événement.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.OnComponentsCreating(System.Drawing.Design.ToolboxComponentsCreatingEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Drawing.Design.ToolboxItem.ComponentsCreating&quot; /&gt; event.">Déclenche l’événement <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreating" />.</summary>
      <param name="args" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs&quot; /&gt; that provides data for the event.">
        <see cref="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs" /> qui fournit des données pour l'événement.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Serialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Saves the state of the toolbox item to the specified serialization information object.">Enregistre l'état de l'élément de boîte à outils dans l'objet des informations de sérialisation spécifiées.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to save to.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> où effectuer l'enregistrement.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that indicates the stream characteristics.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui indique les caractéristiques du flux.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)&quot; /&gt; method.">Pour obtenir une description de ce membre, consultez la méthode <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to populate with data.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> à remplir de données.</param>
      <param name="context" vsli:raw="The destination (see &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;) for this serialization.">Destination (consultez <see cref="T:System.Runtime.Serialization.StreamingContext" />) de cette sérialisation.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.ToString">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the current &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Retourne une valeur <see cref="T:System.String" /> qui représente le <see cref="T:System.Drawing.Design.ToolboxItem" /> actuel.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the current &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">
        <see cref="T:System.String" /> qui représente le <see cref="T:System.Drawing.Design.ToolboxItem" /> actuel.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.ValidatePropertyType(System.String,System.Object,System.Type,System.Boolean)">
      <summary vsli:raw="Validates that an object is of a given type.">Vérifie qu'un objet est d'un type donné.</summary>
      <param name="propertyName" vsli:raw="The name of the property to validate.">Nom de la propriété à valider.</param>
      <param name="value" vsli:raw="Optional value against which to validate.">Valeur facultative à utiliser pour la validation.</param>
      <param name="expectedType" vsli:raw="The expected type of the property.">Type attendu de la propriété.</param>
      <param name="allowNull" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to allow &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour autoriser <see langword="null" /> ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, and &lt;paramref name=&quot;allowNull&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="value" /> a la valeur <see langword="null" /> et <paramref name="allowNull" /> a la valeur <see langword="false" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is not the type specified by &lt;paramref name=&quot;expectedType&quot; /&gt;.">
        <paramref name="value" /> n'est pas le type spécifié par <paramref name="expectedType" />.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.ValidatePropertyValue(System.String,System.Object)">
      <summary vsli:raw="Validates a property before it is assigned to the property dictionary.">Valide une propriété avant qu'elle ne soit assignée au dictionnaire de propriétés.</summary>
      <param name="propertyName" vsli:raw="The name of the property to validate.">Nom de la propriété à valider.</param>
      <param name="value" vsli:raw="The value against which to validate.">Valeur à utiliser pour la validation.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, and &lt;paramref name=&quot;propertyName&quot; /&gt; is &quot;IsTransient&quot;.">
        <paramref name="value" /> est <see langword="null" /> et <paramref name="propertyName" /> est « IsTransient ».</exception>
      <returns vsli:raw="The value used to perform validation.">Valeur utilisée pour effectuer la validation.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.AssemblyName">
      <summary vsli:raw="Gets or sets the name of the assembly that contains the type or types that the toolbox item creates.">Obtient ou définit le nom de l'assembly contenant les types créés par l'élément de boîte à outils.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Reflection.AssemblyName&quot; /&gt; that indicates the assembly containing the type or types to create.">
        <see cref="T:System.Reflection.AssemblyName" /> qui indique l'assembly contenant les types à créer.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Bitmap">
      <summary vsli:raw="Gets or sets a bitmap to represent the toolbox item in the toolbox.">Obtient ou définit une bitmap pour représenter l'élément de boîte à outils dans la boîte à outils.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Bitmap&quot; /&gt; that represents the toolbox item in the toolbox.">
        <see cref="T:System.Drawing.Bitmap" /> représentant l'élément de boîte à outils dans la boîte à outils.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Company">
      <summary vsli:raw="Gets or sets the company name for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Obtient ou définit le nom de la société pour <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that specifies the company for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">
        <see cref="T:System.String" /> qui spécifie la société pour cet objet <see cref="T:System.Drawing.Design.ToolboxItem" />.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.ComponentType">
      <summary vsli:raw="Gets the component type for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Obtient le type de composant pour cet objet <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that specifies the component type for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">
        <see cref="T:System.String" /> qui spécifie le type de composant pour cet objet <see cref="T:System.Drawing.Design.ToolboxItem" />.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.DependentAssemblies">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Reflection.AssemblyName&quot; /&gt; for the toolbox item.">Obtient ou définit <see cref="T:System.Reflection.AssemblyName" /> pour l'élément de boîte à outils.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Reflection.AssemblyName&quot; /&gt; objects.">Tableau d'objets <see cref="T:System.Reflection.AssemblyName" />.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Description">
      <summary vsli:raw="Gets or sets the description for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Obtient ou définit la description de cet objet <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that specifies the description for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">
        <see cref="T:System.String" /> qui spécifie la description de cet objet <see cref="T:System.Drawing.Design.ToolboxItem" />.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.DisplayName">
      <summary vsli:raw="Gets or sets the display name for the toolbox item.">Obtient ou définit le nom complet de l'élément de boîte à outils.</summary>
      <returns vsli:raw="The display name for the toolbox item.">Nom complet de l'élément de boîte à outils.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Filter">
      <summary vsli:raw="Gets or sets the filter that determines whether the toolbox item can be used on a destination component.">Obtient ou définit le filtre qui détermine si l'élément de boîte à outils peut être utilisé sur un composant de destination.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; of &lt;see cref=&quot;T:System.ComponentModel.ToolboxItemFilterAttribute&quot; /&gt; objects.">
        <see cref="T:System.Collections.ICollection" /> d'objets <see cref="T:System.ComponentModel.ToolboxItemFilterAttribute" />.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.IsTransient">
      <summary vsli:raw="Gets a value indicating whether the toolbox item is transient.">Obtient une valeur qui indique si l'élément de boîte à outils est transitoire.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if this toolbox item should not be stored in any toolbox database when an application that is providing a toolbox closes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, si cet élément de boîte à outils ne doit pas être stocké dans une base de données de boîte à outils lorsqu'une application qui fournit une boîte à outils se ferme ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Locked">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; is currently locked.">Obtient une valeur indiquant si <see cref="T:System.Drawing.Design.ToolboxItem" /> est actuellement verrouillé.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the toolbox item is locked; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'élément de boîte à outils est verrouillé ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.OriginalBitmap">
      <summary vsli:raw="Gets or sets the original bitmap that will be used in the toolbox for this item.">Obtient ou définit l'image bitmap d'origine qui sera utilisée dans la boîte à outils pour cet élément.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Bitmap&quot; /&gt; that represents the toolbox item in the toolbox.">
        <see cref="T:System.Drawing.Bitmap" /> représentant l'élément de boîte à outils dans la boîte à outils.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Properties">
      <summary vsli:raw="Gets a dictionary of properties.">Obtient un dictionnaire de propriétés.</summary>
      <returns vsli:raw="A dictionary of name/value pairs (the names are property names and the values are property values).">Dictionnaire de paires nom/valeur (les noms sont les noms de propriétés et les valeurs sont des valeurs de propriétés).</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.TypeName">
      <summary vsli:raw="Gets or sets the fully qualified name of the type of &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; that the toolbox item creates when invoked.">Obtient ou définit le nom qualifié complet du type de <see cref="T:System.ComponentModel.IComponent" /> que l'élément de boîte à outils crée lorsqu'il est appelé.</summary>
      <returns vsli:raw="The fully qualified type name of the type of component that this toolbox item creates.">Nom de type qualifié complet du type de composant que cet élément de boîte à outils crée.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Version">
      <summary vsli:raw="Gets the version for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Obtient la version de cet objet <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that specifies the version for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">
        <see cref="T:System.String" /> qui spécifie la version de cet objet <see cref="T:System.Drawing.Design.ToolboxItem" />.</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxItemCollection">
      <summary vsli:raw="Represents a collection of toolbox items.">Représente une collection d'éléments de boîte à outils.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.#ctor(System.Drawing.Design.ToolboxItem[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCollection&quot; /&gt; class using the specified array of toolbox items.">Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> à l'aide du tableau spécifié d'éléments de boîte à outils.</summary>
      <param name="value" vsli:raw="An array of type &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; containing the toolbox items to fill the collection with.">Tableau de type <see cref="T:System.Drawing.Design.ToolboxItem" /> contenant les éléments de boîte à outils à utiliser pour remplir la collection.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.#ctor(System.Drawing.Design.ToolboxItemCollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCollection&quot; /&gt; class using the specified collection.">Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> à l'aide de la collection spécifiée.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCollection&quot; /&gt; to fill the new collection with.">
        <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> à utiliser pour remplir la nouvelle collection.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.Contains(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Indicates whether the collection contains the specified &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Indique si la collection contient l’<see cref="T:System.Drawing.Design.ToolboxItem" /> spécifié.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to search the collection for.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> à rechercher dans la collection.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains the specified object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la collection contient l'objet spécifié ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.CopyTo(System.Drawing.Design.ToolboxItem[],System.Int32)">
      <summary vsli:raw="Copies the collection to the specified array beginning with the specified destination index.">Copie la collection vers le tableau spécifié, en commençant à l'index de destination spécifié.</summary>
      <param name="array" vsli:raw="The array to copy to.">Tableau dans lequel effectuer la copie.</param>
      <param name="index" vsli:raw="The index to begin copying to.">Index à partir duquel commencer la copie.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.IndexOf(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;, if it exists in the collection.">Obtient l'index du <see cref="T:System.Drawing.Design.ToolboxItem" /> spécifié, s'il existe dans la collection.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to get the index of in the collection.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> dont l'index doit être obtenu dans la collection.</param>
      <returns vsli:raw="The index of the specified &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Index du <see cref="T:System.Drawing.Design.ToolboxItem" /> spécifié.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItemCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; at the specified index.">Obtient l'objet <see cref="T:System.Drawing.Design.ToolboxItem" /> à l'index spécifié.</summary>
      <param name="index" vsli:raw="The index of the object to get or set.">Index de l'objet à obtenir ou à définir.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; at each valid index in the collection.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> à chaque index valide dans la collection.</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxItemCreatorCallback">
      <summary vsli:raw="Provides a callback mechanism that can create a &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Fournit un mécanisme de rappel qui peut créer un <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
      <param name="serializedObject" vsli:raw="The object which contains the data to create a &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; for.">Objet contenant les données pour lesquelles créer un <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
      <param name="format" vsli:raw="The name of the clipboard data format to create a &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; for.">Nom du format de données du Presse-papiers pour lequel créer un <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
      <returns vsli:raw="The deserialized &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; object specified by &lt;paramref name=&quot;serializedObject&quot; /&gt;.">Objet <see cref="T:System.Drawing.Design.ToolboxItem" /> désérialisé spécifié par <paramref name="serializedObject" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.UCOMITypeLib">
      <summary vsli:raw="Use &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.ITypeLib&quot; /&gt; instead.">Utilisez plutôt <see cref="T:System.Runtime.InteropServices.ComTypes.ITypeLib" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)">
      <summary vsli:raw="Retrieves the library's documentation string, the complete Help file name and path, and the context identifier for the library Help topic in the Help file.">Récupère la chaîne de documentation de la bibliothèque, le nom et le chemin complets du fichier d’aide, et l’ID de contexte de la rubrique d’aide de la bibliothèque dans le fichier d’aide.</summary>
      <param name="index" vsli:raw="Index of the type description whose documentation is to be returned.">Index de la description de type dont la documentation doit être retournée.</param>
      <param name="strName" vsli:raw="Returns a string that contains the name of the specified item.">Retourne une chaîne qui contient le nom de l’élément spécifié.</param>
      <param name="strDocString" vsli:raw="Returns a string that contains the documentation string for the specified item.">Retourne une chaîne qui contient la chaîne de documentation pour l’élément spécifié.</param>
      <param name="dwHelpContext" vsli:raw="Returns the Help context identifier associated with the specified item.">Retourne l’ID de contexte d’aide associé à l’élément spécifié.</param>
      <param name="strHelpFile" vsli:raw="Returns a string that contains the fully qualified name of the Help file.">Retourne une chaîne qui contient le nom complet du fichier d’aide.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.GetLibAttr(System.IntPtr@)">
      <summary vsli:raw="Retrieves the structure that contains the library's attributes.">Récupère la structure qui contient les attributs de la bibliothèque.</summary>
      <param name="ppTLibAttr" vsli:raw="On successful return, a structure that contains the library's attributes.">Lors d’un retour correct, structure qui contient les attributs de la bibliothèque.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.GetTypeInfoCount">
      <summary vsli:raw="Returns the number of type descriptions in the type library.">Retourne le nombre de descriptions de types de la bibliothèque de types.</summary>
      <returns vsli:raw="The number of type descriptions in the type library.">Nombre de descriptions de types de la bibliothèque de types.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.GetTypeInfoType(System.Int32,System.Runtime.InteropServices.ComTypes.TYPEKIND@)">
      <summary vsli:raw="Retrieves the type of a type description.">Récupère le type d’une description de type.</summary>
      <param name="index" vsli:raw="The index of the type description within the type library.">Index de la description de type dans la bibliothèque de types</param>
      <param name="pTKind" vsli:raw="A reference to the &lt;see langword=&quot;TYPEKIND&quot; /&gt; enumeration for the type description.">Référence à l’énumération <see langword="TYPEKIND" /> pour la description de type.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.IsName(System.String,System.Int32)">
      <summary vsli:raw="Indicates whether a passed-in string contains the name of a type or member described in the library.">Indique si une chaîne passée contient le nom d’un type ou d’un membre décrit dans la bibliothèque.</summary>
      <param name="szNameBuf" vsli:raw="The string to test.">Chaîne à tester.</param>
      <param name="lHashVal" vsli:raw="The hash value of &lt;paramref name=&quot;szNameBuf&quot; /&gt;.">Valeur de hachage de <paramref name="szNameBuf" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;szNameBuf&quot; /&gt; was found in the type library; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="szNameBuf" /> a été trouvé dans la bibliothèque de types ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.ReleaseTLibAttr(System.IntPtr)">
      <summary vsli:raw="Releases the &lt;see cref=&quot;T:System.Runtime.InteropServices.TYPELIBATTR&quot; /&gt; originally obtained from &lt;see cref=&quot;M:System.Runtime.InteropServices.UCOMITypeLib.GetLibAttr(System.IntPtr@)&quot; /&gt;.">Libère le <see cref="T:System.Runtime.InteropServices.TYPELIBATTR" /> obtenu à l’origine auprès de <see cref="M:System.Runtime.InteropServices.UCOMITypeLib.GetLibAttr(System.IntPtr@)" />.</summary>
      <param name="pTLibAttr" vsli:raw="The &lt;see langword=&quot;TLIBATTR&quot; /&gt; to release.">
        <see langword="TLIBATTR" /> à libérer.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.AnchorEditor">
      <summary vsli:raw="Provides a user interface for configuring an &lt;see cref=&quot;P:System.Windows.Forms.Control.Anchor&quot; /&gt; property.">Fournit une interface utilisateur pour configurer une propriété <see cref="P:System.Windows.Forms.Control.Anchor" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AnchorEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.AnchorEditor&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.AnchorEditor" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AnchorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the value of the specified object using the specified service provider and context.">Modifie la valeur de l'objet spécifié à l'aide du fournisseur de services et du contexte spécifiés.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; through which editing services may be obtained.">
        <see cref="T:System.IServiceProvider" /> par le biais duquel des services d'édition peuvent être obtenus.</param>
      <param name="value" vsli:raw="An instance of the value being edited.">Instance de la valeur en cours de modification.</param>
      <returns vsli:raw="The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.">Nouvelle valeur de l'objet. Si la valeur de l'objet n'a pas été modifiée, cette méthode retourne le même objet qui lui a été passé.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AnchorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editor style used by the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Windows.Forms.Design.AnchorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot;&gt;&lt;/xref&gt; method.">Obtient le style de l'éditeur utilisé par la méthode <see cref="M:System.Windows.Forms.Design.AnchorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <returns vsli:raw="One of the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle&quot;&gt;&lt;/xref&gt; values indicating the provided editing style. If the method is not supported, this method will return &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle.None&quot;&gt;&lt;/xref&gt;.">Une des valeurs <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> indiquant le style de modification fourni. Si la méthode n'est pas prise en charge, elle retourne <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.AxImporter">
      <summary vsli:raw="Imports ActiveX controls and generates a wrapper that can be accessed by a designer.">Importe des contrôles ActiveX et génère un wrapper auquel un concepteur peut accéder.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.#ctor(System.Windows.Forms.Design.AxImporter.Options)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.AxImporter&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.AxImporter" />.</summary>
      <param name="options" vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.Design.AxImporter.Options&quot; /&gt; that indicates the options for the ActiveX control importer to use.">
        <see cref="T:System.Windows.Forms.Design.AxImporter.Options" /> indiquant les options que l'importateur de contrôles ActiveX doit utiliser.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.AxImporter.IReferenceResolver">
      <summary vsli:raw="Provides methods to resolve references to ActiveX libraries, COM type libraries or assemblies, or managed assemblies.">Fournit des méthodes pour résoudre des références à des bibliothèques ActiveX, bibliothèques de types ou assemblys COM, ou assemblys managés.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveActiveXReference(System.Runtime.InteropServices.UCOMITypeLib)">
      <summary vsli:raw="Resolves a reference to the specified type library that contains an ActiveX control.">Résout une référence à une bibliothèque de types spécifiée qui contient un contrôle ActiveX.</summary>
      <param name="typeLib" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.InteropServices.UCOMITypeLib&quot; /&gt; to resolve a reference to.">
        <see cref="T:System.Runtime.InteropServices.UCOMITypeLib" /> responsable de la résolution d'une référence.</param>
      <returns vsli:raw="A fully qualified path to an assembly.">Chemin d'accès qualifié complet à un assembly.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveComReference(System.Reflection.AssemblyName)">
      <summary vsli:raw="Resolves a reference to the specified assembly that contains a COM component.">Résout une référence à un assembly spécifié qui contient un composant COM.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Reflection.AssemblyName&quot; /&gt; that indicates the assembly to resolve a reference to.">
        <see cref="T:System.Reflection.AssemblyName" /> indiquant l'assembly responsable de la résolution d'une référence.</param>
      <returns vsli:raw="A fully qualified path to an assembly.">Chemin d'accès qualifié complet à un assembly.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveComReference(System.Runtime.InteropServices.UCOMITypeLib)">
      <summary vsli:raw="Resolves a reference to the specified type library that contains an COM component.">Résout une référence à une bibliothèque de types spécifiée qui contient un composant COM.</summary>
      <param name="typeLib" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.InteropServices.UCOMITypeLib&quot; /&gt; to resolve a reference to.">
        <see cref="T:System.Runtime.InteropServices.UCOMITypeLib" /> responsable de la résolution d'une référence.</param>
      <returns vsli:raw="A fully qualified path to an assembly.">Chemin d'accès qualifié complet à un assembly.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveManagedReference(System.String)">
      <summary vsli:raw="Resolves a reference to the specified assembly.">Résout une référence à un assembly spécifié.</summary>
      <param name="assemName" vsli:raw="The name of the assembly to resolve a reference to.">Nom de l'assembly responsable de la résolution d'une référence.</param>
      <returns vsli:raw="A fully qualified path to an assembly.">Chemin d'accès qualifié complet à un assembly.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.AxImporter.Options">
      <summary vsli:raw="Represents a set of options for an &lt;see cref=&quot;T:System.Windows.Forms.Design.AxImporter&quot; /&gt;.">Représente un jeu d'options pour <see cref="T:System.Windows.Forms.Design.AxImporter" />.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.delaySign">
      <summary vsli:raw="Specifies whether the generated assembly is strongly named and will be signed later.">Spécifie si l'assembly généré porte un nom fort et sera signé ultérieurement.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.genSources">
      <summary vsli:raw="Specifies whether sources for the type library wrapper should be generated.">Spécifie si les sources pour le wrapper de bibliothèque de types doivent être générées.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.ignoreRegisteredOcx">
      <summary vsli:raw="Specifies whether to use only input from the command line instead relying on a registered version.">Spécifie s'il faut uniquement utiliser des entrées de la ligne de commande, plutôt que de compter sur une version inscrite.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.keyContainer">
      <summary vsli:raw="Specifies the path to the file that contains the strong name key container for the generated assemblies.">Spécifie le chemin d'accès du fichier qui contient le conteneur de clé de nom fort pour les assemblys générés.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.keyFile">
      <summary vsli:raw="Specifies the path to the file that contains the strong name key for the generated assemblies.">Spécifie le chemin d'accès du fichier qui contient la clé de nom fort pour les assemblys générés.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.keyPair">
      <summary vsli:raw="Specifies the strong name used for the generated assemblies.">Spécifie le nom fort utilisé pour les assemblys générés.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.msBuildErrors">
      <summary vsli:raw="Specifies whether errors are output in the Microsoft Build Engine (MSBuild) format.">Spécifie si des erreurs sont affichées en sortie dans le format Microsoft Build Engine (MSBuild).</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.noLogo">
      <summary vsli:raw="Indicates whether the ActiveX importer tool logo will be displayed when the control is imported.">Indique si l'importateur de contrôles ActiveX doit être affiché quand le contrôle est importé.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.outputDirectory">
      <summary vsli:raw="Specifies the path to the directory that the generated assemblies will be created in.">Spécifie le chemin d'accès d'un répertoire dans lequel les assemblys générés seront créés.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.outputName">
      <summary vsli:raw="Specifies the filename to generate the ActiveX control wrapper to.">Spécifie le nom de fichier utilisé pour générer le wrapper de contrôle ActiveX.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.overwriteRCW">
      <summary vsli:raw="Specifies whether to overwrite existing files when generating assemblies.">Spécifie si les fichiers existants doivent être remplacés lors de la génération d'assemblys.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.publicKey">
      <summary vsli:raw="Specifies the public key used to sign the generated assemblies.">Spécifie la clé publique utilisée pour signer les assemblys générés.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.references">
      <summary vsli:raw="Specifies the &lt;see cref=&quot;T:System.Windows.Forms.Design.AxImporter.IReferenceResolver&quot; /&gt; to use to resolve types and references when generating assemblies.">Spécifie le <see cref="T:System.Windows.Forms.Design.AxImporter.IReferenceResolver" /> à utiliser pour résoudre les types et références lors de la génération d'assemblys.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.silentMode">
      <summary vsli:raw="Specifies whether to compile in silent mode, which generates less displayed information at compile time.">Spécifie si la compilation doit être effectuée en mode silencieux, qui affiche moins d'informations au moment de la compilation.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.verboseMode">
      <summary vsli:raw="Specifies whether to compile in verbose mode, which generates more displayed information at compile time.">Spécifie si la compilation doit être effectuée en mode documenté, qui affiche plus d'informations au moment de la compilation.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.Options.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.AxImporter.Options&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.AxImporter.Options" />.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.Adorner">
      <summary vsli:raw="Manages a collection of user-interface related &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects. This class cannot be inherited.">Gère une collection d'objets <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> liés à une interface utilisateur. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate">
      <summary vsli:raw="Forces the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; to refresh its adorner window.">Force le <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> à actualiser sa fenêtre de dispositif d'ornement.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate(System.Drawing.Rectangle)">
      <summary vsli:raw="Forces the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; to refresh its adorner window within the given &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt;.">Force le <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> à actualiser sa fenêtre de dispositif d'ornement dans le <see cref="T:System.Drawing.Rectangle" /> donné.</summary>
      <param name="rectangle" vsli:raw="The area to invalidate.">Zone à invalider.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate(System.Drawing.Region)">
      <summary vsli:raw="Forces the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; to refresh its adorner window within the given &lt;see cref=&quot;T:System.Drawing.Region&quot; /&gt;.">Force le <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> à actualiser sa fenêtre de dispositif d'ornement dans le <see cref="T:System.Drawing.Region" /> donné.</summary>
      <param name="region" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Region&quot; /&gt; to invalidate.">
        <see cref="T:System.Drawing.Region" /> à invalider.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Adorner.BehaviorService">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt;.">Obtient ou définit le <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> associé à <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt;.">Objet <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> associé au <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Adorner.Enabled">
      <summary vsli:raw="Gets or sets a value indicating if the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; is enabled.">Obtient ou définit une valeur indiquant si le <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> est activé.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> est activé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Adorner.Glyphs">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; collection.">Obtient la collection <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects.">Collection d'objets <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.Behavior">
      <summary vsli:raw="Represents the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; objects that are managed by a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Représente les objets <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> managés par un <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.#ctor(System.Boolean,System.Windows.Forms.Design.Behavior.BehaviorService)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; class with the given &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> avec le <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> donné.</summary>
      <param name="callParentBehavior" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the parent behavior should be called if it exists; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le comportement parent doit être appelé dès lors qu'il existe ; sinon, <see langword="false" />.</param>
      <param name="behaviorService" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; to use.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> à utiliser.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;callParentBehavior&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, and &lt;paramref name=&quot;behaviorService&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="callParentBehavior" /> a la valeur <see langword="true" /> et <paramref name="behaviorService" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)">
      <summary vsli:raw="Intercepts commands.">Intercepte des commandes.</summary>
      <param name="commandId" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; object.">Objet <see cref="T:System.ComponentModel.Design.CommandID" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommand&quot; /&gt;. By default, &lt;see cref=&quot;M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)&quot; /&gt; returns &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.MenuCommand" />
        <see cref="M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)" /> retourne <see langword="null" /> par défaut.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragDrop(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Permits custom drag-and-drop behavior.">Autorise un comportement de glisser-déplacer personnalisé.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; object on which to invoke drag-and-drop behavior.">Objet <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> sur lequel appeler un comportement de glisser-déplacer.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Windows.Forms.DragEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragEnter(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Permits custom drag-enter behavior.">Autorise un comportement glisser-valider personnalisé.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; on which to invoke drag-enter behavior.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> sur lequel appeler le comportement glisser-valider.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Windows.Forms.DragEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragLeave(System.Windows.Forms.Design.Behavior.Glyph,System.EventArgs)">
      <summary vsli:raw="Permits custom drag-leave behavior.">Autorise un comportement glisser-lâcher personnalisé.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; on which to invoke drag-leave behavior.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> sur lequel appeler le comportement glisser-lâcher.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Windows.Forms.DragEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragOver(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Permits custom drag-over behavior.">Autorise un comportement glisser-survoler personnalisé.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; on which to invoke drag-over behavior.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> sur lequel appeler le comportement glisser-survoler.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Windows.Forms.DragEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnGiveFeedback(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary vsli:raw="Permits custom drag-and-drop feedback behavior.">Autorise un comportement de commentaire de glisser-déplacer personnalisé.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; on which to invoke drag-and-drop behavior.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> sur lequel appeler un comportement de glisser-déplacer.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.GiveFeedbackEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnLoseCapture(System.Windows.Forms.Design.Behavior.Glyph,System.EventArgs)">
      <summary vsli:raw="Called by the adorner window when it loses mouse capture.">Appelé par la fenêtre de dispositif d'ornement lorsqu'il perd la capture de la souris.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; on which to invoke drag-and-drop behavior.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> sur lequel appeler un comportement de glisser-déplacer.</param>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.EventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
      <summary vsli:raw="Called when any double-click message enters the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Appelé lorsqu'un message de double-clic entre dans la fenêtre de dispositif d'ornement du <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
      </param>
      <param name="button" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.MouseButtons&quot; /&gt; value indicating which button was clicked.">Valeur <see cref="T:System.Windows.Forms.MouseButtons" /> qui indique le bouton qui a fait l'objet d'un clic.</param>
      <param name="mouseLoc" vsli:raw="The location at which the click occurred.">L'emplacement auquel le clic s'est produit.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le message a été géré ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDown(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
      <summary vsli:raw="Called when any mouse-down message enters the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Appelé lorsqu'un message de trajet de souris descendant entre dans la fenêtre de dispositif d'ornement du <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
      </param>
      <param name="button" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.MouseButtons&quot; /&gt; value indicating which button was clicked.">Valeur <see cref="T:System.Windows.Forms.MouseButtons" /> qui indique le bouton qui a fait l'objet d'un clic.</param>
      <param name="mouseLoc" vsli:raw="The location at which the click occurred.">L'emplacement auquel le clic s'est produit.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le message a été géré ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseEnter(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary vsli:raw="Called when any mouse-enter message enters the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Appelé lorsqu'un message de validation à la souris entre dans la fenêtre de dispositif d'ornement du <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
      </param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le message a été géré ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseHover(System.Windows.Forms.Design.Behavior.Glyph,System.Drawing.Point)">
      <summary vsli:raw="Called when any mouse-hover message enters the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Appelé lorsqu'un message de pointage à la souris entre dans la fenêtre de dispositif d'ornement du <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
      </param>
      <param name="mouseLoc" vsli:raw="The location at which the hover occurred.">L'emplacement auquel le pointage s'est produit.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le message a été géré ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseLeave(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary vsli:raw="Called when any mouse-leave message enters the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Appelé lorsqu'un message d'éloignement à la souris entre dans la fenêtre de dispositif d'ornement du <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
      </param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le message a été géré ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseMove(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
      <summary vsli:raw="Called when any mouse-move message enters the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Appelé lorsqu'un message de déplacement à la souris entre dans la fenêtre de dispositif d'ornement du <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
      </param>
      <param name="button" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.MouseButtons&quot; /&gt; value indicating which button was clicked.">Valeur <see cref="T:System.Windows.Forms.MouseButtons" /> qui indique le bouton qui a fait l'objet d'un clic.</param>
      <param name="mouseLoc" vsli:raw="The location at which the move occurred.">L'emplacement auquel le déplacement s'est produit.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le message a été géré ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseUp(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons)">
      <summary vsli:raw="Called when any mouse-up message enters the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Appelé lorsqu'un message de trajet de souris montant entre dans la fenêtre de dispositif d'ornement du <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
      </param>
      <param name="button" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.MouseButtons&quot; /&gt; value indicating which button was clicked.">Valeur <see cref="T:System.Windows.Forms.MouseButtons" /> qui indique le bouton qui a fait l'objet d'un clic.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le message a été géré ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnQueryContinueDrag(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.QueryContinueDragEventArgs)">
      <summary vsli:raw="Sends this drag-and-drop event from the adorner window to the appropriate &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; or hit-tested &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Envoie cet événement glisser-déplacer de la fenêtre de dispositif d'ornement au <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> approprié ou au <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> ayant fait l'objet d'un test d'accès réussi.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />
      </param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.QueryContinueDragEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Behavior.Cursor">
      <summary vsli:raw="Gets the cursor that should be displayed for this behavior.">Obtient le curseur qui doit être affiché pour ce comportement.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Cursor&quot; /&gt; that represents the cursor that should be displayed for this behavior.">
        <see cref="T:System.Windows.Forms.Cursor" /> qui représente le curseur qui doit s'afficher pour ce comportement.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Behavior.DisableAllCommands">
      <summary vsli:raw="Gets a value indicating whether &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommand&quot; /&gt; objects should be disabled.">Obtient une valeur indiquant si les objets <see cref="T:System.ComponentModel.Design.MenuCommand" /> doivent être désactivés.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if all &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommand&quot; /&gt; objects the designer receives should have states set to &lt;c&gt;Enabled = false&lt;/c&gt; when this &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; is active; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Si tous <see cref="T:System.ComponentModel.Design.MenuCommand" /> les objets que le concepteur reçoit doivent avoir des États définis sur <c>activé = false</c> quand ce <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> est actif ; sinon, <see langword="false" /> .</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag&quot; /&gt; and &lt;see cref=&quot;E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag&quot; /&gt; events.">Fournit des données pour les événements <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag" /> et <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs.#ctor(System.Collections.ICollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs" />.</summary>
      <param name="dragComponents" vsli:raw="The &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; of &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects currently being dragged.">Le <see cref="T:System.Collections.ICollection" /> des objets <see cref="T:System.ComponentModel.IComponent" /> fait actuellement l'objet d'un glissé.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs.DragComponents">
      <summary vsli:raw="Gets the list of &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects currently being dragged.">Obtient la liste d'objets <see cref="T:System.ComponentModel.IComponent" /> qui font actuellement l'objet d'une opération de glissement.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; of &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects currently being dragged.">Le <see cref="T:System.Collections.ICollection" /> des objets <see cref="T:System.ComponentModel.IComponent" /> fait actuellement l'objet d'un glissé.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventHandler">
      <summary vsli:raw="Represents the methods that will handle the &lt;see cref=&quot;E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag&quot; /&gt; and &lt;see cref=&quot;E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag&quot; /&gt; events of a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;. This class cannot be inherited.">Représente les méthodes qui géreront les événements <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag" /> et <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag" /> de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />. Cette classe ne peut pas être héritée.</summary>
      <param name="sender" vsli:raw="The source of the event.">Source de l'événement.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorService">
      <summary vsli:raw="Manages user interface in the designer. This class cannot be inherited.">Gère l'interface utilisateur dans le concepteur. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; starts a drag-and-drop operation.">Se produit lorsque le <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> initie une opération de glisser-déplacer.</summary>
    </member>
    <member name="E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; completes a drag operation.">Se produit lorsque le <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> termine une opération de glisser.</summary>
    </member>
    <member name="E:System.Windows.Forms.Design.Behavior.BehaviorService.Synchronize">
      <summary vsli:raw="Occurs when the current selection should be refreshed.">Se produit lorsque la sélection actuelle doit être actualisée.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowPointToScreen(System.Drawing.Point)">
      <summary vsli:raw="Translates a &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; in the adorner window to screen coordinates.">Convertit un <see cref="T:System.Drawing.Point" /> dans la fenêtre de dispositif d'ornement en coordonnées d'écran.</summary>
      <param name="p" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; value to transform.">Valeur <see cref="T:System.Drawing.Point" /> à transformer.</param>
      <returns vsli:raw="The transformed &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; value, in screen coordinates.">Valeur <see cref="T:System.Drawing.Point" /> transformée, en coordonnées d'écran.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowToScreen">
      <summary vsli:raw="Gets the location of the adorner window in screen coordinates.">Obtient l'emplacement de la fenêtre de dispositif d'ornement en coordonnées d'écran.</summary>
      <returns vsli:raw="The location, from the upper-left corner of the adorner window, in screen coordinates.">Emplacement à partir du coin supérieur gauche de la fenêtre de dispositif d'ornement, en coordonnées d'écran.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.ControlRectInAdornerWindow(System.Windows.Forms.Control)">
      <summary vsli:raw="Returns the bounding &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; of a &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt;.">Retourne le <see cref="T:System.Drawing.Rectangle" /> englobant d'un <see cref="T:System.Windows.Forms.Control" />.</summary>
      <param name="c" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; to translate.">
        <see cref="T:System.Windows.Forms.Control" /> à convertir.</param>
      <returns vsli:raw="The bounding &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; of a &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; translated to the adorner window coordinates.">
        <see cref="T:System.Drawing.Rectangle" /> englobant d'un <see cref="T:System.Windows.Forms.Control" /> converti en coordonnées de fenêtre de dispositif d'ornement.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.ControlToAdornerWindow(System.Windows.Forms.Control)">
      <summary vsli:raw="Returns the location of a &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; translated to adorner window coordinates.">Retourne l'emplacement d'un <see cref="T:System.Windows.Forms.Control" /> converti en coordonnées de fenêtre de dispositif d'ornement.</summary>
      <param name="c" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; to translate.">
        <see cref="T:System.Windows.Forms.Control" /> à convertir.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; value indicating the location of &lt;paramref name=&quot;c&quot; /&gt; in adorner window coordinates.">Valeur <see cref="T:System.Drawing.Point" /> qui indique l'emplacement de <paramref name="c" /> en coordonnées de fenêtre de dispositif d'ornement.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Libère toutes les ressources utilisées par <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.GetNextBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; immediately after the given &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; in the behavior stack.">Retourne immédiatement le <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> après le <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> donné dans la pile de comportements.</summary>
      <param name="behavior" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; preceding the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; to be returned.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> qui précède le <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> à retourner.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; immediately after &lt;paramref name=&quot;behavior&quot; /&gt; in the behavior stack, or &lt;see langword=&quot;null&quot; /&gt; if there is no following behavior.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> placé immédiatement après le <paramref name="behavior" /> dans la pile de comportement, ou <see langword="null" /> s'il n'y a aucun comportement à la suite.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Invalidate">
      <summary vsli:raw="Invalidates the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Invalide la fenêtre de dispositif d'ornement du <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Invalidate(System.Drawing.Rectangle)">
      <summary vsli:raw="Invalidates, within the adorner window, the specified area of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Invalide, dans la fenêtre de dispositif d'ornement, la zone spécifiée du <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="rect" vsli:raw="The rectangular area to invalidate.">Zone rectangulaire à invalider.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Invalidate(System.Drawing.Region)">
      <summary vsli:raw="Invalidates, within the adorner window, the specified area of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Invalide, dans la fenêtre de dispositif d'ornement, la zone spécifiée du <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="r" vsli:raw="The region to invalidate.">Zone à invalider.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.MapAdornerWindowPoint(System.IntPtr,System.Drawing.Point)">
      <summary vsli:raw="Converts a point in a handle's coordinate system to the adorner window coordinates.">Convertit un point exprimé dans le système de coordonnées d'un handle en coordonnées de fenêtre de dispositif d'ornement.</summary>
      <param name="handle" vsli:raw="An adorner window's handle.">Handle d'une fenêtre de dispositif d'ornement.</param>
      <param name="pt" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; in a handle's coordinate system.">
        <see cref="T:System.Drawing.Point" /> exprimé dans le système de coordonnées d'un handle.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; in the adorner window coordinates.">
        <see cref="T:System.Drawing.Point" /> exprimé dans les coordonnées d'une fenêtre de dispositif d'ornement.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.PopBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Removes and returns the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; at the top of the stack.">Supprime et retourne le <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> placé au sommet de la pile.</summary>
      <param name="behavior" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; to remove from the stack.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> à supprimer de la pile.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; stack is empty.">La pile <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> est vide.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; that was removed from the stack.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> qui a été supprimé de la pile.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.PushBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Pushes a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; onto the behavior stack.">Applique un push à un <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> sur la pile de comportements.</summary>
      <param name="behavior" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; to push.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> auquel appliquer un push.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;behavior&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="behavior" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.PushCaptureBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Pushes a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; onto the behavior stack and assigns mouse capture to the behavior.">Applique un push à un <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> sur la pile de comportements et assigne une capture de souris au comportement.</summary>
      <param name="behavior" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; to push.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> auquel appliquer un push.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;behavior&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="behavior" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.ScreenToAdornerWindow(System.Drawing.Point)">
      <summary vsli:raw="Translates a point in screen coordinates into the adorner window coordinates of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Convertit un point exprimé en coordonnées d'écran en coordonnées de la fenêtre de dispositif d'ornement du <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="p" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; value to transform.">Valeur <see cref="T:System.Drawing.Point" /> à transformer.</param>
      <returns vsli:raw="The transformed &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; value, in adorner window coordinates.">La valeur <see cref="T:System.Drawing.Point" /> transformée, en coordonnées d'une fenêtre de dispositif d'ornement.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.SyncSelection">
      <summary vsli:raw="Synchronizes all selection glyphs.">Synchronise tous les glyphes de sélection.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorService.Adorners">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">Obtient <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <returns vsli:raw="A collection of adorner.">Collection d’ornements.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowGraphics">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Drawing.Graphics&quot; /&gt; for the adorner window.">Obtient le <see cref="T:System.Drawing.Graphics" /> de la fenêtre de dispositif d'ornement.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Graphics&quot; /&gt; for the adorner window.">
        <see cref="T:System.Drawing.Graphics" /> de la fenêtre de dispositif d'ornement.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorService.CurrentBehavior">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; at the top of the behavior stack without removing it.">Obtient le <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> placé au sommet de la pile de comportements sans le supprimer.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; at the top of the behavior stack.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> placé au sommet de la pile de comportements.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection">
      <summary vsli:raw="Stores &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; objects in a strongly typed collection.">Stocke des objets <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> dans une collection fortement typée.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.#ctor(System.Windows.Forms.Design.Behavior.Adorner[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; class with the given array.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> avec le tableau donné.</summary>
      <param name="value" vsli:raw="An array of type &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; to populate the collection.">Tableau de type <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> destiné à remplir la collection.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.#ctor(System.Windows.Forms.Design.Behavior.BehaviorService)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; class with the given &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; reference.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> avec la référence <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> donnée.</summary>
      <param name="behaviorService" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; reference.">Une référence <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.#ctor(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; class from an existing &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> à partir d'un <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> existant.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; from which to populate the collection.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> à partir duquel remplir la collection.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Add(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; with the specified value to the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">Ajoute un <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> ayant la valeur spécifiée à <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; to add to the end of the collection.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> à ajouter à la fin de la collection.</param>
      <returns vsli:raw="The index at which the new element was inserted.">Index au niveau duquel le nouvel élément a été inséré.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.AddRange(System.Windows.Forms.Design.Behavior.Adorner[])">
      <summary vsli:raw="Copies the elements of an array to the end of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">Copie les éléments d'un tableau à la fin de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <param name="value" vsli:raw="An array of type &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; to copy to the end of the collection.">Tableau de type <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> à copier à la fin de la collection</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.AddRange(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection)">
      <summary vsli:raw="Adds the contents of another &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; to the end of the collection.">Ajoute le contenu d'une autre <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> à la fin de la collection.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; to add to the end of the collection.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> à ajouter à la fin de la collection.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Contains(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; contains the specified &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt;.">Obtient une valeur indiquant si <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> contient le <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> spécifié.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; to locate.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> à rechercher.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; is contained in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> est contenu dans la collection ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.CopyTo(System.Windows.Forms.Design.Behavior.Adorner[],System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; values to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; at the specified index.">Copie les valeurs de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> vers une instance de <see cref="T:System.Array" /> unidimensionnelle, à l'index spécifié.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the values copied from &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">
        <see cref="T:System.Array" /> unidimensionnel qui est la destination des valeurs copiées à partir de la <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</param>
      <param name="index" vsli:raw="The index in &lt;paramref name=&quot;array&quot; /&gt; where copying begins.">L'index dans <paramref name="array" /> où commence la copie.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.&#xA;&#xA;-or-&#xA;&#xA;The number of elements in the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; is greater than the available space between &lt;paramref name=&quot;index&quot; /&gt; and the end of &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> est multidimensionnel.

- ou -

Le nombre d’éléments dans la <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> est supérieur à l’espace disponible entre <paramref name="index" /> et la fin de <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is less than the lower bound of &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="arrayIndex" /> est inférieur à la limite inférieure d’<paramref name="array" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that can iterate through the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; instance.">Retourne un énumérateur qui peut itérer au sein de l'instance <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; instance.">
        <see cref="T:System.Collections.IEnumerator" /> pour l'instance du <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.IndexOf(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary vsli:raw="Returns the index of an &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; in the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">Retourne l'index de <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> dans <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; to locate.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> à rechercher.</param>
      <returns vsli:raw="The index of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; of &lt;paramref name=&quot;value&quot; /&gt; in the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;, if found; otherwise, -1.">Index de <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> de <paramref name="value" /> dans <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />, s'il existe ; sinon, -1.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Insert(System.Int32,System.Windows.Forms.Design.Behavior.Adorner)">
      <summary vsli:raw="Inserts an &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; into the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; at the specified index.">Insère un objet <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> dans <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> à l'index spécifié.</summary>
      <param name="index" vsli:raw="The zero-based index where &lt;paramref name=&quot;value&quot; /&gt; should be inserted.">Index de base zéro au niveau où <paramref name="value" /> doit être insérée.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; to insert.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> à insérer.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Remove(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary vsli:raw="Removes a specific &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; from the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">Supprime un <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> spécifique de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; to remove from the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> à supprimer de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is not found in the collection.">
        <paramref name="value" /> est introuvable dans la collection.</exception>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">Obtient ou définit l'élément au niveau de l'index spécifié.</summary>
      <param name="index" vsli:raw="The zero-based index of the element.">Index de base zéro de l’élément.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; element specified by &lt;paramref name=&quot;index&quot; /&gt;.">Élément <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> spécifié par <paramref name="index" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator">
      <summary vsli:raw="Supports iteration over a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">Prend en charge l’itération sur <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.#ctor(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator" />.</summary>
      <param name="mappings" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; for which to create the enumerator.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> pour lequel créer l'énumérateur.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.MoveNext">
      <summary vsli:raw="Advances the enumerator to the next element of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">Avance l'énumérateur à l'élément suivant du <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the enumerator was successfully advanced to the next element; &lt;see langword=&quot;false&quot; /&gt; if the enumerator was past the end of the collection.">
        <see langword="true" /> si l'énumérateur a pu avancer jusqu'à l'élément suivant ; <see langword="false" /> si l'énumérateur a dépassé la fin de la collection.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.Reset">
      <summary vsli:raw="Sets the enumerator to its initial position, which is before the first element in the collection.">Rétablit l'énumérateur à sa position initiale, qui précède le premier élément de la collection.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.Current">
      <summary vsli:raw="Gets the current element in the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">Obtient l'élément en cours dans <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <returns vsli:raw="The current element in the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">Élément en cours de <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;P:System.Collections.IEnumerator.Current&quot; /&gt; property.">Pour obtenir une description de ce membre, consultez la propriété<see cref="P:System.Collections.IEnumerator.Current" />.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; in the collection.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> en cours dans la collection.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.ComponentGlyph">
      <summary vsli:raw="Associates a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; with its component.">Associe un <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> à son composant.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.#ctor(System.ComponentModel.IComponent)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ComponentGlyph&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.Behavior.ComponentGlyph" />.</summary>
      <param name="relatedComponent" vsli:raw="The component with which the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated.">Composant auquel est associé le <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.#ctor(System.ComponentModel.IComponent,System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ComponentGlyph&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.Behavior.ComponentGlyph" />.</summary>
      <param name="relatedComponent" vsli:raw="The component with which the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated.">Composant auquel est associé le <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="behavior" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; with which the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> auquel le <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> est associé.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.GetHitTest(System.Drawing.Point)">
      <summary vsli:raw="Indicates whether a mouse click at the specified point should be handled by the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ComponentGlyph&quot; /&gt;.">Indique si le <see cref="T:System.Windows.Forms.Design.Behavior.ComponentGlyph" /> doit gérer un clic de souris à l'emplacement spécifié.</summary>
      <param name="p" vsli:raw="A point to hit-test.">Point auquel appliquer un test de positionnement.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Cursor&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated with &lt;paramref name=&quot;p&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Cursor" /> si le <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> est associé au <paramref name="p" /> ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.Paint(System.Windows.Forms.PaintEventArgs)">
      <summary vsli:raw="Provides paint logic.">Fournit une logique de peinture.</summary>
      <param name="pe" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.PaintEventArgs&quot; /&gt; containing the &lt;see cref=&quot;P:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowGraphics&quot; /&gt; of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.PaintEventArgs" /> contenant le <see cref="P:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowGraphics" /> du <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.ComponentGlyph.RelatedComponent">
      <summary vsli:raw="Gets the component that is associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; .">Obtient le composant associé au <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.ComponentModel.IComponent" /> associé au <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph">
      <summary vsli:raw="Associates a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; with its control.">Associe un <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> à son contrôle.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.#ctor(System.Drawing.Rectangle,System.Windows.Forms.Cursor,System.ComponentModel.IComponent,System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" />.</summary>
      <param name="bounds" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; that represents the bounds of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Drawing.Rectangle" /> qui représente les limites du <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="cursor" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Cursor&quot; /&gt; that represents the cursor to display when the mouse pointer is over the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Cursor" /> qui représente le curseur à afficher quand le pointeur de la souris se trouve sur le <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="relatedComponent" vsli:raw="The component with which the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated.">Composant auquel est associé le <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="behavior" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; with which the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> auquel le <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> est associé.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.#ctor(System.Drawing.Rectangle,System.Windows.Forms.Cursor,System.ComponentModel.IComponent,System.Windows.Forms.Design.ControlDesigner)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" />.</summary>
      <param name="bounds" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; that represents the bounds of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Drawing.Rectangle" /> qui représente les limites du <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="cursor" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Cursor&quot; /&gt; that represents the cursor to display when the mouse pointer is over the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Cursor" /> qui représente le curseur à afficher quand le pointeur de la souris se trouve sur le <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="relatedComponent" vsli:raw="The component with which the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated.">Composant auquel est associé le <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="designer" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt; with which the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated.">
        <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> auquel le <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> est associé.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.GetHitTest(System.Drawing.Point)">
      <summary vsli:raw="Indicates whether a mouse click at the specified point should be handled by the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph&quot; /&gt;.">Indique si le <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> doit gérer un clic de souris à l'emplacement spécifié.</summary>
      <param name="p" vsli:raw="A point to hit test.">Point auquel appliquer un test de positionnement.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Cursor&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated with &lt;paramref name=&quot;p&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Cursor" /> si le <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> est associé au <paramref name="p" /> ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.Bounds">
      <summary vsli:raw="Gets the bounds of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Obtient les limites du <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; representing the bounds of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Drawing.Rectangle" /> représentant les limites du <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.Glyph">
      <summary vsli:raw="Represents a single user interface (UI) entity managed by an &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt;.">Représente une seule entité d'interface utilisateur gérée par <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.#ctor(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <param name="behavior" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;. Can be &lt;see langword=&quot;null&quot; /&gt;.">Objet <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> associé au <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />. Peut être <see langword="null" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.GetHitTest(System.Drawing.Point)">
      <summary vsli:raw="Provides hit test logic.">Fournit la logique de tests de positionnement.</summary>
      <param name="p" vsli:raw="A point to hit-test.">Point auquel appliquer un test de positionnement.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Cursor&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated with &lt;paramref name=&quot;p&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Cursor" /> si le <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> est associé au <paramref name="p" /> ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.Paint(System.Windows.Forms.PaintEventArgs)">
      <summary vsli:raw="Provides paint logic.">Fournit une logique de peinture.</summary>
      <param name="pe" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.PaintEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Windows.Forms.PaintEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.SetBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Changes the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Change le <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> associé au <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <param name="behavior" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; to associate with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> à associer au <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Glyph.Behavior">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Obtient l'objet <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> associé à l'objet <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if there is no behavior.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> associé au <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />, sinon <see langword="null" /> s'il n'y a aucun comportement.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Glyph.Bounds">
      <summary vsli:raw="Gets the bounds of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Obtient les limites du <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; representing the bounds of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">
        <see cref="T:System.Drawing.Rectangle" /> représentant les limites du <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.GlyphCollection">
      <summary vsli:raw="Stores &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects in a strongly typed collection.">Stocke des objets <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> dans une collection fortement typée.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.#ctor(System.Windows.Forms.Design.Behavior.Glyph[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; class with the given &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; array.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> avec le tableau <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> donné.</summary>
      <param name="value" vsli:raw="An array of type &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; to populate the collection.">Tableau de type <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> destiné à remplir la collection.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.#ctor(System.Windows.Forms.Design.Behavior.GlyphCollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; class based on another &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> basée sur un autre <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; to populate the collection.">
        <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> destiné à remplir la collection.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Add(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; with the specified value to the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;.">Ajoute un <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> ayant la valeur spécifiée au <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; to add to the end of the collection.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> à ajouter à la fin de la collection.</param>
      <returns vsli:raw="The index at which the new element was inserted.">Index au niveau duquel le nouvel élément a été inséré.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.AddRange(System.Windows.Forms.Design.Behavior.Glyph[])">
      <summary vsli:raw="Copies the elements of an array to the end of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;.">Copie les éléments d'un tableau à la fin de <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</summary>
      <param name="value" vsli:raw="An array of type &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; to copy to the end of the collection.">Tableau de type <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> à copier à la fin de la collection</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.AddRange(System.Windows.Forms.Design.Behavior.GlyphCollection)">
      <summary vsli:raw="Adds the contents of another &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; to the end of the collection.">Ajoute le contenu d'une autre <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> à la fin de la collection.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; to add to the end of the collection.">
        <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> à ajouter à la fin de la collection.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Contains(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; contains the specified &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Obtient une valeur indiquant si <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> contient le <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> spécifié.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; to locate.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> à rechercher.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is contained in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> est contenu dans la collection ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.CopyTo(System.Windows.Forms.Design.Behavior.Glyph[],System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; values to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; at the specified index.">Copie les valeurs de <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> vers une instance de <see cref="T:System.Array" /> unidimensionnelle, à l'index spécifié.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the values copied from &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;.">
        <see cref="T:System.Array" /> unidimensionnel qui est la destination des valeurs copiées à partir de la <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</param>
      <param name="index" vsli:raw="The index in &lt;paramref name=&quot;array&quot; /&gt; where copying begins.">L'index dans <paramref name="array" /> où commence la copie.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.IndexOf(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary vsli:raw="Returns the index of a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; in the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;.">Retourne l'index de <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> dans <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; to locate.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> à rechercher.</param>
      <returns vsli:raw="The index of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; of &lt;paramref name=&quot;value&quot; /&gt; in the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;, if found; otherwise, -1.">Index de <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> de <paramref name="value" /> dans <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />, s'il existe ; sinon, -1.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Insert(System.Int32,System.Windows.Forms.Design.Behavior.Glyph)">
      <summary vsli:raw="Inserts a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; into the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; at the specified index.">Insère un élément <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> dans <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> à l'index spécifié.</summary>
      <param name="index" vsli:raw="The zero-based index where &lt;paramref name=&quot;value&quot; /&gt; should be inserted.">Index de base zéro au niveau où <paramref name="value" /> doit être insérée.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; to insert.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> à insérer.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Remove(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary vsli:raw="Removes a specific &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; from the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;.">Supprime un <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> spécifique de <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; to remove from the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> à supprimer de <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.GlyphCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">Obtient ou définit l'élément au niveau de l'index spécifié.</summary>
      <param name="index" vsli:raw="The zero-based index of the element.">Index de base zéro de l’élément.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; element at the specified index.">Élément <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> à l'index spécifié.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType">
      <summary vsli:raw="Describes the designer selection state of a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Décrit l'état de sélection du concepteur d'un <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.GlyphSelectionType.NotSelected">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is not selected.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> n'est pas sélectionné.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.GlyphSelectionType.Selected">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is selected.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> est sélectionné.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.GlyphSelectionType.SelectedPrimary">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is the primary selection.">Le <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> constitue la sélection principale.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.SnapLine">
      <summary vsli:raw="Represents the horizontal and vertical line segments that are dynamically created in the user interface (UI) to assist in the design-time layout of controls in a container. This class cannot be inherited.">Représente les segments de ligne horizontaux et verticaux créés dynamiquement dans l’interface utilisateur pour faciliter la disposition des contrôles dans un conteneur au moment du design. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; class using the specified snapline type and offset.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> en utilisant le type et l'offset de ligne d'alignement (SnapLine) spécifiés.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLineType&quot; /&gt; to create. Describes the relative position and orientation of the snapline.">
        <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" /> à créer. Décrit la position et l'orientation relatives de la ligne d'alignement (SnapLine).</param>
      <param name="offset" vsli:raw="The position of the snapline, in pixels, relative to the upper-left origin of the owning control.">Position de la ligne d'alignement (SnapLine), en pixels, par rapport à l'origine supérieure gauche du contrôle propriétaire.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; class using the specified snapline type, offset, and filter name.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> en utilisant le type, l'offset et le nom de filtre de ligne d'alignement (SnapLine) spécifiés.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLineType&quot; /&gt; to create. Describes the relative position and orientation of the snapline.">
        <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" /> à créer. Décrit la position et l'orientation relatives de la ligne d'alignement (SnapLine).</param>
      <param name="offset" vsli:raw="The position of the snapline, in pixels, relative to the upper-left origin of the owning control.">Position de la ligne d'alignement (SnapLine), en pixels, par rapport à l'origine supérieure gauche du contrôle propriétaire.</param>
      <param name="filter" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; used to specify a programmer-defined category of snaplines.">
        <see cref="T:System.String" /> utilisé pour spécifier une catégorie de lignes d'alignement (SnapLines) définie par le programmeur.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.String,System.Windows.Forms.Design.Behavior.SnapLinePriority)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; class using the specified snapline type, offset, filter name, and priority.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> en utilisant le type, l'offset, le nom de filtre et la priorité de ligne d'alignement (SnapLine) spécifiés.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLineType&quot; /&gt; to create. Describes the relative position and orientation of the snapline.">
        <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" /> à créer. Décrit la position et l'orientation relatives de la ligne d'alignement (SnapLine).</param>
      <param name="offset" vsli:raw="The position of the snapline, in pixels, relative to the upper-left origin of the owning control.">Position de la ligne d'alignement (SnapLine), en pixels, par rapport à l'origine supérieure gauche du contrôle propriétaire.</param>
      <param name="filter" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; used to specify a programmer-defined category of snaplines.">
        <see cref="T:System.String" /> utilisé pour spécifier une catégorie de lignes d'alignement (SnapLines) définie par le programmeur.</param>
      <param name="priority" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLinePriority&quot; /&gt; of the snapline.">
        <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" /> de la ligne d'alignement (SnapLine).</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.Windows.Forms.Design.Behavior.SnapLinePriority)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; class using the specified snapline type, offset, and priority.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> en utilisant le type, l'offset et la priorité de ligne d'alignement (SnapLine) spécifiés.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLineType&quot; /&gt; to create. Describes the relative position and orientation of the snapline.">
        <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" /> à créer. Décrit la position et l'orientation relatives de la ligne d'alignement (SnapLine).</param>
      <param name="offset" vsli:raw="The position of the snapline, in pixels, relative to the upper-left origin of the owning control.">Position de la ligne d'alignement (SnapLine), en pixels, par rapport à l'origine supérieure gauche du contrôle propriétaire.</param>
      <param name="priority" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLinePriority&quot; /&gt; of the snapline.">
        <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" /> de la ligne d'alignement (SnapLine).</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.AdjustOffset(System.Int32)">
      <summary vsli:raw="Adjusts the &lt;see cref=&quot;P:System.Windows.Forms.Design.Behavior.SnapLine.Offset&quot; /&gt; property of the snapline.">Ajuste la propriété <see cref="P:System.Windows.Forms.Design.Behavior.SnapLine.Offset" /> de la ligne d'alignement (SnapLine).</summary>
      <param name="adjustment" vsli:raw="The number of pixels to change the snapline offset by.">Nombre de pixels correspondant à la modification de l'offset de ligne d'alignement (SnapLine).</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.ShouldSnap(System.Windows.Forms.Design.Behavior.SnapLine,System.Windows.Forms.Design.Behavior.SnapLine)">
      <summary vsli:raw="Returns a value indicating whether the specified &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; should snap to another &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt;.">Retourne une valeur qui indique si le <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> spécifié doit s'aligner sur un autre <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />.</summary>
      <param name="line1" vsli:raw="The specified &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> spécifié.</param>
      <param name="line2" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; to which the specified &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; is expected to snap.">
        <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> sur lequel le <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> spécifié est censé s'aligner.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;line1&quot; /&gt; should snap to &lt;paramref name=&quot;line2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="line1" /> doit s'aligner sur <paramref name="line2" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.ToString">
      <summary vsli:raw="Returns a string representation of the current snapline.">Retourne une représentation de type chaîne de la ligne d'alignement (SnapLine) actuelle.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the current &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt;.">
        <see cref="T:System.String" /> qui représente le <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> actuel.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.Filter">
      <summary vsli:raw="Gets the programmer-defined filter category associated with this snapline.">Obtient la catégorie de filtres définie par le programmeur associée à cette ligne d'alignement (SnapLine).</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that defines the filter category. The default is &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.String" /> qui définit la catégorie de filtre. La valeur par défaut est <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.IsHorizontal">
      <summary vsli:raw="Gets a value indicating whether the snapline has a horizontal orientation.">Obtient une valeur qui indique si la ligne d'alignement (SnapLine) présente une orientation horizontale.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the snapline is horizontal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la ligne d'alignement (SnapLine) est horizontale ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.IsVertical">
      <summary vsli:raw="Gets a value indicating whether the snapline has a vertical orientation.">Obtient une valeur qui indique si la ligne d'alignement (SnapLine) présente une orientation verticale.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the snapline is vertical; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la ligne d'alignement (SnapLine) est verticale ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.Offset">
      <summary vsli:raw="Gets the number of pixels that the snapline is offset from the origin of the associated control.">Obtient le nombre des pixels qui constitue l'offset de la ligne d'alignement (SnapLine) par rapport au point d'origine du contrôle associé.</summary>
      <returns vsli:raw="The offset, in pixels, of the snapline.">Offset de la ligne d'alignement (SnapLine) en pixels.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.Priority">
      <summary vsli:raw="Gets a value indicating the relative importance of the snapline.">Obtient une valeur qui indique l'importance relative de la ligne d'alignement.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLinePriority&quot; /&gt; that represents the priority category of a snapline.">
        <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" /> qui représente la catégorie de priorité d'une ligne d'alignement (SnapLine).</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.SnapLineType">
      <summary vsli:raw="Gets the type of a snapline, which indicates the general location and orientation.">Obtient le type d'une ligne d'alignement (SnapLine) qui indique l'emplacement et l'orientation généraux.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLineType&quot; /&gt; that represents the orientation and general location, relative to control edges, of a snapline.">
        <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" /> qui représente l'orientation et l'emplacement généraux d'une ligne d'alignement (SnapLine), en fonction des bords d'un contrôle.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.SnapLinePriority">
      <summary vsli:raw="Specifies the relative importance of a snapline.">Spécifie l'importance relative d'une ligne d'alignement (SnapLine).</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.Always">
      <summary vsli:raw="The priority category that is equivalent to the highest priority of all the current snaplines. Indicates that this category of snapline should always be active.">Catégorie de priorité équivalente à la priorité la plus élevée de toutes les lignes d'alignement (SnapLines) actuelles. Indique que cette catégorie de lignes d'alignement (SnapLines) doit toujours être active.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.High">
      <summary vsli:raw="The highest priority category.">Catégorie de priorité la plus élevée.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.Low">
      <summary vsli:raw="The lowest priority category.">Catégorie de priorité la plus basse.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.Medium">
      <summary vsli:raw="The middle priority category.">Catégorie de priorité moyenne.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.SnapLineType">
      <summary vsli:raw="Specifies the orientation and relative location of a snapline.">Spécifie l'orientation et l'emplacement relatif d'une ligne d'alignement (SnapLine).</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Baseline">
      <summary vsli:raw="A horizontal snapline typically associated with a primary internal feature of a control; for example, the base of the text string in a &lt;see cref=&quot;T:System.Windows.Forms.Label&quot; /&gt; control.">Une ligne d'alignement (SnapLine) horizontale est généralement associée à une fonctionnalité interne principale d'un contrôle ; par exemple, la base de la chaîne de texte dans un contrôle <see cref="T:System.Windows.Forms.Label" />.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Bottom">
      <summary vsli:raw="A horizontal snapline typically aligned to the bottom edge of a control.">Une ligne d'alignement (SnapLine) horizontale est généralement alignée sur le bord inférieur d'un contrôle.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Horizontal">
      <summary vsli:raw="A horizontal snapline typically not associated with an edge of a control.">Une ligne d'alignement (SnapLine) horizontale n'est généralement pas associée au bord d'un contrôle.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Left">
      <summary vsli:raw="A vertical snapline typically aligned to the left edge of a control.">Une ligne d'alignement (SnapLine) verticale est généralement alignée sur le bord gauche d'un contrôle.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Right">
      <summary vsli:raw="A vertical snapline typically aligned to the right edge of a control.">Une ligne d'alignement (SnapLine) verticale est généralement alignée sur le bord droit d'un contrôle.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Top">
      <summary vsli:raw="A horizontal snapline typically aligned to the top edge of a control.">Une ligne d'alignement (SnapLine) horizontale est généralement alignée sur le bord supérieur d'un contrôle.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Vertical">
      <summary vsli:raw="A vertical snapline typically not associated with an edge of a control.">Une ligne d'alignement (SnapLine) verticale n'est généralement pas associée au bord d'un contrôle.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.BorderSidesEditor">
      <summary vsli:raw="Provides an editor for setting the &lt;see cref=&quot;P:System.Windows.Forms.ToolStripStatusLabel.BorderSides&quot; /&gt; property.">Fournit un éditeur pour définir la propriété <see cref="P:System.Windows.Forms.ToolStripStatusLabel.BorderSides" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.BorderSidesEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.BorderSidesEditor&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.BorderSidesEditor" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.BorderSidesEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the given object value using the editor style provided by &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Windows.Forms.Design.BorderSidesEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)&quot;&gt;&lt;/xref&gt;.">Modifie la valeur de l'objet donné à l'aide du style d'éditeur fourni par <see cref="M:System.Windows.Forms.Design.BorderSidesEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; providing information about the control or component.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit des informations à propos du contrôle ou du composant.</param>
      <param name="provider" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.IServiceProvider&quot;&gt;&lt;/xref&gt; providing custom support to other objects.">
        <see cref="T:System.IServiceProvider" /> qui fournit une assistance personnalisée pour d'autres objets.</param>
      <param name="value" vsli:raw="The object value to edit.">Valeur de l'objet à modifier.</param>
      <returns vsli:raw="The edited object.">Objet modifié.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.BorderSidesEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Retrieves the editing style of the &lt;code data-dev-comment-type=&quot;langword&quot;&gt;EditValue&lt;/code&gt; method.">Récupère le style de modification de la méthode <see langword="EditValue" />.</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; providing information about the control or component.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit des informations à propos du contrôle ou du composant.</param>
      <returns vsli:raw="One of the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle&quot;&gt;&lt;/xref&gt; values. If the method is not supported, this method returns &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle.None&quot;&gt;&lt;/xref&gt;.">Une des valeurs de l'objet <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" />. Si la méthode n'est pas prise en charge, elle retourne <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ComponentActionsType">
      <summary vsli:raw="Designer action items that can be associated with a component.">Éléments d’action du concepteur qui peuvent être associés à un composant.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ComponentActionsType.All">
      <summary vsli:raw="Represents component and service type designer actions.">Représente les actions du concepteur de types de composants et de services.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ComponentActionsType.Component">
      <summary vsli:raw="Represents pull-model designer actions.">Représente les actions du concepteur de modèle d’extraction.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ComponentActionsType.Service">
      <summary vsli:raw="Represents push-model designer actions.">Représente les actions du concepteur de modèles d’envoi (push).</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ComponentDocumentDesigner">
      <summary vsli:raw="Base designer class for extending the design mode behavior of a root design document that supports nested components.">Classe de concepteur de base permettant d’étendre le comportement en mode design d’un document de design racine qui prend en charge les composants imbriqués.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ComponentDocumentDesigner&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.ComponentDocumentDesigner" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Windows.Forms.Design.ComponentDocumentDesigner&quot; /&gt; and optionally releases the managed resources.">Libère les ressources non managées utilisées par <see cref="T:System.Windows.Forms.Design.ComponentDocumentDesigner" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Gets a value indicating whether the specified tool is supported by the designer.">Obtient une valeur indiquant si l'outil spécifié est pris en charge par le concepteur.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to test for toolbox support.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> dont la prise en charge pour la boîte à outils est à vérifier.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the tool should be enabled on the toolbox; &lt;see langword=&quot;false&quot; /&gt; if the document designer doesn't know how to use the tool.">
        <see langword="true" /> si l'outil doit être activé dans la boîte à outils ; <see langword="false" /> si le Concepteur de documents n'est pas capable d'utiliser l'outil.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary vsli:raw="Initializes the designer with the specified component.">Initialise le concepteur avec le composant spécifié.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to associate with the designer.">
        <see cref="T:System.ComponentModel.IComponent" /> à associer au concepteur.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="Adjusts the set of properties the component will expose through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">Ajuste le jeu de propriétés exposées par le composant à l'aide de <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties" vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; that contains the properties for the class of the component.">
        <see cref="T:System.Collections.IDictionary" /> qui contient les propriétés de la classe du composant.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#IRootDesigner#GetView(System.ComponentModel.Design.ViewTechnology)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;T:System.ComponentModel.Design.ViewTechnology&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="T:System.ComponentModel.Design.ViewTechnology" />.</summary>
      <param name="technology" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ViewTechnology&quot; /&gt; that indicates a particular view technology.">
        <see cref="T:System.ComponentModel.Design.ViewTechnology" /> indiquant une technologie d'affichage particulière.</param>
      <returns vsli:raw="An object that represents the view for this designer.">Objet représentant l'affichage de ce concepteur.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />.</summary>
      <param name="component" vsli:raw="The component to filter the attributes of.">Composant dont les attributs doivent être filtrés.</param>
      <param name="attributes" vsli:raw="A dictionary of attributes that can be modified.">Dictionnaire d'attributs pouvant être modifiés.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the set of filtered attributes is to be cached; &lt;see langword=&quot;false&quot; /&gt; if the filter service must query again.">
        <see langword="true" /> si l'ensemble d'attributs filtrés doit être mis en cache ; <see langword="false" /> si le service de filtre doit interroger à nouveau.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />.</summary>
      <param name="component" vsli:raw="The component to filter events for.">Composant dont les événements doivent être filtrés.</param>
      <param name="events" vsli:raw="A dictionary of events that can be modified.">Dictionnaire d'événements pouvant être modifiés.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the set of filtered events is to be cached; &lt;see langword=&quot;false&quot; /&gt; if the filter service must query again.">
        <see langword="true" /> si l'ensemble d'événements filtrés doit être mis en cache ; <see langword="false" /> si le service de filtre doit interroger à nouveau.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />.</summary>
      <param name="component" vsli:raw="The component to filter properties for.">Composant dont les propriétés doivent être filtrées.</param>
      <param name="properties" vsli:raw="A dictionary of properties that can be modified.">Dictionnaire de propriétés pouvant être modifiées.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the set of filtered properties is to be cached; &lt;see langword=&quot;false&quot; /&gt; if the filter service must query again.">
        <see langword="true" /> si l'ensemble de propriétés filtrées doit être mis en cache ; <see langword="false" /> si le service de filtre doit interroger à nouveau.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#Drawing#Design#IToolboxUser#GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)" />.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to be tested for toolbox support.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> dont la prise en charge de la boîte à outils est à vérifier.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the tool is supported by the toolbox and can be enabled; &lt;see langword=&quot;false&quot; /&gt; if the document designer does not know how to use the tool.">
        <see langword="true" /> si l'outil est pris en charge par la boîte à outils et s'il peut être activé ; <see langword="false" /> si le Concepteur de documents n'est pas capable d'utiliser l'outil.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#Drawing#Design#IToolboxUser#ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)" />.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to select.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> à sélectionner.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.Control">
      <summary vsli:raw="Gets the control for the designer.">Obtient le contrôle pour le concepteur.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; the designer is editing.">
        <see cref="T:System.Windows.Forms.Control" /> en cours de modification par le concepteur.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#IRootDesigner#SupportedTechnologies">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies" />.</summary>
      <returns vsli:raw="An array of supported &lt;see cref=&quot;T:System.ComponentModel.Design.ViewTechnology&quot; /&gt; values.">Tableau des valeurs <see cref="T:System.ComponentModel.Design.ViewTechnology" /> prises en charge.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.TrayAutoArrange">
      <summary vsli:raw="Gets or sets a value indicating whether the component tray for the designer is in auto-arrange mode.">Obtient ou définit une valeur indiquant si la barre d'état des composants du concepteur est en mode de réorganisation automatique.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component tray for the designer is in auto-arrange mode; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la barre d'état des composants du concepteur est en mode de réorganisation automatique ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.TrayLargeIcon">
      <summary vsli:raw="Gets or sets a value indicating whether the component tray for the designer is in large icon mode.">Obtient ou définit une valeur indiquant si la barre d'état des composants du concepteur est en mode grande icône.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component tray for the designer is in large icon mode; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la barre d'état des composants du concepteur est en mode grande icône ; sinon <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ComponentTray">
      <summary vsli:raw="Provides behavior for the component tray of a designer.">Fournit le comportement pour la barre d'état des composants d'un concepteur.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.#ctor(System.ComponentModel.Design.IDesigner,System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ComponentTray&quot; /&gt; class using the specified designer and service provider.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.ComponentTray" /> avec le concepteur et le fournisseur de services spécifiés.</summary>
      <param name="mainDesigner" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesigner&quot; /&gt; that is the main or document designer for the current project.">
        <see cref="T:System.ComponentModel.Design.IDesigner" /> qui est le concepteur principal ou le Concepteur de documents pour le projet en cours.</param>
      <param name="serviceProvider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; that can be used to obtain design-time services.">
        <see cref="T:System.IServiceProvider" /> qui peut être utilisé pour obtenir des services de design.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.AddComponent(System.ComponentModel.IComponent)">
      <summary vsli:raw="Adds a component to the tray.">Ajoute un composant à la barre d'état.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to add to the tray.">
        <see cref="T:System.ComponentModel.IComponent" /> à ajouter à la barre d'état.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.CanCreateComponentFromTool(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Gets a value indicating whether the specified tool can be used to create a new component.">Obtient une valeur indiquant si l'outil spécifié peut être utilisé pour créer un nouveau composant.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to test.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> à tester.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified tool can be used to create a component; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'outil spécifié peut être utilisé pour créer un composant ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.CanDisplayComponent(System.ComponentModel.IComponent)">
      <summary vsli:raw="Gets a value indicating whether the specified component can be displayed.">Obtient une valeur indiquant si le composant spécifié peut être affiché.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to test.">
        <see cref="T:System.ComponentModel.IComponent" /> à tester.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component can be displayed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le composant peut être affiché ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.CreateComponentFromTool(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Creates a component from the specified toolbox item, adds the component to the current document, and displays a representation for the component in the component tray.">Crée un composant à partir de l'élément de boîte à outils spécifié, ajoute le composant au document actif, et affiche une représentation pour le composant dans la barre d'état des composants.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to create a component from.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> à partir duquel créer un composant.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.DisplayError(System.Exception)">
      <summary vsli:raw="Displays an error message to the user with information about the specified exception.">Affiche un message d'erreur pour l'utilisateur comprenant des informations sur l'exception spécifiée.</summary>
      <param name="e" vsli:raw="The exception about which to display information.">Exception sur laquelle afficher des informations.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Windows.Forms.Design.ComponentTray&quot; /&gt; and optionally releases the managed resources.">Libère les ressources non managées utilisées par <see cref="T:System.Windows.Forms.Design.ComponentTray" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetLocation(System.ComponentModel.IComponent)">
      <summary vsli:raw="Gets the location of the specified component, relative to the upper-left corner of the component tray.">Obtient l'emplacement du composant spécifié, par rapport au coin supérieur gauche de la barre d'état des composants.</summary>
      <param name="receiver" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to retrieve the location of.">
        <see cref="T:System.ComponentModel.IComponent" /> dont l'emplacement doit être récupéré.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; indicating the coordinates of the specified component, or an empty &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; if the specified component could not be found in the component tray. An empty &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; has an &lt;see cref=&quot;P:System.Drawing.Point.IsEmpty&quot; /&gt; property equal to &lt;see langword=&quot;true&quot; /&gt; and typically has &lt;see cref=&quot;P:System.Drawing.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Drawing.Point.Y&quot; /&gt; properties that are each equal to zero.">
        <see cref="T:System.Drawing.Point" /> indiquant les coordonnées du composant spécifié, ou un <see cref="T:System.Drawing.Point" /> vide si le composant spécifié est introuvable dans la barre d'état des composants. Un <see cref="T:System.Drawing.Point" /> vide a une propriété <see cref="P:System.Drawing.Point.IsEmpty" /> égale à <see langword="true" /> et a généralement des propriétés <see cref="P:System.Drawing.Point.X" /> et <see cref="P:System.Drawing.Point.Y" /> qui sont toutes deux égales à zéro.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetNextComponent(System.ComponentModel.IComponent,System.Boolean)">
      <summary vsli:raw="Similar to &lt;see cref=&quot;M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)&quot; /&gt;, this method returns the next component in the tray, given a starting component.">Semblable à <see cref="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)" />, cette méthode retourne le composant suivant dans la barre d'état, par rapport à un composant de départ.</summary>
      <param name="component" vsli:raw="The component from which to start enumerating.">Composant à partir duquel commencer l'énumération.</param>
      <param name="forward" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to enumerate forward through the list; otherwise, &lt;see langword=&quot;false&quot; /&gt; to enumerate backward.">
        <see langword="true" /> pour énumérer la liste vers l'avant ; sinon, <see langword="false" /> pour énumérer vers l'arrière.</param>
      <returns vsli:raw="The next component in the component tray, or &lt;see langword=&quot;null&quot; /&gt;, if the end of the list is encountered (or the beginning, if &lt;paramref name=&quot;forward&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;).">Le composant suivant dans la barre d'état des composants, ou <see langword="null" />, à la fin de la liste (ou au début, si <paramref name="forward" /> est <see langword="false" />).</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetService(System.Type)">
      <summary vsli:raw="Gets the requested service type.">Obtient le type du service demandé.</summary>
      <param name="serviceType" vsli:raw="The type of the service to retrieve.">Type de service à récupérer.</param>
      <returns vsli:raw="An instance of the requested service, or &lt;see langword=&quot;null&quot; /&gt; if the service could not be found.">Instance du service demandé, ou <see langword="null" /> si le service est introuvable.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetTrayLocation(System.ComponentModel.IComponent)">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Location&quot; /&gt; extender property.">Obtient la valeur de la propriété extendeur <see langword="Location" />.</summary>
      <param name="receiver" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; that receives the location extender property.">
        <see cref="T:System.ComponentModel.IComponent" /> qui reçoit la propriété extendeur d'emplacement.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; representing the location of &lt;paramref name=&quot;receiver&quot; /&gt;.">
        <see cref="T:System.Drawing.Point" /> représentant l'emplacement de <paramref name="receiver" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.IsTrayComponent(System.ComponentModel.IComponent)">
      <summary vsli:raw="Tests a component for presence in the component tray.">Teste un composant pour vérifier sa présence dans la barre d'état des composants.</summary>
      <param name="comp" vsli:raw="The component to test for presence in the component tray.">Composant à tester pour vérifier sa présence dans la barre d'état des composants.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;comp&quot; /&gt; is being shown on the tray; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="comp" /> est affiché dans la barre d'état  ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Called when an object that has been dragged is dropped on the component tray.">Appelé lorsqu'un objet qui a été glissé est déplacé sur la barre d'état des composants.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">
        <see cref="T:System.Windows.Forms.DragEventArgs" /> qui fournit des données pour l'événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Called when an object is dragged over, and has entered the area over, the component tray.">Appelé lorsqu'un objet est glissé sur et pénètre dans la zone de la barre d'état des composants.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">
        <see cref="T:System.Windows.Forms.DragEventArgs" /> qui fournit des données pour l'événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragLeave(System.EventArgs)">
      <summary vsli:raw="Called when an object is dragged out of the area over the component tray.">Appelé lorsqu'un objet est glissé hors de la zone de la barre d'état des composants.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that provides data for the event.">
        <see cref="T:System.EventArgs" /> qui fournit des données pour l'événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Called when an object is dragged over the component tray.">Appelé lorsqu'un objet est glissé sur la barre d'état des composants.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">
        <see cref="T:System.Windows.Forms.DragEventArgs" /> qui fournit des données pour l'événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary vsli:raw="Called during an OLE drag and drop operation to provide an opportunity for the component tray to give feedback to the user about the results of dropping the object at a specific point.">Appelé pendant une opération glisser-déplacer OLE pour permettre à la barre d'état des composants de transmettre des commentaires à l'utilisateur sur les résultats du déplacement de l'objet à un point spécifié.</summary>
      <param name="gfevent" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.GiveFeedbackEventArgs&quot; /&gt; that provides data for the event.">
        <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> qui fournit des données pour l'événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Windows.Forms.Control.Layout&quot; /&gt; event.">Déclenche l’événement <see cref="E:System.Windows.Forms.Control.Layout" />.</summary>
      <param name="levent" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.LayoutEventArgs&quot; /&gt; that contains the event data.">
        <see cref="T:System.Windows.Forms.LayoutEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnLostCapture">
      <summary vsli:raw="Called when a mouse drag selection operation is canceled.">Appelé lorsqu'une opération glisser avec la souris est annulée.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
      <summary vsli:raw="Called when the mouse is double clicked over the component tray.">Appelé lorsque l'utilisateur double-clique sur la barre d'état des composants.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that provides data for the event.">
        <see cref="T:System.EventArgs" /> qui fournit des données pour l'événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary vsli:raw="Called when the mouse button is pressed.">Appelé lors de l'appui sur le bouton droit de la souris.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.MouseEventArgs&quot; /&gt; that provides data for the event.">
        <see cref="T:System.Windows.Forms.MouseEventArgs" /> qui fournit des données pour l'événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary vsli:raw="Called when the mouse cursor position has changed.">Appelé lorsque la position du curseur de souris a changé.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.MouseEventArgs&quot; /&gt; that provides data for the event.">
        <see cref="T:System.Windows.Forms.MouseEventArgs" /> qui fournit des données pour l'événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary vsli:raw="Called when the mouse button has been released.">Appelé lorsque le bouton de souris a été relâché.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.MouseEventArgs&quot; /&gt; that provides data for the event.">
        <see cref="T:System.Windows.Forms.MouseEventArgs" /> qui fournit des données pour l'événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary vsli:raw="Called when the view for the component tray should be refreshed.">Appelé lorsque l'affichage de la barre d'état des composants doit être actualisé.</summary>
      <param name="pe" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.PaintEventArgs&quot; /&gt; that provides data for the event.">
        <see cref="T:System.Windows.Forms.PaintEventArgs" /> qui fournit des données pour l'événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnSetCursor">
      <summary vsli:raw="Called to set the mouse cursor.">Appelé pour définir le curseur de souris.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.RemoveComponent(System.ComponentModel.IComponent)">
      <summary vsli:raw="Removes the specified component from the tray.">Supprime le composant spécifié de la barre d'état.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to remove from the tray.">
        <see cref="T:System.ComponentModel.IComponent" /> à supprimer de la barre d'état.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.SetLocation(System.ComponentModel.IComponent,System.Drawing.Point)">
      <summary vsli:raw="Sets the location of the specified component to the specified location.">Définit l'emplacement du composant spécifié à l'emplacement spécifié.</summary>
      <param name="receiver" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to set the location of.">
        <see cref="T:System.ComponentModel.IComponent" /> dont l'emplacement doit être défini.</param>
      <param name="location" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; indicating the new location for the specified component.">
        <see cref="T:System.Drawing.Point" /> indiquant le nouvel emplacement du composant spécifié.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.SetTrayLocation(System.ComponentModel.IComponent,System.Drawing.Point)">
      <summary vsli:raw="Sets the value of the &lt;see langword=&quot;Location&quot; /&gt; extender property.">Obtient la valeur de la propriété extendeur <see langword="Location" />.</summary>
      <param name="receiver" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; that receives the location extender property.">
        <see cref="T:System.ComponentModel.IComponent" /> qui reçoit la propriété extendeur d'emplacement.</param>
      <param name="location" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; representing the location of &lt;paramref name=&quot;receiver&quot; /&gt;.">
        <see cref="T:System.Drawing.Point" /> représentant l'emplacement de <paramref name="receiver" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.System#ComponentModel#IExtenderProvider#CanExtend(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IExtenderProvider.CanExtend(System.Object)&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.ComponentModel.IExtenderProvider.CanExtend(System.Object)" />.</summary>
      <param name="extendee" vsli:raw="The object to receive the extender properties.">Objet qui doit recevoir les propriétés extendeur.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this object can provide extender properties to the specified object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si cet objet peut fournir des propriétés extendeur à l'objet spécifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.WndProc(System.Windows.Forms.Message@)">
      <summary vsli:raw="Processes Windows messages.">Traite les messages Windows.</summary>
      <param name="m" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Message&quot; /&gt; to process.">
        <see cref="T:System.Windows.Forms.Message" /> à traiter.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentTray.AutoArrange">
      <summary vsli:raw="Gets or sets a value indicating whether the tray items are automatically aligned.">Obtient ou définit une valeur indiquant si les éléments de la barre d'état des composants sont automatiquement alignés.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the tray items are automatically arranged; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les éléments de la barre d'état sont automatiquement agencés ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentTray.ComponentCount">
      <summary vsli:raw="Gets the number of components contained in the tray.">Obtient le nombre de composants contenus dans la barre d'état.</summary>
      <returns vsli:raw="The number of components in the tray.">Nombre de composants dans la barre d'état.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentTray.ShowLargeIcons">
      <summary vsli:raw="Gets or sets a value indicating whether the tray displays a large icon to represent each component in the tray.">Obtient ou définit une valeur indiquant si la barre d'état des composants affiche une grande icône pour représenter chaque composant dans la barre d'état.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if large icons are displayed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si des grandes icônes sont affichées ; sinon <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ControlDesigner">
      <summary vsli:raw="Extends the design mode behavior of a &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt;.">Étend le comportement en mode design de <see cref="T:System.Windows.Forms.Control" />.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ControlDesigner.accessibilityObj">
      <summary vsli:raw="Specifies the accessibility object for the designer.">Spécifie l'objet d'accessibilité pour le concepteur.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ControlDesigner.InvalidPoint">
      <summary vsli:raw="Defines a local &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; that represents the values of an invalid &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt;.">Définit un objet <see cref="T:System.Drawing.Point" /> local qui représente les valeurs d'un objet <see cref="T:System.Drawing.Point" /> non valide.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.BaseWndProc(System.Windows.Forms.Message@)">
      <summary vsli:raw="Processes Windows messages.">Traite les messages Windows.</summary>
      <param name="m" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Message&quot; /&gt; to process.">
        <see cref="T:System.Windows.Forms.Message" /> à traiter.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.CanBeParentedTo(System.ComponentModel.Design.IDesigner)">
      <summary vsli:raw="Indicates if this designer's control can be parented by the control of the specified designer.">Indique si le contrôle de ce concepteur peut être apparenté au contrôle du concepteur spécifié.</summary>
      <param name="parentDesigner" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesigner&quot; /&gt; that manages the control to check.">
        <see cref="T:System.ComponentModel.Design.IDesigner" /> qui gère le contrôle à vérifier.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the control managed by the specified designer can parent the control managed by this designer; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le contrôle géré par le concepteur spécifié peut être apparenté au contrôle géré par ce concepteur, sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.DefWndProc(System.Windows.Forms.Message@)">
      <summary vsli:raw="Provides default processing for Windows messages.">Fournit le traitement par défaut pour les messages Windows.</summary>
      <param name="m" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Message&quot; /&gt; to process.">
        <see cref="T:System.Windows.Forms.Message" /> à traiter.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.DisplayError(System.Exception)">
      <summary vsli:raw="Displays information about the specified exception to the user.">Affiche des informations sur l'exception spécifiée pour l'utilisateur.</summary>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; to display.">
        <see cref="T:System.Exception" /> à afficher.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt; and optionally releases the managed resources.">Libère les ressources non managées utilisées par <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.EnableDesignMode(System.Windows.Forms.Control,System.String)">
      <summary vsli:raw="Enables design time functionality for a child control.">Active les fonctionnalités de design pour un contrôle enfant.</summary>
      <param name="child" vsli:raw="The child control for which design mode will be enabled.">Le contrôle enfant pour lequel le mode Design sera activé.</param>
      <param name="name" vsli:raw="The name of &lt;paramref name=&quot;child&quot; /&gt; as exposed to the end user.">Le nom de <paramref name="child" /> tel qu'il est exposé à l'utilisateur final.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;child&quot; /&gt; or &lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="child" /> ou <paramref name="name" /> est <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the child control could be enabled for design time; &lt;see langword=&quot;false&quot; /&gt; if the hosting infrastructure does not support it.">
        <see langword="true" /> si le contrôle enfant a pu être activé pour le design ; <see langword="false" /> si l'infrastructure d'hébergement ne le prend pas en charge.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.EnableDragDrop(System.Boolean)">
      <summary vsli:raw="Enables or disables drag-and-drop support for the control being designed.">Active ou désactive la prise en charge de la fonctionnalité glisser-déplacer pour le contrôle en cours de création.</summary>
      <param name="value" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to enable drag-and-drop support for the control; &lt;see langword=&quot;false&quot; /&gt; if the control should not have drag-and-drop support. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour activer la prise en charge de la fonctionnalité glisser-déplacer pour le contrôle ; <see langword="false" /> si le contrôle ne doit pas prendre en charge la fonctionnalité glisser-déplacer. La valeur par défaut est <see langword="false" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.GetControlGlyph(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph&quot; /&gt; representing the bounds of this control.">Retourne un <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> représentant les limites de ce contrôle.</summary>
      <param name="selectionType" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphSelectionType&quot; /&gt; value that specifies the selection state.">Valeur <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> qui spécifie l'état de sélection.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph&quot; /&gt; representing the bounds of this control.">
        <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> représentant les limites de ce contrôle.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary vsli:raw="Gets a collection of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects representing the selection borders and grab handles for a standard control.">Obtient une collection d'objets <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> qui représentent les bordures de sélection et les poignées de manipulation d'un contrôle standard.</summary>
      <param name="selectionType" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphSelectionType&quot; /&gt; value that specifies the selection state.">Valeur <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> qui spécifie l'état de sélection.</param>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects.">Collection d'objets <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.GetHitTest(System.Drawing.Point)">
      <summary vsli:raw="Indicates whether a mouse click at the specified point should be handled by the control.">Indique si le contrôle doit gérer un clic de souris à un emplacement spécifié.</summary>
      <param name="point" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; indicating the position at which the mouse was clicked, in screen coordinates.">
        <see cref="T:System.Drawing.Point" /> qui indique l'emplacement où un clic de souris a été effectué, en coordonnées d'écran.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a click at the specified point is to be handled by the control; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le contrôle doit gérer un clic à un emplacement spécifié ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.HookChildControls(System.Windows.Forms.Control)">
      <summary vsli:raw="Routes messages from the child controls of the specified control to the designer.">Achemine les messages à partir des contrôles enfants du contrôle spécifié vers le concepteur.</summary>
      <param name="firstChild" vsli:raw="The first child &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; to process. This method may recursively call itself for children of the control.">Premier <see cref="T:System.Windows.Forms.Control" /> enfant à traiter. Cette méthode peut s'appeler elle-même de manière récursive pour les enfants du contrôle.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary vsli:raw="Initializes the designer with the specified component.">Initialise le concepteur avec le composant spécifié.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to associate the designer with. This component must always be an instance of, or derive from, &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt;.">
        <see cref="T:System.ComponentModel.IComponent" /> à associer au concepteur. Ce composant doit toujours être une instance de <see cref="T:System.Windows.Forms.Control" />, ou en dériver.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.InitializeExistingComponent(System.Collections.IDictionary)">
      <summary vsli:raw="Re-initializes an existing component.">Réinitialise un composant existant.</summary>
      <param name="defaultValues" vsli:raw="A name/value dictionary of default values to apply to properties. May be &lt;see langword=&quot;null&quot; /&gt; if no default values are specified.">Dictionnaire de noms/valeurs de valeurs par défaut à appliquer aux propriétés. Peut avoir la valeur <see langword="null" /> si aucune valeur par défaut n’est spécifiée.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <summary vsli:raw="Initializes a newly created component.">Initialise un composant nouvellement créé.</summary>
      <param name="defaultValues" vsli:raw="A name/value dictionary of default values to apply to properties. May be &lt;see langword=&quot;null&quot; /&gt; if no default values are specified.">Dictionnaire de noms/valeurs de valeurs par défaut à appliquer aux propriétés. Peut avoir la valeur <see langword="null" /> si aucune valeur par défaut n’est spécifiée.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.InternalControlDesigner(System.Int32)">
      <summary vsli:raw="Returns the internal control designer with the specified index in the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt;.">Retourne le Concepteur de contrôles internes avec l'index spécifié dans <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</summary>
      <param name="internalControlIndex" vsli:raw="A specified index to select the internal control designer. This index is zero-based.">Index spécifié pour sélectionner le Concepteur de contrôles internes. Cet index est en base zéro.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt; at the specified index.">
        <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> à l'index spécifié.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.NumberOfInternalControlDesigners">
      <summary vsli:raw="Returns the number of internal control designers in the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt;.">Retourne le nombre de Concepteurs de contrôles internes dans <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</summary>
      <returns vsli:raw="The number of internal control designers in the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt;.">Nombre de Concepteurs de contrôles internes dans <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnContextMenu(System.Int32,System.Int32)">
      <summary vsli:raw="Shows the context menu and provides an opportunity to perform additional processing when the context menu is about to be displayed.">Affiche le menu contextuel et fournit une possibilité de traitement supplémentaire lorsque le menu contextuel est sur le point d'être affiché.</summary>
      <param name="x" vsli:raw="The x coordinate at which to display the context menu.">Coordonnée x à laquelle le menu contextuel doit être affiché.</param>
      <param name="y" vsli:raw="The y coordinate at which to display the context menu.">Coordonnée y à laquelle le menu contextuel doit être affiché.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnCreateHandle">
      <summary vsli:raw="Provides an opportunity to perform additional processing immediately after the control handle has been created.">Fournit une possibilité de traitement supplémentaire immédiatement après la création du handle du contrôle.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragComplete(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Receives a call to clean up a drag-and-drop operation.">Reçoit un appel pour nettoyer une opération glisser-déplacer.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">
        <see cref="T:System.Windows.Forms.DragEventArgs" /> qui fournit des données pour l'événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Receives a call when a drag-and-drop object is dropped onto the control designer view.">Reçoit un appel lorsqu'un objet glissé est déplacé sur la vue de Concepteur de contrôles.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">
        <see cref="T:System.Windows.Forms.DragEventArgs" /> qui fournit des données pour l'événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Receives a call when a drag-and-drop operation enters the control designer view.">Reçoit un appel lorsqu'une opération glisser-déplacer entre dans la vue de Concepteur de contrôles.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">
        <see cref="T:System.Windows.Forms.DragEventArgs" /> qui fournit des données pour l'événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragLeave(System.EventArgs)">
      <summary vsli:raw="Receives a call when a drag-and-drop operation leaves the control designer view.">Reçoit un appel lorsqu'une opération glisser-déplacer quitte la vue de Concepteur de contrôles.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that provides data for the event.">
        <see cref="T:System.EventArgs" /> qui fournit des données pour l'événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Receives a call when a drag-and-drop object is dragged over the control designer view.">Reçoit un appel lorsqu'un objet glissé est déplacé au-dessus de la vue de Concepteur de contrôles.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">
        <see cref="T:System.Windows.Forms.DragEventArgs" /> qui fournit des données pour l'événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary vsli:raw="Receives a call when a drag-and-drop operation is in progress to provide visual cues based on the location of the mouse while a drag operation is in progress.">Reçoit un appel durant une opération glisser-déplacer pour fournir des indications visuelles en fonction de la position du curseur de la souris tandis que l'opération glisser est en cours.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.GiveFeedbackEventArgs&quot; /&gt; that provides data for the event.">
        <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> qui fournit des données pour l'événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragBegin(System.Int32,System.Int32)">
      <summary vsli:raw="Receives a call in response to the left mouse button being pressed and held while over the component.">Reçoit un appel lorsque le bouton gauche de la souris est maintenu enfoncé au-dessus du composant.</summary>
      <param name="x" vsli:raw="The x position of the mouse in screen coordinates.">Coordonnée x, en coordonnées d'écran, du pointeur de la souris.</param>
      <param name="y" vsli:raw="The y position of the mouse in screen coordinates.">Coordonnée y, en coordonnées d'écran, du pointeur de la souris.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragEnd(System.Boolean)">
      <summary vsli:raw="Receives a call at the end of a drag-and-drop operation to complete or cancel the operation.">Reçoit un appel à la fin d'une opération glisser-déplacer pour terminer ou annuler l'opération.</summary>
      <param name="cancel" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to cancel the drag; &lt;see langword=&quot;false&quot; /&gt; to commit it.">
        <see langword="true" /> pour annuler l'opération glisser ; <see langword="false" /> pour la valider.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragMove(System.Int32,System.Int32)">
      <summary vsli:raw="Receives a call for each movement of the mouse during a drag-and-drop operation.">Reçoit un appel pour chaque mouvement de la souris pendant une opération glisser-déplacer.</summary>
      <param name="x" vsli:raw="The x position of the mouse in screen coordinates.">Coordonnée x, en coordonnées d'écran, du pointeur de la souris.</param>
      <param name="y" vsli:raw="The y position of the mouse in screen coordinates.">Coordonnée y, en coordonnées d'écran, du pointeur de la souris.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseEnter">
      <summary vsli:raw="Receives a call when the mouse first enters the control.">Reçoit un appel lorsque la souris entre initialement dans le contrôle.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseHover">
      <summary vsli:raw="Receives a call after the mouse hovers over the control.">Reçoit un appel après que la souris pointe sur le contrôle.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseLeave">
      <summary vsli:raw="Receives a call when the mouse first enters the control.">Reçoit un appel lorsque la souris entre initialement dans le contrôle.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnPaintAdornments(System.Windows.Forms.PaintEventArgs)">
      <summary vsli:raw="Receives a call when the control that the designer is managing has painted its surface so the designer can paint any additional adornments on top of the control.">Reçoit un appel lorsque le contrôle que le concepteur manage a peint sa surface de sorte que le concepteur puisse peindre d'autres motifs par-dessus le contrôle.</summary>
      <param name="pe" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.PaintEventArgs&quot; /&gt; the designer can use to draw on the control.">
        <see cref="T:System.Windows.Forms.PaintEventArgs" /> que le concepteur peut utiliser pour dessiner sur le contrôle.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnSetComponentDefaults">
      <summary vsli:raw="Called when the designer is initialized.">Appelée quand le concepteur est initialisé.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnSetCursor">
      <summary vsli:raw="Receives a call each time the cursor needs to be set.">Reçoit un appel chaque fois que le curseur doit être défini.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="Adjusts the set of properties the component exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">Ajuste le jeu de propriétés exposées par le composant à l'aide de <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties" vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; containing the properties for the class of the component.">
        <see cref="T:System.Collections.IDictionary" /> contenant les propriétés de la classe de composant.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.UnhookChildControls(System.Windows.Forms.Control)">
      <summary vsli:raw="Routes messages for the children of the specified control to each control rather than to a parent designer.">Achemine les messages pour les enfants du contrôle spécifié vers chaque contrôle plutôt que vers un concepteur parent.</summary>
      <param name="firstChild" vsli:raw="The first child &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; to process. This method may recursively call itself for children of the control.">Premier <see cref="T:System.Windows.Forms.Control" /> enfant à traiter. Cette méthode peut s'appeler elle-même de manière récursive pour les enfants du contrôle.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary vsli:raw="Processes Windows messages and optionally routes them to the control.">Traite les messages Windows et les achemine éventuellement vers le contrôle.</summary>
      <param name="m" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Message&quot; /&gt; to process.">
        <see cref="T:System.Windows.Forms.Message" /> à traiter.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.AccessibilityObject">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; assigned to the control.">Obtient le <see cref="T:System.Windows.Forms.AccessibleObject" /> assigné au contrôle.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; assigned to the control.">
        <see cref="T:System.Windows.Forms.AccessibleObject" /> assigné au contrôle.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.AssociatedComponents">
      <summary vsli:raw="Gets the collection of components associated with the component managed by the designer.">Obtient la collection de composants associés au composant géré par le concepteur.</summary>
      <returns vsli:raw="The components that are associated with the component managed by the designer.">Composants associés au composant géré par le concepteur.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.AutoResizeHandles">
      <summary vsli:raw="Gets or sets a value indicating whether resize handle allocation depends on the value of the &lt;see cref=&quot;P:System.Windows.Forms.Control.AutoSize&quot; /&gt; property.">Obtient ou définit une valeur indiquant si l'allocation de poignée de redimensionnement dépend de la valeur de la propriété <see cref="P:System.Windows.Forms.Control.AutoSize" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if resize handle allocation depends on the value of the &lt;see cref=&quot;P:System.Windows.Forms.Control.AutoSize&quot; /&gt; and &lt;see langword=&quot;AutoSizeMode&quot; /&gt; properties; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'allocation de poignée de redimensionnement dépend de la valeur des propriétés <see cref="P:System.Windows.Forms.Control.AutoSize" /> et <see langword="AutoSizeMode" /> ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.BehaviorService">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; from the design environment.">Obtient le <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> de l'environnement de design.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if the service is unavailable.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> ou <see langword="null" /> si le service n'est pas disponible.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.Control">
      <summary vsli:raw="Gets the control that the designer is designing.">Obtient le contrôle qui est créé par le concepteur.</summary>
      <returns vsli:raw="The control that the designer is designing.">Contrôle qui est créé par le concepteur.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.EnableDragRect">
      <summary vsli:raw="Gets a value indicating whether drag rectangles can be drawn on this designer component.">Obtient une valeur indiquant si des rectangles de déplacement peuvent être dessinés sur ce composant de concepteur.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if drag rectangles can be drawn; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si des rectangles de déplacement peuvent être dessinés sur le composant de concepteur ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.InheritanceAttribute">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.ComponentModel.InheritanceAttribute&quot; /&gt; of the designer.">Obtient le <see cref="T:System.ComponentModel.InheritanceAttribute" /> du concepteur.</summary>
      <returns vsli:raw="&lt;see cref=&quot;F:System.ComponentModel.InheritanceAttribute.Inherited&quot; /&gt; if the designer is a root designer; otherwise, the value of the parent designer's &lt;see cref=&quot;P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute&quot; /&gt; property.">
        <see cref="F:System.ComponentModel.InheritanceAttribute.Inherited" /> si le concepteur est un concepteur racine ; sinon, la valeur de la propriété <see cref="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute" /> du concepteur parent.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ParentComponent">
      <summary vsli:raw="Gets the parent component for the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt;.">Obtient le composant parent de <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</summary>
      <returns vsli:raw="The parent component for the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt; if there is no parent component.">Composant parent de <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> ; sinon, <see langword="null" /> s'il n'y a aucun composant parent.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ParticipatesWithSnapLines">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt; will allow snapline alignment during a drag operation.">Obtient une valeur indiquant si le <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> doit autoriser l'alignement sur les lignes d'alignement (SnapLines) pendant une opération glisser.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt; will allow snapline alignment during a drag operation when the primary drag control is over this designer; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> doit autoriser l'alignement sur les lignes d'alignement (SnapLines) pendant une opération glisser lorsque le contrôle de glissement principal se trouve sur ce concepteur ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.SelectionRules">
      <summary vsli:raw="Gets the selection rules that indicate the movement capabilities of a component.">Obtient les règles de sélection qui indiquent les possibilités de mouvement d'un composant.</summary>
      <returns vsli:raw="A bitwise combination of &lt;see cref=&quot;T:System.Windows.Forms.Design.SelectionRules&quot; /&gt; values.">Combinaison de bits de valeurs <see cref="T:System.Windows.Forms.Design.SelectionRules" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.SnapLines">
      <summary vsli:raw="Gets a list of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; objects representing significant alignment points for this control.">Obtient une liste d'objets <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> qui représentent des points d'alignement significatifs pour ce contrôle.</summary>
      <returns vsli:raw="A list of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; objects representing significant alignment points for this control.">Liste d'objets <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> qui représentent des points d'alignement significatifs pour ce contrôle.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject">
      <summary vsli:raw="Provides an &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; for &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt;.">Fournit <see cref="T:System.Windows.Forms.AccessibleObject" /> pour <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.#ctor(System.Windows.Forms.Design.ControlDesigner,System.Windows.Forms.Control)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject&quot; /&gt; class using the specified designer and control.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject" /> en utilisant le concepteur et le contrôle spécifiés.</summary>
      <param name="designer" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt; for the accessible object.">
        <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> pour l'objet accessible.</param>
      <param name="control" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; for the accessible object.">
        <see cref="T:System.Windows.Forms.Control" /> pour l'objet accessible.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetChild(System.Int32)">
      <summary vsli:raw="Retrieves the accessible child corresponding to the specified index.">Récupère l’enfant accessible correspondant à l’index spécifié.</summary>
      <param name="index" vsli:raw="The zero-based index of the accessible child.">Index de base zéro de l’enfant accessible.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; that represents the accessible child corresponding to the specified index.">
        <see cref="T:System.Windows.Forms.AccessibleObject" /> qui représente l'enfant accessible correspondant à l'index spécifié.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetChildCount">
      <summary vsli:raw="Retrieves the number of children belonging to an accessible object.">Récupère le nombre d’enfants qui appartiennent à un objet accessible.</summary>
      <returns vsli:raw="The number of children belonging to an accessible object.">Nombre d’enfants qui appartiennent à un objet accessible.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetFocused">
      <summary vsli:raw="Retrieves the object that has the keyboard focus.">Récupère l'objet qui a le focus clavier.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; that specifies the currently focused child. This method returns the calling object if the object itself is focused. Returns &lt;see langword=&quot;null&quot; /&gt; if no object has focus.">
        <see cref="T:System.Windows.Forms.AccessibleObject" /> qui spécifie l'enfant ayant actuellement le focus. Cette méthode retourne l'objet appelant si l'objet lui-même a le focus. Retourne <see langword="null" /> si aucun objet n'a le focus.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetSelected">
      <summary vsli:raw="Retrieves the currently selected child.">Récupère l'enfant actuellement sélectionné.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; that represents the currently selected child. This method returns the calling object if the object itself is selected. Returns &lt;see langword=&quot;null&quot; /&gt; if is no child is currently selected and the object itself does not have focus.">
        <see cref="T:System.Windows.Forms.AccessibleObject" /> qui représente l'enfant actuellement sélectionné. Cette méthode retourne l'objet appelant si l'objet lui-même est sélectionné. Retourne <see langword="null" /> si aucun enfant n'est actuellement sélectionné et que l'objet lui-même n'a pas le focus.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.HitTest(System.Int32,System.Int32)">
      <summary vsli:raw="Retrieves the child object at the specified screen coordinates.">Récupère l'objet enfant qui est situé aux coordonnées d'écran spécifiées.</summary>
      <param name="x" vsli:raw="The horizontal screen coordinate.">Coordonnée d'écran horizontale.</param>
      <param name="y" vsli:raw="The vertical screen coordinate.">Coordonnée d'écran verticale.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; that represents the child object at the given screen coordinates. This method returns the calling object if the object itself is at the location specified. Returns &lt;see langword=&quot;null&quot; /&gt; if no object is at the tested location.">
        <see cref="T:System.Windows.Forms.AccessibleObject" /> qui représente l’objet enfant situé aux coordonnées d’écran spécifiées. Cette méthode retourne l'objet appelant si l'objet lui-même est à l'emplacement spécifié. Retourne <see langword="null" /> si aucun objet ne se trouve à l’emplacement testé.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Bounds">
      <summary vsli:raw="Gets the points that define the boundaries of the accessible object for the designer.">Obtient les points qui définissent les limites de l'objet accessible pour le concepteur.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; that indicates the boundaries of the accessible object for the designer.">
        <see cref="T:System.Drawing.Rectangle" /> indiquant les limites de l'objet accessible pour le concepteur.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.DefaultAction">
      <summary vsli:raw="Gets a string that describes the default action of the specified object.">Obtient une chaîne qui décrit l'action par défaut de l'objet spécifié.</summary>
      <returns vsli:raw="A description of the default action for a specified object.">Description de l'action par défaut d'un objet spécifié.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Description">
      <summary vsli:raw="Gets a string that describes the visual appearance of the specified object.">Obtient une chaîne qui décrit l'apparence visuelle de l'objet spécifié.</summary>
      <returns vsli:raw="A description of the object's visual appearance to the user, or &lt;see langword=&quot;null&quot; /&gt; if the object does not have a description.">Description de l'apparence visuelle de l'objet pour l'utilisateur, ou <see langword="null" /> si l'objet n'a pas de description.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Name">
      <summary vsli:raw="Gets or sets the object name.">Obtient ou définit le nom de l'objet.</summary>
      <returns vsli:raw="The object name, or &lt;see langword=&quot;null&quot; /&gt; if the property has not been set.">Nom de l'objet, ou <see langword="null" /> si la propriété n'a pas été définie.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Parent">
      <summary vsli:raw="Gets the parent of an accessible object.">Obtient le parent d'un objet accessible.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; that represents the parent of an accessible object, or &lt;see langword=&quot;null&quot; /&gt; if there is no parent object.">
        <see cref="T:System.Windows.Forms.AccessibleObject" /> qui représente le parent d’un objet accessible, ou <see langword="null" /> s’il n’existe pas d’objet parent.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Role">
      <summary vsli:raw="Gets the role of this accessible object.">Obtient le rôle de l'objet accessible.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Windows.Forms.AccessibleRole&quot; /&gt; values, or &lt;see cref=&quot;F:System.Windows.Forms.AccessibleRole.None&quot; /&gt; if no role has been specified.">Une des valeurs <see cref="T:System.Windows.Forms.AccessibleRole" />, ou <see cref="F:System.Windows.Forms.AccessibleRole.None" /> si aucun rôle n'a été spécifié.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.State">
      <summary vsli:raw="Gets the state of this accessible object.">Obtient l'état de l'objet accessible.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Windows.Forms.AccessibleStates&quot; /&gt; values, or &lt;see cref=&quot;F:System.Windows.Forms.AccessibleStates.None&quot; /&gt;, if no state has been set.">Une des valeurs <see cref="T:System.Windows.Forms.AccessibleStates" />, ou <see cref="F:System.Windows.Forms.AccessibleStates.None" /> si aucun état n'a été défini.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Value">
      <summary vsli:raw="Gets or sets the value of an accessible object.">Obtient ou définit la valeur d'un objet accessible.</summary>
      <returns vsli:raw="The value of an accessible object, or &lt;see langword=&quot;null&quot; /&gt; if the object has no value set.">Valeur d’un objet accessible, ou <see langword="null" /> si aucune valeur n’est définie pour l’objet.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.DesignerOptions">
      <summary vsli:raw="Provides access to get and set option values for a designer.">Permet d'obtenir et de définir les valeurs des options d'un concepteur.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DesignerOptions.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.DesignerOptions&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.DesignerOptions" />.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.EnableInSituEditing">
      <summary vsli:raw="Gets or sets a value that enables or disables in-place editing for &lt;see cref=&quot;T:System.Windows.Forms.ToolStrip&quot; /&gt; controls.">Obtient ou définit une valeur qui active ou désactive l'édition sur place pour les contrôles <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if in-place editing for &lt;see cref=&quot;T:System.Windows.Forms.ToolStrip&quot; /&gt; controls is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si l'édition sur place pour les contrôles <see cref="T:System.Windows.Forms.ToolStrip" /> est activée ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.GridSize">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Drawing.Size&quot; /&gt; representing the dimensions of a grid unit.">Obtient ou définit une valeur <see cref="T:System.Drawing.Size" /> représentant les dimensions d'une unité de grille.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Size&quot; /&gt; representing the dimensions of a grid unit.">
        <see cref="T:System.Drawing.Size" /> représentant les dimensions d'une unité de grille.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.ObjectBoundSmartTagAutoShow">
      <summary vsli:raw="Gets or sets a value that specifies whether a designer shows a component's smart tag panel automatically on creation.">Obtient ou définit une valeur qui spécifie si un concepteur affiche automatiquement le panneau des balises actives d'un composant au moment de sa création.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to allow a component's smart tag panel to open automatically upon creation; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> pour permettre au panneau des balises actives d'un composant de s'ouvrir automatiquement au moment de la création ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.ShowGrid">
      <summary vsli:raw="Gets or sets a value that enables or disables the grid in the designer.">Obtient ou définit une valeur qui active ou désactive la grille dans le concepteur.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the grid is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si la grille est activée ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.SnapToGrid">
      <summary vsli:raw="Gets or sets a value that enables or disables whether controls are automatically placed at grid coordinates.">Obtient ou définit une valeur qui active ou désactive si les contrôles sont placés automatiquement à des coordonnées de grille.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if snapping is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'alignement est activé ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.UseOptimizedCodeGeneration">
      <summary vsli:raw="Gets or sets a value that enables or disables the component cache.">Obtient ou définit une valeur qui active ou désactive le cache du composant.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component cache is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si le cache du composant est activé ; sinon <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.UseSmartTags">
      <summary vsli:raw="Gets or sets a value that enables or disables smart tags in the designer.">Obtient ou définit une valeur qui active ou désactive les balises actives dans le concepteur.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if smart tags in the designer are enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les balises actives du concepteur sont activées ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.UseSnapLines">
      <summary vsli:raw="Gets or sets a value that enables or disables snaplines in the designer.">Obtient ou définit une valeur qui active ou désactive les lignes d’alignement dans le concepteur.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if snaplines in the designer are enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si les lignes d’alignement dans le concepteur sont activées ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.DockEditor">
      <summary vsli:raw="Provides a user interface for specifying a &lt;see cref=&quot;P:System.Windows.Forms.Control.Dock&quot; /&gt; property.">Fournit une interface utilisateur permettant de spécifier une propriété <see cref="P:System.Windows.Forms.Control.Dock" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DockEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.DockEditor&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.DockEditor" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DockEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the specified object value using the editor style provided by GetEditorStyle. A service provider is provided so that any required editing services can be obtained.">Modifie la valeur de l'objet spécifié avec le style de l'éditeur fourni par GetEditorStyle. Un fournisseur de services est prévu pour que tous les services d"édition requis puissent être obtenus.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <param name="provider" vsli:raw="A service provider object through which editing services may be obtained.">Objet fournisseur de services par le biais duquel des services d'édition peuvent être obtenus.</param>
      <param name="value" vsli:raw="An instance of the value being edited.">Instance de la valeur en cours de modification.</param>
      <returns vsli:raw="The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.">Nouvelle valeur de l'objet. Si la valeur de l'objet n'a pas été modifiée, cette méthode retourne le même objet qui lui a été passé.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DockEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Retrieves the editing style of the EditValue method. If the method is not supported, this will return None.">Récupère le style de modification de la méthode EditValue. Si la méthode n'est pas prise en charge, la valeur None est retournée.</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <returns vsli:raw="An enum value indicating the provided editing style.">Valeur enum indiquant le style de modification fourni.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.DocumentDesigner">
      <summary vsli:raw="Base designer class for extending the design mode behavior of, and providing a root-level design mode view for, a &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; that supports nested controls and should receive scroll messages.">Classe de concepteur de base pour étendre le comportement en mode design et fournir une vue en mode design de niveau racine d’un <see cref="T:System.Windows.Forms.Control" /> que prend en charge des contrôles imbriqués et doit recevoir des messages de défilement.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.DocumentDesigner&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.DocumentDesigner" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Windows.Forms.Design.DocumentDesigner&quot; /&gt; and optionally releases the managed resources.">Libère les ressources non managées utilisées par <see cref="T:System.Windows.Forms.Design.DocumentDesigner" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.EnsureMenuEditorService(System.ComponentModel.IComponent)">
      <summary>Vérifie l'existence d'un service d'éditeur de menus et en crée un s'il n'existe pas déjà.</summary>
      <param name="c">
        <see cref="T:System.ComponentModel.IComponent" /> pour lequel vérifier l'existence d'un service de menu contextuel.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; representing the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects.">Obtient un <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> qui représente les objets <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <param name="selectionType" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphSelectionType&quot; /&gt; value that specifies the selection state.">Valeur <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> qui spécifie l'état de sélection.</param>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects.">Collection d'objets <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Indicates whether the specified tool is supported by the designer.">Indique si l'outil spécifié est pris en charge par le concepteur.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to test for toolbox support.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> dont la prise en charge pour la boîte à outils est à vérifier.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the tool should be enabled on the toolbox; &lt;see langword=&quot;false&quot; /&gt; if the document designer doesn't know how to use the tool.">
        <see langword="true" /> si l'outil doit être activé dans la boîte à outils ; <see langword="false" /> si le Concepteur de documents n'est pas capable d'utiliser l'outil.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary vsli:raw="Initializes the designer with the specified component.">Initialise le concepteur avec le composant spécifié.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to associate with the designer.">
        <see cref="T:System.ComponentModel.IComponent" /> à associer au concepteur.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.OnContextMenu(System.Int32,System.Int32)">
      <summary vsli:raw="Called when the context menu should be displayed.">Appelé quand le menu contextuel doit être affiché.</summary>
      <param name="x" vsli:raw="The horizontal screen coordinate to display the context menu at.">Coordonnée d'écran horizontale à laquelle le menu contextuel doit être affiché.</param>
      <param name="y" vsli:raw="The vertical screen coordinate to display the context menu at.">Coordonnée d'écran verticale à laquelle le menu contextuel doit être affiché.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.OnCreateHandle">
      <summary vsli:raw="Called immediately after the handle for the designer has been created.">Appelé immédiatement après que le handle du concepteur a été créé.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="Adjusts the set of properties the component exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">Ajuste le jeu de propriétés exposées par le composant à l'aide de <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties" vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; that contains the properties for the class of the component.">
        <see cref="T:System.Collections.IDictionary" /> qui contient les propriétés de la classe du composant.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.System#ComponentModel#Design#IRootDesigner#GetView(System.ComponentModel.Design.ViewTechnology)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;T:System.ComponentModel.Design.ViewTechnology&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="T:System.ComponentModel.Design.ViewTechnology" />.</summary>
      <param name="technology" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ViewTechnology&quot; /&gt; that indicates a particular view technology.">
        <see cref="T:System.ComponentModel.Design.ViewTechnology" /> indiquant une technologie d'affichage particulière.</param>
      <returns vsli:raw="An object that represents the view for this designer.">Objet représentant l'affichage de ce concepteur.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.System#Drawing#Design#IToolboxUser#GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)" />.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to be tested for toolbox support.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> dont la prise en charge de la boîte à outils est à vérifier.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the tool is supported by the toolbox and can be enabled; &lt;see langword=&quot;false&quot; /&gt; if the document designer does not know how to use the tool.">
        <see langword="true" /> si l'outil est pris en charge par la boîte à outils et s'il peut être activé ; <see langword="false" /> si le Concepteur de documents n'est pas capable d'utiliser l'outil.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.System#Drawing#Design#IToolboxUser#ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)" />.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to select.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> à sélectionner.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Selects the specified tool.">Sélectionne l'outil spécifié.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to create a component for.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> pour lequel créer un composant.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary>Traite les messages Windows.</summary>
      <param name="m">
        <see cref="T:System.Windows.Forms.Message" /> à traiter.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.DocumentDesigner.SelectionRules">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.Design.SelectionRules&quot; /&gt; for the designer.">Obtient le <see cref="T:System.Windows.Forms.Design.SelectionRules" /> pour le concepteur.</summary>
      <returns vsli:raw="A bitwise combination of &lt;see cref=&quot;T:System.Windows.Forms.Design.SelectionRules&quot; /&gt; values.">Combinaison de bits de valeurs <see cref="T:System.Windows.Forms.Design.SelectionRules" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DocumentDesigner.System#ComponentModel#Design#IRootDesigner#SupportedTechnologies">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies&quot; /&gt;.">Pour obtenir une description de ce membre, consultez <see cref="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies" />.</summary>
      <returns vsli:raw="An array of supported &lt;see cref=&quot;T:System.ComponentModel.Design.ViewTechnology&quot; /&gt; values.">Tableau des valeurs <see cref="T:System.ComponentModel.Design.ViewTechnology" /> prises en charge.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.EventHandlerService">
      <summary vsli:raw="Provides a systematic way to manage event handlers for the current document.">Fournit un moyen systématique de gérer les gestionnaires d'événements pour le document en cours.</summary>
    </member>
    <member name="E:System.Windows.Forms.Design.EventHandlerService.EventHandlerChanged">
      <summary vsli:raw="Fires an OnEventHandlerChanged event.">Déclenche un événement OnEventHandlerChanged.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.#ctor(System.Windows.Forms.Control)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.EventHandlerService&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.EventHandlerService" />.</summary>
      <param name="focusWnd" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; which is being designed.">
        <see cref="T:System.Windows.Forms.Control" /> en cours de conception.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.GetHandler(System.Type)">
      <summary vsli:raw="Gets the currently active event handler of the specified type.">Obtient le gestionnaire d'événements actuellement actif du type spécifié.</summary>
      <param name="handlerType" vsli:raw="The type of the handler to get.">Type de gestionnaire à obtenir.</param>
      <returns vsli:raw="An instance of the handler, or &lt;see langword=&quot;null&quot; /&gt; if there is no handler of the requested type.">Instance du gestionnaire ou <see langword="null" /> s'il n'existe aucun gestionnaire du type demandé.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.PopHandler(System.Object)">
      <summary vsli:raw="Pops the given handler off of the stack.">Dépile le gestionnaire donné.</summary>
      <param name="handler" vsli:raw="The handler to remove from the stack.">Gestionnaire à supprimer de la pile.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.PushHandler(System.Object)">
      <summary vsli:raw="Pushes a new event handler on the stack.">Exécute un push d'un nouveau gestionnaire d'événements dans la pile.</summary>
      <param name="handler" vsli:raw="The handler to add to the stack.">Gestionnaire à ajouter dans la pile.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.EventHandlerService.FocusWindow">
      <summary vsli:raw="Gets the control to which event handlers are attached.">Obtient le contrôle auquel les gestionnaires d'événements sont joints.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; which was attached through the constructor.">
        <see cref="T:System.Windows.Forms.Control" /> qui a été joint via le constructeur.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.FileNameEditor">
      <summary vsli:raw="Provides a user interface for selecting a file name.">Fournit une interface utilisateur pour sélectionner un fichier.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.FileNameEditor&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.FileNameEditor" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the specified object using the editor style provided by the &lt;see cref=&quot;M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)&quot; /&gt; method.">Modifie l'objet spécifié à l'aide du style d'éditeur fourni par la méthode <see cref="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <param name="provider" vsli:raw="A service provider object through which editing services may be obtained.">Objet fournisseur de services par le biais duquel des services d'édition peuvent être obtenus.</param>
      <param name="value" vsli:raw="An instance of the value being edited.">Instance de la valeur en cours de modification.</param>
      <returns vsli:raw="The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.">Nouvelle valeur de l'objet. Si la valeur de l'objet n'a pas été modifiée, cette méthode retourne le même objet qui lui a été passé.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editing style used by the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Windows.Forms.Design.FileNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot;&gt;&lt;/xref&gt; method.">Obtient le style de modification utilisé par la méthode <see cref="M:System.Windows.Forms.Design.FileNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <returns vsli:raw="One of the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle&quot;&gt;&lt;/xref&gt; values indicating the provided editing style.">Une des valeurs <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> indiquant le style de modification fourni.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.InitializeDialog(System.Windows.Forms.OpenFileDialog)">
      <summary vsli:raw="Initializes the open file dialog when it is created.">Initialise la boîte de dialogue d'ouverture de fichier lors de sa création.</summary>
      <param name="openFileDialog" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.OpenFileDialog&quot; /&gt; to use to select a file name.">
        <see cref="T:System.Windows.Forms.OpenFileDialog" /> à utiliser pour sélectionner un fichier.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor">
      <summary vsli:raw="Provides a user interface for choosing a folder from the file system.">Fournit une interface utilisateur permettant de choisir un dossier dans le système de fichiers.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.FolderNameEditor&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.FolderNameEditor" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the specified object using the editor style provided by &lt;see cref=&quot;M:System.Windows.Forms.Design.FolderNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)&quot; /&gt;.">Modifie l'objet spécifié avec le style de l'éditeur fourni par <see cref="M:System.Windows.Forms.Design.FolderNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <param name="provider" vsli:raw="A service object provider.">Fournisseur d'objets de service.</param>
      <param name="value" vsli:raw="The value to set.">Valeur à définir.</param>
      <returns vsli:raw="The new value of the object, or the old value if the object couldn't be updated.">La nouvelle valeur de l'objet ou l'ancienne valeur, si l'objet n'a pas pu être mis à jour.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editing style used by the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Windows.Forms.Design.FolderNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot;&gt;&lt;/xref&gt; method.">Obtient le style de modification utilisé par la méthode <see cref="M:System.Windows.Forms.Design.FolderNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <returns vsli:raw="A &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle&quot;&gt;&lt;/xref&gt; enumeration value indicating the provided editing style.">Valeur d'énumération <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> indiquant le style de modification fourni.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.InitializeDialog(System.Windows.Forms.Design.FolderNameEditor.FolderBrowser)">
      <summary vsli:raw="Initializes the folder browser dialog.">Initialise la boîte de dialogue de recherche de dossiers.</summary>
      <param name="folderBrowser" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser&quot; /&gt; to choose a folder.">
        <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" /> pour choisir un dossier.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser">
      <summary vsli:raw="Represents a dialog box that allows the user to choose a folder. This class cannot be inherited.">Représente une boîte de dialogue qui permet à l'utilisateur de choisir un dossier. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.ShowDialog">
      <summary vsli:raw="Shows the folder browser dialog.">Affiche la boîte de dialogue de recherche des dossiers.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.DialogResult&quot; /&gt; from the form.">
        <see cref="T:System.Windows.Forms.DialogResult" /> issu du formulaire.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.ShowDialog(System.Windows.Forms.IWin32Window)">
      <summary vsli:raw="Shows the folder browser dialog with the specified owner.">Affiche la boîte de dialogue de recherche des dossiers avec le propriétaire spécifié.</summary>
      <param name="owner" vsli:raw="Top-level window that will own the modal dialog (e.g.: System.Windows.Forms.Form).">Fenêtre de niveau supérieur à laquelle appartiendra la boîte de dialogue modale (par exemple : System.Windows.Forms.Form).</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.DialogResult&quot; /&gt; from the form.">
        <see cref="T:System.Windows.Forms.DialogResult" /> issu du formulaire.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.Description">
      <summary vsli:raw="Gets or sets a description to show above the folders.">Obtient ou définit une description à afficher au-dessus des dossiers.</summary>
      <returns vsli:raw="The description to show above the folders.">Description à afficher au-dessus des dossiers.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.DirectoryPath">
      <summary vsli:raw="Gets the directory path to the object the user picked.">Obtient le chemin d'accès à l'objet choisi par l'utilisateur.</summary>
      <returns vsli:raw="The directory path to the object the user picked.">Chemin d'accès à l'objet choisi par l'utilisateur.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.StartLocation">
      <summary vsli:raw="Gets or sets the start location of the root node.">Obtient ou définit l'emplacement de début du nœud racine.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder&quot; /&gt; that indicates the location for the folder browser to initially browse to.">
        <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder" /> qui indique l'emplacement où la recherche des dossiers doit s'effectuer initialement.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.Style">
      <summary vsli:raw="The styles the folder browser will use when browsing folders. This should be a combination of flags from the &lt;see cref=&quot;T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles&quot; /&gt; enumeration.">Styles que la recherche des dossiers utilisera en parcourant les dossiers. Ce doit être une combinaison d'indicateurs issus de l'énumération <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles&quot; /&gt; enumeration member that indicates behavior for the &lt;see cref=&quot;T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser&quot; /&gt; to use.">Membre de l'énumération <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles" /> qui indique le comportement pour le <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" /> à utiliser.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder">
      <summary vsli:raw="Defines identifiers used to indicate the root folder for a folder browser to initially browse to.">Définit les identificateurs utilisés pour indiquer le dossier racine qu'un explorateur de dossiers doit consulter initialement.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Desktop">
      <summary vsli:raw="The user's desktop.">Bureau de l'utilisateur.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Favorites">
      <summary vsli:raw="The user's favorites list.">Liste des Favoris de l'utilisateur.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.MyComputer">
      <summary vsli:raw="The contents of the My Computer icon.">Contenu de l'icône Poste de travail.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.MyDocuments">
      <summary vsli:raw="The user's My Documents folder.">Dossier Mes documents de l'utilisateur.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.MyPictures">
      <summary vsli:raw="User's location to store pictures.">Emplacement dans lequel l'utilisateur stocke les images.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.NetAndDialUpConnections">
      <summary vsli:raw="Network and dial-up connections.">Réseau et connexions d'accès à distance.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.NetworkNeighborhood">
      <summary vsli:raw="The network neighborhood.">Voisinage réseau.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Printers">
      <summary vsli:raw="A folder containing installed printers.">Dossier contenant les imprimantes installées.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Recent">
      <summary vsli:raw="A folder containing shortcuts to recently opened files.">Dossier contenant des raccourcis vers les fichiers ouverts récemment.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.SendTo">
      <summary vsli:raw="A folder containing shortcuts to applications to send documents to.">Dossier contenant des raccourcis vers des applications auxquelles vous pouvez envoyer des documents.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.StartMenu">
      <summary vsli:raw="The user's start menu.">Menu Démarrer de l'utilisateur.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Templates">
      <summary vsli:raw="The user's file templates.">Modèles de fichiers de l'utilisateur.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles">
      <summary vsli:raw="Defines identifiers used to specify behavior of a &lt;see cref=&quot;T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser&quot; /&gt;.">Définit les identificateurs utilisés pour spécifier le comportement de <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" />.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.BrowseForComputer">
      <summary vsli:raw="The folder browser can only return computers. If the user selects anything other than a computer, the OK button is grayed.">L'explorateur de dossiers ne peut retourner que des ordinateurs. Si l'utilisateur sélectionne autre chose qu'un ordinateur, le bouton OK est grisé.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.BrowseForEverything">
      <summary vsli:raw="The folder browser can return any object that it can return.">L'explorateur de dossiers peut retourner tout objet qu'il est capable de retourner.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.BrowseForPrinter">
      <summary vsli:raw="The folder browser can only return printers. If the user selects anything other than a printer, the OK button is grayed.">L'explorateur de dossiers ne peut retourner que des imprimantes. Si l'utilisateur sélectionne autre chose qu'une imprimante, le bouton OK est grisé.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.RestrictToDomain">
      <summary vsli:raw="The folder browser will not include network folders below the domain level in the dialog box's tree view control, or allow navigation to network locations outside of the domain.">L'explorateur de dossiers n'inclura pas de dossiers réseau situés au-dessous du niveau du domaine dans le contrôle Treeview de la boîte de dialogue ou autorisera la navigation vers les emplacements réseau situés en dehors de domaine.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.RestrictToFilesystem">
      <summary vsli:raw="The folder browser will only return local file system directories. If the user selects folders that are not part of the local file system, the OK button is grayed.">L'explorateur de dossiers ne retournera que des répertoires du système de fichiers local. Si l'utilisateur sélectionne des dossiers qui ne font pas partie du système de fichiers local, le bouton OK est grisé.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.RestrictToSubfolders">
      <summary vsli:raw="The folder browser will only return objects of the local file system that are within the root folder or a subfolder of the root folder. If the user selects a subfolder of the root folder that is not part of the local file system, the OK button is grayed.">L’explorateur de dossiers retournera uniquement des objets du système de fichiers local contenus dans le dossier racine ou dans un sous-dossier de ce dernier. Si l'utilisateur sélectionne un sous-dossier du dossier racine qui ne fait pas partie du système de fichiers local, le bouton OK est grisé.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.ShowTextBox">
      <summary vsli:raw="The folder browser includes a &lt;see cref=&quot;T:System.Windows.Forms.TextBox&quot; /&gt; control in the browse dialog box that allows the user to type the name of an item.">L'explorateur de dossiers comprend un contrôle <see cref="T:System.Windows.Forms.TextBox" /> dans la boîte de dialogue Sélection qui permet à l'utilisateur de taper le nom d'un élément.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.IContainsThemedScrollbarWindows">
      <summary vsli:raw="Defines a method for getting information about how the scrollbars of windows need to be themed when displayed in the Visual Studio designer.">Définit une méthode pour obtenir des informations sur la façon dont les barres de défilement des fenêtres doivent être à thème une fois affichées dans le concepteur Visual Studio.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.IContainsThemedScrollbarWindows.ThemedScrollbarWindows">
      <summary vsli:raw="Gets an enumeration of &lt;see cref=&quot;T:System.Windows.Forms.Design.ThemedScrollbarWindow&quot; /&gt; objects that represent windows and how their scrollbars need to be themed when displayed in the Visual Studio designer.">Obtient une énumération d'objets <see cref="T:System.Windows.Forms.Design.ThemedScrollbarWindow" /> qui représentent des fenêtres et la façon dont les barres de défilement doivent être à thème une fois affichées dans le concepteur Visual Studio.</summary>
      <returns vsli:raw="An enumeration of objects that represent windows and how their scrollbars need to be themed when displayed in the Visual Studio designer.">Une énumération d'objets qui représentent des fenêtres et la façon dont les barres de défilement doivent être à thème une fois affichées dans le concepteur Visual Studio.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ImageListCodeDomSerializer">
      <summary vsli:raw="Serializes string dictionaries.">Sérialise les chaînes des dictionnaires.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListCodeDomSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ImageListCodeDomSerializer&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.ImageListCodeDomSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Deserializes the specified serialized Code Document Object Model (CodeDOM) object into an object.">Désérialise en un objet l'objet CodeDOM (Code Document Object Model) sérialisé spécifié.</summary>
      <param name="manager" vsli:raw="A serialization manager interface that is used during the deserialization process.">Interface du gestionnaire de sérialisation utilisée pendant le processus de désérialisation.</param>
      <param name="codeObject" vsli:raw="A serialized CodeDOM object to deserialize.">Objet CodeDOM sérialisé à désérialiser.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;codeObject&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> ou <paramref name="codeObject" /> est <see langword="null" />.</exception>
      <returns vsli:raw="The deserialized CodeDOM object.">Objet CodeDOM désérialisé.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Serializes the specified object into a Code Document Object Model (CodeDOM) object.">Sérialise l'objet spécifié en un objet CodeDOM (Code Document Object Model).</summary>
      <param name="manager" vsli:raw="The serialization manager to use during serialization.">Gestionnaire de sérialisation à utiliser pendant la sérialisation.</param>
      <param name="value" vsli:raw="The object to serialize.">L'objet à sérialiser.</param>
      <returns vsli:raw="A CodeDOM object representing the object that has been serialized.">Objet CodeDOM représentant l'objet qui a été sérialisé.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ImageListImageEditor">
      <summary vsli:raw="Provides an editor that can perform default file searching for bitmap (.bmp) files.">Fournit un éditeur pouvant effectuer une recherche de fichier par défaut pour les fichiers bitmap (.bmp).</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ImageListImageEditor&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.ImageListImageEditor" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the specified object value using the edit style provided by the &lt;see cref=&quot;M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)&quot; /&gt; method.">Modifie la valeur de l'objet spécifié à l'aide du style d'édition fourni par la méthode <see cref="M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; through which editing services can be obtained.">
        <see cref="T:System.IServiceProvider" /> par le biais duquel des services d'édition peuvent être obtenus.</param>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; being edited.">
        <see cref="T:System.Object" /> en cours de modification.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; representing the new value. If the value of the object has not changed, the &lt;see cref=&quot;M:System.Windows.Forms.Design.ImageListImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot; /&gt; method returns the object that was passed to it.">
        <see cref="T:System.Object" /> représentant la nouvelle valeur. Si la valeur de l'objet n'a pas changé, la méthode <see cref="M:System.Windows.Forms.Design.ImageListImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> retourne l'objet qui lui a été passé.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.GetFileDialogDescription">
      <summary vsli:raw="Gets the description for the default file-list filter provided by this editor.">Obtient la description du filtre de liste de fichiers par défaut fourni par cet éditeur.</summary>
      <returns vsli:raw="The description for the default file-list filter.">Description du filtre de liste de fichiers par défaut.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.GetImageExtenders">
      <summary vsli:raw="Gets an array of supported image types.">Obtient un tableau de types d'images pris en charge.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Type&quot; /&gt; representing supported image types.">Tableau de <see cref="T:System.Type" /> représentant les types d'images pris en charge.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets a value indicating whether this editor supports painting a representation of an object's value.">Obtient une valeur indiquant si cet éditeur permet de peindre une représentation de la valeur d'un objet.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.Drawing.Design.ImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)&quot; /&gt; is implemented; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="M:System.Drawing.Design.ImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)" /> est implémenté ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary vsli:raw="Paints a value indicated by the specified &lt;see cref=&quot;T:System.Drawing.Design.PaintValueEventArgs&quot; /&gt;.">Peint une valeur indiquée par le <see cref="T:System.Drawing.Design.PaintValueEventArgs" /> spécifié.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.PaintValueEventArgs&quot; /&gt; indicating what to paint and where to paint it.">
        <see cref="T:System.Drawing.Design.PaintValueEventArgs" /> qui indique l'élément à peindre et l'emplacement où il doit être peint.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.MaskDescriptor">
      <summary vsli:raw="Defines a set of members for derived classes to provide options for the masked text box UI type editor.">Définit un jeu de membres pour que les classes dérivées fournissent des options pour l'éditeur de types muni d'une interface utilisateur de zone de texte masqué.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.MaskDescriptor&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.MaskDescriptor" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Forms.Design.MaskDescriptor&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Windows.Forms.Design.MaskDescriptor&quot; /&gt;.">Détermine si l'objet <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> spécifié est égal à l'objet <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> actuel.</summary>
      <param name="maskDescriptor" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.MaskDescriptor&quot; /&gt; to compare with the current &lt;see cref=&quot;T:System.Windows.Forms.Design.MaskDescriptor&quot; /&gt;.">
        <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> à comparer avec l'objet <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> actuel.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Windows.Forms.Design.MaskDescriptor&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Windows.Forms.Design.MaskDescriptor&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> spécifié est égal au <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.GetHashCode">
      <summary vsli:raw="Serves as a hash function for a particular type.">Sert de fonction de hachage pour un type particulier.</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Code de hachage du <see cref="T:System.Object" /> actuel.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.IsValidMaskDescriptor(System.Windows.Forms.Design.MaskDescriptor)">
      <summary vsli:raw="Returns a value indicating whether the specified mask descriptor is valid and can be added to the masks list.">Retourne une valeur qui indique si le descripteur de masque spécifié est valide et peut être ajouté à la liste de masques.</summary>
      <param name="maskDescriptor" vsli:raw="The mask descriptor to test for validity.">Descripteur de masque dont la validité doit être testée.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;maskDescriptor&quot; /&gt; is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="maskDescriptor" /> est valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.IsValidMaskDescriptor(System.Windows.Forms.Design.MaskDescriptor,System.String@)">
      <summary vsli:raw="Returns a value indicating whether the specified mask descriptor is valid, and provides an error description if it is not valid.">Retourne une valeur qui indique si le descripteur de masque spécifié est valide, et fournit une description d'erreur s'il n'est pas valide.</summary>
      <param name="maskDescriptor" vsli:raw="The mask descriptor to test for validity.">Descripteur de masque dont la validité doit être testée.</param>
      <param name="validationErrorDescription" vsli:raw="A string representing a validation error. If no validation error occurred, the &lt;paramref name=&quot;validationErrorDescription&quot; /&gt; is &lt;see cref=&quot;F:System.String.Empty&quot; /&gt;.">Chaîne représentant une erreur de validation. Si aucune erreur de validation ne s'est produite, <paramref name="validationErrorDescription" /> a la valeur <see cref="F:System.String.Empty" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;maskDescriptor&quot; /&gt; is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="maskDescriptor" /> est valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.ToString">
      <summary vsli:raw="Returns a string that represents the current object.">Retourne une chaîne qui représente l'objet actuel.</summary>
      <returns vsli:raw="A string that represents the current object.">Chaîne qui représente l'objet actuel.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.Culture">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; representing the locale the mask is authored for.">Obtient le <see cref="T:System.Globalization.CultureInfo" /> qui représente les paramètres régionaux pour lesquels le masque est créé.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; representing the locale the mask is authored for.">
        <see cref="T:System.Globalization.CultureInfo" /> qui représente les paramètres régionaux pour lesquels le masque est créé.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.Mask">
      <summary vsli:raw="Gets the mask being defined.">Obtient le masque en cours de définition.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the mask being defined.">
        <see cref="T:System.String" /> contenant le masque en cours de définition.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.Name">
      <summary vsli:raw="Gets the user-friendly name of the mask.">Obtient le nom convivial du masque.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the name or brief description of the &lt;see cref=&quot;P:System.Windows.Forms.Design.MaskDescriptor.Mask&quot; /&gt;.">
        <see cref="T:System.String" /> contenant le nom ou la brève description de <see cref="P:System.Windows.Forms.Design.MaskDescriptor.Mask" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.Sample">
      <summary vsli:raw="Gets a sample of a formatted string for the mask.">Obtient un exemple de chaîne mise en forme pour le masque.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing text that is formatted by using the &lt;see cref=&quot;P:System.Windows.Forms.Design.MaskDescriptor.Mask&quot; /&gt;.">
        <see cref="T:System.String" /> contenant le texte qui est mis en forme à l'aide de <see cref="P:System.Windows.Forms.Design.MaskDescriptor.Mask" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.ValidatingType">
      <summary vsli:raw="Gets the type providing validation associated with the mask.">Obtient le type fournissant la validation associée au masque.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that the formatted string is validated against.">
        <see cref="T:System.Type" /> par rapport auquel la chaîne mise en forme est validée.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.MenuCommands">
      <summary vsli:raw="Defines a set of &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; fields that each correspond to a command function provided by the host environment.">Définit un ensemble de champs <see cref="T:System.ComponentModel.Design.CommandID" /> dont chacun correspond à une fonction fournie par l'environnement hôte.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.ComponentTrayMenu">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the component tray menu.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au menu de la barre d'état des composants.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.ContainerMenu">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the container menu.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au menu du conteneur.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.DesignerProperties">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the properties page for the designer.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder à la page de propriétés du concepteur.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.EditLabel">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the edit label handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de modification des étiquettes.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyCancel">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the cancel key handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de la touche d'annulation.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyDefaultAction">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the default key handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de la touche par défaut.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyEnd">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the end key handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de la touche Fin.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyHome">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the home key handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de la touche Début.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyInvokeSmartTag">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the smart tag invocation handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire d'appels de balises actives.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveDown">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the move down key handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de la touche de déplacement vers le bas.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveLeft">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the move left key handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de la touche de déplacement vers la gauche.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveRight">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the move right key handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de la touche de déplacement vers la droite.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveUp">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the move up key handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de la touche de déplacement vers le haut.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeDown">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge down key handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de la touche de repositionnement vers le bas.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeHeightDecrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge height decrease key handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de la touche de repositionnement en diminuant la hauteur.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeHeightIncrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge height increase key handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de la touche de repositionnement en augmentant la hauteur.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeLeft">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge left key handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de la touche de repositionnement vers la gauche.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeRight">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge right key handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de la touche de repositionnement vers la droite.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeUp">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge up key handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de la touche de repositionnement vers le haut.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeWidthDecrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge width decrease key handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de la touche de repositionnement en diminuant la largeur.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeWidthIncrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge width increase key handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de la touche de repositionnement en augmentant la largeur.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyReverseCancel">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the reverse cancel key handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de la touche d'annulation de l'inversion.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySelectNext">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the select next key handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de la touche suivant.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySelectPrevious">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the select previous key handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de la touche précédent.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyShiftEnd">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the SHIFT-END key handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de la touche MAJ-FIN.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyShiftHome">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the SHIFT-HOME key handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de la touche MAJ-DÉBUT.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeHeightDecrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the size height decrease key handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de la touche de réduction de la hauteur.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeHeightIncrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the size height increase key handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de la touche d'augmentation de la hauteur.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeWidthDecrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the size width decrease key handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de la touche de réduction de la largeur.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeWidthIncrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the size width increase key handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de la touche d'augmentation de la largeur.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyTabOrderSelect">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the tab order select key handler.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au gestionnaire de la touche de sélection de l'ordre de tabulation.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.SelectionMenu">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the selection menu.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au menu Sélection.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.SetStatusRectangle">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to set the status rectangle.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour définir le rectangle d'état.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.SetStatusText">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to set the status rectangle text.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour définir le texte du rectangle d'état.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.TraySelectionMenu">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the tray selection menu.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> pouvant être utilisé pour accéder au menu de sélection de la barre d'état.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.MenuCommands.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.MenuCommands&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.MenuCommands" />.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ParentControlDesigner">
      <summary vsli:raw="Extends the design mode behavior of a &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; that supports nested controls.">Étend le comportement en mode design d’un <see cref="T:System.Windows.Forms.Control" /> qui prend en charge les contrôles imbriqués.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ParentControlDesigner&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.AddPaddingSnapLines(System.Collections.ArrayList@)">
      <summary vsli:raw="Adds padding snaplines.">Ajoute des lignes d'alignement (SnapLines) de marge intérieure.</summary>
      <param name="snapLines" vsli:raw="An &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; that contains &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; objects.">
        <see cref="T:System.Collections.ArrayList" /> qui contient les objets <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CanAddComponent(System.ComponentModel.IComponent)">
      <summary vsli:raw="Called when a component is added to the parent container.">Appelé lorsqu'un composant est ajouté au conteneur parent.</summary>
      <param name="component" vsli:raw="The component to test for errors.">Composant à tester pour la présence d'erreurs.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;component&quot; /&gt; can be added; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <paramref name="component" /> peut être ajouté ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CanParent(System.Windows.Forms.Control)">
      <summary vsli:raw="Indicates whether the specified control can be a child of the control managed by this designer.">Indique si le contrôle spécifié peut être un enfant du contrôle managé par ce concepteur.</summary>
      <param name="control" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; to test.">
        <see cref="T:System.Windows.Forms.Control" /> à tester.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified control can be a child of the control managed by this designer; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le contrôle spécifié peut être un enfant du contrôle managé par ce concepteur ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CanParent(System.Windows.Forms.Design.ControlDesigner)">
      <summary vsli:raw="Indicates whether the control managed by the specified designer can be a child of the control managed by this designer.">Indique si le contrôle managé par le concepteur spécifié peut être un enfant du contrôle managé par ce concepteur.</summary>
      <param name="controlDesigner" vsli:raw="The designer for the control to test.">Concepteur du contrôle à tester.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the control managed by the specified designer can be a child of the control managed by this designer; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le contrôle managé par le concepteur spécifié peut être un enfant du contrôle managé par ce concepteur ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Creates a component or control from the specified tool and adds it to the current design document.">Crée un composant ou un contrôle à partir de l'outil spécifié et l'ajoute au document de design en cours.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to create a component from.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> à partir duquel créer un composant.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem,System.Drawing.Point)">
      <summary vsli:raw="Creates a component or control from the specified tool and adds it to the current design document at the specified location.">Crée un composant ou un contrôle à partir de l'outil spécifié et l'ajoute au document de design en cours, à l'emplacement spécifié.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to create a component from.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> à partir duquel créer un composant.</param>
      <param name="location" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt;, in design-time view screen coordinates, at which to center the component.">
        <see cref="T:System.Drawing.Point" />, en coordonnées d'écran de la vue design, sur lequel centrer le composant.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem,System.Drawing.Rectangle)">
      <summary vsli:raw="Creates a component or control from the specified tool and adds it to the current design document within the bounds of the specified rectangle.">Crée un composant ou un contrôle à partir de l'outil spécifié et l 'ajoute au document de design en cours, à l'intérieur du rectangle spécifié.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to create a component from.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> à partir duquel créer un composant.</param>
      <param name="bounds" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; indicating the location and size for the component created from the tool. The &lt;see cref=&quot;P:System.Drawing.Rectangle.X&quot; /&gt; and &lt;see cref=&quot;P:System.Drawing.Rectangle.Y&quot; /&gt; values of the &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; indicate the design-time view screen coordinates of the upper-left corner of the component.">
        <see cref="T:System.Drawing.Rectangle" /> indiquant l'emplacement est la taille du composant créé à partir de l'outil. Les valeurs <see cref="P:System.Drawing.Rectangle.X" /> et <see cref="P:System.Drawing.Rectangle.Y" /> du <see cref="T:System.Drawing.Rectangle" /> indiquent les coordonnées d'écran de la vue design du coin supérieur gauche du composant.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateToolCore(System.Drawing.Design.ToolboxItem,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary vsli:raw="Provides core functionality for all the &lt;see cref=&quot;M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem)&quot; /&gt; methods.">Fournit les fonctionnalités principales de toutes les méthodes <see cref="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem)" />.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to create a component from.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> à partir duquel créer un composant.</param>
      <param name="x" vsli:raw="The horizontal position, in design-time view coordinates, of the location of the left edge of the tool, if a size is specified; the horizontal position of the center of the tool, if no size is specified.">Position horizontale, en coordonnées de vue design, de l'emplacement du bord gauche de l'outil si une taille est spécifiée ; position horizontale du centre de l'outil si aucune taille n'est spécifiée.</param>
      <param name="y" vsli:raw="The vertical position, in design-time view coordinates, of the location of the top edge of the tool, if a size is specified; the vertical position of the center of the tool, if no size is specified.">Position verticale, en coordonnées de vue design, de l'emplacement du bord supérieur de l'outil si une taille est spécifiée ; position verticale du centre de l'outil si aucune taille n'est spécifiée.</param>
      <param name="width" vsli:raw="The width of the tool. This parameter is ignored if the &lt;paramref name=&quot;hasSize&quot; /&gt; parameter is set to &lt;see langword=&quot;false&quot; /&gt;.">Largeur de l'outil. Ce paramètre est ignoré si le paramètre <paramref name="hasSize" /> a la valeur <see langword="false" />.</param>
      <param name="height" vsli:raw="The height of the tool. This parameter is ignored if the &lt;paramref name=&quot;hasSize&quot; /&gt; parameter is set to &lt;see langword=&quot;false&quot; /&gt;.">Hauteur de l'outil. Ce paramètre est ignoré si le paramètre <paramref name="hasSize" /> a la valeur <see langword="false" />.</param>
      <param name="hasLocation" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a location for the component is specified; &lt;see langword=&quot;false&quot; /&gt; if the component is to be positioned in the center of the currently selected control.">
        <see langword="true" /> si l'emplacement de l'outil est spécifié ; <see langword="false" /> si le composant doit être positionné au centre du contrôle actuellement sélectionné.</param>
      <param name="hasSize" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a size for the component is specified; &lt;see langword=&quot;false&quot; /&gt; if the default height and width values for the component are to be used.">
        <see langword="true" /> si une taille a été spécifiée pour le composant ; <see langword="false" /> si la hauteur et la largeur par défaut du composant doivent être utilisées.</param>
      <returns vsli:raw="An array of components created from the tool.">Tableau de composants créés à partir de l'outil.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Windows.Forms.Design.ParentControlDesigner&quot; /&gt;, and optionally releases the managed resources.">Libère les ressources non managées utilisées par le <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" />, et libère éventuellement les ressources managées.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetControl(System.Object)">
      <summary vsli:raw="Gets the control from the designer of the specified component.">Obtient le contrôle à partir du concepteur du composant spécifié.</summary>
      <param name="component" vsli:raw="The component to retrieve the control for.">Composant pour lequel le contrôle doit être récupéré.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; that the specified component belongs to.">
        <see cref="T:System.Windows.Forms.Control" /> auquel appartient le composant spécifié.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetControlGlyph(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary vsli:raw="Gets a body glyph that represents the bounds of the control.">Obtient un glyphe de corps qui représente les limites du contrôle.</summary>
      <param name="selectionType" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphSelectionType&quot; /&gt; value that specifies the selection state.">Valeur <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> qui spécifie l'état de sélection.</param>
      <returns vsli:raw="A body glyph that represents the bounds of the control.">Glyphe de corps qui représente les limites du contrôle.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary vsli:raw="Gets a collection of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects representing the selection borders and grab handles for a standard control.">Obtient une collection d'objets <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> qui représentent les bordures de sélection et les poignées de manipulation d'un contrôle standard.</summary>
      <param name="selectionType" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphSelectionType&quot; /&gt; value that specifies the selection state.">Valeur <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> qui spécifie l'état de sélection.</param>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects.">Collection d'objets <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetParentForComponent(System.ComponentModel.IComponent)">
      <summary vsli:raw="Used by deriving classes to determine if it returns the control being designed or some other &lt;see cref=&quot;T:System.ComponentModel.Container&quot; /&gt; while adding a component to it.">Utilisée par les classes dérivées pour déterminer si elle retourne le contrôle en cours de conception ou un autre <see cref="T:System.ComponentModel.Container" /> en lui ajoutant un composant.</summary>
      <param name="component" vsli:raw="The component for which to retrieve the parent &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt;.">Composant pour lequel récupérer le <see cref="T:System.Windows.Forms.Control" /> parent.</param>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; for the component.">
        <see cref="T:System.Windows.Forms.Control" /> parent du composant.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetUpdatedRect(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Boolean)">
      <summary vsli:raw="Updates the position of the specified rectangle, adjusting it for grid alignment if grid alignment mode is enabled.">Met à jour la position du rectangle spécifié, en ajustant son alignement par rapport à la grille lorsque le mode grille est activé.</summary>
      <param name="originalRect" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; indicating the initial position of the component being updated.">
        <see cref="T:System.Drawing.Rectangle" /> indiquant la position initiale du composant en cours de mise à jour.</param>
      <param name="dragRect" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; indicating the new position of the component.">
        <see cref="T:System.Drawing.Rectangle" /> indiquant la nouvelle position du composant.</param>
      <param name="updateSize" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to update the size of the rectangle, if there has been any change; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> pour mettre à jour la taille du rectangle en cas de modification ; sinon <see langword="false" />.</param>
      <returns vsli:raw="A rectangle indicating the position of the component in design-time view screen coordinates. If no changes have been made, this method returns the original rectangle.">Rectangle indiquant la position du composant en coordonnées d'écran de la vue design. Si aucun changement n'a été effectué, cette méthode retourne le rectangle d'origine.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary vsli:raw="Initializes the designer with the specified component.">Initialise le concepteur avec le composant spécifié.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to associate with the designer.">
        <see cref="T:System.ComponentModel.IComponent" /> à associer au concepteur.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <summary vsli:raw="Initializes a newly created component.">Initialise un composant nouvellement créé.</summary>
      <param name="defaultValues" vsli:raw="A name/value dictionary of default values to apply to properties. May be &lt;see langword=&quot;null&quot; /&gt; if no default values are specified.">Dictionnaire de noms/valeurs de valeurs par défaut à appliquer aux propriétés. Peut avoir la valeur <see langword="null" /> si aucune valeur par défaut n’est spécifiée.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.InvokeCreateTool(System.Windows.Forms.Design.ParentControlDesigner,System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Creates a tool from the specified &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Crée un outil à partir du <see cref="T:System.Drawing.Design.ToolboxItem" /> spécifié.</summary>
      <param name="toInvoke" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.ParentControlDesigner&quot; /&gt; that the tool is to be used with.">
        <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" /> avec lequel l'outil doit être employé.</param>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to create a tool from.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> à partir duquel créer un outil.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragComplete(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Called in order to clean up a drag-and-drop operation.">Appelée dans le but de nettoyer une opération glisser-déplacer.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">
        <see cref="T:System.Windows.Forms.DragEventArgs" /> qui fournit des données pour l'événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Called when a drag-and-drop object is dropped onto the control designer view.">Appelée lorsqu'un objet glissé est déplacé sur la vue de Concepteur de contrôles.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">
        <see cref="T:System.Windows.Forms.DragEventArgs" /> qui fournit des données pour l'événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Called when a drag-and-drop operation enters the control designer view.">Appelée lorsqu'une opération glisser-déplacer entre dans la vue de Concepteur de contrôles.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">
        <see cref="T:System.Windows.Forms.DragEventArgs" /> qui fournit des données pour l'événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragLeave(System.EventArgs)">
      <summary vsli:raw="Called when a drag-and-drop operation leaves the control designer view.">Appelée lorsqu'une opération glisser-déplacer sort de la vue de Concepteur de contrôles.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that provides data for the event.">
        <see cref="T:System.EventArgs" /> qui fournit des données pour l'événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Called when a drag-and-drop object is dragged over the control designer view.">Appelée lorsqu'un objet glissé-déplacé est glissé sur la vue de Concepteur de contrôles.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">
        <see cref="T:System.Windows.Forms.DragEventArgs" /> qui fournit des données pour l'événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragBegin(System.Int32,System.Int32)">
      <summary vsli:raw="Called in response to the left mouse button being pressed and held while over the component.">Appelée lorsque le bouton gauche de la souris est maintenu enfoncé au-dessus du composant.</summary>
      <param name="x" vsli:raw="The x-coordinate of the mouse in screen coordinates.">Coordonnée x, en coordonnées d'écran, du pointeur de la souris.</param>
      <param name="y" vsli:raw="The y-coordinate of the mouse in screen coordinates.">Coordonnée y, en coordonnées d'écran, du pointeur de la souris.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragEnd(System.Boolean)">
      <summary vsli:raw="Called at the end of a drag-and-drop operation to complete or cancel the operation.">Appelée à la fin d'une opération glisser-déplacer pour terminer ou annuler l'opération.</summary>
      <param name="cancel" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to cancel the drag operation; &lt;see langword=&quot;false&quot; /&gt; to commit it.">
        <see langword="true" /> pour annuler l'opération glisser ; <see langword="false" /> pour la confirmer.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragMove(System.Int32,System.Int32)">
      <summary vsli:raw="Called for each movement of the mouse during a drag-and-drop operation.">Appelée pour chaque mouvement de la souris pendant une opération glisser-déplacer.</summary>
      <param name="x" vsli:raw="The x-coordinate of the mouse in screen coordinates.">Coordonnée x, en coordonnées d'écran, du pointeur de la souris.</param>
      <param name="y" vsli:raw="The y-coordinate of the mouse in screen coordinates.">Coordonnée y, en coordonnées d'écran, du pointeur de la souris.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnPaintAdornments(System.Windows.Forms.PaintEventArgs)">
      <summary vsli:raw="Called when the control that the designer is managing has painted its surface so the designer can paint any additional adornments on top of the control.">Appelée lorsque le contrôle que le concepteur manage a peint sa surface de sorte que le concepteur puisse peindre d'autres motifs par-dessus le contrôle.</summary>
      <param name="pe" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.PaintEventArgs&quot; /&gt; that provides data for the event.">
        <see cref="T:System.Windows.Forms.PaintEventArgs" /> qui fournit des données pour l'événement.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnSetCursor">
      <summary vsli:raw="Provides an opportunity to change the current mouse cursor.">Fournit une possibilité de modifier le curseur de la souris actuel.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="Adjusts the set of properties the component will expose through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">Ajuste le jeu de propriétés exposées par le composant à l'aide de <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties" vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; that contains the properties for the class of the component.">
        <see cref="T:System.Collections.IDictionary" /> qui contient les propriétés de la classe du composant.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.AllowControlLasso">
      <summary vsli:raw="Gets a value indicating whether selected controls will be re-parented.">Obtient une valeur indiquant si les contrôles sélectionnés seront à nouveau apparentés.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the controls that were selected by lassoing on the designer's surface will be re-parented to this designer's control.">
        <see langword="true" /> si les contrôles sélectionnés par un mécanisme de type « lasso » sur la surface du concepteur seront à nouveau apparentés à ce contrôle de concepteur.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.AllowGenericDragBox">
      <summary vsli:raw="Gets a value indicating whether a generic drag box should be drawn when dragging a toolbox item over the designer's surface.">Obtient une valeur qui indique si une zone de glisser générique doit être dessinée lors du glisser-déplacer d'un élément de boîte à outils sur la surface du concepteur.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a generic drag box should be drawn when dragging a toolbox item over the designer's surface; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si une zone de glisser générique doit être dessinée lors du glisser-déplacer d'un élément de boîte à outils sur la surface du concepteur ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.AllowSetChildIndexOnDrop">
      <summary vsli:raw="Gets a value indicating whether the z-order of dragged controls should be maintained when dropped on a &lt;see cref=&quot;T:System.Windows.Forms.Design.ParentControlDesigner&quot; /&gt;.">Obtient une valeur qui indique si l'ordre de plan des contrôles déplacés par glisser-déplacer doit être maintenu lorsque ceux-ci sont placés sur un <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the z-order of dragged controls should be maintained when dropped on a &lt;see cref=&quot;T:System.Windows.Forms.Design.ParentControlDesigner&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si l'ordre de plan des contrôles déplacés par glisser-déplacer doit être maintenu lorsque ceux-ci sont placés sur un <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.DefaultControlLocation">
      <summary vsli:raw="Gets the default location for a control added to the designer.">Obtient l'emplacement par défaut d'un contrôle ajouté au concepteur.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; that indicates the default location for a control added to the designer.">
        <see cref="T:System.Drawing.Point" /> indiquant l'emplacement par défaut d'un contrôle ajouté au concepteur.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.DrawGrid">
      <summary vsli:raw="Gets or sets a value indicating whether a grid should be drawn on the control for this designer.">Obtient ou définit une valeur indiquant si la grille doit être dessinée sur le contrôle pour ce concepteur.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a grid should be drawn on the control in the designer; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si une grille doit être dessinée sur le contrôle dans le concepteur ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.EnableDragRect">
      <summary vsli:raw="Gets a value indicating whether drag rectangles are drawn by the designer.">Obtient une valeur indiquant si les rectangles de glissement sont dessinés par le concepteur.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if drag rectangles are drawn; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> si les rectangles de glissement sont dessinés ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.GridSize">
      <summary vsli:raw="Gets or sets the size of each square of the grid that is drawn when the designer is in grid draw mode.">Obtient ou définit la taille de chaque carré de la grille qui est dessinée lorsque le concepteur est en mode grille.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see cref=&quot;T:System.Drawing.Size&quot; /&gt; is outside the allowed range for &lt;see cref=&quot;P:System.Windows.Forms.Design.ParentControlDesigner.GridSize&quot; /&gt;. The default minimum value is 2, and the default maximum value is 200.">
        <see cref="T:System.Drawing.Size" /> est hors de la plage autorisée pour <see cref="P:System.Windows.Forms.Design.ParentControlDesigner.GridSize" />. La valeur minimale par défaut est 2 et la valeur maximale par défaut est 200.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Size&quot; /&gt; that represents the size of each square of the grid drawn on a form or user control.">
        <see cref="T:System.Drawing.Size" /> représentant la taille de chaque carré de la grille dessinée dans un formulaire ou sur un contrôle utilisateur.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.MouseDragTool">
      <summary vsli:raw="Gets a value indicating whether the designer has a valid tool during a drag operation.">Obtient une valeur qui indique si le concepteur possède un outil valide durant une opération glisser.</summary>
      <returns vsli:raw="The tool being dragged, if creating a component, or &lt;see langword=&quot;null&quot; /&gt; if there is no tool.">Outil objet de l'opération glisser en cas de création d'un composant ou <see langword="null" /> si aucun outil n'est présent.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.SnapLines">
      <summary vsli:raw="Gets a list of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; objects representing significant alignment points for this control.">Obtient une liste d'objets <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> qui représentent des points d'alignement significatifs pour ce contrôle.</summary>
      <returns vsli:raw="A list of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; objects representing significant alignment points for this control.">Liste d'objets <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> qui représentent des points d'alignement significatifs pour ce contrôle.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ScrollableControlDesigner">
      <summary vsli:raw="Base designer class for extending the design mode behavior of a &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; which should receive scroll messages.">Classe de concepteur de base pour l’extension du comportement en mode design d’un <see cref="T:System.Windows.Forms.Control" /> qui doit recevoir des messages de défilement.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ScrollableControlDesigner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ScrollableControlDesigner&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.ScrollableControlDesigner" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ScrollableControlDesigner.GetHitTest(System.Drawing.Point)">
      <summary vsli:raw="Indicates whether a mouse click at the specified point should be handled by the control.">Indique si le contrôle doit gérer un clic de souris à un emplacement spécifié.</summary>
      <param name="pt" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; indicating the position at which the mouse was clicked, in screen coordinates.">
        <see cref="T:System.Drawing.Point" /> qui indique l'emplacement où un clic de souris a été effectué, en coordonnées d'écran.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a click at the specified point is to be handled by the control; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si le contrôle doit gérer un clic à un emplacement spécifié ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ScrollableControlDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary vsli:raw="Processes Windows messages and passes WM_HSCROLL and WM_VSCROLL messages to the control at design time.">Traite les messages Windows et passe les messages WM_HSCROLL et WM_VSCROLL au contrôle au moment du design.</summary>
      <param name="m" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Message&quot; /&gt; to process.">
        <see cref="T:System.Windows.Forms.Message" /> à traiter.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.SelectionRules">
      <summary vsli:raw="Defines identifiers that are used to indicate selection rules for a component.">Définit des identifiants servant à indiquer les règles de sélection pour un composant.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.AllSizeable">
      <summary vsli:raw="Indicates the component supports sizing in all directions.">Indique que le composant prend en charge le redimensionnement dans toutes les directions.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.BottomSizeable">
      <summary vsli:raw="Indicates the component supports resize from the bottom.">Indique que le composant prend en charge le redimensionnement à partir du bas.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.LeftSizeable">
      <summary vsli:raw="Indicates the component supports resize from the left.">Indique que le composant prend en charge le redimensionnement à partir de la gauche.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.Locked">
      <summary vsli:raw="Indicates the component is locked to its container. Overrides the &lt;see cref=&quot;F:System.Windows.Forms.Design.SelectionRules.Moveable&quot; /&gt;, &lt;see cref=&quot;F:System.Windows.Forms.Design.SelectionRules.AllSizeable&quot; /&gt;, &lt;see cref=&quot;F:System.Windows.Forms.Design.SelectionRules.BottomSizeable&quot; /&gt;, &lt;see cref=&quot;F:System.Windows.Forms.Design.SelectionRules.LeftSizeable&quot; /&gt;, &lt;see cref=&quot;F:System.Windows.Forms.Design.SelectionRules.RightSizeable&quot; /&gt;, and &lt;see cref=&quot;F:System.Windows.Forms.Design.SelectionRules.TopSizeable&quot; /&gt; bit flags of this enumeration.">Indique que le composant est verrouillé à son conteneur. Substitue les indicateurs binaires <see cref="F:System.Windows.Forms.Design.SelectionRules.Moveable" />, <see cref="F:System.Windows.Forms.Design.SelectionRules.AllSizeable" />, <see cref="F:System.Windows.Forms.Design.SelectionRules.BottomSizeable" />, <see cref="F:System.Windows.Forms.Design.SelectionRules.LeftSizeable" />, <see cref="F:System.Windows.Forms.Design.SelectionRules.RightSizeable" /> et <see cref="F:System.Windows.Forms.Design.SelectionRules.TopSizeable" /> de cette énumération.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.Moveable">
      <summary vsli:raw="Indicates the component supports a location property that allows it to be moved on the screen.">Indique que le composant prend en charge une propriété Location qui permet de le déplacer à l'écran.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.None">
      <summary vsli:raw="Indicates no special selection attributes.">Indique l'absence d'attributs de sélection spéciaux.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.RightSizeable">
      <summary vsli:raw="Indicates the component supports resize from the right.">Indique que le composant prend en charge le redimensionnement à partir de la droite.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.TopSizeable">
      <summary vsli:raw="Indicates the component supports resize from the top.">Indique que le composant prend en charge le redimensionnement à partir du haut.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.Visible">
      <summary vsli:raw="Indicates the component has some form of visible user interface and the selection service is drawing a selection border around this user interface. If a selected component has this rule set, you can assume that the component implements &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; and that it is associated with a corresponding designer instance.">Indique que le composant dispose d'une interface utilisateur visible autour de laquelle le service de sélection est occupé à dessiner une bordure de sélection. Si cette règle est définie pour un composant sélectionné, vous pouvez supposer que celui-ci implémente <see cref="T:System.ComponentModel.IComponent" /> et qu'il est associé à une instance de concepteur correspondante.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ShortcutKeysEditor">
      <summary vsli:raw="Provides an editor for picking shortcut keys.">Fournit un éditeur pour choisir des touches de raccourci.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ShortcutKeysEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ShortcutKeysEditor&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.ShortcutKeysEditor" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ShortcutKeysEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the given object value using the editor style provided by the &lt;see cref=&quot;M:System.Windows.Forms.Design.ShortcutKeysEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)&quot; /&gt; method.">Modifie la valeur de l'objet spécifié à l'aide du style de l'éditeur fourni par la méthode <see cref="M:System.Windows.Forms.Design.ShortcutKeysEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; that this editor can use to obtain services.">
        <see cref="T:System.IServiceProvider" /> pouvant être utilisé par cet éditeur pour obtenir des services.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to edit.">
        <see cref="T:System.Object" /> à modifier.</param>
      <returns vsli:raw="The new value of the &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Nouvelle valeur de <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ShortcutKeysEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editor style used by the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Windows.Forms.Design.ShortcutKeysEditor.EditValue*&quot;&gt;&lt;/xref&gt; method.">Obtient le style de l'éditeur utilisé par la méthode <see cref="Overload:System.Windows.Forms.Design.ShortcutKeysEditor.EditValue" />.</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour obtenir des informations de contexte supplémentaires.</param>
      <returns vsli:raw="A &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle&quot;&gt;&lt;/xref&gt; value that indicates the style of editor used by the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Windows.Forms.Design.ShortcutKeysEditor.EditValue*&quot;&gt;&lt;/xref&gt; method.">Valeur <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> indiquant le style de l’éditeur utilisé par la méthode <see cref="Overload:System.Windows.Forms.Design.ShortcutKeysEditor.EditValue" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ThemedScrollbarMode">
      <summary vsli:raw="A value that indicates whether the scrollbars of a window and its children will be themed when displayed in the Visual Studio designer.">Une valeur qui indique si les barres de défilement d'une fenêtre et de ses enfants seront à thème une fois affichées dans le concepteur Visual Studio.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarMode.All">
      <summary vsli:raw="The window and all of its children will have themed scrollbars.">La fenêtre et tous ses enfants auront des barres de défilement à thème.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarMode.None">
      <summary vsli:raw="The window and all of its children will not be themed.">La fenêtre et tous ses enfants ne seront pas à thème.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarMode.OnlyTopLevel">
      <summary vsli:raw="The window will have themed scrollbars but all of its children will not be themed.">La fenêtre aura des barres de défilement à thème mais tous ses enfants ne seront pas à thème.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ThemedScrollbarWindow">
      <summary vsli:raw="Represents a window and a value that indicates how its scrollbars should be themed when displayed in the Visual Studio designer.">Représente une fenêtre et une valeur qui indique comment les barres de défilement doivent être à thème une fois affichées dans le concepteur Visual Studio.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarWindow.Handle">
      <summary vsli:raw="The window handle.">Handle de fenêtre.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarWindow.Mode">
      <summary vsli:raw="A value that indicates how the window scrollbars should be themed when displayed in the Visual Studio designer.">Une valeur qui indique comment les barres de défilement de fenêtre doivent être à thème une fois affichées dans le concepteur Visual Studio.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService">
      <summary vsli:raw="Provides access to get and set option values for a Windows Forms designer.">Permet d'obtenir et de définir les valeurs des options d'un concepteur Windows Forms.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.WindowsFormsDesignerOptionService.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService&quot; /&gt; class.">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.WindowsFormsDesignerOptionService.PopulateOptionCollection(System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection&quot; /&gt;.">Remplit un <see cref="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" />.</summary>
      <param name="options" vsli:raw="The collection to populate.">Collection à remplir.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.WindowsFormsDesignerOptionService.CompatibilityOptions">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.Design.DesignerOptions&quot; /&gt; exposed by the &lt;see cref=&quot;T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService&quot; /&gt;.">Obtient le <see cref="T:System.Windows.Forms.Design.DesignerOptions" /> exposé par <see cref="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.DesignerOptions&quot; /&gt; exposed by the &lt;see cref=&quot;T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService&quot; /&gt;.">Le <see cref="T:System.Windows.Forms.Design.DesignerOptions" /> exposé par <see cref="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService" />.</returns>
    </member>
  </members>
</doc>