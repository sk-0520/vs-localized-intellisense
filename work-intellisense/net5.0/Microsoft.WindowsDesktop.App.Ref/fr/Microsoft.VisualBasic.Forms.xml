<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.VisualBasic.Forms</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase">
      <summary>Fournit des propriétés, méthodes et événements en rapport avec l'application actuelle.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeCulture(System.String)">
      <summary>Change la culture utilisée par le thread actuel pour le traitement et la mise en forme de chaînes.</summary>
      <param name="cultureName">
        <see langword="String" />. Nom de la culture sous la forme d'une chaîne. Pour obtenir la liste des noms possibles, consultez <see cref="T:System.Globalization.CultureInfo" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cultureName" /> a la valeur <see langword="Nothing" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="cultureName" /> n’est pas un nom de culture valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeUICulture(System.String)">
      <summary>Change la culture que le thread actuel utilise pour récupérer des ressources spécifiques à la culture.</summary>
      <param name="cultureName">
        <see langword="String" />. Nom de la culture sous la forme d'une chaîne. Pour obtenir la liste des noms possibles, consultez <see cref="T:System.Globalization.CultureInfo" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cultureName" /> a la valeur <see langword="Nothing" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="cultureName" /> n’est pas un nom de culture valide.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.GetEnvironmentVariable(System.String)">
      <summary>Retourne la valeur de la variable d'environnement spécifiée.</summary>
      <param name="name">
        <see langword="String" /> contenant le nom de la variable d'environnement.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> a la valeur <see langword="Nothing" />.</exception>
      <exception cref="T:System.ArgumentException">La variable d'environnement spécifiée par <paramref name="name" /> n'existe pas.</exception>
      <exception cref="T:System.Security.SecurityException">Le code appelant ne dispose pas de <see cref="T:System.Security.Permissions.EnvironmentPermission" /> avec un accès <see langword="Read" />.</exception>
      <returns>
        <see langword="String" /> contenant la valeur de la variable d'environnement avec le nom <paramref name="name" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Culture">
      <summary>Obtient la culture que le thread actuel utilise pour le traitement et la mise en forme de chaînes.</summary>
      <returns>Objet <see cref="T:System.Globalization.CultureInfo" /> qui représente la culture que le thread actuel utilise pour le traitement et la mise en forme de chaînes.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info">
      <summary>Obtient un objet qui fournit des propriétés destinées à obtenir des informations à propos de l'assembly de l'application, telles que le numéro de version, la description, et ainsi de suite.</summary>
      <returns>Objet <see cref="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" /> pour l'application en cours.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Log">
      <summary>Obtient un objet qui fournit des propriétés et des méthodes pour écrire des informations liées aux événements et exceptions aux écouteurs de journalisation de l'application.</summary>
      <returns>Objet <see cref="T:Microsoft.VisualBasic.Logging.Log" /> pour l'application en cours.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.UICulture">
      <summary>Obtient la culture que le thread actuel utilise pour récupérer des ressources spécifiques à la culture.</summary>
      <returns>Objet <see cref="T:System.Globalization.CultureInfo" /> qui représente la culture que le thread actuel utilise pour récupérer des ressources spécifiques à la culture.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo">
      <summary>Fournit des propriétés pour obtenir des informations relatives à l'application, telles que le numéro de version, la description, les assemblys chargés, et ainsi de suite.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.#ctor(System.Reflection.Assembly)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" /> à l'aide des informations d'assembly spécifiées.</summary>
      <param name="currentAssembly">
        <see cref="T:System.Reflection.Assembly" />. Assembly pour lequel obtenir ces informations.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName">
      <summary>Obtient le nom, sans extension, du fichier d'assembly pour l'application.</summary>
      <returns>
        <see langword="String" /> contenant le nom du fichier.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.CompanyName">
      <summary>Obtient le nom de la société associée à l'application.</summary>
      <exception cref="T:System.InvalidOperationException">L'assembly n'a pas d'attribut <see cref="T:System.Reflection.AssemblyCompanyAttribute" />.</exception>
      <returns>
        <see langword="String" /> qui contient le nom de la société associée à l'application.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Copyright">
      <summary>Obtient la mention des droits d'auteur associée à l'application.</summary>
      <exception cref="T:System.InvalidOperationException">L'assembly n'a pas d'attribut <see cref="T:System.Reflection.AssemblyCopyrightAttribute" />.</exception>
      <returns>
        <see langword="String" /> contenant la mention des droits d'auteur associée à l'application.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Description">
      <summary>Obtient la description associée à l'application.</summary>
      <exception cref="T:System.InvalidOperationException">L'assembly n'a pas d'attribut <see cref="T:System.Reflection.AssemblyDescriptionAttribute" />.</exception>
      <returns>
        <see langword="String" /> contenant la description associée à l'application.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.DirectoryPath">
      <summary>Obtient le répertoire dans lequel l'application est stockée.</summary>
      <returns>
        <see langword="String" /> qui contient le répertoire dans lequel l'application est stockée.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.LoadedAssemblies">
      <summary>Obtient une collection de tous les assemblys chargés par l'application.</summary>
      <exception cref="T:System.AppDomainUnloadedException">Le domaine d'application n'est pas chargé.</exception>
      <returns>
        <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> de <see cref="T:System.Reflection.Assembly" /> contenant tous les assemblys chargés par l'application.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.ProductName">
      <summary>Obtient le nom du produit associé à l'application.</summary>
      <exception cref="T:System.InvalidOperationException">L'assembly n'a pas d'attribut <see cref="T:System.Reflection.AssemblyProductAttribute" />.</exception>
      <returns>
        <see langword="String" /> contenant le nom du produit associé à l'application.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.StackTrace">
      <summary>Obtient les informations actuelles sur la trace de la pile.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">Les informations de trace de la pile demandées sont hors limites.</exception>
      <returns>
        <see langword="String" /> contenant les informations actuelles sur la trace de la pile. La valeur de retour peut être <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Title">
      <summary>Obtient le titre associé à l'application.</summary>
      <exception cref="T:System.InvalidOperationException">L'assembly n'a pas d'attribut <see cref="T:System.Reflection.AssemblyTitleAttribute" />.</exception>
      <returns>
        <see langword="String" /> contenant le <see cref="T:System.Reflection.AssemblyTitleAttribute" /> associé à l'application.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Trademark">
      <summary>Obtient la mention de marque associée à l'application.</summary>
      <exception cref="T:System.InvalidOperationException">L'assembly n'a pas d'attribut <see cref="T:System.Reflection.AssemblyTrademarkAttribute" />.</exception>
      <returns>
        <see langword="String" /> contenant la mention de marque associée à l'application.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Version">
      <summary>Obtient le numéro de version de l'application.</summary>
      <exception cref="T:System.Security.SecurityException">L'application n'a pas les autorisations suffisantes pour accéder à la version de l'assembly.</exception>
      <returns>Objet <see cref="T:System.Version" /> contenant le numéro de version de l'application.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.WorkingSet">
      <summary>Obtient la quantité de mémoire physique mappée au contexte du processus.</summary>
      <exception cref="T:System.Security.SecurityException">Il existe une situation de confiance partielle et l'utilisateur ne dispose pas des autorisations nécessaires.</exception>
      <returns>
        <see langword="Long" /> contenant le nombre d'octets de mémoire physique mappée au contexte du processus.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode">
      <summary>Indique la façon dont une application Visual Basic authentifie l'utilisateur pour l'objet <see langword="My.User" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.ApplicationDefined">
      <summary>Le constructeur <see cref="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor(Microsoft.VisualBasic.ApplicationServices.AuthenticationMode)" /> n'initialise pas l'entité de sécurité pour le thread principal de l'application. L'application doit initialiser l'entité de sécurité pour le thread principal de l'application.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows">
      <summary>Le constructeur <see cref="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor(Microsoft.VisualBasic.ApplicationServices.AuthenticationMode)" /> initialise l'entité de sécurité pour le thread principal de l'application avec les informations utilisateur Windows de l'utilisateur actuel.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException">
      <summary>Cette exception est levée lorsqu'une instance suivante d'une application à instance unique est incapable de se connecter à la première instance de l'application.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException" /> avec des données sérialisées.</summary>
      <param name="info">Objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> qui contient les données d’objet sérialisées relatives à l’exception levée.</param>
      <param name="context">Objet <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui contient les informations contextuelles relatives à la source ou à la destination.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException" /> avec un message d'erreur spécifié.</summary>
      <param name="message">Message qui décrit l'erreur.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.ApplicationServices.CantStartSingleInstanceException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Objet <see cref="T:System.String" /> décrivant l'erreur.</param>
      <param name="inner">Objet <see cref="T:System.Exception" /> qui constitue la cause de l'exception actuelle. Si le paramètre <see cref="P:System.Exception.InnerException" /> n'est pas une référence null (<see langword="Nothing" /> en Visual Basic), l'exception actuelle est levée dans un bloc <see langword="Catch" /> qui gère l'exception interne.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase">
      <summary>Fournit des propriétés, méthodes et événements en rapport avec l'application actuelle.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase" />.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs">
      <summary>Obtient une collection contenant les arguments de ligne de commande sous la forme de chaînes pour l'application actuelle.</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> de <see langword="String" />, contenant les arguments de ligne de commande sous la forme de chaînes pour l'application actuelle.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.InternalCommandLine">
      <summary>Définit les valeurs à utiliser comme arguments de ligne de commande de l'application actuelle.</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> de <see langword="String" />, contenant les chaînes à utiliser comme arguments de ligne de commande pour l'application actuelle.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException">
      <summary>Cette exception est levée par le modèle d'application de Visual Basic lorsque la propriété <see cref="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm" /> n'a pas été définie.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException" /> avec des données sérialisées.</summary>
      <param name="info">Objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> qui contient les données d’objet sérialisées relatives à l’exception levée.</param>
      <param name="context">Objet <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui contient les informations contextuelles relatives à la source ou à la destination.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException" /> avec un message d'erreur spécifié.</summary>
      <param name="message">Message qui décrit l'erreur.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.ApplicationServices.NoStartupFormException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Objet <see cref="T:System.String" /> décrivant l'erreur.</param>
      <param name="inner">Objet <see cref="T:System.Exception" /> qui constitue la cause de l'exception actuelle. Si le paramètre <see cref="P:System.Exception.InnerException" /> n'est pas une référence Null (<see langword="Nothing" /> en Visual Basic), l'exception en cours est levée dans un bloc catch gérant l'exception interne.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.ShutdownEventHandler">
      <summary>Représente la méthode qui gérera l'événement <see langword="My.Application.Shutdown" />.</summary>
      <param name="sender">Source de l'événement.</param>
      <param name="e">Objet <see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.ShutdownMode">
      <summary>Indique quelle condition doit provoquer la fermeture d'une application Windows Forms.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterAllFormsClose">
      <summary>Fermez uniquement après la fermeture du dernier formulaire.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ApplicationServices.ShutdownMode.AfterMainFormCloses">
      <summary>Fermez lorsque le formulaire principal se ferme.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs">
      <summary>Fournit des données pour l'événement <see langword="My.Application.Startup" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.String})">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs" />.</summary>
      <param name="args">Objet <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> qui contient les arguments de ligne de commande de l'application.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine">
      <summary>Obtient les arguments de ligne de commande de l'application.</summary>
      <returns>Objet <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> qui contient les arguments de ligne de commande de l'application.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.StartupEventHandler">
      <summary>Représente la méthode qui gérera l'événement <see langword="My.Application.Startup" />.</summary>
      <param name="sender">Source de l'événement.</param>
      <param name="e">Objet <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs">
      <summary>Fournit des données pour l'événement <see langword="My.Application.StartupNextInstance" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.String},System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs" />.</summary>
      <param name="args">Objet <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> qui contient les arguments de ligne de commande de l'instance d'application suivante.</param>
      <param name="bringToForegroundFlag">
        <see cref="T:System.Boolean" /> qui indique si la première instance de l'application doit être apportée au premier plan au moment de la fermeture du gestionnaire d'exceptions.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.BringToForeground">
      <summary>Indique si la première instance de l'application doit être apportée au premier plan au moment de la fermeture du gestionnaire d'exceptions.</summary>
      <returns>
        <see cref="T:System.Boolean" /> qui indique si la première instance de l'application doit être apportée au premier plan au moment de la fermeture du gestionnaire d'exceptions.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.CommandLine">
      <summary>Obtient les arguments de ligne de commande de l'instance d'application suivante.</summary>
      <returns>Objet <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> qui contient les arguments de ligne de commande de l'instance d'application suivante.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventHandler">
      <summary>Représente la méthode qui gérera l'événement <see langword="My.Application.StartupNextInstance" />.</summary>
      <param name="sender">Source de l'événement.</param>
      <param name="e">Objet <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs">
      <summary>Fournit des données pour l'événement <see langword="My.Application.UnhandledException" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.#ctor(System.Boolean,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs" />.</summary>
      <param name="exitApplication">
        <see cref="T:System.Boolean" /> qui indique si l'application doit se fermer au moment de la fermeture du gestionnaire d'exceptions.</param>
      <param name="exception">
        <see cref="T:System.Exception" /> survenue.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication">
      <summary>Indique si l'application doit se fermer au moment de la fermeture du gestionnaire d'exceptions.</summary>
      <returns>
        <see cref="T:System.Boolean" /> qui indique si l'application doit se fermer au moment de la fermeture du gestionnaire d'exceptions.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventHandler">
      <summary>Représente la méthode qui gérera l'événement <see langword="My.Application.UnhandledException" />.</summary>
      <param name="sender">Source de l'événement.</param>
      <param name="e">Objet <see cref="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.User">
      <summary>Fournit l'accès aux informations concernant l'utilisateur actuel.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.User.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.ApplicationServices.User" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.User.IsInRole(System.String)">
      <summary>Détermine si l'utilisateur actuel appartient au rôle spécifié.</summary>
      <param name="role">Nom du rôle pour lequel l'appartenance (membership) doit être vérifiée.</param>
      <returns>
        <see langword="True" /> si l'utilisateur actuel est un membre du rôle spécifié ; sinon, <see langword="False" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal">
      <summary>Obtient ou définit l'entité de sécurité en cours (pour une sécurité basée sur les rôles).</summary>
      <exception cref="T:System.Security.SecurityException">L’appelant n’a pas l’autorisation nécessaire pour définir le principal.</exception>
      <returns>Valeur <see cref="T:System.Security.Principal.IPrincipal" /> représentant le contexte de sécurité.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal">
      <summary>Obtient ou définit l'objet d'entité de sécurité représentant l'utilisateur en cours.</summary>
      <returns>Objet <see cref="T:System.Security.Principal.IPrincipal" /> représentant l'utilisateur en cours.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated">
      <summary>Obtient une valeur qui indique si l'utilisateur a été authentifié.</summary>
      <returns>
        <see langword="True" /> si l'utilisateur a été identifié ; sinon <see langword="False" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.User.Name">
      <summary>Obtient le nom de l'utilisateur actuel.</summary>
      <returns>
        <see langword="String" />. Nom de l'utilisateur actuel.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase">
      <summary>Fournit des propriétés, méthodes et événements en rapport avec l'application actuelle.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.NetworkAvailabilityChanged">
      <summary>Se produit lorsque la disponibilité du réseau évolue.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Shutdown">
      <summary>Se produit lorsque l'application se ferme.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup">
      <summary>Se produit lorsque l'application démarre.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance">
      <summary>Se produit lors de la tentative de démarrer une application à instance unique et que l'application est déjà active.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException">
      <summary>Survient si l'application rencontre une exception non gérée.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor(Microsoft.VisualBasic.ApplicationServices.AuthenticationMode)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" /> avec le mode d'authentification spécifié.</summary>
      <param name="authenticationMode">L’une des valeurs d’énumération qui spécifie le mode d’authentification de l’application.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents">
      <summary>Traite tous les messages Windows présents dans la file d'attente de messages.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen">
      <summary>Masque l'écran de démarrage de l'application.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm">
      <summary>En cas de substitution dans une classe dérivée, permet à un concepteur d'émettre du code qui configure l'écran de démarrage et le formulaire principal.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen">
      <summary>En cas de substitution dans une classe dérivée, permet à un concepteur d'émettre du code qui initialise l'écran de démarrage.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize(System.Collections.ObjectModel.ReadOnlyCollection{System.String})">
      <summary>Définit les styles visuels, les styles d'affichage du texte et l'entité de sécurité en cours pour le thread d'application principal (si l'application utilise l'authentification Windows) et initialise l'écran de démarrage, s'il est défini.</summary>
      <param name="commandLineArgs">Collection en lecture seule contenant les arguments de ligne de commande sous la forme de chaînes pour l’application actuelle.</param>
      <returns>
        <see cref="T:System.Boolean" /> indiquant si le démarrage de l'application doit se poursuivre.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun">
      <summary>Fournit le point de départ lorsque l'application principale est prête à commencer son exécution, une fois l'initialisation faite.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnShutdown">
      <summary>Lors de la substitution dans une classe dérivée, autorise le code à s'exécuter lorsque l'application se ferme.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartup(Microsoft.VisualBasic.ApplicationServices.StartupEventArgs)">
      <summary>Lors de la substitution dans une classe dérivée, autorise le code à s'exécuter lorsque l'application démarre.</summary>
      <param name="eventArgs">Arguments de ligne de commande de l’application et indique si le démarrage de l’application doit être annulé.</param>
      <returns>
        <see cref="T:System.Boolean" /> qui indique si l'application doit poursuivre son démarrage.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartupNextInstance(Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs)">
      <summary>En cas de substitution dans une classe dérivée, permet au code de s'exécuter au démarrage d'une instance suivante d'une application à instance unique.</summary>
      <param name="eventArgs">Arguments de ligne de commande de l’instance d’application suivante et indique si la première instance de l’application doit être placée au premier plan lors de la fermeture du gestionnaire d’exceptions.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnUnhandledException(Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs)">
      <summary>En cas de substitution dans une classe dérivée, permet au code de s'exécuter lorsqu'une exception non gérée se produit dans l'application.</summary>
      <param name="e">Données de l'événement.</param>
      <returns>
        <see cref="T:System.Boolean" /> qui indique si l'événement <see cref="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException" /> a été déclenché.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run(System.String[])">
      <summary>Définit et démarre le modèle d'application Visual Basic.</summary>
      <param name="commandLine">Ligne de commande provenant de <see langword="Sub Main" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen">
      <summary>Détermine si l'application a un écran de démarrage défini, et si tel est le cas, l'affiche.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ApplicationContext">
      <summary>Obtient l'objet <see cref="T:System.Windows.Forms.ApplicationContext" /> pour le thread actuel d'une application Windows Forms.</summary>
      <returns>Informations contextuelles sur le thread actuel.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.EnableVisualStyles">
      <summary>Détermine si cette application doit utiliser le style Windows XP pour les fenêtres, commandes, etc.</summary>
      <returns>Une valeur <see cref="T:System.Boolean" /> qui indique si cette application doit utiliser le style Windows XP pour les fenêtres, contrôles et autres.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.IsSingleInstance">
      <summary>Obtient ou définit une valeur qui indique si cette application est une application à instance unique.</summary>
      <returns>
        <see langword="True" /> pour indiquer que cette application est une application à instance unique ; Sinon, <see langword="False" /> .</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm">
      <summary>Obtient ou définit le formulaire principal de cette application.</summary>
      <returns>Formulaire principal de cette application.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime">
      <summary>Obtient ou définit le laps de temps minimal, en millisecondes, pendant lequel l’écran de démarrage est affiché.</summary>
      <returns>Durée minimale, en millisecondes, pendant laquelle l'écran de démarrage s'affiche.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OpenForms">
      <summary>Obtient une collection des formulaires ouverts de toute l'application.</summary>
      <returns>Collection qui contient tous les formulaires ouverts de l’application.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SaveMySettingsOnExit">
      <summary>Détermine si l'application enregistre les paramètres utilisateurs à la fermeture.</summary>
      <returns>
        <see langword="True" /> pour indiquer que l’application enregistre les paramètres utilisateur à la sortie. Sinon, <see langword="False" /> pour indiquer que les paramètres ne sont pas enregistrés implicitement.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShutdownStyle">
      <summary>Détermine ce qui arrive lorsque le formulaire principal de l'application se ferme.</summary>
      <returns>L’une des valeurs d’énumération qui indique ce que l’application doit faire lorsque le formulaire principal se ferme.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen">
      <summary>Obtient ou définit l'écran de démarrage de cette application.</summary>
      <exception cref="T:System.ArgumentNullException">La même valeur est assignée à cette propriété et à la propriété <see cref="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm" />.</exception>
      <returns>L’écran de démarrage de l’application.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering">
      <summary>En cas de substitution dans une classe dérivée, cette propriété permet à un concepteur de spécifier le moteur de rendu de texte par défaut pour les formulaires de l'application.</summary>
      <returns>
        <see langword="Boolean" />. La valeur <see langword="False" /> indique que l'application doit utiliser le moteur de rendu de texte par défaut de Visual Basic 2005. La valeur <see langword="True" /> indique que l'application doit utiliser le moteur de rendu de texte de Visual Basic .NET 2002 et Visual Basic .NET 2003.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.AudioPlayMode">
      <summary>Indique comment lire les sons lors de l'appel des méthodes audio.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AudioPlayMode.Background">
      <summary>Entraîne la lecture du son en arrière-plan par la méthode <see langword="My.Computer.Audio.Play" />. Le code appelant continue à s'exécuter.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AudioPlayMode.BackgroundLoop">
      <summary>Entraîne la lecture du son en arrière-plan par la méthode <see langword="My.Computer.Audio.Play" /> jusqu'à ce que la méthode <see cref="M:Microsoft.VisualBasic.Devices.Audio.Stop" /> soit appelée. Le code appelant continue à s'exécuter.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AudioPlayMode.WaitToComplete">
      <summary>Entraîne la lecture du son par la méthode <see langword="My.Computer.Audio.Play" /> et attend que celle-ci soit terminée pour que le code appelant continue à s'exécuter.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.HostServices">
      <summary>Retourne une référence et des informations relatives à la fenêtre hôte active de Visual Basic.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.HostServices.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.CompilerServices.HostServices" />.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.CompilerServices.HostServices.VBHost">
      <summary>Obtient l'objet hôte actif de Visual Basic.</summary>
      <returns>Objet <see cref="P:Microsoft.VisualBasic.CompilerServices.HostServices.VBHost" /> qui retourne une référence et des informations relatives à la fenêtre hôte active de Visual Basic.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.IVbHost">
      <summary>Représente une fenêtre hôte de Visual Basic.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IVbHost.GetParentWindow">
      <summary>Obtient la Fenêtre hôte de l'environnement Visual Basic actuel.</summary>
      <returns>Fenêtre hôte de l'environnement Visual Basic actuel.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IVbHost.GetWindowTitle">
      <summary>Obtient le titre de la fenêtre hôte de l'environnement Visual Basic actuel.</summary>
      <returns>Titre de la fenêtre hôte de l'environnement Visual Basic actuel.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Audio">
      <summary>Fournit des méthodes permettant de lire des sons.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.Devices.Audio" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.Play(System.Byte[],Microsoft.VisualBasic.AudioPlayMode)">
      <summary>Lit un fichier audio .wav.</summary>
      <param name="data">Tableau <see langword="Byte" /> qui représente le fichier audio.</param>
      <param name="playMode">Mode <see cref="T:Microsoft.VisualBasic.AudioPlayMode" /> pour la lecture du son. Par défaut, <see langword="AudioPlayMode.Background" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> a la valeur <see langword="Nothing" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="playMode" /> ne fait pas partie des valeurs d'énumération <see cref="T:Microsoft.VisualBasic.AudioPlayMode" />.</exception>
      <exception cref="T:System.Security.SecurityException">Il existe une situation d'un niveau de confiance partiel dans laquelle l'utilisateur ne dispose des autorisations nécessaires.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.Play(System.IO.Stream,Microsoft.VisualBasic.AudioPlayMode)">
      <summary>Lit un fichier audio .wav.</summary>
      <param name="stream">Tableau <see cref="T:System.IO.Stream" /> qui représente le fichier audio.</param>
      <param name="playMode">Mode <see cref="T:Microsoft.VisualBasic.AudioPlayMode" /> pour la lecture du son. Par défaut, <see langword="AudioPlayMode.Background" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> a la valeur <see langword="Nothing" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="playMode" /> ne fait pas partie des valeurs d'énumération <see cref="T:Microsoft.VisualBasic.AudioPlayMode" />.</exception>
      <exception cref="T:System.Security.SecurityException">Il existe une situation d'un niveau de confiance partiel dans laquelle l'utilisateur ne dispose des autorisations nécessaires.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.Play(System.String)">
      <summary>Lit un fichier audio .wav.</summary>
      <param name="location">
        <see langword="String" /> contenant le nom du fichier son.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="location" /> est une chaîne vide.</exception>
      <exception cref="T:System.IO.IOException">L'utilisateur n'a pas les autorisations suffisantes pour accéder au fichier nommé par <paramref name="location" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le chemin d'accès du fichier est incorrect dans <paramref name="location" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le nom du chemin d'accès dans <paramref name="location" /> est trop long.</exception>
      <exception cref="T:System.Security.SecurityException">Il existe une situation d'un niveau de confiance partiel dans laquelle l'utilisateur ne dispose des autorisations nécessaires.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.Play(System.String,Microsoft.VisualBasic.AudioPlayMode)">
      <summary>Lit un fichier audio .wav.</summary>
      <param name="location">
        <see langword="String" /> contenant le nom du fichier son.</param>
      <param name="playMode">Mode <see cref="T:Microsoft.VisualBasic.AudioPlayMode" /> pour la lecture du son. Par défaut, <see langword="AudioPlayMode.Background" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="location" /> est une chaîne vide.</exception>
      <exception cref="T:System.IO.IOException">L'utilisateur n'a pas les autorisations suffisantes pour accéder au fichier nommé par <paramref name="location" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le chemin d'accès du fichier est incorrect dans <paramref name="location" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le nom du chemin d'accès dans <paramref name="location" /> est trop long.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="playMode" /> ne fait pas partie des valeurs d'énumération <see cref="T:Microsoft.VisualBasic.AudioPlayMode" />.</exception>
      <exception cref="T:System.Security.SecurityException">Il existe une situation d'un niveau de confiance partiel dans laquelle l'utilisateur ne dispose des autorisations nécessaires.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.PlaySystemSound(System.Media.SystemSound)">
      <summary>Lit un son système.</summary>
      <param name="systemSound">Objet <see cref="T:System.Media.SystemSound" /> représentant le son système à lire.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="systemSound" /> a la valeur <see langword="Nothing" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Audio.Stop">
      <summary>Arrête la lecture d'un son en arrière-plan.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Clock">
      <summary>Fournit des propriétés permettant d’accéder à l’heure locale actuelle et à l’heure UTC (Universal Coordinated Time), équivalent à l’heure GMT (Greenwich Mean Time), à partir de l’horloge système.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Clock.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.Devices.Clock" />.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Clock.GmtTime">
      <summary>Obtient un objet <see langword="Date" /> qui contient la date et l'heure locales actuelles sur l'ordinateur, exprimées en temps universel (UTC ou GMT).</summary>
      <returns>Objet <see langword="Date" /> qui contient la date et l'heure actuelles exprimées en temps UTC (GMT).</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Clock.LocalTime">
      <summary>Obtient un objet <see langword="Date" /> qui contient la date et l'heure locales actuelles sur cet ordinateur.</summary>
      <returns>Objet <see langword="Date" /> qui contient la date et l'heure locales actuelles.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Clock.TickCount">
      <summary>Obtient le nombre de millisecondes de l'horloge système de l'ordinateur.</summary>
      <returns>
        <see langword="Integer" /> contenant le nombre de millisecondes de l'horloge système de l'ordinateur.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Computer">
      <summary>Fournit des propriétés permettant de manipuler des composants informatiques tels que le son, l’horloge, le clavier, le système de fichiers, etc.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Computer.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.Devices.Computer" />.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Audio">
      <summary>Obtient un objet qui fournit des propriétés pour les méthodes destinées à la lecture des sons.</summary>
      <returns>Objet <see langword="My.Computer.Audio" /> pour l'ordinateur.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Clipboard">
      <summary>Obtient un objet qui fournit des méthodes pour manipuler le Presse-papiers.</summary>
      <returns>Objet <see langword="My.Computer.Clipboard" /> pour l'ordinateur.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Keyboard">
      <summary>Obtient un objet qui fournit des propriétés pour accéder à l'état actuel du clavier, par exemple les touches actuellement enfoncées et fournit une méthode destinée à envoyer des séquences de touches à la fenêtre active.</summary>
      <returns>Objet <see langword="My.Computer.Keyboard" /> pour l'ordinateur.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Mouse">
      <summary>Obtient un objet qui fournit des propriétés pour obtenir des informations concernant le format et la configuration de la souris installée sur l'ordinateur local.</summary>
      <returns>Objet <see langword="My.Computer.Mouse" /> pour l'ordinateur.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Computer.Screen">
      <summary>Obtient l'objet <see cref="T:System.Windows.Forms.Screen" /> qui représente l'écran principal de l'ordinateur.</summary>
      <returns>Objet <see cref="T:System.Windows.Forms.Screen" /> qui représente l'écran principal de l'ordinateur.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.ComputerInfo">
      <summary>Fournit des propriétés permettant d’obtenir des informations sur la mémoire, les assemblys chargés, le nom et le système d’exploitation de l’ordinateur.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.ComputerInfo.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.Devices.ComputerInfo" />.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory">
      <summary>Obtient la quantité totale de mémoire physique libre de l'ordinateur.</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">L'application ne peut pas obtenir l'état de la mémoire.</exception>
      <returns>
        <see langword="ULong" /> contenant le nombre d'octets de mémoire physique libre de l'ordinateur.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory">
      <summary>Obtient la quantité totale d'espace d'adresse virtuelle libre de l'ordinateur.</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">L'application ne peut pas obtenir l'état de la mémoire.</exception>
      <returns>
        <see langword="ULong" /> contenant le nombre d'octets d'espace d'adresse virtuelle libre de l'ordinateur.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture">
      <summary>Obtient la culture de l'interface utilisateur installée avec le système d'exploitation.</summary>
      <returns>Un objet <see cref="T:System.Globalization.CultureInfo" /> représente la culture de l'interface utilisateur installée sur l'ordinateur.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSFullName">
      <summary>Obtient le nom complet du système d'exploitation.</summary>
      <exception cref="T:System.Security.SecurityException">Le code appelant n'a pas une confiance totale.</exception>
      <returns>
        <see langword="String" /> contenant le nom du système d'exploitation.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform">
      <summary>Reçoit l'identificateur de plateforme pour le système d'exploitation de l'ordinateur.</summary>
      <exception cref="T:System.ExecutionEngineException">L'application ne peut pas obtenir les informations sur la plateforme du système d'exploitation.</exception>
      <returns>
        <see langword="String" /> contenant l'identificateur de plateforme pour le système d'exploitation de l'ordinateur, choisi dans les noms des membres de l'énumération <see cref="T:System.PlatformID" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion">
      <summary>Obtient la version du système d'exploitation de l'ordinateur.</summary>
      <exception cref="T:System.ExecutionEngineException">L'application ne peut pas obtenir les informations relatives à la version du système d'exploitation.</exception>
      <returns>
        <see langword="String" /> contenant le numéro de version actuelle du système d'exploitation.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory">
      <summary>Obtient la quantité totale de mémoire physique de l'ordinateur.</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">L'application ne peut pas obtenir l'état de la mémoire.</exception>
      <returns>
        <see langword="ULong" /> contenant le nombre d'octets de mémoire physique de l'ordinateur.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory">
      <summary>Obtient la quantité totale d'espace d'adresse virtuelle disponible de l'ordinateur.</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">L'application ne peut pas obtenir l'état de la mémoire.</exception>
      <returns>
        <see langword="ULong" /> contenant le nombre d'octets d'espace d'adresse virtuelle disponible de l'ordinateur.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Keyboard">
      <summary>Fournit des propriétés utilisées pour accéder à l’état actuel du clavier, par exemple pour savoir quelles touches sont actuellement utilisées, et fournit une méthode permettant d’envoyer des séquences de touches à la fenêtre active.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Keyboard.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.Devices.Keyboard" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String)">
      <summary>Envoie une ou plusieurs séquences de touches à la fenêtre active, comme si elle était tapée sur le clavier.</summary>
      <param name="keys">
        <see langword="String" /> qui définit les touches à envoyer.</param>
      <exception cref="T:System.Security.SecurityException">Il existe une situation d'un niveau de confiance partiel dans laquelle l'utilisateur ne dispose des autorisations nécessaires.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String,System.Boolean)">
      <summary>Envoie une ou plusieurs séquences de touches à la fenêtre active, comme si elle était tapée sur le clavier.</summary>
      <param name="keys">
        <see langword="String" /> qui définit les touches à envoyer.</param>
      <param name="wait">Optionnel. Valeur <see langword="Boolean" /> qui indique s'il convient ou non d'attendre que les séquences de touches soient traitées avant que l'application continue. <see langword="True" /> par défaut.</param>
      <exception cref="T:System.Security.SecurityException">Il existe une situation d'un niveau de confiance partiel dans laquelle l'utilisateur ne dispose des autorisations nécessaires.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown">
      <summary>Obtient une valeur qui indique si la touche ALT est enfoncée.</summary>
      <returns>
        <see langword="True" /> Si la touche ALT est enfoncée ; Sinon, <see langword="False" /> .</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Keyboard.CapsLock">
      <summary>Obtient une valeur qui indique si la touche VERR. MAJ est activée.</summary>
      <returns>
        <see langword="Boolean" />Valeur : <see langword="True" /> si le verrouillage des majuscules est activé ; sinon, <see langword="False" /> .</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown">
      <summary>Obtient une valeur qui indique si une touche CTRL est enfoncée.</summary>
      <returns>
        <see langword="True" /> Si une touche CTRL est enfoncée ; Sinon, <see langword="False" /> .</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Keyboard.NumLock">
      <summary>Obtient une valeur qui indique si la touche VERR. NUM est activée.</summary>
      <returns>
        <see langword="True" /> Si Verr. NUM est activé ; Sinon, <see langword="False" /> .</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Keyboard.ScrollLock">
      <summary>Obtient une valeur <see langword="Boolean" /> indiquant si la touche ARRÊT DÉFIL. est activée.</summary>
      <returns>
        <see langword="True" /> Si le verrou de défilement est activé ; Sinon, <see langword="False" /> .</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown">
      <summary>Obtient une valeur qui indique si une touche MAJ est enfoncée.</summary>
      <returns>
        <see langword="True" /> Si une touche Maj est enfoncée ; Sinon, <see langword="False" /> .</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Mouse">
      <summary>Fournit des propriétés pour obtenir des informations concernant le format et la configuration de la souris installée sur l'ordinateur local.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Mouse.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.Devices.Mouse" />.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Mouse.ButtonsSwapped">
      <summary>Obtient une valeur <see langword="Boolean" /> qui indique si les fonctions des boutons de souris gauche et droit ont été permutées.</summary>
      <exception cref="T:System.InvalidOperationException">L'ordinateur n'a pas de souris installée.</exception>
      <returns>
        <see langword="Boolean" /> avec une valeur <see langword="True" /> si les fonctionnalités des boutons gauche et droit de la souris ont été permutés ; sinon, <see langword="False" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Mouse.WheelExists">
      <summary>Obtient une valeur <see langword="Boolean" /> qui indique si la souris possède une roue de défilement.</summary>
      <exception cref="T:System.InvalidOperationException">L'ordinateur n'a pas de souris installée.</exception>
      <returns>Boolean avec la valeur <see langword="True" /> si la souris possède une roue de défilement ; sinon <see langword="False" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines">
      <summary>Obtient un nombre qui indique la quantité de défilement lorsque la roulette de la souris se déplace d'une encoche.</summary>
      <exception cref="T:System.InvalidOperationException">La souris n'a pas de roulette de défilement.</exception>
      <returns>
        <see langword="Integer" /> qui indique la quantité de défilement lorsque la roulette de la souris se déplace d'une encoche. Une valeur positive indique le nombre de lignes de défilement, alors qu'une valeur négative indique le défilement d'un écran à la fois.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.Network">
      <summary>Fournit une propriété, un événement et des méthodes pour interagir avec le réseau auquel l'ordinateur est connecté.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged">
      <summary>Se produit lorsque la disponibilité du réseau évolue.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.Devices.Network" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String)">
      <summary>Télécharge le fichier distant spécifié et l'enregistre à l'emplacement spécifié.</summary>
      <param name="address">Chemin d'accès au fichier à télécharger, y compris nom de fichier et adresse d'hôte.</param>
      <param name="destinationFileName">Nom et chemin d'accès du fichier téléchargé.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> se termine par une barre oblique finale.</exception>
      <exception cref="T:System.TimeoutException">Le serveur ne répond pas dans le délai d'attente par défaut (100 secondes).</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur ne dispose pas des autorisations nécessaires pour réaliser une opération réseau.</exception>
      <exception cref="T:System.Net.WebException">La demande est refusée par le serveur Web cible.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String)">
      <summary>Télécharge le fichier distant spécifié et l'enregistre à l'emplacement spécifié.</summary>
      <param name="address">Chemin d'accès au fichier à télécharger, y compris nom de fichier et adresse d'hôte.</param>
      <param name="destinationFileName">Nom et chemin d'accès du fichier téléchargé.</param>
      <param name="userName">Nom d'utilisateur à authentifier. La valeur par défaut est une chaîne vide, "".</param>
      <param name="password">Mot de passe à authentifier. La valeur par défaut est une chaîne vide, "".</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> se termine par une barre oblique finale.</exception>
      <exception cref="T:System.TimeoutException">Le serveur ne répond pas dans le délai d'attente par défaut (100 secondes).</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur ne dispose pas des autorisations nécessaires pour réaliser une opération réseau.</exception>
      <exception cref="T:System.Net.WebException">La demande est refusée par le serveur Web cible.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)">
      <summary>Télécharge le fichier distant spécifié et l'enregistre à l'emplacement spécifié.</summary>
      <param name="address">Chemin d'accès au fichier à télécharger, y compris nom de fichier et adresse d'hôte.</param>
      <param name="destinationFileName">Nom et chemin d'accès du fichier téléchargé.</param>
      <param name="userName">Nom d'utilisateur à authentifier. La valeur par défaut est une chaîne vide, "".</param>
      <param name="password">Mot de passe à authentifier. La valeur par défaut est une chaîne vide, "".</param>
      <param name="showUI">,<see langword="True" /> pour afficher l'avancement de l'opération ; sinon, <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
      <param name="connectionTimeout">
        <see cref="T:System.Int32" />. Intervalle de délai en millisecondes. La valeur par défaut est de 100 secondes.</param>
      <param name="overwrite">
        <see langword="True" /> pour remplacer les fichiers existants ; sinon, <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> se termine par une barre oblique finale.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="overwrite" /> a la valeur <see langword="False" /> et le fichier de destination existe déjà.</exception>
      <exception cref="T:System.TimeoutException">Le serveur ne répond pas dans le <paramref name="connectionTimeout" /> spécifié.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur ne dispose pas des autorisations nécessaires pour réaliser une opération réseau.</exception>
      <exception cref="T:System.Net.WebException">La demande est refusée par le serveur Web cible.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Télécharge le fichier distant spécifié et l'enregistre à l'emplacement spécifié.</summary>
      <param name="address">Chemin d'accès au fichier à télécharger, y compris nom de fichier et adresse d'hôte.</param>
      <param name="destinationFileName">Nom et chemin d'accès du fichier téléchargé.</param>
      <param name="userName">Nom d'utilisateur à authentifier. La valeur par défaut est une chaîne vide, "".</param>
      <param name="password">Mot de passe à authentifier. La valeur par défaut est une chaîne vide, "".</param>
      <param name="showUI">,<see langword="True" /> pour afficher l'avancement de l'opération ; sinon, <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
      <param name="connectionTimeout">Intervalle de délai en millisecondes. La valeur par défaut est de 100 secondes.</param>
      <param name="overwrite">
        <see langword="True" /> pour remplacer les fichiers existants ; sinon, <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
      <param name="onUserCancel">Spécifie le comportement lorsque l’utilisateur clique sur Annuler ou non dans la boîte de dialogue qui s’affiche à la suite de l’ensemble de <c>ShowUI</c> défini sur <see langword="True" /> . La valeur par défaut est <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> se termine par une barre oblique finale.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="overwrite" /> a la valeur <see langword="False" /> et le fichier de destination existe déjà.</exception>
      <exception cref="T:System.TimeoutException">Le serveur ne répond pas dans le <paramref name="connectionTimeout" /> spécifié.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur ne dispose pas des autorisations nécessaires pour réaliser une opération réseau.</exception>
      <exception cref="T:System.Net.WebException">La demande est refusée par le serveur Web cible.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String)">
      <summary>Télécharge le fichier distant spécifié et l'enregistre à l'emplacement spécifié.</summary>
      <param name="address">Chemin d'accès au fichier à télécharger, y compris nom de fichier et adresse d'hôte.</param>
      <param name="destinationFileName">Nom et chemin d'accès du fichier téléchargé.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> se termine par une barre oblique finale.</exception>
      <exception cref="T:System.TimeoutException">Le serveur ne répond pas dans le délai d'attente par défaut (100 secondes).</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur ne dispose pas des autorisations nécessaires pour réaliser une opération réseau.</exception>
      <exception cref="T:System.Net.WebException">La demande est refusée par le serveur Web cible.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean)">
      <summary>Télécharge le fichier distant spécifié et l'enregistre à l'emplacement spécifié.</summary>
      <param name="address">
        <see langword="String" /> ou <see cref="T:System.Uri" />. Chemin d'accès au fichier à télécharger, y compris nom de fichier et adresse d'hôte.</param>
      <param name="destinationFileName">
        <see langword="String" />. Nom et chemin d'accès du fichier téléchargé.</param>
      <param name="networkCredentials">
        <see cref="T:System.Net.ICredentials" />. Informations d'identification à fournir.</param>
      <param name="showUI">,<see langword="True" /> pour afficher l'avancement de l'opération ; sinon, <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
      <param name="connectionTimeout">Intervalle de délai en millisecondes. La valeur par défaut est de 100 secondes.</param>
      <param name="overwrite">
        <see langword="True" /> pour remplacer les fichiers existants ; sinon, <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> se termine par une barre oblique finale.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="overwrite" /> a la valeur <see langword="False" /> et le fichier de destination existe déjà.</exception>
      <exception cref="T:System.TimeoutException">Le serveur ne répond pas dans le <paramref name="connectionTimeout" /> spécifié.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur ne dispose pas des autorisations nécessaires pour réaliser une opération réseau.</exception>
      <exception cref="T:System.Net.WebException">La demande est refusée par le serveur Web cible.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Télécharge le fichier distant spécifié et l'enregistre à l'emplacement spécifié.</summary>
      <param name="address">Chemin d'accès au fichier à télécharger, y compris nom de fichier et adresse d'hôte.</param>
      <param name="destinationFileName">Nom et chemin d'accès du fichier téléchargé.</param>
      <param name="networkCredentials">Informations d'identification à fournir.</param>
      <param name="showUI">,<see langword="True" /> pour afficher l'avancement de l'opération ; sinon, <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
      <param name="connectionTimeout">Intervalle de délai en millisecondes. La valeur par défaut est de 100 secondes.</param>
      <param name="overwrite">
        <see langword="True" /> pour remplacer les fichiers existants ; sinon, <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
      <param name="onUserCancel">Spécifie le comportement lorsque l’utilisateur clique sur Annuler ou Non dans la boîte de dialogue qui s’affiche après l’affectation de la valeur <paramref name="showUI" /> à <see langword="True" />. La valeur par défaut est <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> se termine par une barre oblique finale.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="overwrite" /> a la valeur <see langword="False" /> et le fichier de destination existe déjà.</exception>
      <exception cref="T:System.TimeoutException">Le serveur ne répond pas dans le <paramref name="connectionTimeout" /> spécifié.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur ne dispose pas des autorisations nécessaires pour réaliser une opération réseau.</exception>
      <exception cref="T:System.Net.WebException">La demande est refusée par le serveur Web cible.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String)">
      <summary>Télécharge le fichier distant spécifié et l'enregistre à l'emplacement spécifié.</summary>
      <param name="address">Chemin d'accès au fichier à télécharger, y compris nom de fichier et adresse d'hôte.</param>
      <param name="destinationFileName">Nom et chemin d'accès du fichier téléchargé.</param>
      <param name="userName">Nom d'utilisateur à authentifier. La valeur par défaut est une chaîne vide, "".</param>
      <param name="password">Mot de passe à authentifier. La valeur par défaut est une chaîne vide, "".</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> se termine par une barre oblique finale.</exception>
      <exception cref="T:System.TimeoutException">Le serveur ne répond pas dans le délai d'attente par défaut (100 secondes).</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur ne dispose pas des autorisations nécessaires pour réaliser une opération réseau.</exception>
      <exception cref="T:System.Net.WebException">La demande est refusée par le serveur Web cible.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)">
      <summary>Télécharge le fichier distant spécifié et l'enregistre à l'emplacement spécifié.</summary>
      <param name="address">Chemin d'accès au fichier à télécharger, y compris nom de fichier et adresse d'hôte.</param>
      <param name="destinationFileName">Nom et chemin d'accès du fichier téléchargé.</param>
      <param name="userName">Nom d'utilisateur à authentifier. La valeur par défaut est une chaîne vide, "".</param>
      <param name="password">Mot de passe à authentifier. La valeur par défaut est une chaîne vide, "".</param>
      <param name="showUI">,<see langword="True" /> pour afficher l'avancement de l'opération ; sinon, <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
      <param name="connectionTimeout">Intervalle de délai en millisecondes. La valeur par défaut est de 100 secondes.</param>
      <param name="overwrite">
        <see langword="True" /> pour remplacer les fichiers existants ; sinon, <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> se termine par une barre oblique finale.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="overwrite" /> a la valeur <see langword="False" /> et le fichier de destination existe déjà.</exception>
      <exception cref="T:System.TimeoutException">Le serveur ne répond pas dans le <paramref name="connectionTimeout" /> spécifié.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur ne dispose pas des autorisations nécessaires pour réaliser une opération réseau.</exception>
      <exception cref="T:System.Net.WebException">La demande est refusée par le serveur Web cible.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Télécharge le fichier distant spécifié et l'enregistre à l'emplacement spécifié.</summary>
      <param name="address">Chemin d'accès au fichier à télécharger, y compris nom de fichier et adresse d'hôte.</param>
      <param name="destinationFileName">Nom et chemin d'accès du fichier téléchargé.</param>
      <param name="userName">Nom d'utilisateur à authentifier. La valeur par défaut est une chaîne vide, "".</param>
      <param name="password">Mot de passe à authentifier. La valeur par défaut est une chaîne vide, "".</param>
      <param name="showUI">,<see langword="True" /> pour afficher l'avancement de l'opération ; sinon, <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
      <param name="connectionTimeout">Intervalle de délai en millisecondes. La valeur par défaut est de 100 secondes.</param>
      <param name="overwrite">
        <see langword="True" /> pour remplacer les fichiers existants ; sinon, <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
      <param name="onUserCancel">Spécifie le comportement lorsque l’utilisateur clique sur Annuler ou non dans la boîte de dialogue qui s’affiche à la suite de l’ensemble de <c>ShowUI</c> défini sur <see langword="True" /> . La valeur par défaut est <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> se termine par une barre oblique finale.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="overwrite" /> a la valeur <see langword="False" /> et le fichier de destination existe déjà.</exception>
      <exception cref="T:System.TimeoutException">Le serveur ne répond pas dans le <paramref name="connectionTimeout" /> spécifié.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur ne dispose pas des autorisations nécessaires pour réaliser une opération réseau.</exception>
      <exception cref="T:System.Net.WebException">La demande est refusée par le serveur Web cible.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.Ping(System.String)">
      <summary>Exécute une commande ping sur le serveur spécifié.</summary>
      <param name="hostNameOrAddress">URL, nom d'ordinateur ou numéro IP du serveur sur lequel exécuter une commande ping.</param>
      <exception cref="T:System.InvalidOperationException">Aucune connexion réseau n'est disponible.</exception>
      <exception cref="T:System.Net.NetworkInformation.PingException">L'URL n'est pas valide.</exception>
      <returns>
        <see langword="True" /> si l'opération a réussi ; sinon, <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.Ping(System.String,System.Int32)">
      <summary>Exécute une commande ping sur le serveur spécifié.</summary>
      <param name="hostNameOrAddress">URL, nom d'ordinateur ou numéro IP du serveur sur lequel exécuter une commande ping.</param>
      <param name="timeout">Délai maximal en millisecondes pour contacter la destination. La valeur par défaut est 500.</param>
      <exception cref="T:System.InvalidOperationException">Aucune connexion réseau n'est disponible.</exception>
      <exception cref="T:System.Net.NetworkInformation.PingException">L'URL n'est pas valide.</exception>
      <returns>
        <see langword="True" /> si l'opération a réussi ; sinon, <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.Ping(System.Uri)">
      <summary>Exécute une commande ping sur le serveur spécifié.</summary>
      <param name="address">URI du serveur sur lequel exécuter une commande ping.</param>
      <exception cref="T:System.InvalidOperationException">Aucune connexion réseau n'est disponible.</exception>
      <exception cref="T:System.Net.NetworkInformation.PingException">L'URL n'est pas valide.</exception>
      <returns>
        <see langword="True" /> si l'opération a réussi ; sinon, <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.Ping(System.Uri,System.Int32)">
      <summary>Exécute une commande ping sur le serveur spécifié.</summary>
      <param name="address">URI du serveur sur lequel exécuter une commande ping.</param>
      <param name="timeout">Délai maximal en millisecondes pour contacter la destination. La valeur par défaut est 500.</param>
      <exception cref="T:System.InvalidOperationException">Aucune connexion réseau n'est disponible.</exception>
      <exception cref="T:System.Net.NetworkInformation.PingException">L'URL n'est pas valide.</exception>
      <returns>
        <see langword="True" /> si l'opération a réussi ; sinon, <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String)">
      <summary>Envoie le fichier spécifié à l'adresse de l'hôte indiquée.</summary>
      <param name="sourceFileName">Chemin d'accès et nom du fichier à transférer.</param>
      <param name="address">URL, adresse IP ou URI du serveur de destination.</param>
      <exception cref="T:System.ArgumentException">Le chemin d'accès du fichier source n'est pas valide.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="address" /> ne comporte pas de nom de fichier.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur ne dispose pas des autorisations nécessaires pour réaliser une opération réseau.</exception>
      <exception cref="T:System.TimeoutException">Le serveur ne répond pas dans le délai d'attente par défaut (100 secondes).</exception>
      <exception cref="T:System.Net.WebException">La demande est refusée par le serveur Web cible.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String)">
      <summary>Envoie le fichier spécifié à l'adresse de l'hôte indiquée.</summary>
      <param name="sourceFileName">Chemin d'accès et nom du fichier à transférer.</param>
      <param name="address">URL, adresse IP ou URI du serveur de destination.</param>
      <param name="userName">Nom d'utilisateur à authentifier. La valeur par défaut est une chaîne vide : <c>""</c>.</param>
      <param name="password">Mot de passe à authentifier. La valeur par défaut est une chaîne vide : <c>""</c>.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="connectionTimeout" /> est inférieur ou égal à zéro.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="address" /> ne comporte pas de nom de fichier.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur ne dispose pas des autorisations nécessaires pour réaliser une opération réseau.</exception>
      <exception cref="T:System.TimeoutException">Le serveur ne répond pas dans le délai d'attente par défaut (100 secondes).</exception>
      <exception cref="T:System.Net.WebException">La demande est refusée par le serveur Web cible.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32)">
      <summary>Envoie le fichier spécifié à l'adresse de l'hôte indiquée.</summary>
      <param name="sourceFileName">Chemin d'accès et nom du fichier à transférer.</param>
      <param name="address">URL, adresse IP ou URI du serveur de destination.</param>
      <param name="userName">Nom d'utilisateur à authentifier. La valeur par défaut est une chaîne vide : <c>""</c>.</param>
      <param name="password">Mot de passe à authentifier. La valeur par défaut est une chaîne vide : <c>""</c>.</param>
      <param name="showUI">,<see langword="True" /> pour afficher l'avancement de l'opération ; sinon, <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
      <param name="connectionTimeout">Intervalle de délai en millisecondes. La valeur par défaut est de 100 secondes.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="connectionTimeout" /> est inférieur ou égal à zéro.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="address" /> ne comporte pas de nom de fichier.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur ne dispose pas des autorisations nécessaires pour réaliser une opération réseau.</exception>
      <exception cref="T:System.TimeoutException">Le serveur ne répond pas dans le <paramref name="connectionTimeout" /> spécifié.</exception>
      <exception cref="T:System.Net.WebException">La demande est refusée par le serveur Web cible.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Envoie le fichier spécifié à l'adresse de l'hôte indiquée.</summary>
      <param name="sourceFileName">Chemin d'accès et nom du fichier à transférer.</param>
      <param name="address">URL, adresse IP ou URI du serveur de destination.</param>
      <param name="userName">Nom d'utilisateur à authentifier. La valeur par défaut est une chaîne vide : <c>""</c>.</param>
      <param name="password">Mot de passe à authentifier. La valeur par défaut est une chaîne vide : <c>""</c>.</param>
      <param name="showUI">Indique s'il faut ou non afficher l'avancement de l'opération. La valeur par défaut est <see langword="False" />.</param>
      <param name="connectionTimeout">Intervalle de délai en millisecondes. La valeur par défaut est de 100 secondes.</param>
      <param name="onUserCancel">Action à prendre lorsque l’utilisateur clique sur Annuler. La valeur par défaut est <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="connectionTimeout" /> est inférieur ou égal à zéro.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="address" /> ne comporte pas de nom de fichier.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur ne dispose pas des autorisations nécessaires pour réaliser une opération réseau.</exception>
      <exception cref="T:System.TimeoutException">Le serveur ne répond pas dans le <paramref name="connectionTimeout" /> spécifié.</exception>
      <exception cref="T:System.Net.WebException">La demande est refusée par le serveur Web cible.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri)">
      <summary>Envoie le fichier spécifié à l'adresse de l'hôte indiquée.</summary>
      <param name="sourceFileName">Chemin d'accès et nom du fichier à transférer.</param>
      <param name="address">URL, adresse IP ou URI du serveur de destination.</param>
      <exception cref="T:System.ArgumentException">Le chemin d'accès du fichier source n'est pas valide.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="address" /> ne comporte pas de nom de fichier.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur ne dispose pas des autorisations nécessaires pour réaliser une opération réseau.</exception>
      <exception cref="T:System.TimeoutException">Le serveur ne répond pas dans le délai d'attente par défaut (100 secondes).</exception>
      <exception cref="T:System.Net.WebException">La demande est refusée par le serveur Web cible.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32)">
      <summary>Envoie le fichier spécifié à l'adresse de l'hôte indiquée.</summary>
      <param name="sourceFileName">Chemin d'accès et nom du fichier à transférer.</param>
      <param name="address">URL, adresse IP ou URI du serveur de destination.</param>
      <param name="networkCredentials">Informations d'identification pour l'authentification.</param>
      <param name="showUI">,<see langword="True" /> pour afficher l'avancement de l'opération ; sinon, <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
      <param name="connectionTimeout">Intervalle de délai en millisecondes. La valeur par défaut est de 100 secondes.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="connectionTimeout" /> est inférieur ou égal à zéro.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="address" /> ne comporte pas de nom de fichier.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur ne dispose pas des autorisations nécessaires pour réaliser une opération réseau.</exception>
      <exception cref="T:System.TimeoutException">Le serveur ne répond pas dans le <paramref name="connectionTimeout" /> spécifié.</exception>
      <exception cref="T:System.Net.WebException">La demande est refusée par le serveur Web cible.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Envoie le fichier spécifié à l'adresse de l'hôte indiquée.</summary>
      <param name="sourceFileName">Chemin d'accès et nom du fichier à transférer.</param>
      <param name="address">URL, adresse IP ou URI du serveur de destination.</param>
      <param name="networkCredentials">Informations d'identification pour l'authentification.</param>
      <param name="showUI">,<see langword="True" /> pour afficher l'avancement de l'opération ; sinon, <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
      <param name="connectionTimeout">Intervalle de délai en millisecondes. La valeur par défaut est de 100 secondes.</param>
      <param name="onUserCancel">Action à prendre lorsque l’utilisateur clique sur Annuler. La valeur par défaut est <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="connectionTimeout" /> est inférieur ou égal à zéro.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="address" /> ne comporte pas de nom de fichier.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur ne dispose pas des autorisations nécessaires pour réaliser une opération réseau.</exception>
      <exception cref="T:System.TimeoutException">Le serveur ne répond pas dans le <paramref name="connectionTimeout" /> spécifié.</exception>
      <exception cref="T:System.Net.WebException">La demande est refusée par le serveur Web cible.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String)">
      <summary>Envoie le fichier spécifié à l'adresse de l'hôte indiquée.</summary>
      <param name="sourceFileName">Chemin d'accès et nom du fichier à transférer.</param>
      <param name="address">URL, adresse IP ou URI du serveur de destination.</param>
      <param name="userName">Nom d'utilisateur à authentifier. La valeur par défaut est une chaîne vide : <c>""</c>.</param>
      <param name="password">Mot de passe à authentifier. La valeur par défaut est une chaîne vide : <c>""</c>.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="connectionTimeout" /> est inférieur ou égal à zéro.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="address" /> ne comporte pas de nom de fichier.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur ne dispose pas des autorisations nécessaires pour réaliser une opération réseau.</exception>
      <exception cref="T:System.TimeoutException">Le serveur ne répond pas dans le délai d'attente par défaut (100 secondes).</exception>
      <exception cref="T:System.Net.WebException">La demande est refusée par le serveur Web cible.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32)">
      <summary>Envoie le fichier spécifié à l'adresse de l'hôte indiquée.</summary>
      <param name="sourceFileName">Chemin d'accès et nom du fichier à transférer.</param>
      <param name="address">URL, adresse IP ou URI du serveur de destination.</param>
      <param name="userName">Nom d'utilisateur à authentifier. La valeur par défaut est une chaîne vide : <c>""</c>.</param>
      <param name="password">Mot de passe à authentifier. La valeur par défaut est une chaîne vide : <c>""</c>.</param>
      <param name="showUI">,<see langword="True" /> pour afficher l'avancement de l'opération ; sinon, <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
      <param name="connectionTimeout">Intervalle de délai en millisecondes. La valeur par défaut est de 100 secondes.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="connectionTimeout" /> est inférieur ou égal à zéro.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="address" /> ne comporte pas de nom de fichier.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur ne dispose pas des autorisations nécessaires pour réaliser une opération réseau.</exception>
      <exception cref="T:System.TimeoutException">Le serveur ne répond pas dans le <paramref name="connectionTimeout" /> spécifié.</exception>
      <exception cref="T:System.Net.WebException">La demande est refusée par le serveur Web cible.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Envoie le fichier spécifié à l'adresse de l'hôte indiquée.</summary>
      <param name="sourceFileName">Chemin d'accès et nom du fichier à transférer.</param>
      <param name="address">URL, adresse IP ou URI du serveur de destination.</param>
      <param name="userName">Nom d'utilisateur à authentifier. La valeur par défaut est une chaîne vide : <c>""</c>.</param>
      <param name="password">Mot de passe à authentifier. La valeur par défaut est une chaîne vide : <c>""</c>.</param>
      <param name="showUI">Indique s'il faut ou non afficher l'avancement de l'opération. La valeur par défaut est <see langword="False" />.</param>
      <param name="connectionTimeout">Intervalle de délai en millisecondes. La valeur par défaut est de 100 secondes.</param>
      <param name="onUserCancel">Action à prendre lorsque l’utilisateur clique sur Annuler. La valeur par défaut est <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="connectionTimeout" /> est inférieur ou égal à zéro.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="address" /> ne comporte pas de nom de fichier.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur ne dispose pas des autorisations nécessaires pour réaliser une opération réseau.</exception>
      <exception cref="T:System.TimeoutException">Le serveur ne répond pas dans le <paramref name="connectionTimeout" /> spécifié.</exception>
      <exception cref="T:System.Net.WebException">La demande est refusée par le serveur Web cible.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.Network.IsAvailable">
      <summary>Indique si un ordinateur est connecté à un réseau.</summary>
      <returns>
        <see langword="True" /> si l'ordinateur est connecté à un réseau ; sinon, <see langword="False" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs">
      <summary>Fournit des données pour les événements <see langword="My.Application.NetworkAvailabilityChanged" /> et <see langword="My.Computer.Network.NetworkAvailabilityChanged" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.#ctor(System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs" />.</summary>
      <param name="networkAvailable">
        <see cref="T:System.Boolean" /> qui indique si un réseau est disponible pour l'application.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable">
      <summary>Obtient une valeur indiquant si un réseau est disponible pour l'application.</summary>
      <returns>
        <see cref="T:System.Boolean" /> qui indique si un réseau est disponible pour l'application.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler">
      <summary>Représente la méthode qui gérera l'événement <see langword="My.Application.NetworkAvailabilityChanged" /> ou <see langword="My.Computer.Network.NetworkAvailabilityChanged" />.</summary>
      <param name="sender">Source de l'événement.</param>
      <param name="e">Objet <see cref="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Devices.ServerComputer">
      <summary>Fournit des propriétés permettant de manipuler des composants informatiques tels que le son, l’horloge, le clavier, le système de fichiers, etc.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Devices.ServerComputer.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.Devices.ServerComputer" />.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Clock">
      <summary>Obtient un objet qui fournit des propriétés permettant d'accéder à l'heure locale actuelle et au temps UTC (Universal Coordinated Time, équivalent du Greenwich Mean Time) de l'horloge système.</summary>
      <returns>Objet <see langword="My.Computer.Clock" /> pour l'ordinateur.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.FileSystem">
      <summary>Obtient un objet qui fournit des propriétés et méthodes à utiliser avec les lecteurs, fichiers et répertoires.</summary>
      <returns>Objet <see langword="My.Computer.FileSystem" /> pour l'ordinateur.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Info">
      <summary>Obtient un objet qui fournit des propriétés pour l'obtention des informations concernant la mémoire de l'ordinateur, les assemblys chargés, le nom et le système d'exploitation.</summary>
      <returns>Objet <see langword="My.Computer.Info" /> pour l'ordinateur.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Name">
      <summary>Obtient le nom de l'ordinateur.</summary>
      <returns>
        <see langword="String" /> contenant le nom de l'ordinateur.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Network">
      <summary>Obtient un objet qui fournit une propriété et des méthodes pour interagir avec le réseau auquel l'ordinateur est connecté.</summary>
      <returns>Objet <see langword="My.Computer.Network" /> pour l'ordinateur.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Devices.ServerComputer.Registry">
      <summary>Obtient un objet qui fournit des propriétés et des méthodes pour manipuler le Registre.</summary>
      <returns>Objet <see langword="My.Computer.Registry" /> pour l'ordinateur.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption">
      <summary>Détermine que faire lorsque l'objet <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> tente d'écrire dans un journal et que l'espace disque disponible est inférieur à celui spécifié par la propriété <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages">
      <summary>Ignorer les messages de journal.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.ThrowException">
      <summary>Levée d'une exception.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Logging.FileLogTraceListener">
      <summary>Fournit un écouteur simple qui dirige la sortie d'enregistrement vers un fichier.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> avec le nom par défaut.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> avec le nom fourni.</summary>
      <param name="name">
        <see langword="String" />. Nom de l'objet instance.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close">
      <summary>Ferme le flux sous-jacent du fichier journal actuel et libère toutes les ressources associées au flux actuel.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)">
      <summary>Ferme le flux sous-jacent et libère éventuellement les ressources managées.</summary>
      <param name="disposing">
        <see langword="True" /> libère les ressources managées et non managées ; <see langword="False" /> libère uniquement les ressources non managées.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush">
      <summary>Vide le flux sous-jacent qui écrit dans le fichier journal actuel.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes">
      <summary>Obtient les attributs de configuration XML personnalisés pris en charge par l'écouteur Trace.</summary>
      <returns>Tableau <see langword="String" /> contenant les attributs de configuration XML reconnus par cet écouteur.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
      <summary>Écrit des informations de traçage, un objet de données et des informations d'événement dans le fichier ou le flux de sortie.</summary>
      <param name="eventCache">Objet <see cref="T:System.Diagnostics.TraceEventCache" /> qui contient les informations actuelles sur l'ID de processus, l'ID de thread et la trace de la pile.</param>
      <param name="source">Nom de la source de trace qui a appelé cette méthode.</param>
      <param name="eventType">Une des valeurs d'énumération <see cref="T:System.Diagnostics.TraceEventType" />.</param>
      <param name="id">Identificateur numérique pour l'événement.</param>
      <param name="data">Données de trace à émettre.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
      <summary>Écrit des informations de traçage, un tableau d'objets de données et des informations d'événement dans le fichier ou le flux de sortie.</summary>
      <param name="eventCache">Objet <see cref="T:System.Diagnostics.TraceEventCache" /> qui contient les informations actuelles sur l'ID de processus, l'ID de thread et la trace de la pile.</param>
      <param name="source">Nom de la source de trace qui a appelé cette méthode.</param>
      <param name="eventType">Une des valeurs d'énumération <see cref="T:System.Diagnostics.TraceEventType" />.</param>
      <param name="id">Identificateur numérique pour l'événement.</param>
      <param name="data">Tableau d'objets à émettre comme données.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
      <summary>Écrit des informations de traçage, un message et des informations d'événement dans le fichier ou le flux de sortie.</summary>
      <param name="eventCache">Objet <see cref="T:System.Diagnostics.TraceEventCache" /> qui contient les informations actuelles sur l'ID de processus, l'ID de thread et la trace de la pile.</param>
      <param name="source">Nom de la source de trace qui a appelé cette méthode.</param>
      <param name="eventType">Une des valeurs d'énumération <see cref="T:System.Diagnostics.TraceEventType" />.</param>
      <param name="id">Identificateur numérique pour l'événement.</param>
      <param name="message">Message à écrire.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
      <summary>Écrit des informations de traçage, un tableau d'objets mis en forme et des informations d'événement dans le fichier ou le flux de sortie.</summary>
      <param name="eventCache">Objet <see cref="T:System.Diagnostics.TraceEventCache" /> qui contient les informations actuelles sur l'ID de processus, l'ID de thread et la trace de la pile.</param>
      <param name="source">Nom de la source de trace qui a appelé cette méthode.</param>
      <param name="eventType">Une des valeurs d'énumération <see cref="T:System.Diagnostics.TraceEventType" />.</param>
      <param name="id">Identificateur numérique pour l'événement.</param>
      <param name="format">Chaîne de format qui contient zéro élément de format ou plus, lesquels correspondent aux objets dans le tableau <paramref name="args" />.</param>
      <param name="args">
        <see langword="Object" /> Tableau qui contient zéro ou plusieurs objets à mettre en forme.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)">
      <summary>Écrit mot à mot un message à disque, sans informations de contexte supplémentaires.</summary>
      <param name="message">
        <see langword="String" />. Message personnalisé à écrire.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)">
      <summary>Écrit un message mot pour mot sur le disque, suivi par la marque de fin de ligne en cours, sans informations de contexte supplémentaires.</summary>
      <param name="message">
        <see langword="String" />. Message personnalisé à écrire.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append">
      <summary>Détermine s’il convient d’ajouter la sortie au fichier en cours ou de l’écrire dans un fichier nouveau ou existant.</summary>
      <returns>
        <see langword="Boolean" />, avec <see langword="True" /> indiquant que la sortie est ajoutée au fichier en cours et <see langword="False" /> indiquant que la sortie est écrite dans un nouveau fichier. Le paramètre par défaut de cette propriété est <see langword="True" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush">
      <summary>Indique si l'écriture dans le flux du fichier journal vide ou non la mémoire tampon.</summary>
      <returns>
        <see langword="Boolean" />, avec <see langword="True" /> indiquant que le flux est vidé après chaque écriture ; sinon, les entrées de journal sont mises en mémoire tampon et écrites plus efficacement. Le paramètre par défaut de cette propriété est <see langword="False" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName">
      <summary>Obtient ou définit le nom de base des fichiers journaux qui est utilisé pour créer le nom de fichier journal complet.</summary>
      <returns>
        <see langword="String" />. Nom de base des fichiers journaux. La valeur par défaut est le nom de produit de l'application.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation">
      <summary>Obtient ou définit le répertoire du fichier journal lorsque la propriété <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" /> a la valeur <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" />.</summary>
      <returns>
        <see langword="String" /> qui est le nom du répertoire du fichier journal. Le paramètre par défaut de cette propriété est le répertoire de l'utilisateur pour les données d'application.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter">
      <summary>Obtient ou définit le séparateur utilisé pour délimiter les champs d'un message de journal.</summary>
      <returns>
        <see langword="String" />, qui est le séparateur utilisé pour les champs d'un message de journal. Le paramètre par défaut de cette propriété est le caractère de tabulation.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior">
      <summary>Détermine que faire lors de l'écriture dans le fichier journal si l'espace disque disponible est inférieur à celui qui est spécifié par la propriété <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />.</summary>
      <returns>
        <see cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" />. Détermine ce qu'il convient de faire lors d'une tentative d'écriture dans le fichier journal alors que l'espace disque disponible est inférieur à la valeur spécifiée par la propriété <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />, ou si la taille du fichier journal est supérieure à la valeur autorisée par la propriété <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />. La valeur par défaut est <see cref="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding">
      <summary>Obtient ou définit l'encodage à utiliser lors de la création d'un fichier journal.</summary>
      <returns>
        <see cref="T:System.Text.Encoding" />, qui est l'encodage à utiliser lors de la création d'un fichier journal. La valeur par défaut de cette propriété est <see cref="T:System.Text.UTF8Encoding" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName">
      <summary>Obtient le nom complet du fichier journal actuel.</summary>
      <returns>
        <see langword="String" />, qui est le nom complet du fichier journal actuel.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName">
      <summary>Indique si le nom d'hôte de l'ordinateur d'enregistrement doit être ou non inclus dans la sortie.</summary>
      <returns>
        <see langword="Boolean" />. Utilise <see langword="True" /> si l'identificateur hôte doit être inclus ; sinon, utilise <see langword="False" />. La valeur par défaut est <see langword="False" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location">
      <summary>Obtient ou définit l'emplacement des fichiers journaux.</summary>
      <returns>
        <see cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" />, qui est l'emplacement du fichier journal. La valeur par défaut est <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule">
      <summary>Détermine la date à inclure dans les noms des fichiers journaux.</summary>
      <returns>
        <see cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" />. Indique quelle date inclure dans les noms de fichiers journaux. La valeur par défaut est <see cref="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize">
      <summary>Obtient ou définit la taille maximale autorisée du fichier journal, en octets.</summary>
      <exception cref="T:System.ArgumentException">Lorsque cette propriété a une valeur inférieure à 1 000.</exception>
      <returns>
        <see langword="Long" />. Taille maximale autorisée pour les fichiers journaux, en octets. La valeur par défaut est 5 millions.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace">
      <summary>Obtient ou définit la quantité d'espace disque disponible (en octets) nécessaire pour que les messages puissent être écrits dans le fichier journal.</summary>
      <exception cref="T:System.ArgumentException">Lorsque cette propriété a une valeur inférieure à 0.</exception>
      <returns>
        <see langword="Long" />. Quantité d'espace disque libre nécessaire. La valeur par défaut est 10 millions.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Logging.Log">
      <summary>Fournit une propriété et des méthodes pour écrire les informations concernant les événements et exceptions dans les écouteurs de journalisation de l'application.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.Logging.Log" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.Logging.Log" />.</summary>
      <param name="name">
        <see cref="T:System.String" />. Nom à donner à l'objet de propriété <see cref="P:Microsoft.VisualBasic.Logging.Log.TraceSource" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.InitializeWithDefaultsSinceNoConfigExists">
      <summary>Crée un objet <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> et l'ajoute à la collection <see cref="P:System.Diagnostics.TraceSource.Listeners" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)">
      <summary>Écrit un message dans les écouteurs de journalisation de l'application.</summary>
      <param name="message">Obligatoire. Message à consigner. Si <paramref name="message" /> est <see langword="Nothing" />, une chaîne vide est utilisée.</param>
      <exception cref="T:System.Security.SecurityException">Le code d'un niveau de confiance partiel appelle la méthode, mais effectue l'écriture dans un écouteur de journal des événements qui requiert une confiance totale.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)">
      <summary>Écrit un message dans les écouteurs de journalisation de l'application.</summary>
      <param name="message">Obligatoire. Message à consigner. Si <paramref name="message" /> est <see langword="Nothing" />, une chaîne vide est utilisée.</param>
      <param name="severity">Type de message. Par défaut, <see langword="TraceEventType.Information" />.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Le type de message ne fait pas partie des valeurs de l'énumération <see cref="T:System.Diagnostics.TraceEventType" />.</exception>
      <exception cref="T:System.Security.SecurityException">Le code d'un niveau de confiance partiel appelle la méthode, mais effectue l'écriture dans un écouteur de journal des événements qui requiert une confiance totale.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)">
      <summary>Écrit un message dans les écouteurs de journalisation de l'application.</summary>
      <param name="message">Obligatoire. Message à consigner. Si <paramref name="message" /> est <see langword="Nothing" />, une chaîne vide est utilisée.</param>
      <param name="severity">Type de message. Par défaut, <see langword="TraceEventType.Information" />.</param>
      <param name="id">Identificateur de message, utilisé en général pour la corrélation. Par défaut, associé à <c>entryType</c> comme décrit dans le tableau.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Le type de message ne fait pas partie des valeurs de l'énumération <see cref="T:System.Diagnostics.TraceEventType" />.</exception>
      <exception cref="T:System.Security.SecurityException">Le code d'un niveau de confiance partiel appelle la méthode, mais effectue l'écriture dans un écouteur de journal des événements qui requiert une confiance totale.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)">
      <summary>Écrit des informations sur les exceptions dans les écouteurs de journalisation de l'application.</summary>
      <param name="ex">Obligatoire. Exception à enregistrer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ex" /> a la valeur <see langword="Nothing" />.</exception>
      <exception cref="T:System.Security.SecurityException">Le code d'un niveau de confiance partiel appelle la méthode, mais effectue l'écriture dans un écouteur de journal des événements qui requiert une confiance totale.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)">
      <summary>Écrit des informations sur les exceptions dans les écouteurs de journalisation de l'application.</summary>
      <param name="ex">Obligatoire. Exception à enregistrer.</param>
      <param name="severity">Type de message. Par défaut, <see cref="F:System.Diagnostics.TraceEventType.Error" />.</param>
      <param name="additionalInfo">Chaîne à ajouter au message. Par défaut, cette chaîne est vide.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ex" /> a la valeur <see langword="Nothing" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Le type de message ne fait pas partie des valeurs de l'énumération <see cref="T:System.Diagnostics.TraceEventType" />.</exception>
      <exception cref="T:System.Security.SecurityException">Le code d'un niveau de confiance partiel appelle la méthode, mais effectue l'écriture dans un écouteur de journal des événements qui requiert une confiance totale.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)">
      <summary>Écrit des informations sur les exceptions dans les écouteurs de journalisation de l'application.</summary>
      <param name="ex">Obligatoire. Exception à enregistrer.</param>
      <param name="severity">Type de message. Par défaut, <see cref="F:System.Diagnostics.TraceEventType.Error" />.</param>
      <param name="additionalInfo">Chaîne à ajouter au message. Par défaut, cette chaîne est vide.</param>
      <param name="id">Identificateur de message, utilisé en général pour la corrélation. Il est associé par défaut à <c>entryType</c> comme décrit dans le tableau dans la section Notes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ex" /> a la valeur <see langword="Nothing" />.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Le type de message ne fait pas partie des valeurs de l'énumération <see cref="T:System.Diagnostics.TraceEventType" />.</exception>
      <exception cref="T:System.Security.SecurityException">Le code d'un niveau de confiance partiel appelle la méthode, mais effectue l'écriture dans un écouteur de journal des événements qui requiert une confiance totale.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.Log.DefaultFileLogWriter">
      <summary>Obtient l'objet <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> sous-jacent de l'objet <see langword="Log" />.</summary>
      <returns>Objet sous- <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> jacent de l' <see langword="Log" /> objet.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Logging.Log.TraceSource">
      <summary>Obtient l'objet <see cref="T:System.Diagnostics.TraceSource" /> sous-jacent de l'objet <see langword="Log" />.</summary>
      <returns>Objet sous- <see cref="T:System.Diagnostics.TraceSource" /> jacent de l' <see langword="Log" /> objet.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption">
      <summary>Détermine la date à inclure dans les noms des fichiers journaux de la classe <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily">
      <summary>Incluez la date du jour dans le nom du fichier journal.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None">
      <summary>N'incluez pas la date dans le nom du fichier journal.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly">
      <summary>Incluez le premier jour de la semaine actuelle dans le nom du fichier journal.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Logging.LogFileLocation">
      <summary>Détermine le chemin d'accès prédéfini que la classe <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> utilise pour écrire ses fichiers journaux.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileLocation.CommonApplicationDirectory">
      <summary>Utilisez le chemin d'accès aux données d'application qui sont partagées par tous les utilisateurs.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom">
      <summary>Si la chaîne spécifiée par <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation" /> n'est pas vide, utilisez-la comme chemin d'accès. Sinon, utilisez le chemin d'accès aux données d'application d'un utilisateur.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileLocation.ExecutableDirectory">
      <summary>Utilisez le chemin d'accès au fichier exécutable ayant démarré l'application.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory">
      <summary>Sinon, utilisez le chemin d'accès aux données d'application d'un utilisateur.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Logging.LogFileLocation.TempDirectory">
      <summary>Utilisez le chemin d'accès au dossier temporaire du système en cours.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.ClipboardProxy">
      <summary>Fournit des méthodes permettant de manipuler le Presse-papiers.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.Clear">
      <summary>Effacer le Presse-papiers.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsAudio">
      <summary>Indique si le Presse-papiers contient des données audio.</summary>
      <returns>
        <see langword="True" /> si les données audio sont stockées dans le Presse-papiers ; sinon <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsData(System.String)">
      <summary>Indique si le Presse-papiers contient des données au format personnalisé spécifié.</summary>
      <param name="format">
        <see langword="String" />. Nom du format personnalisé à vérifier. Obligatoire.</param>
      <returns>
        <see langword="True" /> si les données au format personnalisé spécifié sont stockées dans le Presse-papiers ; sinon <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsFileDropList">
      <summary>Retourne une valeur <see langword="Boolean" /> indiquant si le Presse-papiers contient une liste déroulante de fichiers.</summary>
      <returns>
        <see langword="True" /> si une liste déroulante de fichiers est stockée dans le Presse-papiers ; sinon <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsImage">
      <summary>Retourne une valeur <see langword="Boolean" /> indiquant si une image est stockée dans le Presse-papiers.</summary>
      <returns>
        <see langword="True" /> si une image est stockée dans le Presse-papiers ; sinon <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsText">
      <summary>Détermine s'il y a du texte dans le Presse-papiers.</summary>
      <returns>
        <see langword="True" /> si le Presse-papiers contient du texte ; sinon, <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsText(System.Windows.Forms.TextDataFormat)">
      <summary>Détermine s'il y a du texte dans le Presse-papiers.</summary>
      <param name="format">
        <see cref="T:System.Windows.Forms.TextDataFormat" />. Si spécifié, identifie le format de texte dont il convient de vérifier la présence. Obligatoire.</param>
      <returns>
        <see langword="True" /> si le Presse-papiers contient du texte ; sinon, <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetAudioStream">
      <summary>Récupère un flux audio dans le Presse-papiers.</summary>
      <returns>Objet <see cref="T:System.IO.Stream" /> contenant des données audio ou <see langword="Nothing" /> si le Presse-papiers ne contient pas de données audio.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetData(System.String)">
      <summary>Récupère des données dans un format personnalisé du Presse-papiers.</summary>
      <param name="format">
        <see langword="String" />. Nom du format de données. Obligatoire.</param>
      <returns>
        <see langword="Object" /> représentant les données du Presse-papiers ou <see langword="Nothing" /> si le Presse-papiers ne contient pas de données au format spécifié ou qui peuvent être converties dans ce format.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetDataObject">
      <summary>Récupère des données du Presse-papiers sous la forme de <see cref="T:System.Windows.Forms.IDataObject" />.</summary>
      <returns>Objet <see cref="T:System.Windows.Forms.IDataObject" /> qui représente les données figurant dans le Presse-papiers ou <see langword="Nothing" /> en l'absence de données dans le Presse-papiers.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetFileDropList">
      <summary>Récupère une collection de chaînes représentant des noms de fichiers provenant du Presse-papiers.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.StringCollection" /> contenant des noms de fichiers ou <see langword="Nothing" /> si le Presse-papiers ne contient pas de données au format <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> ou qui peuvent être converties dans ce format.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetImage">
      <summary>Récupère une image du Presse-papiers.</summary>
      <returns>
        <see cref="T:System.Drawing.Image" /> représentant les données image du Presse-papiers ou <see langword="Nothing" /> si le Presse-papiers ne contient pas de données au format <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> ou qui peuvent être converties dans ce format.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetText">
      <summary>Récupère le texte du Presse-papiers.</summary>
      <returns>Données textuelles du Presse-papiers ou chaîne vide si le Presse-papiers ne contient pas de données au format <see cref="F:System.Windows.Forms.DataFormats.Text" /> ou <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />, selon le système d'exploitation.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.GetText(System.Windows.Forms.TextDataFormat)">
      <summary>Récupère le texte du Presse-papiers.</summary>
      <param name="format">
        <see cref="T:System.Windows.Forms.TextDataFormat" />. Si spécifié, identifie le format de texte à récupérer. La valeur par défaut est <see cref="F:System.Windows.Forms.TextDataFormat.CommaSeparatedValue" />. Obligatoire.</param>
      <returns>Données textuelles du Presse-papiers ou chaîne vide si le Presse-papiers ne contient pas de données au format spécifié.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetAudio(System.Byte[])">
      <summary>Écrit les données audio dans le Presse-papiers.</summary>
      <param name="audioBytes">Tableau<see langword="Byte" /> . Données audio à écrire dans le Presse-papiers. Obligatoire.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetAudio(System.IO.Stream)">
      <summary>Écrit les données audio dans le Presse-papiers.</summary>
      <param name="audioStream">
        <see cref="T:System.IO.Stream" /> Données audio à écrire dans le Presse-papiers. Obligatoire.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetData(System.String,System.Object)">
      <summary>Écrit des données dans un format personnalisé au Presse-papiers.</summary>
      <param name="format">
        <see langword="String" />. Format de données. Obligatoire.</param>
      <param name="data">
        <see langword="Object" />. Objet de données à écrire dans le Presse-papiers. Obligatoire.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetDataObject(System.Windows.Forms.DataObject)">
      <summary>Écrit un <see cref="T:System.Windows.Forms.DataObject" /> dans le Presse-papiers.</summary>
      <param name="data">
        <see cref="T:System.Windows.Forms.DataObject" />. Objet de données à écrire dans le Presse-papiers. Obligatoire.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetFileDropList(System.Collections.Specialized.StringCollection)">
      <summary>Écrit une collection de chaînes représentant des chemins d'accès au Presse-papiers.</summary>
      <param name="filePaths">
        <see cref="T:System.Collections.Specialized.StringCollection" />. Liste de noms de fichiers. Obligatoire.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetImage(System.Drawing.Image)">
      <summary>Écrit une image dans le Presse-papiers.</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" />. Image à écrire. Obligatoire.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetText(System.String)">
      <summary>Écrit du texte dans le Presse-papiers.</summary>
      <param name="text">
        <see langword="String" />. Texte à écrire. Obligatoire.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="text" /> est une chaîne vide.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="text" /> a la valeur <see langword="Nothing" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.ClipboardProxy.SetText(System.String,System.Windows.Forms.TextDataFormat)">
      <summary>Écrit du texte dans le Presse-papiers.</summary>
      <param name="text">
        <see langword="String" />. Texte à écrire. Obligatoire.</param>
      <param name="format">
        <see cref="T:System.Windows.Forms.TextDataFormat" />. Format à utiliser lors de l'écriture de texte. La valeur par défaut est <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />. Obligatoire.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="text" /> est une chaîne vide.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="text" /> a la valeur <see langword="Nothing" />.</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.FileSystemProxy">
      <summary>Fournit des propriétés et des méthodes destinées à être utilisées avec les lecteurs, les fichiers et les répertoires.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CombinePath(System.String,System.String)">
      <summary>Associe deux chemins d'accès et retourne un chemin d'accès correctement mis en forme.</summary>
      <param name="baseDirectory">
        <see langword="String" />. Premier chemin d'accès à combiner.</param>
      <param name="relativePath">
        <see langword="String" />. Deuxième chemin d'accès à combiner.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="baseDirectory" /> ou <paramref name="relativePath" /> sont des chemins d'accès incorrects.</exception>
      <returns>Combinaison des chemins d'accès spécifiés.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String)">
      <summary>Copie un répertoire dans un autre répertoire.</summary>
      <param name="sourceDirectoryName">Répertoire à copier.</param>
      <param name="destinationDirectoryName">Emplacement vers lequel le répertoire doit être copié.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> ou <paramref name="sourceDirectoryName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le répertoire source n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le chemin source et le chemin cible sont identiques.</exception>
      <exception cref="T:System.InvalidOperationException">L'opération est cyclique.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Un fichier de destination existe mais est inaccessible.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Copie un répertoire dans un autre répertoire.</summary>
      <param name="sourceDirectoryName">Répertoire à copier.</param>
      <param name="destinationDirectoryName">Emplacement vers lequel le répertoire doit être copié.</param>
      <param name="showUI">Indique si un suivi visuel de l'avancement de l'opération est nécessaire. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> ou <paramref name="sourceDirectoryName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le répertoire source n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le chemin source et le chemin cible sont identiques.</exception>
      <exception cref="T:System.InvalidOperationException">L'opération est cyclique.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Un fichier de destination existe mais est inaccessible.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="ShowUI" /> a la valeur <see langword="UIOption.AllDialogs" /> et l'utilisateur annule l'opération, ou un ou plusieurs fichiers du répertoire ne peuvent pas être copiés.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Copie un répertoire dans un autre répertoire.</summary>
      <param name="sourceDirectoryName">Répertoire à copier.</param>
      <param name="destinationDirectoryName">Emplacement vers lequel le répertoire doit être copié.</param>
      <param name="showUI">Indique si un suivi visuel de l'avancement de l'opération est nécessaire. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="onUserCancel">Spécifie ce qui doit être fait si l’utilisateur clique sur Annuler pendant l’opération. La valeur par défaut est <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> ou <paramref name="sourceDirectoryName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le répertoire source n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le chemin source et le chemin cible sont identiques.</exception>
      <exception cref="T:System.InvalidOperationException">L'opération est cyclique.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Un fichier de destination existe mais est inaccessible.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="ShowUI" /> a la valeur <see langword="UIOption.AllDialogs" /> et l'utilisateur annule l'opération, ou un ou plusieurs fichiers du répertoire ne peuvent pas être copiés.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,System.Boolean)">
      <summary>Copie un répertoire dans un autre répertoire.</summary>
      <param name="sourceDirectoryName">Répertoire à copier.</param>
      <param name="destinationDirectoryName">Emplacement vers lequel le répertoire doit être copié.</param>
      <param name="overwrite">
        <see langword="True" /> pour remplacer les fichiers existants ; sinon, <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> ou <paramref name="sourceDirectoryName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le répertoire source n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le chemin source et le chemin cible sont identiques.</exception>
      <exception cref="T:System.InvalidOperationException">L'opération est cyclique.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Un fichier de destination existe mais est inaccessible.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String)">
      <summary>Copie un fichier vers un nouvel emplacement.</summary>
      <param name="sourceFileName">Fichier à copier.</param>
      <param name="destinationFileName">Emplacement vers lequel le fichier doit être copié.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> contient des informations de chemin d’accès.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> ou <paramref name="sourceFileName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier source n'est pas valide ou n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Un fichier du répertoire cible portant le même nom est en cours d'utilisation.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'autorisation requise.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Copie un fichier vers un nouvel emplacement.</summary>
      <param name="sourceFileName">Fichier à copier.</param>
      <param name="destinationFileName">Emplacement vers lequel le fichier doit être copié.</param>
      <param name="showUI">Indique si un suivi visuel de l'avancement de l'opération est nécessaire. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> contient des informations de chemin d’accès.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> ou <paramref name="sourceFileName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier source n'est pas valide ou n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier de destination existe et <paramref name="overwrite" /> a la valeur <see langword="False" /> ().</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'autorisation requise.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Copie un fichier vers un nouvel emplacement.</summary>
      <param name="sourceFileName">Fichier à copier.</param>
      <param name="destinationFileName">Emplacement vers lequel le fichier doit être copié.</param>
      <param name="showUI">Indique si un suivi visuel de l'avancement de l'opération est nécessaire. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="onUserCancel">Spécifie ce qui doit être fait si l’utilisateur clique sur Annuler pendant l’opération. La valeur par défaut est <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> contient des informations de chemin d’accès.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> ou <paramref name="sourceFileName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier source n'est pas valide ou n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier de destination existe et <paramref name="overwrite" /> a la valeur <see langword="False" /> ().</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'autorisation requise.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="UICancelOption" /> a la valeur <see langword="ThrowException" /> et l'utilisateur a annulé l'opération ou une erreur d'E/S non spécifiée s'est produit.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,System.Boolean)">
      <summary>Copie un fichier vers un nouvel emplacement.</summary>
      <param name="sourceFileName">Fichier à copier.</param>
      <param name="destinationFileName">Emplacement vers lequel le fichier doit être copié.</param>
      <param name="overwrite">
        <see langword="True" /> si les fichiers existants doivent être remplacés ; sinon, <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> contient des informations de chemin d’accès.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> ou <paramref name="sourceFileName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier source n'est pas valide ou n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier de destination existe et <paramref name="overwrite" /> a la valeur <see langword="False" /> ().</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'autorisation requise.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.CreateDirectory(System.String)">
      <summary>Crée un répertoire.</summary>
      <param name="directory">Nom et emplacement du répertoire.</param>
      <exception cref="T:System.ArgumentException">Le format du nom du répertoire est incorrect. Par exemple, il contient des caractères non valides ou se compose uniquement d'espace blanc.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> est soit <see langword="Nothing" /> soit une chaîne vide.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le nom de répertoire est trop long.</exception>
      <exception cref="T:System.NotSupportedException">Le nom du répertoire se compose uniquement du signe deux-points (:).</exception>
      <exception cref="T:System.IO.IOException">Le répertoire parent du répertoire à créer est en lecture seule.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'est pas autorisé à créer le répertoire.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)">
      <summary>Supprime un répertoire.</summary>
      <param name="directory">Répertoire à supprimer.</param>
      <param name="onDirectoryNotEmpty">Spécifie l'opération à effectuer lorsqu'un répertoire à supprimer contient des fichiers ou des répertoires. La valeur par défaut est <see langword="DeleteDirectoryOption.DeleteAllContents" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin d'accès est une chaîne de longueur nulle, est incorrect, se compose uniquement d'espace blanc ou contient des caractères incorrects (y compris des caractères génériques). Le chemin d’accès est un chemin d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> est soit <see langword="Nothing" /> soit une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le répertoire n'existe pas ou est un fichier.</exception>
      <exception cref="T:System.IO.IOException">Un fichier du répertoire ou du sous-répertoire est en cours d'utilisation.</exception>
      <exception cref="T:System.NotSupportedException">Le nom de répertoire contient un signe deux points (:).</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations requises.</exception>
      <exception cref="T:System.OperationCanceledException">L'utilisateur annule l'opération ou le répertoire ne peut pas être supprimé.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary>Supprime un répertoire.</summary>
      <param name="directory">Répertoire à supprimer.</param>
      <param name="showUI">Spécifie s'il faut effectuer un suivi visuel de l'avancement de l'opération. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="recycle">Spécifie si le fichier supprimé doit être envoyé à la Corbeille. La valeur par défaut est <see langword="RecycleOption.DeletePermanently" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin d'accès est une chaîne de longueur nulle, est incorrect, se compose uniquement d'espace blanc ou contient des caractères incorrects (y compris des caractères génériques). Le chemin d’accès est un chemin d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> est soit <see langword="Nothing" /> soit une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le répertoire n'existe pas ou est un fichier.</exception>
      <exception cref="T:System.IO.IOException">Un fichier du répertoire ou du sous-répertoire est en cours d'utilisation.</exception>
      <exception cref="T:System.NotSupportedException">Le nom de répertoire contient un signe deux points (:).</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations requises.</exception>
      <exception cref="T:System.OperationCanceledException">L'utilisateur annule l'opération ou le répertoire ne peut pas être supprimé.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Supprime un répertoire.</summary>
      <param name="directory">Répertoire à supprimer.</param>
      <param name="showUI">Spécifie s'il faut effectuer un suivi visuel de l'avancement de l'opération. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="recycle">Spécifie si le fichier supprimé doit être envoyé à la Corbeille. La valeur par défaut est <see langword="RecycleOption.DeletePermanently" />.</param>
      <param name="onUserCancel">Spécifie s’il faut lever une exception si l’utilisateur clique sur Annuler.</param>
      <exception cref="T:System.ArgumentException">Le chemin d'accès est une chaîne de longueur nulle, est incorrect, se compose uniquement d'espace blanc ou contient des caractères incorrects (y compris des caractères génériques). Le chemin d’accès est un chemin d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> est soit <see langword="Nothing" /> soit une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le répertoire n'existe pas ou est un fichier.</exception>
      <exception cref="T:System.IO.IOException">Un fichier du répertoire ou du sous-répertoire est en cours d'utilisation.</exception>
      <exception cref="T:System.NotSupportedException">Le nom de répertoire contient un signe deux points (:).</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations requises.</exception>
      <exception cref="T:System.OperationCanceledException">L'utilisateur annule l'opération ou le répertoire ne peut pas être supprimé.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String)">
      <summary>Supprime un fichier.</summary>
      <param name="file">Nom et chemin d'accès du fichier à supprimer.</param>
      <exception cref="T:System.ArgumentException">Le chemin d’accès n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il contient une barre oblique finale alors qu’un fichier doit être spécifié ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> est soit <see langword="Nothing" /> soit une chaîne vide.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est en cours d'utilisation.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'autorisation nécessaire pour supprimer le fichier ou le fichier est en lecture seule.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary>Supprime un fichier.</summary>
      <param name="file">Nom et chemin d'accès du fichier à supprimer.</param>
      <param name="showUI">Indique si un suivi visuel de l'avancement de l'opération est nécessaire. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="recycle">Indique si le fichier supprimé doit être envoyé à la Corbeille. La valeur par défaut est <see langword="RecycleOption.DeletePermanently" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin d’accès n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il contient une barre oblique finale alors qu’un fichier doit être spécifié ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> est soit <see langword="Nothing" /> soit une chaîne vide.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est en cours d'utilisation.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'autorisation nécessaire pour supprimer le fichier ou le fichier est en lecture seule.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Supprime un fichier.</summary>
      <param name="file">Nom et chemin d'accès du fichier à supprimer.</param>
      <param name="showUI">Indique si un suivi visuel de l'avancement de l'opération est nécessaire. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="recycle">Indique si le fichier supprimé doit être envoyé à la Corbeille. La valeur par défaut est <see langword="RecycleOption.DeletePermanently" />.</param>
      <param name="onUserCancel">Spécifie si oui ou non une exception est levée lorsque l'utilisateur annule l'opération. La valeur par défaut est <see langword="UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin d’accès n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il contient une barre oblique finale alors qu’un fichier doit être spécifié ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> est soit <see langword="Nothing" /> soit une chaîne vide.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est en cours d'utilisation.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'autorisation nécessaire pour supprimer le fichier ou le fichier est en lecture seule.</exception>
      <exception cref="T:System.OperationCanceledException">L'utilisateur a annulé l'opération et <paramref name="onUserCancel" /> a la valeur <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DirectoryExists(System.String)">
      <summary>Retourne la valeur <see langword="True" /> si le répertoire spécifié existe.</summary>
      <param name="directory">Chemin d'accès du répertoire.</param>
      <returns>
        <see langword="True" /> si le répertoire existe ; sinon <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.FileExists(System.String)">
      <summary>Retourne la valeur <see langword="True" /> si le fichier spécifié existe.</summary>
      <param name="file">Nom et chemin d'accès du fichier.</param>
      <exception cref="T:System.ArgumentException">Le nom du fichier se termine par une barre oblique inverse (\).</exception>
      <returns>Retourne <see langword="True" /> si le fichier existe ; sinon, cette méthode retourne <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)">
      <summary>Retourne une collection en lecture seule de chaînes qui représentent le nom des fichiers contenant le texte spécifié.</summary>
      <param name="directory">Répertoire dans lequel effectuer la recherche.</param>
      <param name="containsText">Texte de la recherche.</param>
      <param name="ignoreCase">
        <see langword="True" /> si la recherche doit respecter la casse ; sinon, <see langword="False" />. La valeur par défaut est <see langword="True" />.</param>
      <param name="searchType">Inclure, ou non, les sous-dossiers. La valeur par défaut est <see langword="SearchOption.SearchTopLevelOnly" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin d’accès n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur nulle. il ne contient que des espaces blancs ; Il contient des caractères non valides ; ou il s’agit d’un chemin d’accès d’appareil (commençant par <c> \\ . \</c>).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> est soit <see langword="Nothing" /> soit une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le dossier spécifié n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le répertoire spécifié pointe vers un fichier existant.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Le chemin d'accès du répertoire spécifié contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas les autorisations nécessaires.</exception>
      <returns>Collection en lecture seule des noms des fichiers contenant le texte spécifié.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>Retourne une collection en lecture seule de chaînes qui représentent le nom des fichiers contenant le texte spécifié.</summary>
      <param name="directory">Répertoire dans lequel effectuer la recherche.</param>
      <param name="containsText">Texte de la recherche.</param>
      <param name="ignoreCase">
        <see langword="True" /> si la recherche doit respecter la casse ; sinon, <see langword="False" />. La valeur par défaut est <see langword="True" />.</param>
      <param name="searchType">Inclure, ou non, les sous-dossiers. La valeur par défaut est <see langword="SearchOption.SearchTopLevelOnly" />.</param>
      <param name="fileWildcards">Modèle auquel correspondre.</param>
      <exception cref="T:System.ArgumentException">Le chemin d’accès n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur nulle. il ne contient que des espaces blancs ; Il contient des caractères non valides ; ou il s’agit d’un chemin d’accès d’appareil (commençant par <c> \\ . \</c>).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> est soit <see langword="Nothing" /> soit une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le dossier spécifié n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le répertoire spécifié pointe vers un fichier existant.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Le chemin d'accès du répertoire spécifié contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas les autorisations nécessaires.</exception>
      <returns>Collection en lecture seule des noms des fichiers contenant le texte spécifié.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(System.String)">
      <summary>Retourne une collection de chaînes représentant les chemins d'accès de sous-répertoires présents dans un répertoire.</summary>
      <param name="directory">Nom et chemin d'accès du répertoire.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> est soit <see langword="Nothing" /> soit une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le dossier spécifié n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le répertoire spécifié pointe vers un fichier existant.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas les autorisations nécessaires.</exception>
      <returns>Collection en lecture seule des noms de chemin d'accès des sous-répertoires dans le répertoire spécifié.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>Retourne une collection de chaînes représentant les chemins d'accès de sous-répertoires présents dans un répertoire.</summary>
      <param name="directory">Nom et chemin d'accès du répertoire.</param>
      <param name="searchType">Inclure, ou non, les sous-dossiers. La valeur par défaut est <see langword="SearchOption.SearchTopLevelOnly" />.</param>
      <param name="wildcards">Modèle permettant d'établir une correspondance entre les noms.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">Un ou plusieurs des caractères génériques spécifiés ont une valeur <see langword="Nothing" />, une chaîne vide ou contiennent uniquement des espaces.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le dossier spécifié n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le répertoire spécifié pointe vers un fichier existant.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas les autorisations nécessaires.</exception>
      <returns>Collection en lecture seule des noms de chemin d'accès des sous-répertoires dans le répertoire spécifié.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectoryInfo(System.String)">
      <summary>Retourne un objet <see cref="T:System.IO.DirectoryInfo" /> pour le fichier spécifié.</summary>
      <param name="directory">
        <see langword="String" />. Chemin d'accès du répertoire.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> est soit <see langword="Nothing" /> soit une chaîne vide.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Le chemin d'accès du répertoire contient un signe deux-points (:) ou n'a pas un format valide.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès</exception>
      <returns>Objet <see cref="T:System.IO.DirectoryInfo" /> pour le chemin spécifié.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDriveInfo(System.String)">
      <summary>Retourne un objet <see cref="T:System.IO.DriveInfo" /> pour le fichier spécifié.</summary>
      <param name="drive">Lecteur à examiner.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="drive" /> est soit <see langword="Nothing" /> soit une chaîne vide.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès</exception>
      <returns>Objet <see cref="T:System.IO.DriveInfo" /> pour le lecteur spécifié.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFileInfo(System.String)">
      <summary>Retourne un objet <see cref="T:System.IO.FileInfo" /> pour le fichier spécifié.</summary>
      <param name="file">Nom et chemin d'accès du fichier.</param>
      <exception cref="T:System.ArgumentException">Le chemin d’accès est mal formé. Par exemple, il contient des caractères non valides ou se compose uniquement d'espace blanc. Le nom du fichier contient une marque de barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> est soit <see langword="Nothing" /> soit une chaîne vide.</exception>
      <exception cref="T:System.NotSupportedException">Le chemin d'accès contient le signe deux-points au milieu de la chaîne.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès est trop long.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'accès ACL (liste de contrôle d'accès) au fichier.</exception>
      <returns>Objet <see cref="T:System.IO.FileInfo" /> pour le fichier spécifié</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(System.String)">
      <summary>Retourne une collection en lecture seule de chaînes qui représentent le nom des fichiers d'un répertoire.</summary>
      <param name="directory">Répertoire dans lequel effectuer la recherche.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> a la valeur <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le dossier à rechercher n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="directory" /> pointe vers un fichier existant.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas les autorisations nécessaires.</exception>
      <returns>Collection en lecture seule de noms de fichiers issus du répertoire spécifié.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>Retourne une collection en lecture seule de chaînes qui représentent le nom des fichiers d'un répertoire.</summary>
      <param name="directory">Répertoire dans lequel effectuer la recherche.</param>
      <param name="searchType">Inclure, ou non, les sous-dossiers. La valeur par défaut est <see langword="SearchOption.SearchTopLevelOnly" />.</param>
      <param name="wildcards">Modèle auquel correspondre.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> a la valeur <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le dossier à rechercher n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="directory" /> pointe vers un fichier existant.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas les autorisations nécessaires.</exception>
      <returns>Collection en lecture seule de noms de fichiers issus du répertoire spécifié.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetName(System.String)">
      <summary>Analyse le nom du fichier à partir du chemin d'accès fourni.</summary>
      <param name="path">Obligatoire. Chemin d'accès à analyser. <see langword="String" />.</param>
      <returns>Nom de fichier à partir du chemin d'accès spécifié.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetParentPath(System.String)">
      <summary>Retourne le chemin d'accès parent du chemin d'accès fourni.</summary>
      <param name="path">Chemin d'accès à examiner.</param>
      <exception cref="T:System.ArgumentException">Le chemin d'accès n'a pas de chemin parent car il s'agit d'un chemin d'accès racine.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> a la valeur <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <returns>Chemin d'accès parent du chemin d'accès fourni.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.GetTempFileName">
      <summary>Crée un fichier temporaire de zéro octet nommé de manière unique sur le disque et retourne le chemin d'accès complet de ce fichier.</summary>
      <returns>
        <see langword="String" /> contenant le chemin d'accès complet du fichier temporaire.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String)">
      <summary>Déplace un répertoire d'un emplacement à l'autre.</summary>
      <param name="sourceDirectoryName">Chemin d'accès au répertoire à déplacer.</param>
      <param name="destinationDirectoryName">Chemin d'accès au répertoire dans lequel le répertoire source est déplacé.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> ou <paramref name="destinationDirectoryName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le répertoire n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">La source est un répertoire racine ou le chemin source et le chemin cible sont identiques.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.InvalidOperationException">L'opération est cyclique.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'autorisation requise.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Déplace un répertoire d'un emplacement à l'autre.</summary>
      <param name="sourceDirectoryName">Chemin d'accès au répertoire à déplacer.</param>
      <param name="destinationDirectoryName">Chemin d'accès au répertoire dans lequel le répertoire source est déplacé.</param>
      <param name="showUI">Spécifie s'il faut effectuer un suivi visuel de l'avancement de l'opération. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> ou <paramref name="destinationDirectoryName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le répertoire n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le répertoire cible existe déjà et <paramref name="overwrite" /> est défini à <see langword="False" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.InvalidOperationException">L'opération est cyclique.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'autorisation requise.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Déplace un répertoire d'un emplacement à l'autre.</summary>
      <param name="sourceDirectoryName">Chemin d'accès au répertoire à déplacer.</param>
      <param name="destinationDirectoryName">Chemin d'accès au répertoire dans lequel le répertoire source est déplacé.</param>
      <param name="showUI">Spécifie s'il faut effectuer un suivi visuel de l'avancement de l'opération. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="onUserCancel">Spécifie si oui ou non une exception est levée lorsque l'utilisateur annule l'opération. La valeur par défaut est <see langword="UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> ou <paramref name="destinationDirectoryName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le répertoire n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="onUserCancel" /> a la valeur <see langword="ThrowException" /> et un sous-répertoire du fichier ne peut pas être copié.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="onUserCancel" /> a la valeur <see langword="ThrowException" /> et l'utilisateur annule l'opération ou l'opération ne peut pas être effectuée.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.InvalidOperationException">L'opération est cyclique.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'autorisation requise.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,System.Boolean)">
      <summary>Déplace un répertoire d'un emplacement à l'autre.</summary>
      <param name="sourceDirectoryName">Chemin d'accès au répertoire à déplacer.</param>
      <param name="destinationDirectoryName">Chemin d'accès au répertoire dans lequel le répertoire source est déplacé.</param>
      <param name="overwrite">
        <see langword="True" /> si les répertoires existants doivent être remplacés ; sinon, <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il s’agit d’une chaîne de longueur null ; il ne contient que des espaces blancs ; il contient des caractères non valides ; il s’agit d’un chemin d’accès d’appareil (commençant par \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> ou <paramref name="destinationDirectoryName" /> est <see langword="Nothing" /> ou représente une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le répertoire n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le répertoire cible existe déjà et <paramref name="overwrite" /> est défini à <see langword="False" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.InvalidOperationException">L'opération est cyclique.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'autorisation requise.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String)">
      <summary>Déplace un fichier vers un nouvel emplacement.</summary>
      <param name="sourceFileName">Chemin d'accès au fichier à déplacer.</param>
      <param name="destinationFileName">Chemin d'accès au répertoire dans lequel le fichier doit être déplacé.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> est soit <see langword="Nothing" /> soit une chaîne vide.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier source n'est pas valide ou n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Déplace un fichier vers un nouvel emplacement.</summary>
      <param name="sourceFileName">Chemin d'accès au fichier à déplacer.</param>
      <param name="destinationFileName">Chemin d'accès au répertoire dans lequel le fichier doit être déplacé.</param>
      <param name="showUI">Spécifie s'il faut effectuer un suivi visuel de l'avancement de l'opération. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> est soit <see langword="Nothing" /> soit une chaîne vide.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier source n'est pas valide ou n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Déplace un fichier vers un nouvel emplacement.</summary>
      <param name="sourceFileName">Chemin d'accès au fichier à déplacer.</param>
      <param name="destinationFileName">Chemin d'accès au répertoire dans lequel le fichier doit être déplacé.</param>
      <param name="showUI">Spécifie s'il faut effectuer un suivi visuel de l'avancement de l'opération. La valeur par défaut est <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="onUserCancel">Spécifie si oui ou non une exception est levée lorsque l'utilisateur annule l'opération. La valeur par défaut est <see langword="UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> est soit <see langword="Nothing" /> soit une chaîne vide.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier source n'est pas valide ou n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="onUserCancel" /> a la valeur <see langword="ThrowException" /> et l'utilisateur a annulé l'opération ou une erreur d'E/S non spécifiée s'est produit.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,System.Boolean)">
      <summary>Déplace un fichier vers un nouvel emplacement.</summary>
      <param name="sourceFileName">Chemin d'accès au fichier à déplacer.</param>
      <param name="destinationFileName">Chemin d'accès au répertoire dans lequel le fichier doit être déplacé.</param>
      <param name="overwrite">
        <see langword="True" /> pour remplacer les fichiers existants ; sinon, <see langword="False" />. La valeur par défaut est <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> est soit <see langword="Nothing" /> soit une chaîne vide.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier source n'est pas valide ou n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String)">
      <summary>La méthode <see langword="OpenTextFieldParser" /> vous permet de créer un objet <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> et d'analyser ainsi efficacement et facilement les fichiers texte structurés, comme les journaux. L'objet <see langword="TextFieldParser" /> peut être utilisé pour lire des fichiers délimités et à largeur fixe.</summary>
      <param name="file">Fichier à ouvrir avec <see langword="TextFieldParser" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> a la valeur <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">Une ligne ne peut pas être analysée avec le format spécifié. Le message d’exception spécifie la ligne qui provoque l’exception, tandis que la propriété <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> est assignée au texte contenu dans la ligne.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <returns>
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> pour lire le fichier spécifié.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String,System.Int32[])">
      <summary>La méthode <see langword="OpenTextFieldParser" /> vous permet de créer un objet <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> et d'analyser ainsi efficacement et facilement les fichiers texte structurés, comme les journaux. L'objet <see langword="TextFieldParser" /> peut être utilisé pour lire des fichiers délimités et à largeur fixe.</summary>
      <param name="file">Fichier à ouvrir avec <see langword="TextFieldParser" />.</param>
      <param name="fieldWidths">Largeur des champs.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> a la valeur <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">Une ligne ne peut pas être analysée avec le format spécifié. Le message d’exception spécifie la ligne qui provoque l’exception, tandis que la propriété <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> est assignée au texte contenu dans la ligne.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <returns>
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> pour lire le fichier spécifié.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String,System.String[])">
      <summary>La méthode <see langword="OpenTextFieldParser" /> vous permet de créer un objet <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> et d'analyser ainsi efficacement et facilement les fichiers texte structurés, comme les journaux. L'objet <see langword="TextFieldParser" /> peut être utilisé pour lire des fichiers délimités et à largeur fixe.</summary>
      <param name="file">Fichier à ouvrir avec <see langword="TextFieldParser" />.</param>
      <param name="delimiters">Séparateurs de champs.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> a la valeur <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">Une ligne ne peut pas être analysée avec le format spécifié. Le message d’exception spécifie la ligne qui provoque l’exception, tandis que la propriété <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> est assignée au texte contenu dans la ligne.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <returns>
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> pour lire le fichier spécifié.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(System.String)">
      <summary>Ouvre un objet <see cref="T:System.IO.StreamReader" /> à lire à partir d'un fichier.</summary>
      <param name="file">Fichier à lire.</param>
      <exception cref="T:System.ArgumentException">Le nom de fichier se termine par une barre oblique inverse (\).</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier spécifié est introuvable.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour lire le fichier.</exception>
      <returns>Objet <see cref="T:System.IO.StreamReader" /> à lire à partir du fichier</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(System.String,System.Text.Encoding)">
      <summary>Ouvre un objet <see cref="T:System.IO.StreamReader" /> à lire à partir d'un fichier.</summary>
      <param name="file">Fichier à lire.</param>
      <param name="encoding">Encodage à utiliser pour le contenu du fichier. La valeur par défaut est ASCII.</param>
      <exception cref="T:System.ArgumentException">Le nom de fichier se termine par une barre oblique inverse (\).</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier spécifié est introuvable.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour lire le fichier.</exception>
      <returns>Objet <see cref="T:System.IO.StreamReader" /> à lire à partir du fichier</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(System.String,System.Boolean)">
      <summary>Ouvre un objet <see cref="T:System.IO.StreamWriter" /> à écrire dans le fichier spécifié.</summary>
      <param name="file">Fichier dans lequel écrire.</param>
      <param name="append">
        <see langword="True" /> pour ajouter au contenu du fichier ; <see langword="False" /> pour remplacer le contenu du fichier. La valeur par défaut est <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">Le nom de fichier se termine par une barre oblique finale.</exception>
      <returns>Objet <see cref="T:System.IO.StreamWriter" /> à écrire dans le fichier spécifié.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)">
      <summary>Ouvre un <see cref="T:System.IO.StreamWriter" /> pour écrire dans le fichier spécifié.</summary>
      <param name="file">Fichier dans lequel écrire.</param>
      <param name="append">
        <see langword="True" /> pour ajouter au contenu du fichier  ; <see langword="False" /> pour remplacer le contenu du fichier. La valeur par défaut est <see langword="False" />.</param>
      <param name="encoding">Encodage à utiliser lors de l'écriture dans le fichier. La valeur par défaut est ASCII.</param>
      <exception cref="T:System.ArgumentException">Le nom de fichier se termine par une barre oblique finale.</exception>
      <returns>Objet <see cref="T:System.IO.StreamWriter" /> à écrire dans le fichier spécifié.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllBytes(System.String)">
      <summary>Retourne le contenu d'un fichier sous la forme d'un tableau d'octets.</summary>
      <param name="file">Fichier à lire.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> a la valeur <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.OutOfMemoryException">Il n'y a pas assez de mémoire pour écrire la chaîne dans la mémoire tampon.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <returns>Tableau <see langword="Byte" /> contenant le contenu du fichier.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(System.String)">
      <summary>Retourne le contenu d'un fichier texte sous forme de <see langword="String" />.</summary>
      <param name="file">Nom et chemin d'accès du fichier à lire.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> a la valeur <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.OutOfMemoryException">Il n'y a pas assez de mémoire pour écrire la chaîne dans la mémoire tampon.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <returns>
        <see langword="String" /> contenant le contenu du fichier.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(System.String,System.Text.Encoding)">
      <summary>Retourne le contenu d'un fichier texte sous forme de <see langword="String" />.</summary>
      <param name="file">Nom et chemin d'accès du fichier à lire.</param>
      <param name="encoding">Encodage de caractères à utiliser pour la lecture du fichier. La valeur par défaut est UTF-8.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> a la valeur <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.OutOfMemoryException">Il n'y a pas assez de mémoire pour écrire la chaîne dans la mémoire tampon.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <returns>
        <see langword="String" /> contenant le contenu du fichier.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameDirectory(System.String,System.String)">
      <summary>Renomme un répertoire.</summary>
      <param name="directory">Chemin d'accès et nom du répertoire à renommer.</param>
      <param name="newName">Nouveau nom du répertoire.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="newName" /> contient des informations de chemin d’accès.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> a la valeur <see langword="Nothing" />.  
  
- ou - 
 <paramref name="newName" /> est soit <see langword="Nothing" /> soit une chaîne vide.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le répertoire n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Un fichier ou répertoire existe avec le nom spécifié dans <paramref name="newName" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'autorisation requise.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameFile(System.String,System.String)">
      <summary>Renomme un fichier.</summary>
      <param name="file">Fichier à renommer.</param>
      <param name="newName">Nouveau nom du fichier.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="newName" /> contient des informations relatives au chemin d’accès ou se termine par une barre oblique inverse (\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> a la valeur <see langword="Nothing" />.  
  
- ou - 
 <paramref name="newName" /> est soit <see langword="Nothing" /> soit une chaîne vide.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Un fichier ou répertoire existe avec le nom spécifié dans <paramref name="newName" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas l'autorisation requise.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllBytes(System.String,System.Byte[],System.Boolean)">
      <summary>Écrit des données dans un fichier binaire.</summary>
      <param name="file">Chemin d'accès et nom du fichier dans lequel écrire.</param>
      <param name="data">Données à écrire dans le fichier.</param>
      <param name="append">
        <see langword="True" /> pour ajouter au contenu du fichier  ; <see langword="False" /> pour remplacer le contenu du fichier. La valeur par défaut est <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> a la valeur <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.OutOfMemoryException">Il n'y a pas assez de mémoire pour écrire la chaîne dans la mémoire tampon.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean)">
      <summary>Écrit du texte dans un fichier.</summary>
      <param name="file">Fichier dans lequel écrire.</param>
      <param name="text">Texte à écrire dans le fichier.</param>
      <param name="append">
        <see langword="True" /> pour ajouter au contenu du fichier ; <see langword="False" /> pour remplacer le contenu du fichier. La valeur par défaut est <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> a la valeur <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.OutOfMemoryException">Il n'y a pas assez de mémoire pour écrire la chaîne dans la mémoire tampon.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)">
      <summary>Écrit du texte dans un fichier.</summary>
      <param name="file">Fichier dans lequel écrire.</param>
      <param name="text">Texte à écrire dans le fichier.</param>
      <param name="append">
        <see langword="True" /> pour ajouter au contenu du fichier ; <see langword="False" /> pour remplacer le contenu du fichier. La valeur par défaut est <see langword="False" />.</param>
      <param name="encoding">Encodage à utiliser lors de l'écriture dans le fichier. La valeur par défaut est UTF-8.</param>
      <exception cref="T:System.ArgumentException">Le chemin n’est pas valide pour l’une des raisons suivantes : il correspond à une chaîne de longueur nulle ; il ne contient que des espaces blancs ; il comporte des caractères non valides ; il représente un chemin d’appareil (commençant par \\.\) ; il se termine par une barre oblique finale.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> a la valeur <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier n'existe pas.</exception>
      <exception cref="T:System.IO.IOException">Le fichier est utilisé par un autre processus ou une erreur d'E/S se produit.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin d'accès dépasse la longueur maximale définie par le système.</exception>
      <exception cref="T:System.NotSupportedException">Un nom de fichier ou de dossier du chemin d'accès contient un signe deux-points (:) ou n'a pas un format correct.</exception>
      <exception cref="T:System.OutOfMemoryException">Il n'y a pas assez de mémoire pour écrire la chaîne dans la mémoire tampon.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations nécessaires pour afficher le chemin d'accès.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.CurrentDirectory">
      <summary>Obtient ou définit le répertoire actif.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le chemin d'accès n'est pas valide.</exception>
      <exception cref="T:System.UnauthorizedAccessException">L'utilisateur n'a pas les autorisations nécessaires.</exception>
      <returns>Répertoire actif pour les opérations d'E/S de fichier.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.Drives">
      <summary>Retourne une collection en lecture seule de tous les noms de lecteurs disponibles.</summary>
      <returns>Collection en lecture seule de tous les lecteurs disponibles en tant qu'objets <see cref="T:System.IO.DriveInfo" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories">
      <summary>Obtient un objet qui fournit des propriétés pour accéder aux répertoires communément référencés.</summary>
      <returns>Cette propriété retourne l'objet <see cref="T:Microsoft.VisualBasic.FileIO.SpecialDirectories" /> de l'ordinateur.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.Internal.ContextValue`1">
      <summary>Cette classe prend en charge <see langword="My" /> en Visual Basic.</summary>
      <typeparam name="T">Type de l'objet à stocker.</typeparam>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.Internal.ContextValue`1.#ctor">
      <summary>Cette classe prend en charge <see langword="My" /> en Visual Basic.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.Internal.ContextValue`1.Value">
      <summary>Cette propriété prend en charge <see langword="My" /> en Visual Basic.</summary>
      <returns>Valeur associée à cette classe.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.RegistryProxy">
      <summary>Fournit des propriétés et des méthodes permettant de manipuler le Registre.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.RegistryProxy.GetValue(System.String,System.String,System.Object)">
      <summary>Obtient une valeur d'une clé de Registre.</summary>
      <param name="keyName">
        <see langword="String" />. Clé à partir de laquelle la valeur doit être récupérée. Obligatoire.</param>
      <param name="valueName">
        <see langword="String" />. Valeur à récupérer. Obligatoire.</param>
      <param name="defaultValue">
        <see langword="Object" />. Valeur par défaut à fournir si la valeur n'existe pas. Obligatoire.</param>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations requises pour lire dans la clé de Registre.</exception>
      <exception cref="T:System.IO.IOException">
        <see cref="T:Microsoft.Win32.RegistryKey" /> qui contient la valeur spécifiée a été marqué pour suppression.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="keyName" /> ne commence pas par une racine de Registre valide.</exception>
      <returns>Obtient une valeur d'une clé de Registre.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(System.String,System.String,System.Object)">
      <summary>Écrit une valeur dans une clé de Registre.</summary>
      <param name="keyName">
        <see langword="String" />. Nom de la clé dans laquelle écrire. Obligatoire.</param>
      <param name="valueName">
        <see langword="String" />. Nom de la valeur à écrire. Obligatoire.</param>
      <param name="value">
        <see langword="Object" />. Valeur à écrire. Obligatoire.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> a la valeur <see langword="Nothing" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="keyName" /> ne commence pas par une racine de Registre valide.  
  
- ou - 
 La longueur de <paramref name="valueName" /> est supérieure à la longueur maximale autorisée (255 caractères).</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <see cref="T:Microsoft.Win32.RegistryKey" /> étant en lecture seule, il n’est pas accessible en écriture ; il s’agit par exemple d’un nœud de niveau racine ou il n’a pas été ouvert avec un accès en écriture.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations requises pour créer ou modifier des clés de Registre.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)">
      <summary>Écrit une valeur dans une clé de Registre.</summary>
      <param name="keyName">
        <see langword="String" />. Nom de la clé dans laquelle écrire. Obligatoire.</param>
      <param name="valueName">
        <see langword="String" />. Nom de la valeur à écrire. Obligatoire.</param>
      <param name="value">
        <see langword="Object" />. Valeur à écrire. Obligatoire.</param>
      <param name="valueKind">
        <see cref="T:Microsoft.Win32.RegistryValueKind" />. Obligatoire.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> a la valeur <see langword="Nothing" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="keyName" /> ne commence pas par une racine de Registre valide.  
  
- ou - 
 La longueur de <paramref name="keyName" /> est supérieure à la longueur maximale autorisée (255 caractères).  
  
- ou - 
Le type de <paramref name="value" /> ne correspond pas au type de données de Registre spécifié par <paramref name="valueKind" />, par conséquent les données ne peuvent pas être converties correctement.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <see cref="T:Microsoft.Win32.RegistryKey" /> étant en lecture seule, il n'est pas accessible en écriture ; il s'agit par exemple d'un nœud de niveau racine ou il n'a pas été ouvert avec un accès en écriture.</exception>
      <exception cref="T:System.Security.SecurityException">L'utilisateur n'a pas les autorisations requises pour créer ou modifier des clés de Registre.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.RegistryProxy.ClassesRoot">
      <summary>Retourne un type <see cref="T:Microsoft.Win32.RegistryKey" /> qui fournit l'accès à <see langword="HKEY_CLASSES_ROOT" />.</summary>
      <returns>
        <see cref="T:Microsoft.Win32.RegistryKey" />
      </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentConfig">
      <summary>Retourne un type <see cref="T:Microsoft.Win32.RegistryKey" /> qui fournit l'accès à <see langword="HKEY_CURRENT_CONFIG" />.</summary>
      <returns>
        <see cref="T:Microsoft.Win32.RegistryKey" />
      </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentUser">
      <summary>Retourne un type <see cref="T:Microsoft.Win32.RegistryKey" /> qui fournit l'accès à <see langword="HKEY_CURRENT_USER" />.</summary>
      <returns>
        <see cref="T:Microsoft.Win32.RegistryKey" />
      </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.RegistryProxy.LocalMachine">
      <summary>Retourne un type <see cref="T:Microsoft.Win32.RegistryKey" /> qui fournit l'accès à <see langword="HKEY_LOCAL_MACHINE" />.</summary>
      <returns>
        <see cref="T:Microsoft.Win32.RegistryKey" />
      </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.RegistryProxy.PerformanceData">
      <summary>Retourne un type <see cref="T:Microsoft.Win32.RegistryKey" /> qui fournit l'accès à <see langword="HKEY_PERFORMANCE_DATA" />.</summary>
      <returns>
        <see cref="T:Microsoft.Win32.RegistryKey" />
      </returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.RegistryProxy.Users">
      <summary>Retourne un type <see cref="T:Microsoft.Win32.RegistryKey" /> qui fournit l'accès à <see langword="HKEY_USERS" />.</summary>
      <returns>
        <see cref="T:Microsoft.Win32.RegistryKey" />
      </returns>
    </member>
    <member name="T:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy">
      <summary>Fournit des propriétés utilisées pour accéder aux répertoires communément référencés.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.AllUsersApplicationData">
      <summary>Obtient un nom de chemin d'accès pointant sur le répertoire des données d'application pour tous les utilisateurs.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le chemin d'accès est vide, généralement parce que le système d'exploitation ne prend pas en charge le répertoire.</exception>
      <returns>Chemin d'accès au répertoire de données d'application pour tous les utilisateurs.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.CurrentUserApplicationData">
      <summary>Obtient un nom de chemin d'accès pointant sur le répertoire des données d'application pour l'utilisateur en cours.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le chemin d'accès est vide, généralement parce que le système d'exploitation ne prend pas en charge le répertoire.</exception>
      <returns>Chemin d'accès au répertoire de données d'application pour l'utilisateur en cours.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.Desktop">
      <summary>Obtient un nom de chemin d'accès pointant sur le répertoire Desktop.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le chemin d'accès est vide, généralement parce que le système d'exploitation ne prend pas en charge le répertoire.</exception>
      <returns>Chemin d'accès au répertoire Bureau.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.MyDocuments">
      <summary>Obtient un nom de chemin d'accès pointant vers le répertoire Mes documents.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le chemin d'accès est vide, généralement parce que le système d'exploitation ne prend pas en charge le répertoire.</exception>
      <returns>Chemin d'accès au répertoire Mes documents.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.MyMusic">
      <summary>Obtient un nom de chemin d'accès pointant sur le répertoire My Music.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le chemin d'accès est vide, généralement parce que le système d'exploitation ne prend pas en charge le répertoire.</exception>
      <returns>Chemin d'accès au répertoire Ma musique.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.MyPictures">
      <summary>Obtient un nom de chemin d'accès pointant sur le répertoire My Pictures.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le chemin d'accès est vide, généralement parce que le système d'exploitation ne prend pas en charge le répertoire.</exception>
      <returns>Chemin d'accès au répertoire Mes images.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.ProgramFiles">
      <summary>Obtient un chemin d’accès pointant sur le répertoire Program Files.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le chemin d'accès est vide, généralement parce que le système d'exploitation ne prend pas en charge le répertoire.</exception>
      <returns>Chemin d’accès au répertoire Program Files .</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.Programs">
      <summary>Obtient un nom de chemin d'accès pointant sur le répertoire Programs.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le chemin d'accès est vide, généralement parce que le système d'exploitation ne prend pas en charge le répertoire.</exception>
      <returns>Chemin d'accès au répertoire Programmes.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.Temp">
      <summary>Obtient un nom de chemin d'accès pointant sur le répertoire Temp.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le chemin d'accès est vide, généralement parce que le système d'exploitation ne prend pas en charge le répertoire.</exception>
      <returns>Chemin d'accès au répertoire Temp.</returns>
    </member>
  </members>
</doc>