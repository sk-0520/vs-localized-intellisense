<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Windows.Forms.Design</name>
  </assembly>
  <members>
    <member name="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged&quot; /&gt; event.">Fornisce dati per l'evento <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs.#ctor(System.ComponentModel.Design.DesignSurface,System.ComponentModel.Design.DesignSurface)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs" />.</summary>
      <param name="oldSurface" vsli:raw="The design surface that is losing activation.">Area di progettazione che sta per perdere l'attivazione.</param>
      <param name="newSurface" vsli:raw="The design surface that is gaining activation.">Area di progettazione che sta per essere attivata.</param>
    </member>
    <member name="P:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs.NewSurface">
      <summary vsli:raw="Gets the design surface that is gaining activation.">Ottiene l'area di progettazione che sta per essere attivata.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; that is gaining activation.">Oggetto <see cref="T:System.ComponentModel.Design.DesignSurface" /> che sta per essere attivato.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs.OldSurface">
      <summary vsli:raw="Gets the design surface that is losing activation.">Ottiene l'area di progettazione che sta per perdere l'attivazione.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; that is losing activation.">Oggetto <see cref="T:System.ComponentModel.Design.DesignSurface" /> che sta per essere attivato.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged&quot; /&gt; event of a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceManager&quot; /&gt;. This class cannot be inherited.">Rappresenta il metodo che gestirà l'evento <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged" /> di un oggetto <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />. La classe non può essere ereditata.</summary>
      <param name="sender" vsli:raw="The source of the event, the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceManager&quot; /&gt;.">L'origine dell'evento, ovvero <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />.</param>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs&quot; /&gt; that contains the event data.">Oggetto <see cref="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="T:System.ComponentModel.Design.ArrayEditor">
      <summary vsli:raw="Provides a user interface for editing arrays at design time.">Fornisce un'interfaccia utente per la modifica delle matrici in fase di progettazione.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of &lt;see cref=&quot;T:System.ComponentModel.Design.ArrayEditor&quot; /&gt; using the specified data type for the array.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.ArrayEditor" /> utilizzando il tipo di dati specificato per la matrice.</summary>
      <param name="type" vsli:raw="The data type of the items in the array.">Tipo di dati degli elementi della matrice.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.CreateCollectionItemType">
      <summary vsli:raw="Gets the data type that this collection is designed to contain.">Ottiene il tipo di dati che questo insieme può contenere.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that indicates the data type that the collection is designed to contain.">Oggetto <see cref="T:System.Type" /> che indica il tipo di dati che l'insieme può contenere.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.GetItems(System.Object)">
      <summary vsli:raw="Gets the items in the array.">Ottiene gli elementi della matrice.</summary>
      <param name="editValue" vsli:raw="The array from which to retrieve the items.">Matrice dalla quale recuperare gli elementi.</param>
      <returns vsli:raw="An array consisting of the items within the specified array. If the object specified in the &lt;paramref name=&quot;editValue&quot; /&gt; parameter is not an array, a new empty object is returned.">Matrice costituita dagli elementi all'interno della matrice specificata. Se l'oggetto specificato nel parametro <paramref name="editValue" /> non è una matrice, verrà restituito un nuovo oggetto vuoto.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.SetItems(System.Object,System.Object[])">
      <summary vsli:raw="Sets the items in the array.">Imposta gli elementi della matrice.</summary>
      <param name="editValue" vsli:raw="The array to set the items to.">Matrice su cui impostare gli elementi.</param>
      <param name="value" vsli:raw="The array of objects to set as the items of the array.">Matrice di oggetti da impostare come elementi della matrice.</param>
      <returns vsli:raw="An instance of the new array. If the object specified by the &lt;paramref name=&quot;editValue&quot; /&gt; parameter is not an array, the object specified by the &lt;paramref name=&quot;editValue&quot; /&gt; parameter is returned.">Istanza della nuova matrice. Se l'oggetto specificato dal parametro <paramref name="editValue" /> non è una matrice, verrà restituito l'oggetto specificato dal parametro <paramref name="editValue" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.BinaryEditor">
      <summary vsli:raw="Provides a user interface for editing binary data.">Fornisce un'interfaccia utente per la modifica di dati binari.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.BinaryEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.BinaryEditor&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.BinaryEditor" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.BinaryEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the value of the specified object using the specified service provider and context.">Modifica il valore dell'oggetto specificato utilizzando il provider di servizi e il contesto specificati.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che può essere usato per ottenere ulteriori informazioni sul contesto.</param>
      <param name="provider" vsli:raw="A service provider object through which editing services may be obtained.">Oggetto provider di servizi tramite il quale è possibile ottenere i servizi di modifica.</param>
      <param name="value" vsli:raw="The object to edit the value of.">Oggetto del quale si deve modificare il valore.</param>
      <returns vsli:raw="The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.">Nuovo valore dell'oggetto. Se il valore dell'oggetto non è stato modificato, deve essere restituito lo stesso oggetto che è stato passato.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.BinaryEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editor style used by the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.Design.BinaryEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot;&gt;&lt;/xref&gt; method.">Ottiene lo stile dell'editor usato dal metodo <see cref="M:System.ComponentModel.Design.BinaryEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che può essere usato per ottenere ulteriori informazioni sul contesto.</param>
      <returns vsli:raw="An &lt;code data-dev-comment-type=&quot;langword&quot;&gt;enum&lt;/code&gt; value indicating the provided editing style.">Valore <see langword="enum" /> che indica lo stile di modifica fornito.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ByteViewer">
      <summary vsli:raw="Displays byte arrays in hexadecimal, ANSI, and Unicode formats.">Visualizza matrici di byte in formato esadecimale, ANSI e Unicode.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.ByteViewer&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.ByteViewer" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.GetBytes">
      <summary vsli:raw="Gets the bytes in the buffer.">Ottiene i byte nel buffer.</summary>
      <returns vsli:raw="The unsigned byte array reference.">Riferimento senza segno alla matrice di byte.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.GetDisplayMode">
      <summary vsli:raw="Gets the display mode for the control.">Ottiene la modalità di visualizzazione relativa al controllo.</summary>
      <returns vsli:raw="The display mode that this control uses. The returned value is defined in &lt;see cref=&quot;T:System.ComponentModel.Design.DisplayMode&quot; /&gt;.">Modalità di visualizzazione utilizzata da questo controllo. Il valore restituito è definito in <see cref="T:System.ComponentModel.Design.DisplayMode" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Windows.Forms.Control.KeyDown&quot; /&gt; event.">Genera l'evento <see cref="E:System.Windows.Forms.Control.KeyDown" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.KeyEventArgs&quot; /&gt; that contains the event data.">Oggetto <see cref="T:System.Windows.Forms.KeyEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Windows.Forms.Control.Layout&quot; /&gt; event.">Genera l'evento <see cref="E:System.Windows.Forms.Control.Layout" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.LayoutEventArgs&quot; /&gt; that contains the event data.">Oggetto <see cref="T:System.Windows.Forms.LayoutEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Windows.Forms.Control.Paint&quot; /&gt; event.">Genera l'evento <see cref="E:System.Windows.Forms.Control.Paint" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.PaintEventArgs&quot; /&gt; that contains the event data.">Oggetto <see cref="T:System.Windows.Forms.PaintEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SaveToFile(System.String)">
      <summary vsli:raw="Writes the raw data from the data buffer to a file.">Scrive i dati non elaborati dal buffer di dati in un file.</summary>
      <param name="path" vsli:raw="The file path to save to.">Percorso del file in cui salvare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="path" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is an empty string (&quot;&quot;), contains only white space, or contains one or more invalid characters.">
        <paramref name="path" /> è una stringa vuota (""), contiene solo spazi vuoti oppure contiene uno o più caratteri non validi.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The specified path is invalid, such as being on an unmapped drive.">Il percorso specificato non è valido, ad esempio si trova in un'unità non mappata.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file write failed.">La scrittura del file non è riuscita.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The specified path, file name, or both exceed the system-defined maximum length.">Il percorso specificato, il nome file o entrambi superano la lunghezza massima definita dal sistema.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The access requested is not permitted by the operating system for the specified &lt;paramref name=&quot;path&quot; /&gt;, such as when access is &lt;see langword=&quot;Write&quot; /&gt; or &lt;see langword=&quot;ReadWrite&quot; /&gt; and the file or directory is set for read-only access.">L'accesso richiesto non è consentito dal sistema operativo per il parametro <paramref name="path" /> specificato, ad esempio quando l'accesso è <see langword="Write" /> o <see langword="ReadWrite" /> e il file o la directory è impostato per l'accesso in sola lettura.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.ScrollChanged(System.Object,System.EventArgs)">
      <summary vsli:raw="Handles the &lt;see cref=&quot;E:System.Windows.Forms.ScrollBar.ValueChanged&quot; /&gt; event on the &lt;see cref=&quot;T:System.ComponentModel.Design.ByteViewer&quot; /&gt; control's &lt;see cref=&quot;T:System.Windows.Forms.ScrollBar&quot; /&gt;.">Gestisce l'evento <see cref="E:System.Windows.Forms.ScrollBar.ValueChanged" /> sull'oggetto <see cref="T:System.ComponentModel.Design.ByteViewer" /> del controllo di <see cref="T:System.Windows.Forms.ScrollBar" />.</summary>
      <param name="source" vsli:raw="The source of the event.">Origine dell'evento.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SetBytes(System.Byte[])">
      <summary vsli:raw="Sets the byte array to display in the viewer.">Imposta la matrice di byte da visualizzare nel visualizzatore.</summary>
      <param name="bytes" vsli:raw="The byte array to display.">Matrice di byte da visualizzare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The specified byte array is &lt;see langword=&quot;null&quot; /&gt;.">La matrice di byte specificata è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SetDisplayMode(System.ComponentModel.Design.DisplayMode)">
      <summary vsli:raw="Sets the current display mode.">Imposta la modalità di visualizzazione corrente.</summary>
      <param name="mode" vsli:raw="The display mode to set.">Modalità di visualizzazione da impostare.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException" vsli:raw="The specified display mode is not from the &lt;see cref=&quot;T:System.ComponentModel.Design.DisplayMode&quot; /&gt; enumeration.">La modalità di visualizzazione specificata non proviene dall'enumerazione <see cref="T:System.ComponentModel.Design.DisplayMode" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SetFile(System.String)">
      <summary vsli:raw="Sets the file to display in the viewer.">Imposta il file da visualizzare nel visualizzatore.</summary>
      <param name="path" vsli:raw="The file path to load from.">Percorso del file da cui eseguire il caricamento.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="path" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;path&quot; /&gt; is an empty string (&quot;&quot;), contains only white space, or contains one or more invalid characters.">
        <paramref name="path" /> è una stringa vuota (""), contiene solo spazi vuoti oppure contiene uno o più caratteri non validi.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException" vsli:raw="The specified path is invalid, such as being on an unmapped drive.">Il percorso specificato non è valido, ad esempio si trova in un'unità non mappata.</exception>
      <exception cref="T:System.IO.IOException" vsli:raw="The file load failed.">Il caricamento del file non è riuscito.</exception>
      <exception cref="T:System.IO.PathTooLongException" vsli:raw="The specified path, file name, or both exceed the system-defined maximum length.">Il percorso specificato, il nome file o entrambi superano la lunghezza massima definita dal sistema.</exception>
      <exception cref="T:System.UnauthorizedAccessException" vsli:raw="The access requested is not permitted by the operating system for the specified &lt;paramref name=&quot;path&quot; /&gt;, such as when access is &lt;see langword=&quot;Write&quot; /&gt; or &lt;see langword=&quot;ReadWrite&quot; /&gt; and the file or directory is set for read-only access.">L'accesso richiesto non è consentito dal sistema operativo per il parametro <paramref name="path" /> specificato, ad esempio quando l'accesso è <see langword="Write" /> o <see langword="ReadWrite" /> e il file o la directory è impostato per l'accesso in sola lettura.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SetStartLine(System.Int32)">
      <summary vsli:raw="Sets the current line for the &lt;see cref=&quot;F:System.ComponentModel.Design.DisplayMode.Hexdump&quot; /&gt; view.">Imposta la riga corrente per la visualizzazione <see cref="F:System.ComponentModel.Design.DisplayMode.Hexdump" />.</summary>
      <param name="line" vsli:raw="The current line to display from.">Riga corrente dalla quale visualizzare.</param>
    </member>
    <member name="T:System.ComponentModel.Design.CollectionEditor">
      <summary vsli:raw="Provides a user interface that can edit most types of collections at design time.">Fornisce un'interfaccia utente con cui è possibile modificare la maggior parte dei tipi di insiemi in fase di progettazione.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.CollectionEditor&quot; /&gt; class using the specified collection type.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.CollectionEditor" /> che utilizza il tipo di insieme specificato.</summary>
      <param name="type" vsli:raw="The type of the collection for this editor to edit.">Tipo dell'insieme relativo all'editor da modificare.</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CancelChanges">
      <summary vsli:raw="Cancels changes to the collection.">Annulla le modifiche all'insieme.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CanRemoveInstance(System.Object)">
      <summary vsli:raw="Indicates whether original members of the collection can be removed.">Indica se è possibile rimuovere i membri originali dell'insieme.</summary>
      <param name="value" vsli:raw="The value to remove.">Valore da rimuovere.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if it is permissible to remove this value from the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default implementation always returns &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> se è possibile rimuovere questo valore dall'insieme. <see langword="false" /> in caso contrario. L'implementazione predefinita restituisce sempre <see langword="true" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CanSelectMultipleInstances">
      <summary vsli:raw="Indicates whether multiple collection items can be selected at once.">Indica se è possibile selezionare contemporaneamente più elementi dell'insieme.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if it multiple collection members can be selected at the same time; otherwise, &lt;see langword=&quot;false&quot; /&gt;. By default, this returns &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> se è possibile selezionare contemporaneamente più membri dell'insieme. <see langword="false" /> in caso contrario. Per impostazione predefinita viene restituito <see langword="true" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateCollectionForm">
      <summary vsli:raw="Creates a new form to display and edit the current collection.">Crea un nuovo form per visualizzare e modificare l'insieme corrente.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CollectionEditor.CollectionForm&quot; /&gt; to provide as the user interface for editing the collection.">
        <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" /> da fornire come interfaccia utente per la modifica dell'insieme.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateCollectionItemType">
      <summary vsli:raw="Gets the data type that this collection contains.">Ottiene il tipo di dati contenuto in questo insieme.</summary>
      <returns vsli:raw="The data type of the items in the collection, or an &lt;see cref=&quot;T:System.Object&quot; /&gt; if no &lt;see langword=&quot;Item&quot; /&gt; property can be located on the collection.">Tipo di dati degli elementi nell'insieme o oggetto <see cref="T:System.Object" /> se non è possibile individuare alcuna proprietà <see langword="Item" /> nell'insieme.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateInstance(System.Type)">
      <summary vsli:raw="Creates a new instance of the specified collection item type.">Crea una nuova istanza del tipo di elemento dell'insieme specificato.</summary>
      <param name="itemType" vsli:raw="The type of item to create.">Tipo di elemento da creare.</param>
      <returns vsli:raw="A new instance of the specified object.">Nuova istanza dell'oggetto specificato.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateNewItemTypes">
      <summary vsli:raw="Gets the data types that this collection editor can contain.">Ottiene i tipi di dati che possono essere contenuti in questo editor degli insiemi.</summary>
      <returns vsli:raw="An array of data types that this collection can contain.">Matrice di tipi di dati che possono essere contenuti in questo insieme.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.DestroyInstance(System.Object)">
      <summary vsli:raw="Destroys the specified instance of the object.">Elimina l'istanza specificata dell'oggetto.</summary>
      <param name="instance" vsli:raw="The object to destroy.">Oggetto da eliminare.</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the value of the specified object using the specified service provider and context.">Modifica il valore dell'oggetto specificato utilizzando il provider di servizi e il contesto specificati.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che può essere usato per ottenere ulteriori informazioni sul contesto.</param>
      <param name="provider" vsli:raw="A service provider object through which editing services can be obtained.">Un oggetto provider di servizi tramite il quale è possibile ottenere i servizi di modifica.</param>
      <param name="value" vsli:raw="The object to edit the value of.">Oggetto del quale si deve modificare il valore.</param>
      <exception cref="T:System.ComponentModel.Design.CheckoutException" vsli:raw="An attempt to check out a file that is checked into a source code management program did not succeed.">Un tentativo di estrarre un file archiviato in un programma di gestione del codice sorgente non è riuscito.</exception>
      <returns vsli:raw="The new value of the object. If the value of the object has not changed, this should return the same object it was passed.">Nuovo valore dell'oggetto. Se il valore dell'oggetto non è stato modificato, dovrebbe restituire lo stesso oggetto che è stato passato.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetDisplayText(System.Object)">
      <summary vsli:raw="Retrieves the display text for the given list item.">Recupera il testo da visualizzare per l'elemento dell'elenco specificato.</summary>
      <param name="value" vsli:raw="The list item for which to retrieve display text.">Elemento dell'elenco per il quale recuperare il testo da visualizzare.</param>
      <returns vsli:raw="The display text for &lt;paramref name=&quot;value&quot; /&gt;.">Testo da visualizzare per <paramref name="value" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the edit style used by the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.Design.CollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot;&gt;&lt;/xref&gt; method.">Ottiene lo stile di modifica utilizzato dal metodo <see cref="M:System.ComponentModel.Design.CollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che può essere usato per ottenere ulteriori informazioni sul contesto.</param>
      <returns vsli:raw="A &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle&quot;&gt;&lt;/xref&gt; enumeration value indicating the provided editing style. If the method is not supported in the specified context, this method will return the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle.None&quot;&gt;&lt;/xref&gt; identifier.">Valore di enumerazione <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> che indica lo stile di modifica fornito. Se il metodo non è supportato nel contesto specificato, verrà restituito l'identificatore <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetItems(System.Object)">
      <summary vsli:raw="Gets an array of objects containing the specified collection.">Ottiene una matrice di oggetti che contengono l'insieme specificato.</summary>
      <param name="editValue" vsli:raw="The collection to edit.">Insieme da modificare.</param>
      <returns vsli:raw="An array containing the collection objects, or an empty object array if the specified collection does not inherit from &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt;.">Matrice che contiene gli oggetti dell'insieme o matrice di oggetti vuota se l'insieme specificato non eredita dalla classe <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetObjectsFromInstance(System.Object)">
      <summary vsli:raw="Returns a list containing the given object.">Restituisce un elenco contenente l'oggetto specificato.</summary>
      <param name="instance" vsli:raw="An &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; returned as an object.">
        <see cref="T:System.Collections.ArrayList" /> restituito sotto forma di oggetto.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; which contains the individual objects to be created.">Oggetto <see cref="T:System.Collections.ArrayList" /> contenente i singoli oggetti da creare.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetService(System.Type)">
      <summary vsli:raw="Gets the requested service, if it is available.">Ottiene il servizio richiesto, se disponibile.</summary>
      <param name="serviceType" vsli:raw="The type of service to retrieve.">Tipo di servizio da recuperare.</param>
      <returns vsli:raw="An instance of the service, or &lt;see langword=&quot;null&quot; /&gt; if the service cannot be found.">Istanza del servizio oppure <see langword="null" /> se non è possibile trovare il servizio.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.SetItems(System.Object,System.Object[])">
      <summary vsli:raw="Sets the specified array as the items of the collection.">Imposta la matrice specificata come elementi dell'insieme.</summary>
      <param name="editValue" vsli:raw="The collection to edit.">Insieme da modificare.</param>
      <param name="value" vsli:raw="An array of objects to set as the collection items.">Matrice di oggetti da impostare come elementi dell'insieme.</param>
      <returns vsli:raw="The newly created collection object or, otherwise, the collection indicated by the &lt;paramref name=&quot;editValue&quot; /&gt; parameter.">Oggetto insieme appena creato o insieme indicato dal parametro <paramref name="editValue" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.ShowHelp">
      <summary vsli:raw="Displays the default Help topic for the collection editor.">Visualizza l'argomento della Guida predefinito per l'editor dell'insieme.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionItemType">
      <summary vsli:raw="Gets the data type of each item in the collection.">Ottiene il tipo di dati di ogni elemento dell'insieme.</summary>
      <returns vsli:raw="The data type of the collection items.">Tipo di dati degli elementi dell'insieme.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionType">
      <summary vsli:raw="Gets the data type of the collection object.">Ottiene il tipo di dati dell'oggetto insieme.</summary>
      <returns vsli:raw="The data type of the collection object.">Tipo di dati dell'oggetto insieme.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.Context">
      <summary vsli:raw="Gets a type descriptor that indicates the current context.">Ottiene un descrittore del tipo che indica il contesto corrente.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that indicates the context currently in use, or &lt;see langword=&quot;null&quot; /&gt; if no context is available.">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che indica il contesto corrente oppure <see langword="null" /> se non è disponibile alcun contesto.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.HelpTopic">
      <summary vsli:raw="Gets the Help keyword to display the Help topic or topic list for when the editor's dialog box Help button or the F1 key is pressed.">Ottiene la parola chiave della Guida per cui visualizzare l'argomento o l'elenco degli argomenti della Guida quando si sceglie il pulsante ? nella finestra di dialogo dell'editor o si preme F1.</summary>
      <returns vsli:raw="The Help keyword to display the Help topic or topic list for when Help is requested from the editor.">Parola chiave della Guida per cui visualizzare l'argomento o l'elenco di argomenti della Guida quando la Guida è richiesta dall'editor.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.NewItemTypes">
      <summary vsli:raw="Gets the available types of items that can be created for this collection.">Ottiene i tipi di elementi disponibili che è possibile creare per questo insieme.</summary>
      <returns vsli:raw="The types of items that can be created.">Tipi di elementi che è possibile creare.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.CollectionEditor.CollectionForm">
      <summary vsli:raw="Provides a modal dialog box for editing the contents of a collection using a &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditor&quot; /&gt;.">Fornisce una finestra di dialogo modale per la modifica del contenuto di un insieme utilizzando un <see cref="T:System.Drawing.Design.UITypeEditor" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.#ctor(System.ComponentModel.Design.CollectionEditor)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.CollectionEditor.CollectionForm&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" />.</summary>
      <param name="editor" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.CollectionEditor&quot; /&gt; to use for editing the collection.">Oggetto <see cref="T:System.ComponentModel.Design.CollectionEditor" /> da utilizzare per la modifica dell'insieme.</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CanRemoveInstance(System.Object)">
      <summary vsli:raw="Indicates whether you can remove the original members of the collection.">Indica se è possibile rimuovere i membri originali dell'insieme.</summary>
      <param name="value" vsli:raw="The value to remove.">Valore da rimuovere.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if it is permissible to remove this value from the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;. By default, this method returns the value from &lt;see cref=&quot;M:System.ComponentModel.Design.CollectionEditor.CanRemoveInstance(System.Object)&quot; /&gt; of the &lt;see cref=&quot;T:System.ComponentModel.Design.CollectionEditor&quot; /&gt; for this form.">
        <see langword="true" /> se è possibile rimuovere questo valore dall'insieme. <see langword="false" /> in caso contrario. Per impostazione predefinita, questo metodo restituisce il valore dal metodo <see cref="M:System.ComponentModel.Design.CollectionEditor.CanRemoveInstance(System.Object)" /> dell'oggetto <see cref="T:System.ComponentModel.Design.CollectionEditor" /> per questo form.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CanSelectMultipleInstances">
      <summary vsli:raw="Indicates whether multiple collection items can be selected at once.">Indica se è possibile selezionare contemporaneamente più elementi dell'insieme.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if it multiple collection members can be selected at the same time; otherwise, &lt;see langword=&quot;false&quot; /&gt;. By default, this method returns the value from &lt;see cref=&quot;M:System.ComponentModel.Design.CollectionEditor.CanSelectMultipleInstances&quot; /&gt; of the &lt;see cref=&quot;T:System.ComponentModel.Design.CollectionEditor&quot; /&gt; for this form.">
        <see langword="true" /> se è possibile selezionare contemporaneamente più membri dell'insieme. <see langword="false" /> in caso contrario. Per impostazione predefinita, questo metodo restituisce il valore dal metodo <see cref="M:System.ComponentModel.Design.CollectionEditor.CanSelectMultipleInstances" /> dell'oggetto <see cref="T:System.ComponentModel.Design.CollectionEditor" /> per questo form.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CreateInstance(System.Type)">
      <summary vsli:raw="Creates a new instance of the specified collection item type.">Crea una nuova istanza del tipo di elemento dell'insieme specificato.</summary>
      <param name="itemType" vsli:raw="The type of item to create.">Tipo di elemento da creare.</param>
      <returns vsli:raw="A new instance of the specified object, or &lt;see langword=&quot;null&quot; /&gt; if the user chose to cancel the creation of this instance.">Nuova istanza dell'oggetto specificato oppure <see langword="null" /> se l'utente ha scelto di annullare la creazione di questa istanza.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.DestroyInstance(System.Object)">
      <summary vsli:raw="Destroys the specified instance of the object.">Elimina l'istanza specificata dell'oggetto.</summary>
      <param name="instance" vsli:raw="The object to destroy.">Oggetto da eliminare.</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.DisplayError(System.Exception)">
      <summary vsli:raw="Displays the specified exception to the user.">Visualizza l'eccezione specificata all'utente.</summary>
      <param name="e" vsli:raw="The exception to display.">Eccezione da visualizzare.</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.GetService(System.Type)">
      <summary vsli:raw="Gets the requested service, if it is available.">Ottiene il servizio richiesto, se disponibile.</summary>
      <param name="serviceType" vsli:raw="The type of service to retrieve.">Tipo di servizio da recuperare.</param>
      <returns vsli:raw="An instance of the service, or &lt;see langword=&quot;null&quot; /&gt; if the service cannot be found.">Istanza del servizio oppure <see langword="null" /> se non è possibile trovare il servizio.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.OnEditValueChanged">
      <summary vsli:raw="Provides an opportunity to perform processing when a collection value has changed.">Consente di eseguire l'elaborazione successivamente alla modifica di un valore dell'insieme.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.ShowEditorDialog(System.Windows.Forms.Design.IWindowsFormsEditorService)">
      <summary vsli:raw="Shows the dialog box for the collection editor using the specified &lt;see cref=&quot;T:System.Windows.Forms.Design.IWindowsFormsEditorService&quot; /&gt; object.">Visualizza la finestra di dialogo relativa all'editor dell'insieme utilizzando l'oggetto <see cref="T:System.Windows.Forms.Design.IWindowsFormsEditorService" /> specificato.</summary>
      <param name="edSvc" vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.Design.IWindowsFormsEditorService&quot; /&gt; that can be used to show the dialog box.">Oggetto <see cref="T:System.Windows.Forms.Design.IWindowsFormsEditorService" /> che può essere utilizzato per visualizzare la finestra di dialogo.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DialogResult&quot; /&gt; that indicates the result code returned from the dialog box.">Oggetto <see cref="T:System.Windows.Forms.DialogResult" /> che indica il codice restituito dalla finestra di dialogo.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.CollectionItemType">
      <summary vsli:raw="Gets the data type of each item in the collection.">Ottiene il tipo di dati di ogni elemento dell'insieme.</summary>
      <returns vsli:raw="The data type of the collection items.">Tipo di dati degli elementi dell'insieme.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.CollectionType">
      <summary vsli:raw="Gets the data type of the collection object.">Ottiene il tipo di dati dell'oggetto insieme.</summary>
      <returns vsli:raw="The data type of the collection object.">Tipo di dati dell'oggetto insieme.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.Context">
      <summary vsli:raw="Gets a type descriptor that indicates the current context.">Ottiene un descrittore del tipo che indica il contesto corrente.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that indicates the context currently in use, or &lt;see langword=&quot;null&quot; /&gt; if no context is available.">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che indica il contesto corrente oppure <see langword="null" /> se non è disponibile alcun contesto.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.EditValue">
      <summary vsli:raw="Gets or sets the collection object to edit.">Ottiene o imposta l'oggetto insieme da modificare.</summary>
      <returns vsli:raw="The collection object to edit.">Oggetto insieme da modificare.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.Items">
      <summary vsli:raw="Gets or sets the array of items for this form to display.">Ottiene o imposta la matrice degli elementi da visualizzare tramite questo form.</summary>
      <returns vsli:raw="An array of objects for the form to display.">Matrice di oggetti da visualizzare tramite questo form.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.NewItemTypes">
      <summary vsli:raw="Gets the available item types that can be created for this collection.">Ottiene i tipi di elementi disponibili che è possibile creare per questo insieme.</summary>
      <returns vsli:raw="The types of items that can be created.">Tipi di elementi che è possibile creare.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentDesigner">
      <summary vsli:raw="Extends the design mode behavior of a component.">Estende il comportamento della modalità progettazione di un componente.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentDesigner&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentDesigner&quot; /&gt;.">Rilascia tutte le risorse usate da <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentDesigner&quot; /&gt; and optionally releases the managed resources.">Rilascia le risorse non gestite usate da <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> e, facoltativamente, le risorse gestite.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.DoDefaultAction">
      <summary vsli:raw="Creates a method signature in the source code file for the default event on the component and navigates the user's cursor to that location.">Crea una firma di metodo nel file di codice sorgente per l'evento predefinito sul componente e sposta il cursore dell'utente in tale posizione.</summary>
      <exception cref="T:System.ComponentModel.Design.CheckoutException" vsli:raw="An attempt to check out a file that is checked into a source code management program failed.">Un tentativo di estrarre un file archiviato in un programma di gestione del codice sorgente non è riuscito.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.GetService(System.Type)">
      <summary vsli:raw="Attempts to retrieve the specified type of service from the design mode site of the designer's component.">Esegue un tentativo di recuperare il tipo di servizio specificato dal sito della modalità progettazione del componente della finestra di progettazione.</summary>
      <param name="serviceType" vsli:raw="The type of service to request.">Tipo di servizio da richiedere.</param>
      <returns vsli:raw="An object implementing the requested service, or &lt;see langword=&quot;null&quot; /&gt; if the service cannot be resolved.">Oggetto che implementa il servizio richiesto oppure <see langword="null" /> se non è possibile risolvere il servizio.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary vsli:raw="Prepares the designer to view, edit, and design the specified component.">Prepara la finestra di progettazione per la visualizzazione, la modifica e la progettazione del componente specificato.</summary>
      <param name="component" vsli:raw="The component for this designer.">Componente relativo a questa finestra di progettazione.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeExistingComponent(System.Collections.IDictionary)">
      <summary vsli:raw="Reinitializes an existing component.">Reinizializza un componente esistente.</summary>
      <param name="defaultValues" vsli:raw="A name/value dictionary of default values to apply to properties. May be &lt;see langword=&quot;null&quot; /&gt; if no default values are specified.">Dizionario in formato nome/valore dei valori predefiniti da applicare alle proprietà. Può essere <see langword="null" /> se non è specificato alcun valore predefinito.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <summary vsli:raw="Initializes a newly created component.">Inizializza un nuovo componente creato.</summary>
      <param name="defaultValues" vsli:raw="A name/value dictionary of default values to apply to properties. May be &lt;see langword=&quot;null&quot; /&gt; if no default values are specified.">Dizionario in formato nome/valore dei valori predefiniti da applicare alle proprietà. Può essere <see langword="null" /> se non è specificato alcun valore predefinito.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeNonDefault">
      <summary vsli:raw="Initializes the settings for an imported component that is already initialized to settings other than the defaults.">Inizializza le impostazioni relative a un componente importato già inizializzato per impostazioni diverse da quelle predefinite.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InvokeGetInheritanceAttribute(System.ComponentModel.Design.ComponentDesigner)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.ComponentModel.InheritanceAttribute&quot; /&gt; of the specified &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentDesigner&quot; /&gt;.">Ottiene l'oggetto <see cref="T:System.ComponentModel.InheritanceAttribute" /> dell'oggetto <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> specificato.</summary>
      <param name="toInvoke" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentDesigner&quot; /&gt; whose inheritance attribute to retrieve.">Oggetto <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> di cui recuperare l'attributo di ereditarietà.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.InheritanceAttribute&quot; /&gt; of the specified designer.">Oggetto <see cref="T:System.ComponentModel.InheritanceAttribute" /> della finestra di progettazione specificata.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.OnSetComponentDefaults">
      <summary vsli:raw="Sets the default properties for the component.">Imposta le proprietà predefinite relative al componente.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes(System.Collections.IDictionary)">
      <summary vsli:raw="Allows a designer to change or remove items from the set of attributes that it exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">Consente a una finestra di progettazione di modificare o rimuovere elementi dall'insieme di attributi esposti tramite un oggetto <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="attributes" vsli:raw="The attributes for the class of the component.">Attributi relativi alla classe del componente.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents(System.Collections.IDictionary)">
      <summary vsli:raw="Allows a designer to change or remove items from the set of events that it exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">Consente a una finestra di progettazione di modificare o rimuovere elementi dal gruppo di eventi esposti tramite un oggetto <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="events" vsli:raw="The events for the class of the component.">Eventi relativi alla classe del componente.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="Allows a designer to change or remove items from the set of properties that it exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">Consente a una finestra di progettazione di modificare o rimuovere elementi dall'insieme di proprietà esposte tramite un oggetto <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties" vsli:raw="The properties for the class of the component.">Proprietà relative alla classe del componente.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterAttributes(System.Collections.IDictionary)">
      <summary vsli:raw="Allows a designer to add to the set of attributes that it exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">Consente a una finestra di progettazione di aggiungere un insieme di attributi che vengono esposti tramite un oggetto <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="attributes" vsli:raw="The attributes for the class of the component.">Attributi relativi alla classe del componente.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterEvents(System.Collections.IDictionary)">
      <summary vsli:raw="Allows a designer to add to the set of events that it exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">Consente a una finestra di progettazione di aggiungere un insieme di eventi che vengono esposti tramite un oggetto <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="events" vsli:raw="The events for the class of the component.">Eventi relativi alla classe del componente.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="Allows a designer to add to the set of properties that it exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">Consente a una finestra di progettazione di aggiungere un insieme di proprietà che vengono esposte tramite un oggetto <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties" vsli:raw="The properties for the class of the component.">Proprietà relative alla classe del componente.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanged(System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
      <summary vsli:raw="Notifies the &lt;see cref=&quot;T:System.ComponentModel.Design.IComponentChangeService&quot; /&gt; that this component has been changed.">Notifica all'oggetto <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> che questo componente è stato modificato.</summary>
      <param name="member" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.MemberDescriptor&quot; /&gt; that indicates the member that has been changed.">Oggetto <see cref="T:System.ComponentModel.MemberDescriptor" /> che indica il membro che è stato modificato.</param>
      <param name="oldValue" vsli:raw="The old value of the member.">Valore precedente del membro.</param>
      <param name="newValue" vsli:raw="The new value of the member.">Nuovo valore del membro.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanging(System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Notifies the &lt;see cref=&quot;T:System.ComponentModel.Design.IComponentChangeService&quot; /&gt; that this component is about to be changed.">Notifica all'oggetto <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> che questo componente sta per essere modificato.</summary>
      <param name="member" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.MemberDescriptor&quot; /&gt; that indicates the member that is about to be changed.">Oggetto <see cref="T:System.ComponentModel.MemberDescriptor" /> che indica il membro che sta per essere modificato.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterAttributes(System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)&quot; /&gt; method.">Per una descrizione di questo membro, vedere il metodo <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" />.</summary>
      <param name="attributes" vsli:raw="The &lt;see cref=&quot;T:System.Attribute&quot; /&gt; objects for the class of the component. The keys in the dictionary of attributes are the &lt;see cref=&quot;P:System.Attribute.TypeId&quot; /&gt; values of the attributes.">Oggetti <see cref="T:System.Attribute" /> relativi alla classe del componente. Le chiavi presenti nel dizionario degli attributi sono i valori <see cref="P:System.Attribute.TypeId" /> degli attributi.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterEvents(System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)&quot; /&gt; method.">Per una descrizione di questo membro, vedere il metodo <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" />.</summary>
      <param name="events" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; objects that represent the events of the class of the component. The keys in the dictionary of events are event names.">Oggetti <see cref="T:System.ComponentModel.EventDescriptor" /> che rappresentano gli eventi della classe del componente. Le chiavi presenti nel dizionario degli eventi sono i nomi degli eventi.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)&quot; /&gt; method.">Per una descrizione di questo membro, vedere il metodo <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" />.</summary>
      <param name="properties" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects that represent the properties of the class of the component. The keys in the dictionary of properties are property names.">Oggetti <see cref="T:System.ComponentModel.PropertyDescriptor" /> che rappresentano le proprietà della classe del componente. Le chiavi presenti nel dizionario delle proprietà sono i nomi delle proprietà.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterAttributes(System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)&quot; /&gt; method.">Per una descrizione di questo membro, vedere il metodo <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" />.</summary>
      <param name="attributes" vsli:raw="The &lt;see cref=&quot;T:System.Attribute&quot; /&gt; objects for the class of the component. The keys in the dictionary of attributes are the &lt;see cref=&quot;P:System.Attribute.TypeId&quot; /&gt; values of the attributes.">Oggetti <see cref="T:System.Attribute" /> relativi alla classe del componente. Le chiavi presenti nel dizionario degli attributi sono i valori <see cref="P:System.Attribute.TypeId" /> degli attributi.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterEvents(System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)&quot; /&gt; method.">Per una descrizione di questo membro, vedere il metodo <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" />.</summary>
      <param name="events" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; objects that represent the events of the class of the component. The keys in the dictionary of events are event names.">Oggetti <see cref="T:System.ComponentModel.EventDescriptor" /> che rappresentano gli eventi della classe del componente. Le chiavi presenti nel dizionario degli eventi sono i nomi degli eventi.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)&quot; /&gt; method.">Per una descrizione di questo membro, vedere il metodo <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" />.</summary>
      <param name="properties" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects that represent the properties of the class of the component. The keys in the dictionary of properties are property names.">Oggetti <see cref="T:System.ComponentModel.PropertyDescriptor" /> che rappresentano le proprietà della classe del componente. Le chiavi presenti nel dizionario delle proprietà sono i nomi delle proprietà.</param>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ActionLists">
      <summary vsli:raw="Gets the design-time action lists supported by the component associated with the designer.">Ottiene gli elenchi di azioni in fase di progettazione supportati dal componente associato alla finestra di progettazione.</summary>
      <returns vsli:raw="The design-time action lists supported by the component associated with the designer.">Elenchi di azioni in fase di progettazione supportati dal componente associato alla finestra di progettazione.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.AssociatedComponents">
      <summary vsli:raw="Gets the collection of components associated with the component managed by the designer.">Ottiene l'insieme dei componenti associati al componente gestito dalla finestra di progettazione.</summary>
      <returns vsli:raw="The components that are associated with the component managed by the designer.">Componenti associati al componente gestito dalla finestra di progettazione.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Component">
      <summary vsli:raw="Gets the component this designer is designing.">Ottiene il componente progettato dalla finestra di progettazione.</summary>
      <returns vsli:raw="The component managed by the designer.">Componente gestito dalla finestra di progettazione.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute">
      <summary vsli:raw="Gets an attribute that indicates the type of inheritance of the associated component.">Ottiene un attributo che indica il tipo di ereditarietà del componente associato.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.InheritanceAttribute&quot; /&gt; for the associated component.">Oggetto <see cref="T:System.ComponentModel.InheritanceAttribute" /> relativo al componente associato.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Inherited">
      <summary vsli:raw="Gets a value indicating whether this component is inherited.">Ottiene un valore che indica se questo componente è ereditato.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component is inherited; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il componente è ereditato. <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ParentComponent">
      <summary vsli:raw="Gets the parent component for this designer.">Ottiene il componente padre per la finestra di progettazione.</summary>
      <returns vsli:raw="The parent component for this designer, or &lt;see langword=&quot;null&quot; /&gt; if this designer is the root component.">Componente padre per la finestra di progettazione oppure <see langword="null" /> se la finestra di progettazione è il componente di primo livello.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ShadowProperties">
      <summary vsli:raw="Gets a collection of property values that override user settings.">Ottiene un insieme di valori di proprietà che eseguono l'override delle impostazioni utente.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection&quot; /&gt; that indicates the shadow properties of the design document.">Oggetto <see cref="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection" /> che indica le proprietà replicate del documento di progettazione.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Children">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;P:System.ComponentModel.Design.ITreeDesigner.Children&quot; /&gt; property.">Per una descrizione di questo membro, vedere la proprietà <see cref="P:System.ComponentModel.Design.ITreeDesigner.Children" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the collection of &lt;see cref=&quot;T:System.ComponentModel.Design.IDesigner&quot; /&gt; designers contained in the current parent designer.">Oggetto <see cref="T:System.Collections.ICollection" /> contenente l'insieme di finestre di progettazione <see cref="T:System.ComponentModel.Design.IDesigner" /> contenute nella finestra di progettazione padre corrente.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Parent">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;P:System.ComponentModel.Design.ITreeDesigner.Parent&quot; /&gt; property.">Per una descrizione di questo membro, vedere la proprietà <see cref="P:System.ComponentModel.Design.ITreeDesigner.Parent" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.Design.IDesigner&quot; /&gt; representing the parent designer, or &lt;see langword=&quot;null&quot; /&gt; if there is no parent.">Oggetto <see cref="T:System.ComponentModel.Design.IDesigner" /> che rappresenta la finestra di progettazione padre oppure <see langword="null" /> se non esiste alcuna finestra di progettazione padre.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Verbs">
      <summary vsli:raw="Gets the design-time verbs supported by the component that is associated with the designer.">Ottiene i verbi in fase di progettazione supportati dal componente associato alla finestra di progettazione.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerVerbCollection&quot; /&gt; of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerVerb&quot; /&gt; objects, or &lt;see langword=&quot;null&quot; /&gt; if no designer verbs are available. This default implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">Insieme <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> di oggetti <see cref="T:System.ComponentModel.Design.DesignerVerb" /> oppure <see langword="null" /> se non è disponibile alcun verbo di progettazione. Questa implementazione predefinita restituisce sempre <see langword="null" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection">
      <summary vsli:raw="Represents a collection of shadow properties that should override inherited default or assigned values for specific properties. This class cannot be inherited.">Rappresenta un insieme di proprietà replicate che dovrebbero eseguire l'override dei valori ereditati predefiniti o assegnati per specifiche proprietà. La classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Contains(System.String)">
      <summary vsli:raw="Indicates whether a property matching the specified name exists in the collection.">Indica se una proprietà che corrisponde al nome specificato esiste nell'insieme.</summary>
      <param name="propertyName" vsli:raw="The name of the property to check for in the collection.">Nome della proprietà da controllare nell'insieme.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property exists in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la proprietà esiste nell'insieme. <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Item(System.String)">
      <summary vsli:raw="Gets or sets the object at the specified index.">Ottiene o imposta l'oggetto in corrispondenza dell'indice specificato.</summary>
      <param name="propertyName" vsli:raw="The name of the property to access in the collection.">Nome della proprietà a cui accedere nell'insieme.</param>
      <returns vsli:raw="The value of the specified property, if it exists in the collection. Otherwise, the value is retrieved from the current value of the nonshadowed property.">Valore della proprietà specificata, se esiste nell'insieme. In caso contrario, il valore viene recuperato dal valore corrente della proprietà non nascosta.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DateTimeEditor">
      <summary vsli:raw="This date time editor is a &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditor&quot; /&gt; suitable for visually editing &lt;see cref=&quot;T:System.DateTime&quot; /&gt; objects.">Questo editor di data e ora è un oggetto <see cref="T:System.Drawing.Design.UITypeEditor" /> utilizzabile per la modifica visiva degli oggetti <see cref="T:System.DateTime" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DateTimeEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DateTimeEditor&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.DateTimeEditor" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DateTimeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the specified object value using the editor style provided by GetEditorStyle. A service provider is provided so that any required editing services can be obtained.">Modifica il valore dell'oggetto specificato utilizzando lo stile dell'editor fornito da GetEditorStyle. Viene fornito un provider di servizi allo scopo di ottenere i servizi di modifica necessari.</summary>
      <param name="context" vsli:raw="A type descriptor context that can be used to provide additional context information.">Contesto di descrittore del tipo che può essere utilizzato per fornire ulteriori informazioni sul contesto.</param>
      <param name="provider" vsli:raw="A service provider object through which editing services may be obtained.">Oggetto provider di servizi tramite il quale è possibile ottenere i servizi di modifica.</param>
      <param name="value" vsli:raw="An instance of the value being edited.">Istanza del valore in corso di modifica.</param>
      <returns vsli:raw="The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.">Nuovo valore dell'oggetto. Se il valore dell'oggetto non è stato modificato, deve essere restituito lo stesso oggetto che è stato passato.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DateTimeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Retrieves the editing style of the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.Design.DateTimeEditor.EditValue*&quot;&gt;&lt;/xref&gt; method. If the method is not supported, this will return None.">Recupera lo stile di modifica del metodo <see cref="Overload:System.ComponentModel.Design.DateTimeEditor.EditValue" />. Se il metodo non è supportato, restituirà None.</summary>
      <param name="context" vsli:raw="A type descriptor context that can be used to provide additional context information.">Contesto di descrittore del tipo che può essere utilizzato per fornire ulteriori informazioni sul contesto.</param>
      <returns vsli:raw="An &lt;code data-dev-comment-type=&quot;langword&quot;&gt;enum&lt;/code&gt; value indicating the provided editing style.">Valore <see langword="enum" /> che indica lo stile di modifica fornito.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionHeaderItem">
      <summary vsli:raw="Represents a static header item on a smart tag panel. This class cannot be inherited.">Rappresenta un elemento dell'intestazione statica di un pannello smart tag. La classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionHeaderItem.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionHeaderItem&quot; /&gt; class using the provided name string.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.DesignerActionHeaderItem" /> utilizzando la stringa del nome fornita.</summary>
      <param name="displayName" vsli:raw="The text to be displayed in the header.">Testo da visualizzare nell'intestazione.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionHeaderItem.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionHeaderItem&quot; /&gt; class using the provided name and category strings.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.DesignerActionHeaderItem" /> utilizzando le stringhe del nome e della categoria fornite.</summary>
      <param name="displayName" vsli:raw="The text to be displayed in the header.">Testo da visualizzare nell'intestazione.</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; that defines the groupings of panel entries.">L'oggetto <see cref="T:System.String" /> con distinzione tra maiuscole e minuscole che definisce i raggruppamenti delle voci del pannello.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionItem">
      <summary vsli:raw="Provides the base class for types that represent a panel item on a smart tag panel.">Fornisce la classe base per i tipi che rappresentano un elemento del pannello in un pannello smart tag.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItem.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.DesignerActionItem" />.</summary>
      <param name="displayName" vsli:raw="The panel text for this item.">Testo del pannello per l'elemento.</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; that defines the groupings of panel entries.">L'oggetto <see cref="T:System.String" /> con distinzione tra maiuscole e minuscole che definisce i raggruppamenti delle voci del pannello.</param>
      <param name="description" vsli:raw="Supplemental text for this item, potentially used in ToolTips or the status bar.">Testo aggiuntivo per questo elemento, che può essere utilizzato nelle descrizioni comandi o nella barra di stato.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.AllowAssociate">
      <summary vsli:raw="Gets or sets a value indicating whether to allow this item to be placed into a group of items that have the same &lt;see cref=&quot;P:System.ComponentModel.Design.DesignerActionItem.Category&quot; /&gt; property value.">Ottiene o imposta un valore che indica se consentire il posizionamento di questo elemento in un gruppo di elementi con lo stesso valore per la proprietà <see cref="P:System.ComponentModel.Design.DesignerActionItem.Category" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the item can be grouped; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'elemento può essere raggruppato, <see langword="false" /> in caso contrario. Il valore predefinito è <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Category">
      <summary vsli:raw="Gets the group name for an item.">Ottiene il nome del gruppo per un elemento.</summary>
      <returns vsli:raw="A string that represents the group that the item is a member of.">Una stringa che rappresenta il gruppo di cui l'elemento è membro.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Description">
      <summary vsli:raw="Gets the supplemental text for the item.">Ottiene il testo aggiuntivo per l'elemento.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the descriptive text for the item.">Oggetto <see cref="T:System.String" /> che contiene il testo descrittivo per l'elemento.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.DisplayName">
      <summary vsli:raw="Gets the text for this item.">Ottiene il testo per l'elemento.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the display text for the item.">Oggetto <see cref="T:System.String" /> che contiene il testo visualizzato per l'elemento.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Properties">
      <summary vsli:raw="Gets a reference to a collection that can be used to store programmer-defined key/value pairs.">Ottiene un riferimento a un insieme che può essere utilizzato per memorizzare coppie chiave/valore definite dal programmatore.</summary>
      <returns vsli:raw="A collection that implements &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt;.">Raccolta che implementa <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.ShowInSourceView">
      <summary vsli:raw="Gets or sets a value that indicates whether this item appears in source code view.">Ottiene o imposta un valore che indica se questo elemento compare nella visualizzazione del codice sorgente.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this item appears in source code view; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> se questo elemento viene visualizzato nella visualizzazione del codice sorgente; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionItemCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; objects.">Rappresenta una raccolta di oggetti <see cref="T:System.ComponentModel.Design.DesignerActionItem" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Add(System.ComponentModel.Design.DesignerActionItem)">
      <summary vsli:raw="Adds the supplied &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; to the current collection.">Aggiunge l'oggetto <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> fornito all'insieme corrente.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; to add.">Oggetto <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> da aggiungere.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt; index at which the value has been added.">Indice <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> in corrispondenza del quale è stato aggiunto il valore.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Contains(System.ComponentModel.Design.DesignerActionItem)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt; contains a specific element.">Consente di stabilire se <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> contiene un elemento specifico.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; to locate in the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt;.">Oggetto <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> da individuare in <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt; contains the specified value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> contiene il valore specificato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.CopyTo(System.ComponentModel.Design.DesignerActionItem[],System.Int32)">
      <summary vsli:raw="Copies the elements of the current collection into the supplied array, starting at the specified array index.">Copia gli elementi dell'insieme corrente nella matrice specificata, partendo dall'indice della matrice specificata.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; array that is the destination of the elements copied from the current collection. The array must have zero-based indexing.">Matrice <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'insieme corrente. La matrice deve avere un'indicizzazione in base zero.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.IndexOf(System.ComponentModel.Design.DesignerActionItem)">
      <summary vsli:raw="Determines the index of a specific item in the collection.">Determina l'indice di un elemento specifico dell'insieme.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; to locate in the collection.">Oggetto <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> da individuare nella raccolta.</param>
      <returns vsli:raw="The zero-based index of the first occurrence of &lt;paramref name=&quot;value&quot; /&gt; within the entire &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt;, if found; otherwise, -1.">Indice in base zero della prima occorrenza di <paramref name="value" /> all'interno dell'intero oggetto <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />, se presente; in caso contrario, -1.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Insert(System.Int32,System.ComponentModel.Design.DesignerActionItem)">
      <summary vsli:raw="Inserts an element into the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt; at the specified index.">Inserisce un elemento in <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> in corrispondenza dell'indice specificato.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; should be inserted.">Indice in base zero nel quale <paramref name="value" /> deve essere inserito.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; to insert.">Oggetto <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> da inserire.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Remove(System.ComponentModel.Design.DesignerActionItem)">
      <summary vsli:raw="Removes the first occurrence of a specific object from the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt;.">Rimuove la prima occorrenza di un oggetto specifico da <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; to remove from the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItemCollection&quot; /&gt;.">Oggetto <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> da rimuovere da <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItemCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">Ottiene o imposta l'elemento in corrispondenza dell'indice specificato.</summary>
      <param name="index" vsli:raw="The zero-based index of the element.">Indice in base zero dell'elemento.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; at the specified index.">Oggetto <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> in corrispondenza dell'indice specificato.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionList">
      <summary vsli:raw="Provides the base class for types that define a list of items used to create a smart tag panel.">Fornisce la classe di base per i tipi che definiscono un elenco di elementi utilizzati per creare un pannello smart tag.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.#ctor(System.ComponentModel.IComponent)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
      <param name="component" vsli:raw="A component related to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt;.">Un componente correlato a <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.GetService(System.Type)">
      <summary vsli:raw="Returns an object that represents a service provided by the component associated with the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt;.">Restituisce un oggetto che rappresenta un servizio fornito dal componente associato all'oggetto <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
      <param name="serviceType" vsli:raw="A service provided by the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;.">Servizio fornito da <see cref="T:System.ComponentModel.Component" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents a service provided by the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;. This value is &lt;see langword=&quot;null&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; does not provide the specified service.">Oggetto <see cref="T:System.Object" /> che rappresenta un servizio fornito da <see cref="T:System.ComponentModel.Component" />. Questo valore restituisce <see langword="null" /> se da <see cref="T:System.ComponentModel.Component" /> non viene fornito il servizio specificato.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems">
      <summary vsli:raw="Returns the collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; objects contained in the list.">Restituisce l'insieme di oggetti <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> contenuti nell'elenco.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; array that contains the items in this list.">Una matrice <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> contenente gli elementi nell'elenco.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionList.AutoShow">
      <summary vsli:raw="Gets or sets a value indicating whether the smart tag panel should automatically be displayed when it is created.">Ottiene o imposta un valore che indica se il pannello smart tag verrà visualizzato automaticamente alla sua creazione.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the panel should be shown when the owning component is created; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il pannello deve essere visualizzato alla creazione del relativo componente proprietario; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionList.Component">
      <summary vsli:raw="Gets the component related to &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt;.">Ottiene il componente correlato a <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
      <returns vsli:raw="A component related to &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt;.">Un componente correlato a <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListCollection">
      <summary vsli:raw="Represents a collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects.">Rappresenta una raccolta di oggetti <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; class with default settings.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> con le impostazioni predefinite.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.#ctor(System.ComponentModel.Design.DesignerActionList[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; class with the specified panel items.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> con gli elementi di pannello specificati.</summary>
      <param name="value" vsli:raw="The array of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects to populate the collection.">Matrice di oggetti <see cref="T:System.ComponentModel.Design.DesignerActionList" /> per la popolazione dell'insieme.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Add(System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Adds the supplied &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to the current collection.">Aggiunge l'oggetto <see cref="T:System.ComponentModel.Design.DesignerActionList" /> fornito all'insieme corrente.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to add.">Oggetto <see cref="T:System.ComponentModel.Design.DesignerActionList" /> da aggiungere.</param>
      <returns vsli:raw="The position into which the new element is inserted into the collection's internal list.">Posizione in cui il nuovo elemento è stato inserito nell'elenco interno dell'insieme.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.AddRange(System.ComponentModel.Design.DesignerActionList[])">
      <summary vsli:raw="Adds the elements of the supplied &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; array to the end of the current collection.">Aggiunge gli elementi della matrice <see cref="T:System.ComponentModel.Design.DesignerActionList" /> specificata alla fine dell'insieme corrente.</summary>
      <param name="value" vsli:raw="The array of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects to add.">Matrice di oggetti <see cref="T:System.ComponentModel.Design.DesignerActionList" /> da aggiungere.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.AddRange(System.ComponentModel.Design.DesignerActionListCollection)">
      <summary vsli:raw="Adds the elements of the supplied &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; to the end of the current collection.">Aggiunge gli elementi della matrice <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> fornita alla fine dell'insieme corrente.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; to add.">Oggetto <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> da aggiungere.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Contains(System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Indicates whether the collection contains a specific value.">Indica se la raccolta contiene un valore specifico.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to search for.">Oggetto <see cref="T:System.ComponentModel.Design.DesignerActionList" /> da cercare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains the specified value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'insieme contiene il valore specificato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.CopyTo(System.ComponentModel.Design.DesignerActionList[],System.Int32)">
      <summary vsli:raw="Copies the elements of the current collection into the supplied array, starting at the specified array index.">Copia gli elementi dell'insieme corrente nella matrice specificata, partendo dall'indice della matrice specificata.</summary>
      <param name="array" vsli:raw="The one-dimensional array of type &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that is the destination of the elements copied from the current collection. The array must have zero-based indexing.">Matrice unidimensionale di tipo <see cref="T:System.ComponentModel.Design.DesignerActionList" />, ovvero la destinazione degli elementi copiati dall'insieme corrente. La matrice deve avere un'indicizzazione in base zero.</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0.">
        <paramref name="index" /> è minore di 0.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in the current collection is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination array.">
        <paramref name="array" /> è multidimensionale.  
  
-oppure- 
Il numero di elementi nell'insieme corrente è maggiore dello spazio disponibile da <paramref name="index" /> alla fine della matrice di destinazione.</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="A problem occurred casting the elements of the current collection to the type of the destination array, perhaps as the result of a failed downcast.">Si è verificato un problema durante il cast degli elementi dell'insieme corrente al tipo della matrice di destinazione, probabilmente come risultato di un downcast non eseguito correttamente.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.IndexOf(System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Determines the index of a specific item in the collection.">Determina l'indice di un elemento specifico dell'insieme.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to locate in the collection.">Oggetto <see cref="T:System.ComponentModel.Design.DesignerActionList" /> da individuare nella raccolta.</param>
      <returns vsli:raw="The index of &lt;paramref name=&quot;value&quot; /&gt; if found in the internal list; otherwise, -1.">Indice di <paramref name="value" /> se si trova nell'elenco interno; in caso contrario, -1.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Insert(System.Int32,System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Inserts the supplied &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; into the collection at the specified position.">Inserisce l'oggetto <see cref="T:System.ComponentModel.Design.DesignerActionList" /> specificato nell'insieme in corrispondenza della posizione specificata.</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; should be inserted.">Indice in base zero nel quale <paramref name="value" /> deve essere inserito.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to insert into the collection.">Oggetto <see cref="T:System.ComponentModel.Design.DesignerActionList" /> da inserire nella raccolta.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0 or greater than the count of elements in the current collection.">
        <paramref name="index" /> è minore di 0 o maggiore del numero degli elementi nell'insieme corrente.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.OnValidate(System.Object)">
      <summary vsli:raw="Performs additional custom processes when validating a value.">Esegue processi personalizzati aggiuntivi durante la convalida di un valore.</summary>
      <param name="value" vsli:raw="The object to validate.">Oggetto da convalidare.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Remove(System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Removes the first occurrence of a specific &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; from the collection.">Rimuove la prima occorrenza di un oggetto <see cref="T:System.ComponentModel.Design.DesignerActionList" /> specifico dall'insieme.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to remove from the current collection.">Oggetto <see cref="T:System.ComponentModel.Design.DesignerActionList" /> da rimuovere dall'insieme corrente.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">Ottiene o imposta l'elemento in corrispondenza dell'indice specificato.</summary>
      <param name="index" vsli:raw="The zero-based index of the element.">Indice in base zero dell'elemento.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; at the specified index.">Oggetto <see cref="T:System.ComponentModel.Design.DesignerActionList" /> in corrispondenza dell'indice specificato.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged&quot; /&gt; event.">Fornisce dati per l'evento <see cref="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.#ctor(System.Object,System.ComponentModel.Design.DesignerActionListsChangedType,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs" />.</summary>
      <param name="relatedObject" vsli:raw="The object that is associated with the collection.">Oggetto associato all'insieme.</param>
      <param name="changeType" vsli:raw="A value that specifies whether a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; has been added or removed from the collection.">Valore che specifica se un oggetto <see cref="T:System.ComponentModel.Design.DesignerActionList" /> è stato aggiunto o rimosso dall'insieme.</param>
      <param name="actionLists" vsli:raw="The collection of list elements after the action has been applied.">Insieme di elementi dell'elenco dopo l'applicazione dell'azione.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.ActionLists">
      <summary vsli:raw="Gets the collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects associated with this event.">Ottiene l'insieme degli oggetti <see cref="T:System.ComponentModel.Design.DesignerActionList" /> associati all'evento.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; that represents the current state of the collection.">Oggetto <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> che rappresenta lo stato corrente dell'insieme.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.ChangeType">
      <summary vsli:raw="Gets a flag indicating whether an element has been added or removed from the collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects.">Ottiene un flag che indica se un elemento è stato aggiunto o rimosso dall'insieme degli oggetti <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListsChangedType&quot; /&gt; that indicates the type of change.">Oggetto <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedType" /> che indica il tipo di modifica.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.RelatedObject">
      <summary vsli:raw="Gets the object that is associated with the collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects.">Ottiene l'oggetto associato all'insieme degli oggetti <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; associated with the managed &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt;.">Oggetto <see cref="T:System.Object" /> associato all'oggetto <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> gestito.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged&quot; /&gt; event of a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionService&quot; /&gt;. This class cannot be inherited.">Rappresenta il metodo che gestirà l'evento <see cref="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged" /> di un oggetto <see cref="T:System.ComponentModel.Design.DesignerActionService" />. La classe non può essere ereditata.</summary>
      <param name="sender" vsli:raw="The source of the event.">Origine dell'evento.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs&quot; /&gt; that contains the event data.">Oggetto <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedType">
      <summary vsli:raw="Specifies the type of change occurring in a collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects.">Specifica il tipo di modifica che si verifica in un insieme di oggetti <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionListsChangedType.ActionListsAdded">
      <summary vsli:raw="One or more &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects have been added to the collection.">All'insieme sono stati aggiunti uno o più oggetti <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionListsChangedType.ActionListsRemoved">
      <summary vsli:raw="One or more &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; objects have been removed from the collection.">Dall'insieme sono stati rimossi uno o più oggetti <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionMethodItem">
      <summary vsli:raw="Represents a smart tag panel item that is associated with a method in a class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt;.">Rappresenta un elemento del pannello smart tag associato a un metodo in una classe derivata da <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; class, with the specified method and display names.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> con i nomi di metodo e visualizzati specificati.</summary>
      <param name="actionList" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that contains the method this item is associated with.">Oggetto <see cref="T:System.ComponentModel.Design.DesignerActionList" /> che contiene il metodo a cui è associato questo elemento.</param>
      <param name="memberName" vsli:raw="The case-sensitive name of the method in the class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to invoke through the panel item.">Il nome con distinzione tra maiuscole e minuscole del metodo nella classe derivata da <see cref="T:System.ComponentModel.Design.DesignerActionList" /> da richiamare attraverso l'elemento del pannello.</param>
      <param name="displayName" vsli:raw="The panel text for this item.">Testo del pannello per l'elemento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; class, with the specified method and display names, and a flag that indicates whether the item should appear in other user interface contexts.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />, con i nomi di metodo e visualizzati specificati, e un flag che indica se l'elemento deve essere visualizzato in altri contesti dell'interfaccia utente.</summary>
      <param name="actionList" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that contains the method this item is associated with.">Oggetto <see cref="T:System.ComponentModel.Design.DesignerActionList" /> che contiene il metodo a cui è associato questo elemento.</param>
      <param name="memberName" vsli:raw="The case-sensitive name of the method in the class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to invoke through the panel item.">Il nome con distinzione tra maiuscole e minuscole del metodo nella classe derivata da <see cref="T:System.ComponentModel.Design.DesignerActionList" /> da richiamare attraverso l'elemento del pannello.</param>
      <param name="displayName" vsli:raw="The panel text for this item.">Testo del pannello per l'elemento.</param>
      <param name="includeAsDesignerVerb" vsli:raw="A flag that specifies whether to also treat the associated method as a designer verb.">Un flag che specifica se gestire anche il metodo associato come un verbo di progettazione.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; class, with the specified method, display, and category names.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> con i nomi di metodo, visualizzati e di categoria specificati.</summary>
      <param name="actionList" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that contains the method this item is associated with.">Oggetto <see cref="T:System.ComponentModel.Design.DesignerActionList" /> che contiene il metodo a cui è associato questo elemento.</param>
      <param name="memberName" vsli:raw="The case-sensitive name of the method in the class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to invoke through the panel item.">Il nome con distinzione tra maiuscole e minuscole del metodo nella classe derivata da <see cref="T:System.ComponentModel.Design.DesignerActionList" /> da richiamare attraverso l'elemento del pannello.</param>
      <param name="displayName" vsli:raw="The panel text for this item.">Testo del pannello per l'elemento.</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; used to group similar items on the panel.">L'oggetto <see cref="T:System.String" /> con distinzione tra maiuscole e minuscole utilizzato per raggruppare elementi analoghi nel pannello.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; class, with the specified method, display, and category names, and a flag that indicates whether the item should appear in other user interface contexts.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />, con i nomi di metodo, visualizzati e di categoria specificati, e un flag che indica se l'elemento deve essere visualizzato in altri contesti dell'interfaccia utente.</summary>
      <param name="actionList" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that contains the method this item is associated with.">Oggetto <see cref="T:System.ComponentModel.Design.DesignerActionList" /> che contiene il metodo a cui è associato questo elemento.</param>
      <param name="memberName" vsli:raw="The case-sensitive name of the method in the class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to invoke through the panel item.">Il nome con distinzione tra maiuscole e minuscole del metodo nella classe derivata da <see cref="T:System.ComponentModel.Design.DesignerActionList" /> da richiamare attraverso l'elemento del pannello.</param>
      <param name="displayName" vsli:raw="The panel text for this item.">Testo del pannello per l'elemento.</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; used to group similar items on the panel.">L'oggetto <see cref="T:System.String" /> con distinzione tra maiuscole e minuscole utilizzato per raggruppare elementi analoghi nel pannello.</param>
      <param name="includeAsDesignerVerb" vsli:raw="A flag that specifies whether to also treat the associated method as a designer verb for the associated component.">Flag che specifica se gestire anche il metodo associato come un verbo di progettazione per il componente associato.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; class, with the specified method and category names, and display and description text.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />, con i nomi di metodo e di categoria specificati, nonché il testo visualizzato e della descrizione.</summary>
      <param name="actionList" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that contains the method this item is associated with.">Oggetto <see cref="T:System.ComponentModel.Design.DesignerActionList" /> che contiene il metodo a cui è associato questo elemento.</param>
      <param name="memberName" vsli:raw="The case-sensitive name of the method in the class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to invoke through the panel item.">Il nome con distinzione tra maiuscole e minuscole del metodo nella classe derivata da <see cref="T:System.ComponentModel.Design.DesignerActionList" /> da richiamare attraverso l'elemento del pannello.</param>
      <param name="displayName" vsli:raw="The panel text for this item.">Testo del pannello per l'elemento.</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; used to group similar items on the panel.">L'oggetto <see cref="T:System.String" /> con distinzione tra maiuscole e minuscole utilizzato per raggruppare elementi analoghi nel pannello.</param>
      <param name="description" vsli:raw="Supplemental text for this item, used in ToolTips or the status bar.">Testo aggiuntivo per questo elemento, utilizzato nelle descrizioni comandi o nella barra di stato.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; class, with the specified method and category names, display and description text, and a flag that indicates whether the item should appear in other user interface contexts.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />, con nomi di metodo e di categoria specificati, il testo visualizzato e della descrizione e un flag che indica se l'elemento deve essere visualizzato in altri contesti dell'interfaccia utente.</summary>
      <param name="actionList" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that contains the method this item is associated with.">Oggetto <see cref="T:System.ComponentModel.Design.DesignerActionList" /> che contiene il metodo a cui è associato questo elemento.</param>
      <param name="memberName" vsli:raw="The case-sensitive name of the method in the class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to invoke through the panel item.">Il nome con distinzione tra maiuscole e minuscole del metodo nella classe derivata da <see cref="T:System.ComponentModel.Design.DesignerActionList" /> da richiamare attraverso l'elemento del pannello.</param>
      <param name="displayName" vsli:raw="The panel text for this item.">Testo del pannello per l'elemento.</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; used to group similar items on the panel.">L'oggetto <see cref="T:System.String" /> con distinzione tra maiuscole e minuscole utilizzato per raggruppare elementi analoghi nel pannello.</param>
      <param name="description" vsli:raw="Supplemental text for this item, used in ToolTips or the status bar.">Testo aggiuntivo per questo elemento, utilizzato nelle descrizioni comandi o nella barra di stato.</param>
      <param name="includeAsDesignerVerb" vsli:raw="A flag that specifies whether to also treat the associated method as a designer verb for the associated component.">Flag che specifica se gestire anche il metodo associato come un verbo di progettazione per il componente associato.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.Invoke">
      <summary vsli:raw="Programmatically executes the method associated with the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt;.">Esegue a livello di codice il metodo associato all'oggetto <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The method, named in &lt;see cref=&quot;P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName&quot; /&gt; cannot be found.">Impossibile trovare il metodo denominato nella proprietà <see cref="P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName" />.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb">
      <summary vsli:raw="Gets a value that indicates the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; should appear in other user interface contexts.">Ottiene un valore che indica che l'oggetto <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> deve essere visualizzato in altri contesti dell'interfaccia utente.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the item is to be used in shortcut menus; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'elemento deve essere utilizzato nei menu di scelta rapida. In caso contrario, <see langword="false" /> Il valore predefinito è <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName">
      <summary vsli:raw="Gets the name of the method that this &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; is associated with.">Ottiene il nome del metodo a cui questo oggetto <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> è associato.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the name of the associated method.">Oggetto <see cref="T:System.String" /> contenente il nome del metodo associato.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.RelatedComponent">
      <summary vsli:raw="Gets or sets a component that contributes its &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionMethodItem&quot; /&gt; objects to the current panel.">Ottiene o imposta un componente che fornisce i propri oggetti <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> al pannello corrente.</summary>
      <returns vsli:raw="The contributing component, which should have an associated designer that supplies items.">Il componente stesso, che deve disporre di una finestra di progettazione associata che fornisce elementi.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionPropertyItem">
      <summary vsli:raw="Represents a panel item that is associated with a property in a class derived from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt;. This class cannot be inherited.">Rappresenta un elemento pannello associato a una proprietà in una classe derivata da <see cref="T:System.ComponentModel.Design.DesignerActionList" />. La classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionPropertyItem&quot; /&gt; class, with the specified property and display names.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" /> con i nomi di proprietà e i nomi visualizzati specificati.</summary>
      <param name="memberName" vsli:raw="The case-sensitive name of the property associated with this panel item.">Nome della proprietà con distinzione tra maiuscole e minuscole associato all'elemento del pannello.</param>
      <param name="displayName" vsli:raw="The panel text for this item.">Testo del pannello per l'elemento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionPropertyItem&quot; /&gt; class, with the specified property and category names, and display text.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" />, con i nomi di proprietà, di categoria e il testo visualizzato specificati.</summary>
      <param name="memberName" vsli:raw="The case-sensitive name of the property associated with this panel item.">Nome della proprietà con distinzione tra maiuscole e minuscole associato all'elemento del pannello.</param>
      <param name="displayName" vsli:raw="The panel text for this item.">Testo del pannello per l'elemento.</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; used to group similar items on the panel.">L'oggetto <see cref="T:System.String" /> con distinzione tra maiuscole e minuscole utilizzato per raggruppare elementi analoghi nel pannello.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionPropertyItem&quot; /&gt; class, with the specified property and category names, and display and description text.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" />, con i nomi di proprietà e di categoria specificati, nonché il testo della descrizione e quello visualizzato.</summary>
      <param name="memberName" vsli:raw="The case-sensitive name of the property associated with this panel item.">Nome della proprietà con distinzione tra maiuscole e minuscole associato all'elemento del pannello.</param>
      <param name="displayName" vsli:raw="The panel text for this item.">Testo del pannello per l'elemento.</param>
      <param name="category" vsli:raw="The case-sensitive &lt;see cref=&quot;T:System.String&quot; /&gt; used to group similar items on the panel.">L'oggetto <see cref="T:System.String" /> con distinzione tra maiuscole e minuscole utilizzato per raggruppare elementi analoghi nel pannello.</param>
      <param name="description" vsli:raw="Supplemental text for this item, used in ToolTips or the status bar.">Testo aggiuntivo per questo elemento, utilizzato nelle descrizioni comandi o nella barra di stato.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionPropertyItem.MemberName">
      <summary vsli:raw="Gets the name of the property that this item is associated with.">Ottiene il nome della proprietà a cui è associato l'elemento.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that contains the name of the associated property.">Oggetto <see cref="T:System.String" /> contenente il nome della proprietà associata.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionPropertyItem.RelatedComponent">
      <summary vsli:raw="Gets or sets a component that contributes its items to the current panel.">Ottiene o imposta un componente che rende disponibili i propri elementi al pannello corrente.</summary>
      <returns vsli:raw="The contributing component, which should have an associated designer that supplies &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; objects.">Il componente stesso, che deve disporre di una finestra di progettazione associata che fornisce oggetti <see cref="T:System.ComponentModel.Design.DesignerActionItem" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionService">
      <summary vsli:raw="Establishes a design-time service that manages the collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionItem&quot; /&gt; objects for components.">Crea un servizio in fase di progettazione per la gestione della raccolta di oggetti <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> per i componenti.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged">
      <summary vsli:raw="Occurs when a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; is removed or added for any component.">Si verifica quando si aggiunge o si rimuove un oggetto <see cref="T:System.ComponentModel.Design.DesignerActionList" /> per un componente.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.#ctor(System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionService&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.DesignerActionService" />.</summary>
      <param name="serviceProvider" vsli:raw="The service provider for the current design-time environment.">Provider del servizio per l'ambiente di progettazione corrente.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; to the current collection of managed smart tags.">Aggiunge un oggetto <see cref="T:System.ComponentModel.Design.DesignerActionList" /> all'insieme corrente di smart tag gestiti.</summary>
      <param name="comp" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to associate the smart tags with.">Oggetto <see cref="T:System.ComponentModel.IComponent" /> al quale associare gli smart tag.</param>
      <param name="actionList" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; that contains the new smart tag items to be added.">Oggetto <see cref="T:System.ComponentModel.Design.DesignerActionList" /> contenente i nuovi elementi smart tag da aggiungere.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the parameters are &lt;see langword=&quot;null&quot; /&gt;.">Uno o entrambi i parametri sono <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; to the current collection of managed smart tags.">Aggiunge un oggetto <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> all'insieme corrente di smart tag gestiti.</summary>
      <param name="comp" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to associate the smart tags with.">Oggetto <see cref="T:System.ComponentModel.IComponent" /> al quale associare gli smart tag.</param>
      <param name="designerActionListCollection" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; that contains the new smart tag items to be added.">Oggetto <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> contenente i nuovi elementi smart tag da aggiungere.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the parameters are &lt;see langword=&quot;null&quot; /&gt;.">Uno o entrambi i parametri sono <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Clear">
      <summary vsli:raw="Releases all components from management and clears all push-model smart tag lists.">Rilascia tutti i componenti dalla gestione e cancella tutti gli elenchi di smart tag del modello push.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Contains(System.ComponentModel.IComponent)">
      <summary vsli:raw="Determines whether the current smart tag service manages the action lists for the specified component.">Determina se il servizio smart tag corrente gestisce gli elenchi di azioni del componente specificato.</summary>
      <param name="comp" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to search for.">Oggetto <see cref="T:System.ComponentModel.IComponent" /> da cercare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;comp&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="comp" /> è <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component is managed by the current service; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il componente è gestito dal servizio corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionService&quot; /&gt; class.">Rilascia tutte le risorse usate dalla classe <see cref="T:System.ComponentModel.Design.DesignerActionService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionService&quot; /&gt; and optionally releases the managed resources.">Rilascia le risorse non gestite usate da <see cref="T:System.ComponentModel.Design.DesignerActionService" /> e, facoltativamente, le risorse gestite.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent)">
      <summary vsli:raw="Returns the collection of smart tag item lists associated with a component.">Restituisce l'insieme degli elenchi di elementi smart tag associati a un componente.</summary>
      <param name="component" vsli:raw="The component that the smart tags are associated with.">Componente al quale sono associati gli smart tag.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;comp&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="comp" /> è <see langword="null" />.</exception>
      <returns vsli:raw="The collection of smart tags for the specified component.">Insieme degli smart tag per il componente specificato.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent,System.Windows.Forms.Design.ComponentActionsType)">
      <summary vsli:raw="Returns the collection of designer action item lists of the specified type associated with a component.">Restituisce la raccolta di elenchi di elementi di azione della finestra di progettazione del tipo specificato associato a un componente.</summary>
      <param name="component" vsli:raw="The component that the DesignerActions are associated with.">Componente al quale sono associati i DesignerActions.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentActionsType&quot; /&gt; to filter the associated designer actions with.">Oggetto <see cref="T:System.ComponentModel.Design.ComponentActionsType" /> per filtrare le azioni di progettazione associate con.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;component&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="component" /> è <see langword="null" />.</exception>
      <returns vsli:raw="The collection of designer actions of the specified type for the specified component.">Raccolta di azioni della finestra di progettazione del tipo specificato per il componente specificato.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary vsli:raw="Retrieves the pull-model smart tags associated with a component.">Recupera gli smart tag del modello pull associati a un componente.</summary>
      <param name="component" vsli:raw="The component that the smart tags are associated with.">Componente al quale sono associati gli smart tag.</param>
      <param name="actionLists" vsli:raw="The collection to add the associated smart tags to.">Insieme al quale aggiungere gli smart tag associati.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the parameters are &lt;see langword=&quot;null&quot; /&gt;.">Uno o entrambi i parametri sono <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary vsli:raw="Retrieves the push-model smart tags associated with a component.">Recupera gli smart tag del modello push associati a un componente.</summary>
      <param name="component" vsli:raw="The component that the smart tags are associated with.">Componente al quale sono associati gli smart tag.</param>
      <param name="actionLists" vsli:raw="The collection to add the associated smart tags to.">Insieme al quale aggiungere gli smart tag associati.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the parameters are &lt;see langword=&quot;null&quot; /&gt;.">Uno o entrambi i parametri sono <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Removes the specified smart tag list from all components managed by the current service.">Rimuove l'elenco di smart tag specificato da tutti i componenti gestiti dal servizio corrente.</summary>
      <param name="actionList" vsli:raw="The list of smart tags to be removed.">Elenco di smart tag da rimuovere.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;actionList&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="actionList" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent)">
      <summary vsli:raw="Removes all the smart tag lists associated with the specified component.">Rimuove tutti gli elenchi di smart tag associati al componente specificato.</summary>
      <param name="comp" vsli:raw="The component to disassociate the smart tags from.">Componente dal quale dissociare gli smart tag.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;comp&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="comp" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)">
      <summary vsli:raw="Removes the specified smart tag list from the specified component.">Rimuove l'elenco di smart tag specificato dal componente indicato.</summary>
      <param name="comp" vsli:raw="The component to disassociate the smart tags from.">Componente dal quale dissociare gli smart tag.</param>
      <param name="actionList" vsli:raw="The smart tag list to remove.">Elenco di smart tag da rimuovere.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the parameters are &lt;see langword=&quot;null&quot; /&gt;.">Uno o entrambi i parametri sono <see langword="null" />.</exception>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionTextItem">
      <summary vsli:raw="Represents a static text item on a smart tag panel.">Rappresenta un elemento di testo statico di un pannello smart tag.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionTextItem.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionTextItem&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.DesignerActionTextItem" />.</summary>
      <param name="displayName" vsli:raw="The panel text for this item.">Testo del pannello per l'elemento.</param>
      <param name="category" vsli:raw="The category used to group similar items on the panel.">Categoria utilizzata per raggruppare elementi simili nel pannello.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIService">
      <summary vsli:raw="Manages the user interface (UI) for a smart tag panel. This class cannot be inherited.">Gestisce l'interfaccia utente (UI) per un pannello smart tag. La classe non può essere ereditata.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange">
      <summary vsli:raw="Occurs when a request is made to show or hide a smart tag panel.">Si verifica a seguito della richiesta di visualizzare o nascondere un pannello smart tag.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionUIService&quot; /&gt; class.">Rilascia tutte le risorse usate dalla classe <see cref="T:System.ComponentModel.Design.DesignerActionUIService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.HideUI(System.ComponentModel.IComponent)">
      <summary vsli:raw="Hides the smart tag panel for a component.">Nasconde il pannello smart tag per un componente.</summary>
      <param name="component" vsli:raw="The component whose smart tag panel should be hidden.">Componente per il quale nascondere il pannello smart tag.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.Refresh(System.ComponentModel.IComponent)">
      <summary vsli:raw="Updates the smart tag panel.">Aggiorna il pannello smart tag.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to refresh.">Oggetto <see cref="T:System.ComponentModel.IComponent" /> da aggiornare.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.ShouldAutoShow(System.ComponentModel.IComponent)">
      <summary vsli:raw="Indicates whether to automatically show the smart tag panel.">Indica se visualizzare automaticamente il pannello smart tag.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to automatically show.">Oggetto <see cref="T:System.ComponentModel.IComponent" /> da visualizzare automaticamente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to automatically show the smart tag panel; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per visualizzare automaticamente il pannello smart tag; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.ShowUI(System.ComponentModel.IComponent)">
      <summary vsli:raw="Displays the smart tag panel for a component.">Visualizza il pannello smart tag per un componente.</summary>
      <param name="component" vsli:raw="The component whose smart tag panel should be displayed.">Componente per il quale visualizzare il pannello smart tag.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange&quot; /&gt; event.">Fornisce dati per l'evento <see cref="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.#ctor(System.Object,System.ComponentModel.Design.DesignerActionUIStateChangeType)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs" />.</summary>
      <param name="relatedObject" vsli:raw="The object that is associated with the panel.">Oggetto associato al pannello.</param>
      <param name="changeType" vsli:raw="A value that specifies whether the panel is being displayed or hidden.">Valore che specifica se il pannello viene visualizzato o nascosto.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.ChangeType">
      <summary vsli:raw="Gets a flag indicating whether the smart tag panel is being displayed or hidden.">Ottiene un flag che indica se il pannello smart tag è visualizzato o nascosto.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionUIStateChangeType&quot; /&gt; that indicates the state of the panel.">Oggetto <see cref="T:System.ComponentModel.Design.DesignerActionUIStateChangeType" /> che indica lo stato del pannello.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.RelatedObject">
      <summary vsli:raw="Gets the object that is associated with the smart tag panel.">Ottiene l'oggetto associato al pannello smart tag.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; associated with the smart tag panel.">Oggetto <see cref="T:System.Object" /> associato al pannello smart tag.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange&quot; /&gt; event of a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionUIService&quot; /&gt;.">Rappresenta il metodo che gestirà l'evento <see cref="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange" /> di un oggetto <see cref="T:System.ComponentModel.Design.DesignerActionUIService" />.</summary>
      <param name="sender" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; that raised the event.">La classe <see cref="T:System.Object" /> che ha generato l'evento.</param>
      <param name="e" vsli:raw="The event-specific information.">Informazioni specifiche sull'evento.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeType">
      <summary vsli:raw="Specifies the display state of a smart tag panel.">Specifica lo stato di visualizzazione di un pannello smart tag.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Hide">
      <summary vsli:raw="The smart tag panel is being hidden.">Il pannello smart tag è nascosto.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Refresh">
      <summary vsli:raw="The smart tag panel is being refreshed.">Il pannello smart tag è aggiornato.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Show">
      <summary vsli:raw="The smart tag panel is being displayed.">Il pannello smart tag è visualizzato.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerCommandSet">
      <summary vsli:raw="Represents a base class for design-time tools, not derived from &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentDesigner&quot; /&gt;, that provide smart tag or designer verb capabilities.">Rappresenta una classe di base per gli strumenti Design-Time, non derivata dall'oggetto <see cref="T:System.ComponentModel.Design.ComponentDesigner" />, che fornisce funzioni per smart tag o verbi di progettazione.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerCommandSet.#ctor">
      <summary vsli:raw="Initializes an instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerCommandSet&quot; /&gt; class.">Inizializza un'istanza della classe <see cref="T:System.ComponentModel.Design.DesignerCommandSet" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerCommandSet.GetCommands(System.String)">
      <summary vsli:raw="Returns a collection of command objects.">Restituisce un insieme di oggetti Command.</summary>
      <param name="name" vsli:raw="The type of collection to return, indicating either a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; or a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerVerbCollection&quot; /&gt;.">Tipo di insieme da restituire, che indica un oggetto <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> o un oggetto <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" />.</param>
      <returns vsli:raw="A collection that contains the specified type - either &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionList&quot; /&gt; or &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerVerb&quot; /&gt; - of command objects. The base implementation always returns &lt;see langword=&quot;null&quot; /&gt;.">Raccolta che contiene il tipo specificato di oggetti comando, <see cref="T:System.ComponentModel.Design.DesignerActionList" /> oppure <see cref="T:System.ComponentModel.Design.DesignerVerb" />. L'implementazione di base restituisce sempre <see langword="null" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerCommandSet.ActionLists">
      <summary vsli:raw="Gets the collection of all the smart tags associated with the designed component.">Ottiene l'insieme di tutti gli smart tag associati al componente progettato.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerActionListCollection&quot; /&gt; that contains the smart tags for the associated designed component.">Oggetto <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> contenente gli smart tag per il componente progettato associato.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerCommandSet.Verbs">
      <summary vsli:raw="Gets the collection of all the designer verbs associated with the designed component.">Ottiene l'insieme di tutti i verbi di progettazione associati al componente progettato.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerVerbCollection&quot; /&gt; that contains the designer verbs for the associated designed component.">Oggetto <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> contenente i verbi di progettazione per il componente progettato associato.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurface">
      <summary vsli:raw="Presents a user interface for designing components.">Fornisce un'interfaccia utente per la progettazione dei componenti.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Disposed">
      <summary vsli:raw="Occurs when the design surface is disposed.">Generato quando viene eliminata l'area di progettazione.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Flushed">
      <summary vsli:raw="Occurs when a call is made to the &lt;see cref=&quot;M:System.ComponentModel.Design.DesignSurface.Flush&quot; /&gt; method of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt;.">Generato quando viene eseguita una chiamata al metodo <see cref="M:System.ComponentModel.Design.DesignSurface.Flush" /> dell'oggetto <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Loaded">
      <summary vsli:raw="Occurs when the designer load has completed.">Generato al termine del caricamento della finestra di progettazione.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Loading">
      <summary vsli:raw="Occurs when the designer is about to be loaded.">Generato quando si sta per caricare la finestra di progettazione.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Unloaded">
      <summary vsli:raw="Occurs when a designer has finished unloading.">Generato al termine dello scaricamento della finestra di progettazione.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Unloading">
      <summary vsli:raw="Occurs when a designer is about to unload.">Generato quando la finestra di progettazione è in fase di scaricamento.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.ViewActivated">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;M:System.ComponentModel.Design.IDesignerHost.Activate&quot; /&gt; method has been called on &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt;.">Generato quando viene chiamato il metodo <see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" /> nell'interfaccia <see cref="T:System.ComponentModel.Design.IDesignerHost" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">L'interfaccia <see cref="T:System.ComponentModel.Design.IDesignerHost" /> collegata all'oggetto <see cref="T:System.ComponentModel.Design.DesignSurface" /> è stata eliminata.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
      <param name="parentProvider" vsli:raw="The parent service provider, or &lt;see langword=&quot;null&quot; /&gt; if there is no parent used to resolve services.">Il provider di servizi padre oppure il valore <see langword="null" /> se non viene utilizzato alcun padre per risolvere i servizi.</param>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">L'interfaccia <see cref="T:System.ComponentModel.Design.IDesignerHost" /> collegata all'oggetto <see cref="T:System.ComponentModel.Design.DesignSurface" /> è stata eliminata.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
      <param name="parentProvider" vsli:raw="The parent service provider, or &lt;see langword=&quot;null&quot; /&gt; if there is no parent used to resolve services.">Il provider di servizi padre oppure il valore <see langword="null" /> se non viene utilizzato alcun padre per risolvere i servizi.</param>
      <param name="rootComponentType" vsli:raw="The type of root component to create.">Tipo di componente radice da creare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rootComponent&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rootComponent" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">L'interfaccia <see cref="T:System.ComponentModel.Design.IDesignerHost" /> collegata all'oggetto <see cref="T:System.ComponentModel.Design.DesignSurface" /> è stata eliminata.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
      <param name="rootComponentType" vsli:raw="The type of root component to create.">Tipo di componente radice da creare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rootComponent&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rootComponent" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">L'interfaccia <see cref="T:System.ComponentModel.Design.IDesignerHost" /> collegata all'oggetto <see cref="T:System.ComponentModel.Design.DesignSurface" /> è stata eliminata.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)">
      <summary vsli:raw="Begins the loading process with the given designer loader.">Avvia il processo di caricamento con il caricatore della finestra di progettazione indicato.</summary>
      <param name="loader" vsli:raw="The designer loader to use for loading the designer.">Caricatore da utilizzare per il caricamento della finestra di progettazione.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;loader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="loader" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">L'interfaccia <see cref="T:System.ComponentModel.Design.IDesignerHost" /> collegata all'oggetto <see cref="T:System.ComponentModel.Design.DesignSurface" /> è stata eliminata.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)">
      <summary vsli:raw="Begins the loading process.">Avvia il processo di caricamento.</summary>
      <param name="rootComponentType" vsli:raw="The type of component to create in design mode.">Tipo di componente da creare in modalità di progettazione.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;rootComponentType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="rootComponentType" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">L'interfaccia <see cref="T:System.ComponentModel.Design.IDesignerHost" /> collegata all'oggetto <see cref="T:System.ComponentModel.Design.DesignSurface" /> è stata eliminata.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)">
      <summary vsli:raw="Creates an instance of a component.">Crea un'istanza di un componente.</summary>
      <param name="componentType" vsli:raw="The type of component to create.">Tipo di componente da creare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;componentType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="componentType" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">L'interfaccia <see cref="T:System.ComponentModel.Design.IDesignerHost" /> collegata all'oggetto <see cref="T:System.ComponentModel.Design.DesignSurface" /> è stata eliminata.</exception>
      <returns vsli:raw="The newly created component.">Componente appena creato.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
      <summary vsli:raw="Creates a designer when a component is added to the container.">Crea una finestra di progettazione quando un componente viene aggiunto al contenitore.</summary>
      <param name="component" vsli:raw="The component for which the designer should be created.">Componente per il quale creare la finestra di progettazione.</param>
      <param name="rootDesigner" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to create a root designer; &lt;see langword=&quot;false&quot; /&gt; to create a normal designer.">
        <see langword="true" /> per creare una finestra di progettazione radice; <see langword="false" /> per creare una finestra di progettazione normale.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;component&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="component" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">L'interfaccia <see cref="T:System.ComponentModel.Design.IDesignerHost" /> collegata all'oggetto <see cref="T:System.ComponentModel.Design.DesignSurface" /> è stata eliminata.</exception>
      <returns vsli:raw="An instance of the requested designer, or &lt;see langword=&quot;null&quot; /&gt; if no matching designer could be found.">Istanza della finestra di progettazione richiesta oppure <see langword="null" /> se non è possibile individuare la finestra di progettazione corrispondente.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)">
      <summary vsli:raw="Creates an instance of the given type.">Crea un'istanza del tipo indicato.</summary>
      <param name="type" vsli:raw="The type to create.">Tipo da creare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="type" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">L'interfaccia <see cref="T:System.ComponentModel.Design.IDesignerHost" /> collegata all'oggetto <see cref="T:System.ComponentModel.Design.DesignSurface" /> è stata eliminata.</exception>
      <returns vsli:raw="The newly created object.">Oggetto appena creato.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)">
      <summary vsli:raw="Creates a container suitable for nesting controls or components.">Crea un contenitore adatto per i controlli o i componenti di annidamento.</summary>
      <param name="owningComponent" vsli:raw="The component that manages the nested container.">Componente che gestisce il contenitore annidato.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;owningComponent&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="owningComponent" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">L'interfaccia <see cref="T:System.ComponentModel.Design.IDesignerHost" /> collegata all'oggetto <see cref="T:System.ComponentModel.Design.DesignSurface" /> è stata eliminata.</exception>
      <returns vsli:raw="The nested container.">Contenitore annidato.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)">
      <summary vsli:raw="Creates a container suitable for nesting controls or components.">Crea un contenitore adatto per i controlli o i componenti di annidamento.</summary>
      <param name="owningComponent" vsli:raw="The component that manages the nested container.">Componente che gestisce il contenitore annidato.</param>
      <param name="containerName" vsli:raw="An additional name for the nested container.">Nome aggiuntivo del contenitore annidato.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;owningComponent&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="owningComponent" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">L'interfaccia <see cref="T:System.ComponentModel.Design.IDesignerHost" /> collegata all'oggetto <see cref="T:System.ComponentModel.Design.DesignSurface" /> è stata eliminata.</exception>
      <returns vsli:raw="The nested container.">Contenitore annidato.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Dispose">
      <summary vsli:raw="Releases the resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt;.">Rilascia le risorse usate da <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt;.">Rilascia le risorse usate da <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Flush">
      <summary vsli:raw="Serializes changes to the design surface.">Serializza le modifiche apportate all'area di progettazione.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.GetService(System.Type)">
      <summary vsli:raw="Gets a service from the service container.">Ottiene un servizio dal contenitore dei servizi.</summary>
      <param name="serviceType" vsli:raw="The type of service to retrieve.">Tipo di servizio da recuperare.</param>
      <returns vsli:raw="An object that implements, or is a derived class of, &lt;paramref name=&quot;serviceType&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if the service does not exist in the service container.">Oggetto che implementa o rappresenta una classe derivata dell'oggetto <paramref name="serviceType" />, oppure <see langword="null" /> se nel contenitore il servizio è inesistente.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnLoaded(System.ComponentModel.Design.LoadedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurface.Loaded&quot; /&gt; event.">Genera l'evento <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.LoadedEventArgs&quot; /&gt; that contains the event data.">Oggetto <see cref="T:System.ComponentModel.Design.LoadedEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnLoading(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurface.Loading&quot; /&gt; event.">Genera l'evento <see cref="E:System.ComponentModel.Design.DesignSurface.Loading" />.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnUnloaded(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurface.Unloaded&quot; /&gt; event.">Genera l'evento <see cref="E:System.ComponentModel.Design.DesignSurface.Unloaded" />.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnUnloading(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurface.Unloading&quot; /&gt; event.">Genera l'evento <see cref="E:System.ComponentModel.Design.DesignSurface.Unloading" />.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnViewActivate(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurface.ViewActivated&quot; /&gt; event.">Genera l'evento <see cref="E:System.ComponentModel.Design.DesignSurface.ViewActivated" />.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.ComponentContainer">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt; implementation within the design surface.">Ottiene l'implementazione dell'interfaccia <see cref="T:System.ComponentModel.IContainer" /> all'interno dell'area di progettazione.</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">L'interfaccia <see cref="T:System.ComponentModel.Design.IDesignerHost" /> collegata all'oggetto <see cref="T:System.ComponentModel.Design.DesignSurface" /> è stata eliminata.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt; implementation within the design surface.">Implementazione dell'interfaccia <see cref="T:System.ComponentModel.IContainer" /> all'interno dell'area di progettazione.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.DtelLoading">
      <summary vsli:raw="Gets a value indicating whether the Design-time Error List is loading.">Ottiene un valore che indica se Design-time Error List viene caricato.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Design-time Error List is loading; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Se il Elenco errori in fase di progettazione viene caricato; in caso contrario, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.IsLoaded">
      <summary vsli:raw="Gets a value indicating whether the design surface is currently loaded.">Ottiene un valore che indica se l'area di progettazione è in fase di caricamento.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the design surface is currently loaded; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'area di progettazione è in fase di caricamento; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.LoadErrors">
      <summary vsli:raw="Returns a collection of loading errors or a void collection.">Restituisce un insieme di errori di caricamento o un insieme vuoto.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; of loading errors.">Interfaccia <see cref="T:System.Collections.ICollection" /> degli errori di caricamento.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.ServiceContainer">
      <summary vsli:raw="Gets the service container.">Ottiene il contenitore dei servizi.</summary>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">L'interfaccia <see cref="T:System.ComponentModel.Design.IDesignerHost" /> collegata all'oggetto <see cref="T:System.ComponentModel.Design.DesignSurface" /> è stata eliminata.</exception>
      <returns vsli:raw="The service container that provides all services to designers contained within the design surface.">Contenitore dei servizi che fornisce tutti i servizi alle finestre nell'area di progettazione.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.View">
      <summary vsli:raw="Gets the view for the root designer.">Ottiene la visualizzazione per la finestra di progettazione radice.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The design surface is not loading, the designer loader has not yet created a root designer, or the design surface finished the load, but failed. More information may available in the &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt;.">L'area di progettazione non viene caricata, il caricatore della finestra di progettazione non ha ancora creato la finestra di progettazione radice o il caricamento dell'area di progettazione è terminato con esito negativo. Ulteriori informazioni sono disponibili nella documentazione relativa alla proprietà <see cref="P:System.Exception.InnerException" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The designer loaded, but it does not offer a view compatible with this design surface.">La finestra di progettazione è stata caricata ma non dispone di una visualizzazione compatibile con questa area di progettazione.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; attached to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; has been disposed.">L'interfaccia <see cref="T:System.ComponentModel.Design.IDesignerHost" /> collegata all'oggetto <see cref="T:System.ComponentModel.Design.DesignSurface" /> è stata eliminata.</exception>
      <returns vsli:raw="The view for the root designer.">Visualizzazione per la finestra di progettazione radice.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurfaceCollection">
      <summary vsli:raw="Contains a collection of design surfaces. This class cannot be inherited.">Contiene una raccolta di aree di progettazione. La classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceCollection.CopyTo(System.ComponentModel.Design.DesignSurface[],System.Int32)">
      <summary vsli:raw="Copies the collection members to the specified &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; array beginning at the specified destination index.">Copia i membri dell'insieme nella matrice <see cref="T:System.ComponentModel.Design.DesignSurface" /> specificata partendo dall'indice di destinazione specificato.</summary>
      <param name="array" vsli:raw="The array to copy collection members to.">Matrice in cui copiare i membri dell'insieme.</param>
      <param name="index" vsli:raw="The destination index to begin copying to.">Indice di destinazione dal quale iniziare la copia.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceCollection.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that can iterate through the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceCollection&quot; /&gt; instance.">Restituisce un enumeratore che consente di scorrere l'istanza di <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceCollection&quot; /&gt; instance.">Oggetto <see cref="T:System.Collections.IEnumerator" /> per l'istanza di <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)&quot; /&gt; method.">Per una descrizione di questo membro, vedere il metodo <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the values copied from &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceCollection&quot; /&gt;.">Istanza unidimensionale di <see cref="T:System.Array" /> destinazione dei valori copiati da <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.</param>
      <param name="index" vsli:raw="The index in &lt;paramref name=&quot;array&quot; /&gt; where copying begins.">Indice in <paramref name="array" /> in corrispondenza del quale ha inizio la copia.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.Collections.IEnumerable.GetEnumerator&quot; /&gt; method.">Per una descrizione di questo membro, vedere il metodo <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceCollection&quot; /&gt; instance.">Oggetto <see cref="T:System.Collections.IEnumerator" /> per l'istanza di <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.Count">
      <summary vsli:raw="Gets the total number of design surfaces in the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceCollection&quot; /&gt;.">Ottiene il numero totale di aree di progettazione dell'oggetto <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.</summary>
      <returns vsli:raw="The total number of elements in the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceCollection&quot; /&gt;.">Numero totale di elementi dell'oggetto <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the design surface at the specified index.">Ottiene l'area di progettazione in corrispondenza dell'indice specificato.</summary>
      <param name="index" vsli:raw="The index of the design surface to return.">Indice dell'area di progettazione da restituire.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The design surface specified by &lt;paramref name=&quot;index&quot; /&gt; is not supported.">L'area di progettazione specificata dall'oggetto <paramref name="index" /> non è supportata.</exception>
      <returns vsli:raw="The design surface at the specified index.">Area di progettazione in corrispondenza dell'indice specificato.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#Count">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;P:System.Collections.ICollection.Count&quot; /&gt; property.">Per una descrizione di questo membro, vedere la proprietà <see cref="P:System.Collections.ICollection.Count" />.</summary>
      <returns vsli:raw="The number of elements contained in the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceCollection&quot; /&gt;.">Il numero di elementi contenuti in <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;P:System.Collections.ICollection.IsSynchronized&quot; /&gt; property.">Per una descrizione di questo membro, vedere la proprietà <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceCollection&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'accesso a <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" /> è sincronizzato (thread-safe); in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;P:System.Collections.ICollection.SyncRoot&quot; /&gt; property.">Per una descrizione di questo membro, vedere la proprietà <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceCollection&quot; /&gt;.">Oggetto che può essere utilizzato per sincronizzare l'accesso a <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurfaceEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated&quot; /&gt; event.">Fornisce dati per l'evento <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceEventArgs.#ctor(System.ComponentModel.Design.DesignSurface)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceEventArgs&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.DesignSurfaceEventArgs" />.</summary>
      <param name="surface" vsli:raw="The design surface that is being created.">Area di progettazione in fase di creazione.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;surface&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="surface" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceEventArgs.Surface">
      <summary vsli:raw="Gets the design surface that is being created.">Ottiene l'area di progettazione in fase di creazione.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; that is being created.">Oggetto <see cref="T:System.ComponentModel.Design.DesignSurface" /> in fase di creazione.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurfaceEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated&quot; /&gt; event of a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceManager&quot; /&gt; class. This class cannot be inherited.">Rappresenta il metodo che gestirà l'evento <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated" /> di una classe <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />. La classe non può essere ereditata.</summary>
      <param name="sender" vsli:raw="The source of the event.">Origine dell'evento.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceEventArgs&quot; /&gt; that contains the event data.">Oggetto <see cref="T:System.ComponentModel.Design.DesignSurfaceEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurfaceManager">
      <summary vsli:raw="Manages a collection of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; objects.">Gestisce una raccolta di oggetti <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged">
      <summary vsli:raw="Occurs when the currently active designer changes.">Viene generato quando la finestra di progettazione attiva corrente viene modificata.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated">
      <summary vsli:raw="Occurs when a designer is created.">Viene generato quando viene creata una finestra di progettazione.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed">
      <summary vsli:raw="Occurs when a designer is disposed.">Viene generato quando viene eliminata una finestra di progettazione.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged">
      <summary vsli:raw="Occurs when the global selection changes.">Viene generato quando cambia la selezione globale.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceManager&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor(System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceManager&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />.</summary>
      <param name="parentProvider" vsli:raw="A parent service provider. Service requests are forwarded to this provider if they cannot be resolved by the design surface manager.">Provider di servizi padre. Le richieste di servizi vengono inoltrate al provider se non possono essere risolte dal gestore dell'area di progettazione.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface">
      <summary vsli:raw="Creates an instance of a design surface.">Crea un'istanza di un'area di progettazione.</summary>
      <returns vsli:raw="A new design surface instance.">Una nuova istanza dell'area di progettazione.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)">
      <summary vsli:raw="Creates an instance of a design surface.">Crea un'istanza di un'area di progettazione.</summary>
      <param name="parentProvider" vsli:raw="A parent service provider. A new merged service provider will be created that will first ask this provider for a service, and then delegate any failures to the design surface manager object. This merged provider will be passed into the &lt;see cref=&quot;M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)&quot; /&gt; method.">Provider di servizi padre. Verrà creato un nuovo provider di servizi unito che farà innanzitutto richiesta di un servizio al provider e quindi delegherà eventuali errori all'oggetto gestore dell'area di progettazione. Questo provider unito sarà passato nel metodo <see cref="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;parentProvider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="parentProvider" /> è <see langword="null" />.</exception>
      <returns vsli:raw="A new design surface instance.">Una nuova istanza dell'area di progettazione.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)">
      <summary vsli:raw="Implementation that creates the design surface.">Implementazione che crea l'area di progettazione.</summary>
      <param name="parentProvider" vsli:raw="A service provider to pass to the design surface. This is either an instance of &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceManager&quot; /&gt; or an object that implements &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt;, and represents a merge between the service provider of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceManager&quot; /&gt; class and an externally passed provider.">Provider di servizi da passare all'area di progettazione. Un'istanza dell'oggetto <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> o un oggetto che implementa l'interfaccia <see cref="T:System.IServiceProvider" /> che rappresenta un'unione tra il provider di servizi della classe <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> e un provider passato esternamente.</param>
      <returns vsli:raw="A new design surface instance.">Una nuova istanza dell'area di progettazione.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose">
      <summary vsli:raw="Releases the resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceManager&quot; /&gt;.">Rilascia le risorse usate da <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurfaceManager&quot; /&gt; and optionally releases the managed resources.">Rilascia le risorse non gestite usate da <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> e, facoltativamente, le risorse gestite.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.GetService(System.Type)">
      <summary vsli:raw="Gets a service in the design surface manager's service container.">Ottiene un servizio nel contenitore dei servizi del gestore dell'area di progettazione.</summary>
      <param name="serviceType" vsli:raw="The service type to retrieve.">Il tipo di servizio da recuperare.</param>
      <returns vsli:raw="An object that implements, or is a derived class of, the given service type; otherwise, &lt;see langword=&quot;null&quot; /&gt; if the service does not exist in the service container.">Oggetto che implementa o rappresenta una classe derivata del tipo di servizio indicato oppure <see langword="null" /> se nel contenitore il servizio è inesistente.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface">
      <summary vsli:raw="Gets or sets the active designer.">Ottiene o imposta la finestra di progettazione attiva.</summary>
      <returns vsli:raw="The active designer.">La finestra di progettazione attiva.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces">
      <summary vsli:raw="Gets a collection of design surfaces.">Ottiene un insieme di aree di progettazione.</summary>
      <returns vsli:raw="A collection of design surfaces that are currently hosted by the design surface manager.">Un insieme di aree di progettazione attualmente ospitate dal gestore dell'area di progettazione.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer">
      <summary vsli:raw="Gets the design surface manager's &lt;see cref=&quot;P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer&quot; /&gt;.">Ottiene la proprietà <see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" /> del gestore dell'area di progettazione.</summary>
      <returns vsli:raw="The design surface manager's &lt;see cref=&quot;P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer&quot; /&gt;.">La proprietà <see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" /> del gestore dell'area di progettazione.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DisplayMode">
      <summary vsli:raw="Defines identifiers that indicate the display modes used by &lt;see cref=&quot;T:System.ComponentModel.Design.ByteViewer&quot; /&gt;.">Definisce gli identificatori che specificano le modalità di visualizzazione utilizzate dall'oggetto <see cref="T:System.ComponentModel.Design.ByteViewer" />.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DisplayMode.Ansi">
      <summary vsli:raw="An ANSI format display.">Visualizzazione in formato ANSI.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DisplayMode.Auto">
      <summary vsli:raw="A display mode that automatically selects a display mode. In this mode, the bytes are examined to determine if they are hexadecimal or printable. If the bytes are in hexadecimal format, the &lt;see cref=&quot;F:System.ComponentModel.Design.DisplayMode.Hexdump&quot; /&gt; mode is selected. If the characters match a printable character set, a test is run to automatically select either the &lt;see cref=&quot;F:System.ComponentModel.Design.DisplayMode.Ansi&quot; /&gt; or &lt;see cref=&quot;F:System.ComponentModel.Design.DisplayMode.Unicode&quot; /&gt; display mode.">Modalità che consente di selezionare automaticamente una modalità di visualizzazione. In questa modalità, si esaminano i byte per determinare se sono esadecimali o stampabili. Se sono in formato esadecimale, viene selezionata la modalità <see cref="F:System.ComponentModel.Design.DisplayMode.Hexdump" />, mentre se i caratteri corrispondono a un set di caratteri stampabili, viene eseguito un test per selezionare automaticamente la modalità di visualizzazione <see cref="F:System.ComponentModel.Design.DisplayMode.Ansi" /> o <see cref="F:System.ComponentModel.Design.DisplayMode.Unicode" />.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DisplayMode.Hexdump">
      <summary vsli:raw="A hexadecimal format display.">Visualizzazione in formato esadecimale.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DisplayMode.Unicode">
      <summary vsli:raw="A Unicode format display.">Visualizzazione in formato Unicode.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.EventBindingService">
      <summary vsli:raw="A default implementation of the &lt;see cref=&quot;T:System.ComponentModel.Design.IEventBindingService&quot; /&gt; interface.">Implementazione predefinita dell'interfaccia <see cref="T:System.ComponentModel.Design.IEventBindingService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.#ctor(System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.EventBindingService&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.EventBindingService" />.</summary>
      <param name="provider" vsli:raw="The service provider from which &lt;see cref=&quot;T:System.ComponentModel.Design.EventBindingService&quot; /&gt; will query for services.">Il provider del servizio dal quale l'oggetto <see cref="T:System.ComponentModel.Design.EventBindingService" /> esegue la query per i servizi.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;provider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="provider" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
      <summary vsli:raw="Creates a unique method name.">Crea un nome di metodo univoco.</summary>
      <param name="component" vsli:raw="The component for which the method name will be created.">Componente per il quale viene creato il nome di metodo.</param>
      <param name="e" vsli:raw="The event to create a name for.">Evento per il quale creare un nome.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;component&quot; /&gt; or &lt;paramref name=&quot;e&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="component" /> o <paramref name="e" /> è <see langword="null" />.</exception>
      <returns vsli:raw="The unique method name.">Nome univoco di metodo.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.FreeMethod(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor,System.String)">
      <summary vsli:raw="Provides a notification that a particular method is no longer being used by an event handler.">Fornisce una notifica quando un determinato metodo non viene più utilizzato da un gestore eventi.</summary>
      <param name="component" vsli:raw="The component to which the method is bound.">Componente al quale è associato il metodo.</param>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; for the event handler.">Oggetto <see cref="T:System.ComponentModel.EventDescriptor" /> per il gestore eventi.</param>
      <param name="methodName" vsli:raw="The name of the method to be freed.">Nome del metodo da liberare.</param>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.GetCompatibleMethods(System.ComponentModel.EventDescriptor)">
      <summary vsli:raw="Returns a collection of names of compatible methods.">Restituisce un insieme di nomi di metodi compatibili.</summary>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; containing the compatible delegate.">Oggetto <see cref="T:System.ComponentModel.EventDescriptor" /> contenente il delegato compatibile.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;e&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="e" /> è <see langword="null" />.</exception>
      <returns vsli:raw="A collection of strings that are names of compatible methods.">Insieme di stringhe che rappresentano nomi di metodi compatibili.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.GetService(System.Type)">
      <summary vsli:raw="Gets the requested service from the service provider.">Ottiene il servizio richiesto dal provider del servizio.</summary>
      <param name="serviceType" vsli:raw="The type of service to retrieve.">Tipo di servizio da recuperare.</param>
      <returns vsli:raw="A reference to the service specified by &lt;paramref name=&quot;serviceType&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if the requested service is not available.">Riferimento al servizio specificato dall'oggetto <paramref name="serviceType" /> o dall'oggetto <see langword="null" /> se il servizio richiesto non è disponibile.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.ShowCode">
      <summary vsli:raw="Displays user code.">Visualizza il codice utente.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if it is possible to display the code; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se è possibile visualizzare il codice; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor,System.String)">
      <summary vsli:raw="Displays the user code for the specified method.">Visualizza il codice utente per il metodo specificato.</summary>
      <param name="component" vsli:raw="The component to which the method is bound.">Componente al quale è associato il metodo.</param>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; for the event handler.">Oggetto <see cref="T:System.ComponentModel.EventDescriptor" /> per il gestore eventi.</param>
      <param name="methodName" vsli:raw="The name of the method for which to display code.">Nome del metodo per il quale visualizzare il codice.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if it is possible to display the code; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se è possibile visualizzare il codice; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.ShowCode(System.Int32)">
      <summary vsli:raw="Displays the user code at the given line number.">Visualizza il codice utente del numero di riga indicato.</summary>
      <param name="lineNumber" vsli:raw="The line number to show.">Numero di riga da visualizzare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if it is possible to display the code; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se è possibile visualizzare il codice; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
      <summary vsli:raw="Creates a unique name for an event-handler method for the specified component and event.">Crea un nome univoco per un metodo di gestione degli eventi per il componente e l'evento specificati.</summary>
      <param name="component" vsli:raw="The component instance the event is connected to.">Istanza del componente alla quale è collegato l'evento.</param>
      <param name="e" vsli:raw="The event to create a name for.">Evento per il quale creare un nome.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;component&quot; /&gt; or &lt;paramref name=&quot;e&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="component" /> o <paramref name="e" /> è <see langword="null" />.</exception>
      <returns vsli:raw="The recommended name for the event-handler method for this event.">Nome consigliato per il metodo di gestione di questo evento.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetCompatibleMethods(System.ComponentModel.EventDescriptor)">
      <summary vsli:raw="Gets a collection of event-handler methods that have a method signature compatible with the specified event.">Ottiene un insieme di metodi di gestione degli eventi dotati di firme di metodo compatibili con l'evento specificato.</summary>
      <param name="e" vsli:raw="The event to get the compatible event-handler methods for.">Evento per il quale recuperare i metodi di gestione degli eventi compatibili.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;e&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="e" /> è <see langword="null" />.</exception>
      <returns vsli:raw="A collection of strings that are names of compatible methods.">Insieme di stringhe che rappresentano nomi di metodi compatibili.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetEvent(System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; for the event that the specified property descriptor represents, if it represents an event.">Ottiene un oggetto <see cref="T:System.ComponentModel.EventDescriptor" /> per l'evento rappresentato dal descrittore di proprietà specificato, se la proprietà rappresenta un evento.</summary>
      <param name="property" vsli:raw="The property that represents an event.">Proprietà che rappresenta un evento.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; for the event that the property represents, or &lt;see langword=&quot;null&quot; /&gt; if the property does not represent an event.">Oggetto <see cref="T:System.ComponentModel.EventDescriptor" /> per l'evento rappresentato dalla proprietà oppure <see langword="null" /> se la proprietà non rappresenta un evento.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetEventProperties(System.ComponentModel.EventDescriptorCollection)">
      <summary vsli:raw="Converts a set of event descriptors to a set of property descriptors.">Converte un gruppo di descrittori di evento in un gruppo di descrittori di proprietà.</summary>
      <param name="events" vsli:raw="The events to convert to properties.">Eventi da convertire in proprietà.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;events&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="events" /> è <see langword="null" />.</exception>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; objects that describe the event set.">Matrice di oggetti <see cref="T:System.ComponentModel.PropertyDescriptor" /> che descrivono l'insieme di eventi.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetEventProperty(System.ComponentModel.EventDescriptor)">
      <summary vsli:raw="Converts a single event descriptor to a property descriptor.">Converte un singolo descrittore di evento in un descrittore di proprietà.</summary>
      <param name="e" vsli:raw="The event to convert.">Evento da convertire.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;e&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="e" /> è <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptor&quot; /&gt; that describes the event.">Oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> che descrive l'evento.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode">
      <summary vsli:raw="Displays the user code for the designer.">Visualizza il codice utente per la finestra di progettazione.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the code is displayed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il codice viene visualizzato. <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
      <summary vsli:raw="Displays the user code for the specified event.">Visualizza il codice utente per l'evento specificato.</summary>
      <param name="component" vsli:raw="The component that the event is connected to.">Componente al quale è collegato l'evento.</param>
      <param name="e" vsli:raw="The event to display.">Evento da visualizzare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;events&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="events" /> è <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the code is displayed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il codice viene visualizzato. <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode(System.Int32)">
      <summary vsli:raw="Displays the user code for the designer at the specified line.">Visualizza il codice utente per la finestra di progettazione corrispondente alla riga specificata.</summary>
      <param name="lineNumber" vsli:raw="The line number to place the caret on.">Numero della riga su cui posizionare il carattere di accento circonflesso.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the code is displayed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il codice viene visualizzato. <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.UseMethod(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor,System.String)">
      <summary vsli:raw="Provides a notification that a particular method is being used by an event handler.">Indica con una notifica che un determinato metodo viene utilizzato da un gestore eventi.</summary>
      <param name="component" vsli:raw="The component to which the method is bound.">Componente al quale è associato il metodo.</param>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; for the event handler.">Oggetto <see cref="T:System.ComponentModel.EventDescriptor" /> per il gestore eventi.</param>
      <param name="methodName" vsli:raw="The name of the method.">Nome del metodo.</param>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.ValidateMethodName(System.String)">
      <summary vsli:raw="Validates that the provided method name is valid for the language or script being used.">Convalida la validità del nome di metodo fornito per il linguaggio o lo script utilizzato.</summary>
      <param name="methodName" vsli:raw="The method name to validate.">Nome del metodo da convalidare.</param>
    </member>
    <member name="T:System.ComponentModel.Design.ExceptionCollection">
      <summary vsli:raw="Represents the collection of exceptions.">Rappresenta l'insieme di eccezioni.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ExceptionCollection.#ctor(System.Collections.ArrayList)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.ExceptionCollection&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.ExceptionCollection" />.</summary>
      <param name="exceptions" vsli:raw="An array of type &lt;see cref=&quot;T:System.Exception&quot; /&gt;, containing the objects to populate the collection.">Matrice di tipo <see cref="T:System.Exception" />, contenente gli oggetti per popolare l'insieme.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ExceptionCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; with the data needed to serialize the &lt;see cref=&quot;T:System.ComponentModel.Design.ExceptionCollection&quot; /&gt;.">Popola l'oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con i dati necessari per serializzare l'oggetto <see cref="T:System.ComponentModel.Design.ExceptionCollection" />.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to populate with data.">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> da popolare con i dati.</param>
      <param name="context" vsli:raw="The destination (see &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;) for this serialization.">Destinazione della serializzazione (vedere <see cref="T:System.Runtime.Serialization.StreamingContext" />).</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.ExceptionCollection.Exceptions">
      <summary vsli:raw="Gets the array of &lt;see cref=&quot;T:System.Exception&quot; /&gt; objects that represent the collection of exceptions.">Ottiene la matrice di oggetti <see cref="T:System.Exception" /> che rappresentano l'insieme di eccezioni.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; array that represent the collection of exceptions.">Matrice di <see cref="T:System.Exception" /> che rappresenta l'insieme di eccezioni.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.IMultitargetHelperService">
      <summary vsli:raw="Defines multi-target type name resolution services in a design-time environment.">Definisce servizi di risoluzione dei nomi dei tipi per più destinazioni in un ambiente della fase di progettazione.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IMultitargetHelperService.GetAssemblyQualifiedName(System.Type)">
      <summary vsli:raw="Resolves a type for the target framework to an assembly-qualified name.">Risolve un tipo per il framework di destinazione in un nome completo di assembly.</summary>
      <param name="type" vsli:raw="The type to resolve.">Tipo da risolvere.</param>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Type.AssemblyQualifiedName&quot; /&gt; for &lt;paramref name=&quot;type&quot; /&gt; in the target framework.">
        <see cref="P:System.Type.AssemblyQualifiedName" /> per <paramref name="type" /> nel framework di destinazione.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.InheritanceService">
      <summary vsli:raw="Provides a set of methods for identifying inherited components.">Fornisce un insieme di metodi per l'identificazione di componenti ereditati.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.InheritanceService&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.InheritanceService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.ComponentModel.IComponent,System.ComponentModel.IContainer)">
      <summary vsli:raw="Adds the components inherited by the specified component to the &lt;see cref=&quot;T:System.ComponentModel.Design.InheritanceService&quot; /&gt;.">Aggiunge i componenti ereditati dal componente specificato a <see cref="T:System.ComponentModel.Design.InheritanceService" />.</summary>
      <param name="component" vsli:raw="The component to search for inherited components to add to the specified container.">Componente in cui cercare componenti ereditati da aggiungere al contenitore specificato.</param>
      <param name="container" vsli:raw="The container to add the inherited components to.">Contenitore a cui aggiungere i componenti ereditati.</param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.Type,System.ComponentModel.IComponent,System.ComponentModel.IContainer)">
      <summary vsli:raw="Adds the components of the specified type that are inherited by the specified component to the &lt;see cref=&quot;T:System.ComponentModel.Design.InheritanceService&quot; /&gt;.">Aggiunge i componenti del tipo specificato ereditati dal componente specificato a <see cref="T:System.ComponentModel.Design.InheritanceService" />.</summary>
      <param name="type" vsli:raw="The base type to search for.">Tipo base da cercare.</param>
      <param name="component" vsli:raw="The component to search for inherited components to add to the specified container.">Componente in cui cercare componenti ereditati da aggiungere al contenitore specificato.</param>
      <param name="container" vsli:raw="The container to add the inherited components to.">Contenitore a cui aggiungere i componenti ereditati.</param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.InheritanceService&quot; /&gt;.">Rilascia tutte le risorse usate da <see cref="T:System.ComponentModel.Design.InheritanceService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.InheritanceService&quot; /&gt; and optionally releases the managed resources.">Rilascia le risorse non gestite usate da <see cref="T:System.ComponentModel.Design.InheritanceService" /> e, facoltativamente, le risorse gestite.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.GetInheritanceAttribute(System.ComponentModel.IComponent)">
      <summary vsli:raw="Gets the inheritance attribute of the specified component.">Ottiene l'attributo di ereditarietà del componente specificato.</summary>
      <param name="component" vsli:raw="The component to retrieve the inheritance attribute for.">Componente per il quale recuperare l'attributo di ereditarietà.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.InheritanceAttribute&quot; /&gt; that describes the level of inheritance that this component comes from.">Oggetto <see cref="T:System.ComponentModel.InheritanceAttribute" /> che descrive il livello di ereditarietà da cui il componente deriva.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.IgnoreInheritedMember(System.Reflection.MemberInfo,System.ComponentModel.IComponent)">
      <summary vsli:raw="Indicates whether to ignore the specified member.">Indica se ignorare il membro specificato.</summary>
      <param name="member" vsli:raw="The member to check. This member is either a &lt;see cref=&quot;T:System.Reflection.FieldInfo&quot; /&gt; or a &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt;.">Membro da controllare. Questo membro è un oggetto <see cref="T:System.Reflection.FieldInfo" /> o un oggetto <see cref="T:System.Reflection.MethodInfo" />.</param>
      <param name="component" vsli:raw="The component instance this member is bound to.">Istanza del componente a cui il membro è associato.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified member should be included in the set of inherited components; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il membro specificato deve essere incluso nell'insieme di componenti ereditati; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.LoadedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurface.Loaded&quot; /&gt; event. This class cannot be inherited.">Fornisce dati per l'evento <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" />. La classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.LoadedEventArgs.#ctor(System.Boolean,System.Collections.ICollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.LoadedEventArgs&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.LoadedEventArgs" />.</summary>
      <param name="succeeded" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the designer load was successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per indicare che il caricamento della finestra di progettazione ha avuto esito positivo; in caso contrario, <see langword="false" />.</param>
      <param name="errors" vsli:raw="A collection of errors that occurred while the designer was loading.">Insieme di errori riscontrati durante il caricamento della finestra di progettazione.</param>
    </member>
    <member name="P:System.ComponentModel.Design.LoadedEventArgs.Errors">
      <summary vsli:raw="Gets a collection of errors that occurred while the designer was loading.">Ottiene l'insieme di errori riscontrati durante il caricamento della finestra di progettazione.</summary>
      <returns vsli:raw="A collection of errors that occurred while the designer was loading.">Insieme di errori riscontrati durante il caricamento della finestra di progettazione.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.LoadedEventArgs.HasSucceeded">
      <summary vsli:raw="Gets a value that indicates whether the designer load was successful.">Ottiene un valore che indica se il caricamento della finestra di progettazione ha avuto esito positivo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the designer load was successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il caricamento della finestra di progettazione ha avuto esito positivo; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.LoadedEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.ComponentModel.Design.DesignSurface.Loaded&quot; /&gt; event of the &lt;see cref=&quot;T:System.ComponentModel.Design.DesignSurface&quot; /&gt; class. This class cannot be inherited.">Rappresenta il metodo che gestirà l'evento <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /> della classe <see cref="T:System.ComponentModel.Design.DesignSurface" />. La classe non può essere ereditata.</summary>
      <param name="sender" vsli:raw="The source of the event.">Origine dell'evento.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.LoadedEventArgs&quot; /&gt; that contains the event data.">Oggetto <see cref="T:System.ComponentModel.Design.LoadedEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged&quot; /&gt; event.">Fornisce dati per l'evento <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandsChangedEventArgs.#ctor(System.ComponentModel.Design.MenuCommandsChangedType,System.ComponentModel.Design.MenuCommand)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommandsChangedEventArgs&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" />.</summary>
      <param name="changeType" vsli:raw="The type of change.">Tipo di modifica.</param>
      <param name="command" vsli:raw="The menu command.">Comando di menu.</param>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommandsChangedEventArgs.ChangeType">
      <summary vsli:raw="Gets the type of change that caused &lt;see cref=&quot;E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged&quot; /&gt; to be raised.">Ottiene il tipo di modifica che ha determinato la generazione dell'oggetto <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommandsChangedType&quot; /&gt; that caused &lt;see cref=&quot;E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged&quot; /&gt; to be raised.">Oggetto <see cref="T:System.ComponentModel.Design.MenuCommandsChangedType" /> che ha determinato la generazione dell'oggetto <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommandsChangedEventArgs.Command">
      <summary vsli:raw="Gets the command that was added, removed, or changed.">Ottiene il comando aggiunto, rimosso o modificato.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommand&quot; /&gt; that was added, removed, or changed.">Oggetto <see cref="T:System.ComponentModel.Design.MenuCommand" /> che è stato aggiunto, rimosso o modificato.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommandsChangedEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged&quot; /&gt; event of a &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommandService&quot; /&gt;. This class cannot be inherited.">Rappresenta il metodo che gestirà l'evento <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" /> di un oggetto <see cref="T:System.ComponentModel.Design.MenuCommandService" />. La classe non può essere ereditata.</summary>
      <param name="sender" vsli:raw="The source of the event.">Origine dell'evento.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommandsChangedEventArgs&quot; /&gt; that contains the event data.">Oggetto <see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommandsChangedType">
      <summary vsli:raw="Specifies the type of action that occurred to the related object's &lt;see cref=&quot;T:System.Windows.Forms.Design.MenuCommands&quot; /&gt; collection.">Specifica il tipo di azione verificatasi sull'insieme <see cref="T:System.Windows.Forms.Design.MenuCommands" /> dell'oggetto correlato.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.MenuCommandsChangedType.CommandAdded">
      <summary vsli:raw="Specifies that one or more command objects were added.">Specifica l'avvenuta aggiunta di uno o più oggetti Command.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.MenuCommandsChangedType.CommandChanged">
      <summary vsli:raw="Specifies that one or more commands have changed their status.">Specifica la modifica dello stato di uno o più comandi.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.MenuCommandsChangedType.CommandRemoved">
      <summary vsli:raw="Specifies that one or more commands were removed.">Specifica la rimozione di uno o più comandi.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommandService">
      <summary vsli:raw="Implements the &lt;see cref=&quot;T:System.ComponentModel.Design.IMenuCommandService&quot; /&gt; interface.">Implementa l'interfaccia <see cref="T:System.ComponentModel.Design.IMenuCommandService" />.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged">
      <summary vsli:raw="Occurs when the status of a menu command has changed.">Viene generato quando lo stato di un comando di menu viene modificato.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.#ctor(System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommandService&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</summary>
      <param name="serviceProvider" vsli:raw="The service provider that this service uses to obtain other services.">Il provider di servizi utilizzato da questo servizio per ottenere gli altri servizi.</param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)">
      <summary vsli:raw="Adds a command handler to the menu command service.">Aggiunge un gestore di comandi al servizio dei comandi di menu.</summary>
      <param name="command" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommand&quot; /&gt; to add.">Oggetto <see cref="T:System.ComponentModel.Design.MenuCommand" /> da aggiungere.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;command&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="command" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="A command handler &lt;paramref name=&quot;command&quot; /&gt; already exists.">Un gestore di comandi <paramref name="command" /> è già esistente.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)">
      <summary vsli:raw="Adds a verb to the verb table of the &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommandService&quot; /&gt;.">Aggiunge un verbo alla tabella dei verbi dell'oggetto <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</summary>
      <param name="verb" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerVerb&quot; /&gt; to add.">Oggetto <see cref="T:System.ComponentModel.Design.DesignerVerb" /> da aggiungere.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;verb&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="verb" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommandService&quot; /&gt;.">Rilascia tutte le risorse usate da <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.Dispose(System.Boolean)">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommandService&quot; /&gt;.">Rilascia tutte le risorse usate da <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.EnsureVerbs">
      <summary vsli:raw="Ensures that the verb list has been created.">Assicura che l'elenco dei verbi sia stato creato.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)">
      <summary vsli:raw="Searches for the &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommand&quot; /&gt; associated with the given command ID.">Ricerca l'oggetto <see cref="T:System.ComponentModel.Design.MenuCommand" /> associato all'ID comando indicato.</summary>
      <param name="commandID" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; to find.">
        <see cref="T:System.ComponentModel.Design.CommandID" /> da trovare.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommand&quot; /&gt; associated with the given command; otherwise, &lt;see langword=&quot;null&quot; /&gt; if the command is not found.">L'oggetto <see cref="T:System.ComponentModel.Design.MenuCommand" /> associato al comando indicato; in caso contrario, <see langword="null" /> se non è possibile trovare il comando.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.Guid,System.Int32)">
      <summary vsli:raw="Searches for the &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommand&quot; /&gt; associated with the given command.">Ricerca l'oggetto <see cref="T:System.ComponentModel.Design.MenuCommand" /> associato al comando indicato.</summary>
      <param name="guid" vsli:raw="The GUID of the command.">GUID del comando.</param>
      <param name="id" vsli:raw="The ID of the command.">ID del comando.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommand&quot; /&gt; associated with the given command; otherwise, &lt;see langword=&quot;null&quot; /&gt; if the command is not found.">L'oggetto <see cref="T:System.ComponentModel.Design.MenuCommand" /> associato al comando indicato; in caso contrario, <see langword="null" /> se non è possibile trovare il comando.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.GetCommandList(System.Guid)">
      <summary vsli:raw="Gets the command list for a given GUID.">Ottiene l'elenco dei comandi per un determinato GUID.</summary>
      <param name="guid" vsli:raw="The GUID of the command list.">GUID dell'elenco di comandi.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; of commands.">Un <see cref="T:System.Collections.ICollection" /> di comandi.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.GetService(System.Type)">
      <summary vsli:raw="Gets a reference to the requested service.">Ottiene un riferimento al servizio richiesto.</summary>
      <param name="serviceType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the service to retrieve.">Oggetto <see cref="T:System.Type" /> del servizio da recuperare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serviceType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serviceType" /> è <see langword="null" />.</exception>
      <returns vsli:raw="A reference to &lt;paramref name=&quot;serviceType&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt; if the service is not found.">Riferimento a <paramref name="serviceType" />; in caso contrario, <see langword="null" /> se non è possibile trovare il servizio.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)">
      <summary vsli:raw="Invokes the given command on the local form or in the global environment.">Richiama il comando indicato sul form locale o nell'ambiente globale.</summary>
      <param name="commandID" vsli:raw="The command to invoke.">Comando da richiamare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the command was found; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, se il comando è stato trovato, <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID,System.Object)">
      <summary vsli:raw="Invokes the given command with the given parameter on the local form or in the global environment.">Richiama il comando indicato con il parametro indicato sul form locale o nell'ambiente globale.</summary>
      <param name="commandId" vsli:raw="The command to invoke.">Comando da richiamare.</param>
      <param name="arg" vsli:raw="A parameter for the invocation.">Un parametro per la chiamata.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the command was found; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, se il comando è stato trovato, <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged&quot; /&gt; event.">Genera l'evento <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommandsChangedEventArgs&quot; /&gt; that contains the event data.">Oggetto <see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)">
      <summary vsli:raw="Removes the given menu command from the document.">Rimuove dal documento il comando di menu indicato.</summary>
      <param name="command" vsli:raw="The command to remove.">Comando da rimuovere.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;command&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="command" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)">
      <summary vsli:raw="Removes the given verb from the document.">Rimuove il verbo specificato dal documento.</summary>
      <param name="verb" vsli:raw="The verb to remove.">Il verbo da rimuovere.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;verb&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="verb" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)">
      <summary vsli:raw="Shows the shortcut menu with the given command ID at the given location.">Mostra il menu di scelta rapida con l'ID comando indicato nella posizione indicata.</summary>
      <param name="menuID" vsli:raw="The shortcut menu to display.">Il menu di scelta rapida da visualizzare.</param>
      <param name="x" vsli:raw="The x-coordinate of the shortcut menu's location.">La coordinata x della posizione del menu di scelta rapida.</param>
      <param name="y" vsli:raw="The y-coordinate of the shortcut menu's location.">La coordinata y della posizione del menu di scelta rapida.</param>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommandService.Verbs">
      <summary vsli:raw="Gets a collection of the designer verbs that are currently available.">Ottiene un insieme dei verbi di progettazione attualmente disponibili.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerVerbCollection&quot; /&gt; of the designer verbs that are currently available.">Oggetto <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> dei verbi di progettazione attualmente disponibili.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.MultilineStringEditor">
      <summary vsli:raw="Displays a dialog for editing multi-line strings in design mode.">Consente di visualizzare una finestra di dialogo per la modifica di stringhe di più righe in modalità progettazione.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.MultilineStringEditor&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.MultilineStringEditor" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the specified object value using the edit style provided by &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)&quot;&gt;&lt;/xref&gt;.">Modifica il valore dell'oggetto specificato utilizzando lo stile dell'editor fornito da <see cref="M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che può essere usato per ottenere ulteriori informazioni sul contesto.</param>
      <param name="provider" vsli:raw="A service provider object through which editing services can be obtained.">Un oggetto provider di servizi tramite il quale è possibile ottenere i servizi di modifica.</param>
      <param name="value" vsli:raw="An instance of the value being edited.">Istanza del valore in corso di modifica.</param>
      <returns vsli:raw="The new value of the object. If the value of the object has not changed, this method should return the same object passed to it.">Nuovo valore dell'oggetto. Se il valore dell’oggetto non è stato modificato, questo metodo dovrà restituire lo stesso oggetto che gli è stato passato.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editing style of the &lt;see cref=&quot;M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot; /&gt; method.">Ottiene lo stile di modifica del metodo <see cref="M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che può essere usato per ottenere ulteriori informazioni sul contesto.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditorEditStyle&quot; /&gt; enumeration value indicating the supported editing style.">Un valore di enumerazione di <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> che indica lo stile di modifica supportato.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets a value indicating whether this editor supports painting a representation of an object's value.">Ottiene un valore che indica se questo editor supporta la rappresentazione grafica del valore di un oggetto.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che può essere usato per ottenere ulteriori informazioni sul contesto.</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt;, indicating that this &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditor&quot; /&gt; does not display a visual representation in the Properties Window.">
        <see langword="false" />, che indica che questo oggetto <see cref="T:System.Drawing.Design.UITypeEditor" /> non visualizza una rappresentazione visiva nella finestra delle proprietà.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ObjectSelectorEditor">
      <summary vsli:raw="Implements the basic functionality that can be used to design value editors. These editors can, in turn, provide a user interface for representing and editing the values of objects of the supported data types.">Implementa la funzionalità di base utilizzabile per progettare gli editor dei valori. Tali editor possono, a loro volta, fornire un'interfaccia utente per la rappresentazione e la modifica dei valori degli oggetti dei tipi di dati supportati.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.currValue">
      <summary vsli:raw="Represents the current value of &lt;see cref=&quot;T:System.ComponentModel.Design.ObjectSelectorEditor&quot; /&gt;.">Rappresenta il valore corrente dell'oggetto <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" />.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.prevValue">
      <summary vsli:raw="Represents the previous value of &lt;see cref=&quot;T:System.ComponentModel.Design.ObjectSelectorEditor&quot; /&gt;.">Rappresenta il valore precedente dell'oggetto <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" />.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.SubObjectSelector">
      <summary vsli:raw="Controls whether or not the nodes within the hierarchical collection of labeled items are accessible.">Controlla la possibilità di accesso ai nodi dell'insieme gerarchico degli elementi con etichetta.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.ObjectSelectorEditor&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.ObjectSelectorEditor&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" />.</summary>
      <param name="subObjectSelector" vsli:raw="The specified sub-object selector value.">Valore del selettore dell'oggetto secondario specificato.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.ApplyTreeViewThemeStyles(System.Windows.Forms.TreeView)">
      <summary vsli:raw="Modify a Windows Forms &lt;see cref=&quot;T:System.Windows.Forms.TreeView&quot; /&gt; control to use the new Explorer style theme.">Modificare un <see cref="T:System.Windows.Forms.TreeView" /> controllo Windows Forms per usare il  nuovo tema stile di Esplora risorse.</summary>
      <param name="treeView" vsli:raw="The tree view control to modify.">Il controllo di visualizzazione albero da modificare.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the value of the specified object using the editor style indicated by &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.Design.ObjectSelectorEditor.GetEditStyle*&quot;&gt;&lt;/xref&gt;.">Modifica il valore dell'oggetto specificato utilizzando lo stile dell'editor indicato dal metodo <see cref="Overload:System.ComponentModel.Design.ObjectSelectorEditor.GetEditStyle" />.</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che può essere usato per ottenere ulteriori informazioni sul contesto.</param>
      <param name="provider" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.IServiceProvider&quot;&gt;&lt;/xref&gt; that this editor can use to obtain services.">Oggetto <see cref="T:System.IServiceProvider" /> che l'editor può usare per ottenere i servizi.</param>
      <param name="value" vsli:raw="The object to edit.">Oggetto da modificare.</param>
      <returns vsli:raw="The new value of the object. If the value of the object has not changed, the method should return the same object it was passed.">Nuovo valore dell'oggetto. Se il valore dell’oggetto non è stato modificato, questo metodo dovrà restituire lo stesso oggetto che gli è stato passato.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.EqualsToValue(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Determina se l'oggetto <see cref="T:System.Object" /> specificato è uguale all'oggetto <see cref="T:System.Object" /> corrente.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare with the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Oggetto <see cref="T:System.Object" /> da confrontare con l'oggetto <see cref="T:System.Object" /> corrente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Object&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Object" /> specificato è uguale all'oggetto <see cref="T:System.Object" /> corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.FillTreeWithData(System.ComponentModel.Design.ObjectSelectorEditor.Selector,System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider)">
      <summary vsli:raw="Fills a hierarchical collection of labeled items, with each item represented by a &lt;see cref=&quot;T:System.Windows.Forms.TreeNode&quot; /&gt;.">Compila un insieme gerarchico di elementi con etichetta, ciascuno dei quali rappresentato da un oggetto <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
      <param name="selector" vsli:raw="A hierarchical collection of labeled items.">Insieme gerarchico di elementi con etichetta.</param>
      <param name="context" vsli:raw="The context information for a component.">Informazioni contestuali per un componente.</param>
      <param name="provider" vsli:raw="The &lt;see cref=&quot;M:System.IServiceProvider.GetService(System.Type)&quot; /&gt; method of this interface that obtains the object that provides the service.">Metodo <see cref="M:System.IServiceProvider.GetService(System.Type)" /> di questa interfaccia mediante il quale è possibile ottenere l'oggetto che fornisce tale servizio.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editor style used by the &lt;see cref=&quot;Overload:System.ComponentModel.Design.ObjectSelectorEditor.EditValue&quot; /&gt; method.">Ottiene lo stile dell'editor usato dal metodo <see cref="Overload:System.ComponentModel.Design.ObjectSelectorEditor.EditValue" />.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che può essere usato per ottenere ulteriori informazioni sul contesto.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditorEditStyle&quot; /&gt; value that indicates the style of editor used by &lt;see cref=&quot;Overload:System.ComponentModel.Design.ObjectSelectorEditor.EditValue&quot; /&gt;.">Valore <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> che indica lo stile dell'editor utilizzato dal metodo <see cref="Overload:System.ComponentModel.Design.ObjectSelectorEditor.EditValue" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.SetValue(System.Object)">
      <summary vsli:raw="Sets the current &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.Design.ObjectSelectorEditor&quot;&gt;&lt;/xref&gt; to the specified value.">Imposta l'oggetto <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" /> corrente sul valore specificato.</summary>
      <param name="value" vsli:raw="The specified value.">Valore specificato.</param>
    </member>
    <member name="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector">
      <summary vsli:raw="Displays a hierarchical collection of labeled items, each represented by a &lt;see cref=&quot;T:System.Windows.Forms.TreeNode&quot; /&gt;.">Visualizza un insieme gerarchico di elementi con etichetta, ciascuno dei quali rappresentato da un oggetto <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.Selector.clickSeen">
      <summary vsli:raw="This field is for internal use only.">Questo campo è solo per uso interno.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.#ctor(System.ComponentModel.Design.ObjectSelectorEditor)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.ObjectSelectorEditor.Selector&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector" />.</summary>
      <param name="editor" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.ObjectSelectorEditor&quot; /&gt;.">Oggetto <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.AddNode(System.String,System.Object,System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode)">
      <summary vsli:raw="Adds a new tree node to the collection.">Aggiunge un nuovo nodo della struttura ad albero all'insieme.</summary>
      <param name="label" vsli:raw="The label for the node.">Etichetta per il nodo.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the value for the node.">Oggetto <see cref="T:System.Object" /> che rappresenta il valore per il nodo.</param>
      <param name="parent" vsli:raw="The parent of the node.">Elemento padre del nodo.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode&quot; /&gt; added to the collection.">Oggetto <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode" /> aggiunto all'insieme.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Clear">
      <summary vsli:raw="Removes all tree nodes from the collection.">Rimuove tutti i nodi della struttura ad albero dall'insieme.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnAfterSelect(System.Object,System.Windows.Forms.TreeViewEventArgs)">
      <summary vsli:raw="Occurs after the tree node is selected.">Si verifica dopo aver selezionato il nodo dell'albero.</summary>
      <param name="sender" vsli:raw="The source of an event.">Origine di un evento.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.TreeViewEventArgs&quot; /&gt; that contains the event data.">Oggetto <see cref="T:System.Windows.Forms.TreeViewEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary vsli:raw="Occurs when a key is pressed while the control has focus.">Si verifica quando si preme un tasto mentre il controllo ha lo stato attivo.</summary>
      <param name="e" vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Windows.Forms.Control.KeyDown&quot; /&gt; event.">Fornisce dati per l'evento <see cref="E:System.Windows.Forms.Control.KeyDown" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary vsli:raw="Occurs when a key is pressed while the control has focus.">Si verifica quando si preme un tasto mentre il controllo ha lo stato attivo.</summary>
      <param name="e" vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Windows.Forms.Control.KeyPress&quot; /&gt; event.">Fornisce dati per l'evento <see cref="E:System.Windows.Forms.Control.KeyPress" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnNodeMouseClick(System.Windows.Forms.TreeNodeMouseClickEventArgs)">
      <summary vsli:raw="Occurs when the mouse pointer is over the control and a mouse button is clicked.">Viene generato quando il puntatore del mouse si trova sul controllo mentre viene premuto un pulsante del mouse.</summary>
      <param name="e" vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Windows.Forms.Control.MouseUp&quot; /&gt;, &lt;see cref=&quot;E:System.Windows.Forms.Control.MouseDown&quot; /&gt;, and &lt;see cref=&quot;E:System.Windows.Forms.Control.MouseMove&quot; /&gt; events.">Fornisce dati per gli eventi <see cref="E:System.Windows.Forms.Control.MouseUp" />, <see cref="E:System.Windows.Forms.Control.MouseDown" /> e <see cref="E:System.Windows.Forms.Control.MouseMove" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.SetSelection(System.Object,System.Windows.Forms.TreeNodeCollection)">
      <summary vsli:raw="Sets the collection nodes to a specific value.">Imposta i nodi dell'insieme su un valore specifico.</summary>
      <param name="value" vsli:raw="The value to be set.">Valore da impostare.</param>
      <param name="nodes" vsli:raw="The nodes collection.">Insieme di nodi.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection nodes were set; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se i nodi dell'insieme sono stati impostati; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Start(System.Windows.Forms.Design.IWindowsFormsEditorService,System.Object)">
      <summary vsli:raw="Initializes the editor service.">Inizializza il servizio editor.</summary>
      <param name="edSvc" vsli:raw="The editor service.">Servizio editor.</param>
      <param name="value" vsli:raw="The value to be set.">Valore da impostare.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Stop">
      <summary vsli:raw="Removes the editor service.">Rimuove il servizio editor.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.WndProc(System.Windows.Forms.Message@)">
      <summary vsli:raw="Processes Windows messages.">Elabora i messaggi di Windows.</summary>
      <param name="m" vsli:raw="The Windows &lt;see cref=&quot;T:System.Windows.Forms.Message&quot; /&gt; to process.">Oggetto <see cref="T:System.Windows.Forms.Message" /> di Windows da elaborare.</param>
    </member>
    <member name="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode">
      <summary vsli:raw="Represents a node of a &lt;see cref=&quot;T:System.Windows.Forms.TreeView&quot; /&gt;.">Rappresenta un nodo di un controllo <see cref="T:System.Windows.Forms.TreeView" />.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode.value">
      <summary vsli:raw="Represents the value for the node.">Rappresenta il valore per il nodo.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode.#ctor(System.String,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode" />.</summary>
      <param name="label" vsli:raw="The label for the node.">Etichetta per il nodo.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the value for the node.">Oggetto <see cref="T:System.Object" /> che rappresenta il valore per il nodo.</param>
    </member>
    <member name="T:System.ComponentModel.Design.ProjectTargetFrameworkAttribute">
      <summary vsli:raw="Specifies the target framework for a project.">Specifica il framework di destinazione per un progetto.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ProjectTargetFrameworkAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.ProjectTargetFrameworkAttribute&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.ProjectTargetFrameworkAttribute" />.</summary>
      <param name="targetFrameworkMoniker" vsli:raw="The target framework for the project.">Framework di destinazione per il progetto.</param>
    </member>
    <member name="P:System.ComponentModel.Design.ProjectTargetFrameworkAttribute.TargetFrameworkMoniker">
      <summary vsli:raw="Gets the target framework for the project.">Ottiene il framework di destinazione per il progetto.</summary>
      <returns vsli:raw="The target framework for the project.">Framework di destinazione per il progetto.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader">
      <summary vsli:raw="Provides an implementation of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderService&quot; /&gt; interface.">Fornisce un'implementazione dell'interfaccia <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.BasicDesignerLoader&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)">
      <summary vsli:raw="Starts the loading process.">Avvia il processo di caricamento.</summary>
      <param name="host" vsli:raw="The designer loader host to load.">Host del caricatore della finestra di progettazione da caricare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;host&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="host" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The designer is already loaded, or &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)&quot; /&gt; has been called with a different designer loader host.">La finestra di progettazione è già caricata o <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" /> è stato chiamato con un diverso host del caricatore della finestra di progettazione.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="&lt;paramref name=&quot;host&quot; /&gt; has been disposed.">
        <paramref name="host" /> è stato eliminato.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose">
      <summary vsli:raw="Releases the resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.BasicDesignerLoader&quot; /&gt;.">Rilascia le risorse usate da <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.EnableComponentNotification(System.Boolean)">
      <summary vsli:raw="Enables or disables component notification with the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.DesignerLoader&quot; /&gt;.">Attiva o disabilita la notifica relativa ai componenti con la classe <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />.</summary>
      <param name="enable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to enable component notification by the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.DesignerLoader&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; to disable component notification by the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.DesignerLoader&quot; /&gt;.">
        <see langword="true" /> per attivare la notifica relativa ai componenti con la classe <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />; <see langword="false" /> per disabilitare la notifica relativa ai componenti con la classe <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component notification was enabled prior to this call; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la notifica relativa ai componenti è stata attivata prima di questa chiamata; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush">
      <summary vsli:raw="Flushes pending changes to the designer loader.">Scarica le modifiche in sospeso nel caricatore della finestra di progettazione.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.GetService(System.Type)">
      <summary vsli:raw="Gets the requested service.">Ottiene il servizio richiesto.</summary>
      <param name="serviceType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the service.">Classe <see cref="T:System.Type" /> del servizio.</param>
      <returns vsli:raw="The requested service, or &lt;see langword=&quot;null&quot; /&gt; if the requested service cannot be found.">Il servizio richiesto o <see langword="null" /> se non è possibile trovare il servizio richiesto.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize">
      <summary vsli:raw="Initializes services.">Inizializza i servizi.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has not been initialized.">L'interfaccia <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> non è stata inizializzata.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has been disposed.">L'interfaccia <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> è stata eliminata.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded">
      <summary vsli:raw="Indicates whether the designer should be reloaded.">Indica se la finestra di progettazione deve essere ricaricata.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the designer should be reloaded; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default implementation always returns &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> se la finestra di progettazione deve essere ricaricata; in caso contrario, <see langword="false" />. L'implementazione predefinita restituisce sempre <see langword="true" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad">
      <summary vsli:raw="Notifies the designer loader that loading is about to begin.">Notifica al caricatore della finestra di progettazione che sta per iniziare il caricamento.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload">
      <summary vsli:raw="Notifies the designer loader that unloading is about to begin.">Notifica al caricatore della finestra di progettazione che sta per iniziare lo scaricamento.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)">
      <summary vsli:raw="Notifies the designer loader that loading is complete.">Notifica al caricatore della finestra di progettazione che il caricamento è stato completato.</summary>
      <param name="successful" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the load completed successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il caricamento è stato completato; in caso contrario, <see langword="false" />.</param>
      <param name="errors" vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; containing objects (usually exceptions) that were reported as errors.">Interfaccia <see cref="T:System.Collections.ICollection" /> contenente oggetti, in genere eccezioni, segnalati come errori.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has not been initialized.">L'interfaccia <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> non è stata inizializzata.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has been disposed.">L'interfaccia <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> è stata eliminata.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying">
      <summary vsli:raw="Notifies the designer loader that the state of the document is about to be modified.">Notifica al caricatore della finestra di progettazione che lo stato del documento sta per essere modificato.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary vsli:raw="Flushes all changes to the designer.">Scarica tutte le modifiche nella finestra di progettazione.</summary>
      <param name="serializationManager" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for persisting the state of loaded designers.">Interfaccia <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da utilizzare per mantenere lo stato delle finestre di progettazione caricate.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary vsli:raw="Loads a designer from persistence.">Carica una finestra di progettazione dalla persistenza.</summary>
      <param name="serializationManager" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for loading state for the designers.">Interfaccia <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da utilizzare per caricare lo stato delle finestre di progettazione.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)">
      <summary vsli:raw="Queues a reload of the designer.">Accoda un ricaricamento della finestra di progettazione.</summary>
      <param name="flags" vsli:raw="A bitwise combination of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions&quot; /&gt; values.">Combinazione bit per bit dei valori di <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors(System.Collections.ICollection)">
      <summary vsli:raw="Reports errors that occurred while flushing changes.">Segnala gli errori verificatisi durante lo scaricamento delle modifiche.</summary>
      <param name="errors" vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; containing error objects, usually exceptions.">Interfaccia <see cref="T:System.Collections.ICollection" /> contenente oggetti di errore, in genere eccezioni.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="One or more errors occurred while flushing changes.">Uno o più errori verificatisi durante lo scaricamento delle modifiche.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName(System.String)">
      <summary vsli:raw="Sets the full class name of the base component.">Imposta il nome completo della classe del componente di base.</summary>
      <param name="name" vsli:raw="A string representing the full name of the component to be designed.">Stringa che rappresenta il nome completo del componente da progettare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency">
      <summary vsli:raw="Registers an external component as part of the load process managed by &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderService&quot; /&gt;.">Registra un componente esterno come parte del processo di caricamento gestito da <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has not been initialized.">L'interfaccia <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> non è stata inizializzata.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#DependentLoadComplete(System.Boolean,System.Collections.ICollection)">
      <summary vsli:raw="Signals that a dependent load has finished.">Segnala che un caricamento dipendente è terminato.</summary>
      <param name="successful" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to load successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per caricare correttamente; in caso contrario, <see langword="false" />.</param>
      <param name="errorCollection" vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; containing errors that occurred during the load.">Interfaccia <see cref="T:System.Collections.ICollection" /> contenente gli errori verificatisi durante il caricamento.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No load dependencies have been added by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency&quot; /&gt;, or the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has not been initialized.">Non sono state aggiunte dipendenze del caricamento con il metodo <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency" /> o l'interfaccia <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> non è stata inizializzata.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has been disposed.">L'interfaccia <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> è stata eliminata.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#Reload">
      <summary vsli:raw="Reloads the design document.">Ricarica il documento di progettazione.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reload request is accepted; &lt;see langword=&quot;false&quot; /&gt; if the loader does not allow the reload.">
        <see langword="true" /> se la richiesta di ricaricamento viene accettata; <see langword="false" /> se il caricatore non consente il ricaricamento.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost">
      <summary vsli:raw="Gets the loader host.">Ottiene l'host del caricatore.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has not been initialized.">L'interfaccia <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> non è stata inizializzata.</exception>
      <exception cref="T:System.ObjectDisposedException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has been disposed.">L'interfaccia <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> è stata eliminata.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; that was passed to the &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)&quot; /&gt; method.">Interfaccia <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> passata al metodo <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Loading">
      <summary vsli:raw="Gets a value indicating whether the designer loader is loading the design surface.">Ottiene un valore che indica se il caricatore della finestra di progettazione sta caricando l'area di progettazione.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the designer loader is currently loading the design surface; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il caricatore della finestra di progettazione sta attualmente caricando l'area di progettazione; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified">
      <summary vsli:raw="Gets or sets a value indicating whether the designer has been modified.">Ottiene o imposta un valore che indica se la finestra di progettazione è stata modificata.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the designer has been modified; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la finestra di progettazione è stata modificata; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PropertyProvider">
      <summary vsli:raw="Gets or sets the property provider for the serialization manager being used by the loader.">Ottiene o imposta il provider di proprietà per il gestore della serializzazione utilizzato dal caricatore.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has not been initialized.">L'interfaccia <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> non è stata inizializzata.</exception>
      <returns vsli:raw="An object whose properties are to be provided to the serialization manager.">Oggetto le cui proprietà devono essere fornite al gestore della serializzazione.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadPending">
      <summary vsli:raw="Gets a value indicating whether a reload has been queued.">Ottiene un valore che indica se è stato accodato un ricaricamento.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if a call to &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)&quot; /&gt; has queued a reload request; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se una chiamata a <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)" /> ha accodato una richiesta di ricaricamento; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions">
      <summary vsli:raw="Defines the behavior of the &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)&quot; /&gt; method. These flags can be combined using the bitwise &lt;see langword=&quot;OR&quot; /&gt; operator.">Definisce il comportamento del metodo <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)" />. Questi flag possono essere combinati con l'operatore <see langword="OR" /> bit per bit.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions.Default">
      <summary vsli:raw="The designer loader flushes changes before reloading, but it does not force a reload, and it also does not set the &lt;see cref=&quot;P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified&quot; /&gt; property to &lt;see langword=&quot;true&quot; /&gt; if load errors occur.">Il caricatore della finestra di progettazione scarica le modifiche prima di ricaricare, ma non impone un ricaricamento e inoltre non imposta la proprietà <see cref="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified" /> su <see langword="true" /> se si verificano errori di caricamento.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions.Force">
      <summary vsli:raw="The designer loader forces the reload to occur. Normally, a reload occurs only if the &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded&quot; /&gt; method returns &lt;see langword=&quot;true&quot; /&gt;. This flag bypasses calling this method and always performs the reload.">Il caricatore della finestra di progettazione impone l'esecuzione del ricaricamento. In genere un ricaricamento si verifica solo se il metodo <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded" /> restituisce <see langword="true" />. Questo flag ignora la chiamata a questo metodo ed esegue sempre il ricaricamento.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions.ModifyOnError">
      <summary vsli:raw="The designer loader will set the &lt;see cref=&quot;P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified&quot; /&gt; property to &lt;see langword=&quot;true&quot; /&gt; if load errors occur. This flag is useful if you want a flush of the loader to overwrite persistent state that had errors.">Il caricatore della finestra di progettazione imposterà la proprietà <see cref="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified" /> su <see langword="true" /> se si verificano errori di caricamento. Questo flag è utile se si desidera uno svuotamento del caricatore per sovrascrivere uno stato persistente in cui erano presenti errori.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions.NoFlush">
      <summary vsli:raw="The designer loader abandons any changes before reloading.">Il caricatore della finestra di progettazione annulla tutte le modifiche prima del ricaricamento.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService">
      <summary vsli:raw="Serializes a set of components into a serialization store.">Serializza un insieme di componenti in un archivio di serializzazione.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.#ctor(System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService&quot; /&gt; class using the given service provider to resolve services.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService" /> con il provider di servizi dato per risolvere i servizi.</summary>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; to use for resolving services.">Interfaccia <see cref="T:System.IServiceProvider" /> da utilizzare per la risoluzione dei servizi.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt;.">Crea un nuovo oggetto <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</summary>
      <returns vsli:raw="A new serialization store.">Nuovo archivio di serializzazione.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore)">
      <summary vsli:raw="Deserializes the given store to produce a collection of objects.">Deserializza l'archivio dato per produrre un insieme di oggetti.</summary>
      <param name="store" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; from which objects will be deserialized.">Classe <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> da cui verranno deserializzati gli oggetti.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="store" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is not a supported type of serialization store. Use a store returned by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore&quot; /&gt;.">
        <paramref name="store" /> non è un tipo di archivio di serializzazione supportato. Usare un archivio restituito da <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
      <returns vsli:raw="A collection of deserialized components.">Insieme di componenti deserializzati.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)">
      <summary vsli:raw="Deserializes the given store and populates the given &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt; with deserialized &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects.">Deserializza l'archivio dato e compila l'interfaccia <see cref="T:System.ComponentModel.IContainer" /> data con oggetti <see cref="T:System.ComponentModel.IComponent" /> deserializzati.</summary>
      <param name="store" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; from which objects will be deserialized.">Classe <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> da cui verranno deserializzati gli oggetti.</param>
      <param name="container" vsli:raw="A container to which &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects will be added.">Contenitore a cui verranno aggiunti gli oggetti <see cref="T:System.ComponentModel.IComponent" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; or &lt;paramref name=&quot;container&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="store" /> o <paramref name="container" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is not a supported type of serialization store. Use a store returned by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore&quot; /&gt;.">
        <paramref name="store" /> non è un tipo di archivio di serializzazione supportato. Usare un archivio restituito da <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
      <returns vsli:raw="A collection of deserialized components.">Insieme di componenti deserializzati.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean,System.Boolean)">
      <summary vsli:raw="Deserializes the given &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; to the given container, optionally applying default property values.">Deserializza la classe <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> data nel contenitore dato, applicando eventualmente i valori di proprietà predefiniti.</summary>
      <param name="store" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; from which the objects will be deserialized.">
        <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> da cui verranno deserializzati gli oggetti.</param>
      <param name="container" vsli:raw="A container of objects to which data will be applied.">Contenitore di oggetti a cui verranno applicati i dati.</param>
      <param name="validateRecycledTypes" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to validate the recycled type; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per convalidare il tipo riciclato; in caso contrario, <see langword="false" />.</param>
      <param name="applyDefaults" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to apply default property values; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per applicare i valori di proprietà predefiniti; in caso contrario, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; or &lt;paramref name=&quot;container&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="store" /> o <paramref name="container" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is not a supported type of serialization store. Use a store returned by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore&quot; /&gt;.">
        <paramref name="store" /> non è un tipo di archivio di serializzazione supportato. Usare un archivio restituito da <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.LoadStore(System.IO.Stream)">
      <summary vsli:raw="Loads a &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; from the given stream.">Carica una classe <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> dal flusso dato.</summary>
      <param name="stream" vsli:raw="The stream from which to load the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt;.">Flusso da cui caricare la classe <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; supports seeking, but its length is 0.">
        <paramref name="stream" /> supporta la ricerca ma la sua lunghezza è 0.</exception>
      <returns vsli:raw="The loaded &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> caricato.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)">
      <summary vsli:raw="Serializes the given object to the given &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt;.">Serializza l'oggetto dato nella classe <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> data.</summary>
      <param name="store" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; to which &lt;paramref name=&quot;value&quot; /&gt; will be serialized.">
        <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> in cui verrà serializzato <paramref name="value" />.</param>
      <param name="value" vsli:raw="The object to serialize.">Oggetto da serializzare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="store" /> o <paramref name="value" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is closed, or &lt;paramref name=&quot;store&quot; /&gt; is not a supported type of serialization store. Use a store returned by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore&quot; /&gt;.">
        <paramref name="store" /> viene chiuso o <paramref name="store" /> non è un tipo di archivio di serializzazione supportato. Usare un archivio restituito da <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)">
      <summary vsli:raw="Serializes the given object, accounting for default property values.">Serializza l'oggetto dato, tenendo conto dei valori di proprietà predefiniti.</summary>
      <param name="store" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; to which &lt;paramref name=&quot;value&quot; /&gt; will be serialized.">
        <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> in cui verrà serializzato <paramref name="value" />.</param>
      <param name="value" vsli:raw="The object to serialize.">Oggetto da serializzare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="store" /> o <paramref name="value" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is closed, or &lt;paramref name=&quot;store&quot; /&gt; is not a supported type of serialization store. Use a store returned by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore&quot; /&gt;.">
        <paramref name="store" /> viene chiuso o <paramref name="store" /> non è un tipo di archivio di serializzazione supportato. Usare un archivio restituito da <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Serializes the given member on the given object.">Serializza il membro specificato sull'oggetto indicato.</summary>
      <param name="store" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; to which &lt;paramref name=&quot;member&quot; /&gt; will be serialized.">
        <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> in cui verrà serializzato <paramref name="member" />.</param>
      <param name="owningObject" vsli:raw="The object that owns the &lt;paramref name=&quot;member&quot; /&gt;.">Oggetto a cui appartiene <paramref name="member" />.</param>
      <param name="member" vsli:raw="The given member.">Membro specificato.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt;, &lt;paramref name=&quot;owningObject&quot; /&gt;, or &lt;paramref name=&quot;member&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="store" />, <paramref name="owningObject" /> o <paramref name="member" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is closed, or &lt;paramref name=&quot;store&quot; /&gt; is not a supported type of serialization store. Use a store returned by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore&quot; /&gt;.">
        <paramref name="store" /> viene chiuso o <paramref name="store" /> non è un tipo di archivio di serializzazione supportato. Usare un archivio restituito da <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Serializes the given member on the given object, but also serializes the member if it contains the default property value.">Serializza il membro specificato nell'oggetto indicato, ma serializza il membro anche se contiene il valore predefinito della proprietà.</summary>
      <param name="store" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt; to which &lt;paramref name=&quot;member&quot; /&gt; will be serialized.">
        <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> in cui verrà serializzato <paramref name="member" />.</param>
      <param name="owningObject" vsli:raw="The object that owns the &lt;paramref name=&quot;member&quot; /&gt;.">Oggetto a cui appartiene <paramref name="member" />.</param>
      <param name="member" vsli:raw="The given member.">Membro specificato.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt;, &lt;paramref name=&quot;owningObject&quot; /&gt;, or &lt;paramref name=&quot;member&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="store" />, <paramref name="owningObject" /> o <paramref name="member" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;paramref name=&quot;store&quot; /&gt; is closed, or &lt;paramref name=&quot;store&quot; /&gt; is not a supported type of serialization store. Use a store returned by &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore&quot; /&gt;.">
        <paramref name="store" /> viene chiuso o <paramref name="store" /> non è un tipo di archivio di serializzazione supportato. Usare un archivio restituito da <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader">
      <summary vsli:raw="Provides the base class for implementing a CodeDOM-based designer loader.">Fornisce la classe base per implementare un caricatore della finestra di progettazione basato su CodeDOM.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose">
      <summary vsli:raw="Releases the resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader&quot; /&gt; class.">Rilascia le risorse usate dalla classe <see cref="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Initialize">
      <summary vsli:raw="Initializes services.">Inizializza i servizi.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot; /&gt; has not been initialized, or the designer loader did not supply a type resolution service, which is required for CodeDom serialization.">L'interfaccia <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> non è stata inizializzata o il caricatore della finestra di progettazione non ha fornito un servizio di risoluzione del tipo, necessario per la serializzazione CodeDom.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.IsReloadNeeded">
      <summary vsli:raw="Returns a value indicating whether a reload is required.">Restituisce un valore che indica se è necessario un ricaricamento.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The language did not provide a code parser for this file; this file type may not support a designer.">Il linguaggio non dispone di un parser di codice per questo file; questo tipo di file potrebbe non supportare una finestra di progettazione.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The class can be designed, but it is not the first class in the file, or the designer could not be shown for this file because none of the classes within it can be designed.">La classe può essere progettata ma non è la prima classe nel file oppure è impossibile visualizzare la finestra di progettazione per il file, perché nessuna delle classi contenute può essere progettata.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider&quot; /&gt; decides a reload is required; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la proprietà <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" /> stabilisce che è necessario un ricaricamento; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginLoad">
      <summary vsli:raw="Notifies the designer loader that loading is about to begin.">Notifica al caricatore della finestra di progettazione che sta per iniziare il caricamento.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginUnload">
      <summary vsli:raw="Notifies the designer loader that unloading is about to begin.">Notifica al caricatore della finestra di progettazione che sta per iniziare lo scaricamento.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnComponentRename(System.Object,System.String,System.String)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentRename&quot; /&gt; event.">Genera l'evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" />.</summary>
      <param name="component" vsli:raw="The component to rename.">Componente da rinominare.</param>
      <param name="oldName" vsli:raw="The original name of the component.">Nome originale del componente.</param>
      <param name="newName" vsli:raw="The new name of the component.">Nuovo nome del componente.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)">
      <summary vsli:raw="Notifies the designer loader that loading is complete.">Notifica al caricatore della finestra di progettazione che il caricamento è stato completato.</summary>
      <param name="successful" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the load completed successfully; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per indicare che il caricamento è stato completato; in caso contrario, <see langword="false" />.</param>
      <param name="errors" vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; of objects (usually exceptions) that were reported as errors.">Interfaccia <see cref="T:System.Collections.ICollection" /> di oggetti, in genere eccezioni, segnalati come errori.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Parse">
      <summary vsli:raw="Parses the text or other persistent storage and returns a &lt;see cref=&quot;T:System.CodeDom.CodeCompileUnit&quot; /&gt;.">Analizza il testo o un altro archivio permanente e restituisce una classe <see cref="T:System.CodeDom.CodeCompileUnit" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeCompileUnit&quot; /&gt; resulting from a parse operation.">Classe <see cref="T:System.CodeDom.CodeCompileUnit" /> risultante da un'operazione di analisi.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary vsli:raw="Requests serialization of the root component of the designer.">Richiede la serializzazione del componente di primo livello della finestra di progettazione.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; from which to request the serializer.">Interfaccia <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da cui richiedere il serializzatore.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The language did not provide a code parser for this file; this file type may not support a designer.">Il linguaggio non dispone di un parser di codice per questo file; questo tipo di file potrebbe non supportare una finestra di progettazione.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The class can be designed, but it is not the first class in the file, or the designer could not be shown for this file because none of the classes within it can be designed.">La classe può essere progettata ma non è la prima classe nel file oppure è impossibile visualizzare la finestra di progettazione per il file, perché nessuna delle classi contenute può essere progettata.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary vsli:raw="Parses code from a CodeDOM provider.">Analizza il codice di un provider CodeDOM.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; from which to request the serializer.">Interfaccia <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da cui richiedere il serializzatore.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The language did not provide a code parser for this file; this file type may not support a designer.">Il linguaggio non dispone di un parser di codice per questo file; questo tipo di file potrebbe non supportare una finestra di progettazione.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The class can be designed, but it is not the first class in the file, or the designer could not be shown for this file because none of the classes within it can be designed.">La classe può essere progettata ma non è la prima classe nel file oppure è impossibile visualizzare la finestra di progettazione per il file, perché nessuna delle classi contenute può essere progettata.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerSerializationService#Deserialize(System.Object)">
      <summary vsli:raw="Deserializes the specified serialization data object and returns a collection of objects represented by that data.">Deserializza l'oggetto dati di serializzazione specificato e restituisce un insieme di oggetti rappresentato da tali dati.</summary>
      <param name="serializationData" vsli:raw="An object consisting of serialized data.">Oggetto costituito da dati serializzati.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;serializationData&quot; /&gt; is not a &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializationStore&quot; /&gt;.">
        <paramref name="serializationData" /> non è un oggetto <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</exception>
      <returns vsli:raw="A collection of objects represented by &lt;paramref name=&quot;serializationData&quot; /&gt;.">Insieme di oggetti rappresentati da <paramref name="serializationData" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerSerializationService#Serialize(System.Collections.ICollection)">
      <summary vsli:raw="Serializes the specified collection of objects and stores them in a serialization data object.">Serializza l'insieme specificato di oggetti e li memorizza in un oggetto dati di serializzazione.</summary>
      <param name="objects" vsli:raw="A collection of objects to serialize.">Insieme di oggetti da serializzare.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ComponentSerializationService&quot; /&gt; was not found.">
        <see cref="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" /> non trovato.</exception>
      <returns vsli:raw="An object that contains the serialized state of the specified collection of objects.">Oggetto che contiene lo stato serializzato dell'insieme specificato di oggetti.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#CreateName(System.ComponentModel.IContainer,System.Type)">
      <summary vsli:raw="Creates a new name that is unique to all components in the specified container.">Crea un nuovo nome univoco per tutti i componenti nel contenitore specificato.</summary>
      <param name="container" vsli:raw="The container where the new object is added.">Contenitore nel quale viene aggiunto il nuovo oggetto.</param>
      <param name="dataType" vsli:raw="The data type of the object that receives the name.">Tipo di dati dell'oggetto che riceve il nome.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dataType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dataType" /> è <see langword="null" />.</exception>
      <returns vsli:raw="A unique name for the data type.">Nome univoco per il tipo di dati.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#IsValidName(System.String)">
      <summary vsli:raw="Gets a value indicating whether the specified name is valid.">Ottiene un valore che indica se il nome specificato è valido.</summary>
      <param name="name" vsli:raw="The name to validate.">Nome da convalidare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> è <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the name is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il nome è valido; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#ValidateName(System.String)">
      <summary vsli:raw="Gets a value indicating whether the specified name is valid.">Ottiene un valore che indica se il nome specificato è valido.</summary>
      <param name="name" vsli:raw="The name to validate.">Nome da convalidare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is not a valid identifier, or there is already a component with the same name.">
        <paramref name="name" /> non è un identificatore valido o esiste già un componente con lo stesso nome.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write(System.CodeDom.CodeCompileUnit)">
      <summary vsli:raw="Writes compile-unit changes to persistent storage.">Scrive le modifiche dell'unità di compilazione in un archivio permanente.</summary>
      <param name="unit" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeCompileUnit&quot; /&gt; to be persisted.">Classe <see cref="T:System.CodeDom.CodeCompileUnit" /> da mantenere.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider">
      <summary vsli:raw="Gets the &lt;see cref=&quot;P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider&quot; /&gt; this designer loader will use.">Ottiene la proprietà <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" /> che verrà utilizzata da questo caricatore della finestra di progettazione.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider&quot; /&gt; this designer loader will use.">Proprietà <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" /> che verrà utilizzata da questo caricatore della finestra di progettazione.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.TypeResolutionService">
      <summary vsli:raw="Gets the type resolution service to be used with this designer loader.">Ottiene il servizio di risoluzione del tipo da utilizzare con questo caricatore della finestra di progettazione.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.Design.ITypeResolutionService&quot; /&gt; that the CodeDOM serializers will use when resolving types.">Interfaccia <see cref="T:System.ComponentModel.Design.ITypeResolutionService" /> che i serializzatori CodeDOM utilizzeranno durante la risoluzione dei tipi.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel">
      <summary vsli:raw="Determines the localization model to be used by the CodeDom resource adapter.">Determina il modello di localizzazione che deve essere utilizzato dall'adattatore di risorse CodeDom.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel.None">
      <summary vsli:raw="The localization provider should ignore localized properties. It will still write out resources for objects that do not support code generation and are serializable.">Il provider di localizzazione deve ignorare le proprietà localizzate. Verranno comunque scritte le risorse per gli oggetti che non supportano la generazione di codice e sono serializzabili.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel.PropertyAssignment">
      <summary vsli:raw="The localization provider will write out localized properties by assigning a resource to each property. This model is fast when the number of properties is small, but it scales poorly as the number of properties containing default values grows.">Il provider di localizzazione scriverà le proprietà localizzate assegnando una risorsa a ogni proprietà. Questo modello è veloce quando il numero di proprietà è basso ma le prestazioni vengono molto ridotte con l'aumentare del numero di proprietà contenenti valori predefiniti.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel.PropertyReflection">
      <summary vsli:raw="The localization provider will write localized property values into a resource file and use the &lt;see cref=&quot;T:System.ComponentModel.ComponentResourceManager&quot; /&gt; class to reflect on properties by name to fill them at runtime. This uses reflection at runtime so it can be slow, but it scales better for large numbers of properties with default values.">Il provider di localizzazione scriverà i valori delle proprietà localizzati in un file di risorse e utilizzerà la classe <see cref="T:System.ComponentModel.ComponentResourceManager" /> per eseguire una reflection sulle proprietà per nome per riempirle in fase di esecuzione. Questo modello utilizza la reflection in fase di esecuzione pertanto può essere lento ma presenta prestazioni migliori con l'aumentare del numero di proprietà con valori predefiniti.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider">
      <summary vsli:raw="Provides CodeDOM resource serialization services. This class cannot be inherited.">Fornisce i servizi di serializzazione delle risorse CodeDOM. La classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.#ctor(System.IServiceProvider,System.ComponentModel.Design.Serialization.CodeDomLocalizationModel)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider" />.</summary>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; used by the localization provider to add its extender properties.">Interfaccia <see cref="T:System.IServiceProvider" /> utilizzata dal provider di localizzazione per aggiungere le proprietà di estensione.</param>
      <param name="model" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel&quot; /&gt; value indicating the localization model to be used by the CodeDOM resource adapter.">Valore <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel" /> che indica il modello di localizzazione che deve essere utilizzato dall'adattatore di risorse CodeDOM.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.#ctor(System.IServiceProvider,System.ComponentModel.Design.Serialization.CodeDomLocalizationModel,System.Globalization.CultureInfo[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider" />.</summary>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; used by the localization provider to add its extender properties.">Interfaccia <see cref="T:System.IServiceProvider" /> utilizzata dal provider di localizzazione per aggiungere le proprietà di estensione.</param>
      <param name="model" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel&quot; /&gt; value indicating the localization model to be used by the CodeDOM resource adapter.">Valore <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel" /> che indica il modello di localizzazione che deve essere utilizzato dall'adattatore di risorse CodeDOM.</param>
      <param name="supportedCultures" vsli:raw="An array of cultures that this resource adapter should support.">Matrice di impostazioni cultura che deve essere supportata da questo adattatore di risorse.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider&quot; /&gt;.">Rilascia tutte le risorse usate da <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.System#ComponentModel#Design#Serialization#IDesignerSerializationProvider#GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Type,System.Type)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Type,System.Type)&quot; /&gt;.">Per una descrizione di questo membro, vedere <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Type,System.Type)" />.</summary>
      <param name="manager" vsli:raw="The serialization manager requesting the serializer.">Gestore della serializzazione che richiede il serializzatore.</param>
      <param name="currentSerializer" vsli:raw="An instance of the current serializer of the specified type. This can be &lt;see langword=&quot;null&quot; /&gt; if no serializer of the specified type exists.">Istanza del serializzatore corrente del tipo specificato. Può essere <see langword="null" /> se non esiste alcun serializzatore del tipo specificato.</param>
      <param name="objectType" vsli:raw="The data type of the object to serialize.">Tipo di dati dell'oggetto da serializzare.</param>
      <param name="serializerType" vsli:raw="The data type of the serializer to create.">Tipo di dati del serializzatore da creare.</param>
      <returns vsli:raw="An instance of a serializer of the type requested, or &lt;see langword=&quot;null&quot; /&gt; if the request cannot be satisfied.">Istanza di un serializzatore del tipo richiesto oppure <see langword="null" /> se non è possibile soddisfare la richiesta.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializer">
      <summary vsli:raw="Serializes an object graph to a series of CodeDOM statements. This class provides an abstract base class for a serializer.">Serializza un oggetto grafico in una serie di istruzioni CodeDOM. Questa classe fornisce una classe di base astratta per un serializzatore.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializer&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Deserializes the specified serialized CodeDOM object into an object.">Deserializza l'oggetto CodeDOM serializzato specificato in un oggetto.</summary>
      <param name="manager" vsli:raw="A serialization manager interface that is used during the deserialization process.">Interfaccia del gestore della serializzazione che viene utilizzata durante il processo di deserializzazione.</param>
      <param name="codeObject" vsli:raw="A serialized CodeDOM object to deserialize.">Oggetto CodeDOM serializzato da deserializzare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;codeObject&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> o <paramref name="codeObject" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;codeObject&quot; /&gt; is an unsupported code element.">
        <paramref name="codeObject" /> è un elemento di codice non supportato.</exception>
      <returns vsli:raw="The deserialized CodeDOM object.">Oggetto CodeDOM deserializzato.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.DeserializeStatementToInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)">
      <summary vsli:raw="Deserializes a single statement.">Deserializza una singola istruzione.</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">Gestore della serializzazione da utilizzare per la serializzazione.</param>
      <param name="statement" vsli:raw="The statement to deserialize.">Istruzione da deserializzare.</param>
      <returns vsli:raw="An object instance resulting from deserializing &lt;paramref name=&quot;statement&quot; /&gt;.">Istanza di oggetto risultante dalla deserializzazione di <paramref name="statement" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.GetTargetComponentName(System.CodeDom.CodeStatement,System.CodeDom.CodeExpression,System.Type)">
      <summary vsli:raw="Determines which statement group the given statement should belong to.">Determina il gruppo di istruzioni a cui deve appartenere l'istruzione specificata.</summary>
      <param name="statement" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeStatement&quot; /&gt; for which to determine the group.">Oggetto <see cref="T:System.CodeDom.CodeStatement" /> per il quale determinare il gruppo.</param>
      <param name="expression" vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; that &lt;paramref name=&quot;statement&quot; /&gt; has been reduced to.">Oggetto <see cref="T:System.CodeDom.CodeExpression" /> a cui è stato ridotto <paramref name="statement" />.</param>
      <param name="targetType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of &lt;paramref name=&quot;statement&quot; /&gt;.">Oggetto <see cref="T:System.Type" /> dell'oggetto <paramref name="statement" />.</param>
      <returns vsli:raw="The name of the component with which &lt;paramref name=&quot;statement&quot; /&gt; should be grouped.">Nome del componente con cui raggruppare <paramref name="statement" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Serializes the specified object into a CodeDOM object.">Serializza l'oggetto specificato in un oggetto CodeDOM.</summary>
      <param name="manager" vsli:raw="The serialization manager to use during serialization.">Gestore della serializzazione da utilizzare durante la serializzazione.</param>
      <param name="value" vsli:raw="The object to serialize.">Oggetto da serializzare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> o <paramref name="value" /> è <see langword="null" />.</exception>
      <returns vsli:raw="A CodeDOM object representing the object that has been serialized.">Oggetto CodeDOM che rappresenta l'oggetto serializzato.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeAbsolute(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Serializes the given object, accounting for default values.">Serializza l'oggetto specificato, tenendo conto dei valori predefiniti.</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">Gestore della serializzazione da utilizzare per la serializzazione.</param>
      <param name="value" vsli:raw="The object to serialize.">Oggetto da serializzare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> o <paramref name="value" /> è <see langword="null" />.</exception>
      <returns vsli:raw="A CodeDom object representing &lt;paramref name=&quot;value&quot; /&gt;.">Oggetto CodeDom che rappresenta <paramref name="value" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeMember(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Serializes the given member on the given object.">Serializza il membro specificato sull'oggetto indicato.</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">Gestore della serializzazione da utilizzare per la serializzazione.</param>
      <param name="owningObject" vsli:raw="The object to which is &lt;paramref name=&quot;member&quot; /&gt; attached.">Oggetto al quale è associato <paramref name="member" />.</param>
      <param name="member" vsli:raw="The member to serialize.">Membro da serializzare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;owningObject&quot; /&gt;, or &lt;paramref name=&quot;member&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />, <paramref name="owningObject" /> o <paramref name="member" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;member&quot; /&gt; is not a serializable type.">
        <paramref name="member" /> non è un tipo che può essere serializzato.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeStatementCollection&quot; /&gt; representing the serialized state of &lt;paramref name=&quot;member&quot; /&gt;.">Oggetto <see cref="T:System.CodeDom.CodeStatementCollection" /> che rappresenta lo stato serializzato di <paramref name="member" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Serializes the given member, accounting for default values.">Serializza il membro specificato, tenendo conto dei valori predefiniti.</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">Gestore della serializzazione da utilizzare per la serializzazione.</param>
      <param name="owningObject" vsli:raw="The object to which is &lt;paramref name=&quot;member&quot; /&gt; attached.">Oggetto al quale è associato <paramref name="member" />.</param>
      <param name="member" vsli:raw="The member to serialize.">Membro da serializzare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;owningObject&quot; /&gt;, or &lt;paramref name=&quot;member&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />, <paramref name="owningObject" /> o <paramref name="member" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;member&quot; /&gt; is not a serializable type.">
        <paramref name="member" /> non è un tipo che può essere serializzato.</exception>
      <returns vsli:raw="A CodeDom object representing &lt;paramref name=&quot;member&quot; /&gt;.">Oggetto CodeDom che rappresenta <paramref name="member" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeToReferenceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Serializes the specified value to a CodeDOM expression.">Serializza il valore specificato in un'espressione CodeDOM.</summary>
      <param name="manager" vsli:raw="The serialization manager to use during serialization.">Gestore della serializzazione da utilizzare durante la serializzazione.</param>
      <param name="value" vsli:raw="The object to serialize.">Oggetto da serializzare.</param>
      <returns vsli:raw="The serialized value. This returns &lt;see langword=&quot;null&quot; /&gt; if no reference expression can be obtained for the specified value, or the value cannot be serialized.">Valore serializzato. Restituisce <see langword="null" /> se non è possibile ottenere alcuna espressione di riferimento per il valore specificato o il valore non può essere serializzato.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializerBase">
      <summary vsli:raw="Provides a base class for &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializer&quot; /&gt; classes.">Fornisce una classe base per le classi <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
      <summary vsli:raw="Deserializes the given expression into an in-memory object.">Deserializza l'espressione data in un oggetto in memoria.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">Classe <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da utilizzare per la serializzazione.</param>
      <param name="name" vsli:raw="The name of the object that results from the expression. Can be &lt;see langword=&quot;null&quot; /&gt; if there is no need to name the object.">Nome dell'oggetto risultante dall'espressione. Può essere <see langword="null" /> se non è necessario specificare il nome dell'oggetto.</param>
      <param name="expression" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; to interpret.">Classe <see cref="T:System.CodeDom.CodeExpression" /> da interpretare.</param>
      <returns vsli:raw="An object resulting from interpretation of &lt;paramref name=&quot;expression&quot; /&gt;.">Oggetto risultante dall'interpretazione di <paramref name="expression" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)">
      <summary vsli:raw="Returns an instance of the given type.">Restituisce un'istanza del tipo dato.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">Classe <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da utilizzare per la serializzazione.</param>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the instance to return.">Classe <see cref="T:System.Type" /> dell'istanza da restituire.</param>
      <param name="parameters" vsli:raw="The parameters to pass to the constructor for &lt;paramref name=&quot;type&quot; /&gt;.">Parametri da passare al costruttore per <paramref name="type" />.</param>
      <param name="name" vsli:raw="The name of the deserialized object.">Nome dell'oggetto deserializzato.</param>
      <param name="addToContainer" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to add this object to the design container; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The object must implement &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; for this to have any effect.">
        <see langword="true" /> per aggiungere questo oggetto al contenitore di progettazione; in caso contrario, <see langword="false" />. È necessario che l'oggetto implementi <see cref="T:System.ComponentModel.IComponent" /> perché abbia effetto.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;type&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> o <paramref name="type" /> è <see langword="null" />.</exception>
      <returns vsli:raw="An instance of &lt;paramref name=&quot;type&quot; /&gt;.">Istanza di <paramref name="type" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
      <summary vsli:raw="Deserializes properties on the given object from the invariant culture's resource bundle.">Deserializza le proprietà dell'oggetto dato dal raggruppamento di risorse delle impostazioni cultura inglese non dipendenti da paese/area geografica.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">Classe <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da utilizzare per la serializzazione.</param>
      <param name="value" vsli:raw="The object from which the properties are to be deserialized.">Oggetto da cui deserializzare le proprietà.</param>
      <param name="filter" vsli:raw="An &lt;see cref=&quot;T:System.Attribute&quot; /&gt; array that filters which properties will be deserialized.">Matrice <see cref="T:System.Attribute" /> che filtra le proprietà che verranno deserializzate.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)">
      <summary vsli:raw="Deserializes a statement by interpreting and executing a CodeDOM statement.">Deserializza un'istruzione interpretando ed eseguendo un'istruzione CodeDOM.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">Classe <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da utilizzare per la serializzazione.</param>
      <param name="statement" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeStatement&quot; /&gt; to deserialize.">
        <see cref="T:System.CodeDom.CodeStatement" /> da deserializzare.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
      <summary vsli:raw="Gets a collection of attributes as defined in the project's target version of .NET.">Ottiene un insieme di attributi come definito nella versione di destinazione del progetto di .NET Framework.</summary>
      <param name="manager" vsli:raw="The serialization manager.">Manager di serializzazione.</param>
      <param name="type" vsli:raw="The target type.">Tipo di destinazione.</param>
      <returns vsli:raw="A collection of attributes as defined in the project's target version of .NET.">Insieme di attributi come definito nella versione di destinazione del progetto di .NET Framework.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Gets a collection of attributes as defined in the project's target version of .NET.">Ottiene un insieme di attributi come definito nella versione di destinazione del progetto di .NET Framework.</summary>
      <param name="manager" vsli:raw="The serialization manager.">Manager di serializzazione.</param>
      <param name="instance" vsli:raw="An object of the target type.">Oggetto del tipo di destinazione.</param>
      <returns vsli:raw="A collection of attributes as defined in the project's target version of .NET.">Insieme di attributi come definito nella versione di destinazione del progetto di .NET Framework.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
      <summary vsli:raw="Gets a collection of events as defined in the project's target version of .NET.">Ottiene un insieme di eventi come definito nella versione di destinazione del progetto di .NET Framework.</summary>
      <param name="manager" vsli:raw="The serialization manager.">Manager di serializzazione.</param>
      <param name="instance" vsli:raw="An object of the target type.">Oggetto del tipo di destinazione.</param>
      <param name="attributes" vsli:raw="An array of attributes to pass to the target version of .NET.">Matrice di attributi da passare alla versione di destinazione di .NET Framework.</param>
      <returns vsli:raw="A collection of events as defined in the project's target version of .NET.">Insieme di eventi come definito nella versione di destinazione del progetto di .NET Framework.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Returns an expression for the given object.">Restituisce un'espressione per l'oggetto dato.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">Classe <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da utilizzare per la serializzazione.</param>
      <param name="value" vsli:raw="The object for which to get an expression.">Oggetto per cui ottenere un'espressione.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> è <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; representing &lt;paramref name=&quot;value&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if there is no existing expression for &lt;paramref name=&quot;value&quot; /&gt;.">Elemento <see cref="T:System.CodeDom.CodeExpression" /> che rappresenta <paramref name="value" /> o <see langword="null" /> se non è presente alcuna espressione per <paramref name="value" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
      <summary vsli:raw="Gets a collection of properties as defined in the project's target version of .NET.">Ottiene un insieme di proprietà come definito nella versione di destinazione del progetto di .NET Framework.</summary>
      <param name="manager" vsli:raw="The serialization manager.">Manager di serializzazione.</param>
      <param name="instance" vsli:raw="An object of the target type.">Oggetto del tipo di destinazione.</param>
      <param name="attributes" vsli:raw="An array of attributes to pass to the target version of .NET.">Matrice di attributi da passare alla versione di destinazione di .NET Framework.</param>
      <returns vsli:raw="A collection of properties as defined in the project's target version of .NET.">Insieme di proprietà come definito nella versione di destinazione del progetto di .NET Framework.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
      <summary vsli:raw="Gets a reflection type generated from type metadata.">Ottiene un tipo di reflection generato dai metadati del tipo.</summary>
      <param name="manager" vsli:raw="The serialization manager.">Manager di serializzazione.</param>
      <param name="type" vsli:raw="The type to use metadata from.">Tipo da cui utilizzare i metadati.</param>
      <returns vsli:raw="A reflection type generated from the metadata of &lt;paramref name=&quot;type&quot; /&gt;.">Tipo di reflection generato dai metadati di <paramref name="type" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Gets a reflection type generated from object metadata.">Ottiene un tipo di reflection generato dai metadati dell'oggetto.</summary>
      <param name="manager" vsli:raw="The serialization manager.">Manager di serializzazione.</param>
      <param name="instance" vsli:raw="The object to use metadata from.">Oggetto da cui utilizzare i metadati.</param>
      <returns vsli:raw="A reflection type generated from the metadata of &lt;paramref name=&quot;object&quot; /&gt;.">Tipo di reflection generato dai metadati di <paramref name="object" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Locates a serializer for the given object value.">Individua un serializzatore per il valore dell'oggetto dato.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">Classe <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da utilizzare per la serializzazione.</param>
      <param name="value" vsli:raw="The object specifying the serializer to retrieve.">Oggetto che specifica il serializzatore da recuperare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> o <paramref name="value" /> è <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializer&quot; /&gt; that is appropriate for &lt;paramref name=&quot;value&quot; /&gt;.">Classe <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> appropriata per <paramref name="value" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
      <summary vsli:raw="Locates a serializer for the given type.">Individua un serializzatore per il tipo dato.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">Classe <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da utilizzare per la serializzazione.</param>
      <param name="valueType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; specifying the serializer to retrieve.">Classe <see cref="T:System.Type" /> che specifica il serializzatore da recuperare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;valueType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> o <paramref name="valueType" /> è <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializer&quot; /&gt; that is appropriate for &lt;paramref name=&quot;valueType&quot; /&gt;.">Classe <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> appropriata per <paramref name="valueType" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(System.IServiceProvider,System.Object)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptionProvider&quot; /&gt; that is aware of the target version of .NET, for use in type filtering.">Ottiene un oggetto <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> che riconosce la versione di destinazione di .NET Framework, per l'utilizzo nel filtro del tipo.</summary>
      <param name="provider" vsli:raw="The type description provider service.">Servizio del provider di descrizione del tipo.</param>
      <param name="instance" vsli:raw="An object from which the type description provider service can be derived, if &lt;paramref name=&quot;provider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Oggetto da cui può essere derivato il servizio del provider di descrizione del tipo, se <paramref name="provider" /> è <see langword="null" />.</param>
      <returns vsli:raw="A .NET-aware type description provider.">Provider di descrizione del tipo che riconosce .NET Framework.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Returns a unique name for the given object.">Restituisce un nome univoco per l'oggetto dato.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">Classe <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da utilizzare per la serializzazione.</param>
      <param name="value" vsli:raw="The object for which the name will be retrieved.">Oggetto per il quale verrà recuperato il nome.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> o <paramref name="value" /> è <see langword="null" />.</exception>
      <returns vsli:raw="A unique name for &lt;paramref name=&quot;value&quot; /&gt;.">Nome univoco per <paramref name="value" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Returns a value indicating whether the given object has been serialized.">Restituisce un valore che indica se l'oggetto dato è stato serializzato.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">Classe <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da utilizzare per la serializzazione.</param>
      <param name="value" vsli:raw="The object to test for previous serialization.">Oggetto di cui verificare la precedente serializzazione.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> o <paramref name="value" /> è <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; has been serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="value" /> è stato serializzato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
      <summary vsli:raw="Returns a value indicating whether the given object has been serialized, optionally considering preset expressions.">Restituisce un valore che indica se l'oggetto dato è stato serializzato, considerando eventualmente le espressioni predefinite.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">Classe <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da utilizzare per la serializzazione.</param>
      <param name="value" vsli:raw="The object to test for previous serialization.">Oggetto di cui verificare la precedente serializzazione.</param>
      <param name="honorPreset" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to include preset expressions; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per includere le espressioni predefinite; in caso contrario, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> o <paramref name="value" /> è <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; has been serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="value" /> è stato serializzato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)">
      <summary vsli:raw="Returns an expression representing the creation of the given object.">Restituisce un'espressione che rappresenta la creazione dell'oggetto dato.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">Classe <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da utilizzare per la serializzazione.</param>
      <param name="value" vsli:raw="The object to serialize.">Oggetto da serializzare.</param>
      <param name="isComplete" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; was fully serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="value" /> è stato completamente serializzato; in caso contrario, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> o <paramref name="value" /> è <see langword="null" />.</exception>
      <returns vsli:raw="An expression representing the creation of &lt;paramref name=&quot;value&quot; /&gt;.">Espressione che rappresenta la creazione di <paramref name="value" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)">
      <summary vsli:raw="Serializes the given event into the given statement collection.">Serializza l'evento specificato nell'insieme di istruzioni specificato.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">Classe <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da utilizzare per la serializzazione.</param>
      <param name="statements" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeStatementCollection&quot; /&gt; into which the event will be serialized.">Oggetto <see cref="T:System.CodeDom.CodeStatementCollection" /> in cui l'evento sarà serializzato.</param>
      <param name="value" vsli:raw="The object to which &lt;paramref name=&quot;descriptor&quot; /&gt; is bound.">Oggetto a cui <paramref name="descriptor" /> è associato.</param>
      <param name="descriptor" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventDescriptor&quot; /&gt; specifying the event to serialize.">Oggetto <see cref="T:System.ComponentModel.EventDescriptor" /> che specifica l'evento da serializzare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;value&quot; /&gt;, &lt;paramref name=&quot;statements&quot; /&gt;, or &lt;paramref name=&quot;descriptor&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />, <paramref name="value" />, <paramref name="statements" /> o <paramref name="descriptor" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" vsli:raw="&lt;see cref=&quot;T:System.ComponentModel.Design.IEventBindingService&quot; /&gt; is not available.">
        <see cref="T:System.ComponentModel.Design.IEventBindingService" /> non è disponibile.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary vsli:raw="Serializes the specified events into the given statement collection.">Serializza gli eventi specificati nell'insieme di istruzioni specificato.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">Classe <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da utilizzare per la serializzazione.</param>
      <param name="statements" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeStatementCollection&quot; /&gt; into which the event will be serialized.">Oggetto <see cref="T:System.CodeDom.CodeStatementCollection" /> in cui l'evento sarà serializzato.</param>
      <param name="value" vsli:raw="The object on which events will be serialized.">Oggetto in cui gli eventi saranno serializzati.</param>
      <param name="filter" vsli:raw="An &lt;see cref=&quot;T:System.Attribute&quot; /&gt; array that filters which events will be serialized.">Matrice <see cref="T:System.Attribute" /> che filtra gli eventi che saranno serializzati.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;value&quot; /&gt;, or &lt;paramref name=&quot;statements&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />, <paramref name="value" /> o <paramref name="statements" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary vsli:raw="Serializes the properties on the given object into the given statement collection.">Serializza le proprietà sull'oggetto indicato nell'insieme di istruzioni specificato.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">Classe <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da utilizzare per la serializzazione.</param>
      <param name="statements" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeStatementCollection&quot; /&gt; into which the properties will be serialized.">Oggetto <see cref="T:System.CodeDom.CodeStatementCollection" /> in cui le proprietà saranno serializzate.</param>
      <param name="value" vsli:raw="The object on which the properties will be serialized.">Oggetto in cui le proprietà saranno serializzate.</param>
      <param name="filter" vsli:raw="An &lt;see cref=&quot;T:System.Attribute&quot; /&gt; array that filters which properties will be serialized.">Matrice <see cref="T:System.Attribute" /> che filtra le proprietà che saranno serializzate.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;value&quot; /&gt;, or &lt;paramref name=&quot;statements&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />, <paramref name="value" /> o <paramref name="statements" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary vsli:raw="Serializes the properties on the given object into the invariant culture's resource bundle.">Serializza le proprietà sull'oggetto indicato nell'aggregazione di risorse con impostazioni cultura inglese non dipendenti da paese/area geografica.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">Classe <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da utilizzare per la serializzazione.</param>
      <param name="statements" vsli:raw="Not used.">Non usato.</param>
      <param name="value" vsli:raw="The object whose properties will be serialized.">Oggetto le cui proprietà saranno serializzate.</param>
      <param name="filter" vsli:raw="An &lt;see cref=&quot;T:System.Attribute&quot; /&gt; array that filters which properties will be serialized.">Matrice <see cref="T:System.Attribute" /> che filtra le proprietà che saranno serializzate.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;value&quot; /&gt;, or &lt;paramref name=&quot;statements&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />, <paramref name="value" /> o <paramref name="statements" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)">
      <summary vsli:raw="Serializes a property on the given object.">Serializza una proprietà sull'oggetto specificato.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">Classe <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da utilizzare per la serializzazione.</param>
      <param name="statements" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeStatementCollection&quot; /&gt; into which the property will be serialized.">Oggetto <see cref="T:System.CodeDom.CodeStatementCollection" /> in cui la proprietà sarà serializzata.</param>
      <param name="value" vsli:raw="The object on which the property will be serialized.">Oggetto in cui la proprietà sarà serializzata.</param>
      <param name="propertyToSerialize" vsli:raw="The property to serialize.">Proprietà da serializzare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;value&quot; /&gt;, &lt;paramref name=&quot;statements&quot; /&gt;, or &lt;paramref name=&quot;propertyToSerialize&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />, <paramref name="value" />, <paramref name="statements" /> o <paramref name="propertyToSerialize" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
      <summary vsli:raw="Serializes the given object into a resource bundle using the given resource name.">Serializza l'oggetto dato in un raggruppamento di risorse mediante il nome di risorsa dato.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">Classe <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da utilizzare per la serializzazione.</param>
      <param name="resourceName" vsli:raw="The name of the resource bundle into which &lt;paramref name=&quot;value&quot; /&gt; will be serialized.">Nome del raggruppamento di risorse in cui verrà serializzato <paramref name="value" />.</param>
      <param name="value" vsli:raw="The object to serialize.">Oggetto da serializzare.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
      <summary vsli:raw="Serializes the given object into a resource bundle using the given resource name.">Serializza l'oggetto dato in un raggruppamento di risorse mediante il nome di risorsa dato.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">Classe <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da utilizzare per la serializzazione.</param>
      <param name="resourceName" vsli:raw="The name of the resource bundle into which &lt;paramref name=&quot;value&quot; /&gt; will be serialized.">Nome del raggruppamento di risorse in cui verrà serializzato <paramref name="value" />.</param>
      <param name="value" vsli:raw="The object to serialize.">Oggetto da serializzare.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Serializes the given object into an expression.">Serializza l'oggetto dato in un'espressione.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">Classe <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da utilizzare per la serializzazione.</param>
      <param name="value" vsli:raw="The object to serialize. Can be &lt;see langword=&quot;null&quot; /&gt;.">Oggetto da serializzare. Può essere <see langword="null" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> è <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; object if &lt;paramref name=&quot;value&quot; /&gt; can be serialized; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Oggetto <see cref="T:System.CodeDom.CodeExpression" /> se <paramref name="value" /> può essere serializzato; in caso contrario, <see langword="null" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Serializes the given object into an expression.">Serializza l'oggetto dato in un'espressione.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">Classe <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da utilizzare per la serializzazione.</param>
      <param name="value" vsli:raw="The object to serialize.">Oggetto da serializzare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> è <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; containing &lt;paramref name=&quot;value&quot; /&gt; as a serialized expression.">Classe <see cref="T:System.CodeDom.CodeExpression" /> contenente <paramref name="value" /> come espressione serializzata.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
      <summary vsli:raw="Serializes the given object into an expression appropriate for the invariant culture.">Serializza l'oggetto dato in un'espressione appropriata alle impostazioni cultura invarianti.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">Classe <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da utilizzare per la serializzazione.</param>
      <param name="value" vsli:raw="The object to serialize.">Oggetto da serializzare.</param>
      <param name="ensureInvariant" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize into the invariant culture; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per eseguire la serializzazione nelle impostazioni cultura invarianti; in caso contrario, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> è <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; containing &lt;paramref name=&quot;value&quot; /&gt; as a serialized expression.">Classe <see cref="T:System.CodeDom.CodeExpression" /> contenente <paramref name="value" /> come espressione serializzata.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)">
      <summary vsli:raw="Associates an object with an expression.">Associa un oggetto a un'espressione.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">Classe <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da utilizzare per la serializzazione.</param>
      <param name="value" vsli:raw="The object to serialize.">Oggetto da serializzare.</param>
      <param name="expression" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; with which to associate &lt;paramref name=&quot;value&quot; /&gt;.">Oggetto <see cref="T:System.CodeDom.CodeExpression" /> al quale associare <paramref name="value" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;value&quot; /&gt;, or &lt;paramref name=&quot;expression&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />, <paramref name="value" /> o <paramref name="expression" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)">
      <summary vsli:raw="Associates an object with an expression, optionally specifying a preset expression.">Associa un oggetto a un'espressione, specificando facoltativamente un'espressione predefinita.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use for serialization.">Classe <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da utilizzare per la serializzazione.</param>
      <param name="value" vsli:raw="The object to serialize.">Oggetto da serializzare.</param>
      <param name="expression" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; with which to associate &lt;paramref name=&quot;value&quot; /&gt;.">Oggetto <see cref="T:System.CodeDom.CodeExpression" /> al quale associare <paramref name="value" />.</param>
      <param name="isPreset" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to specify a preset expression; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per specificare un'espressione predefinita; in caso contrario, <see langword="false" />.</param>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException">
      <summary vsli:raw="The exception that is thrown when line number information is available for a serialization error.">L'eccezione che viene generata quando sono disponibili le informazioni sul numero di riga per un errore di serializzazione.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.Exception,System.CodeDom.CodeLinePragma)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializerException&quot; /&gt; class using the specified exception and line information.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> con le informazioni relative all'eccezione e alla riga specificate.</summary>
      <param name="ex" vsli:raw="The exception to throw.">Eccezione da generare.</param>
      <param name="linePragma" vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeLinePragma&quot; /&gt; that indicates where the exception occurred.">Oggetto <see cref="T:System.CodeDom.CodeLinePragma" /> che indica dove si è verificata l'eccezione.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.Exception,System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializerException&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" />.</summary>
      <param name="ex" vsli:raw="The exception to throw.">Eccezione da generare.</param>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; object from which to extract the context.">Oggetto <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da cui estrarre il contesto.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Manager&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="Manager" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.String,System.CodeDom.CodeLinePragma)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializerException&quot; /&gt; class using the specified message and line information.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> con le informazioni relative al messaggio e alla riga specificate.</summary>
      <param name="message" vsli:raw="A message describing the exception.">Messaggio che descrive l'eccezione.</param>
      <param name="linePragma" vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeLinePragma&quot; /&gt; that indicates where the exception occurred.">Oggetto <see cref="T:System.CodeDom.CodeLinePragma" /> che indica dove si è verificata l'eccezione.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.String,System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializerException&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" />.</summary>
      <param name="message" vsli:raw="A message describing the exception.">Messaggio che descrive l'eccezione.</param>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; object from which to extract the context.">Oggetto <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da cui estrarre il contesto.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;Manager&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="Manager" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object with the parameter name and additional exception information.">Imposta l'oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con il nome del parametro e informazioni aggiuntive sull'eccezione.</summary>
      <param name="info" vsli:raw="Stores the data that was being used to serialize or deserialize the object that the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializer&quot; /&gt; was serializing or deserializing.">Memorizza i dati utilizzati per serializzare o deserializzare l'oggetto a sua volta serializzato o deserializzato dall'oggetto <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" />.</param>
      <param name="context" vsli:raw="Describes the source and destination of the stream that generated the exception, as well as a means for serialization to retain that context and an additional caller-defined context.">Descrive l'origine e la destinazione del flusso che ha generato l'eccezione e rappresenta un mezzo per mantenere tale contesto e un ulteriore contesto definito dal chiamante nell'ambito della serializzazione.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;info&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">Il valore del parametro <paramref name="info" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.CodeDomSerializerException.LinePragma">
      <summary vsli:raw="Gets or sets the line information for the error associated with this exception.">Ottiene o imposta le informazioni relative alla riga per l'errore associato a questa eccezione.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeLinePragma&quot; /&gt; that indicates the line information for the error.">Oggetto <see cref="T:System.CodeDom.CodeLinePragma" /> che indica le informazioni relative alla riga per l'errore.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer">
      <summary vsli:raw="Serializes collections.">Serializza gli insiemi.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.MethodSupportsSerialization(System.Reflection.MethodInfo)">
      <summary vsli:raw="Verifies serialization support by the &lt;paramref name=&quot;method&quot; /&gt;.">Verifica il supporto della serializzazione da parte di <paramref name="method" />.</summary>
      <param name="method" vsli:raw="The &lt;see cref=&quot;T:System.Reflection.MethodInfo&quot; /&gt; to check for serialization attributes.">Classe <see cref="T:System.Reflection.MethodInfo" /> per controllare gli attributi di serializzazione.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;method&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="method" /> è <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;paramref name=&quot;method&quot; /&gt; supports serialization; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="method" /> supporta la serializzazione; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Serializes the given collection into a CodeDOM object.">Serializza l'insieme dato in un oggetto CodeDOM.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use during serialization.">Oggetto <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da usare durante la serializzazione.</param>
      <param name="value" vsli:raw="The object to serialize.">Oggetto da serializzare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> o <paramref name="value" /> è <see langword="null" />.</exception>
      <returns vsli:raw="A CodeDOM object representing &lt;paramref name=&quot;value&quot; /&gt;.">Oggetto CodeDOM che rappresenta <paramref name="value" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.SerializeCollection(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeExpression,System.Type,System.Collections.ICollection,System.Collections.ICollection)">
      <summary vsli:raw="Serializes the given collection.">Serializza la raccolta specificata.</summary>
      <param name="manager" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; to use during serialization.">Oggetto <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> da usare durante la serializzazione.</param>
      <param name="targetExpression" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; that refers to the collection.">Oggetto <see cref="T:System.CodeDom.CodeExpression" /> che fa riferimento alla raccolta</param>
      <param name="targetType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the collection.">Oggetto <see cref="T:System.Type" /> della raccolta.</param>
      <param name="originalCollection" vsli:raw="The collection to serialize.">Raccolta da serializzare.</param>
      <param name="valuesToSerialize" vsli:raw="The values to serialize.">Valori da serializzare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;targetType&quot; /&gt;, &lt;paramref name=&quot;originalCollection&quot; /&gt;, or &lt;paramref name=&quot;valuesToSerialize&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />, <paramref name="targetType" />, <paramref name="originalCollection" /> o <paramref name="valuesToSerialize" /> è <see langword="null" />.</exception>
      <returns vsli:raw="Serialized collection if the serialization process succeeded; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Raccolta serializzata se il processo di serializzazione è stato completato; in caso contrario, <see langword="null" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
      <summary vsli:raw="Provides an implementation of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot; /&gt; interface.">Fornisce un'implementazione dell'interfaccia <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated">
      <summary vsli:raw="Occurs when a session is created.">Viene generato quando viene creata una sessione.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed">
      <summary vsli:raw="Occurs when a session is disposed.">Viene generato quando viene eliminata una sessione.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ResolveName">
      <summary vsli:raw="Occurs when &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)&quot; /&gt; cannot locate the specified name in the serialization manager's name table.">Viene generato quando il metodo <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" /> non è in grado di individuare il nome specificato nella tabella dei nomi del gestore della serializzazione.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The serialization manager does not have an active serialization session.">Il gestore di serializzazione non ha una sessione di serializzazione attiva.</exception>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SerializationComplete">
      <summary vsli:raw="Occurs when serialization is complete.">Viene generato al termine della serializzazione.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The serialization manager does not have an active serialization session.">Il gestore di serializzazione non ha una sessione di serializzazione attiva.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.DesignerSerializationManager&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor(System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.DesignerSerializationManager&quot; /&gt; class with the given service provider.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> con il provider di servizi dato.</summary>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt;.">Oggetto <see cref="T:System.IServiceProvider" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;provider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="provider" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
      <summary vsli:raw="Creates an instance of a type.">Crea un'istanza di un tipo.</summary>
      <param name="type" vsli:raw="The type to create an instance of.">Tipo di cui creare un'istanza.</param>
      <param name="arguments" vsli:raw="The parameters of the type's constructor. This can be &lt;see langword=&quot;null&quot; /&gt; or an empty collection to invoke the parameterless constructor.">Parametri del costruttore del tipo. Può essere <see langword="null" /> o una raccolta vuota per richiamare il costruttore senza parametri.</param>
      <param name="name" vsli:raw="A name to give the object. If &lt;see langword=&quot;null&quot; /&gt;, the object will not be given a name, unless the object is added to a container and the container gives the object a name.">Nome da assegnare all'oggetto. Se <see langword="null" />, non verrà assegnato un nome all'oggetto a meno che l'oggetto non venga aggiunto a un contenitore e sia quest'ultimo ad assegnargli un nome.</param>
      <param name="addToContainer" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to add the object to the container if the object implements &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per aggiungere l'oggetto al contenitore se implementa <see cref="T:System.ComponentModel.IComponent" />; in caso contrario, <see langword="false" />.</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="&lt;paramref name=&quot;type&quot; /&gt; does not have a constructor that takes parameters contained in &lt;paramref name=&quot;arguments&quot; /&gt;.">
        <paramref name="type" /> non dispone di un costruttore che accetta i parametri contenuti in <paramref name="arguments" />.</exception>
      <returns vsli:raw="A new instance of the type specified by &lt;paramref name=&quot;type&quot; /&gt;.">Nuova istanza del tipo specificato da <paramref name="type" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession">
      <summary vsli:raw="Creates a new serialization session.">Crea una nuova sessione di serializzazione.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The serialization manager is already within a session. This version of &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.DesignerSerializationManager&quot; /&gt; does not support simultaneous sessions.">Il gestore della serializzazione si trova già all'interno di una sessione. Questa versione di <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> non supporta sessioni simultanee.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; that represents a new serialization session.">Interfaccia <see cref="T:System.IDisposable" /> che rappresenta una nuova sessione di serializzazione.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(System.String)">
      <summary vsli:raw="Gets the type corresponding to the specified type name.">Ottiene il tipo corrispondente al nome del tipo specificato.</summary>
      <param name="typeName" vsli:raw="The name of the type to get.">Nome del tipo da ottenere.</param>
      <returns vsli:raw="The specified type.">Tipo specificato.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)">
      <summary vsli:raw="Gets the serializer for the given object type.">Ottiene il serializzatore per il tipo di oggetto dato.</summary>
      <param name="objectType" vsli:raw="The type of object for which to retrieve the serializer.">Tipo di oggetto per cui recuperare il serializzatore.</param>
      <param name="serializerType" vsli:raw="The type of serializer to retrieve.">Tipo di serializzatore da recuperare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;objectType&quot; /&gt; or &lt;paramref name=&quot;serializerType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="objectType" /> o <paramref name="serializerType" /> è <see langword="null" />.</exception>
      <returns vsli:raw="The serializer for &lt;paramref name=&quot;objectType&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt;, if not found.">Serializzatore per <paramref name="objectType" /> o <see langword="null" /> se non trovato.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(System.Type)">
      <summary vsli:raw="Gets the requested service.">Ottiene il servizio richiesto.</summary>
      <param name="serviceType" vsli:raw="The type of service to retrieve.">Tipo di servizio da recuperare.</param>
      <returns vsli:raw="The requested service, or &lt;see langword=&quot;null&quot; /&gt; if the service cannot be resolved.">Servizio richiesto o <see langword="null" /> se il servizio non può essere risolto.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(System.String)">
      <summary vsli:raw="Gets the requested type.">Ottiene il tipo richiesto.</summary>
      <param name="typeName" vsli:raw="The name of the type to retrieve.">Nome del tipo da recuperare.</param>
      <returns vsli:raw="The requested type, or &lt;see langword=&quot;null&quot; /&gt; if the type cannot be resolved.">Tipo richiesto o <see langword="null" /> se il tipo non può essere risolto.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName&quot; /&gt; event.">Genera l'evento <see cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ResolveNameEventArgs&quot; /&gt; that contains the event data.">Oggetto <see cref="T:System.ComponentModel.Design.Serialization.ResolveNameEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated&quot; /&gt; event.">Genera l'evento <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated" />.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed&quot; /&gt; event.">Genera l'evento <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed" />.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
      <summary vsli:raw="Adds a custom serialization provider to the serialization manager.">Aggiunge un provider di serializzazione personalizzato al gestore della serializzazione.</summary>
      <param name="provider" vsli:raw="The serialization provider to add.">Provider di serializzazione da aggiungere.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
      <summary vsli:raw="Implements the &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; method.">Implementa il metodo <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />.</summary>
      <param name="type" vsli:raw="The data type to create.">Tipo di dati da creare.</param>
      <param name="arguments" vsli:raw="The arguments to pass to the constructor for this type.">Argomento da passare al costruttore per questo tipo.</param>
      <param name="name" vsli:raw="The name of the object. This name can be used to access the object later through &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)&quot; /&gt;. If &lt;see langword=&quot;null&quot; /&gt; is passed, the object is still created but cannot be accessed by name.">Nome dell'oggetto. Questo nome può essere utilizzato per accedere all'oggetto in un momento successivo tramite il metodo <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" />. Se viene passato <see langword="null" />, l'oggetto verrà comunque creato ma non sarà possibile accedervi in base al nome.</param>
      <param name="addToContainer" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to add this object to the design container. The object must implement &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; for this to have any effect.">
        <see langword="true" /> per aggiungere questo oggetto al contenitore di progettazione. È necessario che l'oggetto implementi <see cref="T:System.ComponentModel.IComponent" /> perché abbia effetto.</param>
      <returns vsli:raw="The newly created object instance.">Istanza dell'oggetto appena creata.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)">
      <summary vsli:raw="Retrieves an instance of a created object of the specified name.">Recupera un'istanza di un oggetto creato con il nome specificato.</summary>
      <param name="name" vsli:raw="The name of the object to retrieve.">Nome dell'oggetto da recuperare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was accessed outside of a serialization session.">L'accesso a questa proprietà è stato eseguito al di fuori di una sessione di serializzazione.</exception>
      <returns vsli:raw="An instance of the object with the given name, or &lt;see langword=&quot;null&quot; /&gt; if no object by that name can be found.">Istanza dell'oggetto con il nome specificato oppure <see langword="null" /> se non viene trovato alcun oggetto con tale nome.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)">
      <summary vsli:raw="Retrieves a name for the specified object.">Recupera un nome per l'oggetto specificato.</summary>
      <param name="value" vsli:raw="The object for which to retrieve the name.">Oggetto per cui recuperare il nome.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was accessed outside of a serialization session.">L'accesso a questa proprietà è stato eseguito al di fuori di una sessione di serializzazione.</exception>
      <returns vsli:raw="The name of the object, or &lt;see langword=&quot;null&quot; /&gt; if the object is unnamed.">Nome dell'oggetto oppure <see langword="null" /> se l'oggetto non ha alcun nome.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)">
      <summary vsli:raw="Gets a serializer of the requested type for the specified object type.">Ottiene un serializzatore del tipo richiesto per il tipo di oggetto specificato.</summary>
      <param name="objectType" vsli:raw="The type of the object to get the serializer for.">Tipo dell'oggetto per il quale ottenere il serializzatore.</param>
      <param name="serializerType" vsli:raw="The type of the serializer to retrieve.">Tipo del serializzatore da recuperare.</param>
      <returns vsli:raw="An instance of the requested serializer, or &lt;see langword=&quot;null&quot; /&gt; if no appropriate serializer can be located.">Istanza del serializzatore richiesto oppure <see langword="null" /> se non viene trovato un serializzatore appropriato.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)">
      <summary vsli:raw="Gets a type of the specified name.">Ottiene un tipo del nome specificato.</summary>
      <param name="typeName" vsli:raw="The fully qualified name of the type to load.">Nome completo del tipo da caricare.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was accessed outside of a serialization session.">L'accesso a questa proprietà è stato eseguito al di fuori di una sessione di serializzazione.</exception>
      <returns vsli:raw="An instance of the type, or &lt;see langword=&quot;null&quot; /&gt; if the type cannot be loaded.">Istanza del tipo oppure <see langword="null" /> se non è possibile caricare il tipo.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
      <summary vsli:raw="Removes a previously added serialization provider.">Rimuove un provider di serializzazione aggiunto in precedenza.</summary>
      <param name="provider" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider&quot; /&gt; to remove.">Oggetto <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" /> da rimuovere.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)">
      <summary vsli:raw="Used to report a recoverable error in serialization.">Utilizzato per segnalare un errore risolvibile nella serializzazione.</summary>
      <param name="errorInformation" vsli:raw="An object containing the error information, usually of type &lt;see cref=&quot;T:System.String&quot; /&gt; or &lt;see cref=&quot;T:System.Exception&quot; /&gt;.">Oggetto contenente le informazioni sull'errore, in genere di tipo <see cref="T:System.String" /> o <see cref="T:System.Exception" />.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was accessed outside of a serialization session.">L'accesso a questa proprietà è stato eseguito al di fuori di una sessione di serializzazione.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)">
      <summary vsli:raw="Sets the name for the specified object.">Imposta il nome per l'oggetto specificato.</summary>
      <param name="instance" vsli:raw="The object to set the name.">Oggetto per cui impostare il nome.</param>
      <param name="name" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; used as the name of the object.">Classe <see cref="T:System.String" /> utilizzata come nome dell'oggetto.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="One or both of the parameters are &lt;see langword=&quot;null&quot; /&gt;.">Uno o entrambi i parametri sono <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The object specified by instance already has a name, or &lt;paramref name=&quot;name&quot; /&gt; is already used by another named object.">L'oggetto specificato dall'istanza dispone già di un nome o <paramref name="name" /> è già utilizzato da un altro oggetto denominato.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was accessed outside of a serialization session.">L'accesso a questa proprietà è stato eseguito al di fuori di una sessione di serializzazione.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService(System.Type)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.IServiceProvider.GetService(System.Type)&quot; /&gt; method.">Per una descrizione di questo membro, vedere il metodo <see cref="M:System.IServiceProvider.GetService(System.Type)" />.</summary>
      <param name="serviceType" vsli:raw="An object that specifies the type of service object to get.">Oggetto che specifica il tipo di oggetto servizio da ottenere.</param>
      <returns vsli:raw="A service object of type &lt;paramref name=&quot;serviceType&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; if there is no service object of type &lt;paramref name=&quot;serviceType&quot; /&gt;.">Oggetto Service di tipo <paramref name="serviceType" />.  
  
-oppure- 
 <see langword="null" /> se non c'è un oggetto servizio di tipo <paramref name="serviceType" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container">
      <summary vsli:raw="Gets or sets to the container for this serialization manager.">Ottiene o imposta il contenitore per questo gestore della serializzazione.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The serialization manager has an active serialization session.">Il gestore della serializzazione presenta una sessione di serializzazione attiva.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt; to which the serialization manager will add components.">Interfaccia <see cref="T:System.ComponentModel.IContainer" /> a cui verranno aggiunti componenti dal gestore della serializzazione.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors">
      <summary vsli:raw="Gets the list of errors that occurred during serialization or deserialization.">Ottiene l'elenco di errori verificatisi durante la serializzazione o deserializzazione.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was accessed outside of a serialization session.">L'accesso a questa proprietà è stato eseguito al di fuori di una sessione di serializzazione.</exception>
      <returns vsli:raw="The list of errors that occurred during serialization or deserialization.">Elenco di errori verificatisi durante la serializzazione o deserializzazione.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames">
      <summary vsli:raw="Gets or sets a value indicating whether the &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; method should check for the presence of the given name in the container.">Ottiene o imposta un valore che indica se il metodo <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> deve verificare la presenza del nome dato nel contenitore.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was changed from within a serialization session.">Questa proprietà è stata modificata dall'interno di una sessione di serializzazione.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; will pass the given component name; &lt;see langword=&quot;false&quot; /&gt; if &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; will check for the presence of the given name in the container. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> se <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> passerà il nome del componente dato; <see langword="false" /> se <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> verificherà la presenza del nome dato nel contenitore. Il valore predefinito è <see langword="true" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider">
      <summary vsli:raw="Gets the object that should be used to provide properties to the serialization manager's &lt;see cref=&quot;P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties&quot; /&gt; property.">Ottiene l'oggetto che deve essere utilizzato per fornire proprietà alla proprietà <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> del gestore della serializzazione.</summary>
      <returns vsli:raw="The object that should be used to provide properties to the serialization manager's &lt;see cref=&quot;P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties&quot; /&gt; property.">Oggetto che deve essere utilizzato per fornire proprietà alla proprietà <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> del gestore della serializzazione.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances">
      <summary vsli:raw="Gets or sets a value that indicates whether &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; will always create a new instance of a type.">Ottiene o imposta un valore che indica se <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> creerà sempre una nuova istanza di un tipo.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The serialization manager has an active serialization session.">Il gestore della serializzazione presenta una sessione di serializzazione attiva.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; will return the existing instance; &lt;see langword=&quot;false&quot; /&gt; if &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; will create a new instance of a type. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> restituirà l'istanza esistente; <see langword="false" /> se <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> creerà una nuova istanza di un tipo. Il valore predefinito è <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context">
      <summary vsli:raw="Gets the context stack for this serialization session.">Ottiene lo stack di contesto per questa sessione di serializzazione.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This property was accessed outside of a serialization session.">L'accesso a questa proprietà è stato eseguito al di fuori di una sessione di serializzazione.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ContextStack&quot; /&gt; that stores data.">Oggetto <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> che memorizza dati.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties">
      <summary vsli:raw="Implements the &lt;see cref=&quot;P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties&quot; /&gt; property.">Implementa la proprietà <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.PropertyDescriptorCollection&quot; /&gt; containing the properties to be serialized.">Oggetto <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> contenente le proprietà da serializzare.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes">
      <summary vsli:raw="Gets or sets a value that indicates whether the &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; method will verify that matching names refer to the same type.">Ottiene o imposta un valore che indica se il metodo <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> verificherà che i nomi corrispondenti facciano riferimento allo stesso tipo.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The serialization manager has an active serialization session.">Il gestore della serializzazione presenta una sessione di serializzazione attiva.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)&quot; /&gt; verifies types; otherwise, &lt;see langword=&quot;false&quot; /&gt; if it does not. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> se <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> verifica i tipi; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ExpressionContext">
      <summary vsli:raw="Provides a means of passing context state among serializers. This class cannot be inherited.">Fornisce un sistema per passare lo stato del contesto tra i serializzatori. La classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ExpressionContext&quot; /&gt; class with the given expression and owner.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> con l'espressione e il proprietario specificati.</summary>
      <param name="expression" vsli:raw="The given code expression.">Espressione codice specificata.</param>
      <param name="expressionType" vsli:raw="The given code expression type.">Tipo di espressione codice specificata.</param>
      <param name="owner" vsli:raw="The given code expression owner.">Proprietario espressione codice specificata.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;expression&quot; /&gt;, &lt;paramref name=&quot;expressionType&quot; /&gt;, or &lt;paramref name=&quot;owner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="expression" />, <paramref name="expressionType" /> o <paramref name="owner" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ExpressionContext&quot; /&gt; class with a current value.">Inizializza un'istanza nuova della classe <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> con un valore corrente.</summary>
      <param name="expression" vsli:raw="The given code expression.">Espressione codice specificata.</param>
      <param name="expressionType" vsli:raw="The given code expression type.">Tipo di espressione codice specificata.</param>
      <param name="owner" vsli:raw="The given code expression owner.">Proprietario espressione codice specificata.</param>
      <param name="presetValue" vsli:raw="The given code expression preset value.">Valore del set di impostazioni dell'espressione codice specificata.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;expression&quot; /&gt;, &lt;paramref name=&quot;expressionType&quot; /&gt;, or &lt;paramref name=&quot;owner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="expression" />, <paramref name="expressionType" /> o <paramref name="owner" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.Expression">
      <summary vsli:raw="Gets the expression this context represents.">Ottiene l'espressione rappresentata da questo contesto.</summary>
      <returns vsli:raw="The expression this context represents.">Espressione rappresentata da questo contesto.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.ExpressionType">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Type&quot; /&gt; of the expression.">Ottiene la classe <see cref="T:System.Type" /> dell'espressione.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the expression.">Classe <see cref="T:System.Type" /> dell'espressione.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.Owner">
      <summary vsli:raw="Gets the object owning this expression.">Ottiene l'oggetto proprietario di questa espressione.</summary>
      <returns vsli:raw="The object owning this expression.">Oggetto proprietario di questa espressione.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue">
      <summary vsli:raw="Gets the preset value of an expression.">Ottiene il valore predefinito di un'espressione.</summary>
      <returns vsli:raw="The preset value of this expression, or &lt;see langword=&quot;null&quot; /&gt; if not assigned.">Valore predefinito dell'espressione o <see langword="null" /> se non assegnato.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload">
      <summary vsli:raw="Provides an interface that can be used to optimize the reloading of a designer.">Fornisce un'interfaccia che può essere utilizzata per ottimizzare il ricaricamento di una finestra di progettazione.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload.ShouldReloadDesigner(System.CodeDom.CodeCompileUnit)">
      <summary vsli:raw="Indicates whether the designer should reload in order to import the specified compile unit correctly.">Indica se è necessario ricaricare la finestra di progettazione per importare correttamente l'unità di compilazione specificata.</summary>
      <param name="newTree" vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeCompileUnit&quot; /&gt; containing the designer document code.">Oggetto <see cref="T:System.CodeDom.CodeCompileUnit" /> contenente il codice del documento della finestra di progettazione.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the designer should reload; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se è necessario ricaricare la finestra di progettazione. <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer">
      <summary vsli:raw="Provides the base class for serializing a reflection primitive within the object graph.">Fornisce la classe base per serializzare una primitiva reflection all'interno dell'oggetto grafico.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor,System.CodeDom.CodeStatementCollection)">
      <summary vsli:raw="Serializes the given member descriptor on the given value to a statement collection.">Serializza il descrittore del membro dato sul valore dato in un insieme di istruzioni.</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">Gestore della serializzazione da utilizzare per la serializzazione.</param>
      <param name="value" vsli:raw="The object to which the member is bound.">Oggetto a cui è associato il membro.</param>
      <param name="descriptor" vsli:raw="The descriptor of the member to serialize.">Descrittore del membro da serializzare.</param>
      <param name="statements" vsli:raw="The &lt;see cref=&quot;T:System.CodeDom.CodeStatementCollection&quot; /&gt; into which &lt;paramref name=&quot;descriptor&quot; /&gt; is serialized.">Classe <see cref="T:System.CodeDom.CodeStatementCollection" /> in cui viene serializzato <paramref name="descriptor" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.ShouldSerialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Determines if the given member should be serialized.">Determina se il membro dato deve essere serializzato.</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">Gestore della serializzazione da utilizzare per la serializzazione.</param>
      <param name="value" vsli:raw="The object to which the member is bound.">Oggetto a cui è associato il membro.</param>
      <param name="descriptor" vsli:raw="The descriptor of the member to serialize.">Descrittore del membro da serializzare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the member described by &lt;paramref name=&quot;descriptor&quot; /&gt; should be serialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, se il membro descritto da <paramref name="descriptor" /> deve essere serializzato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection">
      <summary vsli:raw="Holds a table of statements that is offered by the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.StatementContext&quot; /&gt;. This class cannot be inherited.">Contiene una tabella di istruzioni offerta dalla classe <see cref="T:System.ComponentModel.Design.Serialization.StatementContext" />. La classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.ContainsKey(System.Object)">
      <summary vsli:raw="Determines whether the table contains the given statement owner.">Determina se la tabella contiene il proprietario di istruzioni dato.</summary>
      <param name="statementOwner" vsli:raw="The owner of the statement collection.">Proprietario dell'insieme di istruzioni.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;statementOwner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="statementOwner" /> è <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;statementOwner&quot; /&gt; is in the table; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="statementOwner" /> è nella tabella; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.GetEnumerator">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ObjectStatementCollection&quot; /&gt;.">Restituisce <see cref="T:System.Collections.IEnumerator" /> per <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ObjectStatementCollection&quot; /&gt;.">
        <see cref="T:System.Collections.IEnumerator" /> per l'oggetto <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Populate(System.Collections.ICollection)">
      <summary vsli:raw="Populates the statement table with a collection of statement owners.">Compila la tabella di istruzioni con un insieme di proprietari di istruzioni.</summary>
      <param name="statementOwners" vsli:raw="A collection of statement owners to add to the table.">Insieme di proprietari di istruzioni da aggiungere alla tabella.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;statementOwner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="statementOwner" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Populate(System.Object)">
      <summary vsli:raw="Populates the statement table with a statement owner.">Compila la tabella di istruzioni con un proprietario di istruzioni.</summary>
      <param name="owner" vsli:raw="The statement owner to add to the table.">Proprietario di istruzioni da aggiungere alla tabella.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;owner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="owner" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.Collections.IEnumerable.GetEnumerator&quot; /&gt; method.">Per una descrizione di questo membro, vedere il metodo <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that can be used to iterate through the collection.">Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Item(System.Object)">
      <summary vsli:raw="Gets the statement collection for the given owner.">Ottiene l'insieme di istruzioni per il proprietario dato.</summary>
      <param name="statementOwner" vsli:raw="The owner of the statement collection.">Proprietario dell'insieme di istruzioni.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;statementOwner&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="statementOwner" /> è <see langword="null" />.</exception>
      <returns vsli:raw="The statement collection for &lt;paramref name=&quot;statementOwner&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if &lt;paramref name=&quot;statementOwner&quot; /&gt; is not in the table.">Insieme di istruzioni per <paramref name="statementOwner" /> o <see langword="null" /> se <paramref name="statementOwner" /> non è nella tabella.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.RootContext">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.CodeDomSerializer&quot; /&gt; adds a root context to provide a definition of the root object. This class cannot be inherited.">Una classe <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> aggiunge un contesto di primo livello per fornire una definizione dell'oggetto di primo livello. La classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.RootContext.#ctor(System.CodeDom.CodeExpression,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.RootContext&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.Serialization.RootContext" />.</summary>
      <param name="expression" vsli:raw="The expression representing the root object in the object graph.">Espressione che rappresenta l'oggetto di primo livello nell'oggetto grafico.</param>
      <param name="value" vsli:raw="The root object of the object graph.">Oggetto di primo livello dell'oggetto grafico.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;expression&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="expression" /> o <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.RootContext.Expression">
      <summary vsli:raw="Gets the expression representing the root object in the object graph.">Ottiene l'espressione che rappresenta l'oggetto di primo livello nell'oggetto grafico.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeExpression&quot; /&gt; representing the root object in the object graph.">Classe <see cref="T:System.CodeDom.CodeExpression" /> che rappresenta l'oggetto di primo livello nell'oggetto grafico.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.RootContext.Value">
      <summary vsli:raw="Gets the root object of the object graph.">Ottiene l'oggetto di primo livello dell'oggetto grafico.</summary>
      <returns vsli:raw="The root object of the object graph.">Oggetto di primo livello dell'oggetto grafico.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext">
      <summary vsli:raw="Specifies that serializers should handle default values. This class cannot be inherited.">Specifica che i serializzatori devono gestire valori predefiniti. La classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.#ctor(System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext&quot; /&gt; class with the option of binding to a specific member.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext" /> con l'opzione di associazione a un membro specifico.</summary>
      <param name="member" vsli:raw="The member to which this context is bound. Can be &lt;see langword=&quot;null&quot; /&gt;.">Membro a cui è associato questo contesto. Può essere <see langword="null" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.ShouldSerialize(System.ComponentModel.MemberDescriptor)">
      <summary vsli:raw="Gets a value indicating whether the given member should be serialized in this context.">Ottiene un valore che indica se il membro dato deve essere serializzato in questo contesto.</summary>
      <param name="member" vsli:raw="The member to be examined for serialization.">Membro da esaminare per la serializzazione.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the given member should be serialized in this context; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il membro dato deve essere serializzato in questo contesto; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.Member">
      <summary vsli:raw="Gets the member to which this context is bound.">Ottiene il membro a cui è associato questo contesto.</summary>
      <returns vsli:raw="The member to which this context is bound, or &lt;see langword=&quot;null&quot; /&gt; if the context is bound to all members of an object.">Membro a cui è associato questo contesto o <see langword="null" /> se il contesto è associato a tutti i membri di un oggetto.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.StatementContext">
      <summary vsli:raw="Provides a location into which statements can be serialized. This class cannot be inherited.">Fornisce una posizione in cui è possibile serializzare le istruzioni. La classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.StatementContext.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.StatementContext&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.Serialization.StatementContext" />.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.StatementContext.StatementCollection">
      <summary vsli:raw="Gets a collection of statements offered by the statement context.">Ottiene un insieme di istruzioni offerte dal contesto di istruzioni.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.ObjectStatementCollection&quot; /&gt; containing statements offered by the statement context.">Classe <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" /> contenente le istruzioni offerte dal contesto di istruzioni.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer">
      <summary vsli:raw="Serializes an object to a new type.">Serializza un oggetto in un nuovo tipo.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
      <summary vsli:raw="Deserializes the given type declaration.">Deserializza la dichiarazione del tipo dato.</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">Gestore della serializzazione da utilizzare per la serializzazione.</param>
      <param name="declaration" vsli:raw="Type declaration to use for serialization.">Dichiarazione del tipo da utilizzare per la serializzazione.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;typeDecl&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> o <paramref name="typeDecl" /> è <see langword="null" />.</exception>
      <returns vsli:raw="The root object.">Oggetto radice.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)">
      <summary vsli:raw="Returns the method where statements used to serialize a member are stored.">Restituisce il metodo in cui sono archiviate le istruzioni usate per la serializzazione di un membro.</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">Gestore della serializzazione da utilizzare per la serializzazione.</param>
      <param name="declaration" vsli:raw="The type declaration to use for serialization.">Dichiarazione di tipo da usare per la serializzazione.</param>
      <param name="value" vsli:raw="The value to use for serialization.">Valore da usare per la serializzazione.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt;, &lt;paramref name=&quot;typeDecl&quot; /&gt;, or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" />, <paramref name="typeDecl" /> o <paramref name="value" /> è <see langword="null" />.</exception>
      <returns vsli:raw="The method used to emit all of the initialization code for the given member.">Metodo usato per la creazione di tutto il codice di inizializzazione per il membro specificato.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
      <summary vsli:raw="Returns an array of methods to be interpreted during deserialization.">Restituisce una matrice di metodi da interpretare durante la deserializzazione.</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">Gestore della serializzazione da utilizzare per la serializzazione.</param>
      <param name="declaration" vsli:raw="The type declaration to use for serialization.">Dichiarazione di tipo da usare per la serializzazione.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;typeDecl&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> o <paramref name="typeDecl" /> è <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeMemberMethod&quot; /&gt; array of methods to be interpreted during deserialization.">Matrice <see cref="T:System.CodeDom.CodeMemberMethod" /> di metodi da interpretare durante la deserializzazione.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
      <summary vsli:raw="Serializes the object root by creating a new type declaration that defines root.">Serializza l'elemento di primo livello dell'oggetto creando una nuova dichiarazione del tipo che definisce un elemento di primo livello.</summary>
      <param name="manager" vsli:raw="The serialization manager to use for serialization.">Gestore della serializzazione da utilizzare per la serializzazione.</param>
      <param name="root" vsli:raw="The object to serialize.">Oggetto da serializzare.</param>
      <param name="members" vsli:raw="Optional collection of members. Can be &lt;see langword=&quot;null&quot; /&gt; or empty.">Insieme facoltativo di membri. Può essere <see langword="null" /> o vuoto.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;root&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> o <paramref name="root" /> è <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.CodeDom.CodeTypeDeclaration&quot; /&gt; that defines the root object.">Classe <see cref="T:System.CodeDom.CodeTypeDeclaration" /> che definisce l'oggetto di primo livello.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.UndoEngine">
      <summary vsli:raw="Specifies generic undo/redo functionality at design time.">Specifica funzionalità generiche di annullamento/ripetizione in fase di progettazione.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.UndoEngine.Undoing">
      <summary vsli:raw="Occurs immediately before an undo action is performed.">Viene generato immediatamente prima dell'esecuzione di un'operazione di annullamento.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.UndoEngine.Undone">
      <summary vsli:raw="Occurs immediately after an undo action is performed.">Viene generato immediatamente dopo l'esecuzione di un'operazione di annullamento.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.#ctor(System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.UndoEngine" />.</summary>
      <param name="provider" vsli:raw="A parenting service provider.">Provider di servizi padre.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;provider&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="provider" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="A required service cannot be found. See &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; for required services. If you have removed this service, ensure that you provide a replacement.">È impossibile trovare un servizio richiesto. Per i servizi richiesti, vedere <see cref="T:System.ComponentModel.Design.UndoEngine" />. Se il servizio è stato rimosso, assicurarsi di aver previsto una sostituzione.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.AddUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt; to the undo stack.">Aggiunge un oggetto <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> allo stack di annullamento.</summary>
      <param name="unit" vsli:raw="The undo unit to add.">Unità di annullamento da aggiungere.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.CreateUndoUnit(System.String,System.Boolean)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt;.">Crea un nuovo oggetto <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</summary>
      <param name="name" vsli:raw="The name of the unit to create.">Nome dell'unità da creare.</param>
      <param name="primary" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to create the first of a series of nested units; &lt;see langword=&quot;false&quot; /&gt; to create subsequent nested units.">
        <see langword="true" /> per creare la prima di una serie di unità annidate; <see langword="false" /> per creare unità annidate successive.</param>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt; with a specified name.">Nuovo <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> con un nome specificato.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)">
      <summary vsli:raw="Discards an &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt;.">Elimina un oggetto <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</summary>
      <param name="unit" vsli:raw="The unit to discard.">Unità da eliminare.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt;.">Rilascia tutte le risorse usate da <see cref="T:System.ComponentModel.Design.UndoEngine" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; and optionally releases the managed resources.">Rilascia le risorse non gestite usate da <see cref="T:System.ComponentModel.Design.UndoEngine" /> e, facoltativamente, le risorse gestite.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.GetRequiredService(System.Type)">
      <summary vsli:raw="Gets the requested service.">Ottiene il servizio richiesto.</summary>
      <param name="serviceType" vsli:raw="The type of service to retrieve.">Tipo di servizio da recuperare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serviceType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serviceType" /> è <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;serviceType&quot; /&gt; is required but cannot be found. If you have removed this service, ensure that you provide a replacement.">
        <paramref name="serviceType" /> è richiesto ma non è possibile trovarlo. Se il servizio è stato rimosso, assicurarsi di aver previsto una sostituzione.</exception>
      <returns vsli:raw="The requested service, if found.">Il servizio richiesto, se trovato.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.GetService(System.Type)">
      <summary vsli:raw="Gets the requested service.">Ottiene il servizio richiesto.</summary>
      <param name="serviceType" vsli:raw="The type of service to retrieve.">Tipo di servizio da recuperare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;serviceType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="serviceType" /> è <see langword="null" />.</exception>
      <returns vsli:raw="The requested service, or &lt;see langword=&quot;null&quot; /&gt; if the requested service is not found.">Il servizio richiesto, o <see langword="null" /> se il servizio richiesto non viene individuato.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.OnUndoing(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.UndoEngine.Undoing&quot; /&gt; event.">Genera l'evento <see cref="E:System.ComponentModel.Design.UndoEngine.Undoing" />.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.OnUndone(System.EventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.Design.UndoEngine.Undone&quot; /&gt; event.">Genera l'evento <see cref="E:System.ComponentModel.Design.UndoEngine.Undone" />.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.Enabled">
      <summary vsli:raw="Enables or disables the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt;.">Attiva o disabilita l'oggetto <see cref="T:System.ComponentModel.Design.UndoEngine" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.ComponentModel.Design.UndoEngine" /> è abilitato, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoInProgress">
      <summary vsli:raw="Indicates if an undo action is in progress.">Indica se è in corso un'operazione di annullamento.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an undo action is in progress; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se è in corso un'operazione di annullamento; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.UndoEngine.UndoUnit">
      <summary vsli:raw="Encapsulates a unit of work that a user can undo.">Incapsula un'unità di lavoro annullabile da un utente.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.#ctor(System.ComponentModel.Design.UndoEngine,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</summary>
      <param name="engine" vsli:raw="The undo engine that owns this undo unit.">Il motore di annullamento proprietario di questa unità di annullamento.</param>
      <param name="name" vsli:raw="The name for this undo unit.">Nome dell'unità di annullamento.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;engine&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="engine" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Close">
      <summary vsli:raw="Receives a call from the undo engine to close this unit.">Riceve una chiamata dal motore di annullamento per chiudere l'unità.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdded(System.ComponentModel.Design.ComponentEventArgs)">
      <summary vsli:raw="Receives a call from the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; in response to a &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded&quot; /&gt; event.">Riceve una chiamata da <see cref="T:System.ComponentModel.Design.UndoEngine" /> in risposta a un evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentEventArgs&quot; /&gt; that contains the event data.">Oggetto <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdding(System.ComponentModel.Design.ComponentEventArgs)">
      <summary vsli:raw="Receives a call from the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; in response to a &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding&quot; /&gt; event.">Riceve una chiamata da <see cref="T:System.ComponentModel.Design.UndoEngine" /> in risposta a un evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentEventArgs&quot; /&gt; that contains the event data.">Oggetto <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanged(System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary vsli:raw="Receives a call from the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; in response to a &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged&quot; /&gt; event.">Riceve una chiamata da <see cref="T:System.ComponentModel.Design.UndoEngine" /> in risposta a un evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentChangedEventArgs&quot; /&gt; that contains the event data.">Oggetto <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanging(System.ComponentModel.Design.ComponentChangingEventArgs)">
      <summary vsli:raw="Receives a call from the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; in response to a &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging&quot; /&gt; event.">Riceve una chiamata da <see cref="T:System.ComponentModel.Design.UndoEngine" /> in risposta a un evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentChangedEventArgs&quot; /&gt; that contains the event data.">Oggetto <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoved(System.ComponentModel.Design.ComponentEventArgs)">
      <summary vsli:raw="Receives a call from the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; in response to a &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved&quot; /&gt; event.">Riceve una chiamata da <see cref="T:System.ComponentModel.Design.UndoEngine" /> in risposta a un evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentEventArgs&quot; /&gt; that contains the event data.">Oggetto <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoving(System.ComponentModel.Design.ComponentEventArgs)">
      <summary vsli:raw="Receives a call from the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; in response to a &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving&quot; /&gt; event.">Riceve una chiamata da <see cref="T:System.ComponentModel.Design.UndoEngine" /> in risposta a un evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentEventArgs&quot; /&gt; that contains the event data.">Oggetto <see cref="T:System.ComponentModel.Design.ComponentEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRename(System.ComponentModel.Design.ComponentRenameEventArgs)">
      <summary vsli:raw="Receives a call from the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine&quot; /&gt; in response to a &lt;see cref=&quot;E:System.ComponentModel.Design.IComponentChangeService.ComponentRename&quot; /&gt; event.">Riceve una chiamata da <see cref="T:System.ComponentModel.Design.UndoEngine" /> in risposta a un evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" />.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ComponentRenameEventArgs&quot; /&gt; that contains the event data.">Oggetto <see cref="T:System.ComponentModel.Design.ComponentRenameEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.GetService(System.Type)">
      <summary vsli:raw="Gets an instance of the requested service.">Ottiene un'istanza del servizio richiesto.</summary>
      <param name="serviceType" vsli:raw="The type of service to retrieve.">Tipo di servizio da recuperare.</param>
      <returns vsli:raw="An instance of the given service, or &lt;see langword=&quot;null&quot; /&gt; if the service cannot be resolved.">Un'istanza del servizio specificato oppure <see langword="null" /> se non è possibile risolvere il servizio.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ToString">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the current name of the unit.">Restituisce un oggetto <see cref="T:System.String" /> che rappresenta il nome corrente dell'unità.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the current name of the unit.">Oggetto <see cref="T:System.String" /> che rappresenta il nome corrente dell'unità.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo">
      <summary vsli:raw="Performs an undo or redo action.">Esegue un'azione di annullamento o ripetizione.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore">
      <summary vsli:raw="Called by &lt;see cref=&quot;M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo&quot; /&gt; to perform an undo action.">Chiamato dal metodo <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> per eseguire un'azione di annullamento.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.IsEmpty">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt; contains no events.">Ottiene un valore che indica se in <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> non sono contenuti eventi.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt; contains no events; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> non contiene oggetti, <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.Name">
      <summary vsli:raw="Gets the name of the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt;.">Ottiene il nome dell'oggetto <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</summary>
      <returns vsli:raw="The name of the &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt;.">Nome di <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine">
      <summary vsli:raw="Gets the parent &lt;see cref=&quot;P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine&quot; /&gt;.">Ottiene l'oggetto <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" /> padre.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine&quot; /&gt; to which this &lt;see cref=&quot;T:System.ComponentModel.Design.UndoEngine.UndoUnit&quot; /&gt; is attached.">Oggetto <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" /> a cui è associato <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</returns>
    </member>
    <member name="T:System.Drawing.Design.BitmapEditor">
      <summary vsli:raw="Provides a user interface for selecting bitmap files in a property browser.">Fornisce un'interfaccia utente per la selezione di file bitmap in un Visualizzatore proprietà.</summary>
    </member>
    <member name="F:System.Drawing.Design.BitmapEditor.BitmapExtensions">
      <summary vsli:raw="Provides the list of default file extensions used to filter the file list.">Fornisce l'elenco delle estensioni di file predefinite usate per filtrare l'elenco di file.</summary>
    </member>
    <member name="M:System.Drawing.Design.BitmapEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.BitmapEditor&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Drawing.Design.BitmapEditor" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.BitmapEditor.GetExtensions">
      <summary vsli:raw="Gets the extensions for the file list filter that the bitmap editor will initially use to filter the file list.">Ottiene le estensioni per il filtro dell'elenco file utilizzato inizialmente dall'editor delle bitmap per filtrare l'elenco file.</summary>
      <returns vsli:raw="The default set of file extensions used to filter the file list.">L'insieme predefinito di estensioni di file utilizzato per filtrare l'elenco file.</returns>
    </member>
    <member name="M:System.Drawing.Design.BitmapEditor.GetFileDialogDescription">
      <summary vsli:raw="Gets the description for the default file list filter provided by this editor.">Ottiene la descrizione per il filtro dell'elenco file predefinito fornito dall'editor.</summary>
      <returns vsli:raw="The description for the default type of files to filter the file list for.">La descrizione del tipo predefinito di file da ricercare applicando un filtro all'elenco file.</returns>
    </member>
    <member name="M:System.Drawing.Design.BitmapEditor.LoadFromStream(System.IO.Stream)">
      <summary vsli:raw="Loads an image from the specified stream.">Carica un'immagine dal flusso specificato.</summary>
      <param name="stream" vsli:raw="The stream from which to load the image.">Il flusso da cui caricare l'immagine.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Image&quot; /&gt; loaded from the stream.">L'oggetto <see cref="T:System.Drawing.Image" /> caricato dal flusso.</returns>
    </member>
    <member name="T:System.Drawing.Design.ColorEditor">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditor&quot; /&gt; for visually picking a color.">Fornisce una classe <see cref="T:System.Drawing.Design.UITypeEditor" /> che consente di scegliere visivamente un colore.</summary>
    </member>
    <member name="M:System.Drawing.Design.ColorEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ColorEditor&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Drawing.Design.ColorEditor" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.ColorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the given object value using the editor style provided by the &lt;see cref=&quot;M:System.Drawing.Design.ColorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)&quot; /&gt; method.">Modifica il valore dell'oggetto dato utilizzando lo stile dell'editor fornito dal metodo <see cref="M:System.Drawing.Design.ColorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che può essere usato per ottenere ulteriori informazioni sul contesto.</param>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; through which editing services may be obtained.">Oggetto <see cref="T:System.IServiceProvider" /> tramite il quale è possibile ottenere i servizi di modifica.</param>
      <param name="value" vsli:raw="An instance of the value being edited.">Istanza del valore in corso di modifica.</param>
      <returns vsli:raw="The new value of the object. If the value of the object has not changed, this should return the same object it was passed.">Nuovo valore dell'oggetto. Se il valore dell'oggetto non è stato modificato, dovrebbe restituire lo stesso oggetto che è stato passato.</returns>
    </member>
    <member name="M:System.Drawing.Design.ColorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editing style of the Edit method. If the method is not supported, this will return &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle.None&quot;&gt;&lt;/xref&gt;.">Ottiene lo stile dell'editor utilizzato dal metodo Edit. Se il metodo non è supportato, restituirà <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che può essere usato per ottenere ulteriori informazioni sul contesto.</param>
      <returns vsli:raw="An enum value indicating the provided editing style.">Valore di enumerazione che indica lo stile di modifica fornito.</returns>
    </member>
    <member name="M:System.Drawing.Design.ColorEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets a value indicating if this editor supports the painting of a representation of an object's value.">Ottiene un valore che indica se questo editor supporta la rappresentazione grafica del valore di un oggetto.</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che può essere usato per ottenere ulteriori informazioni sul contesto.</param>
      <returns vsli:raw="&lt;code data-dev-comment-type=&quot;langword&quot;&gt;true&lt;/code&gt; if &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.ColorEditor.PaintValue*&quot;&gt;&lt;/xref&gt; is implemented; otherwise, &lt;code data-dev-comment-type=&quot;langword&quot;&gt;false&lt;/code&gt;.">
        <see langword="true" /> se <see cref="Overload:System.Drawing.Design.ColorEditor.PaintValue" /> è implementato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.ColorEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary vsli:raw="Paints a representative value of the given object to the provided canvas.">Esegue una rappresentazione grafica del valore dell'oggetto sulla superficie fornita.</summary>
      <param name="e" vsli:raw="What to paint and where to paint it.">Che cosa disegnare e in quale posizione.</param>
    </member>
    <member name="T:System.Drawing.Design.ContentAlignmentEditor">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditor&quot; /&gt; for visually editing content alignment.">Fornisce una enumerazione <see cref="T:System.Drawing.Design.UITypeEditor" /> per modificare visivamente l'allineamento del contenuto.</summary>
    </member>
    <member name="M:System.Drawing.Design.ContentAlignmentEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ContentAlignmentEditor&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Drawing.Design.ContentAlignmentEditor" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.ContentAlignmentEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the given object value using the editor style provided by the &lt;see cref=&quot;Overload:System.Drawing.Design.ContentAlignmentEditor.GetEditStyle&quot; /&gt; method.">Modifica il valore dell'oggetto dato utilizzando lo stile dell'editor fornito dal metodo <see cref="Overload:System.Drawing.Design.ContentAlignmentEditor.GetEditStyle" />.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che può essere usato per ottenere ulteriori informazioni sul contesto.</param>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; through which editing services may be obtained.">Oggetto <see cref="T:System.IServiceProvider" /> tramite il quale è possibile ottenere i servizi di modifica.</param>
      <param name="value" vsli:raw="An instance of the value being edited.">Istanza del valore in corso di modifica.</param>
      <returns vsli:raw="The new value of the object. If the value of the object has not changed, this should return the same object it was passed.">Nuovo valore dell'oggetto. Se il valore dell'oggetto non è stato modificato, dovrebbe restituire lo stesso oggetto che è stato passato.</returns>
    </member>
    <member name="M:System.Drawing.Design.ContentAlignmentEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editing style of the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.ContentAlignmentEditor.EditValue*&quot;&gt;&lt;/xref&gt; method.">Ottiene lo stile di modifica del metodo <see cref="Overload:System.Drawing.Design.ContentAlignmentEditor.EditValue" />.</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che può essere usato per ottenere ulteriori informazioni sul contesto.</param>
      <returns vsli:raw="A &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle&quot;&gt;&lt;/xref&gt; value indicating the provided editing style. If the method to retrieve the edit style is not supported, this will return &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle.None&quot;&gt;&lt;/xref&gt;.">Valore <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> che indica lo stile di modifica fornito. Se il metodo per recuperare lo stile di modifica non è supportato, restituirà <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.</returns>
    </member>
    <member name="T:System.Drawing.Design.CursorEditor">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditor&quot; /&gt; that can perform default file searching for cursor (.cur) files.">Fornisce una classe <see cref="T:System.Drawing.Design.UITypeEditor" /> che consente di eseguire la ricerca predefinita di file del cursore (cur).</summary>
    </member>
    <member name="M:System.Drawing.Design.CursorEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.CursorEditor&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Drawing.Design.CursorEditor" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.CursorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the given object value using the editor style provided by the &lt;see cref=&quot;Overload:System.Drawing.Design.CursorEditor.GetEditStyle&quot; /&gt; method.">Modifica il valore dell'oggetto dato utilizzando lo stile dell'editor fornito dal metodo <see cref="Overload:System.Drawing.Design.CursorEditor.GetEditStyle" />.</summary>
      <param name="context" vsli:raw="A type descriptor context that can be used to provide additional context information.">Contesto di descrittore del tipo che può essere utilizzato per fornire ulteriori informazioni sul contesto.</param>
      <param name="provider" vsli:raw="A service provider object through which editing services may be obtained.">Oggetto provider di servizi tramite il quale è possibile ottenere i servizi di modifica.</param>
      <param name="value" vsli:raw="An instance of the value being edited.">Istanza del valore in corso di modifica.</param>
      <returns vsli:raw="The new value of the object. If the value of the object has not changed, this should return the same object it was passed.">Nuovo valore dell'oggetto. Se il valore dell'oggetto non è stato modificato, dovrebbe restituire lo stesso oggetto che è stato passato.</returns>
    </member>
    <member name="M:System.Drawing.Design.CursorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Retrieves the editing style of the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.CursorEditor.EditValue*&quot;&gt;&lt;/xref&gt; method.">Recupera lo stile di modifica del metodo <see cref="Overload:System.Drawing.Design.CursorEditor.EditValue" />.</summary>
      <param name="context" vsli:raw="A type descriptor context that can be used to provide additional context information.">Contesto di descrittore del tipo che può essere utilizzato per fornire ulteriori informazioni sul contesto.</param>
      <returns vsli:raw="An enum value indicating the provided editing style. If the method is not supported, this will return &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle.None&quot;&gt;&lt;/xref&gt;.">Valore di enumerazione che indica lo stile di modifica fornito. Se il metodo non è supportato, restituirà <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.</returns>
    </member>
    <member name="P:System.Drawing.Design.CursorEditor.IsDropDownResizable">
      <summary vsli:raw="Gets a value indicating whether drop-down editors should be resizable by the user.">Ottiene un valore che indica se gli editor a discesa possono essere ridimensionati dall'utente.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if drop-down editors are resizable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se gli editor a discesa sono ridimensionabili; <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="T:System.Drawing.Design.FontEditor">
      <summary vsli:raw="Provides a user interface to select and configure a &lt;see cref=&quot;T:System.Drawing.Font&quot; /&gt; object.">Fornisce un'interfaccia utente per la selezione e la configurazione di un oggetto <see cref="T:System.Drawing.Font" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.FontEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.FontEditor&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Drawing.Design.FontEditor" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.FontEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the value of the specified object using the editor style indicated by &lt;see cref=&quot;M:System.Drawing.Design.FontEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)&quot; /&gt;.">Modifica il valore dell'oggetto specificato utilizzando lo stile dell'editor indicato dal metodo <see cref="M:System.Drawing.Design.FontEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che può essere usato per ottenere ulteriori informazioni sul contesto.</param>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; that this editor can use to obtain services.">Oggetto <see cref="T:System.IServiceProvider" /> che l'editor può usare per ottenere i servizi.</param>
      <param name="value" vsli:raw="The object to edit.">Oggetto da modificare.</param>
      <returns vsli:raw="The new value of the object. If the value of the object has not changed, this should return the same object that was passed to it.">Nuovo valore dell'oggetto. Se il valore dell’oggetto non è stato modificato, esso dovrà restituire lo stesso oggetto che gli è stato passato.</returns>
    </member>
    <member name="M:System.Drawing.Design.FontEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editor style used by the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.FontEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot;&gt;&lt;/xref&gt; method.">Ottiene lo stile dell'editor usato dal metodo <see cref="M:System.Drawing.Design.FontEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che può essere usato per ottenere ulteriori informazioni sul contesto.</param>
      <returns vsli:raw="A &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle&quot;&gt;&lt;/xref&gt; value that indicates the style of editor used by &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.FontEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot;&gt;&lt;/xref&gt;.">Valore <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> che indica lo stile dell'editor utilizzato dal metodo <see cref="M:System.Drawing.Design.FontEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.</returns>
    </member>
    <member name="T:System.Drawing.Design.FontNameEditor">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditor&quot; /&gt; that paints a glyph for the font name.">Fornisce una classe <see cref="T:System.Drawing.Design.UITypeEditor" /> che disegna un'icona per il tipo di carattere.</summary>
    </member>
    <member name="M:System.Drawing.Design.FontNameEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.FontNameEditor&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Drawing.Design.FontNameEditor" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.FontNameEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Determines if this editor supports the painting of a representation of an object's value.">Determina se l'editor supporta la rappresentazione grafica del valore di un oggetto.</summary>
      <param name="context" vsli:raw="A type descriptor context that can be used to provide additional context information.">Contesto di descrittore del tipo che può essere utilizzato per fornire ulteriori informazioni sul contesto.</param>
      <returns vsli:raw="&lt;code data-dev-comment-type=&quot;langword&quot;&gt;true&lt;/code&gt; if &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.FontNameEditor.PaintValue*&quot;&gt;&lt;/xref&gt; is implemented; otherwise, &lt;code data-dev-comment-type=&quot;langword&quot;&gt;false&lt;/code&gt;.">
        <see langword="true" /> se <see cref="Overload:System.Drawing.Design.FontNameEditor.PaintValue" /> è implementato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.FontNameEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary vsli:raw="Paints a representative value of the given object to the provided canvas. Painting should be done within the boundaries of the provided rectangle.">Esegue una rappresentazione grafica del valore dell'oggetto sulla superficie fornita. La rappresentazione grafica deve essere eseguita all'interno dei limiti del rettangolo specificato.</summary>
      <param name="e" vsli:raw="What to paint and where to paint it.">Che cosa disegnare e in quale posizione.</param>
    </member>
    <member name="T:System.Drawing.Design.IconEditor">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditor&quot; /&gt; for visually choosing an icon.">Fornisce una classe <see cref="T:System.Drawing.Design.UITypeEditor" /> per consentire di scegliere visivamente un'icona.</summary>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.IconEditor&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Drawing.Design.IconEditor" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.CreateExtensionsString(System.String[],System.String)">
      <summary vsli:raw="Creates a string representing the valid file extensions for icons.">Crea una stringa che rappresenta le estensioni di file valide per le icone.</summary>
      <param name="extensions" vsli:raw="An array of strings holding valid file extensions.">Matrice di stringhe contenente le estensioni di file valide.</param>
      <param name="sep" vsli:raw="A string that specifies the separator character.">Stringa che specifica il carattere separatore.</param>
      <returns vsli:raw="A string containing the icon file extensions, or &lt;see langword=&quot;null&quot; /&gt; if &lt;paramref name=&quot;extensions&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or empty.">Stringa contenente le estensioni di file per le icone oppure <see langword="null" /> se <paramref name="extensions" /> è <see langword="null" /> o vuoto.</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.CreateFilterEntry(System.Drawing.Design.IconEditor)">
      <summary vsli:raw="Creates a filter string for the file dialog box.">Crea una stringa di filtro per la finestra di dialogo dei file.</summary>
      <param name="editor" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.IconEditor&quot; /&gt; for which the filter string will be created.">La classe <see cref="T:System.Drawing.Design.IconEditor" /> per la quale verrà creata la stringa di filtro.</param>
      <returns vsli:raw="The filter string, created from the string returned by &lt;see cref=&quot;M:System.Drawing.Design.IconEditor.CreateExtensionsString(System.String[],System.String)&quot; /&gt;.">Stringa di filtro creata dalla stringa restituita da <see cref="M:System.Drawing.Design.IconEditor.CreateExtensionsString(System.String[],System.String)" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the given object value using the editor style provided by the &lt;see cref=&quot;M:System.Drawing.Design.IconEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)&quot; /&gt; method.">Modifica il valore dell'oggetto dato utilizzando lo stile dell'editor fornito dal metodo <see cref="M:System.Drawing.Design.IconEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <param name="context" vsli:raw="A type descriptor context that can be used to provide additional context information.">Contesto di descrittore del tipo che può essere utilizzato per fornire ulteriori informazioni sul contesto.</param>
      <param name="provider" vsli:raw="A service provider object through which editing services may be obtained.">Oggetto provider di servizi tramite il quale è possibile ottenere i servizi di modifica.</param>
      <param name="value" vsli:raw="An instance of the value being edited.">Istanza del valore in corso di modifica.</param>
      <returns vsli:raw="The new value of the object. If the value of the object has not changed, this should return the same object it was passed.">Nuovo valore dell'oggetto. Se il valore dell'oggetto non è stato modificato, dovrebbe restituire lo stesso oggetto che è stato passato.</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Retrieves the editing style of the &lt;see cref=&quot;Overload:System.Drawing.Design.IconEditor.EditValue&quot; /&gt; method.">Recupera lo stile di modifica del metodo <see cref="Overload:System.Drawing.Design.IconEditor.EditValue" />.</summary>
      <param name="context" vsli:raw="A type descriptor context that can be used to provide additional context information.">Contesto di descrittore del tipo che può essere utilizzato per fornire ulteriori informazioni sul contesto.</param>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditorEditStyle&quot; /&gt; values indicating the provided editing style.">Uno dei valori di <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> che indica lo stile di modifica fornito.</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.GetExtensions">
      <summary vsli:raw="Retrieves an array of valid file extensions for icons.">Recupera una matrice di estensioni di file valide per le icone.</summary>
      <returns vsli:raw="An array of valid file extensions for icons.">Matrice di estensioni di file valide per le icone.</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.GetFileDialogDescription">
      <summary vsli:raw="Gets the description for the default file list filter provided by this editor.">Ottiene la descrizione per il filtro dell'elenco file predefinito fornito dall'editor.</summary>
      <returns vsli:raw="The description for the default type of files to filter the file list for.">La descrizione del tipo predefinito di file da ricercare applicando un filtro all'elenco file.</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Determines if this editor supports the painting of a representation of an object's value.">Determina se l'editor supporta la rappresentazione grafica del valore di un oggetto.</summary>
      <param name="context" vsli:raw="A type descriptor context that can be used to provide additional context information.">Contesto di descrittore del tipo che può essere utilizzato per fornire ulteriori informazioni sul contesto.</param>
      <returns vsli:raw="&lt;code data-dev-comment-type=&quot;langword&quot;&gt;true&lt;/code&gt; if &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditor.PaintValue*&quot;&gt;&lt;/xref&gt; is implemented; otherwise, &lt;code data-dev-comment-type=&quot;langword&quot;&gt;false&lt;/code&gt;.">
        <see langword="true" /> se <see cref="Overload:System.Drawing.Design.UITypeEditor.PaintValue" /> è implementato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.LoadFromStream(System.IO.Stream)">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.Drawing.Icon&quot; /&gt; from the given stream.">Crea una nuova classe <see cref="T:System.Drawing.Icon" /> dal flusso dato.</summary>
      <param name="stream" vsli:raw="The source stream from which the icon will be created.">Flusso di origine da cui verrà creata l'icona.</param>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Drawing.Icon&quot; /&gt;.">Oggetto <see cref="T:System.Drawing.Icon" /> appena creato.</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary vsli:raw="Paints a representative value of the given object to the provided canvas.">Esegue una rappresentazione grafica del valore dell'oggetto sulla superficie fornita.</summary>
      <param name="e" vsli:raw="What to paint and where to paint it.">Che cosa disegnare e in quale posizione.</param>
    </member>
    <member name="T:System.Drawing.Design.ImageEditor">
      <summary vsli:raw="Provides a user interface for selecting an image for a property in a property grid.">Fornisce un'interfaccia utente per la selezione di un'immagine relativa a una proprietà in una griglia delle proprietà.</summary>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ImageEditor&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Drawing.Design.ImageEditor" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.CreateExtensionsString(System.String[],System.String)">
      <summary vsli:raw="Creates a string of file name extensions using the specified array of file extensions and the specified separator.">Crea una stringa di estensioni di file utilizzando la matrice di estensioni e il separatore specificati.</summary>
      <param name="extensions" vsli:raw="The extensions to filter for.">Le estensioni in base a cui applicare un filtro di ricerca.</param>
      <param name="sep" vsli:raw="The separator to use.">Il separatore da utilizzare.</param>
      <returns vsli:raw="A string containing the specified file name extensions, each separated by the specified separator.">Una stringa contenente le estensioni di file specificate, ciascuna divisa dal separatore specificato.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.CreateFilterEntry(System.Drawing.Design.ImageEditor)">
      <summary vsli:raw="Creates a filter entry for a file dialog box's file list.">Crea una voce di filtro per l'elenco di file di una finestra di dialogo dei file.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.Drawing.Design.ImageEditor&quot; /&gt; to get the filter entry from.">Una classe <see cref="T:System.Drawing.Design.ImageEditor" /> da cui ottenere la voce di filtro.</param>
      <returns vsli:raw="The new filter entry string.">La nuova stringa della voce di filtro.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the specified object value using the edit style provided by the &lt;see cref=&quot;M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)&quot; /&gt; method.">Modifica il valore dell'oggetto specificato utilizzando lo stile dell'editor fornito dal metodo <see cref="M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che può essere usato per ottenere ulteriori informazioni sul contesto.</param>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; through which editing services can be obtained.">Interfaccia <see cref="T:System.IServiceProvider" /> tramite la quale è possibile ottenere i servizi di modifica.</param>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; being edited.">Classe <see cref="T:System.Object" /> da modificare.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; representing the new value. If the value of the object has not changed, &lt;see cref=&quot;M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot; /&gt; returns the object that was passed to it.">Classe <see cref="T:System.Object" /> che rappresenta il nuovo valore. Se il valore dell'oggetto non è stato modificato, <see cref="M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> restituirà l'oggetto che gli è stato passato.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editing style of the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot;&gt;&lt;/xref&gt; method.">Ottiene lo stile di modifica del metodo <see cref="M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che può essere usato per ottenere ulteriori informazioni sul contesto.</param>
      <returns vsli:raw="One of the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle&quot;&gt;&lt;/xref&gt; values indicating the supported editing style.">Uno dei valori di <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> che indica lo stile di modifica supportato.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.GetExtensions">
      <summary vsli:raw="Gets the extensions for the file-list filter that this editor initially uses to filter the file list.">Ottiene le estensioni per il filtro dell'elenco di file che l'editor usa inizialmente per filtrare l'elenco di file.</summary>
      <returns vsli:raw="A set of file extensions used to filter the file list.">Set di estensioni di file usate per filtrare l'elenco di file.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.GetFileDialogDescription">
      <summary vsli:raw="Gets the description for the default file-list filter provided by this editor.">Ottiene la descrizione per il filtro dell'elenco di file predefinito fornito dall'editor.</summary>
      <returns vsli:raw="The description for the default file-list filter.">Descrizione per il filtro dell'elenco di file predefinito.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.GetImageExtenders">
      <summary vsli:raw="Gets an array of supported image types.">Ottiene una matrice dei tipi di immagine supportati.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Type&quot; /&gt; representing supported image types.">Matrice di <see cref="T:System.Type" /> che rappresenta i tipi di immagine supportati.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets a value indicating whether this editor supports painting a representation of an object's value.">Ottiene un valore che indica se questo editor supporta la rappresentazione grafica del valore di un oggetto.</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che può essere usato per ottenere ulteriori informazioni sul contesto.</param>
      <returns vsli:raw="&lt;code data-dev-comment-type=&quot;langword&quot;&gt;true&lt;/code&gt; if &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.ImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)&quot;&gt;&lt;/xref&gt; is implemented; otherwise, &lt;code data-dev-comment-type=&quot;langword&quot;&gt;false&lt;/code&gt;.">
        <see langword="true" /> se <see cref="M:System.Drawing.Design.ImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)" /> è implementato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.LoadFromStream(System.IO.Stream)">
      <summary vsli:raw="Loads an image from the specified stream.">Carica un'immagine dal flusso specificato.</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; that contains the image to load.">
        <see cref="T:System.IO.Stream" /> che contiene l'immagine da caricare.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Image&quot; /&gt; that has been loaded.">
        <see cref="T:System.Drawing.Image" /> che è stato caricato.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary vsli:raw="Paints a value indicated by the specified &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.PaintValueEventArgs&quot;&gt;&lt;/xref&gt;.">Ottiene un valore indicato dalla classe <see cref="T:System.Drawing.Design.PaintValueEventArgs" /> specificata.</summary>
      <param name="e" vsli:raw="A &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.PaintValueEventArgs&quot;&gt;&lt;/xref&gt; indicating what to paint and where to paint it.">La classe <see cref="T:System.Drawing.Design.PaintValueEventArgs" /> che indica cosa disegnare e in quale posizione.</param>
    </member>
    <member name="T:System.Drawing.Design.IToolboxItemProvider">
      <summary vsli:raw="Exposes a collection of toolbox items.">Espone un insieme di elementi della casella degli strumenti.</summary>
    </member>
    <member name="P:System.Drawing.Design.IToolboxItemProvider.Items">
      <summary vsli:raw="Gets a collection of &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; objects.">Ottiene una raccolta di oggetti <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; objects.">Raccolta di oggetti <see cref="T:System.Drawing.Design.ToolboxItem" />.</returns>
    </member>
    <member name="T:System.Drawing.Design.IToolboxService">
      <summary vsli:raw="Provides methods and properties to manage and query the toolbox in the development environment.">Fornisce metodi e proprietà per gestire ed eseguire query sulla casella degli strumenti nell'ambiente di sviluppo.</summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddCreator(System.Drawing.Design.ToolboxItemCreatorCallback,System.String)">
      <summary vsli:raw="Adds a new toolbox item creator for a specified data format.">Aggiunge un nuovo creatore di elementi della casella degli strumenti per un formato di dati specificato.</summary>
      <param name="creator" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCreatorCallback&quot; /&gt; that can create a component when the toolbox item is invoked.">
        <see cref="T:System.Drawing.Design.ToolboxItemCreatorCallback" /> che consente di creare un componente quando viene richiamato l’elemento della casella degli strumenti.</param>
      <param name="format" vsli:raw="The data format that the creator handles.">Formato dati gestito dal creatore.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddCreator(System.Drawing.Design.ToolboxItemCreatorCallback,System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Adds a new toolbox item creator for a specified data format and designer host.">Aggiunge un nuovo creatore di elementi della casella degli strumenti per un formato di dati specificato e un host di progettazione.</summary>
      <param name="creator" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCreatorCallback&quot; /&gt; that can create a component when the toolbox item is invoked.">
        <see cref="T:System.Drawing.Design.ToolboxItemCreatorCallback" /> che consente di creare un componente quando viene richiamato l’elemento della casella degli strumenti.</param>
      <param name="format" vsli:raw="The data format that the creator handles.">Formato dati gestito dal creatore.</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that represents the designer host to associate with the creator.">Oggetto <see cref="T:System.ComponentModel.Design.IDesignerHost" /> che rappresenta l'host di progettazione da associare al creatore.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddLinkedToolboxItem(System.Drawing.Design.ToolboxItem,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Adds the specified project-linked toolbox item to the toolbox.">Aggiunge alla casella degli strumenti un elemento collegato al progetto specificato.</summary>
      <param name="toolboxItem" vsli:raw="The linked &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to add to the toolbox.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> collegato da aggiungere alla casella degli strumenti.</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; for the current design document.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> per il documento di progettazione corrente.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddLinkedToolboxItem(System.Drawing.Design.ToolboxItem,System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Adds the specified project-linked toolbox item to the toolbox in the specified category.">Aggiunge l'elemento della casella degli strumenti collegato al progetto specificato nella categoria indicata.</summary>
      <param name="toolboxItem" vsli:raw="The linked &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to add to the toolbox.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> collegato da aggiungere alla casella degli strumenti.</param>
      <param name="category" vsli:raw="The toolbox item category to add the toolbox item to.">Categoria dell'elemento della casella degli strumenti cui aggiungere l'elemento.</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; for the current design document.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> per il documento di progettazione corrente.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Adds the specified toolbox item to the toolbox.">Aggiunge l'elemento specificato alla casella degli strumenti.</summary>
      <param name="toolboxItem" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to add to the toolbox.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> da aggiungere alla casella degli strumenti.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.AddToolboxItem(System.Drawing.Design.ToolboxItem,System.String)">
      <summary vsli:raw="Adds the specified toolbox item to the toolbox in the specified category.">Aggiunge alla casella degli strumenti l'elemento specificato nella categoria indicata.</summary>
      <param name="toolboxItem" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to add to the toolbox.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> da aggiungere alla casella degli strumenti.</param>
      <param name="category" vsli:raw="The toolbox item category to add the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to.">Categoria dell’elemento della casella degli strumenti a cui aggiungere <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.DeserializeToolboxItem(System.Object)">
      <summary vsli:raw="Gets a toolbox item from the specified object that represents a toolbox item in serialized form.">Ottiene un elemento della casella degli strumenti dall’oggetto specificato che rappresenta un elemento della casella degli strumenti in un form serializzato.</summary>
      <param name="serializedObject" vsli:raw="The object that contains the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to retrieve.">Oggetto che contiene l’elemento <see cref="T:System.Drawing.Design.ToolboxItem" /> da recuperare.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; created from the serialized object.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> creato dall’oggetto serializzato.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.DeserializeToolboxItem(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Gets a toolbox item from the specified object that represents a toolbox item in serialized form, using the specified designer host.">Recupera un elemento della casella degli strumenti dall’oggetto specificato che rappresenta un elemento della casella degli strumenti in un form serializzato, utilizzando l’host di progettazione specificato.</summary>
      <param name="serializedObject" vsli:raw="The object that contains the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to retrieve.">Oggetto che contiene l’elemento <see cref="T:System.Drawing.Design.ToolboxItem" /> da recuperare.</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; to associate with this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Oggetto <see cref="T:System.ComponentModel.Design.IDesignerHost" /> da associare all'oggetto <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; created from deserialization.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> creato dalla deserializzazione.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetSelectedToolboxItem">
      <summary vsli:raw="Gets the currently selected toolbox item.">Ottiene l'elemento della casella degli strumenti correntemente selezionato.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; that is currently selected, or &lt;see langword=&quot;null&quot; /&gt; if no toolbox item has been selected.">Oggetto <see cref="T:System.Drawing.Design.ToolboxItem" /> correntemente selezionato o <see langword="null" /> se non è selezionato alcun elemento della casella degli strumenti.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetSelectedToolboxItem(System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Gets the currently selected toolbox item if it is available to all designers, or if it supports the specified designer.">Ottiene l’elemento della casella degli strumenti correntemente selezionato se disponibile in tutte le finestre di progettazione o se supporta la finestra di progettazione specificata.</summary>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that the selected tool must be associated with for it to be returned.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> a cui deve essere associato l’elemento selezionato per essere restituito.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; that is currently selected, or &lt;see langword=&quot;null&quot; /&gt; if no toolbox item is currently selected.">Oggetto <see cref="T:System.Drawing.Design.ToolboxItem" /> correntemente selezionato o <see langword="null" /> se non è attualmente selezionato alcun elemento della casella degli strumenti.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems">
      <summary vsli:raw="Gets the entire collection of toolbox items from the toolbox.">Ottiene l’insieme completo di elementi dalla casella degli strumenti.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCollection&quot; /&gt; that contains the current toolbox items.">
        <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> contenente gli elementi della casella degli strumenti correnti.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems(System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Gets the collection of toolbox items that are associated with the specified designer host from the toolbox.">Ottiene dalla casella degli strumenti l’insieme degli elementi associati all’host di progettazione specificato.</summary>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that is associated with the toolbox items to retrieve.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> associato agli elementi della casella degli strumenti da recuperare.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCollection&quot; /&gt; that contains the current toolbox items that are associated with the specified designer host.">
        <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> contenente gli elementi della casella degli strumenti correnti associati all’host di progettazione specificato.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems(System.String)">
      <summary vsli:raw="Gets a collection of toolbox items from the toolbox that match the specified category.">Ottiene dalla casella degli strumenti un insieme di elementi corrispondenti alla categoria specificata.</summary>
      <param name="category" vsli:raw="The toolbox item category to retrieve all the toolbox items from.">Categoria dell’elemento della casella degli strumenti da cui recuperare tutti gli elementi della casella degli strumenti.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCollection&quot; /&gt; that contains the current toolbox items that are associated with the specified category.">
        <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> contenente gli elementi della casella degli strumenti correnti associati alla categoria specificata.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.GetToolboxItems(System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Gets the collection of toolbox items that are associated with the specified designer host and category from the toolbox.">Ottiene dalla casella degli strumenti l’insieme degli elementi associati all’host di progettazione e alla categoria specificati.</summary>
      <param name="category" vsli:raw="The toolbox item category to retrieve the toolbox items from.">Categoria dell’elemento della casella degli strumenti da cui recuperare gli elementi della casella degli strumenti.</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that is associated with the toolbox items to retrieve.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> associato agli elementi della casella degli strumenti da recuperare.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCollection&quot; /&gt; that contains the current toolbox items that are associated with the specified category and designer host.">
        <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> contenente gli elementi della casella degli strumenti correnti associati all’host di progettazione e alla categoria specificati.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsSupported(System.Object,System.Collections.ICollection)">
      <summary vsli:raw="Gets a value indicating whether the specified object which represents a serialized toolbox item matches the specified attributes.">Ottiene un valore che indica se l’oggetto specificato che rappresenta un elemento serializzato della casella degli strumenti corrisponde agli attributi specificati.</summary>
      <param name="serializedObject" vsli:raw="The object that contains the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to retrieve.">Oggetto che contiene l’elemento <see cref="T:System.Drawing.Design.ToolboxItem" /> da recuperare.</param>
      <param name="filterAttributes" vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; that contains the attributes to test the serialized object for.">
        <see cref="T:System.Collections.ICollection" /> contenente gli attributi per cui verificare l’oggetto serializzato.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object matches the specified attributes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l’oggetto corrisponde agli attributi specificati; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsSupported(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Gets a value indicating whether the specified object which represents a serialized toolbox item can be used by the specified designer host.">Ottiene un valore che indica se l’oggetto specificato che rappresenta un elemento serializzato della casella degli strumenti può essere utilizzato dall’host di progettazione specificato.</summary>
      <param name="serializedObject" vsli:raw="The object that contains the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to retrieve.">Oggetto che contiene l’elemento <see cref="T:System.Drawing.Design.ToolboxItem" /> da recuperare.</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; to test for support for the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> di cui verificare il supporto per <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified object is compatible with the specified designer host; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l’oggetto specificato è compatibile con l’host di progettazione specificato; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsToolboxItem(System.Object)">
      <summary vsli:raw="Gets a value indicating whether the specified object is a serialized toolbox item.">Ottiene un valore che indica se l'oggetto specificato è un elemento serializzato della casella degli strumenti.</summary>
      <param name="serializedObject" vsli:raw="The object to inspect.">Oggetto da esaminare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object contains a toolbox item object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l’oggetto contiene un oggetto elemento della casella degli strumenti; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.IsToolboxItem(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Gets a value indicating whether the specified object is a serialized toolbox item, using the specified designer host.">Ottiene un valore che indica se l'oggetto specificato è un elemento serializzato della casella degli strumenti, utilizzando l’host di progettazione specificato.</summary>
      <param name="serializedObject" vsli:raw="The object to inspect.">Oggetto da esaminare.</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that is making this request.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> che effettua la richiesta.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object contains a toolbox item object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l’oggetto contiene un oggetto elemento della casella degli strumenti; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.Refresh">
      <summary vsli:raw="Refreshes the state of the toolbox items.">Aggiorna lo stato degli elementi della casella degli strumenti.</summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveCreator(System.String)">
      <summary vsli:raw="Removes a previously added toolbox item creator of the specified data format.">Rimuove un creatore di elementi della casella degli strumenti aggiunto in precedenza, del formato dati specificato.</summary>
      <param name="format" vsli:raw="The data format of the creator to remove.">Formato dati del creatore da rimuovere.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveCreator(System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Removes a previously added toolbox creator that is associated with the specified data format and the specified designer host.">Rimuove un creatore della casella degli strumenti aggiunto in precedenza associato al formato di dati specificato e all’host di progettazione indicato.</summary>
      <param name="format" vsli:raw="The data format of the creator to remove.">Formato dati del creatore da rimuovere.</param>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that is associated with the creator to remove.">
        <see cref="T:System.ComponentModel.Design.IDesignerHost" /> associato al creatore da rimuovere.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Removes the specified toolbox item from the toolbox.">Rimuove dalla casella degli strumenti l'elemento della casella degli strumenti specificato.</summary>
      <param name="toolboxItem" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to remove from the toolbox.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> da rimuovere dalla casella degli strumenti.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.RemoveToolboxItem(System.Drawing.Design.ToolboxItem,System.String)">
      <summary vsli:raw="Removes the specified toolbox item from the toolbox.">Rimuove dalla casella degli strumenti l'elemento della casella degli strumenti specificato.</summary>
      <param name="toolboxItem" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to remove from the toolbox.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> da rimuovere dalla casella degli strumenti.</param>
      <param name="category" vsli:raw="The toolbox item category to remove the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; from.">Categoria dell’elemento della casella degli strumenti da cui rimuovere l’elemento <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SelectedToolboxItemUsed">
      <summary vsli:raw="Notifies the toolbox service that the selected tool has been used.">Notifica al servizio della casella degli strumenti che lo strumento selezionato è stato utilizzato.</summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SerializeToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Gets a serializable object that represents the specified toolbox item.">Ottiene un oggetto serializzabile che rappresenta l'elemento della casella degli strumenti specificato.</summary>
      <param name="toolboxItem" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to serialize.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> da serializzare.</param>
      <returns vsli:raw="An object that represents the specified &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Oggetto che rappresenta l’elemento <see cref="T:System.Drawing.Design.ToolboxItem" /> specificato.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SetCursor">
      <summary vsli:raw="Sets the current application's cursor to a cursor that represents the currently selected tool.">Imposta il cursore dell'applicazione corrente per rappresentare lo strumento correntemente selezionato.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the cursor is set by the currently selected tool, &lt;see langword=&quot;false&quot; /&gt; if there is no tool selected and the cursor is set to the standard windows cursor.">
        <see langword="true" /> se il cursore è impostato dallo strumento correntemente selezionato, <see langword="false" /> se non sono selezionati strumenti e se il cursore è impostato sul cursore Windows standard.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.SetSelectedToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Selects the specified toolbox item.">Seleziona l'elemento della casella degli strumenti specificato.</summary>
      <param name="toolboxItem" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to select.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> da selezionare.</param>
    </member>
    <member name="P:System.Drawing.Design.IToolboxService.CategoryNames">
      <summary vsli:raw="Gets the names of all the tool categories currently on the toolbox.">Recupera i nomi di tutte le categorie degli strumenti presenti correntemente nella casella degli strumenti.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.CategoryNameCollection&quot; /&gt; containing the tool categories.">
        <see cref="T:System.Drawing.Design.CategoryNameCollection" /> contenente le categorie degli strumenti.</returns>
    </member>
    <member name="P:System.Drawing.Design.IToolboxService.SelectedCategory">
      <summary vsli:raw="Gets or sets the name of the currently selected tool category from the toolbox.">Recupera o imposta il nome della categoria degli strumenti correntemente selezionata nella casella degli strumenti.</summary>
      <returns vsli:raw="The name of the currently selected category.">Nome della categoria attualmente selezionata.</returns>
    </member>
    <member name="T:System.Drawing.Design.IToolboxUser">
      <summary vsli:raw="Defines an interface for setting the currently selected toolbox item and indicating whether a designer supports a particular toolbox item.">Definisce un'interfaccia che consente di impostare l'elemento della casella degli strumenti correntemente selezionato e indicare se una finestra di progettazione supporta un elemento della casella degli strumenti particolare.</summary>
    </member>
    <member name="M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Gets a value indicating whether the specified tool is supported by the current designer.">Ottiene un valore che indica se lo strumento specificato è supportato dalla finestra di progettazione corrente.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to be tested for toolbox support.">L'oggetto <see cref="T:System.Drawing.Design.ToolboxItem" /> da verificare in funzione del supporto della casella degli strumenti.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the tool is supported by the toolbox and can be enabled; &lt;see langword=&quot;false&quot; /&gt; if the document designer does not know how to use the tool.">
        <see langword="true" /> se lo strumento è supportato dalla casella degli strumenti e può essere abilitato; <see langword="false" /> se la finestra di progettazione del documento ignora le modalità di utilizzo dello strumento.</returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Selects the specified tool.">Seleziona lo strumento specificato.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to select.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> da selezionare.</param>
    </member>
    <member name="T:System.Drawing.Design.MetafileEditor">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditor&quot; /&gt; that can perform default file searching for metafile (.emf) files.">Fornisce un oggetto <see cref="T:System.Drawing.Design.UITypeEditor" /> che consente di eseguire la ricerca predefinita di metafile (emf).</summary>
    </member>
    <member name="M:System.Drawing.Design.MetafileEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.MetafileEditor&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Drawing.Design.MetafileEditor" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.MetafileEditor.GetExtensions">
      <summary vsli:raw="Gets the extensions for the file-list filter that this editor initially uses to filter the file list.">Ottiene le estensioni per il filtro dell'elenco di file che l'editor usa inizialmente per filtrare l'elenco di file.</summary>
      <returns vsli:raw="A set of file extensions used to filter the file list.">Set di estensioni di file usate per filtrare l'elenco di file.</returns>
    </member>
    <member name="M:System.Drawing.Design.MetafileEditor.GetFileDialogDescription">
      <summary vsli:raw="Gets the description for the default file-list filter provided by this editor.">Ottiene la descrizione per il filtro dell'elenco di file predefinito fornito dall'editor.</summary>
      <returns vsli:raw="The description for the default file-list filter.">Descrizione per il filtro dell'elenco di file predefinito.</returns>
    </member>
    <member name="M:System.Drawing.Design.MetafileEditor.LoadFromStream(System.IO.Stream)">
      <summary vsli:raw="Loads an image from the specified stream.">Carica un'immagine dal flusso specificato.</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; that contains the image to load.">
        <see cref="T:System.IO.Stream" /> che contiene l'immagine da caricare.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Image&quot; /&gt; that has been loaded.">
        <see cref="T:System.Drawing.Image" /> che è stato caricato.</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Drawing.Design.ToolboxItem.ComponentsCreated&quot; /&gt; event that occurs when components are added to the toolbox.">Fornisce i dati per l'evento <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreated" /> che si verifica quando vengono aggiunti componenti alla casella degli strumenti.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxComponentsCreatedEventArgs.#ctor(System.ComponentModel.IComponent[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs" />.</summary>
      <param name="components" vsli:raw="The components to include in the toolbox.">I componenti da includere nella casella degli strumenti.</param>
    </member>
    <member name="P:System.Drawing.Design.ToolboxComponentsCreatedEventArgs.Components">
      <summary vsli:raw="Gets or sets an array containing the components to add to the toolbox.">Ottiene o imposta una matrice che contiene i componenti da aggiungere alla casella degli strumenti.</summary>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; indicating the components to add to the toolbox.">Una matrice di tipo <see cref="T:System.ComponentModel.IComponent" /> che indica i componenti da aggiungere alla casella degli strumenti.</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatedEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Drawing.Design.ToolboxItem.ComponentsCreated&quot; /&gt; event.">Rappresenta il metodo che gestisce l'evento <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreated" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Origine dell'evento.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs&quot; /&gt; that provides data for the event.">Oggetto <see cref="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs" /> che fornisce i dati per l'evento.</param>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Drawing.Design.ToolboxItem.ComponentsCreating&quot; /&gt; event that occurs when components are added to the toolbox.">Fornisce i dati per l'evento <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreating" /> che si verifica quando vengono aggiunti componenti alla casella degli strumenti.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxComponentsCreatingEventArgs.#ctor(System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs" />.</summary>
      <param name="host" vsli:raw="The designer host that is making the request.">L’host di progettazione che effettua la richiesta.</param>
    </member>
    <member name="P:System.Drawing.Design.ToolboxComponentsCreatingEventArgs.DesignerHost">
      <summary vsli:raw="Gets or sets an instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that made the request to create toolbox components.">Ottiene o imposta un'istanza dell'oggetto <see cref="T:System.ComponentModel.Design.IDesignerHost" /> che ha effettuato la richiesta di creazione dei componenti della casella degli strumenti.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; that made the request to create toolbox components, or &lt;see langword=&quot;null&quot; /&gt; if no designer host was provided to the toolbox item.">L'oggetto <see cref="T:System.ComponentModel.Design.IDesignerHost" /> che ha effettuato la richiesta di creazione dei componenti della casella degli strumenti, o <see langword="null" /> se non è stato fornito alcun host di progettazione all'elemento della casella degli strumenti.</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxComponentsCreatingEventHandler">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.Drawing.Design.ToolboxItem.ComponentsCreating&quot; /&gt; event.">Rappresenta il metodo che gestisce l'evento <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreating" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Origine dell'evento.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs&quot; /&gt; that provides data for the event.">Oggetto <see cref="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs" /> che fornisce i dati per l'evento.</param>
    </member>
    <member name="T:System.Drawing.Design.ToolboxItem">
      <summary vsli:raw="Provides a base implementation of a toolbox item.">Fornisce un'implementazione base di un elemento della casella degli strumenti.</summary>
    </member>
    <member name="E:System.Drawing.Design.ToolboxItem.ComponentsCreated">
      <summary vsli:raw="Occurs immediately after components are created.">Si verifica immediatamente dopo la creazione dei componenti.</summary>
    </member>
    <member name="E:System.Drawing.Design.ToolboxItem.ComponentsCreating">
      <summary vsli:raw="Occurs when components are about to be created.">Si verifica quando i componenti stanno per essere creati.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; class that creates the specified type of component.">Inizializza una nuova istanza della classe <see cref="T:System.Drawing.Design.ToolboxItem" /> che consente di creare il tipo di componente specificato.</summary>
      <param name="toolType" vsli:raw="The type of &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; that the toolbox item creates.">Il tipo di interfaccia <see cref="T:System.ComponentModel.IComponent" /> che viene creata dall'elemento della casella di controllo.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; was locked.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> era bloccato.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CheckUnlocked">
      <summary vsli:raw="Throws an exception if the toolbox item is currently locked.">Genera un'eccezione se l'elemento della casella degli strumenti è attualmente bloccato.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; is locked.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> è bloccato.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponents">
      <summary vsli:raw="Creates the components that the toolbox item is configured to create.">Crea i componenti la cui creazione è configurata nell'elemento della casella degli strumenti.</summary>
      <returns vsli:raw="An array of created &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects.">Matrice di oggetti <see cref="T:System.ComponentModel.IComponent" /> creati.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponents(System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Creates the components that the toolbox item is configured to create, using the specified designer host.">Crea i componenti la cui creazione è configurata nell'elemento della casella degli strumenti tramite l'host di progettazione specificato.</summary>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; to use when creating the components.">L'oggetto <see cref="T:System.ComponentModel.Design.IDesignerHost" /> da utilizzare quando si creano i componenti.</param>
      <returns vsli:raw="An array of created &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects.">Matrice di oggetti <see cref="T:System.ComponentModel.IComponent" /> creati.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponents(System.ComponentModel.Design.IDesignerHost,System.Collections.IDictionary)">
      <summary vsli:raw="Creates the components that the toolbox item is configured to create, using the specified designer host and default values.">Crea i componenti la cui creazione è configurata nell'elemento della casella degli strumenti tramite l'host di progettazione specificato e i valori predefiniti.</summary>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; to use when creating the components.">L'oggetto <see cref="T:System.ComponentModel.Design.IDesignerHost" /> da utilizzare quando si creano i componenti.</param>
      <param name="defaultValues" vsli:raw="A dictionary of property name/value pairs of default values with which to initialize the component.">Dizionario della coppia nome/valore della proprietà dei valori predefiniti con cui inizializzare il componente.</param>
      <returns vsli:raw="An array of created &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects.">Matrice di oggetti <see cref="T:System.ComponentModel.IComponent" /> creati.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponentsCore(System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Creates a component or an array of components when the toolbox item is invoked.">Crea un componente o una matrice di componenti quando viene richiamato l'elemento della casella degli strumenti.</summary>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; to host the toolbox item.">Oggetto <see cref="T:System.ComponentModel.Design.IDesignerHost" /> in cui inserire l'elemento della casella degli strumenti.</param>
      <returns vsli:raw="An array of created &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects.">Matrice di oggetti <see cref="T:System.ComponentModel.IComponent" /> creati.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.CreateComponentsCore(System.ComponentModel.Design.IDesignerHost,System.Collections.IDictionary)">
      <summary vsli:raw="Creates an array of components when the toolbox item is invoked.">Crea una matrice di componenti quando viene richiamato l'elemento della casella degli strumenti.</summary>
      <param name="host" vsli:raw="The designer host to use when creating components.">Host di progettazione da usare quando si creano i componenti.</param>
      <param name="defaultValues" vsli:raw="A dictionary of property name/value pairs of default values with which to initialize the component.">Dizionario della coppia nome/valore della proprietà dei valori predefiniti con cui inizializzare il componente.</param>
      <returns vsli:raw="An array of created &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects.">Matrice di oggetti <see cref="T:System.ComponentModel.IComponent" /> creati.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Deserialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Loads the state of the toolbox item from the specified serialization information object.">Carica lo stato dell'elemento della casella degli strumenti dall'oggetto di informazioni di serializzazione specificato.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to load from.">L'oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> da cui eseguire il caricamento.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that indicates the stream characteristics.">Un oggetto <see cref="T:System.Runtime.Serialization.StreamingContext" /> che indica le caratteristiche del flusso.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Equals(System.Object)">
      <summary vsli:raw="Determines whether two &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; instances are equal.">Determina se due istanze di <see cref="T:System.Drawing.Design.ToolboxItem" /> sono uguali.</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to compare with the current &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Oggetto <see cref="T:System.Drawing.Design.ToolboxItem" /> da confrontare con l'oggetto <see cref="T:System.Drawing.Design.ToolboxItem" /> corrente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Drawing.Design.ToolboxItem" /> specificato è uguale all'oggetto <see cref="T:System.Drawing.Design.ToolboxItem" /> corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.FilterPropertyValue(System.String,System.Object)">
      <summary vsli:raw="Filters a property value before returning it.">Filtra un valore della proprietà prima di restituirlo.</summary>
      <param name="propertyName" vsli:raw="The name of the property to filter.">Nome della proprietà da filtrare.</param>
      <param name="value" vsli:raw="The value against which to filter the property.">Valore con cui filtrare la proprietà.</param>
      <returns vsli:raw="A filtered property value.">Valore della proprietà filtrato.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">Restituisce il codice hash per l'istanza.</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Codice hash per l'oggetto <see cref="T:System.Drawing.Design.ToolboxItem" /> corrente.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.GetType(System.ComponentModel.Design.IDesignerHost)">
      <summary vsli:raw="Enables access to the type associated with the toolbox item.">Permette l'accesso al tipo associato all'elemento della casella degli strumenti.</summary>
      <param name="host" vsli:raw="The designer host to query for &lt;see cref=&quot;T:System.ComponentModel.Design.ITypeResolutionService&quot; /&gt;.">Host di progettazione per eseguire query per l'interfaccia <see cref="T:System.ComponentModel.Design.ITypeResolutionService" />.</param>
      <returns vsli:raw="The type associated with the toolbox item.">Tipo associato all'elemento della casella degli strumenti.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.GetType(System.ComponentModel.Design.IDesignerHost,System.Reflection.AssemblyName,System.String,System.Boolean)">
      <summary vsli:raw="Creates an instance of the specified type, optionally using a specified designer host and assembly name.">Crea un'istanza del tipo specificato, specificando un host di progettazione e un nome assembly, se lo si desidera.</summary>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesignerHost&quot; /&gt; for the current document. This can be &lt;see langword=&quot;null&quot; /&gt;.">L'oggetto <see cref="T:System.ComponentModel.Design.IDesignerHost" /> per il documento corrente. Può essere <see langword="null" />.</param>
      <param name="assemblyName" vsli:raw="An &lt;see cref=&quot;T:System.Reflection.AssemblyName&quot; /&gt; that indicates the assembly that contains the type to load. This can be &lt;see langword=&quot;null&quot; /&gt;.">Un <see cref="T:System.Reflection.AssemblyName" /> che indica l'assembly contenente il tipo da caricare. Può essere <see langword="null" />.</param>
      <param name="typeName" vsli:raw="The name of the type to create an instance of.">Il nome del tipo di cui creare un'istanza.</param>
      <param name="reference" vsli:raw="A value indicating whether or not to add a reference to the assembly that contains the specified type to the designer host's set of references.">Un valore che indica se aggiungere o no, alla serie di riferimenti dell'host di progettazione, un riferimento all'assembly contenente il tipo specificato.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;typeName&quot; /&gt; is not specified.">
        <paramref name="typeName" /> non specificato.</exception>
      <returns vsli:raw="An instance of the specified type, if it can be located.">Istanza del tipo specificato, se può essere individuato.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Initialize(System.Type)">
      <summary vsli:raw="Initializes the current toolbox item with the specified type to create.">Inizializza l'elemento della casella degli strumenti corrente con il tipo specificato da creare.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that the toolbox item creates.">Oggetto <see cref="T:System.Type" /> che viene creato dall'elemento della casella degli strumenti.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; was locked.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> era bloccato.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Lock">
      <summary vsli:raw="Locks the toolbox item and prevents changes to its properties.">Blocca l'elemento della casella di controllo e impedisce modifiche alle relative proprietà.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.OnComponentsCreated(System.Drawing.Design.ToolboxComponentsCreatedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Drawing.Design.ToolboxItem.ComponentsCreated&quot; /&gt; event.">Genera l'evento <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreated" />.</summary>
      <param name="args" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs&quot; /&gt; that provides data for the event.">Oggetto <see cref="T:System.Drawing.Design.ToolboxComponentsCreatedEventArgs" /> che fornisce i dati per l'evento.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.OnComponentsCreating(System.Drawing.Design.ToolboxComponentsCreatingEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Drawing.Design.ToolboxItem.ComponentsCreating&quot; /&gt; event.">Genera l'evento <see cref="E:System.Drawing.Design.ToolboxItem.ComponentsCreating" />.</summary>
      <param name="args" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs&quot; /&gt; that provides data for the event.">Oggetto <see cref="T:System.Drawing.Design.ToolboxComponentsCreatingEventArgs" /> che fornisce i dati per l'evento.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.Serialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Saves the state of the toolbox item to the specified serialization information object.">Salva lo stato dell'elemento della casella degli strumenti nell'oggetto informazioni di serializzazione specificato.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to save to.">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> in cui effettuare il salvataggio.</param>
      <param name="context" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that indicates the stream characteristics.">Un oggetto <see cref="T:System.Runtime.Serialization.StreamingContext" /> che indica le caratteristiche del flusso.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)&quot; /&gt; method.">Per una descrizione di questo membro, vedere il metodo <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to populate with data.">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> da popolare con i dati.</param>
      <param name="context" vsli:raw="The destination (see &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;) for this serialization.">Destinazione della serializzazione (vedere <see cref="T:System.Runtime.Serialization.StreamingContext" />).</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.ToString">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the current &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Restituisce un oggetto <see cref="T:System.String" /> che rappresenta l'oggetto <see cref="T:System.Drawing.Design.ToolboxItem" /> corrente.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the current &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Oggetto <see cref="T:System.String" /> che rappresenta l'oggetto <see cref="T:System.Drawing.Design.ToolboxItem" /> corrente.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.ValidatePropertyType(System.String,System.Object,System.Type,System.Boolean)">
      <summary vsli:raw="Validates that an object is of a given type.">Convalida che un oggetto è di un tipo specificato.</summary>
      <param name="propertyName" vsli:raw="The name of the property to validate.">Nome della proprietà da convalidare.</param>
      <param name="value" vsli:raw="Optional value against which to validate.">Valore facoltativo con cui convalidare.</param>
      <param name="expectedType" vsli:raw="The expected type of the property.">Tipo previsto della proprietà.</param>
      <param name="allowNull" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to allow &lt;see langword=&quot;null&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per consentire <see langword="null" />; in caso contrario, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, and &lt;paramref name=&quot;allowNull&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;.">
        <paramref name="value" /> è <see langword="null" /> e <paramref name="allowNull" /> è <see langword="false" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is not the type specified by &lt;paramref name=&quot;expectedType&quot; /&gt;.">
        <paramref name="value" /> non è il tipo specificato da <paramref name="expectedType" />.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.ValidatePropertyValue(System.String,System.Object)">
      <summary vsli:raw="Validates a property before it is assigned to the property dictionary.">Convalida una proprietà prima che venga assegnata al dizionario della proprietà.</summary>
      <param name="propertyName" vsli:raw="The name of the property to validate.">Nome della proprietà da convalidare.</param>
      <param name="value" vsli:raw="The value against which to validate.">Valore con cui convalidare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, and &lt;paramref name=&quot;propertyName&quot; /&gt; is &quot;IsTransient&quot;.">
        <paramref name="value" /> è <see langword="null" /> e <paramref name="propertyName" /> è "IsTransient".</exception>
      <returns vsli:raw="The value used to perform validation.">Valore usato per eseguire la convalida.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.AssemblyName">
      <summary vsli:raw="Gets or sets the name of the assembly that contains the type or types that the toolbox item creates.">Ottiene o imposta il nome dell'assembly che contiene il tipo o i tipi creati dall'elemento della casella di controllo.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Reflection.AssemblyName&quot; /&gt; that indicates the assembly containing the type or types to create.">Un <see cref="T:System.Reflection.AssemblyName" /> che indica l'assembly contenente il tipo o i tipi da creare.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Bitmap">
      <summary vsli:raw="Gets or sets a bitmap to represent the toolbox item in the toolbox.">Ottiene o imposta un'immagine bitmap per rappresentare l'elemento della casella degli strumenti.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Bitmap&quot; /&gt; that represents the toolbox item in the toolbox.">Oggetto <see cref="T:System.Drawing.Bitmap" /> che rappresenta l'elemento della casella degli strumenti.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Company">
      <summary vsli:raw="Gets or sets the company name for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Ottiene o imposta il nome della società per questa classe <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that specifies the company for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Classe <see cref="T:System.String" /> che specifica la società per questa classe <see cref="T:System.Drawing.Design.ToolboxItem" />.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.ComponentType">
      <summary vsli:raw="Gets the component type for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Ottiene il tipo di componente per questa classe <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that specifies the component type for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Classe <see cref="T:System.String" /> che specifica il tipo di componente per questa classe <see cref="T:System.Drawing.Design.ToolboxItem" />.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.DependentAssemblies">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Reflection.AssemblyName&quot; /&gt; for the toolbox item.">Ottiene o imposta la classe <see cref="T:System.Reflection.AssemblyName" /> per l'elemento della casella degli strumenti.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Reflection.AssemblyName&quot; /&gt; objects.">Matrice di oggetti <see cref="T:System.Reflection.AssemblyName" />.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Description">
      <summary vsli:raw="Gets or sets the description for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Ottiene o imposta la descrizione per questa classe <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that specifies the description for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Classe <see cref="T:System.String" /> che specifica la descrizione per questa classe <see cref="T:System.Drawing.Design.ToolboxItem" />.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.DisplayName">
      <summary vsli:raw="Gets or sets the display name for the toolbox item.">Ottiene o imposta il nome visualizzato per l'elemento della casella degli strumenti.</summary>
      <returns vsli:raw="The display name for the toolbox item.">Nome visualizzato per l'elemento della casella degli strumenti.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Filter">
      <summary vsli:raw="Gets or sets the filter that determines whether the toolbox item can be used on a destination component.">Ottiene o imposta il filtro che determina se l'elemento della casella degli strumenti può essere usato su un componente di destinazione.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; of &lt;see cref=&quot;T:System.ComponentModel.ToolboxItemFilterAttribute&quot; /&gt; objects.">Oggetto <see cref="T:System.Collections.ICollection" /> di oggetti <see cref="T:System.ComponentModel.ToolboxItemFilterAttribute" />.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.IsTransient">
      <summary vsli:raw="Gets a value indicating whether the toolbox item is transient.">Ottiene un valore che indica se l'elemento della casella degli strumenti è temporaneo.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if this toolbox item should not be stored in any toolbox database when an application that is providing a toolbox closes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se questo elemento della casella degli strumenti non deve essere memorizzato in alcun database della casella degli strumenti quando un'applicazione che fornisce una casella degli strumenti viene chiusa; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Locked">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; is currently locked.">Ottiene un valore che indica se l'oggetto <see cref="T:System.Drawing.Design.ToolboxItem" /> è attualmente bloccato.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the toolbox item is locked; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'elemento della casella degli strumenti è bloccato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.OriginalBitmap">
      <summary vsli:raw="Gets or sets the original bitmap that will be used in the toolbox for this item.">Ottiene o imposta la bitmap originale che verrà usata nella casella degli strumenti per questo elemento.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Bitmap&quot; /&gt; that represents the toolbox item in the toolbox.">Oggetto <see cref="T:System.Drawing.Bitmap" /> che rappresenta l'elemento della casella degli strumenti.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Properties">
      <summary vsli:raw="Gets a dictionary of properties.">Ottiene un dizionario delle proprietà.</summary>
      <returns vsli:raw="A dictionary of name/value pairs (the names are property names and the values are property values).">Dizionario della coppia nome/valore (i nomi sono i nomi della proprietà e i valori sono valori della proprietà).</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.TypeName">
      <summary vsli:raw="Gets or sets the fully qualified name of the type of &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; that the toolbox item creates when invoked.">Ottiene o imposta il nome completo del tipo di oggetto <see cref="T:System.ComponentModel.IComponent" /> creato dall'elemento della casella degli strumenti quando è richiamato.</summary>
      <returns vsli:raw="The fully qualified type name of the type of component that this toolbox item creates.">Nome completo del tipo di componente creato dall'elemento della casella degli strumenti.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItem.Version">
      <summary vsli:raw="Gets the version for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Ottiene la versione per questa classe <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that specifies the version for this &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Classe <see cref="T:System.String" /> che specifica la versione per questa classe <see cref="T:System.Drawing.Design.ToolboxItem" />.</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxItemCollection">
      <summary vsli:raw="Represents a collection of toolbox items.">Rappresenta un insieme di elementi della casella degli strumenti.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.#ctor(System.Drawing.Design.ToolboxItem[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCollection&quot; /&gt; class using the specified array of toolbox items.">Inizializza una nuova istanza della classe <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> con la matrice di elementi della casella degli strumenti specificata.</summary>
      <param name="value" vsli:raw="An array of type &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; containing the toolbox items to fill the collection with.">Matrice di tipo <see cref="T:System.Drawing.Design.ToolboxItem" /> contenente gli elementi della casella degli strumenti da aggiungere all'insieme.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.#ctor(System.Drawing.Design.ToolboxItemCollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCollection&quot; /&gt; class using the specified collection.">Inizializza una nuova istanza della classe <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> utilizzando l’insieme specificato.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItemCollection&quot; /&gt; to fill the new collection with.">
        <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> da aggiungere al nuovo insieme.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.Contains(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Indicates whether the collection contains the specified &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Indica se la raccolta contiene l'oggetto <see cref="T:System.Drawing.Design.ToolboxItem" /> specificato.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to search the collection for.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> da ricercare nell'insieme.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the collection contains the specified object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'insieme contiene l'oggetto specificato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.CopyTo(System.Drawing.Design.ToolboxItem[],System.Int32)">
      <summary vsli:raw="Copies the collection to the specified array beginning with the specified destination index.">Copia l’insieme nella matrice specificata partendo dall’indice di destinazione indicato.</summary>
      <param name="array" vsli:raw="The array to copy to.">Matrice in cui effettuare la copia.</param>
      <param name="index" vsli:raw="The index to begin copying to.">Indice di destinazione dal quale iniziare la copia.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCollection.IndexOf(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Gets the index of the specified &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;, if it exists in the collection.">Recupera l’indice dell’elemento <see cref="T:System.Drawing.Design.ToolboxItem" /> specificato, se presente nell’insieme.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to get the index of in the collection.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> di cui ottenere l’indice nell’insieme.</param>
      <returns vsli:raw="The index of the specified &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Indice dell'oggetto <see cref="T:System.Drawing.Design.ToolboxItem" /> specificato.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItemCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; at the specified index.">Ottiene <see cref="T:System.Drawing.Design.ToolboxItem" /> in corrispondenza dell'indice specificato.</summary>
      <param name="index" vsli:raw="The index of the object to get or set.">Indice dell'oggetto da ottenere o impostare.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; at each valid index in the collection.">Oggetto <see cref="T:System.Drawing.Design.ToolboxItem" /> in corrispondenza di ciascun indice valido dell'insieme.</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxItemCreatorCallback">
      <summary vsli:raw="Provides a callback mechanism that can create a &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Fornisce un meccanismo di callback che consente di creare un oggetto <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
      <param name="serializedObject" vsli:raw="The object which contains the data to create a &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; for.">Oggetto che contiene i dati per cui creare un oggetto <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
      <param name="format" vsli:raw="The name of the clipboard data format to create a &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; for.">Nome del formato dati degli Appunti per cui creare un oggetto <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
      <returns vsli:raw="The deserialized &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; object specified by &lt;paramref name=&quot;serializedObject&quot; /&gt;.">Oggetto <see cref="T:System.Drawing.Design.ToolboxItem" /> da deserializzare specificato da <paramref name="serializedObject" />.</returns>
    </member>
    <member name="T:System.Runtime.InteropServices.UCOMITypeLib">
      <summary vsli:raw="Use &lt;see cref=&quot;T:System.Runtime.InteropServices.ComTypes.ITypeLib&quot; /&gt; instead.">In alternativa, utilizzare <see cref="T:System.Runtime.InteropServices.ComTypes.ITypeLib" />.</summary>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)">
      <summary vsli:raw="Retrieves the library's documentation string, the complete Help file name and path, and the context identifier for the library Help topic in the Help file.">Recupera la stringa di documentazione della libreria, il nome e il percorso completo del file della Guida e l'identificatore del contesto per l'argomento della Guida della libreria nel file della Guida.</summary>
      <param name="index" vsli:raw="Index of the type description whose documentation is to be returned.">Indice della descrizione del tipo di cui restituire la documentazione.</param>
      <param name="strName" vsli:raw="Returns a string that contains the name of the specified item.">Restituisce una stringa che contiene il nome dell'elemento specificato.</param>
      <param name="strDocString" vsli:raw="Returns a string that contains the documentation string for the specified item.">Restituisce una stringa che contiene la stringa di documentazione per l'elemento specificato.</param>
      <param name="dwHelpContext" vsli:raw="Returns the Help context identifier associated with the specified item.">Restituisce l'identificatore del contesto della Guida associato all'elemento specificato.</param>
      <param name="strHelpFile" vsli:raw="Returns a string that contains the fully qualified name of the Help file.">Restituisce una stringa che contiene il nome completo del file della Guida.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.GetLibAttr(System.IntPtr@)">
      <summary vsli:raw="Retrieves the structure that contains the library's attributes.">Recupera la struttura che contiene gli attributi della libreria.</summary>
      <param name="ppTLibAttr" vsli:raw="On successful return, a structure that contains the library's attributes.">In caso di esito positivo, restituisce una struttura che contiene gli attributi della libreria.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.GetTypeInfoCount">
      <summary vsli:raw="Returns the number of type descriptions in the type library.">Restituisce il numero delle descrizioni dei tipi nella libreria dei tipi.</summary>
      <returns vsli:raw="The number of type descriptions in the type library.">Numero delle descrizioni dei tipi nella libreria dei tipi.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.GetTypeInfoType(System.Int32,System.Runtime.InteropServices.ComTypes.TYPEKIND@)">
      <summary vsli:raw="Retrieves the type of a type description.">Recupera il tipo di una descrizione del tipo.</summary>
      <param name="index" vsli:raw="The index of the type description within the type library.">Indice della descrizione dei tipi all'interno della libreria dei tipi.</param>
      <param name="pTKind" vsli:raw="A reference to the &lt;see langword=&quot;TYPEKIND&quot; /&gt; enumeration for the type description.">Riferimento all'enumerazione <see langword="TYPEKIND" /> per la descrizione del tipo.</param>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.IsName(System.String,System.Int32)">
      <summary vsli:raw="Indicates whether a passed-in string contains the name of a type or member described in the library.">Indica se una stringa passata contiene il nome di un tipo o di un membro descritto nella libreria.</summary>
      <param name="szNameBuf" vsli:raw="The string to test.">Stringa da testare.</param>
      <param name="lHashVal" vsli:raw="The hash value of &lt;paramref name=&quot;szNameBuf&quot; /&gt;.">Valore hash di <paramref name="szNameBuf" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;szNameBuf&quot; /&gt; was found in the type library; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="szNameBuf" /> viene trovato nella libreria dei tipi; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.InteropServices.UCOMITypeLib.ReleaseTLibAttr(System.IntPtr)">
      <summary vsli:raw="Releases the &lt;see cref=&quot;T:System.Runtime.InteropServices.TYPELIBATTR&quot; /&gt; originally obtained from &lt;see cref=&quot;M:System.Runtime.InteropServices.UCOMITypeLib.GetLibAttr(System.IntPtr@)&quot; /&gt;.">Libera l'oggetto <see cref="T:System.Runtime.InteropServices.TYPELIBATTR" /> originariamente ottenuto da <see cref="M:System.Runtime.InteropServices.UCOMITypeLib.GetLibAttr(System.IntPtr@)" />.</summary>
      <param name="pTLibAttr" vsli:raw="The &lt;see langword=&quot;TLIBATTR&quot; /&gt; to release.">Oggetto <see langword="TLIBATTR" /> da liberare.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.AnchorEditor">
      <summary vsli:raw="Provides a user interface for configuring an &lt;see cref=&quot;P:System.Windows.Forms.Control.Anchor&quot; /&gt; property.">Fornisce un'interfaccia utente per la configurazione di una proprietà <see cref="P:System.Windows.Forms.Control.Anchor" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AnchorEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.AnchorEditor&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Design.AnchorEditor" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AnchorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the value of the specified object using the specified service provider and context.">Modifica il valore dell'oggetto specificato utilizzando il provider di servizi e il contesto specificati.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che può essere usato per ottenere ulteriori informazioni sul contesto.</param>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; through which editing services may be obtained.">Oggetto <see cref="T:System.IServiceProvider" /> tramite il quale è possibile ottenere i servizi di modifica.</param>
      <param name="value" vsli:raw="An instance of the value being edited.">Istanza del valore in corso di modifica.</param>
      <returns vsli:raw="The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.">Nuovo valore dell'oggetto. Se il valore dell'oggetto non è stato modificato, deve essere restituito lo stesso oggetto che è stato passato.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AnchorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editor style used by the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Windows.Forms.Design.AnchorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot;&gt;&lt;/xref&gt; method.">Ottiene lo stile dell'editor usato dal metodo <see cref="M:System.Windows.Forms.Design.AnchorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che può essere usato per ottenere ulteriori informazioni sul contesto.</param>
      <returns vsli:raw="One of the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle&quot;&gt;&lt;/xref&gt; values indicating the provided editing style. If the method is not supported, this method will return &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle.None&quot;&gt;&lt;/xref&gt;.">Uno dei valori di <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> che indica lo stile di modifica fornito. Se il metodo non è supportato, questo metodo restituirà <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.AxImporter">
      <summary vsli:raw="Imports ActiveX controls and generates a wrapper that can be accessed by a designer.">Importa i controlli ActiveX e genera un wrapper a cui è possibile accedere tramite una finestra di progettazione.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.#ctor(System.Windows.Forms.Design.AxImporter.Options)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.AxImporter&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Design.AxImporter" />.</summary>
      <param name="options" vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.Design.AxImporter.Options&quot; /&gt; that indicates the options for the ActiveX control importer to use.">Oggetto <see cref="T:System.Windows.Forms.Design.AxImporter.Options" /> che indica le opzioni che devono essere utilizzate dall'utilità di importazione dei controlli ActiveX.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.AxImporter.IReferenceResolver">
      <summary vsli:raw="Provides methods to resolve references to ActiveX libraries, COM type libraries or assemblies, or managed assemblies.">Fornisce i metodi per risolvere i riferimenti alle librerie ActiveX, alle librerie di tipi o agli assembly COM oppure agli assembly gestiti.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveActiveXReference(System.Runtime.InteropServices.UCOMITypeLib)">
      <summary vsli:raw="Resolves a reference to the specified type library that contains an ActiveX control.">Risolve un riferimento alla libreria di tipi specificata che contiene un controllo ActiveX.</summary>
      <param name="typeLib" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.InteropServices.UCOMITypeLib&quot; /&gt; to resolve a reference to.">Oggetto <see cref="T:System.Runtime.InteropServices.UCOMITypeLib" /> in base al quale risolvere un riferimento.</param>
      <returns vsli:raw="A fully qualified path to an assembly.">Percorso completo di un assembly.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveComReference(System.Reflection.AssemblyName)">
      <summary vsli:raw="Resolves a reference to the specified assembly that contains a COM component.">Risolve un riferimento all'assembly specificato che contiene un componente COM.</summary>
      <param name="name" vsli:raw="An &lt;see cref=&quot;T:System.Reflection.AssemblyName&quot; /&gt; that indicates the assembly to resolve a reference to.">Oggetto <see cref="T:System.Reflection.AssemblyName" /> che indica l'assembly in base al quale risolvere un riferimento.</param>
      <returns vsli:raw="A fully qualified path to an assembly.">Percorso completo di un assembly.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveComReference(System.Runtime.InteropServices.UCOMITypeLib)">
      <summary vsli:raw="Resolves a reference to the specified type library that contains an COM component.">Risolve un riferimento alla libreria di tipi specificata che contiene un componente COM.</summary>
      <param name="typeLib" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.InteropServices.UCOMITypeLib&quot; /&gt; to resolve a reference to.">Oggetto <see cref="T:System.Runtime.InteropServices.UCOMITypeLib" /> in base al quale risolvere un riferimento.</param>
      <returns vsli:raw="A fully qualified path to an assembly.">Percorso completo di un assembly.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.IReferenceResolver.ResolveManagedReference(System.String)">
      <summary vsli:raw="Resolves a reference to the specified assembly.">Risolve un riferimento all'assembly specificato.</summary>
      <param name="assemName" vsli:raw="The name of the assembly to resolve a reference to.">Nome dell'assembly in base al quale risolvere un riferimento.</param>
      <returns vsli:raw="A fully qualified path to an assembly.">Percorso completo di un assembly.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.AxImporter.Options">
      <summary vsli:raw="Represents a set of options for an &lt;see cref=&quot;T:System.Windows.Forms.Design.AxImporter&quot; /&gt;.">Rappresenta un insieme di opzioni per un oggetto <see cref="T:System.Windows.Forms.Design.AxImporter" />.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.delaySign">
      <summary vsli:raw="Specifies whether the generated assembly is strongly named and will be signed later.">Specifica se l'assembly generato è contraddistinto da un nome sicuro e verrà firmato in un momento successivo.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.genSources">
      <summary vsli:raw="Specifies whether sources for the type library wrapper should be generated.">Specifica se è necessario generare le origini del wrapper della libreria dei tipi.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.ignoreRegisteredOcx">
      <summary vsli:raw="Specifies whether to use only input from the command line instead relying on a registered version.">Specifica se utilizzare solo l'input dalla riga di comando anziché basarsi su una versione registrata.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.keyContainer">
      <summary vsli:raw="Specifies the path to the file that contains the strong name key container for the generated assemblies.">Specifica il percorso del file che contiene il contenitore di chiavi con nome sicuro degli assembly generati.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.keyFile">
      <summary vsli:raw="Specifies the path to the file that contains the strong name key for the generated assemblies.">Specifica il percorso del file che contiene la chiave con nome sicuro degli assembly generati.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.keyPair">
      <summary vsli:raw="Specifies the strong name used for the generated assemblies.">Specifica il nome sicuro utilizzato per gli assembly generati.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.msBuildErrors">
      <summary vsli:raw="Specifies whether errors are output in the Microsoft Build Engine (MSBuild) format.">Specifica se il formato dell'output degli errori è Microsoft Build Engine (MSBuild).</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.noLogo">
      <summary vsli:raw="Indicates whether the ActiveX importer tool logo will be displayed when the control is imported.">Indica se il logo dello strumento di importazione ActiveX verrà visualizzato al momento dell'importazione del controllo.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.outputDirectory">
      <summary vsli:raw="Specifies the path to the directory that the generated assemblies will be created in.">Specifica il percorso della directory nella quale verranno creati gli assembly generati.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.outputName">
      <summary vsli:raw="Specifies the filename to generate the ActiveX control wrapper to.">Specifica il nome di file con cui generare il wrapper del controllo ActiveX.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.overwriteRCW">
      <summary vsli:raw="Specifies whether to overwrite existing files when generating assemblies.">Specifica se i file verranno sovrascritti al momento della generazione degli assembly.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.publicKey">
      <summary vsli:raw="Specifies the public key used to sign the generated assemblies.">Specifica la chiave pubblica utilizzata per firmare gli assembly generati.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.references">
      <summary vsli:raw="Specifies the &lt;see cref=&quot;T:System.Windows.Forms.Design.AxImporter.IReferenceResolver&quot; /&gt; to use to resolve types and references when generating assemblies.">Specifica l'oggetto <see cref="T:System.Windows.Forms.Design.AxImporter.IReferenceResolver" /> da utilizzare per risolvere i tipi e i riferimenti al momento della generazione degli assembly.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.silentMode">
      <summary vsli:raw="Specifies whether to compile in silent mode, which generates less displayed information at compile time.">Specifica se la compilazione verrà eseguita in modalità trasparente, consentendo di visualizzare una minore quantità di informazioni in fase di compilazione.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.AxImporter.Options.verboseMode">
      <summary vsli:raw="Specifies whether to compile in verbose mode, which generates more displayed information at compile time.">Specifica se la compilazione verrà eseguita in modalità dettagliata, consentendo di visualizzare una maggiore quantità di informazioni in fase di compilazione.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.AxImporter.Options.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.AxImporter.Options&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Design.AxImporter.Options" />.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.Adorner">
      <summary vsli:raw="Manages a collection of user-interface related &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects. This class cannot be inherited.">Gestisce una raccolta di oggetti <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> relativi all'interfaccia utente. La classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate">
      <summary vsli:raw="Forces the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; to refresh its adorner window.">Forza l'aggiornamento della finestra dello strumento decorativo dell'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate(System.Drawing.Rectangle)">
      <summary vsli:raw="Forces the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; to refresh its adorner window within the given &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt;.">Forza l'aggiornamento della finestra di strutturazione dell'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> all'interno di un dato oggetto <see cref="T:System.Drawing.Rectangle" />.</summary>
      <param name="rectangle" vsli:raw="The area to invalidate.">Area da invalidare.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Adorner.Invalidate(System.Drawing.Region)">
      <summary vsli:raw="Forces the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; to refresh its adorner window within the given &lt;see cref=&quot;T:System.Drawing.Region&quot; /&gt;.">Forza l'aggiornamento della finestra di strutturazione dell'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> all'interno di un dato oggetto <see cref="T:System.Drawing.Region" />.</summary>
      <param name="region" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Region&quot; /&gt; to invalidate.">Oggetto <see cref="T:System.Drawing.Region" /> da invalidare.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Adorner.BehaviorService">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt;.">Ottiene o imposta l'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> associato a <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt;.">Oggetto <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> associato all'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Adorner.Enabled">
      <summary vsli:raw="Gets or sets a value indicating if the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; is enabled.">Ottiene o imposta un valore che indica se l'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> è abilitato.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> è abilitato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Adorner.Glyphs">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; collection.">Ottiene la raccolta <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects.">Raccolta di oggetti <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.Behavior">
      <summary vsli:raw="Represents the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; objects that are managed by a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Rappresenta gli oggetti <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> gestiti da una classe <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.#ctor(System.Boolean,System.Windows.Forms.Design.Behavior.BehaviorService)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; class with the given &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> con l'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> specificato.</summary>
      <param name="callParentBehavior" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the parent behavior should be called if it exists; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se deve essere chiamato l'eventuale comportamento padre; in caso contrario, <see langword="false" />.</param>
      <param name="behaviorService" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; to use.">Oggetto <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> da usare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;callParentBehavior&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, and &lt;paramref name=&quot;behaviorService&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="callParentBehavior" /> è <see langword="true" /> e <paramref name="behaviorService" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)">
      <summary vsli:raw="Intercepts commands.">Intercetta comandi.</summary>
      <param name="commandId" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; object.">Un oggetto <see cref="T:System.ComponentModel.Design.CommandID" />.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommand&quot; /&gt;. By default, &lt;see cref=&quot;M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)&quot; /&gt; returns &lt;see langword=&quot;null&quot; /&gt;.">Oggetto <see cref="T:System.ComponentModel.Design.MenuCommand" />. Per impostazione predefinita, il metodo <see cref="M:System.Windows.Forms.Design.Behavior.Behavior.FindCommand(System.ComponentModel.Design.CommandID)" /> restituisce <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragDrop(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Permits custom drag-and-drop behavior.">Consente un comportamento personalizzato di trascinamento e rilascio.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; object on which to invoke drag-and-drop behavior.">Oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> sul quale richiamare il comportamento di trascinamento e rilascio.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that contains the event data.">Oggetto <see cref="T:System.Windows.Forms.DragEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragEnter(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Permits custom drag-enter behavior.">Consente un comportamento personalizzato di trascinamento in entrata.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; on which to invoke drag-enter behavior.">Oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> sul quale richiamare il comportamento di trascinamento in entrata.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that contains the event data.">Oggetto <see cref="T:System.Windows.Forms.DragEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragLeave(System.Windows.Forms.Design.Behavior.Glyph,System.EventArgs)">
      <summary vsli:raw="Permits custom drag-leave behavior.">Consente un comportamento personalizzato di trascinamento in uscita.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; on which to invoke drag-leave behavior.">Oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> sul quale richiamare il comportamento di trascinamento in uscita.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that contains the event data.">Oggetto <see cref="T:System.Windows.Forms.DragEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnDragOver(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Permits custom drag-over behavior.">Consente un comportamento personalizzato di trascinamento.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; on which to invoke drag-over behavior.">Oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> sul quale richiamare il comportamento di trascinamento.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that contains the event data.">Oggetto <see cref="T:System.Windows.Forms.DragEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnGiveFeedback(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary vsli:raw="Permits custom drag-and-drop feedback behavior.">Consente un comportamento personalizzato di risposta al trascinamento e rilascio.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; on which to invoke drag-and-drop behavior.">Oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> sul quale richiamare il comportamento di trascinamento e rilascio.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.GiveFeedbackEventArgs&quot; /&gt; that contains the event data.">Oggetto <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnLoseCapture(System.Windows.Forms.Design.Behavior.Glyph,System.EventArgs)">
      <summary vsli:raw="Called by the adorner window when it loses mouse capture.">Viene chiamato dalla finestra dello strumento decorativo quando perde il mouse capture.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; on which to invoke drag-and-drop behavior.">Oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> sul quale richiamare il comportamento di trascinamento e rilascio.</param>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">Oggetto <see cref="T:System.EventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDoubleClick(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
      <summary vsli:raw="Called when any double-click message enters the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Viene chiamato quando nella finestra dello strumento decorativo dell'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> viene inserito un messaggio di doppio clic.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="button" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.MouseButtons&quot; /&gt; value indicating which button was clicked.">Valore <see cref="T:System.Windows.Forms.MouseButtons" /> che indica il pulsante selezionato.</param>
      <param name="mouseLoc" vsli:raw="The location at which the click occurred.">Posizione in corrispondenza della quale si è verificato il clic.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il messaggio è stato gestito. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseDown(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
      <summary vsli:raw="Called when any mouse-down message enters the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Viene chiamato quando nella finestra dello strumento decorativo dell'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> viene inserito un messaggio di selezione tramite mouse.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="button" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.MouseButtons&quot; /&gt; value indicating which button was clicked.">Valore <see cref="T:System.Windows.Forms.MouseButtons" /> che indica il pulsante selezionato.</param>
      <param name="mouseLoc" vsli:raw="The location at which the click occurred.">Posizione in corrispondenza della quale si è verificato il clic.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il messaggio è stato gestito. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseEnter(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary vsli:raw="Called when any mouse-enter message enters the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Viene chiamato quando nella finestra dello strumento decorativo dell'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> viene inserito un messaggio di mouse in entrata.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il messaggio è stato gestito. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseHover(System.Windows.Forms.Design.Behavior.Glyph,System.Drawing.Point)">
      <summary vsli:raw="Called when any mouse-hover message enters the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Viene chiamato quando nella finestra dello strumento decorativo dell'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> viene inserito un messaggio di passaggio del mouse.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="mouseLoc" vsli:raw="The location at which the hover occurred.">Posizione in corrispondenza della quale si è verificato il passaggio.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il messaggio è stato gestito. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseLeave(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary vsli:raw="Called when any mouse-leave message enters the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Viene chiamato quando nella finestra dello strumento decorativo dell'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> viene inserito un messaggio di mouse in uscita.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il messaggio è stato gestito. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseMove(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons,System.Drawing.Point)">
      <summary vsli:raw="Called when any mouse-move message enters the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Viene chiamato quando nella finestra dello strumento decorativo dell'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> viene inserito un messaggio di spostamento del mouse.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="button" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.MouseButtons&quot; /&gt; value indicating which button was clicked.">Valore <see cref="T:System.Windows.Forms.MouseButtons" /> che indica il pulsante selezionato.</param>
      <param name="mouseLoc" vsli:raw="The location at which the move occurred.">Posizione in corrispondenza della quale si è verificato lo spostamento.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il messaggio è stato gestito. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnMouseUp(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.MouseButtons)">
      <summary vsli:raw="Called when any mouse-up message enters the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Viene chiamato quando nella finestra dello strumento decorativo dell'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> viene inserito un messaggio di rilascio del mouse.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="button" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.MouseButtons&quot; /&gt; value indicating which button was clicked.">Valore <see cref="T:System.Windows.Forms.MouseButtons" /> che indica il pulsante selezionato.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was handled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il messaggio è stato gestito. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Behavior.OnQueryContinueDrag(System.Windows.Forms.Design.Behavior.Glyph,System.Windows.Forms.QueryContinueDragEventArgs)">
      <summary vsli:raw="Sends this drag-and-drop event from the adorner window to the appropriate &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; or hit-tested &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Invia questo evento di trascinamento della selezione dalla finestra Adorner all'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> appropriato o all'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> sottoposto a hit test.</summary>
      <param name="g" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.QueryContinueDragEventArgs&quot; /&gt; that contains the event data.">Oggetto <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Behavior.Cursor">
      <summary vsli:raw="Gets the cursor that should be displayed for this behavior.">Ottiene il cursore che deve essere visualizzato per questo comportamento.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Cursor&quot; /&gt; that represents the cursor that should be displayed for this behavior.">Oggetto <see cref="T:System.Windows.Forms.Cursor" /> che rappresenta il cursore che deve essere visualizzato per questo comportamento.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Behavior.DisableAllCommands">
      <summary vsli:raw="Gets a value indicating whether &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommand&quot; /&gt; objects should be disabled.">Ottiene un valore che indica se gli oggetti <see cref="T:System.ComponentModel.Design.MenuCommand" /> devono essere disabilitati.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if all &lt;see cref=&quot;T:System.ComponentModel.Design.MenuCommand&quot; /&gt; objects the designer receives should have states set to &lt;c&gt;Enabled = false&lt;/c&gt; when this &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; is active; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> Se tutti <see cref="T:System.ComponentModel.Design.MenuCommand" /> gli oggetti ricevuti dalla finestra di progettazione devono avere stati impostati su <c>Enabled = false</c> quando l'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> è attivo; in caso contrario, <see langword="false" /> .</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag&quot; /&gt; and &lt;see cref=&quot;E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag&quot; /&gt; events.">Fornisce i dati per gli eventi <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag" /> e <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs.#ctor(System.Collections.ICollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs" />.</summary>
      <param name="dragComponents" vsli:raw="The &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; of &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects currently being dragged.">
        <see cref="T:System.Collections.ICollection" /> di oggetti <see cref="T:System.ComponentModel.IComponent" /> attualmente trascinati.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs.DragComponents">
      <summary vsli:raw="Gets the list of &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects currently being dragged.">Ottiene l'elenco di oggetti <see cref="T:System.ComponentModel.IComponent" /> attualmente da trascinare.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; of &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects currently being dragged.">
        <see cref="T:System.Collections.ICollection" /> di oggetti <see cref="T:System.ComponentModel.IComponent" /> attualmente trascinati.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventHandler">
      <summary vsli:raw="Represents the methods that will handle the &lt;see cref=&quot;E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag&quot; /&gt; and &lt;see cref=&quot;E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag&quot; /&gt; events of a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;. This class cannot be inherited.">Rappresenta i metodi che gestiranno gli eventi <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag" /> e <see cref="E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag" /> di un oggetto <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />. La classe non può essere ereditata.</summary>
      <param name="sender" vsli:raw="The source of the event.">Origine dell'evento.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs&quot; /&gt; that contains the event data.">Oggetto <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorDragDropEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorService">
      <summary vsli:raw="Manages user interface in the designer. This class cannot be inherited.">Gestisce l'interfaccia utente nella finestra di progettazione. La classe non può essere ereditata.</summary>
    </member>
    <member name="E:System.Windows.Forms.Design.Behavior.BehaviorService.BeginDrag">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; starts a drag-and-drop operation.">Si verifica quando <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> avvia un'operazione di trascinamento e rilascio.</summary>
    </member>
    <member name="E:System.Windows.Forms.Design.Behavior.BehaviorService.EndDrag">
      <summary vsli:raw="Occurs when the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; completes a drag operation.">Si verifica quando <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> completa un'operazione di trascinamento.</summary>
    </member>
    <member name="E:System.Windows.Forms.Design.Behavior.BehaviorService.Synchronize">
      <summary vsli:raw="Occurs when the current selection should be refreshed.">Si verifica quando è necessario aggiornare la selezione corrente.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowPointToScreen(System.Drawing.Point)">
      <summary vsli:raw="Translates a &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; in the adorner window to screen coordinates.">Converte un oggetto <see cref="T:System.Drawing.Point" /> nella finestra di strutturazione in coordinate dello schermo.</summary>
      <param name="p" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; value to transform.">Valore <see cref="T:System.Drawing.Point" /> da trasformare.</param>
      <returns vsli:raw="The transformed &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; value, in screen coordinates.">Valore di <see cref="T:System.Drawing.Point" /> trasformato, espresso in coordinate dello schermo.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowToScreen">
      <summary vsli:raw="Gets the location of the adorner window in screen coordinates.">Ottiene la posizione della finestra di strumenti decorativi, in coordinate dello schermo.</summary>
      <returns vsli:raw="The location, from the upper-left corner of the adorner window, in screen coordinates.">Posizione, dall'angolo superiore sinistro della finestra di strumenti decorativi, in coordinate dello schermo.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.ControlRectInAdornerWindow(System.Windows.Forms.Control)">
      <summary vsli:raw="Returns the bounding &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; of a &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt;.">Restituisce l'oggetto <see cref="T:System.Drawing.Rectangle" /> delimitatore di un oggetto <see cref="T:System.Windows.Forms.Control" />.</summary>
      <param name="c" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; to translate.">
        <see cref="T:System.Windows.Forms.Control" /> da convertire.</param>
      <returns vsli:raw="The bounding &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; of a &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; translated to the adorner window coordinates.">Oggetto <see cref="T:System.Drawing.Rectangle" /> delimitatore di un oggetto <see cref="T:System.Windows.Forms.Control" /> convertito in coordinate della finestra Adorner.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.ControlToAdornerWindow(System.Windows.Forms.Control)">
      <summary vsli:raw="Returns the location of a &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; translated to adorner window coordinates.">Restituisce la posizione di un oggetto <see cref="T:System.Windows.Forms.Control" /> convertita in coordinate della finestra Adorner.</summary>
      <param name="c" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; to translate.">
        <see cref="T:System.Windows.Forms.Control" /> da convertire.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; value indicating the location of &lt;paramref name=&quot;c&quot; /&gt; in adorner window coordinates.">Valore <see cref="T:System.Drawing.Point" /> che indica la posizione di <paramref name="c" />, espressa in coordinate della finestra di strutturazione.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Rilascia tutte le risorse usate da <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.GetNextBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; immediately after the given &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; in the behavior stack.">Restituisce l'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> immediatamente dopo l'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> nello stack dei comportamenti.</summary>
      <param name="behavior" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; preceding the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; to be returned.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> che precede l'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> da restituire.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; immediately after &lt;paramref name=&quot;behavior&quot; /&gt; in the behavior stack, or &lt;see langword=&quot;null&quot; /&gt; if there is no following behavior.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> che segue immediatamente <paramref name="behavior" /> nello stack di comportamenti oppure <see langword="null" /> se non è disponibile alcun comportamento.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Invalidate">
      <summary vsli:raw="Invalidates the adorner window of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Invalida la finestra di strutturazione di <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Invalidate(System.Drawing.Rectangle)">
      <summary vsli:raw="Invalidates, within the adorner window, the specified area of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Invalida, all'interno della finestra di strutturazione, l'area specificata di <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="rect" vsli:raw="The rectangular area to invalidate.">Area rettangolare da invalidare.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.Invalidate(System.Drawing.Region)">
      <summary vsli:raw="Invalidates, within the adorner window, the specified area of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Invalida, all'interno della finestra di strutturazione, l'area specificata di <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="r" vsli:raw="The region to invalidate.">Area da invalidare.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.MapAdornerWindowPoint(System.IntPtr,System.Drawing.Point)">
      <summary vsli:raw="Converts a point in a handle's coordinate system to the adorner window coordinates.">Converte un punto espresso nel sistema di coordinate di un handle nelle coordinate della finestra di strumenti decorativi.</summary>
      <param name="handle" vsli:raw="An adorner window's handle.">Handle della finestra di strumenti decorativi.</param>
      <param name="pt" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; in a handle's coordinate system.">Oggetto <see cref="T:System.Drawing.Point" /> nel sistema di coordinate di un handle.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; in the adorner window coordinates.">Oggetto <see cref="T:System.Drawing.Point" /> nelle coordinate della finestra di strutturazione.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.PopBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Removes and returns the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; at the top of the stack.">Rimuove e restituisce l'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> all'inizio dello stack.</summary>
      <param name="behavior" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; to remove from the stack.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> da rimuovere dallo stack.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; stack is empty.">Lo stack di <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> è vuoto.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; that was removed from the stack.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> che è stato rimosso dallo stack.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.PushBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Pushes a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; onto the behavior stack.">Inserisce un oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> nello stack di comportamenti.</summary>
      <param name="behavior" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; to push.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> da inserire.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;behavior&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="behavior" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.PushCaptureBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Pushes a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; onto the behavior stack and assigns mouse capture to the behavior.">Inserisce un oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> nello stack di comportamenti e assegna il mouse capture al comportamento.</summary>
      <param name="behavior" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; to push.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> da inserire.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;behavior&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="behavior" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.ScreenToAdornerWindow(System.Drawing.Point)">
      <summary vsli:raw="Translates a point in screen coordinates into the adorner window coordinates of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Converte un punto espresso in coordinate dello schermo in coordinate della finestra di strutturazione di <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</summary>
      <param name="p" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; value to transform.">Valore <see cref="T:System.Drawing.Point" /> da trasformare.</param>
      <returns vsli:raw="The transformed &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; value, in adorner window coordinates.">Valore di <see cref="T:System.Drawing.Point" /> trasformato, espresso in coordinate della finestra di strutturazione.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorService.SyncSelection">
      <summary vsli:raw="Synchronizes all selection glyphs.">Sincronizza tutti i glifi di selezione.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorService.Adorners">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">Ottiene l'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <returns vsli:raw="A collection of adorner.">Raccolta di strumenti decorativi.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowGraphics">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Drawing.Graphics&quot; /&gt; for the adorner window.">Ottiene l'oggetto <see cref="T:System.Drawing.Graphics" /> per la finestra di strutturazione.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Graphics&quot; /&gt; for the adorner window.">
        <see cref="T:System.Drawing.Graphics" /> per la finestra di strutturazione.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorService.CurrentBehavior">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; at the top of the behavior stack without removing it.">Ottiene l'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> all'inizio dello stack di comportamenti senza rimuoverlo.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; at the top of the behavior stack.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> all'inizio dello stack di comportamenti.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection">
      <summary vsli:raw="Stores &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; objects in a strongly typed collection.">Archivia oggetti <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> in una raccolta fortemente tipizzata.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.#ctor(System.Windows.Forms.Design.Behavior.Adorner[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; class with the given array.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> con la matrice definita.</summary>
      <param name="value" vsli:raw="An array of type &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; to populate the collection.">Matrice di tipo <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> per il popolamento dell'insieme.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.#ctor(System.Windows.Forms.Design.Behavior.BehaviorService)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; class with the given &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; reference.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> con il riferimento <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> specificato.</summary>
      <param name="behaviorService" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; reference.">Riferimento <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.#ctor(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; class from an existing &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> da un oggetto <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> esistente.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; from which to populate the collection.">Oggetto <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> da cui popolare l'insieme.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Add(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary vsli:raw="Adds an &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; with the specified value to the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">Aggiunge un <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> con il valore specificato a <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; to add to the end of the collection.">Oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> da aggiungere alla fine dell'insieme.</param>
      <returns vsli:raw="The index at which the new element was inserted.">L'indice in corrispondenza del quale è stato inserito il nuovo elemento.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.AddRange(System.Windows.Forms.Design.Behavior.Adorner[])">
      <summary vsli:raw="Copies the elements of an array to the end of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">Copia gli elementi di una matrice alla fine di <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <param name="value" vsli:raw="An array of type &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; to copy to the end of the collection.">Matrice di tipo <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> da copiare alla fine dell'insieme</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.AddRange(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection)">
      <summary vsli:raw="Adds the contents of another &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; to the end of the collection.">Aggiunge alla fine dell'insieme il contenuto di un altro oggetto <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; to add to the end of the collection.">Oggetto <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> da aggiungere alla fine dell'insieme.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Contains(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; contains the specified &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt;.">Ottiene un valore che indica se l'insieme <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> contiene l'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> specificato.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; to locate.">La classe <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> da individuare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; is contained in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> è incluso nell'insieme; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.CopyTo(System.Windows.Forms.Design.Behavior.Adorner[],System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; values to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; at the specified index.">Copia i valori <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> in una <see cref="T:System.Array" /> unidimensionale in corrispondenza dell'indice specificato.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the values copied from &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">Istanza unidimensionale di <see cref="T:System.Array" /> destinazione dei valori copiati da <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</param>
      <param name="index" vsli:raw="The index in &lt;paramref name=&quot;array&quot; /&gt; where copying begins.">Indice in <paramref name="array" /> in corrispondenza del quale ha inizio la copia.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.&#xA;&#xA;-or-&#xA;&#xA;The number of elements in the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; is greater than the available space between &lt;paramref name=&quot;index&quot; /&gt; and the end of &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> è multidimensionale.

-oppure-

Il numero di elementi contenuti in <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine di <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is less than the lower bound of &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="arrayIndex" /> è minore del limite inferiore di <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that can iterate through the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; instance.">Restituisce un enumeratore che consente di scorrere l'istanza di <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; instance.">Oggetto <see cref="T:System.Collections.IEnumerator" /> per l'istanza di <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.IndexOf(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary vsli:raw="Returns the index of an &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; in the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">Restituisce l'indice di <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> in <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; to locate.">La classe <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> da individuare.</param>
      <returns vsli:raw="The index of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; of &lt;paramref name=&quot;value&quot; /&gt; in the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;, if found; otherwise, -1.">Indice della classe <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> di <paramref name="value" /> nella classe <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />, se trovata; in caso contrario -1.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Insert(System.Int32,System.Windows.Forms.Design.Behavior.Adorner)">
      <summary vsli:raw="Inserts an &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; into the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; at the specified index.">Inserisce un oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> in <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> in corrispondenza dell'indice specificato.</summary>
      <param name="index" vsli:raw="The zero-based index where &lt;paramref name=&quot;value&quot; /&gt; should be inserted.">Indice in base zero nel quale <paramref name="value" /> deve essere inserito.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; to insert.">Oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> da inserire.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Remove(System.Windows.Forms.Design.Behavior.Adorner)">
      <summary vsli:raw="Removes a specific &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; from the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">Rimuove un oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> specifico da <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; to remove from the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">Oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> da rimuovere da <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is not found in the collection.">
        <paramref name="value" /> non è presente nella raccolta.</exception>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">Ottiene o imposta l'elemento in corrispondenza dell'indice specificato.</summary>
      <param name="index" vsli:raw="The zero-based index of the element.">Indice in base zero dell'elemento.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; element specified by &lt;paramref name=&quot;index&quot; /&gt;.">Elemento <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> specificato da <paramref name="index" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator">
      <summary vsli:raw="Supports iteration over a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">Supporta l'iterazione su un oggetto <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.#ctor(System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator" />.</summary>
      <param name="mappings" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt; for which to create the enumerator.">
        <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" /> per cui creare l'enumeratore.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.MoveNext">
      <summary vsli:raw="Advances the enumerator to the next element of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">Sposta l'enumeratore all'elemento successivo dell'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the enumerator was successfully advanced to the next element; &lt;see langword=&quot;false&quot; /&gt; if the enumerator was past the end of the collection.">
        <see langword="true" /> se l'enumeratore è stato spostato correttamente in avanti in corrispondenza dell'elemento successivo; <see langword="false" /> se l'enumeratore ha superato la fine dell'insieme.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.Reset">
      <summary vsli:raw="Sets the enumerator to its initial position, which is before the first element in the collection.">Imposta l'enumeratore sulla propria posizione iniziale, ovvero prima del primo elemento nella raccolta.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.Current">
      <summary vsli:raw="Gets the current element in the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">Ottiene l'elemento corrente nell'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</summary>
      <returns vsli:raw="The current element in the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection&quot; /&gt;.">Elemento corrente nell'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollectionEnumerator.System#Collections#IEnumerator#Current">
      <summary vsli:raw="For a description of this member, see the &lt;see cref=&quot;P:System.Collections.IEnumerator.Current&quot; /&gt; property.">Per una descrizione di questo membro, vedere la proprietà <see cref="P:System.Collections.IEnumerator.Current" />.</summary>
      <returns vsli:raw="The current &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt; in the collection.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" /> corrente presente nell'insieme.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.ComponentGlyph">
      <summary vsli:raw="Associates a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; with its component.">Associa un oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> al relativo componente.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.#ctor(System.ComponentModel.IComponent)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ComponentGlyph&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Design.Behavior.ComponentGlyph" />.</summary>
      <param name="relatedComponent" vsli:raw="The component with which the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated.">Componente al quale è associato l'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.#ctor(System.ComponentModel.IComponent,System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ComponentGlyph&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Design.Behavior.ComponentGlyph" />.</summary>
      <param name="relatedComponent" vsli:raw="The component with which the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated.">Componente al quale è associato l'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="behavior" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; with which the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated.">Elemento <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> al quale è associato l'elemento <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.GetHitTest(System.Drawing.Point)">
      <summary vsli:raw="Indicates whether a mouse click at the specified point should be handled by the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ComponentGlyph&quot; /&gt;.">Indica se il clic del mouse nel punto specificato deve essere gestito dall'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.ComponentGlyph" />.</summary>
      <param name="p" vsli:raw="A point to hit-test.">Punto da sottoporre a hit test.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Cursor&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated with &lt;paramref name=&quot;p&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Oggetto <see cref="T:System.Windows.Forms.Cursor" /> se l'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> è associato a <paramref name="p" />; in caso contrario, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ComponentGlyph.Paint(System.Windows.Forms.PaintEventArgs)">
      <summary vsli:raw="Provides paint logic.">Fornisce una logica di disegno.</summary>
      <param name="pe" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.PaintEventArgs&quot; /&gt; containing the &lt;see cref=&quot;P:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowGraphics&quot; /&gt; of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;.">Oggetto <see cref="T:System.Windows.Forms.PaintEventArgs" /> contenente <see cref="P:System.Windows.Forms.Design.Behavior.BehaviorService.AdornerWindowGraphics" /> dell'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.ComponentGlyph.RelatedComponent">
      <summary vsli:raw="Gets the component that is associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; .">Ottiene il componente associato all'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Oggetto <see cref="T:System.ComponentModel.IComponent" /> associato all'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph">
      <summary vsli:raw="Associates a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; with its control.">Associa un oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> al relativo controllo.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.#ctor(System.Drawing.Rectangle,System.Windows.Forms.Cursor,System.ComponentModel.IComponent,System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" />.</summary>
      <param name="bounds" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; that represents the bounds of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Struttura <see cref="T:System.Drawing.Rectangle" /> che rappresenta i limiti dell'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="cursor" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Cursor&quot; /&gt; that represents the cursor to display when the mouse pointer is over the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Oggetto <see cref="T:System.Windows.Forms.Cursor" /> che rappresenta il cursore da visualizzare quando il puntatore del mouse si trova sull'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="relatedComponent" vsli:raw="The component with which the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated.">Componente al quale è associato l'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="behavior" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; with which the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated.">Elemento <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> al quale è associato l'elemento <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.#ctor(System.Drawing.Rectangle,System.Windows.Forms.Cursor,System.ComponentModel.IComponent,System.Windows.Forms.Design.ControlDesigner)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" />.</summary>
      <param name="bounds" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; that represents the bounds of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Struttura <see cref="T:System.Drawing.Rectangle" /> che rappresenta i limiti dell'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="cursor" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Cursor&quot; /&gt; that represents the cursor to display when the mouse pointer is over the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Oggetto <see cref="T:System.Windows.Forms.Cursor" /> che rappresenta il cursore da visualizzare quando il puntatore del mouse si trova sull'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="relatedComponent" vsli:raw="The component with which the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated.">Componente al quale è associato l'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
      <param name="designer" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt; with which the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated.">Oggetto <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> al quale è associato <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.GetHitTest(System.Drawing.Point)">
      <summary vsli:raw="Indicates whether a mouse click at the specified point should be handled by the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph&quot; /&gt;.">Indica se il clic del mouse nel punto specificato deve essere gestito dall'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" />.</summary>
      <param name="p" vsli:raw="A point to hit test.">Punto da sottoporre a hit test.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Cursor&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated with &lt;paramref name=&quot;p&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Oggetto <see cref="T:System.Windows.Forms.Cursor" /> se l'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> è associato a <paramref name="p" />; in caso contrario, <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.ControlBodyGlyph.Bounds">
      <summary vsli:raw="Gets the bounds of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Ottiene i limiti dell'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; representing the bounds of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Oggetto <see cref="T:System.Drawing.Rectangle" /> che rappresenta i limiti dell'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.Glyph">
      <summary vsli:raw="Represents a single user interface (UI) entity managed by an &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Adorner&quot; /&gt;.">Rappresenta un'unica entità interfaccia utente gestita da una classe <see cref="T:System.Windows.Forms.Design.Behavior.Adorner" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.#ctor(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <param name="behavior" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;. Can be &lt;see langword=&quot;null&quot; /&gt;.">Oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> associato all'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />. Può essere <see langword="null" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.GetHitTest(System.Drawing.Point)">
      <summary vsli:raw="Provides hit test logic.">Fornisce la logica di hit test.</summary>
      <param name="p" vsli:raw="A point to hit-test.">Punto da sottoporre a hit test.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Cursor&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is associated with &lt;paramref name=&quot;p&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Oggetto <see cref="T:System.Windows.Forms.Cursor" /> se l'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> è associato a <paramref name="p" />; in caso contrario, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.Paint(System.Windows.Forms.PaintEventArgs)">
      <summary vsli:raw="Provides paint logic.">Fornisce una logica di disegno.</summary>
      <param name="pe" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.PaintEventArgs&quot; /&gt; that contains the event data.">Oggetto <see cref="T:System.Windows.Forms.PaintEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.Glyph.SetBehavior(System.Windows.Forms.Design.Behavior.Behavior)">
      <summary vsli:raw="Changes the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Modifica l'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> associato all'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <param name="behavior" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; to associate with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> da associare all'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Glyph.Behavior">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Ottiene l'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> associato all'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Behavior&quot; /&gt; associated with the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if there is no behavior.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Behavior" /> associato a <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> oppure <see langword="null" /> se non è disponibile alcun comportamento.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.Glyph.Bounds">
      <summary vsli:raw="Gets the bounds of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Ottiene i limiti dell'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; representing the bounds of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Oggetto <see cref="T:System.Drawing.Rectangle" /> che rappresenta i limiti dell'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.GlyphCollection">
      <summary vsli:raw="Stores &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects in a strongly typed collection.">Archivia oggetti <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> in una raccolta fortemente tipizzata.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.#ctor(System.Windows.Forms.Design.Behavior.Glyph[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; class with the given &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; array.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> con la matrice <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> specificata.</summary>
      <param name="value" vsli:raw="An array of type &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; to populate the collection.">Matrice di tipo <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> per il popolamento dell'insieme.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.#ctor(System.Windows.Forms.Design.Behavior.GlyphCollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; class based on another &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> sulla base di un altro oggetto <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; to populate the collection.">Oggetto <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> per il popolamento dell'insieme.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Add(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; with the specified value to the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;.">Aggiunge un oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> con il valore specificato all'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; to add to the end of the collection.">Oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> da aggiungere alla fine dell'insieme.</param>
      <returns vsli:raw="The index at which the new element was inserted.">L'indice in corrispondenza del quale è stato inserito il nuovo elemento.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.AddRange(System.Windows.Forms.Design.Behavior.Glyph[])">
      <summary vsli:raw="Copies the elements of an array to the end of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;.">Copia gli elementi di una matrice alla fine di <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</summary>
      <param name="value" vsli:raw="An array of type &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; to copy to the end of the collection.">Matrice di tipo <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> da copiare alla fine dell'insieme.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.AddRange(System.Windows.Forms.Design.Behavior.GlyphCollection)">
      <summary vsli:raw="Adds the contents of another &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; to the end of the collection.">Aggiunge alla fine dell'insieme il contenuto di un altro oggetto <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</summary>
      <param name="value" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; to add to the end of the collection.">Oggetto <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> da aggiungere alla fine dell'insieme.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Contains(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; contains the specified &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Ottiene un valore che indica se l'insieme <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> contiene l'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> specificato.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; to locate.">La classe <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> da individuare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is contained in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> è incluso nella raccolta; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.CopyTo(System.Windows.Forms.Design.Behavior.Glyph[],System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; values to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; at the specified index.">Copia i valori <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> in una <see cref="T:System.Array" /> unidimensionale in corrispondenza dell'indice specificato.</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the values copied from &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;.">Istanza unidimensionale di <see cref="T:System.Array" /> destinazione dei valori copiati da <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</param>
      <param name="index" vsli:raw="The index in &lt;paramref name=&quot;array&quot; /&gt; where copying begins.">Indice in <paramref name="array" /> in corrispondenza del quale ha inizio la copia.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.IndexOf(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary vsli:raw="Returns the index of a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; in the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;.">Restituisce l'indice di un oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> dell'insieme <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; to locate.">La classe <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> da individuare.</param>
      <returns vsli:raw="The index of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; of &lt;paramref name=&quot;value&quot; /&gt; in the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;, if found; otherwise, -1.">Indice della classe <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> di <paramref name="value" /> nella classe <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />, se trovata; in caso contrario -1.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Insert(System.Int32,System.Windows.Forms.Design.Behavior.Glyph)">
      <summary vsli:raw="Inserts a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; into the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; at the specified index.">Inserisce un oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> in <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> in corrispondenza dell'indice specificato.</summary>
      <param name="index" vsli:raw="The zero-based index where &lt;paramref name=&quot;value&quot; /&gt; should be inserted.">Indice in base zero nel quale <paramref name="value" /> deve essere inserito.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; to insert.">Oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> da inserire.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.GlyphCollection.Remove(System.Windows.Forms.Design.Behavior.Glyph)">
      <summary vsli:raw="Removes a specific &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; from the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;.">Rimuove un oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> specifico da <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; to remove from the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt;.">Oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> da rimuovere da <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" />.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.GlyphCollection.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">Ottiene o imposta l'elemento in corrispondenza dell'indice specificato.</summary>
      <param name="index" vsli:raw="The zero-based index of the element.">Indice in base zero dell'elemento.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; element at the specified index.">Elemento di <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> in corrispondenza dell'indice specificato.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType">
      <summary vsli:raw="Describes the designer selection state of a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt;.">Descrive lo stato della selezione della finestra di progettazione di un oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.GlyphSelectionType.NotSelected">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is not selected.">L'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> non è selezionato.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.GlyphSelectionType.Selected">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is selected.">L'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> è selezionato.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.GlyphSelectionType.SelectedPrimary">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; is the primary selection.">
        <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> è la selezione principale.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.SnapLine">
      <summary vsli:raw="Represents the horizontal and vertical line segments that are dynamically created in the user interface (UI) to assist in the design-time layout of controls in a container. This class cannot be inherited.">Rappresenta i segmenti di linea verticali e orizzontali che vengono creati in modo dinamico nell'interfaccia utente e fungono da guida per il layout di controlli in un contenitore in fase di progettazione. La classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; class using the specified snapline type and offset.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> usando il tipo di guida di allineamento e l'offset specificati.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLineType&quot; /&gt; to create. Describes the relative position and orientation of the snapline.">Oggetto <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" /> da creare. Descrive la posizione relativa e l'orientamento della guida di allineamento.</param>
      <param name="offset" vsli:raw="The position of the snapline, in pixels, relative to the upper-left origin of the owning control.">Posizione della guida di allineamento, espressa in pixel, relativa al punto di origine superiore sinistro del controllo di appartenenza.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; class using the specified snapline type, offset, and filter name.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> usando il tipo di guida di allineamento, l'offset e il nome del filtro specificati.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLineType&quot; /&gt; to create. Describes the relative position and orientation of the snapline.">Oggetto <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" /> da creare. Descrive la posizione relativa e l'orientamento della guida di allineamento.</param>
      <param name="offset" vsli:raw="The position of the snapline, in pixels, relative to the upper-left origin of the owning control.">Posizione della guida di allineamento, espressa in pixel, relativa al punto di origine superiore sinistro del controllo di appartenenza.</param>
      <param name="filter" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; used to specify a programmer-defined category of snaplines.">Oggetto <see cref="T:System.String" /> usato per specificare una categoria di guide di allineamento definita dal programmatore.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.String,System.Windows.Forms.Design.Behavior.SnapLinePriority)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; class using the specified snapline type, offset, filter name, and priority.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> usando il tipo di guida di allineamento, l'offset, il nome del filtro e la priorità specificati.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLineType&quot; /&gt; to create. Describes the relative position and orientation of the snapline.">Oggetto <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" /> da creare. Descrive la posizione relativa e l'orientamento della guida di allineamento.</param>
      <param name="offset" vsli:raw="The position of the snapline, in pixels, relative to the upper-left origin of the owning control.">Posizione della guida di allineamento, espressa in pixel, relativa al punto di origine superiore sinistro del controllo di appartenenza.</param>
      <param name="filter" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; used to specify a programmer-defined category of snaplines.">Oggetto <see cref="T:System.String" /> usato per specificare una categoria di guide di allineamento definita dal programmatore.</param>
      <param name="priority" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLinePriority&quot; /&gt; of the snapline.">Oggetto <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" /> della guida di allineamento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.#ctor(System.Windows.Forms.Design.Behavior.SnapLineType,System.Int32,System.Windows.Forms.Design.Behavior.SnapLinePriority)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; class using the specified snapline type, offset, and priority.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> usando il tipo di guida di allineamento, l'offset e la priorità specificati.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLineType&quot; /&gt; to create. Describes the relative position and orientation of the snapline.">Oggetto <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" /> da creare. Descrive la posizione relativa e l'orientamento della guida di allineamento.</param>
      <param name="offset" vsli:raw="The position of the snapline, in pixels, relative to the upper-left origin of the owning control.">Posizione della guida di allineamento, espressa in pixel, relativa al punto di origine superiore sinistro del controllo di appartenenza.</param>
      <param name="priority" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLinePriority&quot; /&gt; of the snapline.">Oggetto <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" /> della guida di allineamento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.AdjustOffset(System.Int32)">
      <summary vsli:raw="Adjusts the &lt;see cref=&quot;P:System.Windows.Forms.Design.Behavior.SnapLine.Offset&quot; /&gt; property of the snapline.">Regola la proprietà <see cref="P:System.Windows.Forms.Design.Behavior.SnapLine.Offset" /> della guida di allineamento.</summary>
      <param name="adjustment" vsli:raw="The number of pixels to change the snapline offset by.">Numero di pixel in base al quale modificare l'offset della guida di allineamento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.ShouldSnap(System.Windows.Forms.Design.Behavior.SnapLine,System.Windows.Forms.Design.Behavior.SnapLine)">
      <summary vsli:raw="Returns a value indicating whether the specified &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; should snap to another &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt;.">Restituisce un valore che indica se l'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> specificato deve essere bloccato su un altro oggetto <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />.</summary>
      <param name="line1" vsli:raw="The specified &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt;.">Classe <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> specificata.</param>
      <param name="line2" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; to which the specified &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; is expected to snap.">Oggetto <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> sul quale deve essere bloccato l'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> specificato.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;line1&quot; /&gt; should snap to &lt;paramref name=&quot;line2&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="line1" /> deve essere bloccato su <paramref name="line2" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.Behavior.SnapLine.ToString">
      <summary vsli:raw="Returns a string representation of the current snapline.">Restituisce una rappresentazione in formato stringa della guida di allineamento corrente.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that represents the current &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt;.">Oggetto <see cref="T:System.String" /> che rappresenta l'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> corrente.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.Filter">
      <summary vsli:raw="Gets the programmer-defined filter category associated with this snapline.">Ottiene una categoria di filtri definita dal programmatore associata a questa guida di allineamento.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that defines the filter category. The default is &lt;see langword=&quot;null&quot; /&gt;.">Oggetto <see cref="T:System.String" /> che definisce la categoria di filtri. Il valore predefinito è <see langword="null" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.IsHorizontal">
      <summary vsli:raw="Gets a value indicating whether the snapline has a horizontal orientation.">Ottiene un valore che indica se l'orientamento della guida di allineamento è orizzontale.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the snapline is horizontal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la guida di allineamento è orizzontale; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.IsVertical">
      <summary vsli:raw="Gets a value indicating whether the snapline has a vertical orientation.">Ottiene un valore che indica se l'orientamento della guida di allineamento è verticale.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the snapline is vertical; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la guida di allineamento è verticale; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.Offset">
      <summary vsli:raw="Gets the number of pixels that the snapline is offset from the origin of the associated control.">Ottiene il numero di pixel che separa la guida di allineamento dall'origine del controllo associato.</summary>
      <returns vsli:raw="The offset, in pixels, of the snapline.">Offset, in pixel, della guida di allineamento.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.Priority">
      <summary vsli:raw="Gets a value indicating the relative importance of the snapline.">Ottiene un valore che indica l'importanza relativa della guida di allineamento.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLinePriority&quot; /&gt; that represents the priority category of a snapline.">Oggetto <see cref="T:System.Windows.Forms.Design.Behavior.SnapLinePriority" /> che rappresenta la categoria di priorità di una guida di allineamento.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.Behavior.SnapLine.SnapLineType">
      <summary vsli:raw="Gets the type of a snapline, which indicates the general location and orientation.">Ottiene il tipo di una guida di allineamento che indica la posizione generale e l'orientamento.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLineType&quot; /&gt; that represents the orientation and general location, relative to control edges, of a snapline.">Oggetto <see cref="T:System.Windows.Forms.Design.Behavior.SnapLineType" /> che rappresenta l'orientamento e la posizione generale, relativa ai bordi del controllo, di una guida di allineamento.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.SnapLinePriority">
      <summary vsli:raw="Specifies the relative importance of a snapline.">Specifica l'importanza relativa di una guida di allineamento.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.Always">
      <summary vsli:raw="The priority category that is equivalent to the highest priority of all the current snaplines. Indicates that this category of snapline should always be active.">Categoria di priorità che equivale alla priorità più elevata di tutte le guide di allineamento correnti. Indica che questa categoria di guide di allineamento deve essere sempre attiva.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.High">
      <summary vsli:raw="The highest priority category.">Categoria di priorità più elevata.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.Low">
      <summary vsli:raw="The lowest priority category.">Categoria di priorità più bassa.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLinePriority.Medium">
      <summary vsli:raw="The middle priority category.">Categoria di priorità media.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.Behavior.SnapLineType">
      <summary vsli:raw="Specifies the orientation and relative location of a snapline.">Specifica l'orientamento e la posizione relativa di una guida di allineamento.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Baseline">
      <summary vsli:raw="A horizontal snapline typically associated with a primary internal feature of a control; for example, the base of the text string in a &lt;see cref=&quot;T:System.Windows.Forms.Label&quot; /&gt; control.">Guida di allineamento orizzontale, in genere associata a una caratteristica interna principale di un controllo, ad esempio, la base della stringa di testo in un controllo <see cref="T:System.Windows.Forms.Label" />.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Bottom">
      <summary vsli:raw="A horizontal snapline typically aligned to the bottom edge of a control.">Guida di allineamento orizzontale in genere allineata al bordo inferiore di un controllo.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Horizontal">
      <summary vsli:raw="A horizontal snapline typically not associated with an edge of a control.">Guida di allineamento orizzontale in genere non associata a un bordo di un controllo.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Left">
      <summary vsli:raw="A vertical snapline typically aligned to the left edge of a control.">Guida di allineamento verticale in genere allineata al bordo sinistro di un controllo.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Right">
      <summary vsli:raw="A vertical snapline typically aligned to the right edge of a control.">Guida di allineamento verticale in genere allineata al bordo destro di un controllo.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Top">
      <summary vsli:raw="A horizontal snapline typically aligned to the top edge of a control.">Guida di allineamento orizzontale in genere allineata al bordo superiore di un controllo.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.Behavior.SnapLineType.Vertical">
      <summary vsli:raw="A vertical snapline typically not associated with an edge of a control.">Guida di allineamento verticale in genere non associata a un bordo di un controllo.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.BorderSidesEditor">
      <summary vsli:raw="Provides an editor for setting the &lt;see cref=&quot;P:System.Windows.Forms.ToolStripStatusLabel.BorderSides&quot; /&gt; property.">Fornisce un editor per l'impostazione della proprietà <see cref="P:System.Windows.Forms.ToolStripStatusLabel.BorderSides" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.BorderSidesEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.BorderSidesEditor&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Design.BorderSidesEditor" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.BorderSidesEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the given object value using the editor style provided by &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Windows.Forms.Design.BorderSidesEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)&quot;&gt;&lt;/xref&gt;.">Modifica il valore dell'oggetto specificato utilizzando lo stile dell'editor fornito dal metodo <see cref="M:System.Windows.Forms.Design.BorderSidesEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; providing information about the control or component.">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce informazioni sul controllo o sul componente.</param>
      <param name="provider" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.IServiceProvider&quot;&gt;&lt;/xref&gt; providing custom support to other objects.">Oggetto <see cref="T:System.IServiceProvider" /> che fornisce supporto personalizzato ad altri oggetti.</param>
      <param name="value" vsli:raw="The object value to edit.">Valore dell'oggetto da modificare.</param>
      <returns vsli:raw="The edited object.">Oggetto modificato.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.BorderSidesEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Retrieves the editing style of the &lt;code data-dev-comment-type=&quot;langword&quot;&gt;EditValue&lt;/code&gt; method.">Recupera lo stile di modifica del metodo <see langword="EditValue" />.</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; providing information about the control or component.">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce informazioni sul controllo o sul componente.</param>
      <returns vsli:raw="One of the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle&quot;&gt;&lt;/xref&gt; values. If the method is not supported, this method returns &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle.None&quot;&gt;&lt;/xref&gt;.">Uno dei valori di <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" />. Se il metodo non è supportato, verrà restituito <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ComponentActionsType">
      <summary vsli:raw="Designer action items that can be associated with a component.">Attività di progettazione che possono essere associati a un componente.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ComponentActionsType.All">
      <summary vsli:raw="Represents component and service type designer actions.">Rappresenta le attività di progettazione del tipo di servizio e di componente.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ComponentActionsType.Component">
      <summary vsli:raw="Represents pull-model designer actions.">Rappresenta le attività di progettazione del modello pull.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ComponentActionsType.Service">
      <summary vsli:raw="Represents push-model designer actions.">Rappresenta le attività di progettazione del modello push.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ComponentDocumentDesigner">
      <summary vsli:raw="Base designer class for extending the design mode behavior of a root design document that supports nested components.">Classe della finestra di progettazione di base per l'estensione del comportamento della modalità di progettazione di un documento di progettazione radice che supporta i componenti annidati.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ComponentDocumentDesigner&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Design.ComponentDocumentDesigner" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Windows.Forms.Design.ComponentDocumentDesigner&quot; /&gt; and optionally releases the managed resources.">Rilascia le risorse non gestite usate da <see cref="T:System.Windows.Forms.Design.ComponentDocumentDesigner" /> e, facoltativamente, le risorse gestite.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Gets a value indicating whether the specified tool is supported by the designer.">Ottiene un valore che indica se lo strumento specificato è supportato dalla finestra di progettazione.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to test for toolbox support.">Oggetto <see cref="T:System.Drawing.Design.ToolboxItem" /> per il quale è necessario eseguire il test del supporto della casella degli strumenti.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the tool should be enabled on the toolbox; &lt;see langword=&quot;false&quot; /&gt; if the document designer doesn't know how to use the tool.">
        <see langword="true" /> se è necessario abilitare lo strumento nella casella degli strumenti; <see langword="false" /> se lo strumento non è supportato dalla finestra di progettazione del documento.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary vsli:raw="Initializes the designer with the specified component.">Inizializza la finestra di progettazione con il componente specificato.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to associate with the designer.">Oggetto <see cref="T:System.ComponentModel.IComponent" /> da associare alla finestra di progettazione.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="Adjusts the set of properties the component will expose through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">Regola l'insieme di proprietà che verrà esposto dal componente tramite un oggetto <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties" vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; that contains the properties for the class of the component.">Oggetto <see cref="T:System.Collections.IDictionary" /> che contiene le proprietà per la classe del componente.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#IRootDesigner#GetView(System.ComponentModel.Design.ViewTechnology)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;T:System.ComponentModel.Design.ViewTechnology&quot; /&gt;.">Per una descrizione di questo membro, vedere <see cref="T:System.ComponentModel.Design.ViewTechnology" />.</summary>
      <param name="technology" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ViewTechnology&quot; /&gt; that indicates a particular view technology.">Oggetto <see cref="T:System.ComponentModel.Design.ViewTechnology" /> che indica una determinata tecnologia di visualizzazione.</param>
      <returns vsli:raw="An object that represents the view for this designer.">Oggetto che rappresenta la visualizzazione per la finestra di progettazione.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)&quot; /&gt;.">Per una descrizione di questo membro, vedere <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />.</summary>
      <param name="component" vsli:raw="The component to filter the attributes of.">Componente di cui filtrare gli attributi.</param>
      <param name="attributes" vsli:raw="A dictionary of attributes that can be modified.">Dizionario degli attributi che può essere modificato.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the set of filtered attributes is to be cached; &lt;see langword=&quot;false&quot; /&gt; if the filter service must query again.">
        <see langword="true" /> se l'insieme di attributi filtrati può essere memorizzato nella cache; <see langword="false" /> se il servizio filtro deve eseguire di nuovo la query.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)&quot; /&gt;.">Per una descrizione di questo membro, vedere <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />.</summary>
      <param name="component" vsli:raw="The component to filter events for.">Componente per il quale filtrare gli eventi.</param>
      <param name="events" vsli:raw="A dictionary of events that can be modified.">Dizionario degli eventi che può essere modificato.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the set of filtered events is to be cached; &lt;see langword=&quot;false&quot; /&gt; if the filter service must query again.">
        <see langword="true" /> se l'insieme di eventi filtrati può essere memorizzato nella cache; <see langword="false" /> se il servizio filtro deve eseguire di nuovo la query.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#ITypeDescriptorFilterService#FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)&quot; /&gt;.">Per una descrizione di questo membro, vedere <see cref="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />.</summary>
      <param name="component" vsli:raw="The component to filter properties for.">Componente per il quale filtrare le proprietà.</param>
      <param name="properties" vsli:raw="A dictionary of properties that can be modified.">Dizionario delle proprietà che può essere modificato.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the set of filtered properties is to be cached; &lt;see langword=&quot;false&quot; /&gt; if the filter service must query again.">
        <see langword="true" /> se il set di proprietà filtrate può essere memorizzato nella cache; <see langword="false" /> se il servizio filtro deve eseguire di nuovo la query.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#Drawing#Design#IToolboxUser#GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)&quot; /&gt;.">Per una descrizione di questo membro, vedere <see cref="M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)" />.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to be tested for toolbox support.">L'oggetto <see cref="T:System.Drawing.Design.ToolboxItem" /> da verificare in funzione del supporto della casella degli strumenti.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the tool is supported by the toolbox and can be enabled; &lt;see langword=&quot;false&quot; /&gt; if the document designer does not know how to use the tool.">
        <see langword="true" /> se lo strumento è supportato dalla casella degli strumenti e può essere abilitato; <see langword="false" /> se la finestra di progettazione del documento ignora le modalità di utilizzo dello strumento.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentDocumentDesigner.System#Drawing#Design#IToolboxUser#ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)&quot; /&gt;.">Per una descrizione di questo membro, vedere <see cref="M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)" />.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to select.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> da selezionare.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.Control">
      <summary vsli:raw="Gets the control for the designer.">Ottiene il controllo per la finestra di progettazione.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; the designer is editing.">Oggetto <see cref="T:System.Windows.Forms.Control" /> modificato tramite la finestra di progettazione.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.System#ComponentModel#Design#IRootDesigner#SupportedTechnologies">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies&quot; /&gt;.">Per una descrizione di questo membro, vedere <see cref="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies" />.</summary>
      <returns vsli:raw="An array of supported &lt;see cref=&quot;T:System.ComponentModel.Design.ViewTechnology&quot; /&gt; values.">Matrice di valori <see cref="T:System.ComponentModel.Design.ViewTechnology" /> supportati.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.TrayAutoArrange">
      <summary vsli:raw="Gets or sets a value indicating whether the component tray for the designer is in auto-arrange mode.">Ottiene o imposta un valore che indica se la barra dei componenti della finestra di progettazione è in modalità disposizione automatica.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component tray for the designer is in auto-arrange mode; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la barra dei componenti della finestra di progettazione è in modalità disposizione automatica; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentDocumentDesigner.TrayLargeIcon">
      <summary vsli:raw="Gets or sets a value indicating whether the component tray for the designer is in large icon mode.">Ottiene o imposta un valore che indica se la barra dei componenti della finestra di progettazione è in modalità icone grandi.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component tray for the designer is in large icon mode; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se la barra dei componenti della finestra di progettazione è in modalità icone grandi; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ComponentTray">
      <summary vsli:raw="Provides behavior for the component tray of a designer.">Fornisce il comportamento della barra dei componenti di una finestra di progettazione.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.#ctor(System.ComponentModel.Design.IDesigner,System.IServiceProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ComponentTray&quot; /&gt; class using the specified designer and service provider.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Design.ComponentTray" /> utilizzando la finestra di progettazione e il provider di servizi specificati.</summary>
      <param name="mainDesigner" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesigner&quot; /&gt; that is the main or document designer for the current project.">Oggetto <see cref="T:System.ComponentModel.Design.IDesigner" /> che rappresenta la finestra di progettazione principale o la finestra di progettazione del documento per il progetto corrente.</param>
      <param name="serviceProvider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; that can be used to obtain design-time services.">Oggetto <see cref="T:System.IServiceProvider" /> che consente di ottenere i servizi della fase di progettazione.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.AddComponent(System.ComponentModel.IComponent)">
      <summary vsli:raw="Adds a component to the tray.">Aggiunge un componente alla barra.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to add to the tray.">Oggetto <see cref="T:System.ComponentModel.IComponent" /> da aggiungere alla barra.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.CanCreateComponentFromTool(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Gets a value indicating whether the specified tool can be used to create a new component.">Ottiene un valore che indica se è possibile utilizzare lo strumento specificato per creare un nuovo componente.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to test.">Oggetto <see cref="T:System.Drawing.Design.ToolboxItem" /> da verificare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified tool can be used to create a component; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se è possibile utilizzare lo strumento specificato per creare un componente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.CanDisplayComponent(System.ComponentModel.IComponent)">
      <summary vsli:raw="Gets a value indicating whether the specified component can be displayed.">Ottiene un valore che indica se è possibile visualizzare il componente specificato.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to test.">Oggetto <see cref="T:System.ComponentModel.IComponent" /> da verificare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component can be displayed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se è possibile visualizzare il componente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.CreateComponentFromTool(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Creates a component from the specified toolbox item, adds the component to the current document, and displays a representation for the component in the component tray.">Crea un componente dall'elemento della casella degli strumenti specificato, aggiunge il componente al documento corrente e visualizza una rappresentazione del componente nella barra dei componenti.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to create a component from.">Oggetto <see cref="T:System.Drawing.Design.ToolboxItem" /> da cui creare un componente.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.DisplayError(System.Exception)">
      <summary vsli:raw="Displays an error message to the user with information about the specified exception.">Visualizza un messaggio di errore con le informazioni sull'eccezione specificata.</summary>
      <param name="e" vsli:raw="The exception about which to display information.">Eccezione per la quale visualizzare le informazioni.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Windows.Forms.Design.ComponentTray&quot; /&gt; and optionally releases the managed resources.">Rilascia le risorse non gestite usate da <see cref="T:System.Windows.Forms.Design.ComponentTray" /> e, facoltativamente, le risorse gestite.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetLocation(System.ComponentModel.IComponent)">
      <summary vsli:raw="Gets the location of the specified component, relative to the upper-left corner of the component tray.">Ottiene la posizione del componente specificato, in relazione all'angolo superiore sinistro della barra dei componenti.</summary>
      <param name="receiver" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to retrieve the location of.">Oggetto <see cref="T:System.ComponentModel.IComponent" /> di cui recuperare la posizione.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; indicating the coordinates of the specified component, or an empty &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; if the specified component could not be found in the component tray. An empty &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; has an &lt;see cref=&quot;P:System.Drawing.Point.IsEmpty&quot; /&gt; property equal to &lt;see langword=&quot;true&quot; /&gt; and typically has &lt;see cref=&quot;P:System.Drawing.Point.X&quot; /&gt; and &lt;see cref=&quot;P:System.Drawing.Point.Y&quot; /&gt; properties that are each equal to zero.">Oggetto <see cref="T:System.Drawing.Point" /> che indica le coordinate del componente specificato oppure un oggetto <see cref="T:System.Drawing.Point" /> vuoto se non è stato possibile individuare il componente specificato nella barra dei componenti. La proprietà <see cref="T:System.Drawing.Point" /> di un oggetto <see cref="P:System.Drawing.Point.IsEmpty" /> vuoto è impostata su <see langword="true" />; inoltre in genere entrambe le relative proprietà <see cref="P:System.Drawing.Point.X" /> e <see cref="P:System.Drawing.Point.Y" /> sono uguali a zero.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetNextComponent(System.ComponentModel.IComponent,System.Boolean)">
      <summary vsli:raw="Similar to &lt;see cref=&quot;M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)&quot; /&gt;, this method returns the next component in the tray, given a starting component.">Simile al metodo <see cref="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)" />, questo metodo restituisce il componente successivo nella barra, dato un componente iniziale.</summary>
      <param name="component" vsli:raw="The component from which to start enumerating.">Componente da cui iniziare l'enumerazione.</param>
      <param name="forward" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to enumerate forward through the list; otherwise, &lt;see langword=&quot;false&quot; /&gt; to enumerate backward.">
        <see langword="true" /> per enumerare l'elenco in ordine discendente; in caso contrario, <see langword="false" /> per enumerare in ordine ascendente.</param>
      <returns vsli:raw="The next component in the component tray, or &lt;see langword=&quot;null&quot; /&gt;, if the end of the list is encountered (or the beginning, if &lt;paramref name=&quot;forward&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;).">Componente successivo nella barra dei componenti oppure <see langword="null" />, se viene raggiunta la fine dell'elenco (o l'inizio, se il parametro <paramref name="forward" /> è <see langword="false" />).</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetService(System.Type)">
      <summary vsli:raw="Gets the requested service type.">Ottiene il tipo di servizio richiesto.</summary>
      <param name="serviceType" vsli:raw="The type of the service to retrieve.">Tipo di servizio da recuperare.</param>
      <returns vsli:raw="An instance of the requested service, or &lt;see langword=&quot;null&quot; /&gt; if the service could not be found.">Istanza del servizio richiesto oppure <see langword="null" /> se non è stato possibile individuare il servizio.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.GetTrayLocation(System.ComponentModel.IComponent)">
      <summary vsli:raw="Gets the value of the &lt;see langword=&quot;Location&quot; /&gt; extender property.">Ottiene il valore della proprietà di estensione <see langword="Location" />.</summary>
      <param name="receiver" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; that receives the location extender property.">Oggetto <see cref="T:System.ComponentModel.IComponent" /> che riceve la proprietà di estensione della posizione.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; representing the location of &lt;paramref name=&quot;receiver&quot; /&gt;.">Oggetto <see cref="T:System.Drawing.Point" /> che rappresenta la posizione di <paramref name="receiver" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.IsTrayComponent(System.ComponentModel.IComponent)">
      <summary vsli:raw="Tests a component for presence in the component tray.">Verifica la presenza di un componente nella barra dei componenti.</summary>
      <param name="comp" vsli:raw="The component to test for presence in the component tray.">Componente di cui verificare la presenza nella barra dei componenti.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;comp&quot; /&gt; is being shown on the tray; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="comp" /> viene visualizzato nella barra; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Called when an object that has been dragged is dropped on the component tray.">Questo metodo viene chiamato quando un oggetto selezionato viene trascinato sulla barra dei componenti.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">Oggetto <see cref="T:System.Windows.Forms.DragEventArgs" /> che fornisce i dati per l'evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Called when an object is dragged over, and has entered the area over, the component tray.">Questo metodo viene chiamato quando un oggetto viene trascinato e inserito sulla barra dei componenti.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">Oggetto <see cref="T:System.Windows.Forms.DragEventArgs" /> che fornisce i dati per l'evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragLeave(System.EventArgs)">
      <summary vsli:raw="Called when an object is dragged out of the area over the component tray.">Questo metodo viene chiamato quando un oggetto viene trascinato fuori dalla barra dei componenti.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that provides data for the event.">Oggetto <see cref="T:System.EventArgs" /> che fornisce i dati per l'evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Called when an object is dragged over the component tray.">Questo metodo viene chiamato quando un oggetto viene trascinato sulla barra dei componenti.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">Oggetto <see cref="T:System.Windows.Forms.DragEventArgs" /> che fornisce i dati per l'evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary vsli:raw="Called during an OLE drag and drop operation to provide an opportunity for the component tray to give feedback to the user about the results of dropping the object at a specific point.">Questo metodo viene chiamato durante un'operazione di trascinamento OLE, al fine di consentire all'utente di visualizzare sulla barra dei componenti i risultati del trascinamento di un oggetto in un punto specifico.</summary>
      <param name="gfevent" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.GiveFeedbackEventArgs&quot; /&gt; that provides data for the event.">Oggetto <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> che fornisce i dati per l'evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.Windows.Forms.Control.Layout&quot; /&gt; event.">Genera l'evento <see cref="E:System.Windows.Forms.Control.Layout" />.</summary>
      <param name="levent" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.LayoutEventArgs&quot; /&gt; that contains the event data.">Oggetto <see cref="T:System.Windows.Forms.LayoutEventArgs" /> che contiene i dati dell'evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnLostCapture">
      <summary vsli:raw="Called when a mouse drag selection operation is canceled.">Questo metodo viene chiamato quando un'operazione di trascinamento della selezione viene annullata.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
      <summary vsli:raw="Called when the mouse is double clicked over the component tray.">Questo metodo viene chiamato quando si fa doppio clic con il mouse sulla barra dei componenti.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that provides data for the event.">Oggetto <see cref="T:System.EventArgs" /> che fornisce i dati per l'evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary vsli:raw="Called when the mouse button is pressed.">Questo metodo viene chiamato quando viene premuto il pulsante del mouse.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.MouseEventArgs&quot; /&gt; that provides data for the event.">Oggetto <see cref="T:System.Windows.Forms.MouseEventArgs" /> che fornisce i dati per l'evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary vsli:raw="Called when the mouse cursor position has changed.">Questo metodo viene chiamato quando viene modificata la posizione del cursore del mouse.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.MouseEventArgs&quot; /&gt; that provides data for the event.">Oggetto <see cref="T:System.Windows.Forms.MouseEventArgs" /> che fornisce i dati per l'evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary vsli:raw="Called when the mouse button has been released.">Questo metodo viene chiamato quando viene rilasciato il pulsante del mouse.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.MouseEventArgs&quot; /&gt; that provides data for the event.">Oggetto <see cref="T:System.Windows.Forms.MouseEventArgs" /> che fornisce i dati per l'evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary vsli:raw="Called when the view for the component tray should be refreshed.">Questo metodo viene chiamato quando è necessario aggiornare la visualizzazione della barra dei componenti.</summary>
      <param name="pe" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.PaintEventArgs&quot; /&gt; that provides data for the event.">Oggetto <see cref="T:System.Windows.Forms.PaintEventArgs" /> che fornisce i dati per l'evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.OnSetCursor">
      <summary vsli:raw="Called to set the mouse cursor.">Questo metodo viene chiamato per impostare il cursore del mouse.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.RemoveComponent(System.ComponentModel.IComponent)">
      <summary vsli:raw="Removes the specified component from the tray.">Rimuove il componente specificato dalla barra.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to remove from the tray.">Oggetto <see cref="T:System.ComponentModel.IComponent" /> da rimuovere dalla barra.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.SetLocation(System.ComponentModel.IComponent,System.Drawing.Point)">
      <summary vsli:raw="Sets the location of the specified component to the specified location.">Imposta il componente specificato sulla posizione specificata.</summary>
      <param name="receiver" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to set the location of.">Oggetto <see cref="T:System.ComponentModel.IComponent" /> di cui impostare la posizione.</param>
      <param name="location" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; indicating the new location for the specified component.">Oggetto <see cref="T:System.Drawing.Point" /> che indica la nuova posizione del componente specificato.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.SetTrayLocation(System.ComponentModel.IComponent,System.Drawing.Point)">
      <summary vsli:raw="Sets the value of the &lt;see langword=&quot;Location&quot; /&gt; extender property.">Imposta il valore della proprietà di estensione <see langword="Location" />.</summary>
      <param name="receiver" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; that receives the location extender property.">Oggetto <see cref="T:System.ComponentModel.IComponent" /> che riceve la proprietà di estensione della posizione.</param>
      <param name="location" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; representing the location of &lt;paramref name=&quot;receiver&quot; /&gt;.">Oggetto <see cref="T:System.Drawing.Point" /> che rappresenta la posizione di <paramref name="receiver" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.System#ComponentModel#IExtenderProvider#CanExtend(System.Object)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.ComponentModel.IExtenderProvider.CanExtend(System.Object)&quot; /&gt;.">Per una descrizione di questo membro, vedere <see cref="M:System.ComponentModel.IExtenderProvider.CanExtend(System.Object)" />.</summary>
      <param name="extendee" vsli:raw="The object to receive the extender properties.">Oggetto che dovrà ricevere le proprietà di estensione.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this object can provide extender properties to the specified object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se questo oggetto è in grado di fornire proprietà di estensione all'oggetto specificato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentTray.WndProc(System.Windows.Forms.Message@)">
      <summary vsli:raw="Processes Windows messages.">Elabora i messaggi di Windows.</summary>
      <param name="m" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Message&quot; /&gt; to process.">Oggetto <see cref="T:System.Windows.Forms.Message" /> da elaborare.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentTray.AutoArrange">
      <summary vsli:raw="Gets or sets a value indicating whether the tray items are automatically aligned.">Ottiene o imposta un valore che indica se gli elementi della barra vengono allineati automaticamente.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the tray items are automatically arranged; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se gli elementi della barra vengono disposti automaticamente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentTray.ComponentCount">
      <summary vsli:raw="Gets the number of components contained in the tray.">Ottiene il numero di componenti contenuti nella barra.</summary>
      <returns vsli:raw="The number of components in the tray.">Numero di componenti nella barra.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentTray.ShowLargeIcons">
      <summary vsli:raw="Gets or sets a value indicating whether the tray displays a large icon to represent each component in the tray.">Ottiene o imposta un valore che indica se nella barra viene visualizzata un'icona grande per ciascun componente.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if large icons are displayed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se vengono visualizzate icone grandi; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ControlDesigner">
      <summary vsli:raw="Extends the design mode behavior of a &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt;.">Estende il comportamento della modalità di progettazione di un oggetto <see cref="T:System.Windows.Forms.Control" />.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ControlDesigner.accessibilityObj">
      <summary vsli:raw="Specifies the accessibility object for the designer.">Specifica l'oggetto Accessibility per la finestra di progettazione.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ControlDesigner.InvalidPoint">
      <summary vsli:raw="Defines a local &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; that represents the values of an invalid &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt;.">Definisce un oggetto <see cref="T:System.Drawing.Point" /> locale che rappresenta i valori di un oggetto <see cref="T:System.Drawing.Point" /> non valido.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.BaseWndProc(System.Windows.Forms.Message@)">
      <summary vsli:raw="Processes Windows messages.">Elabora i messaggi di Windows.</summary>
      <param name="m" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Message&quot; /&gt; to process.">Oggetto <see cref="T:System.Windows.Forms.Message" /> da elaborare.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.CanBeParentedTo(System.ComponentModel.Design.IDesigner)">
      <summary vsli:raw="Indicates if this designer's control can be parented by the control of the specified designer.">Indica se il controllo di questa finestra di progettazione può essere figlio del controllo della finestra di progettazione specificata.</summary>
      <param name="parentDesigner" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.Design.IDesigner&quot; /&gt; that manages the control to check.">Oggetto <see cref="T:System.ComponentModel.Design.IDesigner" /> che gestisce il controllo da verificare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the control managed by the specified designer can parent the control managed by this designer; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il controllo gestito tramite la finestra di progettazione specificata può essere un controllo figlio del controllo gestito tramite questa finestra di progettazione; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.DefWndProc(System.Windows.Forms.Message@)">
      <summary vsli:raw="Provides default processing for Windows messages.">Fornisce l'elaborazione predefinita per i messaggi di Windows.</summary>
      <param name="m" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Message&quot; /&gt; to process.">Oggetto <see cref="T:System.Windows.Forms.Message" /> da elaborare.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.DisplayError(System.Exception)">
      <summary vsli:raw="Displays information about the specified exception to the user.">Visualizza informazioni sull'eccezione specificata.</summary>
      <param name="e" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; to display.">Oggetto <see cref="T:System.Exception" /> da visualizzare.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt; and optionally releases the managed resources.">Rilascia le risorse non gestite usate da <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> e, facoltativamente, le risorse gestite.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.EnableDesignMode(System.Windows.Forms.Control,System.String)">
      <summary vsli:raw="Enables design time functionality for a child control.">Abilita la funzionalità della fase di progettazione per un controllo figlio.</summary>
      <param name="child" vsli:raw="The child control for which design mode will be enabled.">Controllo figlio per il quale viene abilitata la modalità di progettazione.</param>
      <param name="name" vsli:raw="The name of &lt;paramref name=&quot;child&quot; /&gt; as exposed to the end user.">Nome del controllo <paramref name="child" /> esposto all'utente finale.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;child&quot; /&gt; or &lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="child" /> o <paramref name="name" /> è <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the child control could be enabled for design time; &lt;see langword=&quot;false&quot; /&gt; if the hosting infrastructure does not support it.">
        <see langword="true" /> se il controllo figlio può essere abilitato per la fase di progettazione; <see langword="false" /> se la infrastruttura host non supporta questa funzionalità.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.EnableDragDrop(System.Boolean)">
      <summary vsli:raw="Enables or disables drag-and-drop support for the control being designed.">Abilita o disabilita il supporto delle operazioni di trascinamento per il controllo in fase di progettazione.</summary>
      <param name="value" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to enable drag-and-drop support for the control; &lt;see langword=&quot;false&quot; /&gt; if the control should not have drag-and-drop support. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per abilitare il supporto per le operazioni di trascinamento del controllo; <see langword="false" /> per disabilitare il supporto per tali operazioni. Il valore predefinito è <see langword="false" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.GetControlGlyph(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph&quot; /&gt; representing the bounds of this control.">Restituisce un oggetto <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> che rappresenta i limiti di questo controllo.</summary>
      <param name="selectionType" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphSelectionType&quot; /&gt; value that specifies the selection state.">Valore <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> che specifica lo stato di selezione.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph&quot; /&gt; representing the bounds of this control.">Oggetto <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> che rappresenta i limiti di questo controllo.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary vsli:raw="Gets a collection of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects representing the selection borders and grab handles for a standard control.">Ottiene un insieme degli oggetti <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> che rappresentano i bordi di selezione e i punti di controllo per un controllo standard.</summary>
      <param name="selectionType" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphSelectionType&quot; /&gt; value that specifies the selection state.">Valore <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> che specifica lo stato di selezione.</param>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects.">Raccolta di oggetti <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.GetHitTest(System.Drawing.Point)">
      <summary vsli:raw="Indicates whether a mouse click at the specified point should be handled by the control.">Indica se il clic del mouse nel punto specificato deve essere gestito dal controllo.</summary>
      <param name="point" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; indicating the position at which the mouse was clicked, in screen coordinates.">Oggetto <see cref="T:System.Drawing.Point" /> che indica la posizione in cui è stato fatto clic con il mouse, nelle coordinate dello schermo.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a click at the specified point is to be handled by the control; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il clic nel punto specificato deve essere gestito dal controllo; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.HookChildControls(System.Windows.Forms.Control)">
      <summary vsli:raw="Routes messages from the child controls of the specified control to the designer.">Invia alla finestra di progettazione i messaggi dai controlli figlio del controllo specificato.</summary>
      <param name="firstChild" vsli:raw="The first child &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; to process. This method may recursively call itself for children of the control.">Primo oggetto <see cref="T:System.Windows.Forms.Control" /> figlio da elaborare. Questo metodo può chiamare se stesso in modo ricorsivo, per gli oggetti figlio del controllo.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary vsli:raw="Initializes the designer with the specified component.">Inizializza la finestra di progettazione con il componente specificato.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to associate the designer with. This component must always be an instance of, or derive from, &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt;.">Oggetto <see cref="T:System.ComponentModel.IComponent" /> da associare alla finestra di progettazione. È necessario che tale componente sia sempre un'istanza dell'oggetto <see cref="T:System.Windows.Forms.Control" /> o derivi da esso.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.InitializeExistingComponent(System.Collections.IDictionary)">
      <summary vsli:raw="Re-initializes an existing component.">Reinizializza un componente esistente.</summary>
      <param name="defaultValues" vsli:raw="A name/value dictionary of default values to apply to properties. May be &lt;see langword=&quot;null&quot; /&gt; if no default values are specified.">Dizionario in formato nome/valore dei valori predefiniti da applicare alle proprietà. Può essere <see langword="null" /> se non è specificato alcun valore predefinito.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <summary vsli:raw="Initializes a newly created component.">Inizializza un nuovo componente creato.</summary>
      <param name="defaultValues" vsli:raw="A name/value dictionary of default values to apply to properties. May be &lt;see langword=&quot;null&quot; /&gt; if no default values are specified.">Dizionario in formato nome/valore dei valori predefiniti da applicare alle proprietà. Può essere <see langword="null" /> se non è specificato alcun valore predefinito.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.InternalControlDesigner(System.Int32)">
      <summary vsli:raw="Returns the internal control designer with the specified index in the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt;.">Restituisce la finestra di progettazione controlli interna con l'indice specificato nell'oggetto <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</summary>
      <param name="internalControlIndex" vsli:raw="A specified index to select the internal control designer. This index is zero-based.">Indice specificato per la selezione della finestra di progettazione controlli interna. Questo indice è in base zero.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt; at the specified index.">Oggetto <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> in corrispondenza dell'indice specificato.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.NumberOfInternalControlDesigners">
      <summary vsli:raw="Returns the number of internal control designers in the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt;.">Restituisce il numero di finestre di progettazione controlli interne nell'oggetto <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</summary>
      <returns vsli:raw="The number of internal control designers in the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt;.">Numero di finestre di progettazione controlli interne nell'oggetto <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnContextMenu(System.Int32,System.Int32)">
      <summary vsli:raw="Shows the context menu and provides an opportunity to perform additional processing when the context menu is about to be displayed.">Visualizza il menu di scelta rapida e consente di eseguire un'ulteriore elaborazione quando tale menu sta per essere visualizzato.</summary>
      <param name="x" vsli:raw="The x coordinate at which to display the context menu.">Coordinata x in corrispondenza della quale visualizzare il menu di scelta rapida.</param>
      <param name="y" vsli:raw="The y coordinate at which to display the context menu.">Coordinata y in corrispondenza della quale visualizzare il menu di scelta rapida.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnCreateHandle">
      <summary vsli:raw="Provides an opportunity to perform additional processing immediately after the control handle has been created.">Consente di eseguire un'ulteriore elaborazione subito dopo la creazione dell'handle del controllo.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragComplete(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Receives a call to clean up a drag-and-drop operation.">Riceve una chiamata per la pulitura di un'operazione di trascinamento e rilascio.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">Oggetto <see cref="T:System.Windows.Forms.DragEventArgs" /> che fornisce i dati per l'evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Receives a call when a drag-and-drop object is dropped onto the control designer view.">Riceve una chiamata quando un oggetto a trascinamento e rilascio viene rilasciato nella finestra di progettazione del controllo.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">Oggetto <see cref="T:System.Windows.Forms.DragEventArgs" /> che fornisce i dati per l'evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Receives a call when a drag-and-drop operation enters the control designer view.">Riceve una chiamata quando un'operazione di trascinamento e rilascio entra nella finestra di progettazione del controllo.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">Oggetto <see cref="T:System.Windows.Forms.DragEventArgs" /> che fornisce i dati per l'evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragLeave(System.EventArgs)">
      <summary vsli:raw="Receives a call when a drag-and-drop operation leaves the control designer view.">Riceve una chiamata quando un'operazione di trascinamento e rilascio esce dalla finestra di progettazione del controllo.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that provides data for the event.">Oggetto <see cref="T:System.EventArgs" /> che fornisce i dati per l'evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Receives a call when a drag-and-drop object is dragged over the control designer view.">Riceve una chiamata quando un oggetto a trascinamento e rilascio viene trascinato nella finestra di progettazione del controllo.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">Oggetto <see cref="T:System.Windows.Forms.DragEventArgs" /> che fornisce i dati per l'evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary vsli:raw="Receives a call when a drag-and-drop operation is in progress to provide visual cues based on the location of the mouse while a drag operation is in progress.">Riceve una chiamata durante l'esecuzione di un'operazione di trascinamento e rilascio, per fornire suggerimenti visivi in base alla posizione del mouse durante il trascinamento.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.GiveFeedbackEventArgs&quot; /&gt; that provides data for the event.">Oggetto <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> che fornisce i dati per l'evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragBegin(System.Int32,System.Int32)">
      <summary vsli:raw="Receives a call in response to the left mouse button being pressed and held while over the component.">Riceve una chiamata quando il pulsante sinistro del mouse viene tenuto premuto mentre il puntatore è posizionato sul componente.</summary>
      <param name="x" vsli:raw="The x position of the mouse in screen coordinates.">Posizione x del mouse, in base alle coordinate dello schermo.</param>
      <param name="y" vsli:raw="The y position of the mouse in screen coordinates.">Posizione y del mouse, in base alle coordinate dello schermo.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragEnd(System.Boolean)">
      <summary vsli:raw="Receives a call at the end of a drag-and-drop operation to complete or cancel the operation.">Riceve una chiamata alla fine di un'operazione di trascinamento e rilascio per completare o annullare l'operazione.</summary>
      <param name="cancel" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to cancel the drag; &lt;see langword=&quot;false&quot; /&gt; to commit it.">
        <see langword="true" /> per annullare il trascinamento; <see langword="false" /> per eseguirne il commit.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragMove(System.Int32,System.Int32)">
      <summary vsli:raw="Receives a call for each movement of the mouse during a drag-and-drop operation.">Riceve una chiamata per ciascun movimento del mouse durante un'operazione di trascinamento e rilascio.</summary>
      <param name="x" vsli:raw="The x position of the mouse in screen coordinates.">Posizione x del mouse, in base alle coordinate dello schermo.</param>
      <param name="y" vsli:raw="The y position of the mouse in screen coordinates.">Posizione y del mouse, in base alle coordinate dello schermo.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseEnter">
      <summary vsli:raw="Receives a call when the mouse first enters the control.">Riceve una chiamata quando il mouse viene posizionato per la prima volta sul controllo.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseHover">
      <summary vsli:raw="Receives a call after the mouse hovers over the control.">Riceve una chiamata dopo il passaggio del mouse sul controllo.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnMouseLeave">
      <summary vsli:raw="Receives a call when the mouse first enters the control.">Riceve una chiamata quando il mouse viene posizionato per la prima volta sul controllo.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnPaintAdornments(System.Windows.Forms.PaintEventArgs)">
      <summary vsli:raw="Receives a call when the control that the designer is managing has painted its surface so the designer can paint any additional adornments on top of the control.">Riceve una chiamata una volta che il controllo gestito dalla finestra di progettazione ha creato la relativa superficie, in modo da consentire l'uso della finestra di progettazione per aggiungere ulteriori disegni sul controllo.</summary>
      <param name="pe" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.PaintEventArgs&quot; /&gt; the designer can use to draw on the control.">Oggetto <see cref="T:System.Windows.Forms.PaintEventArgs" /> che può essere utilizzato nella finestra di progettazione per creare il controllo.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnSetComponentDefaults">
      <summary vsli:raw="Called when the designer is initialized.">Viene chiamato quando la finestra di progettazione viene inizializzata.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.OnSetCursor">
      <summary vsli:raw="Receives a call each time the cursor needs to be set.">Riceve una chiamata ogni volta che è necessario impostare il cursore.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="Adjusts the set of properties the component exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">Regola l'insieme di proprietà che verrà esposto dal componente tramite un oggetto <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties" vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; containing the properties for the class of the component.">Oggetto <see cref="T:System.Collections.IDictionary" /> che contiene le proprietà per la classe del componente.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.UnhookChildControls(System.Windows.Forms.Control)">
      <summary vsli:raw="Routes messages for the children of the specified control to each control rather than to a parent designer.">Invia i messaggi per i controlli figlio del controllo specificato a ciascun controllo anziché a una finestra di progettazione padre.</summary>
      <param name="firstChild" vsli:raw="The first child &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; to process. This method may recursively call itself for children of the control.">Primo oggetto <see cref="T:System.Windows.Forms.Control" /> figlio da elaborare. Questo metodo può chiamare se stesso in modo ricorsivo, per gli oggetti figlio del controllo.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary vsli:raw="Processes Windows messages and optionally routes them to the control.">Elabora i messaggi di Windows ed eventualmente li invia al controllo.</summary>
      <param name="m" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Message&quot; /&gt; to process.">Oggetto <see cref="T:System.Windows.Forms.Message" /> da elaborare.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.AccessibilityObject">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; assigned to the control.">Ottiene l'oggetto <see cref="T:System.Windows.Forms.AccessibleObject" /> assegnato al controllo.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; assigned to the control.">Oggetto <see cref="T:System.Windows.Forms.AccessibleObject" /> assegnato al controllo.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.AssociatedComponents">
      <summary vsli:raw="Gets the collection of components associated with the component managed by the designer.">Ottiene l'insieme dei componenti associati al componente gestito dalla finestra di progettazione.</summary>
      <returns vsli:raw="The components that are associated with the component managed by the designer.">Componenti associati al componente gestito dalla finestra di progettazione.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.AutoResizeHandles">
      <summary vsli:raw="Gets or sets a value indicating whether resize handle allocation depends on the value of the &lt;see cref=&quot;P:System.Windows.Forms.Control.AutoSize&quot; /&gt; property.">Ottiene o imposta un valore che indica se l'assegnazione dei quadratini di ridimensionamento dipende dal valore della proprietà <see cref="P:System.Windows.Forms.Control.AutoSize" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if resize handle allocation depends on the value of the &lt;see cref=&quot;P:System.Windows.Forms.Control.AutoSize&quot; /&gt; and &lt;see langword=&quot;AutoSizeMode&quot; /&gt; properties; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'assegnazione dei quadratini di ridimensionamento dipende dal valore delle proprietà <see cref="P:System.Windows.Forms.Control.AutoSize" /> e <see langword="AutoSizeMode" />; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.BehaviorService">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt; from the design environment.">Ottiene l'oggetto <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> dall'ambiente di progettazione.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.BehaviorService&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if the service is unavailable.">Oggetto <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> oppure <see langword="null" /> se il servizio non è disponibile.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.Control">
      <summary vsli:raw="Gets the control that the designer is designing.">Ottiene il controllo progettato tramite la finestra di progettazione.</summary>
      <returns vsli:raw="The control that the designer is designing.">Controllo progettato tramite la finestra di progettazione.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.EnableDragRect">
      <summary vsli:raw="Gets a value indicating whether drag rectangles can be drawn on this designer component.">Ottiene un valore che indica se è possibile creare i rettangoli di trascinamento sul componente della finestra di progettazione.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if drag rectangles can be drawn; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se è possibile creare i rettangoli di trascinamento; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.InheritanceAttribute">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.ComponentModel.InheritanceAttribute&quot; /&gt; of the designer.">Ottiene l'oggetto <see cref="T:System.ComponentModel.InheritanceAttribute" /> della finestra di progettazione.</summary>
      <returns vsli:raw="&lt;see cref=&quot;F:System.ComponentModel.InheritanceAttribute.Inherited&quot; /&gt; if the designer is a root designer; otherwise, the value of the parent designer's &lt;see cref=&quot;P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute&quot; /&gt; property.">
        <see cref="F:System.ComponentModel.InheritanceAttribute.Inherited" /> se la finestra di progettazione è di primo livello; in caso contrario, il valore della proprietà <see cref="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute" /> della finestra di progettazione padre.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ParentComponent">
      <summary vsli:raw="Gets the parent component for the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt;.">Ottiene il componente padre per l'oggetto <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</summary>
      <returns vsli:raw="The parent component for the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt;; otherwise, &lt;see langword=&quot;null&quot; /&gt; if there is no parent component.">Componente padre per l'oggetto <see cref="T:System.Windows.Forms.Design.ControlDesigner" />; in caso contrario, <see langword="null" /> se non vi sono componenti padre.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ParticipatesWithSnapLines">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt; will allow snapline alignment during a drag operation.">Ottiene un valore che indica se l'oggetto <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> consente l'allineamento con guide durante un'operazione di trascinamento.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt; will allow snapline alignment during a drag operation when the primary drag control is over this designer; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> consente l'allineamento con guide durante un'operazione di trascinamento quando il controllo di trascinamento principale è sopra questa finestra di progettazione; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.SelectionRules">
      <summary vsli:raw="Gets the selection rules that indicate the movement capabilities of a component.">Ottiene le regole di selezione che indicano funzioni di spostamento di un componente.</summary>
      <returns vsli:raw="A bitwise combination of &lt;see cref=&quot;T:System.Windows.Forms.Design.SelectionRules&quot; /&gt; values.">Combinazione bit per bit dei valori di <see cref="T:System.Windows.Forms.Design.SelectionRules" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.SnapLines">
      <summary vsli:raw="Gets a list of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; objects representing significant alignment points for this control.">Ottiene un elenco degli oggetti <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> che rappresentano punti di allineamento significativi per questo controllo.</summary>
      <returns vsli:raw="A list of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; objects representing significant alignment points for this control.">Elenco degli oggetti <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> che rappresentano punti di allineamento significativi per questo controllo.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject">
      <summary vsli:raw="Provides an &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; for &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt;.">Fornisce un <see cref="T:System.Windows.Forms.AccessibleObject" /> per <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.#ctor(System.Windows.Forms.Design.ControlDesigner,System.Windows.Forms.Control)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject&quot; /&gt; class using the specified designer and control.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject" /> utilizzando la finestra di progettazione e il controllo specificati.</summary>
      <param name="designer" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.ControlDesigner&quot; /&gt; for the accessible object.">Oggetto <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> per l'oggetto accessibile.</param>
      <param name="control" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; for the accessible object.">Oggetto <see cref="T:System.Windows.Forms.Control" /> per l'oggetto accessibile.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetChild(System.Int32)">
      <summary vsli:raw="Retrieves the accessible child corresponding to the specified index.">Recupera l'oggetto figlio accessibile corrispondente all'indice specificato.</summary>
      <param name="index" vsli:raw="The zero-based index of the accessible child.">Indice in base zero dell'oggetto figlio accessibile.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; that represents the accessible child corresponding to the specified index.">Oggetto <see cref="T:System.Windows.Forms.AccessibleObject" /> che rappresenta l'oggetto figlio accessibile corrispondente all'indice specificato.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetChildCount">
      <summary vsli:raw="Retrieves the number of children belonging to an accessible object.">Recupera il numero di oggetti figlio che appartengono a un oggetto accessibile.</summary>
      <returns vsli:raw="The number of children belonging to an accessible object.">Numero di oggetti figlio che appartengono a un oggetto accessibile.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetFocused">
      <summary vsli:raw="Retrieves the object that has the keyboard focus.">Recupera l'oggetto con lo stato attivo.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; that specifies the currently focused child. This method returns the calling object if the object itself is focused. Returns &lt;see langword=&quot;null&quot; /&gt; if no object has focus.">Oggetto <see cref="T:System.Windows.Forms.AccessibleObject" /> che specifica l'oggetto figlio con lo stato attivo. Questo metodo restituisce l'oggetto chiamante se l'oggetto stesso ha lo stato attivo oppure <see langword="null" /> se nessuno oggetto ha lo stato attivo.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.GetSelected">
      <summary vsli:raw="Retrieves the currently selected child.">Recupera l'oggetto figlio attualmente selezionato.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; that represents the currently selected child. This method returns the calling object if the object itself is selected. Returns &lt;see langword=&quot;null&quot; /&gt; if is no child is currently selected and the object itself does not have focus.">Oggetto <see cref="T:System.Windows.Forms.AccessibleObject" /> che rappresenta l'oggetto figlio attualmente selezionato. Questo metodo restituisce l'oggetto chiamante se l'oggetto stesso è selezionato oppure <see langword="null" /> se non è selezionato alcun oggetto figlio e l'oggetto stesso non ha lo stato attivo.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.HitTest(System.Int32,System.Int32)">
      <summary vsli:raw="Retrieves the child object at the specified screen coordinates.">Restituisce l'oggetto figlio in corrispondenza delle coordinate dello schermo specificate.</summary>
      <param name="x" vsli:raw="The horizontal screen coordinate.">Coordinata orizzontale dello schermo.</param>
      <param name="y" vsli:raw="The vertical screen coordinate.">Coordinata verticale dello schermo.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; that represents the child object at the given screen coordinates. This method returns the calling object if the object itself is at the location specified. Returns &lt;see langword=&quot;null&quot; /&gt; if no object is at the tested location.">
        <see cref="T:System.Windows.Forms.AccessibleObject" /> che rappresenta l'oggetto figlio in corrispondenza delle coordinate dello schermo specificate. Questo metodo restituisce l'oggetto chiamante se l'oggetto stesso si trova nella posizione specificata. Restituisce <see langword="null" /> se nessun oggetto si trova nella posizione testata.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Bounds">
      <summary vsli:raw="Gets the points that define the boundaries of the accessible object for the designer.">Ottiene i punti che definiscono i limiti dell'oggetto accessibile per la finestra di progettazione.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; that indicates the boundaries of the accessible object for the designer.">Oggetto <see cref="T:System.Drawing.Rectangle" /> che indica i limiti dell'oggetto accessibile per la finestra di progettazione.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.DefaultAction">
      <summary vsli:raw="Gets a string that describes the default action of the specified object.">Ottiene una stringa che descrive l'azione predefinita dell'oggetto specificato.</summary>
      <returns vsli:raw="A description of the default action for a specified object.">Descrizione dell'azione predefinita per un oggetto specificato.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Description">
      <summary vsli:raw="Gets a string that describes the visual appearance of the specified object.">Ottiene una stringa che descrive l'aspetto visivo dell'oggetto specificato.</summary>
      <returns vsli:raw="A description of the object's visual appearance to the user, or &lt;see langword=&quot;null&quot; /&gt; if the object does not have a description.">Descrizione dell'aspetto visivo dell'oggetto o <see langword="null" /> se all'oggetto non è associata una descrizione.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Name">
      <summary vsli:raw="Gets or sets the object name.">Ottiene o imposta il nome dell'oggetto.</summary>
      <returns vsli:raw="The object name, or &lt;see langword=&quot;null&quot; /&gt; if the property has not been set.">Nome dell'oggetto oppure <see langword="null" /> se la proprietà non è stata impostata.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Parent">
      <summary vsli:raw="Gets the parent of an accessible object.">Ottiene l'oggetto padre di un oggetto accessibile.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Windows.Forms.AccessibleObject&quot; /&gt; that represents the parent of an accessible object, or &lt;see langword=&quot;null&quot; /&gt; if there is no parent object.">Oggetto <see cref="T:System.Windows.Forms.AccessibleObject" /> che rappresenta l'elemento padre di un oggetto accessibile o <see langword="null" /> se non c'è alcun oggetto padre.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Role">
      <summary vsli:raw="Gets the role of this accessible object.">Ottiene il ruolo di questo oggetto accessibile.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Windows.Forms.AccessibleRole&quot; /&gt; values, or &lt;see cref=&quot;F:System.Windows.Forms.AccessibleRole.None&quot; /&gt; if no role has been specified.">Uno dei valori di <see cref="T:System.Windows.Forms.AccessibleRole" /> oppure <see cref="F:System.Windows.Forms.AccessibleRole.None" /> se non è stato specificato alcun ruolo.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.State">
      <summary vsli:raw="Gets the state of this accessible object.">Ottiene lo stato di questo oggetto accessibile.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Windows.Forms.AccessibleStates&quot; /&gt; values, or &lt;see cref=&quot;F:System.Windows.Forms.AccessibleStates.None&quot; /&gt;, if no state has been set.">Uno dei valori di <see cref="T:System.Windows.Forms.AccessibleStates" /> oppure <see cref="F:System.Windows.Forms.AccessibleStates.None" /> se non è stato specificato alcuno stato.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ControlDesigner.ControlDesignerAccessibleObject.Value">
      <summary vsli:raw="Gets or sets the value of an accessible object.">Ottiene o imposta il valore di un oggetto accessibile.</summary>
      <returns vsli:raw="The value of an accessible object, or &lt;see langword=&quot;null&quot; /&gt; if the object has no value set.">Valore di un oggetto accessibile oppure <see langword="null" /> se l'oggetto non ha alcun valore impostato.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.DesignerOptions">
      <summary vsli:raw="Provides access to get and set option values for a designer.">Consente di ottenere o impostare i valori delle opzioni di una finestra di progettazione.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DesignerOptions.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.DesignerOptions&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Design.DesignerOptions" />.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.EnableInSituEditing">
      <summary vsli:raw="Gets or sets a value that enables or disables in-place editing for &lt;see cref=&quot;T:System.Windows.Forms.ToolStrip&quot; /&gt; controls.">Ottiene o imposta un valore che abilita o disabilita la funzionalità di modifica sul posto per i controlli <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if in-place editing for &lt;see cref=&quot;T:System.Windows.Forms.ToolStrip&quot; /&gt; controls is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> se la funzionalità di modifica sul posto per i controlli <see cref="T:System.Windows.Forms.ToolStrip" /> è abilitata; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.GridSize">
      <summary vsli:raw="Gets or sets a &lt;see cref=&quot;T:System.Drawing.Size&quot; /&gt; representing the dimensions of a grid unit.">Ottiene o imposta un oggetto <see cref="T:System.Drawing.Size" /> che rappresenta le dimensioni di una unità di griglia.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Size&quot; /&gt; representing the dimensions of a grid unit.">Oggetto <see cref="T:System.Drawing.Size" /> che rappresenta le dimensioni di una unità di griglia.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.ObjectBoundSmartTagAutoShow">
      <summary vsli:raw="Gets or sets a value that specifies whether a designer shows a component's smart tag panel automatically on creation.">Ottiene o imposta un valore che specifica se una finestra di progettazione visualizza automaticamente il pannello smart tag di un componente durante la creazione.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to allow a component's smart tag panel to open automatically upon creation; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> per consentire la visualizzazione automatica del pannello smart tag durante la creazione; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.ShowGrid">
      <summary vsli:raw="Gets or sets a value that enables or disables the grid in the designer.">Ottiene o imposta un valore che abilita o disabilita la griglia nella finestra di progettazione.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the grid is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> se la griglia è abilitata; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.SnapToGrid">
      <summary vsli:raw="Gets or sets a value that enables or disables whether controls are automatically placed at grid coordinates.">Ottiene o imposta un valore che abilita o disabilita il posizionamento automatico dei controlli in corrispondenza delle coordinate sulla griglia.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if snapping is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il posizionamento automatico è abilitato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.UseOptimizedCodeGeneration">
      <summary vsli:raw="Gets or sets a value that enables or disables the component cache.">Ottiene o imposta un valore che abilita o disabilita la cache dei componenti.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component cache is enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> se la cache dei componenti è abilitata; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.UseSmartTags">
      <summary vsli:raw="Gets or sets a value that enables or disables smart tags in the designer.">Ottiene o imposta un valore che abilita o disabilita gli smart tag nella finestra di progettazione.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if smart tags in the designer are enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se gli smart tag nella finestra di progettazione sono abilitati; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DesignerOptions.UseSnapLines">
      <summary vsli:raw="Gets or sets a value that enables or disables snaplines in the designer.">Ottiene o imposta un valore che abilita o disabilita le guide di allineamento nella finestra di progettazione.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if snaplines in the designer are enabled; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se le guide di allineamento nella finestra di progettazione sono abilitate. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.DockEditor">
      <summary vsli:raw="Provides a user interface for specifying a &lt;see cref=&quot;P:System.Windows.Forms.Control.Dock&quot; /&gt; property.">Fornisce un'interfaccia utente per specificare una proprietà <see cref="P:System.Windows.Forms.Control.Dock" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DockEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.DockEditor&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Design.DockEditor" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DockEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the specified object value using the editor style provided by GetEditorStyle. A service provider is provided so that any required editing services can be obtained.">Modifica il valore dell'oggetto specificato utilizzando lo stile dell'editor fornito da GetEditorStyle. Viene fornito un provider di servizi allo scopo di ottenere i servizi di modifica necessari.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che può essere usato per ottenere ulteriori informazioni sul contesto.</param>
      <param name="provider" vsli:raw="A service provider object through which editing services may be obtained.">Oggetto provider di servizi tramite il quale è possibile ottenere i servizi di modifica.</param>
      <param name="value" vsli:raw="An instance of the value being edited.">Istanza del valore in corso di modifica.</param>
      <returns vsli:raw="The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.">Nuovo valore dell'oggetto. Se il valore dell'oggetto non è stato modificato, deve essere restituito lo stesso oggetto che è stato passato.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DockEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Retrieves the editing style of the EditValue method. If the method is not supported, this will return None.">Recupera lo stile di modifica del metodo EditValue. Se il metodo non è supportato, restituirà None.</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che può essere usato per ottenere ulteriori informazioni sul contesto.</param>
      <returns vsli:raw="An enum value indicating the provided editing style.">Valore di enumerazione che indica lo stile di modifica fornito.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.DocumentDesigner">
      <summary vsli:raw="Base designer class for extending the design mode behavior of, and providing a root-level design mode view for, a &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; that supports nested controls and should receive scroll messages.">Classe base della finestra di progettazione per estendere il comportamento della modalità di progettazione e fornire una visualizzazione della modalità di progettazione a livello radice per un oggetto <see cref="T:System.Windows.Forms.Control" /> che supporta controlli annidati e che deve ricevere messaggi di scorrimento.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.DocumentDesigner&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Design.DocumentDesigner" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Windows.Forms.Design.DocumentDesigner&quot; /&gt; and optionally releases the managed resources.">Rilascia le risorse non gestite usate da <see cref="T:System.Windows.Forms.Design.DocumentDesigner" /> e, facoltativamente, le risorse gestite.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.EnsureMenuEditorService(System.ComponentModel.IComponent)">
      <summary>Controlla se esiste un servizio editor di menu e, in caso negativo, ne crea uno.</summary>
      <param name="c">Oggetto <see cref="T:System.ComponentModel.IComponent" /> per il quale verificare l'esistenza di un servizio editor di menu.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphCollection&quot; /&gt; representing the &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects.">Ottiene un oggetto <see cref="T:System.Windows.Forms.Design.Behavior.GlyphCollection" /> che rappresenta gli oggetti <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</summary>
      <param name="selectionType" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphSelectionType&quot; /&gt; value that specifies the selection state.">Valore <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> che specifica lo stato di selezione.</param>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects.">Raccolta di oggetti <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Indicates whether the specified tool is supported by the designer.">Indica se lo strumento specificato è supportato dalla finestra di progettazione.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to test for toolbox support.">Oggetto <see cref="T:System.Drawing.Design.ToolboxItem" /> per il quale è necessario eseguire il test del supporto della casella degli strumenti.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the tool should be enabled on the toolbox; &lt;see langword=&quot;false&quot; /&gt; if the document designer doesn't know how to use the tool.">
        <see langword="true" /> se è necessario abilitare lo strumento nella casella degli strumenti; <see langword="false" /> se lo strumento non è supportato dalla finestra di progettazione del documento.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary vsli:raw="Initializes the designer with the specified component.">Inizializza la finestra di progettazione con il componente specificato.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to associate with the designer.">Oggetto <see cref="T:System.ComponentModel.IComponent" /> da associare alla finestra di progettazione.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.OnContextMenu(System.Int32,System.Int32)">
      <summary vsli:raw="Called when the context menu should be displayed.">Questo metodo viene chiamato quando deve essere visualizzato il menu di scelta rapida.</summary>
      <param name="x" vsli:raw="The horizontal screen coordinate to display the context menu at.">Coordinata orizzontale dello schermo in corrispondenza della quale visualizzare il menu di scelta rapida.</param>
      <param name="y" vsli:raw="The vertical screen coordinate to display the context menu at.">Coordinata verticale dello schermo in corrispondenza della quale visualizzare il menu di scelta rapida.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.OnCreateHandle">
      <summary vsli:raw="Called immediately after the handle for the designer has been created.">Questo metodo viene chiamato subito dopo la creazione dell'handle per la finestra di progettazione.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="Adjusts the set of properties the component exposes through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">Regola l'insieme di proprietà che verrà esposto dal componente tramite un oggetto <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties" vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; that contains the properties for the class of the component.">Oggetto <see cref="T:System.Collections.IDictionary" /> che contiene le proprietà per la classe del componente.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.System#ComponentModel#Design#IRootDesigner#GetView(System.ComponentModel.Design.ViewTechnology)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;T:System.ComponentModel.Design.ViewTechnology&quot; /&gt;.">Per una descrizione di questo membro, vedere <see cref="T:System.ComponentModel.Design.ViewTechnology" />.</summary>
      <param name="technology" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.ViewTechnology&quot; /&gt; that indicates a particular view technology.">Oggetto <see cref="T:System.ComponentModel.Design.ViewTechnology" /> che indica una determinata tecnologia di visualizzazione.</param>
      <returns vsli:raw="An object that represents the view for this designer.">Oggetto che rappresenta la visualizzazione per la finestra di progettazione.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.System#Drawing#Design#IToolboxUser#GetToolSupported(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)&quot; /&gt;.">Per una descrizione di questo membro, vedere <see cref="M:System.Drawing.Design.IToolboxUser.GetToolSupported(System.Drawing.Design.ToolboxItem)" />.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to be tested for toolbox support.">L'oggetto <see cref="T:System.Drawing.Design.ToolboxItem" /> da verificare in funzione del supporto della casella degli strumenti.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the tool is supported by the toolbox and can be enabled; &lt;see langword=&quot;false&quot; /&gt; if the document designer does not know how to use the tool.">
        <see langword="true" /> se lo strumento è supportato dalla casella degli strumenti e può essere abilitato; <see langword="false" /> se la finestra di progettazione del documento ignora le modalità di utilizzo dello strumento.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.System#Drawing#Design#IToolboxUser#ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)&quot; /&gt;.">Per una descrizione di questo membro, vedere <see cref="M:System.Drawing.Design.IToolboxUser.ToolPicked(System.Drawing.Design.ToolboxItem)" />.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to select.">
        <see cref="T:System.Drawing.Design.ToolboxItem" /> da selezionare.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.ToolPicked(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Selects the specified tool.">Seleziona lo strumento specificato.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to create a component for.">Oggetto <see cref="T:System.Drawing.Design.ToolboxItem" /> per il quale creare un componente.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.DocumentDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary>Elabora i messaggi di Windows.</summary>
      <param name="m">Oggetto <see cref="T:System.Windows.Forms.Message" /> da elaborare.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.DocumentDesigner.SelectionRules">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.Design.SelectionRules&quot; /&gt; for the designer.">Ottiene l'oggetto <see cref="T:System.Windows.Forms.Design.SelectionRules" /> per la finestra di progettazione.</summary>
      <returns vsli:raw="A bitwise combination of &lt;see cref=&quot;T:System.Windows.Forms.Design.SelectionRules&quot; /&gt; values.">Combinazione bit per bit dei valori di <see cref="T:System.Windows.Forms.Design.SelectionRules" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.DocumentDesigner.System#ComponentModel#Design#IRootDesigner#SupportedTechnologies">
      <summary vsli:raw="For a description of this member, see &lt;see cref=&quot;P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies&quot; /&gt;.">Per una descrizione di questo membro, vedere <see cref="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies" />.</summary>
      <returns vsli:raw="An array of supported &lt;see cref=&quot;T:System.ComponentModel.Design.ViewTechnology&quot; /&gt; values.">Matrice di valori <see cref="T:System.ComponentModel.Design.ViewTechnology" /> supportati.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.EventHandlerService">
      <summary vsli:raw="Provides a systematic way to manage event handlers for the current document.">Fornisce un modo sistematico per gestire i gestori eventi per il documento corrente.</summary>
    </member>
    <member name="E:System.Windows.Forms.Design.EventHandlerService.EventHandlerChanged">
      <summary vsli:raw="Fires an OnEventHandlerChanged event.">Genera un evento OnEventHandlerChanged.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.#ctor(System.Windows.Forms.Control)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.EventHandlerService&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Design.EventHandlerService" />.</summary>
      <param name="focusWnd" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; which is being designed.">Oggetto <see cref="T:System.Windows.Forms.Control" /> in fase di progettazione.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.GetHandler(System.Type)">
      <summary vsli:raw="Gets the currently active event handler of the specified type.">Ottiene il gestore eventi del tipo specificato correntemente attivo.</summary>
      <param name="handlerType" vsli:raw="The type of the handler to get.">Il tipo del gestore da ottenere.</param>
      <returns vsli:raw="An instance of the handler, or &lt;see langword=&quot;null&quot; /&gt; if there is no handler of the requested type.">Una istanza del gestore, oppure <see langword="null" /> se non vi è alcun gestore del tipo richiesto.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.PopHandler(System.Object)">
      <summary vsli:raw="Pops the given handler off of the stack.">Rimuove dallo stack il gestore specificato.</summary>
      <param name="handler" vsli:raw="The handler to remove from the stack.">Il gestore da rimuovere dallo stack.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.EventHandlerService.PushHandler(System.Object)">
      <summary vsli:raw="Pushes a new event handler on the stack.">Aggiunge allo stack un nuovo gestore eventi.</summary>
      <param name="handler" vsli:raw="The handler to add to the stack.">Gestore da aggiungere allo stack.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.EventHandlerService.FocusWindow">
      <summary vsli:raw="Gets the control to which event handlers are attached.">Ottiene il controllo a cui sono connessi i gestori eventi.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; which was attached through the constructor.">L'oggetto <see cref="T:System.Windows.Forms.Control" /> che è stato associato tramite il costruttore.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.FileNameEditor">
      <summary vsli:raw="Provides a user interface for selecting a file name.">Fornisce un'interfaccia utente per la selezione di un nome di file.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.FileNameEditor&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Design.FileNameEditor" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the specified object using the editor style provided by the &lt;see cref=&quot;M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)&quot; /&gt; method.">Consente di modificare l'oggetto specificato utilizzando lo stile dell'editor fornito dal metodo <see cref="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che può essere usato per ottenere ulteriori informazioni sul contesto.</param>
      <param name="provider" vsli:raw="A service provider object through which editing services may be obtained.">Oggetto provider di servizi tramite il quale è possibile ottenere i servizi di modifica.</param>
      <param name="value" vsli:raw="An instance of the value being edited.">Istanza del valore in corso di modifica.</param>
      <returns vsli:raw="The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.">Nuovo valore dell'oggetto. Se il valore dell'oggetto non è stato modificato, deve essere restituito lo stesso oggetto che è stato passato.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editing style used by the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Windows.Forms.Design.FileNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot;&gt;&lt;/xref&gt; method.">Ottiene lo stile di modifica utilizzato dal metodo <see cref="M:System.Windows.Forms.Design.FileNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che può essere usato per ottenere ulteriori informazioni sul contesto.</param>
      <returns vsli:raw="One of the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle&quot;&gt;&lt;/xref&gt; values indicating the provided editing style.">Uno dei valori di <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> che indica lo stile di modifica fornito.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FileNameEditor.InitializeDialog(System.Windows.Forms.OpenFileDialog)">
      <summary vsli:raw="Initializes the open file dialog when it is created.">Inizializza la finestra di apertura file durante la creazione.</summary>
      <param name="openFileDialog" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.OpenFileDialog&quot; /&gt; to use to select a file name.">Oggetto <see cref="T:System.Windows.Forms.OpenFileDialog" /> da utilizzare per selezionare un nome di file.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor">
      <summary vsli:raw="Provides a user interface for choosing a folder from the file system.">Fornisce un'interfaccia utente per la selezione di una cartella dal file system.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.FolderNameEditor&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Design.FolderNameEditor" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the specified object using the editor style provided by &lt;see cref=&quot;M:System.Windows.Forms.Design.FolderNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)&quot; /&gt;.">Modifica l'oggetto specificato tramite lo stile dell'editor fornito da <see cref="M:System.Windows.Forms.Design.FolderNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che può essere usato per ottenere ulteriori informazioni sul contesto.</param>
      <param name="provider" vsli:raw="A service object provider.">Provider di un oggetto servizi.</param>
      <param name="value" vsli:raw="The value to set.">Il valore da impostare.</param>
      <returns vsli:raw="The new value of the object, or the old value if the object couldn't be updated.">Il nuovo valore dell'oggetto o il vecchio valore se non è stato possibile aggiornare l'oggetto.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editing style used by the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Windows.Forms.Design.FolderNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot;&gt;&lt;/xref&gt; method.">Ottiene lo stile di modifica utilizzato dal metodo <see cref="M:System.Windows.Forms.Design.FolderNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che può essere usato per ottenere ulteriori informazioni sul contesto.</param>
      <returns vsli:raw="A &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle&quot;&gt;&lt;/xref&gt; enumeration value indicating the provided editing style.">Valore di enumerazione <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> che indica lo stile di modifica fornito.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.InitializeDialog(System.Windows.Forms.Design.FolderNameEditor.FolderBrowser)">
      <summary vsli:raw="Initializes the folder browser dialog.">Inizializza la finestra di dialogo del visualizzatore cartelle.</summary>
      <param name="folderBrowser" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser&quot; /&gt; to choose a folder.">Oggetto <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" /> per la selezione di una cartella.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser">
      <summary vsli:raw="Represents a dialog box that allows the user to choose a folder. This class cannot be inherited.">Rappresenta una finestra di dialogo che consente all'utente di scegliere una cartella. La classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.ShowDialog">
      <summary vsli:raw="Shows the folder browser dialog.">Visualizza la finestra di dialogo del visualizzatore cartelle.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.DialogResult&quot; /&gt; from the form.">Oggetto <see cref="T:System.Windows.Forms.DialogResult" /> del form.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.ShowDialog(System.Windows.Forms.IWin32Window)">
      <summary vsli:raw="Shows the folder browser dialog with the specified owner.">Visualizza la finestra di dialogo del visualizzatore cartelle con il proprietario specificato.</summary>
      <param name="owner" vsli:raw="Top-level window that will own the modal dialog (e.g.: System.Windows.Forms.Form).">Finestra di livello superiore proprietaria della finestra di dialogo modale (ad esempio System.Windows.Forms.Form).</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.DialogResult&quot; /&gt; from the form.">Oggetto <see cref="T:System.Windows.Forms.DialogResult" /> del form.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.Description">
      <summary vsli:raw="Gets or sets a description to show above the folders.">Ottiene o imposta la descrizione da visualizzare sopra le cartelle.</summary>
      <returns vsli:raw="The description to show above the folders.">La descrizione da visualizzare sopra le cartelle.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.DirectoryPath">
      <summary vsli:raw="Gets the directory path to the object the user picked.">Ottiene il percorso dell'oggetto selezionato dall'utente.</summary>
      <returns vsli:raw="The directory path to the object the user picked.">Percorso dell'oggetto selezionato dall'utente.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.StartLocation">
      <summary vsli:raw="Gets or sets the start location of the root node.">Ottiene o imposta la posizione iniziale del nodo di primo livello.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder&quot; /&gt; that indicates the location for the folder browser to initially browse to.">Un oggetto <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder" /> che indica la posizione nel visualizzatore cartelle da cui iniziare l'esplorazione.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser.Style">
      <summary vsli:raw="The styles the folder browser will use when browsing folders. This should be a combination of flags from the &lt;see cref=&quot;T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles&quot; /&gt; enumeration.">Stili che verranno utilizzati dal visualizzatore cartelle per l'esplorazione delle cartelle. Deve essere una combinazione di flag forniti dall'enumerazione <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles&quot; /&gt; enumeration member that indicates behavior for the &lt;see cref=&quot;T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser&quot; /&gt; to use.">Membro dell'enumerazione <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles" /> che indica il comportamento che verrà utilizzato dall'oggetto <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder">
      <summary vsli:raw="Defines identifiers used to indicate the root folder for a folder browser to initially browse to.">Definisce gli identificatori utilizzati per indicare la cartella radice dalla quali inizia un visualizzatore di cartelle inizia a sfogliare.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Desktop">
      <summary vsli:raw="The user's desktop.">Desktop dell'utente.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Favorites">
      <summary vsli:raw="The user's favorites list.">Elenco Preferiti dell'utente.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.MyComputer">
      <summary vsli:raw="The contents of the My Computer icon.">Contenuto dell'icona Risorse del computer.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.MyDocuments">
      <summary vsli:raw="The user's My Documents folder.">Cartella Documenti dell'utente.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.MyPictures">
      <summary vsli:raw="User's location to store pictures.">Percorso in cui l'utente archivia le immagini.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.NetAndDialUpConnections">
      <summary vsli:raw="Network and dial-up connections.">Connessioni di rete e di accesso remoto.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.NetworkNeighborhood">
      <summary vsli:raw="The network neighborhood.">Risorse di rete.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Printers">
      <summary vsli:raw="A folder containing installed printers.">Cartella contenente le stampanti installate.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Recent">
      <summary vsli:raw="A folder containing shortcuts to recently opened files.">Cartella contenente le scelte rapide per i file aperti più di recente.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.SendTo">
      <summary vsli:raw="A folder containing shortcuts to applications to send documents to.">Cartella contenente le scelte rapide per le applicazioni cui inviare documenti.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.StartMenu">
      <summary vsli:raw="The user's start menu.">Menu Start dell'utente.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserFolder.Templates">
      <summary vsli:raw="The user's file templates.">Modelli di file dell'utente.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles">
      <summary vsli:raw="Defines identifiers used to specify behavior of a &lt;see cref=&quot;T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser&quot; /&gt;.">Definisce gli identificatori utilizzati per specificare il funzionamento di un oggetto <see cref="T:System.Windows.Forms.Design.FolderNameEditor.FolderBrowser" />.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.BrowseForComputer">
      <summary vsli:raw="The folder browser can only return computers. If the user selects anything other than a computer, the OK button is grayed.">Il visualizzatore di cartelle può restituire solo computer. Se l'utente non seleziona un computer, il pulsante OK viene disattivato.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.BrowseForEverything">
      <summary vsli:raw="The folder browser can return any object that it can return.">Il visualizzatore di cartelle può restituire qualsiasi oggetto che è in grado di restituire.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.BrowseForPrinter">
      <summary vsli:raw="The folder browser can only return printers. If the user selects anything other than a printer, the OK button is grayed.">Il visualizzatore di cartelle può restituire solo stampanti. Se l'utente non seleziona una stampante, il pulsante OK viene disattivato.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.RestrictToDomain">
      <summary vsli:raw="The folder browser will not include network folders below the domain level in the dialog box's tree view control, or allow navigation to network locations outside of the domain.">Il visualizzatore di cartelle non includerà le cartelle di rete al di sotto del livello di dominio nel controllo di visualizzazione ad albero della finestra di dialogo, né consentirà la navigazione di percorsi di rete all'esterno del dominio.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.RestrictToFilesystem">
      <summary vsli:raw="The folder browser will only return local file system directories. If the user selects folders that are not part of the local file system, the OK button is grayed.">Il visualizzatore di cartelle può restituire solo directory del file system locale. Se l'utente seleziona cartelle non appartenenti al file system locale, il pulsante OK viene disattivato.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.RestrictToSubfolders">
      <summary vsli:raw="The folder browser will only return objects of the local file system that are within the root folder or a subfolder of the root folder. If the user selects a subfolder of the root folder that is not part of the local file system, the OK button is grayed.">Il visualizzatore di cartelle può restituire solo oggetti del file system locale che si trovano all'interno della cartella radice o di una sottocartella di quest'ultima. Se l'utente seleziona una sottocartella della cartella radice non appartenente al file system locale, il pulsante OK viene disattivato.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.FolderNameEditor.FolderBrowserStyles.ShowTextBox">
      <summary vsli:raw="The folder browser includes a &lt;see cref=&quot;T:System.Windows.Forms.TextBox&quot; /&gt; control in the browse dialog box that allows the user to type the name of an item.">Il visualizzatore di cartelle include un controllo <see cref="T:System.Windows.Forms.TextBox" /> nella finestra di dialogo Sfoglia per consentire all'utente di digitare il nome di un elemento.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.IContainsThemedScrollbarWindows">
      <summary vsli:raw="Defines a method for getting information about how the scrollbars of windows need to be themed when displayed in the Visual Studio designer.">Definisce un metodo per ottenere informazioni sugli eventuali temi delle barre di scorrimento delle finestre quando vengono visualizzate nella finestra di progettazione di Visual Studio.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.IContainsThemedScrollbarWindows.ThemedScrollbarWindows">
      <summary vsli:raw="Gets an enumeration of &lt;see cref=&quot;T:System.Windows.Forms.Design.ThemedScrollbarWindow&quot; /&gt; objects that represent windows and how their scrollbars need to be themed when displayed in the Visual Studio designer.">Ottiene un'enumerazione di oggetti <see cref="T:System.Windows.Forms.Design.ThemedScrollbarWindow" /> che rappresentano le finestre e gli eventuali temi delle barre di scorrimento quando vengono visualizzate nella finestra di progettazione di Visual Studio.</summary>
      <returns vsli:raw="An enumeration of objects that represent windows and how their scrollbars need to be themed when displayed in the Visual Studio designer.">Enumerazione di oggetti che rappresentano le finestre e gli eventuali temi delle barre di scorrimento quando vengono visualizzate nella finestra di progettazione di Visual Studio.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ImageListCodeDomSerializer">
      <summary vsli:raw="Serializes string dictionaries.">Serializza i dizionari delle stringhe.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListCodeDomSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ImageListCodeDomSerializer&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Design.ImageListCodeDomSerializer" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Deserializes the specified serialized Code Document Object Model (CodeDOM) object into an object.">Deserializza l'oggetto CodeDOM (Code Document Object Model) serializzato specificato in un oggetto.</summary>
      <param name="manager" vsli:raw="A serialization manager interface that is used during the deserialization process.">Interfaccia del gestore della serializzazione che viene utilizzata durante il processo di deserializzazione.</param>
      <param name="codeObject" vsli:raw="A serialized CodeDOM object to deserialize.">Oggetto CodeDOM serializzato da deserializzare.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;manager&quot; /&gt; or &lt;paramref name=&quot;codeObject&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="manager" /> o <paramref name="codeObject" /> è <see langword="null" />.</exception>
      <returns vsli:raw="The deserialized CodeDOM object.">Oggetto CodeDOM deserializzato.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary vsli:raw="Serializes the specified object into a Code Document Object Model (CodeDOM) object.">Serializza l'oggetto specificato in un oggetto CodeDOM (Code Document Object Model).</summary>
      <param name="manager" vsli:raw="The serialization manager to use during serialization.">Gestore della serializzazione da utilizzare durante la serializzazione.</param>
      <param name="value" vsli:raw="The object to serialize.">Oggetto da serializzare.</param>
      <returns vsli:raw="A CodeDOM object representing the object that has been serialized.">Oggetto CodeDOM che rappresenta l'oggetto serializzato.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ImageListImageEditor">
      <summary vsli:raw="Provides an editor that can perform default file searching for bitmap (.bmp) files.">Fornisce un editor che consente di eseguire la ricerca predefinita di file bitmap.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ImageListImageEditor&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Design.ImageListImageEditor" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the specified object value using the edit style provided by the &lt;see cref=&quot;M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)&quot; /&gt; method.">Modifica il valore dell'oggetto specificato utilizzando lo stile dell'editor fornito dal metodo <see cref="M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che può essere usato per ottenere ulteriori informazioni sul contesto.</param>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; through which editing services can be obtained.">Interfaccia <see cref="T:System.IServiceProvider" /> tramite la quale è possibile ottenere i servizi di modifica.</param>
      <param name="value" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; being edited.">Classe <see cref="T:System.Object" /> da modificare.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; representing the new value. If the value of the object has not changed, the &lt;see cref=&quot;M:System.Windows.Forms.Design.ImageListImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)&quot; /&gt; method returns the object that was passed to it.">Classe <see cref="T:System.Object" /> che rappresenta il nuovo valore. Se il valore dell'oggetto non è stato modificato, il metodo <see cref="M:System.Windows.Forms.Design.ImageListImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> restituirà l'oggetto che gli è stato passato.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.GetFileDialogDescription">
      <summary vsli:raw="Gets the description for the default file-list filter provided by this editor.">Ottiene la descrizione per il filtro dell'elenco di file predefinito fornito dall'editor.</summary>
      <returns vsli:raw="The description for the default file-list filter.">Descrizione per il filtro dell'elenco di file predefinito.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.GetImageExtenders">
      <summary vsli:raw="Gets an array of supported image types.">Ottiene una matrice dei tipi di immagine supportati.</summary>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Type&quot; /&gt; representing supported image types.">Matrice di <see cref="T:System.Type" /> che rappresenta i tipi di immagine supportati.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets a value indicating whether this editor supports painting a representation of an object's value.">Ottiene un valore che indica se questo editor supporta la rappresentazione grafica del valore di un oggetto.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che può essere usato per ottenere ulteriori informazioni sul contesto.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;M:System.Drawing.Design.ImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)&quot; /&gt; is implemented; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <see cref="M:System.Drawing.Design.ImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)" /> è implementato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ImageListImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary vsli:raw="Paints a value indicated by the specified &lt;see cref=&quot;T:System.Drawing.Design.PaintValueEventArgs&quot; /&gt;.">Ottiene un valore indicato dalla classe <see cref="T:System.Drawing.Design.PaintValueEventArgs" /> specificata.</summary>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Design.PaintValueEventArgs&quot; /&gt; indicating what to paint and where to paint it.">La classe <see cref="T:System.Drawing.Design.PaintValueEventArgs" /> che indica cosa disegnare e in quale posizione.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.MaskDescriptor">
      <summary vsli:raw="Defines a set of members for derived classes to provide options for the masked text box UI type editor.">Definisce un set di membri per classi derivate per fornire opzioni per l'editor di tipo UI della casella di testo mascherata.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.MaskDescriptor&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Design.MaskDescriptor" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Windows.Forms.Design.MaskDescriptor&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Windows.Forms.Design.MaskDescriptor&quot; /&gt;.">Determina se l'oggetto <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> specificato è uguale all'oggetto <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> corrente.</summary>
      <param name="maskDescriptor" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.MaskDescriptor&quot; /&gt; to compare with the current &lt;see cref=&quot;T:System.Windows.Forms.Design.MaskDescriptor&quot; /&gt;.">Oggetto <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> da confrontare con l'oggetto <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> corrente.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Windows.Forms.Design.MaskDescriptor&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Windows.Forms.Design.MaskDescriptor&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'oggetto <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> specificato è uguale all'oggetto <see cref="T:System.Windows.Forms.Design.MaskDescriptor" /> corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.GetHashCode">
      <summary vsli:raw="Serves as a hash function for a particular type.">Svolge una funzione hash per un tipo particolare.</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Codice hash per l'oggetto <see cref="T:System.Object" /> corrente.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.IsValidMaskDescriptor(System.Windows.Forms.Design.MaskDescriptor)">
      <summary vsli:raw="Returns a value indicating whether the specified mask descriptor is valid and can be added to the masks list.">Restituisce un valore che indica se il descrittore della maschera specificato è valido e può essere aggiunto all'elenco di maschere.</summary>
      <param name="maskDescriptor" vsli:raw="The mask descriptor to test for validity.">Descrittore della mashera di cui verificare la validità.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;maskDescriptor&quot; /&gt; is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="maskDescriptor" /> è valido. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.IsValidMaskDescriptor(System.Windows.Forms.Design.MaskDescriptor,System.String@)">
      <summary vsli:raw="Returns a value indicating whether the specified mask descriptor is valid, and provides an error description if it is not valid.">Restituisce un valore che indica se il descrittore della maschera specificato è valido e fornisce una descrizione dell'errore se non lo è.</summary>
      <param name="maskDescriptor" vsli:raw="The mask descriptor to test for validity.">Descrittore della mashera di cui verificare la validità.</param>
      <param name="validationErrorDescription" vsli:raw="A string representing a validation error. If no validation error occurred, the &lt;paramref name=&quot;validationErrorDescription&quot; /&gt; is &lt;see cref=&quot;F:System.String.Empty&quot; /&gt;.">Stringa che rappresenta un errore di convalida. Se non si sono verificati errori di convalida, <paramref name="validationErrorDescription" /> è <see cref="F:System.String.Empty" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;maskDescriptor&quot; /&gt; is valid; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="maskDescriptor" /> è valido. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.MaskDescriptor.ToString">
      <summary vsli:raw="Returns a string that represents the current object.">Restituisce una stringa che rappresenta l'oggetto corrente.</summary>
      <returns vsli:raw="A string that represents the current object.">Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.Culture">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; representing the locale the mask is authored for.">Ottiene l'oggetto <see cref="T:System.Globalization.CultureInfo" /> che rappresenta le impostazioni locali per cui è stata creata la maschera.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; representing the locale the mask is authored for.">Oggetto <see cref="T:System.Globalization.CultureInfo" /> che rappresenta le impostazioni locali per cui è stata creata la maschera.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.Mask">
      <summary vsli:raw="Gets the mask being defined.">Ottiene la maschera da definire.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the mask being defined.">Oggetto <see cref="T:System.String" /> contenente la maschera da definire.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.Name">
      <summary vsli:raw="Gets the user-friendly name of the mask.">Ottiene il nome descrittivo della maschera.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the name or brief description of the &lt;see cref=&quot;P:System.Windows.Forms.Design.MaskDescriptor.Mask&quot; /&gt;.">Oggetto <see cref="T:System.String" /> che contiene il nome o una breve descrizione della proprietà <see cref="P:System.Windows.Forms.Design.MaskDescriptor.Mask" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.Sample">
      <summary vsli:raw="Gets a sample of a formatted string for the mask.">Ottiene un esempio di stringa formattata per la maschera.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing text that is formatted by using the &lt;see cref=&quot;P:System.Windows.Forms.Design.MaskDescriptor.Mask&quot; /&gt;.">Oggetto <see cref="T:System.String" /> contenente testo formattato tramite la proprietà <see cref="P:System.Windows.Forms.Design.MaskDescriptor.Mask" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.MaskDescriptor.ValidatingType">
      <summary vsli:raw="Gets the type providing validation associated with the mask.">Ottiene il tipo che fornisce la convalida associata alla maschera.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that the formatted string is validated against.">Tipo <see cref="T:System.Type" /> rispetto al quale viene convalidata la stringa formattata.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.MenuCommands">
      <summary vsli:raw="Defines a set of &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; fields that each correspond to a command function provided by the host environment.">Definisce un insieme di campi <see cref="T:System.ComponentModel.Design.CommandID" />, ciascuno dei quali corrisponde alla funzione di un comando fornito dall'ambiente host.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.ComponentTrayMenu">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the component tray menu.">Oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> che può essere utilizzato per accedere al menu della barra dei componenti.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.ContainerMenu">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the container menu.">Oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> che può essere utilizzato per accedere al menu del contenitore.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.DesignerProperties">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the properties page for the designer.">Oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> che può essere utilizzato per accedere alla pagina delle proprietà della finestra di progettazione.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.EditLabel">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the edit label handler.">Oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> che può essere utilizzato per accedere al gestore delle etichette di modifica.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyCancel">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the cancel key handler.">Oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> che può essere utilizzato per accedere al gestore del tasto Annulla.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyDefaultAction">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the default key handler.">Oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> che può essere utilizzato per accedere al gestore predefinito dei tasti.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyEnd">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the end key handler.">Oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> che può essere utilizzato per accedere al gestore del tasto Fine.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyHome">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the home key handler.">Oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> che può essere utilizzato per accedere al gestore del tasto Home.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyInvokeSmartTag">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the smart tag invocation handler.">Oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> che può essere utilizzato per accedere al gestore delle chiamate agli smart tag.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveDown">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the move down key handler.">Oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> che può essere utilizzato per accedere al gestore del tasto di spostamento verso il basso.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveLeft">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the move left key handler.">Oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> che può essere utilizzato per accedere al gestore del tasto di spostamento verso sinistra.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveRight">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the move right key handler.">Oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> che può essere utilizzato per accedere al gestore del tasto di spostamento verso destra.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyMoveUp">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the move up key handler.">Oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> che può essere utilizzato per accedere al gestore del tasto di spostamento verso l'alto.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeDown">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge down key handler.">Oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> che può essere utilizzato per accedere al gestore del tasto di spostamento verso il basso.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeHeightDecrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge height decrease key handler.">Oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> che può essere utilizzato per accedere al gestore del tasto di riduzione in altezza dello spostamento.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeHeightIncrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge height increase key handler.">Oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> che può essere utilizzato per accedere al gestore del tasto di incremento in altezza dello spostamento.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeLeft">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge left key handler.">Oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> che può essere utilizzato per accedere al gestore del tasto di spostamento verso sinistra.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeRight">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge right key handler.">Oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> che può essere utilizzato per accedere al gestore del tasto di spostamento verso destra.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeUp">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge up key handler.">Oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> che può essere utilizzato per accedere al gestore del tasto di spostamento verso l'alto.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeWidthDecrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge width decrease key handler.">Oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> che può essere utilizzato per accedere al gestore del tasto di riduzione in larghezza dello spostamento.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyNudgeWidthIncrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the nudge width increase key handler.">Oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> che può essere utilizzato per accedere al gestore del tasto di incremento in larghezza dello spostamento.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyReverseCancel">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the reverse cancel key handler.">Oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> che può essere utilizzato per accedere al gestore del tasto Inverti Annulla.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySelectNext">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the select next key handler.">Oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> che può essere utilizzato per accedere al gestore del tasto di selezione dell'elemento successivo.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySelectPrevious">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the select previous key handler.">Oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> che può essere utilizzato per accedere al gestore del tasto di selezione dell'elemento precedente.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyShiftEnd">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the SHIFT-END key handler.">Oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> che può essere utilizzato per accedere al gestore della combinazione di tasti MAIUSC+FINE.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyShiftHome">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the SHIFT-HOME key handler.">Oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> che può essere utilizzato per accedere al gestore della combinazione di tasti MAIUSC+HOME.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeHeightDecrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the size height decrease key handler.">Oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> che può essere utilizzato per accedere al gestore del tasto di riduzione delle dimensioni in altezza.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeHeightIncrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the size height increase key handler.">Oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> che può essere utilizzato per accedere al gestore del tasto di incremento delle dimensioni in altezza.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeWidthDecrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the size width decrease key handler.">Oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> che può essere utilizzato per accedere al gestore del tasto di riduzione delle dimensioni in larghezza.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeySizeWidthIncrease">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the size width increase key handler.">Oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> che può essere utilizzato per accedere al gestore del tasto di incremento delle dimensioni in larghezza.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.KeyTabOrderSelect">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the tab order select key handler.">Oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> che può essere utilizzato per accedere al gestore del tasto di selezione dell'ordine di tabulazione.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.SelectionMenu">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the selection menu.">Oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> che può essere utilizzato per accedere al menu di selezione.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.SetStatusRectangle">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to set the status rectangle.">Oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> che può essere utilizzato per impostare il rettangolo di stato.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.SetStatusText">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to set the status rectangle text.">Oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> che può essere utilizzato per impostare il testo del rettangolo di stato.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.MenuCommands.TraySelectionMenu">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.Design.CommandID&quot; /&gt; that can be used to access the tray selection menu.">Oggetto <see cref="T:System.ComponentModel.Design.CommandID" /> che può essere utilizzato per accedere al menu di selezione della barra di sistema.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.MenuCommands.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.MenuCommands&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Design.MenuCommands" />.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ParentControlDesigner">
      <summary vsli:raw="Extends the design mode behavior of a &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; that supports nested controls.">Estende il comportamento della modalità progettazione di <see cref="T:System.Windows.Forms.Control" /> che supporta i controlli annidati.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ParentControlDesigner&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.AddPaddingSnapLines(System.Collections.ArrayList@)">
      <summary vsli:raw="Adds padding snaplines.">Aggiunge le guide di allineamento per la spaziatura interna.</summary>
      <param name="snapLines" vsli:raw="An &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; that contains &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; objects.">Oggetto <see cref="T:System.Collections.ArrayList" /> che contiene oggetti <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CanAddComponent(System.ComponentModel.IComponent)">
      <summary vsli:raw="Called when a component is added to the parent container.">Chiamato quando un componente viene aggiunto al contenitore padre.</summary>
      <param name="component" vsli:raw="The component to test for errors.">Componente di cui verificare l'eventuale presenza di errori.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;component&quot; /&gt; can be added; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se <paramref name="component" /> può essere aggiunti; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CanParent(System.Windows.Forms.Control)">
      <summary vsli:raw="Indicates whether the specified control can be a child of the control managed by this designer.">Indica se il controllo specificato può essere un controllo figlio del controllo gestito tramite questa finestra di progettazione.</summary>
      <param name="control" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; to test.">Oggetto <see cref="T:System.Windows.Forms.Control" /> da verificare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified control can be a child of the control managed by this designer; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il controllo specificato può essere un controllo figlio del controllo gestito tramite questa finestra di progettazione; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CanParent(System.Windows.Forms.Design.ControlDesigner)">
      <summary vsli:raw="Indicates whether the control managed by the specified designer can be a child of the control managed by this designer.">Indica se il controllo gestito tramite la finestra di progettazione specificata può essere un controllo figlio del controllo gestito tramite questa finestra di progettazione.</summary>
      <param name="controlDesigner" vsli:raw="The designer for the control to test.">La progettazione per il controllo da verificare.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the control managed by the specified designer can be a child of the control managed by this designer; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il controllo gestito tramite la finestra di progettazione specificata può essere un controllo figlio del controllo gestito tramite questa finestra di progettazione; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Creates a component or control from the specified tool and adds it to the current design document.">Crea un componente o un controllo dallo strumento specificato e lo aggiunge al documento di progettazione corrente.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to create a component from.">Oggetto <see cref="T:System.Drawing.Design.ToolboxItem" /> da cui creare un componente.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem,System.Drawing.Point)">
      <summary vsli:raw="Creates a component or control from the specified tool and adds it to the current design document at the specified location.">Crea un componente o un controllo dallo strumento specificato e lo aggiunge al documento di progettazione corrente, nella posizione specificata.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to create a component from.">Oggetto <see cref="T:System.Drawing.Design.ToolboxItem" /> da cui creare un componente.</param>
      <param name="location" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt;, in design-time view screen coordinates, at which to center the component.">Oggetto <see cref="T:System.Drawing.Point" />, in base alle coordinate dello schermo nella visualizzazione della fase di progettazione, in corrispondenza del quale centrare il componente.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem,System.Drawing.Rectangle)">
      <summary vsli:raw="Creates a component or control from the specified tool and adds it to the current design document within the bounds of the specified rectangle.">Crea un componente o un controllo dallo strumento specificato e lo aggiunge al documento di progettazione corrente, all'interno dei limiti del rettangolo specificato.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to create a component from.">Oggetto <see cref="T:System.Drawing.Design.ToolboxItem" /> da cui creare un componente.</param>
      <param name="bounds" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; indicating the location and size for the component created from the tool. The &lt;see cref=&quot;P:System.Drawing.Rectangle.X&quot; /&gt; and &lt;see cref=&quot;P:System.Drawing.Rectangle.Y&quot; /&gt; values of the &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; indicate the design-time view screen coordinates of the upper-left corner of the component.">Oggetto <see cref="T:System.Drawing.Rectangle" /> che indica la posizione e le dimensioni del componente creato dallo strumento. I valori delle proprietà <see cref="P:System.Drawing.Rectangle.X" /> e <see cref="P:System.Drawing.Rectangle.Y" /> dell'oggetto <see cref="T:System.Drawing.Rectangle" /> indicano le coordinate dello schermo nella visualizzazione della fase di progettazione per l'angolo superiore sinistro del componente.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.CreateToolCore(System.Drawing.Design.ToolboxItem,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary vsli:raw="Provides core functionality for all the &lt;see cref=&quot;M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem)&quot; /&gt; methods.">Fornisce funzionalità di base per tutti i metodi <see cref="M:System.Windows.Forms.Design.ParentControlDesigner.CreateTool(System.Drawing.Design.ToolboxItem)" />.</summary>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to create a component from.">Oggetto <see cref="T:System.Drawing.Design.ToolboxItem" /> da cui creare un componente.</param>
      <param name="x" vsli:raw="The horizontal position, in design-time view coordinates, of the location of the left edge of the tool, if a size is specified; the horizontal position of the center of the tool, if no size is specified.">Posizione orizzontale, in base alle coordinate nella visualizzazione della fase di progettazione, del bordo sinistro dello strumento, se sono state specificate dimensioni specifiche, oppure posizione orizzontale del centro dello strumento, se non sono state specificate dimensioni.</param>
      <param name="y" vsli:raw="The vertical position, in design-time view coordinates, of the location of the top edge of the tool, if a size is specified; the vertical position of the center of the tool, if no size is specified.">Posizione verticale, in base alle coordinate nella visualizzazione della fase di progettazione, del bordo superiore dello strumento, se sono state specificate dimensioni specifiche, oppure posizione verticale del centro dello strumento, se non sono state specificate dimensioni.</param>
      <param name="width" vsli:raw="The width of the tool. This parameter is ignored if the &lt;paramref name=&quot;hasSize&quot; /&gt; parameter is set to &lt;see langword=&quot;false&quot; /&gt;.">Larghezza dello strumento. Questo parametro viene ignorato se il parametro <paramref name="hasSize" /> è impostato su <see langword="false" />.</param>
      <param name="height" vsli:raw="The height of the tool. This parameter is ignored if the &lt;paramref name=&quot;hasSize&quot; /&gt; parameter is set to &lt;see langword=&quot;false&quot; /&gt;.">Altezza dello strumento. Questo parametro viene ignorato se il parametro <paramref name="hasSize" /> è impostato su <see langword="false" />.</param>
      <param name="hasLocation" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a location for the component is specified; &lt;see langword=&quot;false&quot; /&gt; if the component is to be positioned in the center of the currently selected control.">
        <see langword="true" /> se è specificata una posizione per il componente; <see langword="false" /> se è necessario posizionare il componente al centro del controllo attualmente selezionato.</param>
      <param name="hasSize" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a size for the component is specified; &lt;see langword=&quot;false&quot; /&gt; if the default height and width values for the component are to be used.">
        <see langword="true" /> se sono state specificate delle dimensioni per il componente; <see langword="false" /> se è necessario utilizzare i valori relativi all'altezza e alla larghezza predefiniti per il componente.</param>
      <returns vsli:raw="An array of components created from the tool.">Matrice di componenti creati dallo strumento.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.Windows.Forms.Design.ParentControlDesigner&quot; /&gt;, and optionally releases the managed resources.">Rilascia le risorse non gestite usate dall'oggetto <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" /> e, facoltativamente, le risorse gestite.</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetControl(System.Object)">
      <summary vsli:raw="Gets the control from the designer of the specified component.">Ottiene il controllo dalla finestra di progettazione del componente specificato.</summary>
      <param name="component" vsli:raw="The component to retrieve the control for.">Componente per il quale recuperare il controllo.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; that the specified component belongs to.">Oggetto <see cref="T:System.Windows.Forms.Control" /> a cui appartiene il componente specificato.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetControlGlyph(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary vsli:raw="Gets a body glyph that represents the bounds of the control.">Ottiene un'icona per il corpo che rappresenta i limiti del controllo.</summary>
      <param name="selectionType" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphSelectionType&quot; /&gt; value that specifies the selection state.">Valore <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> che specifica lo stato di selezione.</param>
      <returns vsli:raw="A body glyph that represents the bounds of the control.">Icona per il corpo che rappresenta i limiti del controllo.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)">
      <summary vsli:raw="Gets a collection of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects representing the selection borders and grab handles for a standard control.">Ottiene un insieme degli oggetti <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> che rappresentano i bordi di selezione e i punti di controllo per un controllo standard.</summary>
      <param name="selectionType" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.GlyphSelectionType&quot; /&gt; value that specifies the selection state.">Valore <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> che specifica lo stato di selezione.</param>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.Glyph&quot; /&gt; objects.">Raccolta di oggetti <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetParentForComponent(System.ComponentModel.IComponent)">
      <summary vsli:raw="Used by deriving classes to determine if it returns the control being designed or some other &lt;see cref=&quot;T:System.ComponentModel.Container&quot; /&gt; while adding a component to it.">Utilizzato derivando classi per determinare se restituisce il controllo in fase di progettazione o un altro oggetto <see cref="T:System.ComponentModel.Container" /> durante l'aggiunta di un componente a esso.</summary>
      <param name="component" vsli:raw="The component for which to retrieve the parent &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt;.">Il componente per cui recuperare l'oggetto <see cref="T:System.Windows.Forms.Control" /> padre.</param>
      <returns vsli:raw="The parent &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; for the component.">L'oggetto <see cref="T:System.Windows.Forms.Control" /> padre del componente.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.GetUpdatedRect(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Boolean)">
      <summary vsli:raw="Updates the position of the specified rectangle, adjusting it for grid alignment if grid alignment mode is enabled.">Aggiorna la posizione del rettangolo specificato, regolandola per l'allineamento della griglia, qualora tale modalità sia abilitata.</summary>
      <param name="originalRect" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; indicating the initial position of the component being updated.">Oggetto <see cref="T:System.Drawing.Rectangle" /> che indica la posizione iniziale del componente in fase di aggiornamento.</param>
      <param name="dragRect" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Rectangle&quot; /&gt; indicating the new position of the component.">Oggetto <see cref="T:System.Drawing.Rectangle" /> che indica la nuova posizione del componente.</param>
      <param name="updateSize" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to update the size of the rectangle, if there has been any change; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per aggiornare le dimensioni del rettangolo, qualora siano state apportate eventuali modifiche; in caso contrario, <see langword="false" />.</param>
      <returns vsli:raw="A rectangle indicating the position of the component in design-time view screen coordinates. If no changes have been made, this method returns the original rectangle.">Rettangolo che indica la posizione del componente in base alle coordinate dello schermo nella visualizzazione della fase di progettazione. Se non è stata apportata alcuna modifica, questo metodo restituisce il rettangolo originale.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary vsli:raw="Initializes the designer with the specified component.">Inizializza la finestra di progettazione con il componente specificato.</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to associate with the designer.">Oggetto <see cref="T:System.ComponentModel.IComponent" /> da associare alla finestra di progettazione.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <summary vsli:raw="Initializes a newly created component.">Inizializza un nuovo componente creato.</summary>
      <param name="defaultValues" vsli:raw="A name/value dictionary of default values to apply to properties. May be &lt;see langword=&quot;null&quot; /&gt; if no default values are specified.">Dizionario in formato nome/valore dei valori predefiniti da applicare alle proprietà. Può essere <see langword="null" /> se non è specificato alcun valore predefinito.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.InvokeCreateTool(System.Windows.Forms.Design.ParentControlDesigner,System.Drawing.Design.ToolboxItem)">
      <summary vsli:raw="Creates a tool from the specified &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt;.">Crea uno strumento dall'oggetto <see cref="T:System.Drawing.Design.ToolboxItem" /> specificato.</summary>
      <param name="toInvoke" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.ParentControlDesigner&quot; /&gt; that the tool is to be used with.">Oggetto <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" /> con il quale deve essere utilizzato lo strumento.</param>
      <param name="tool" vsli:raw="The &lt;see cref=&quot;T:System.Drawing.Design.ToolboxItem&quot; /&gt; to create a tool from.">Oggetto <see cref="T:System.Drawing.Design.ToolboxItem" /> da cui creare uno strumento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragComplete(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Called in order to clean up a drag-and-drop operation.">Chiamato per la pulitura di un'operazione di trascinamento della selezione.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">Oggetto <see cref="T:System.Windows.Forms.DragEventArgs" /> che fornisce i dati per l'evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Called when a drag-and-drop object is dropped onto the control designer view.">Questo metodo viene chiamato quando un oggetto viene trascinato nella visualizzazione di progettazione del controllo.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">Oggetto <see cref="T:System.Windows.Forms.DragEventArgs" /> che fornisce i dati per l'evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Called when a drag-and-drop operation enters the control designer view.">Questo metodo viene chiamato quando un'operazione di trascinamento viene inserita nella finestra di progettazione del controllo.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">Oggetto <see cref="T:System.Windows.Forms.DragEventArgs" /> che fornisce i dati per l'evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragLeave(System.EventArgs)">
      <summary vsli:raw="Called when a drag-and-drop operation leaves the control designer view.">Questo metodo viene chiamato quando un'operazione di trascinamento viene rimossa dalla finestra di progettazione del controllo.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that provides data for the event.">Oggetto <see cref="T:System.EventArgs" /> che fornisce i dati per l'evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary vsli:raw="Called when a drag-and-drop object is dragged over the control designer view.">Questo metodo viene chiamato quando un oggetto viene trascinato nella finestra di progettazione del controllo.</summary>
      <param name="de" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.DragEventArgs&quot; /&gt; that provides data for the event.">Oggetto <see cref="T:System.Windows.Forms.DragEventArgs" /> che fornisce i dati per l'evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragBegin(System.Int32,System.Int32)">
      <summary vsli:raw="Called in response to the left mouse button being pressed and held while over the component.">Questo metodo viene chiamato quando il pulsante sinistro viene tenuto premuto sul componente.</summary>
      <param name="x" vsli:raw="The x-coordinate of the mouse in screen coordinates.">Posizione della coordinata x del mouse in base alle coordinate dello schermo.</param>
      <param name="y" vsli:raw="The y-coordinate of the mouse in screen coordinates.">Posizione della coordinata y del mouse in base alle coordinate dello schermo.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragEnd(System.Boolean)">
      <summary vsli:raw="Called at the end of a drag-and-drop operation to complete or cancel the operation.">Questo metodo viene chiamato al temine di un'operazione di trascinamento, al fine di completarla o annullarla.</summary>
      <param name="cancel" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to cancel the drag operation; &lt;see langword=&quot;false&quot; /&gt; to commit it.">
        <see langword="true" /> per annullare l'operazione di trascinamento; <see langword="false" /> per eseguirne il commit.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnMouseDragMove(System.Int32,System.Int32)">
      <summary vsli:raw="Called for each movement of the mouse during a drag-and-drop operation.">Questo metodo viene chiamato per ciascuno spostamento del mouse durante un'operazione di trascinamento.</summary>
      <param name="x" vsli:raw="The x-coordinate of the mouse in screen coordinates.">Posizione della coordinata x del mouse in base alle coordinate dello schermo.</param>
      <param name="y" vsli:raw="The y-coordinate of the mouse in screen coordinates.">Posizione della coordinata y del mouse in base alle coordinate dello schermo.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnPaintAdornments(System.Windows.Forms.PaintEventArgs)">
      <summary vsli:raw="Called when the control that the designer is managing has painted its surface so the designer can paint any additional adornments on top of the control.">Questo metodo viene chiamato una volta che il controllo gestito dalla finestra di progettazione ha creato la relativa superficie, in modo da consentire l'uso della finestra di progettazione per aggiungere ulteriori disegni sul controllo.</summary>
      <param name="pe" vsli:raw="A &lt;see cref=&quot;T:System.Windows.Forms.PaintEventArgs&quot; /&gt; that provides data for the event.">Oggetto <see cref="T:System.Windows.Forms.PaintEventArgs" /> che fornisce i dati per l'evento.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.OnSetCursor">
      <summary vsli:raw="Provides an opportunity to change the current mouse cursor.">Consente di modificare il cursore corrente del mouse.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ParentControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary vsli:raw="Adjusts the set of properties the component will expose through a &lt;see cref=&quot;T:System.ComponentModel.TypeDescriptor&quot; /&gt;.">Regola l'insieme di proprietà che verrà esposto dal componente tramite un oggetto <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties" vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; that contains the properties for the class of the component.">Oggetto <see cref="T:System.Collections.IDictionary" /> che contiene le proprietà per la classe del componente.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.AllowControlLasso">
      <summary vsli:raw="Gets a value indicating whether selected controls will be re-parented.">Ottiene un valore che indica se è possibile reimpostare i controlli padre dei controlli selezionati.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the controls that were selected by lassoing on the designer's surface will be re-parented to this designer's control.">
        <see langword="true" /> se i controlli selezionati tramite lo strumento lazo sulla superficie della finestra di progettazione verranno reimpostati per il controllo della finestra di progettazione.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.AllowGenericDragBox">
      <summary vsli:raw="Gets a value indicating whether a generic drag box should be drawn when dragging a toolbox item over the designer's surface.">Ottiene un valore che indica se deve essere disegnata una casella di trascinamento generica quando viene trascinato un elemento della Casella degli strumenti sull'area di progettazione.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a generic drag box should be drawn when dragging a toolbox item over the designer's surface; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> se deve essere disegnata una casella di trascinamento generica quando viene trascinato un elemento della Casella degli strumenti sull'area di progettazione; in caso contrario <see langword="false" />. Il valore predefinito è <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.AllowSetChildIndexOnDrop">
      <summary vsli:raw="Gets a value indicating whether the z-order of dragged controls should be maintained when dropped on a &lt;see cref=&quot;T:System.Windows.Forms.Design.ParentControlDesigner&quot; /&gt;.">Ottiene un valore che indica se deve essere mantenuto l'ordine z dei controlli trascinati quando vengono rilasciati su un oggetto <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the z-order of dragged controls should be maintained when dropped on a &lt;see cref=&quot;T:System.Windows.Forms.Design.ParentControlDesigner&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se l'ordine z dei controlli trascinati deve essere mantenuto quando i controlli vengono rilasciati su un oggetto <see cref="T:System.Windows.Forms.Design.ParentControlDesigner" />; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.DefaultControlLocation">
      <summary vsli:raw="Gets the default location for a control added to the designer.">Ottiene la posizione predefinita per un controllo aggiunto alla finestra di progettazione.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; that indicates the default location for a control added to the designer.">Oggetto <see cref="T:System.Drawing.Point" /> che indica la posizione predefinita per un controllo aggiunto alla finestra di progettazione.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.DrawGrid">
      <summary vsli:raw="Gets or sets a value indicating whether a grid should be drawn on the control for this designer.">Ottiene o imposta un valore che indica se è necessario creare una griglia sul controllo per la finestra di progettazione.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a grid should be drawn on the control in the designer; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se è necessario creare una griglia sul controllo nella finestra di progettazione; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.EnableDragRect">
      <summary vsli:raw="Gets a value indicating whether drag rectangles are drawn by the designer.">Ottiene un valore che indica se i rettangoli di trascinamento vengono creati nella finestra di progettazione.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if drag rectangles are drawn; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> se i rettangoli di trascinamento vengono creati; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.GridSize">
      <summary vsli:raw="Gets or sets the size of each square of the grid that is drawn when the designer is in grid draw mode.">Ottiene o imposta le dimensioni di ciascun quadrato della griglia creato quando nella finestra di progettazione è impostata la modalità di creazione della griglia.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;see cref=&quot;T:System.Drawing.Size&quot; /&gt; is outside the allowed range for &lt;see cref=&quot;P:System.Windows.Forms.Design.ParentControlDesigner.GridSize&quot; /&gt;. The default minimum value is 2, and the default maximum value is 200.">
        <see cref="T:System.Drawing.Size" /> non rientra nell'intervallo consentito per <see cref="P:System.Windows.Forms.Design.ParentControlDesigner.GridSize" />. Il valore minimo predefinito è 2 e il valore massimo predefinito è 200.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Size&quot; /&gt; that represents the size of each square of the grid drawn on a form or user control.">Oggetto <see cref="T:System.Drawing.Size" /> che rappresenta le dimensioni di ciascun quadrato della griglia creata in un form o in un controllo utente.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.MouseDragTool">
      <summary vsli:raw="Gets a value indicating whether the designer has a valid tool during a drag operation.">Ottiene un valore che indica se nella finestra di progettazione è disponibile uno strumento valido durante un'operazione di trascinamento.</summary>
      <returns vsli:raw="The tool being dragged, if creating a component, or &lt;see langword=&quot;null&quot; /&gt; if there is no tool.">Lo strumento da trascinare, se si sta creando un componente, oppure <see langword="null" /> in assenza di uno strumento.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ParentControlDesigner.SnapLines">
      <summary vsli:raw="Gets a list of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; objects representing significant alignment points for this control.">Ottiene un elenco degli oggetti <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> che rappresentano punti di allineamento significativi per questo controllo.</summary>
      <returns vsli:raw="A list of &lt;see cref=&quot;T:System.Windows.Forms.Design.Behavior.SnapLine&quot; /&gt; objects representing significant alignment points for this control.">Elenco degli oggetti <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> che rappresentano punti di allineamento significativi per questo controllo.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ScrollableControlDesigner">
      <summary vsli:raw="Base designer class for extending the design mode behavior of a &lt;see cref=&quot;T:System.Windows.Forms.Control&quot; /&gt; which should receive scroll messages.">Classe base della finestra di progettazione per estendere il comportamento della modalità progettazione di un oggetto <see cref="T:System.Windows.Forms.Control" /> che deve ricevere messaggi di scorrimento.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ScrollableControlDesigner.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ScrollableControlDesigner&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Design.ScrollableControlDesigner" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ScrollableControlDesigner.GetHitTest(System.Drawing.Point)">
      <summary vsli:raw="Indicates whether a mouse click at the specified point should be handled by the control.">Indica se il clic del mouse nel punto specificato deve essere gestito dal controllo.</summary>
      <param name="pt" vsli:raw="A &lt;see cref=&quot;T:System.Drawing.Point&quot; /&gt; indicating the position at which the mouse was clicked, in screen coordinates.">Oggetto <see cref="T:System.Drawing.Point" /> che indica la posizione in cui è stato fatto clic con il mouse, nelle coordinate dello schermo.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a click at the specified point is to be handled by the control; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il clic nel punto specificato deve essere gestito dal controllo; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ScrollableControlDesigner.WndProc(System.Windows.Forms.Message@)">
      <summary vsli:raw="Processes Windows messages and passes WM_HSCROLL and WM_VSCROLL messages to the control at design time.">Questo metodo elabora i messaggi di Windows e passa i messaggi WM_HSCROLL e WM_VSCROLL al controllo in fase di progettazione.</summary>
      <param name="m" vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Message&quot; /&gt; to process.">Oggetto <see cref="T:System.Windows.Forms.Message" /> da elaborare.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.SelectionRules">
      <summary vsli:raw="Defines identifiers that are used to indicate selection rules for a component.">Definisce gli identificatori utilizzati per indicare le regole di selezione di un componente.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.AllSizeable">
      <summary vsli:raw="Indicates the component supports sizing in all directions.">Indica che il componente supporta il ridimensionamento in tutte le direzioni.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.BottomSizeable">
      <summary vsli:raw="Indicates the component supports resize from the bottom.">Indica che il componente supporta il ridimensionamento dal basso.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.LeftSizeable">
      <summary vsli:raw="Indicates the component supports resize from the left.">Indica che il componente supporta il ridimensionamento da sinistra.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.Locked">
      <summary vsli:raw="Indicates the component is locked to its container. Overrides the &lt;see cref=&quot;F:System.Windows.Forms.Design.SelectionRules.Moveable&quot; /&gt;, &lt;see cref=&quot;F:System.Windows.Forms.Design.SelectionRules.AllSizeable&quot; /&gt;, &lt;see cref=&quot;F:System.Windows.Forms.Design.SelectionRules.BottomSizeable&quot; /&gt;, &lt;see cref=&quot;F:System.Windows.Forms.Design.SelectionRules.LeftSizeable&quot; /&gt;, &lt;see cref=&quot;F:System.Windows.Forms.Design.SelectionRules.RightSizeable&quot; /&gt;, and &lt;see cref=&quot;F:System.Windows.Forms.Design.SelectionRules.TopSizeable&quot; /&gt; bit flags of this enumeration.">Indica che il componente è bloccato al relativo contenitore. Esegue l'override dei flag di bit <see cref="F:System.Windows.Forms.Design.SelectionRules.Moveable" />, <see cref="F:System.Windows.Forms.Design.SelectionRules.AllSizeable" />, <see cref="F:System.Windows.Forms.Design.SelectionRules.BottomSizeable" />, <see cref="F:System.Windows.Forms.Design.SelectionRules.LeftSizeable" />, <see cref="F:System.Windows.Forms.Design.SelectionRules.RightSizeable" /> e <see cref="F:System.Windows.Forms.Design.SelectionRules.TopSizeable" /> dell'enumerazione.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.Moveable">
      <summary vsli:raw="Indicates the component supports a location property that allows it to be moved on the screen.">Indica che il componente supporta una proprietà di posizione che consente di spostarlo sullo schermo.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.None">
      <summary vsli:raw="Indicates no special selection attributes.">Indica l'assenza di attributi di selezione speciali.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.RightSizeable">
      <summary vsli:raw="Indicates the component supports resize from the right.">Indica che il componente supporta il ridimensionamento da destra.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.TopSizeable">
      <summary vsli:raw="Indicates the component supports resize from the top.">Indica che il componente supporta il ridimensionamento dall'alto.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.SelectionRules.Visible">
      <summary vsli:raw="Indicates the component has some form of visible user interface and the selection service is drawing a selection border around this user interface. If a selected component has this rule set, you can assume that the component implements &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; and that it is associated with a corresponding designer instance.">Indica che per il componente è disponibile un'interfaccia utente visibile e che è in corso la creazione di un bordo di selezione intorno a tale interfaccia da parte del servizio di selezione. Se questa regola è impostata per un componente selezionato, si può presumere che il componente implementi l'oggetto <see cref="T:System.ComponentModel.IComponent" /> e sia associato a un'istanza della finestra di progettazione corrispondente.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ShortcutKeysEditor">
      <summary vsli:raw="Provides an editor for picking shortcut keys.">Fornisce un editor per la gestione delle scelte rapide da tastiera.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ShortcutKeysEditor.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.ShortcutKeysEditor&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Design.ShortcutKeysEditor" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ShortcutKeysEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary vsli:raw="Edits the given object value using the editor style provided by the &lt;see cref=&quot;M:System.Windows.Forms.Design.ShortcutKeysEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)&quot; /&gt; method.">Modifica il valore dell'oggetto dato utilizzando lo stile dell'editor fornito dal metodo <see cref="M:System.Windows.Forms.Design.ShortcutKeysEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <param name="context" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.ITypeDescriptorContext&quot; /&gt; that can be used to gain additional context information.">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che può essere usato per ottenere ulteriori informazioni sul contesto.</param>
      <param name="provider" vsli:raw="An &lt;see cref=&quot;T:System.IServiceProvider&quot; /&gt; that this editor can use to obtain services.">Oggetto <see cref="T:System.IServiceProvider" /> che l'editor può usare per ottenere i servizi.</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to edit.">Oggetto <see cref="T:System.Object" /> da modificare.</param>
      <returns vsli:raw="The new value of the &lt;see cref=&quot;T:System.Object&quot; /&gt;.">Nuovo valore precedente dell'oggetto <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ShortcutKeysEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary vsli:raw="Gets the editor style used by the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Windows.Forms.Design.ShortcutKeysEditor.EditValue*&quot;&gt;&lt;/xref&gt; method.">Ottiene lo stile dell'editor usato dal metodo <see cref="Overload:System.Windows.Forms.Design.ShortcutKeysEditor.EditValue" />.</summary>
      <param name="context" vsli:raw="An &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.ComponentModel.ITypeDescriptorContext&quot;&gt;&lt;/xref&gt; that can be used to gain additional context information.">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che può essere usato per ottenere ulteriori informazioni sul contesto.</param>
      <returns vsli:raw="A &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Drawing.Design.UITypeEditorEditStyle&quot;&gt;&lt;/xref&gt; value that indicates the style of editor used by the &lt;xref data-throw-if-not-resolved=&quot;true&quot; uid=&quot;System.Windows.Forms.Design.ShortcutKeysEditor.EditValue*&quot;&gt;&lt;/xref&gt; method.">Valore dell'oggetto <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> che indica lo stile di editor usato dal metodo <see cref="Overload:System.Windows.Forms.Design.ShortcutKeysEditor.EditValue" />.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ThemedScrollbarMode">
      <summary vsli:raw="A value that indicates whether the scrollbars of a window and its children will be themed when displayed in the Visual Studio designer.">Valore che indica se le barre di scorrimento di una finestra e delle finestre figlio disporranno di un tema quando verranno visualizzate nella finestra di progettazione di Visual Studio.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarMode.All">
      <summary vsli:raw="The window and all of its children will have themed scrollbars.">La finestra e tutti i relativi figli avranno barre di scorrimento con temi.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarMode.None">
      <summary vsli:raw="The window and all of its children will not be themed.">La finestra e tutti i relativi figli non avranno temi.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarMode.OnlyTopLevel">
      <summary vsli:raw="The window will have themed scrollbars but all of its children will not be themed.">La finestra avrà barre di scorrimento con temi mentre tutti i relativi figli non avranno temi.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ThemedScrollbarWindow">
      <summary vsli:raw="Represents a window and a value that indicates how its scrollbars should be themed when displayed in the Visual Studio designer.">Rappresenta una finestra e un valore che indica il tema delle barre di scorrimento della finestra quando sono visualizzate nella finestra di progettazione di Visual Studio.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarWindow.Handle">
      <summary vsli:raw="The window handle.">Handle di finestra.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ThemedScrollbarWindow.Mode">
      <summary vsli:raw="A value that indicates how the window scrollbars should be themed when displayed in the Visual Studio designer.">Valore che indica il tema delle barre di scorrimento della finestra quando sono visualizzate nella finestra di progettazione di Visual Studio.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService">
      <summary vsli:raw="Provides access to get and set option values for a Windows Forms designer.">Consente di ottenere o impostare valori di opzioni per una finestra di progettazione di Windows Form.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.WindowsFormsDesignerOptionService.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.WindowsFormsDesignerOptionService.PopulateOptionCollection(System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection&quot; /&gt;.">Popola <see cref="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" />.</summary>
      <param name="options" vsli:raw="The collection to populate.">Insieme da popolare.</param>
    </member>
    <member name="P:System.Windows.Forms.Design.WindowsFormsDesignerOptionService.CompatibilityOptions">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Windows.Forms.Design.DesignerOptions&quot; /&gt; exposed by the &lt;see cref=&quot;T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService&quot; /&gt;.">Ottiene l'oggetto <see cref="T:System.Windows.Forms.Design.DesignerOptions" /> esposto dall'oggetto <see cref="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Windows.Forms.Design.DesignerOptions&quot; /&gt; exposed by the &lt;see cref=&quot;T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService&quot; /&gt;.">Oggetto <see cref="T:System.Windows.Forms.Design.DesignerOptions" /> esposto dall'oggetto <see cref="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService" />.</returns>
    </member>
  </members>
</doc>