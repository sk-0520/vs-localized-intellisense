<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Runtime.Serialization.Xml</name>
  </assembly>
  <members>
    <member name="T:System.Runtime.Serialization.DataContractResolver">
      <summary vsli:raw="Provides a mechanism for dynamically mapping types to and from &lt;see langword=&quot;xsi:type&quot; /&gt; representations during serialization and deserialization.">Proporciona un mecanismo para asignar dinámicamente los tipos entre las representaciones <see langword="xsi:type" /> durante la serialización y la deserialización.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractResolver.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractResolver&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.DataContractResolver" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractResolver.ResolveName(System.String,System.String,System.Type,System.Runtime.Serialization.DataContractResolver)">
      <summary vsli:raw="Override this method to map the specified &lt;see langword=&quot;xsi:type&quot; /&gt; name and namespace to a data contract type during deserialization.">Invalide este método para asignar el nombre y el espacio de nombres <see langword="xsi:type" /> especificados a un tipo de contrato de datos durante la deserialización.</summary>
      <param name="typeName" vsli:raw="The &lt;see langword=&quot;xsi:type&quot; /&gt; name to map.">Nombre de <see langword="xsi:type" /> que se va a asignar.</param>
      <param name="typeNamespace" vsli:raw="The &lt;see langword=&quot;xsi:type&quot; /&gt; namespace to map.">Espacio de nombres de <see langword="xsi:type" /> que se va a agregar.</param>
      <param name="declaredType" vsli:raw="The type declared in the data contract.">Tipo declarado en el contrato de datos.</param>
      <param name="knownTypeResolver" vsli:raw="The known type resolver.">Resolución de tipos conocidos.</param>
      <returns vsli:raw="The type the &lt;see langword=&quot;xsi:type&quot; /&gt; name and namespace is mapped to.">Tipo al que están asignados el nombre y el espacio de nombres <see langword="xsi:type" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractResolver.TryResolveType(System.Type,System.Type,System.Runtime.Serialization.DataContractResolver,System.Xml.XmlDictionaryString@,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Override this method to map a data contract type to an &lt;see langword=&quot;xsi:type&quot; /&gt; name and namespace during serialization.">Invalide este método para asignar un tipo de contrato de datos a un nombre y un espacio de nombres <see langword="xsi:type" /> durante la serialización.</summary>
      <param name="type" vsli:raw="The type to map.">Tipo que se va a asignar.</param>
      <param name="declaredType" vsli:raw="The type declared in the data contract.">Tipo declarado en el contrato de datos.</param>
      <param name="knownTypeResolver" vsli:raw="The known type resolver.">Resolución de tipos conocidos.</param>
      <param name="typeName" vsli:raw="The xsi:type name.">Nombre xsi:type.</param>
      <param name="typeNamespace" vsli:raw="The xsi:type namespace.">Espacio de nombres xsi:type.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if mapping succeeded; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si la asignación se realizó correctamente; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.DataContractSerializer">
      <summary vsli:raw="Serializes and deserializes an instance of a type into an XML stream or document using a supplied data contract. This class cannot be inherited.">Serializa y deserializa una instancia de un tipo en un flujo o en un documento XML utilizando un contrato de datos proporcionado. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type.">Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> para serializar o deserializar un objeto del tipo especificado.</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">Tipo de las instancias serializadas o deserializadas.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type, and a collection of known types that may be present in the object graph.">Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> para serializar o deserializar un objeto del tipo especificado y una colección de tipos conocidos que pueden encontrarse en el gráfico de objetos.</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">Tipo de las instancias serializadas o deserializadas.</param>
      <param name="knownTypes" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the types that may be present in the object graph.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Type" /> que contiene los tipos que pueden estar presentes en el gráfico de objetos.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Runtime.Serialization.DataContractSerializerSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type and settings.">Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> para serializar o deserializar un objeto del tipo y configuración especificados.</summary>
      <param name="type" vsli:raw="The type of the instance to serialize or deserialize.">Tipo de las instancias que se serializan o se deserializan.</param>
      <param name="settings" vsli:raw="The serializer settings.">Configuración del serializador</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type using the supplied XML root element and namespace.">Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> para serializar o deserializar un objeto del tipo especificado utilizando el elemento raíz y el espacio de nombres XML proporcionados.</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">Tipo de las instancias serializadas o deserializadas.</param>
      <param name="rootName" vsli:raw="The name of the XML element that encloses the content to serialize or deserialize.">El nombre del elemento XML que incluye el contenido para serializar o deserializar.</param>
      <param name="rootNamespace" vsli:raw="The namespace of the XML element that encloses the content to serialize or deserialize.">El espacio de nombres del elemento XML que incluye el contenido para serializar o deserializar.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type. This method also specifies the root XML element and namespace in two string parameters as well as a list of known types that may be present in the object graph.">Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> para serializar o deserializar un objeto del tipo especificado. Este método también especifica el elemento raíz y el espacio de nombres XML en dos parámetros de cadena así como una lista de tipos conocidos que pueden encontrarse en el gráfico de objetos.</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">Tipo de las instancias serializadas o deserializadas.</param>
      <param name="rootName" vsli:raw="The root element name of the content.">El nombre del elemento raíz del contenido.</param>
      <param name="rootNamespace" vsli:raw="The namespace of the root element.">El espacio de nombres del elemento raíz.</param>
      <param name="knownTypes" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the types that may be present in the object graph.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Type" /> que contiene los tipos que pueden estar presentes en el gráfico de objetos.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type using the XML root element and namespace specified through the parameters of type &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;.">Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> para serializar o deserializar un objeto del tipo especificado utilizando el elemento raíz XML y el espacio de nombres especificados mediante los parámetros del tipo <see cref="T:System.Xml.XmlDictionaryString" />.</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">Tipo de las instancias serializadas o deserializadas.</param>
      <param name="rootName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that contains the root element name of the content.">
        <see cref="T:System.Xml.XmlDictionaryString" /> que contiene el nombre del elemento raíz del contenido.</param>
      <param name="rootNamespace" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that contains the namespace of the root element.">
        <see cref="T:System.Xml.XmlDictionaryString" /> que contiene el espacio de nombres del elemento raíz.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type. This method also specifies the root XML element and namespace in two &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; parameters as well as a list of known types that may be present in the object graph.">Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> para serializar o deserializar un objeto del tipo especificado. Este método también especifica el elemento raíz y el espacio de nombres XML en dos parámetros <see cref="T:System.Xml.XmlDictionaryString" /> así como una lista de tipos conocidos que pueden encontrarse en el gráfico de objetos.</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">Tipo de las instancias serializadas o deserializadas.</param>
      <param name="rootName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that contains the root element name of the content.">
        <see cref="T:System.Xml.XmlDictionaryString" /> que contiene el nombre del elemento raíz del contenido.</param>
      <param name="rootNamespace" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that contains the namespace of the root element.">
        <see cref="T:System.Xml.XmlDictionaryString" /> que contiene el espacio de nombres del elemento raíz.</param>
      <param name="knownTypes" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the known types that may be present in the object graph.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Type" /> que contiene los tipos conocidos que pueden encontrarse en el gráfico de objetos.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; is positioned on an object that can be deserialized.">Determina si <see cref="T:System.Xml.XmlDictionaryReader" /> se coloca en un objeto que se puede deserializar.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML stream.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> que se usa para leer la secuencia XML.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is at the start element of the stream to read; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el lector está situado en el elemento de inicio de la secuencia que se leerá; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlReader)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is positioned on an object that can be deserialized.">Determina si <see cref="T:System.Xml.XmlReader" /> se coloca en un objeto que se puede deserializar.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML stream.">
        <see cref="T:System.Xml.XmlReader" /> utilizado para leer la secuencia XML.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is at the start element of the stream to read; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el lector está situado en el elemento de inicio de la secuencia que se leerá; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary vsli:raw="Reads the XML stream with an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; and returns the deserialized object, and also specifies whether a check is made to verify the object name before reading its value.">Lee la secuencia XML con <see cref="T:System.Xml.XmlDictionaryReader" /> y devuelve el objeto deserializado y también especifica si se realiza una comprobación para comprobar el nombre de objeto antes de leer su valor.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML stream.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> utilizado para leer la secuencia XML.</param>
      <param name="verifyObjectName" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to check whether the name of the object corresponds to the root name value supplied in the constructor; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para comprobar si el nombre del objeto corresponde al valor de nombre de raíz proporcionado en el constructor; de lo contrario, <see langword="false" />.</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="The &lt;paramref name=&quot;verifyObjectName&quot; /&gt; parameter is set to &lt;see langword=&quot;true&quot; /&gt;, and the element name and namespace do not correspond to the values set in the constructor.">El parámetro <paramref name="verifyObjectName" /> está establecido en <see langword="true" />, y el nombre y el espacio de nombres del elemento no corresponden a los valores establecidos en el constructor.</exception>
      <returns vsli:raw="The deserialized object.">Objeto deserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean,System.Runtime.Serialization.DataContractResolver)">
      <summary vsli:raw="Reads an XML document or document stream and returns the deserialized object.  The method includes a parameter to specify whether the object name is verified is validated, and a resolver for mapping &lt;see langword=&quot;xsi:type&quot; /&gt; declarations at runtime.">Lee un documento o secuencia del documento XML y devuelve el objeto deserializado.  El método incluye un parámetro para especificar si se comprueba el nombre de objeto se valida y una resolución para asignar las declaraciones <see langword="xsi:type" /> en tiempo de ejecución.</summary>
      <param name="reader" vsli:raw="The XML reader used to read the content.">Lector XML usado para leer el contenido.</param>
      <param name="verifyObjectName" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to verify the object name; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para comprobar el nombre de objeto; en caso contrario, <see langword="false" />.</param>
      <param name="dataContractResolver" vsli:raw="An implementation of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractResolver&quot; /&gt; to map &lt;see langword=&quot;xsi:type&quot; /&gt; declarations to data contract types.">Implementación de <see cref="T:System.Runtime.Serialization.DataContractResolver" /> para asignar las declaraciones <see langword="xsi:type" /> a los tipos de contrato de datos.</param>
      <returns vsli:raw="The deserialized object.">Objeto deserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader)">
      <summary vsli:raw="Reads the XML stream with an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and returns the deserialized object.">Lee el flujo XML con <see cref="T:System.Xml.XmlReader" /> y devuelve el objeto deserializado.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML stream.">
        <see cref="T:System.Xml.XmlReader" /> utilizado para leer la secuencia XML.</param>
      <returns vsli:raw="The deserialized object.">Objeto deserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
      <summary vsli:raw="Reads the XML stream with an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and returns the deserialized object, and also specifies whether a check is made to verify the object name before reading its value.">Lee la secuencia XML con <see cref="T:System.Xml.XmlReader" /> y devuelve el objeto deserializado y también especifica si se realiza una comprobación para comprobar el nombre de objeto antes de leer su valor.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML stream.">
        <see cref="T:System.Xml.XmlReader" /> utilizado para leer la secuencia XML.</param>
      <param name="verifyObjectName" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to check whether the name of the object corresponds to the root name value supplied in the constructor; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para comprobar si el nombre del objeto corresponde al valor de nombre de raíz proporcionado en el constructor; de lo contrario, <see langword="false" />.</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="The &lt;paramref name=&quot;verifyObjectName&quot; /&gt; parameter is set to &lt;see langword=&quot;true&quot; /&gt;, and the element name and namespace do not correspond to the values set in the constructor.">El parámetro <paramref name="verifyObjectName" /> está establecido en <see langword="true" />, y el nombre y el espacio de nombres del elemento no corresponden a los valores establecidos en el constructor.</exception>
      <returns vsli:raw="The deserialized object.">Objeto deserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
      <summary vsli:raw="Writes the closing XML element using an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Escribe el elemento XML de cierre mediante <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the stream.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> que se usa para escribir la secuencia.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">El tipo que se está serializando no se ajusta a las reglas del contrato de datos. Por ejemplo, el atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> no se ha aplicado al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">Hay un problema con la instancia que se está escribiendo.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the closing XML element using an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Escribe el elemento XML de cierre mediante <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the stream.">
        <see cref="T:System.Xml.XmlWriter" /> que se usa para escribir la secuencia.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">El tipo que se está serializando no se ajusta a las reglas del contrato de datos. Por ejemplo, el atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> no se ha aplicado al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">Hay un problema con la instancia que se está escribiendo.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object,System.Runtime.Serialization.DataContractResolver)">
      <summary vsli:raw="Writes all the object data (starting XML element, content, and enclosing element) to an XML document or stream  using the specified XmlDictionaryWriter. The method includes a resolver for mapping &lt;see langword=&quot;xsi:type&quot; /&gt; declarations at runtime.">Escribe todos los datos de objeto (elemento XML inicial, contenido y elemento envolvente) en un documento o secuencia XML usando el XmlDictionaryWriter especificado. El método incluye una resolución para asignar las declaraciones <see langword="xsi:type" /> en tiempo de ejecución.</summary>
      <param name="writer" vsli:raw="An XmlDictionaryWriter used to write the content to the XML document or stream.">Escritor XmlDictionaryWriter que se usa para escribir el contenido en el documento o la secuencia XML.</param>
      <param name="graph" vsli:raw="The object that contains the content to write.">El objeto que contiene el contenido que se va a escribir.</param>
      <param name="dataContractResolver" vsli:raw="An implementation of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractResolver&quot; /&gt; used to map &lt;see langword=&quot;xsi:type&quot; /&gt; declarations to known data contracts.">Implementación de <see cref="T:System.Runtime.Serialization.DataContractResolver" /> utilizada para asignar las declaraciones <see langword="xsi:type" /> a los contratos de datos conocidos.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes all the object data (starting XML element, content, and closing element) to an XML document or stream with an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Escribe todos los datos de objeto (elemento XML inicial, contenido y elemento de cierre) en un documento o secuencia XML con <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document or stream.">
        <see cref="T:System.Xml.XmlWriter" /> que se usa para escribir el documento o la secuencia XML.</param>
      <param name="graph" vsli:raw="The object that contains the data to write to the stream.">El objeto que contiene los datos que se van a escribir en la secuencia.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">El tipo que se está serializando no se ajusta a las reglas del contrato de datos. Por ejemplo, el atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> no se ha aplicado al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">Hay un problema con la instancia que se está escribiendo.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Writes the XML content using an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Escribe el contenido XML mediante <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the stream.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> que se usa para escribir la secuencia.</param>
      <param name="graph" vsli:raw="The object to write to the stream.">El objeto que se va a escribir en la secuencia.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">El tipo que se está serializando no se ajusta a las reglas del contrato de datos. Por ejemplo, el atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> no se ha aplicado al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">Hay un problema con la instancia que se está escribiendo.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes the XML content using an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Escribe el contenido XML mediante <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the stream.">
        <see cref="T:System.Xml.XmlWriter" /> que se usa para escribir la secuencia.</param>
      <param name="graph" vsli:raw="The object to write to the stream.">El objeto que se va a escribir en la secuencia.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">El tipo que se está serializando no se ajusta a las reglas del contrato de datos. Por ejemplo, el atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> no se ha aplicado al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">Hay un problema con la instancia que se está escribiendo.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Writes the opening XML element using an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Escribe el elemento XML de apertura mediante <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the XML start element.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> que se usa para escribir el elemento de inicio XML.</param>
      <param name="graph" vsli:raw="The object to write.">Objeto que se va a escribir.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes the opening XML element using an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Escribe el elemento XML de apertura mediante <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML start element.">
        <see cref="T:System.Xml.XmlWriter" /> que se usa para escribir el elemento de inicio XML.</param>
      <param name="graph" vsli:raw="The object to write.">Objeto que se va a escribir.</param>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.DataContractResolver">
      <summary vsli:raw="Gets the component used to dynamically map &lt;see langword=&quot;xsi:type&quot; /&gt; declarations to known contract types.">Obtiene el componente utilizado para asignar dinámicamente las declaraciones <see langword="xsi:type" /> a los tipos de contrato conocidos.</summary>
      <returns vsli:raw="An implementation of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractResolver&quot; /&gt; class.">Una implementación de la clase <see cref="T:System.Runtime.Serialization.DataContractResolver" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject">
      <summary vsli:raw="Gets a value that specifies whether to ignore data supplied by an extension of the class when the class is being serialized or deserialized.">Obtiene un valor que especifica si omitir datos proporcionados por una extensión de la clase cuando la clase se serializa o deserializa.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to omit the extension data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para omitir los datos de la extensión; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.KnownTypes">
      <summary vsli:raw="Gets a collection of types that may be present in the object graph serialized using this instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt;.">Obtiene una colección de tipos que se pueden encontrarse en el gráfico de objetos serializado utilizando esta instancia de <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.ObjectModel.ReadOnlyCollection`1&quot; /&gt; that contains the expected types passed in as known types to the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; constructor.">
        <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> que contiene los tipos esperados pasados como tipos conocidos por el constructor <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph">
      <summary vsli:raw="Gets the maximum number of items in an object graph to serialize or deserialize.">Obtiene el número máximo de elementos de un gráfico de objetos que se van a serializar o deserializar.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The number of items exceeds the maximum value.">El número de elementos supera el valor máximo.</exception>
      <returns vsli:raw="The maximum number of items to serialize or deserialize. The default is &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">El número máximo de elementos para serializar o deserializar. De manera predeterminada, es <see cref="F:System.Int32.MaxValue" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences">
      <summary vsli:raw="Gets a value that specifies whether to use non-standard XML constructs to preserve object reference data.">Obtiene un valor que especifica si utilizar construcciones XML no estándar para conservar los datos de referencia al objeto.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to keep the references; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para mantener las referencias; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.SerializeReadOnlyTypes">
      <summary vsli:raw="Gets a value that specifies whether read-only types are serialized.">Obtiene un valor que especifica si los tipos de solo lectura se serializan.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if read-only types are serialized; &lt;see langword=&quot;false&quot; /&gt; if all types are serialized.">
        <see langword="true" /> si los tipos de solo lectura se serializan; <see langword="false" /> si todos los tipos se serializan.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.DataContractSerializerExtensions">
      <summary vsli:raw="Extends the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt; class by providing methods for setting and getting an &lt;see cref=&quot;T:System.Runtime.Serialization.ISerializationSurrogateProvider&quot; /&gt;.">Extiende la clase <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> mediante la proporción de métodos para establecer y obtener <see cref="T:System.Runtime.Serialization.ISerializationSurrogateProvider" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializerExtensions.GetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer)">
      <summary vsli:raw="Returns the surrogate serialization provider for this serializer.">Devuelve el proveedor de serialización suplente para este serializador.</summary>
      <param name="serializer" vsli:raw="The serializer which is being surrogated.">Serializador que se está usando como suplente.</param>
      <returns vsli:raw="The surrogate serializer.">Serializador suplente.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializerExtensions.SetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer,System.Runtime.Serialization.ISerializationSurrogateProvider)">
      <summary vsli:raw="Specifies a surrogate serialization provider for this &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializer&quot; /&gt;.">Especifica un proveedor de serialización suplente para este elemento <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</summary>
      <param name="serializer" vsli:raw="The serializer which is being surrogated.">Serializador que se está usando como suplente.</param>
      <param name="provider" vsli:raw="The surrogate serialization provider.">Proveedor de serialización suplente.</param>
    </member>
    <member name="T:System.Runtime.Serialization.DataContractSerializerSettings">
      <summary vsli:raw="Specifies data contract serializer settings.">Especifica la configuración del serializador de contrato de datos.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializerSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractSerializerSettings&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.DataContractSerializerSettings" />.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.DataContractResolver">
      <summary vsli:raw="Gets or sets the component used to dynamically map xsi:type declarations to known contract types.">Obtiene o establece el componente utilizado para asignar dinámicamente las declaraciones xsi:type a los tipos de contrato conocidos.</summary>
      <returns vsli:raw="The component used to dynamically map xsi:type declarations to known contract types.">Componente usado para asignar dinámicamente las declaraciones xsi:type a los tipos de contrato conocidos.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.IgnoreExtensionDataObject">
      <summary vsli:raw="Gets or sets a value that specifies whether to ignore data supplied by an extension of the class when the class is being serialized or deserialized.">Obtiene o establece un valor que especifica si se deben omitir los datos proporcionados por una extensión de la clase cuando la clase se serializa o deserializa.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to ignore data supplied by an extension of the class when the class is being serialized or deserialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si se deben omitir los datos proporcionados por una extensión de la clase cuando la clase se serializa o deserializa; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.KnownTypes">
      <summary vsli:raw="Gets or sets a collection of types that may be present in the object graph serialized using this instance of the DataContractSerializerSettings.">Obtiene o establece una colección de tipos que pueden encontrarse en el gráfico de objetos serializado utilizando esta instancia de DataContractSerializerSettings.</summary>
      <returns vsli:raw="A collection of types that may be present in the object graph serialized using this instance of the DataContractSerializerSettings.">Colección de tipos que pueden encontrarse en el gráfico de objetos serializado utilizando esta instancia de DataContractSerializerSettings.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.MaxItemsInObjectGraph">
      <summary vsli:raw="Gets or sets the maximum number of items in an object graph to serialize or deserialize.">Obtiene o define el número máximo de elementos en un gráfico de objetos que se vaya a serializar o deserializar.</summary>
      <returns vsli:raw="The maximum number of items in an object graph to serialize or deserialize.">Número máximo de elementos de un gráfico de objetos que se van a serializar o deserializar.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.PreserveObjectReferences">
      <summary vsli:raw="Gets or sets a value that specifies whether to use non-standard XML constructs to preserve object reference data.">Obtiene o establece un valor que especifica si utilizar construcciones XML no estándar para conservar los datos de referencia al objeto.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use non-standard XML constructs to preserve object reference data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para utilizar construcciones XML no estándar para conservar los datos de referencia a objeto; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.RootName">
      <summary vsli:raw="Gets or sets the root name of the selected object.">Obtiene o establece el nombre raíz del objeto seleccionado.</summary>
      <returns vsli:raw="The root name of the selected object.">El nombre raíz del objeto seleccionado.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.RootNamespace">
      <summary vsli:raw="Gets or sets the root namespace for the specified object.">Obtiene o establece el espacio de nombres de la raíz del objeto especificado.</summary>
      <returns vsli:raw="The root namespace for the specified object.">Espacio de nombres para el objeto especificado.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.SerializeReadOnlyTypes">
      <summary vsli:raw="Gets or sets a value that specifies whether to serialize read only types.">Obtiene o establece un valor que especifica si se van a serializar tipos de solo lectura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize read only types; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para serializar tipos de solo lectura; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.ExportOptions">
      <summary vsli:raw="Represents the options that can be set for an &lt;see cref=&quot;T:System.Runtime.Serialization.XsdDataContractExporter&quot; /&gt;.">Representa las opciones que se pueden establecer para <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ExportOptions.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.ExportOptions&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.ExportOptions" />.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.ExportOptions.KnownTypes">
      <summary vsli:raw="Gets the collection of types that may be encountered during serialization or deserialization.">Obtiene la colección de tipos que se pueden encontrar durante la serialización o la deserialización.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;KnownTypes&quot; /&gt; collection that contains types that may be encountered during serialization or deserialization. XML schema representations are exported for all the types specified in this collection by the &lt;see cref=&quot;T:System.Runtime.Serialization.XsdDataContractExporter&quot; /&gt;.">
        <see langword="KnownTypes" /> que contiene tipos que se pueden encontrar durante la serialización o la deserialización. Las representaciones del esquema XML se exportan para todos los tipos especificados en esta colección por <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" />.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.ExtensionDataObject">
      <summary vsli:raw="Stores data from a versioned data contract that has been extended by adding new members.">Almacena los datos de un contrato de datos con control de versiones que se ha ampliado agregando nuevos miembros.</summary>
    </member>
    <member name="T:System.Runtime.Serialization.IExtensibleDataObject">
      <summary vsli:raw="Provides a data structure to store extra data encountered by the &lt;see cref=&quot;T:System.Runtime.Serialization.XmlObjectSerializer&quot; /&gt; during deserialization of a type marked with the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute.">Proporciona una estructura de datos para almacenar datos adicionales detectados por <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> durante la deserialización de un tipo marcada con el atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.IExtensibleDataObject.ExtensionData">
      <summary vsli:raw="Gets or sets the structure that contains extra data.">Obtiene o establece la estructura que contiene datos adicionales.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Runtime.Serialization.ExtensionDataObject&quot; /&gt; that contains data that is not recognized as belonging to the data contract.">
        <see cref="T:System.Runtime.Serialization.ExtensionDataObject" /> que contiene datos que no se reconocen como pertenecientes al contrato de datos.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.XmlObjectSerializer">
      <summary vsli:raw="Provides the base class used to serialize objects as XML streams or documents. This class is abstract.">Proporciona la clase base usada para serializar objetos como secuencias XML o documentos. Esta clase es abstracta.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.XmlObjectSerializer&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
      <summary vsli:raw="Gets a value that specifies whether the &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; is positioned over an XML element that can be read.">Obtiene un valor que especifica si <see cref="T:System.Xml.XmlDictionaryReader" /> se coloca sobre un elemento XML que se puede leer.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML stream or document.">Un <see cref="T:System.Xml.XmlDictionaryReader" /> que se usa para leer el documento o la secuencia XML.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader can read the data; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el lector puede leer los datos; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlReader)">
      <summary vsli:raw="Gets a value that specifies whether the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is positioned over an XML element that can be read.">Obtiene un valor que especifica si <see cref="T:System.Xml.XmlReader" /> se coloca sobre un elemento XML que se puede leer.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML stream or document.">Un <see cref="T:System.Xml.XmlReader" /> que se usa para leer el documento o la secuencia XML.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is positioned over the starting element; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el lector está colocado sobre el elemento inicial; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.IO.Stream)">
      <summary vsli:raw="Reads the XML stream or document with a &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; and returns the deserialized object.">Lee la secuencia o el documento XML con <see cref="T:System.IO.Stream" /> y devuelve el objeto deserializado.</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; used to read the XML stream or document.">Un <see cref="T:System.IO.Stream" /> que se usa para leer el documento o la secuencia XML.</param>
      <returns vsli:raw="The deserialized object.">Objeto deserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader)">
      <summary vsli:raw="Reads the XML document or stream with an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; and returns the deserialized object.">Lee el documento o la secuencia XML con <see cref="T:System.Xml.XmlDictionaryReader" /> y devuelve el objeto deserializado.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML document.">Un <see cref="T:System.Xml.XmlDictionaryReader" /> que se usa para leer el documento XML.</param>
      <returns vsli:raw="The deserialized object.">Objeto deserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary vsli:raw="Reads the XML stream or document with an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; and returns the deserialized object; it also enables you to specify whether the serializer can read the data before attempting to read it.">Lee la secuencia o el documento XML con <see cref="T:System.Xml.XmlDictionaryReader" /> y devuelve el objeto deserializado; también le permite especificar si el serializador puede leer los datos antes de intentar leerlos.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML document.">Un <see cref="T:System.Xml.XmlDictionaryReader" /> que se usa para leer el documento XML.</param>
      <param name="verifyObjectName" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to check whether the enclosing XML element name and namespace correspond to the root name and root namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt; to skip the verification.">
        <see langword="true" /> para comprobar si el nombre del elemento envolvente XML y el espacio de nombres corresponden al nombre raíz y el espacio de nombres raíz; de lo contrario, <see langword="false" /> para omitir la comprobación.</param>
      <returns vsli:raw="The deserialized object.">Objeto deserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader)">
      <summary vsli:raw="Reads the XML document or stream with an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and returns the deserialized object.">Lee el documento o la secuencia XML con <see cref="T:System.Xml.XmlReader" /> y devuelve el objeto deserializado.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML stream or document.">Un <see cref="T:System.Xml.XmlReader" /> que se usa para leer el documento o la secuencia XML.</param>
      <returns vsli:raw="The deserialized object.">Objeto deserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
      <summary vsli:raw="Reads the XML document or stream with an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and returns the deserialized object; it also enables you to specify whether the serializer can read the data before attempting to read it.">Lee el documento o la secuencia XML con <see cref="T:System.Xml.XmlReader" /> y devuelve el objeto deserializado; también le permite especificar si el serializador puede leer los datos antes de intentar leerlos.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML document or stream.">Un <see cref="T:System.Xml.XmlReader" /> que se usa para leer el documento o la secuencia XML.</param>
      <param name="verifyObjectName" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to check whether the enclosing XML element name and namespace correspond to the root name and root namespace; &lt;see langword=&quot;false&quot; /&gt; to skip the verification.">
        <see langword="true" /> para comprobar si el nombre del elemento envolvente XML y el espacio de nombres corresponden al nombre raíz y el espacio de nombres raíz; <see langword="false" /> para omitir la comprobación.</param>
      <returns vsli:raw="The deserialized object.">Objeto deserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
      <summary vsli:raw="Writes the end of the object data as a closing XML element to the XML document or stream with an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Escribe el fin de los datos de objeto como un elemento XML de cierre en el documento o la secuencia XML con <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the XML document or stream.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> que se usa para escribir el documento o la secuencia XML.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">el tipo que se está serializando no se ajusta a las reglas del contrato de datos. Por ejemplo, el atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> no se ha aplicado al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">hay un problema con la instancia que se está serializando.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">se superó el número máximo de objetos para serializar. Compruebe la propiedad <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the end of the object data as a closing XML element to the XML document or stream with an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Escribe el fin de los datos de objeto como un elemento XML de cierre en el documento o la secuencia XML con <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document or stream.">
        <see cref="T:System.Xml.XmlWriter" /> que se usa para escribir el documento o la secuencia XML.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">el tipo que se está serializando no se ajusta a las reglas del contrato de datos. Por ejemplo, el atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> no se ha aplicado al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">hay un problema con la instancia que se está serializando.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">se superó el número máximo de objetos para serializar. Compruebe la propiedad <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.IO.Stream,System.Object)">
      <summary vsli:raw="Writes the complete content (start, content, and end) of the object to the XML document or stream with the specified &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt;.">Escribe todo el contenido (inicio, contenido y fin) del objeto en el documento o la secuencia XML con el <see cref="T:System.IO.Stream" /> especificado.</summary>
      <param name="stream" vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; used to write the XML document or stream.">Un <see cref="T:System.IO.Stream" /> que se usa para escribir el documento o la secuencia XML.</param>
      <param name="graph" vsli:raw="The object that contains the data to write to the stream.">El objeto que contiene los datos que se van a escribir en la secuencia.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">el tipo que se está serializando no se ajusta a las reglas del contrato de datos. Por ejemplo, el atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> no se ha aplicado al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">hay un problema con la instancia que se está serializando.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">se superó el número máximo de objetos para serializar. Compruebe la propiedad <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Writes the complete content (start, content, and end) of the object to the XML document or stream with the specified &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Escribe todo el contenido (inicio, contenido y fin) del objeto en el documento o la secuencia XML con el <see cref="T:System.Xml.XmlDictionaryWriter" /> especificado.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the content to the XML document or stream.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> que se usa para escribir el contenido en el documento o la secuencia XML.</param>
      <param name="graph" vsli:raw="The object that contains the content to write.">El objeto que contiene el contenido que se va a escribir.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">el tipo que se está serializando no se ajusta a las reglas del contrato de datos. Por ejemplo, el atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> no se ha aplicado al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">hay un problema con la instancia que se está serializando.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">se superó el número máximo de objetos para serializar. Compruebe la propiedad <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes the complete content (start, content, and end) of the object to the XML document or stream with the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Escribe todo el contenido (inicio, contenido y fin) del objeto en el documento o la secuencia XML con el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document or stream.">
        <see cref="T:System.Xml.XmlWriter" /> que se usa para escribir el documento o la secuencia XML.</param>
      <param name="graph" vsli:raw="The object that contains the content to write.">El objeto que contiene el contenido que se va a escribir.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">el tipo que se está serializando no se ajusta a las reglas del contrato de datos. Por ejemplo, el atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> no se ha aplicado al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">hay un problema con la instancia que se está serializando.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">se superó el número máximo de objetos para serializar. Compruebe la propiedad <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Writes only the content of the object to the XML document or stream using the specified &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Escribe sólo el contenido del objeto en el documento o la secuencia XML con el <see cref="T:System.Xml.XmlDictionaryWriter" /> especificado.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the XML document or stream.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> que se usa para escribir el documento o la secuencia XML.</param>
      <param name="graph" vsli:raw="The object that contains the content to write.">El objeto que contiene el contenido que se va a escribir.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">el tipo que se está serializando no se ajusta a las reglas del contrato de datos. Por ejemplo, el atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> no se ha aplicado al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">hay un problema con la instancia que se está serializando.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">se superó el número máximo de objetos para serializar. Compruebe la propiedad <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes only the content of the object to the XML document or stream with the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Escribe sólo el contenido del objeto en el documento o la secuencia XML con el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document or stream.">
        <see cref="T:System.Xml.XmlWriter" /> que se usa para escribir el documento o la secuencia XML.</param>
      <param name="graph" vsli:raw="The object that contains the content to write.">El objeto que contiene el contenido que se va a escribir.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">el tipo que se está serializando no se ajusta a las reglas del contrato de datos. Por ejemplo, el atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> no se ha aplicado al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">hay un problema con la instancia que se está serializando.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">se superó el número máximo de objetos para serializar. Compruebe la propiedad <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Writes the start of the object's data as an opening XML element using the specified &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Escribe el inicio de los datos del objeto como elemento XML de apertura con el <see cref="T:System.Xml.XmlDictionaryWriter" /> especificado.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the XML document.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> que se usa para escribir el documento XML.</param>
      <param name="graph" vsli:raw="The object to serialize.">El objeto que se va a serializar.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">el tipo que se está serializando no se ajusta a las reglas del contrato de datos. Por ejemplo, el atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> no se ha aplicado al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">hay un problema con la instancia que se está serializando.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">se superó el número máximo de objetos para serializar. Compruebe la propiedad <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes the start of the object's data as an opening XML element using the specified &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Escribe el inicio de los datos del objeto como elemento XML de apertura con el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document.">
        <see cref="T:System.Xml.XmlWriter" /> que se usa para escribir el documento XML.</param>
      <param name="graph" vsli:raw="The object to serialize.">El objeto que se va a serializar.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="the type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">el tipo que se está serializando no se ajusta a las reglas del contrato de datos. Por ejemplo, el atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> no se ha aplicado al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="there is a problem with the instance being serialized.">hay un problema con la instancia que se está serializando.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="the maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">se superó el número máximo de objetos para serializar. Compruebe la propiedad <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.XmlSerializableServices">
      <summary vsli:raw="Contains methods for reading and writing XML.">Contiene los métodos para leer y escribir XML.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XmlSerializableServices.AddDefaultSchema(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)">
      <summary vsli:raw="Generates a default schema type given the specified type name and adds it to the specified schema set.">Genera un tipo de esquema predeterminado según el nombre de tipo especificado y lo agrega al conjunto de esquemas especificado.</summary>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; to add the generated schema type to.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" /> al que agregar el tipo de esquema generado.</param>
      <param name="typeQName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that specifies the type name to assign the schema to.">
        <see cref="T:System.Xml.XmlQualifiedName" /> que especifica el nombre de tipo al que se asignará el esquema.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;schemas&quot; /&gt; or &lt;paramref name=&quot;typeQName&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">El argumento <paramref name="schemas" /> o <paramref name="typeQName" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlSerializableServices.ReadNodes(System.Xml.XmlReader)">
      <summary vsli:raw="Reads a set of XML nodes from the specified reader and returns the result.">Lee un conjunto de nodos XML del lector especificado y devuelve el resultado.</summary>
      <param name="xmlReader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used for reading.">
        <see cref="T:System.Xml.XmlReader" /> usado para leer.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;xmlReader&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">El argumento <paramref name="xmlReader" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="While reading, a &lt;see langword=&quot;null&quot; /&gt; node was encountered.">Se encontró un nodo <see langword="null" /> durante la lectura.</exception>
      <returns vsli:raw="An array of type &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt;.">Matriz de tipo <see cref="T:System.Xml.XmlNode" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlSerializableServices.WriteNodes(System.Xml.XmlWriter,System.Xml.XmlNode[])">
      <summary vsli:raw="Writes the supplied nodes using the specified writer.">Escribe los nodos proporcionados mediante el sistema de escritura especificado.</summary>
      <param name="xmlWriter" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used for writing.">
        <see cref="T:System.Xml.XmlWriter" /> usado para escribir.</param>
      <param name="nodes" vsli:raw="An array of type &lt;see cref=&quot;T:System.Xml.XmlNode&quot; /&gt; to write.">Matriz de tipo <see cref="T:System.Xml.XmlNode" /> para escribir.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;xmlWriter&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">El argumento <paramref name="xmlWriter" /> es <see langword="null" />.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.XPathQueryGenerator">
      <summary vsli:raw="When given a class representing a data contract, and metadata representing a member of the contract, produces an XPath query for the member.">Cuando se da una clase que representa un contrato de datos y metadatos que representan un miembro del contrato, se produce una consulta XPath para el miembro.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XPathQueryGenerator.CreateFromDataContractSerializer(System.Type,System.Reflection.MemberInfo[],System.Text.StringBuilder,System.Xml.XmlNamespaceManager@)">
      <summary vsli:raw="Creates an XPath from a data contract using the specified contract data type, array of metadata elements, the top level element, and namespaces.">Crea un XPath a partir de un contrato de datos mediante el tipo de datos del contrato, la matriz de elementos de metadatos, el elemento de nivel superior y los espacios de nombres especificados.</summary>
      <param name="type" vsli:raw="The type that represents a data contract.">Tipo que representa un contrato de datos.</param>
      <param name="pathToMember" vsli:raw="The metadata, generated using the &lt;see cref=&quot;Overload:System.Type.GetMember&quot; /&gt; method of the &lt;see cref=&quot;T:System.Type&quot; /&gt; class, that points to the specific data member used to generate the query.">Los metadatos, generados utilizando el método <see cref="Overload:System.Type.GetMember" /> de la clase <see cref="T:System.Type" /> que señala al miembro de datos concreto usado para generar la consulta.</param>
      <param name="rootElementXpath" vsli:raw="The top level element in the xpath.">El elemento de nivel superior en el xpath.</param>
      <param name="namespaces" vsli:raw="The XML namespaces and their prefixes found in the data contract.">Los espacios de nombres XML y sus prefijos situados en el contrato de datos.</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;  &#xA;  &#xA; The XPath generated from the type and member data.">
        <see cref="T:System.String" />  
  
El XPath generado a partir de los datos de miembro y tipo.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XPathQueryGenerator.CreateFromDataContractSerializer(System.Type,System.Reflection.MemberInfo[],System.Xml.XmlNamespaceManager@)">
      <summary vsli:raw="Creates an XPath from a data contract using the specified data contract type, array of metadata elements, and namespaces.">Crea un elemento XPath a partir de un contrato de datos con los elementos especificados (tipo de contrato de datos, matriz de elementos de metadatos y espacios de nombres).</summary>
      <param name="type" vsli:raw="The type that represents a data contract.">Tipo que representa un contrato de datos.</param>
      <param name="pathToMember" vsli:raw="The metadata, generated using the &lt;see cref=&quot;Overload:System.Type.GetMember&quot; /&gt; method of the &lt;see cref=&quot;T:System.Type&quot; /&gt; class, that points to the specific data member used to generate the query.">Los metadatos, generados utilizando el método <see cref="Overload:System.Type.GetMember" /> de la clase <see cref="T:System.Type" /> que señala al miembro de datos concreto usado para generar la consulta.</param>
      <param name="namespaces" vsli:raw="The XML namespaces and their prefixes found in the data contract.">Los espacios de nombres XML y sus prefijos situados en el contrato de datos.</param>
      <returns vsli:raw="&lt;see cref=&quot;T:System.String&quot; /&gt;  &#xA;  &#xA; The XPath generated from the type and member data.">
        <see cref="T:System.String" />  
  
El XPath generado a partir de los datos de miembro y tipo.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.XsdDataContractExporter">
      <summary vsli:raw="Allows the transformation of a set of .NET types that are used in data contracts into an XML schema file (.xsd).">Permite la transformación de un conjunto de tipos de .NET Framework que se usan en contratos de datos en un archivo de esquema XML (.xsd).</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.XsdDataContractExporter&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.#ctor(System.Xml.Schema.XmlSchemaSet)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.XsdDataContractExporter&quot; /&gt; class with the specified set of schemas.">Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> con el conjunto de esquemas especificado.</summary>
      <param name="schemas" vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; that contains the schemas to be exported.">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que contiene los esquemas que se van a exportar.</param>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Reflection.Assembly})">
      <summary vsli:raw="Gets a value that indicates whether the set of .common language runtime (CLR) types contained in a set of assemblies can be exported.">Obtiene un valor que indica si se puede exportar el conjunto de tipos de Common Language Runtime (CLR) incluidos en un conjunto de ensamblados.</summary>
      <param name="assemblies" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; of &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; that contains the assemblies with the types to export.">
        <see cref="T:System.Collections.Generic.ICollection`1" /> de <see cref="T:System.Reflection.Assembly" /> que contiene los ensamblados con los tipos para exportar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the types can be exported; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si se pueden exportar los tipos; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Type})">
      <summary vsli:raw="Gets a value that indicates whether the set of .common language runtime (CLR) types contained in a &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; can be exported.">Obtiene un valor que indica si se puede exportar el conjunto tipos de Common Language Runtime (CLR) incluidos en un <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <param name="types" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; that contains the specified types to export.">
        <see cref="T:System.Collections.Generic.ICollection`1" /> que contiene los tipos especificados para exportar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the types can be exported; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si se pueden exportar los tipos; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Type)">
      <summary vsli:raw="Gets a value that indicates whether the specified common language runtime (CLR) type can be exported.">Obtiene un valor que indica si se puede exportar el tipo de Common Language Runtime (CLR) especificado.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to export.">
        <see cref="T:System.Type" /> para exportar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the type can be exported; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si se puede exportar el tipo; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Reflection.Assembly})">
      <summary vsli:raw="Transforms the types contained in the specified collection of assemblies.">Transforma los tipos contenidos en la colección especificada de ensamblados.</summary>
      <param name="assemblies" vsli:raw="A &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; (of &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt;) that contains the types to export.">
        <see cref="T:System.Collections.Generic.ICollection`1" /> (de <see cref="T:System.Reflection.Assembly" />) que contiene los tipos para exportar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;assemblies&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">El argumento <paramref name="assemblies" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An &lt;see cref=&quot;T:System.Reflection.Assembly&quot; /&gt; in the collection is &lt;see langword=&quot;null&quot; /&gt;.">Un <see cref="T:System.Reflection.Assembly" /> de la colección es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Type})">
      <summary vsli:raw="Transforms the types contained in the &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; passed to this method.">Transforma los tipos contenidos en <see cref="T:System.Collections.Generic.ICollection`1" /> pasados a este método.</summary>
      <param name="types" vsli:raw="A  &lt;see cref=&quot;T:System.Collections.Generic.ICollection`1&quot; /&gt; (of &lt;see cref=&quot;T:System.Type&quot; /&gt;) that contains the types to export.">
        <see cref="T:System.Collections.Generic.ICollection`1" /> (de tipo <see cref="T:System.Type" />) que contiene los tipos que se van a exportar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;types&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">El argumento <paramref name="types" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="A type in the collection is &lt;see langword=&quot;null&quot; /&gt;.">Un tipo de la colección es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Type)">
      <summary vsli:raw="Transforms the specified .NET Framework type into an XML schema definition language (XSD) schema.">Transforma el tipo .NET Framework especificado en un esquema del lenguaje de definición de esquemas XML (XSD).</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to transform into an XML schema.">
        <see cref="T:System.Type" /> para transformar en un esquema XML.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">El argumento <paramref name="type" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.GetRootElementName(System.Type)">
      <summary vsli:raw="Returns the top-level name and namespace for the &lt;see cref=&quot;T:System.Type&quot; /&gt;.">Devuelve el nombre de nivel superior y el espacio de nombres para <see cref="T:System.Type" />.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; to query.">
        <see cref="T:System.Type" /> que se va a consultar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">El argumento <paramref name="type" /> es <see langword="null" />.</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the top-level name and namespace for this &lt;see cref=&quot;T:System.Type&quot; /&gt;, which is written to the stream when writing this object.">El <see cref="T:System.Xml.XmlQualifiedName" /> que representa el nombre de nivel superior y el espacio de nombres para este <see cref="T:System.Type" />, que se escribe en la secuencia al escribir este objeto.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaType(System.Type)">
      <summary vsli:raw="Returns the XML schema type for the specified type.">Devuelve un tipo de esquema XML para el tipo especificado.</summary>
      <param name="type" vsli:raw="The type to return a schema for.">El tipo para el que se va a devolver un esquema.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">El argumento <paramref name="type" /> es <see langword="null" />.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaType&quot; /&gt; that contains the XML schema.">Un <see cref="T:System.Xml.Schema.XmlSchemaType" /> que contiene el esquema XML.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName(System.Type)">
      <summary vsli:raw="Returns the contract name and contract namespace for the &lt;see cref=&quot;T:System.Type&quot; /&gt;.">Devuelve el nombre del contrato el espacio de nombres del contrato para el <see cref="T:System.Type" />.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; that was exported.">El <see cref="T:System.Type" /> que se exportó.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;type&quot; /&gt; argument is &lt;see langword=&quot;null&quot; /&gt;.">El argumento <paramref name="type" /> es <see langword="null" />.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; that represents the contract name of the type and its namespace.">Un <see cref="T:System.Xml.XmlQualifiedName" /> que representa el nombre del contrato del tipo y su espacio de nombres.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.XsdDataContractExporter.Options">
      <summary vsli:raw="Gets or sets an &lt;see cref=&quot;T:System.Runtime.Serialization.ExportOptions&quot; /&gt; that contains options that can be set for the export operation.">Obtiene o establece un <see cref="T:System.Runtime.Serialization.ExportOptions" /> que contiene opciones que se pueden establecer para la operación de exportación.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Runtime.Serialization.ExportOptions&quot; /&gt; that contains options used to customize how types are exported to schemas.">Un <see cref="T:System.Runtime.Serialization.ExportOptions" /> que contiene las opciones usadas para personalizar cómo se exportan los tipos a los esquemas.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.XsdDataContractExporter.Schemas">
      <summary vsli:raw="Gets the collection of exported XML schemas.">Obtiene la colección de esquemas XML exportados.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.Schema.XmlSchemaSet&quot; /&gt; that contains the schemas transformed from the set of common language runtime (CLR) types after calling the &lt;see cref=&quot;Overload:System.Runtime.Serialization.XsdDataContractExporter.Export&quot; /&gt; method.">Un <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que contiene los esquemas transformados del conjunto de tipos de Common Language Runtime (CLR) después de llamar al método <see cref="Overload:System.Runtime.Serialization.XsdDataContractExporter.Export" />.</returns>
    </member>
    <member name="T:System.Xml.IFragmentCapableXmlDictionaryWriter">
      <summary vsli:raw="Contains properties and methods that when implemented by a &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;, allows processing of XML fragments.">Contiene propiedades y métodos que cuando son implementados por un <see cref="T:System.Xml.XmlDictionaryWriter" />, permiten el procesamiento de fragmentos XML.</summary>
    </member>
    <member name="M:System.Xml.IFragmentCapableXmlDictionaryWriter.EndFragment">
      <summary vsli:raw="Ends the processing of an XML fragment.">Finaliza el procesamiento de un fragmento XML.</summary>
    </member>
    <member name="M:System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment(System.IO.Stream,System.Boolean)">
      <summary vsli:raw="Starts the processing of an XML fragment.">Inicia el procesamiento de un fragmento XML.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Secuencia en la que se va a escribir.</param>
      <param name="generateSelfContainedTextFragment" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, any namespaces declared outside the fragment is declared again if used inside of it; if &lt;see langword=&quot;false&quot; /&gt; the namespaces are not declared again.">Si es <see langword="true" />, se declara de nuevo cualquier espacio de nombres declarado fuera del fragmento si se utiliza dentro de él; si <see langword="false" /> no se declaran los espacios de nombres de nuevo.</param>
    </member>
    <member name="M:System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes an XML fragment to the underlying stream of the writer.">Escribe un fragmento XML en la secuencia subyacente del sistema de escritura.</summary>
      <param name="buffer" vsli:raw="The buffer to write to.">Búfer en el que se va a escribir.</param>
      <param name="offset" vsli:raw="The starting position from which to write in &lt;paramref name=&quot;buffer&quot; /&gt;.">La posición inicial desde la que escribir <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes to be written to the &lt;paramref name=&quot;buffer&quot; /&gt;.">El número de bytes que se escribirán en el <paramref name="buffer" />.</param>
    </member>
    <member name="P:System.Xml.IFragmentCapableXmlDictionaryWriter.CanFragment">
      <summary vsli:raw="Gets a value that indicates whether this &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; can process XML fragments.">Obtiene un valor que indica si este <see cref="T:System.Xml.XmlDictionaryWriter" /> puede procesar fragmentos XML.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; can process XML fragments; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Xml.XmlDictionaryWriter" /> puede procesar fragmentos XML; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xml.IStreamProvider">
      <summary vsli:raw="Represents an interface that can be implemented by classes providing streams.">Representa una interfaz que se puede implementar mediante clases que proporcionan secuencias.</summary>
    </member>
    <member name="M:System.Xml.IStreamProvider.GetStream">
      <summary vsli:raw="Gets a stream.">Obtiene una secuencia.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; object.">Un objeto <see cref="T:System.IO.Stream" />.</returns>
    </member>
    <member name="M:System.Xml.IStreamProvider.ReleaseStream(System.IO.Stream)">
      <summary vsli:raw="Releases a stream to output.">Libera una secuencia para la salida.</summary>
      <param name="stream" vsli:raw="The stream being released.">La secuencia que se libera.</param>
    </member>
    <member name="T:System.Xml.IXmlBinaryReaderInitializer">
      <summary vsli:raw="Provides methods for reinitializing a binary reader to read a new document.">Proporciona métodos para reinicializar un lector binario para leer un nuevo documento.</summary>
    </member>
    <member name="M:System.Xml.IXmlBinaryReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Reinitializes the binary reader using the given input buffer.">Reinicializa el lector binario mediante el búfer de entrada determinado.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">El búfer del que se lee.</param>
      <param name="offset" vsli:raw="Starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">Posición inicial de la que leer en <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="Number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Número de bytes que se pueden leer de <paramref name="buffer" />.</param>
      <param name="dictionary" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlDictionary" /> que se va a utilizar.</param>
      <param name="quotas" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> que se va a aplicar.</param>
      <param name="session" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlBinaryReaderSession" /> que se va a utilizar.</param>
      <param name="onClose" vsli:raw="Delegate to call when the reader is closed.">Delegado al que se llamará cuando se cierre el lector.</param>
    </member>
    <member name="M:System.Xml.IXmlBinaryReaderInitializer.SetInput(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Reinitializes the binary reader using the given input stream.">Reinicializa el lector binario mediante el flujo de entrada determinado.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Secuencia a partir de la cual se lee.</param>
      <param name="dictionary" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlDictionary" /> que se va a utilizar.</param>
      <param name="quotas" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> que se va a aplicar.</param>
      <param name="session" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlBinaryReaderSession" /> que se va a utilizar.</param>
      <param name="onClose" vsli:raw="Delegate to call when the reader is closed.">Delegado al que se llamará cuando se cierre el lector.</param>
    </member>
    <member name="T:System.Xml.IXmlBinaryWriterInitializer">
      <summary vsli:raw="Specifies implementation requirements for XML binary writers that derive from this interface.">Especifica los requisitos de implementación para sistemas de escritura binarios XML que derivan de esta interfaz.</summary>
    </member>
    <member name="M:System.Xml.IXmlBinaryWriterInitializer.SetOutput(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlBinaryWriterSession,System.Boolean)">
      <summary vsli:raw="Specifies initialization requirements for XML binary writers that implement this method.">Especifica los requisitos de inicialización para sistemas de escritura binarios XML que implementan este método.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Secuencia en la que se va a escribir.</param>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">Objeto <see cref="T:System.Xml.XmlDictionary" /> que se va a usar.</param>
      <param name="session" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlBinaryWriterSession&quot; /&gt; to use.">Objeto <see cref="T:System.Xml.XmlBinaryWriterSession" /> que se va a usar.</param>
      <param name="ownsStream" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the stream is closed by the writer when done; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para indicar que el sistema de escritura cerrará el flujo una vez que haya terminado; de lo contrario, <see langword="false" />.</param>
    </member>
    <member name="T:System.Xml.IXmlDictionary">
      <summary vsli:raw="An &lt;see langword=&quot;interface&quot; /&gt; that defines the contract that an Xml dictionary must implement to be used by &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; and &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; implementations.">
        <see langword="interface" /> que define el contrato que un diccionario Xml debe implementar para ser utilizado por <see cref="T:System.Xml.XmlDictionaryReader" /> e implementaciones <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
    </member>
    <member name="M:System.Xml.IXmlDictionary.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Attempts to look up an entry in the dictionary.">Intenta buscar una entrada en el diccionario.</summary>
      <param name="key" vsli:raw="Key to look up.">Clave para buscar.</param>
      <param name="result" vsli:raw="If &lt;paramref name=&quot;key&quot; /&gt; is defined, the &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that is mapped to the key; otherwise &lt;see langword=&quot;null&quot; /&gt;.">Si se define <paramref name="key" />, <see cref="T:System.Xml.XmlDictionaryString" /> que está asignado a la clave; de lo contrario, <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if key is in the dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, si la clave está en el diccionario; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.IXmlDictionary.TryLookup(System.String,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks the dictionary for a specified string value.">Busca en el diccionario un valor de cadena especificado.</summary>
      <param name="value" vsli:raw="String value being checked for.">Valor de cadena que se comprueba.</param>
      <param name="result" vsli:raw="The corresponding &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;, if found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Valor <see cref="T:System.Xml.XmlDictionaryString" /> correspondiente, si se encuentra; en caso contrario, es <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if value is in the dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el valor está en el diccionario; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.IXmlDictionary.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks the dictionary for a specified &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;.">Busca en el diccionario un <see cref="T:System.Xml.XmlDictionaryString" /> especificado.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; being checked for.">El objeto <see cref="T:System.Xml.XmlDictionaryString" /> que se busca.</param>
      <param name="result" vsli:raw="The matching &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;, if found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Valor <see cref="T:System.Xml.XmlDictionaryString" /> correspondiente, si se encuentra; de lo contrario, <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; is in the dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Xml.XmlDictionaryString" /> está en el diccionario, de lo contrario <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xml.IXmlTextReaderInitializer">
      <summary vsli:raw="Specifies implementation requirements for XML text readers that derive from this interface.">Especifica los requisitos de implementación para los lectores de texto XML que derivan de esta interfaz.</summary>
    </member>
    <member name="M:System.Xml.IXmlTextReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Specifies initialization requirements for XML text readers that read a buffer.">Especifica los requisitos de inicialización para los lectores de texto XML que leen un búfer.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">El búfer del que se lee.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">La posición inicial de la que leer en <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Número de bytes que se pueden leer de <paramref name="buffer" />.</param>
      <param name="encoding" vsli:raw="The character encoding of the stream.">La codificación de caracteres de la secuencia.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> que se va a aplicar.</param>
      <param name="onClose" vsli:raw="The delegate to be called when the reader is closed.">El delegado al que se va a llamar cuando se cierre el lector.</param>
    </member>
    <member name="M:System.Xml.IXmlTextReaderInitializer.SetInput(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Specifies initialization requirements for XML text readers that read a stream.">Especifica los requisitos de inicialización para los lectores de texto XML que leen una secuencia.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Secuencia a partir de la cual se lee.</param>
      <param name="encoding" vsli:raw="The character encoding of the stream.">La codificación de caracteres de la secuencia.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> que se va a aplicar.</param>
      <param name="onClose" vsli:raw="The delegate to be called when the reader is closed.">El delegado al que se va a llamar cuando se cierre el lector.</param>
    </member>
    <member name="T:System.Xml.IXmlTextWriterInitializer">
      <summary vsli:raw="Specifies implementation requirements for XML text writers that derive from this interface.">Especifica los requisitos de implementación para los editores de texto XML que derivan de esta interfaz.</summary>
    </member>
    <member name="M:System.Xml.IXmlTextWriterInitializer.SetOutput(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary vsli:raw="Specifies initialization requirements for XML text writers that implement this method.">Especifica los requisitos de inicialización para los editores de texto XML que implementan este método.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Secuencia en la que se va a escribir.</param>
      <param name="encoding" vsli:raw="The character encoding of the stream.">La codificación de caracteres de la secuencia.</param>
      <param name="ownsStream" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate the stream is closed by the writer when done; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para indicar que el sistema de escritura cerrará el flujo una vez que haya terminado; de lo contrario, <see langword="false" />.</param>
    </member>
    <member name="T:System.Xml.OnXmlDictionaryReaderClose">
      <summary vsli:raw="&lt;see langword=&quot;delegate&quot; /&gt; for a callback method when closing the reader.">
        <see langword="delegate" /> para un método de devolución de llamada al cerrar el lector.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that fires the &lt;c&gt;OnClose&lt;/c&gt; event.">Un objeto <see cref="T:System.Xml.XmlDictionaryReader" /> que genera el evento <c>OnClose</c>.</param>
    </member>
    <member name="T:System.Xml.UniqueId">
      <summary vsli:raw="A unique identifier optimized for Guids.">Un identificador único optimizado para Guids.</summary>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor">
      <summary vsli:raw="Creates a new instance of this class with a new, unique Guid.">Crea una nueva instancia de esta clase con un nuevo, único Guid.</summary>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Byte[])">
      <summary vsli:raw="Creates a new instance of this class using a byte array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Crea una nueva instancia de esta clase utilizando una matriz de bytes que representa un <see cref="T:System.Guid" />.</summary>
      <param name="guid" vsli:raw="A byte array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Matriz de bytes que representa un <see cref="T:System.Guid" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;guid&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="guid" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;guid&quot; /&gt; provides less than 16 valid bytes.">
        <paramref name="guid" /> proporciona menos de 16 bytes válidos.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Byte[],System.Int32)">
      <summary vsli:raw="Creates a new instance of this class starting from an offset within a &lt;see langword=&quot;byte&quot; /&gt; array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Crea una nueva instancia de esta clase que se inicia de un desplazamiento dentro de una matriz de <see langword="byte" /> que representa un <see cref="T:System.Guid" />.</summary>
      <param name="guid" vsli:raw="A &lt;see langword=&quot;byte&quot; /&gt; array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Una matriz <see langword="byte" /> que representa una <see cref="T:System.Guid" />.</param>
      <param name="offset" vsli:raw="Offset position within the &lt;see langword=&quot;byte&quot; /&gt; array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Posición compensada dentro de la matriz<see langword="byte" /> que representa <see cref="T:System.Guid" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;guid&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="guid" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; less than zero or greater than the length of the array.">
        <paramref name="offset" /> menor que cero o mayor que la longitud de la matriz.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;guid&quot; /&gt; and &lt;paramref name=&quot;offset&quot; /&gt; provide less than 16 valid bytes.">
        <paramref name="guid" /> y <paramref name="offset" /> proporcionan menos de 16 bytes válidos.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Creates a new instance of this class starting from an offset within a &lt;see langword=&quot;char&quot; /&gt; using a specified number of entries.">Crea una nueva instancia de esta clase que se inicia de un desplazamiento dentro de un <see langword="char" /> utilizando un número especificado de entradas.</summary>
      <param name="chars" vsli:raw="A &lt;see langword=&quot;char&quot; /&gt; array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Una matriz <see langword="char" /> que representa una <see cref="T:System.Guid" />.</param>
      <param name="offset" vsli:raw="Offset position within the &lt;see langword=&quot;char&quot; /&gt; array that represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Posición compensada dentro de la matriz<see langword="char" /> que representa <see cref="T:System.Guid" />.</param>
      <param name="count" vsli:raw="Number of array entries to use, starting from &lt;paramref name=&quot;offset&quot; /&gt;.">El número de entradas de la matriz para utilizar, partiendo de <paramref name="offset" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; less than zero or greater than the length of the array.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; less than zero or greater than the length of the array minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> menor que cero o mayor que la longitud de la matriz.

o bien

<paramref name="count" /> menor que cero o mayor que la longitud de la matriz menos <paramref name="offset" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; equals zero.">
        <paramref name="count" /> es igual a cero.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Guid)">
      <summary vsli:raw="Creates a new instance of this class using a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Crea una nueva instancia de esta clase usando un <see cref="T:System.Guid" />.</summary>
      <param name="guid" vsli:raw="A &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Objeto <see cref="T:System.Guid" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;guid&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="guid" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.String)">
      <summary vsli:raw="Creates a new instance of this class using a string.">Crea una nueva instancia de esta clase usando una cadena.</summary>
      <param name="value" vsli:raw="A string used to generate the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Una cadena utilizada para generar <see cref="T:System.Xml.UniqueId" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> es <see langword="null" />.</exception>
      <exception cref="T:System.FormatException" vsli:raw="Length of &lt;paramref name=&quot;value&quot; /&gt; is zero.">La longitud de <paramref name="value" /> es cero.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.Equals(System.Object)">
      <summary vsli:raw="Tests whether an object equals this &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Prueba si un objeto es igual a este <see cref="T:System.Xml.UniqueId" />.</summary>
      <param name="obj" vsli:raw="The object to compare.">Objeto que se va a comparar.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object equals this &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el objeto es igual a este <see cref="T:System.Xml.UniqueId" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.GetHashCode">
      <summary vsli:raw="Creates a hash-code representation of this &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Crea una representación del código hash de este <see cref="T:System.Xml.UniqueId" />.</summary>
      <returns vsli:raw="An integer hash-code representation of this &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Una representación del código hash entero de este <see cref="T:System.Xml.UniqueId" />.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.op_Equality(System.Xml.UniqueId,System.Xml.UniqueId)">
      <summary vsli:raw="Overrides the equality operator to test for equality of two &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;s.">Reemplaza al operador de igualdad para comprobar la igualdad de dos <see cref="T:System.Xml.UniqueId" />s.</summary>
      <param name="id1" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Primer objeto <see cref="T:System.Xml.UniqueId" />.</param>
      <param name="id2" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Segundo objeto <see cref="T:System.Xml.UniqueId" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;s are equal, or are both &lt;see langword=&quot;null&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; if they are not equal, or if only one of them is &lt;see langword=&quot;null&quot; /&gt;.">
        <see langword="true" /> si los dos <see cref="T:System.Xml.UniqueId" /> son iguales, o ambos son <see langword="null" />; <see langword="false" /> si no son iguales, o si sólo uno de ellos es <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.op_Inequality(System.Xml.UniqueId,System.Xml.UniqueId)">
      <summary vsli:raw="Overrides the equality operator to test for inequality of two &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;s.">Reemplaza al operador de igualdad para comprobar la desigualdad de dos <see cref="T:System.Xml.UniqueId" />s.</summary>
      <param name="id1" vsli:raw="The first &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Primer objeto <see cref="T:System.Xml.UniqueId" />.</param>
      <param name="id2" vsli:raw="The second &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Segundo objeto <see cref="T:System.Xml.UniqueId" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the overridden equality operator returns &lt;see langword=&quot;false&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el operador de igualdad invalidado vuelve <see langword="false" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.ToCharArray(System.Char[],System.Int32)">
      <summary vsli:raw="Puts the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; value into a &lt;see langword=&quot;char&quot; /&gt; array.">Coloca el valor <see cref="T:System.Xml.UniqueId" /> en una matriz de <see langword="char" />.</summary>
      <param name="chars" vsli:raw="The &lt;see langword=&quot;char&quot; /&gt; array.">Matriz de <see langword="char" />.</param>
      <param name="offset" vsli:raw="Position in the &lt;see langword=&quot;char&quot; /&gt; array to start inserting the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; value.">Coloque en la matriz de <see langword="char" /> para iniciar la inserción del valor <see cref="T:System.Xml.UniqueId" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;chars&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="chars" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; less than zero or greater than the length of the array.">
        <paramref name="offset" /> menor que cero o mayor que la longitud de la matriz.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;guid&quot; /&gt; and &lt;paramref name=&quot;offset&quot; /&gt; provide less than 16 valid bytes.">
        <paramref name="guid" /> y <paramref name="offset" /> proporcionan menos de 16 bytes válidos.</exception>
      <returns vsli:raw="Number of entries in the &lt;see langword=&quot;char&quot; /&gt; array filled by the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; value.">Número de entradas en la matriz <see langword="char" /> rellenadas por el valor <see cref="T:System.Xml.UniqueId" />.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.ToString">
      <summary vsli:raw="Displays the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; value in string format.">Muestra el valor <see cref="T:System.Xml.UniqueId" /> en formato de cadena.</summary>
      <returns vsli:raw="A string representation of the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; value.">Una representación de cadena del valor <see cref="T:System.Xml.UniqueId" />.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.TryGetGuid(System.Byte[],System.Int32)">
      <summary vsli:raw="Tries to get the value of the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; as a &lt;see cref=&quot;T:System.Guid&quot; /&gt; and store it in the given byte array at the specified offset.">Intenta obtener el valor de <see cref="T:System.Xml.UniqueId" /> como <see cref="T:System.Guid" /> y almacenarlo en la matriz de bytes determinada en el desplazamiento especificado.</summary>
      <param name="buffer" vsli:raw="&lt;see langword=&quot;byte&quot; /&gt; array that will contain the &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Matriz de <see langword="byte" /> que contendrá <see cref="T:System.Guid" />.</param>
      <param name="offset" vsli:raw="Position in the &lt;see langword=&quot;byte&quot; /&gt; array to start inserting the &lt;see cref=&quot;T:System.Guid&quot; /&gt; value.">Coloque en la matriz de <see langword="byte" /> para iniciar la inserción del valor <see cref="T:System.Guid" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; less than zero or greater than the length of the array.">
        <paramref name="offset" /> menor que cero o mayor que la longitud de la matriz.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; and &lt;paramref name=&quot;offset&quot; /&gt; provide less than 16 valid bytes.">
        <paramref name="buffer" /> y <paramref name="offset" /> proporcionan menos de 16 bytes válidos.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value stored in this instance of &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; is a &lt;see cref=&quot;T:System.Guid&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el valor almacenado en esta instancia de <see cref="T:System.Xml.UniqueId" /> es <see cref="T:System.Guid" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.TryGetGuid(System.Guid@)">
      <summary vsli:raw="Tries to get the value of the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; as a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Intenta obtener el valor de <see cref="T:System.Xml.UniqueId" /> como <see cref="T:System.Guid" />.</summary>
      <param name="guid" vsli:raw="The &lt;see cref=&quot;T:System.Guid&quot; /&gt; if successful; otherwise &lt;see cref=&quot;F:System.Guid.Empty&quot; /&gt;.">
        <see cref="T:System.Guid" /> si la entrega resulta satisfactoria; en caso contrario, <see cref="F:System.Guid.Empty" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; and &lt;paramref name=&quot;offset&quot; /&gt; provide less than 16 valid bytes.">
        <paramref name="buffer" /> y <paramref name="offset" /> proporcionan menos de 16 bytes válidos.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the UniqueId represents a &lt;see cref=&quot;T:System.Guid&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si UniqueId representa <see cref="T:System.Guid" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.UniqueId.CharArrayLength">
      <summary vsli:raw="Gets the length of the string representation of the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">Obtiene la longitud de la representación de la cadena del <see cref="T:System.Xml.UniqueId" />.</summary>
      <returns vsli:raw="The length of the string representation of the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt;.">La longitud de la representación de la cadena del <see cref="T:System.Xml.UniqueId" />.</returns>
    </member>
    <member name="P:System.Xml.UniqueId.IsGuid">
      <summary vsli:raw="Indicates whether the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; is a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Indica si el <see cref="T:System.Xml.UniqueId" /> es un <see cref="T:System.Guid" />.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Xml.UniqueId&quot; /&gt; is a &lt;see cref=&quot;T:System.Guid&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si <see cref="T:System.Xml.UniqueId" /> es <see cref="T:System.Guid" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xml.XmlBinaryReaderSession">
      <summary vsli:raw="Enables optimized strings to be managed in a dynamic way.">Permite administrar las cadenas optimizadas de una manera dinámica.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlBinaryReaderSession" />.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.Add(System.Int32,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; from the input parameters and adds it to an internal collection.">Crea una instancia de <see cref="T:System.Xml.XmlDictionaryString" /> a partir de los parámetros de entrada y la agrega a una colección interna.</summary>
      <param name="id" vsli:raw="The key value.">El valor de la clave.</param>
      <param name="value" vsli:raw="The value.">Valor.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;id&quot; /&gt; is less than zero.">
        <paramref name="id" /> es menor que cero.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An entry with key = &lt;paramref name=&quot;id&quot; /&gt; already exists.">Ya existe una entrada con clave = <paramref name="id" />.</exception>
      <returns vsli:raw="The newly created &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that is added to an internal collection.">
        <see cref="T:System.Xml.XmlDictionaryString" /> recién creada que se va a agregar a una colección interna.</returns>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.Clear">
      <summary vsli:raw="Clears the internal collection of all contents.">Borra todo el contenido de la colección interna.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks whether the internal collection contains an entry matching a key.">Comprueba si la colección interna contiene una entrada que coincide con una clave.</summary>
      <param name="key" vsli:raw="The key to search on.">La clave que hay que buscar.</param>
      <param name="result" vsli:raw="When this method returns, contains a string if an entry is found; otherwise, &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized.">Cuando este método vuelve, contiene una cadena si se encuentra una entrada; si no, <see langword="null" />. Este parámetro se pasa sin inicializar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> es <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an entry matching the &lt;paramref name=&quot;key&quot; /&gt; was found; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si se encontrara una entrada que coincide con <paramref name="key" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.TryLookup(System.String,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks whether the internal collection contains an entry matching a value.">Comprueba si la colección interna contiene una entrada que coincide con un valor.</summary>
      <param name="value" vsli:raw="The value to search for.">Valor que se va a buscar.</param>
      <param name="result" vsli:raw="When this method returns, contains a string if an entry is found; otherwise, &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized.">Cuando este método vuelve, contiene una cadena si se encuentra una entrada; si no, <see langword="null" />. Este parámetro se pasa sin inicializar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> es <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an entry matching the &lt;paramref name=&quot;value&quot; /&gt; was found; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si se encontrara una entrada que coincide con <paramref name="value" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks whether the internal collection contains an entry matching a value.">Comprueba si la colección interna contiene una entrada que coincide con un valor.</summary>
      <param name="value" vsli:raw="The value to search for.">Valor que se va a buscar.</param>
      <param name="result" vsli:raw="When this method returns, contains a string if an entry is found; otherwise, &lt;see langword=&quot;null&quot; /&gt;. This parameter is passed uninitialized.">Cuando este método vuelve, contiene una cadena si se encuentra una entrada; si no, <see langword="null" />. Este parámetro se pasa sin inicializar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> es <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an entry matching the &lt;paramref name=&quot;value&quot; /&gt; was found; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si se encontrara una entrada que coincide con <paramref name="value" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xml.XmlBinaryWriterSession">
      <summary vsli:raw="Enables using a dynamic dictionary to compress common strings that appear in a message and maintain state.">Permite el uso de un diccionario dinámico para comprimir cadenas comunes que aparecen en un mensaje y mantener el estado.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryWriterSession.#ctor">
      <summary vsli:raw="Creates an instance of this class.">Crea una instancia de esta clase.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryWriterSession.Reset">
      <summary vsli:raw="Clears out the internal collections.">Vacía las colecciones internas.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryWriterSession.TryAdd(System.Xml.XmlDictionaryString,System.Int32@)">
      <summary vsli:raw="Tries to add an &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; to the internal collection.">Intenta agregar un objeto <see cref="T:System.Xml.XmlDictionaryString" /> a la colección interna.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; to add.">
        <see cref="T:System.Xml.XmlDictionaryString" /> que se va a agregar.</param>
      <param name="key" vsli:raw="The key of the &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that was successfully added.">La clave del objeto <see cref="T:System.Xml.XmlDictionaryString" /> que se agregó correctamente.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An entry with key = &lt;paramref name=&quot;key&quot; /&gt; already exists.">Ya existe una entrada con clave = <paramref name="key" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the string could be added; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si se pudo agregar la cadena; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xml.XmlDictionary">
      <summary vsli:raw="Implements a dictionary used to optimize Windows Communication Foundation (WCF)'s XML reader/writer implementations.">Implementa un diccionario que se usa para optimizar las implementaciones del lector o el escritor XML de Windows Communication Foundation (WCF).</summary>
    </member>
    <member name="M:System.Xml.XmlDictionary.#ctor">
      <summary vsli:raw="Creates an empty &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt;.">Crea una colección <see cref="T:System.Xml.XmlDictionary" /> vacía.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionary.#ctor(System.Int32)">
      <summary vsli:raw="Creates a &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; with an initial capacity.">Crea un <see cref="T:System.Xml.XmlDictionary" /> con una capacidad inicial.</summary>
      <param name="capacity" vsli:raw="The initial size of the dictionary.">El tamaño inicial del diccionario.</param>
    </member>
    <member name="M:System.Xml.XmlDictionary.Add(System.String)">
      <summary vsli:raw="Adds a string to the &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt;.">Agrega una cadena a <see cref="T:System.Xml.XmlDictionary" />.</summary>
      <param name="value" vsli:raw="String to add to the dictionary.">Cadena que se agregará al diccionario.</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that was added.">
        <see cref="T:System.Xml.XmlDictionaryString" /> que se añadió.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionary.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Attempts to look up an entry in the dictionary.">Intenta buscar una entrada en el diccionario.</summary>
      <param name="key" vsli:raw="Key to look up.">Clave para buscar.</param>
      <param name="result" vsli:raw="If &lt;paramref name=&quot;key&quot; /&gt; is defined, the &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that is mapped to the key; otherwise &lt;see langword=&quot;null&quot; /&gt;.">Si se define <paramref name="key" />, <see cref="T:System.Xml.XmlDictionaryString" /> que está asignado a la clave; de lo contrario, <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if key is in the dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, si la clave está en el diccionario; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionary.TryLookup(System.String,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks the dictionary for a specified string value.">Busca en el diccionario un valor de cadena especificado.</summary>
      <param name="value" vsli:raw="String value being checked for.">Valor de cadena que se comprueba.</param>
      <param name="result" vsli:raw="The corresponding &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;, if found; otherwise &lt;see langword=&quot;null&quot; /&gt;.">El/la correspondiente <see cref="T:System.Xml.XmlDictionaryString" />, si se encuentra; en caso contrario, es <see langword="null" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> es <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if value is in the dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el valor está en el diccionario; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionary.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Checks the dictionary for a specified &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;.">Busca en el diccionario un <see cref="T:System.Xml.XmlDictionaryString" /> especificado.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; being checked for.">El objeto <see cref="T:System.Xml.XmlDictionaryString" /> que se busca.</param>
      <param name="result" vsli:raw="The matching &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;, if found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">Valor <see cref="T:System.Xml.XmlDictionaryString" /> correspondiente, si se encuentra; de lo contrario, <see langword="null" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> es <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; is in the dictionary; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si <see cref="T:System.Xml.XmlDictionaryString" /> está en el diccionario, de lo contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionary.Empty">
      <summary vsli:raw="Gets a &lt;see langword=&quot;static&quot; /&gt; empty &lt;see cref=&quot;T:System.Xml.IXmlDictionary&quot; /&gt;.">Obtiene un <see langword="static" /><see cref="T:System.Xml.IXmlDictionary" /> vacío.</summary>
      <returns vsli:raw="A &lt;see langword=&quot;static&quot; /&gt; empty &lt;see cref=&quot;T:System.Xml.IXmlDictionary&quot; /&gt;.">Obtiene un <see langword="static" /> vacío <see cref="T:System.Xml.IXmlDictionary" />.</returns>
    </member>
    <member name="T:System.Xml.XmlDictionaryReader">
      <summary vsli:raw="An &lt;see langword=&quot;abstract&quot; /&gt; class that the Windows Communication Foundation (WCF) derives from &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; to do serialization and deserialization.">Una clase <see langword="abstract" /> de la que Windows Communication Foundation (WCF) se deriva <see cref="T:System.Xml.XmlReader" /> para hacer serialización y deserialización.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.#ctor">
      <summary vsli:raw="Creates an instance of this class.  Invoked only by its derived classes.">Crea una instancia de esta clase.  Solo lo invocan sus clases derivadas.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Crea una instancia de <see cref="T:System.Xml.XmlDictionaryReader" /> que puede leer el formato XML binario de .NET.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">El búfer del que se lee.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">La posición inicial de la que leer en <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Número de bytes que se pueden leer de <paramref name="buffer" />.</param>
      <param name="dictionary" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlDictionary" /> que se va a utilizar.</param>
      <param name="quotas" vsli:raw="The quotas that apply to this operation.">Cuotas que se aplican a esta operación.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;offset&quot; /&gt; is less than zero or greater than the buffer length.">
        <paramref name="buffer" /> es <see langword="null" />.

o bien

<paramref name="offset" /> es menor que cero o mayor que la longitud del búfer.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero or greater than the buffer length minus the offset.">
        <paramref name="count" /> es menor que cero o mayor que la longitud del búfer menos el desplazamiento.</exception>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Crea una instancia de <see cref="T:System.Xml.XmlDictionaryReader" /> que puede leer el formato XML binario de .NET.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">El búfer del que se lee.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">La posición inicial de la que leer en <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Número de bytes que se pueden leer de <paramref name="buffer" />.</param>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">Objeto <see cref="T:System.Xml.XmlDictionary" /> que se va a usar.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> que se va a aplicar.</param>
      <param name="session" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; to use.">Objeto <see cref="T:System.Xml.XmlBinaryReaderSession" /> que se va a usar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero or greater than the buffer length minus the offset.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;offset&quot; /&gt; is less than zero or greater than the buffer length.">
        <paramref name="count" /> es menor que cero o mayor que la longitud del búfer menos el desplazamiento.

o bien

<paramref name="offset" /> es menor que cero o mayor que la longitud del búfer.</exception>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Crea una instancia de <see cref="T:System.Xml.XmlDictionaryReader" /> que puede leer el formato XML binario de .NET.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">El búfer del que se lee.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">La posición inicial de la que leer en <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Número de bytes que se pueden leer de <paramref name="buffer" />.</param>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">Objeto <see cref="T:System.Xml.XmlDictionary" /> que se va a usar.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> que se va a aplicar.</param>
      <param name="session" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; to use.">Objeto <see cref="T:System.Xml.XmlBinaryReaderSession" /> que se va a usar.</param>
      <param name="onClose" vsli:raw="Delegate to be called when the reader is closed.">Delegado al que se llamará cuando se cierre el lector.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero or greater than the buffer length minus the offset.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;offset&quot; /&gt; is less than zero or greater than the buffer length.">
        <paramref name="count" /> es menor que cero o mayor que la longitud del búfer menos el desplazamiento.

o bien

<paramref name="offset" /> es menor que cero o mayor que la longitud del búfer.</exception>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Crea una instancia de <see cref="T:System.Xml.XmlDictionaryReader" /> que puede leer el formato XML binario de .NET.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">El búfer del que se lee.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">La posición inicial de la que leer en <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Número de bytes que se pueden leer de <paramref name="buffer" />.</param>
      <param name="quotas" vsli:raw="The quotas that apply to this operation.">Cuotas que se aplican a esta operación.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;count&quot; /&gt; is less than zero or greater than the buffer length minus the offset.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;offset&quot; /&gt; is less than zero or greater than the buffer length.">
        <paramref name="count" /> es menor que cero o mayor que la longitud del búfer menos el desplazamiento.

o bien

<paramref name="offset" /> es menor que cero o mayor que la longitud del búfer.</exception>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Crea una instancia de <see cref="T:System.Xml.XmlDictionaryReader" /> que puede leer el formato XML binario de .NET.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">El búfer del que se lee.</param>
      <param name="quotas" vsli:raw="The quotas that apply to this operation.">Cuotas que se aplican a esta operación.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> es <see langword="null" />.</exception>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Crea una instancia de <see cref="T:System.Xml.XmlDictionaryReader" /> que puede leer el formato XML binario de .NET.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Secuencia a partir de la cual se lee.</param>
      <param name="dictionary" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlDictionary" /> que se va a utilizar.</param>
      <param name="quotas" vsli:raw="The quotas that apply to this operation.">Cuotas que se aplican a esta operación.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; or &lt;paramref name=&quot;quotas&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> o <paramref name="quotas" /> es <see langword="null" />.</exception>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Crea una instancia de <see cref="T:System.Xml.XmlDictionaryReader" /> que puede leer el formato XML binario de .NET.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Secuencia a partir de la cual se lee.</param>
      <param name="dictionary" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlDictionary" /> que se va a utilizar.</param>
      <param name="quotas" vsli:raw="The quotas that apply to this operation.">Cuotas que se aplican a esta operación.</param>
      <param name="session" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlBinaryReaderSession" /> que se va a utilizar.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> es <see langword="null" />.</exception>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Crea una instancia de <see cref="T:System.Xml.XmlDictionaryReader" /> que puede leer el formato XML binario de .NET.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Secuencia a partir de la cual se lee.</param>
      <param name="dictionary" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlDictionary" /> que se va a utilizar.</param>
      <param name="quotas" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> que se va a aplicar.</param>
      <param name="session" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlBinaryReaderSession&quot; /&gt; to use.">
        <see cref="T:System.Xml.XmlBinaryReaderSession" /> que se va a utilizar.</param>
      <param name="onClose" vsli:raw="Delegate to be called when the reader is closed.">Delegado al que se llamará cuando se cierre el lector.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> es <see langword="null" />.</exception>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read .NET Binary XML Format.">Crea una instancia de <see cref="T:System.Xml.XmlDictionaryReader" /> que puede leer el formato XML binario de .NET.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Secuencia a partir de la cual se lee.</param>
      <param name="quotas" vsli:raw="The quotas that apply to this operation.">Cuotas que se aplican a esta operación.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stream&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stream" /> es <see langword="null" />.</exception>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateDictionaryReader(System.Xml.XmlReader)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; from an existing &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Crea una instancia de <see cref="T:System.Xml.XmlDictionaryReader" /> a partir de un <see cref="T:System.Xml.XmlReader" /> existente.</summary>
      <param name="reader" vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Instancia de <see cref="T:System.Xml.XmlReader" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;reader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="reader" /> es <see langword="null" />.</exception>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">Crea una instancia de <see cref="T:System.Xml.XmlDictionaryReader" /> que lee XML en formato MTOM.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">El búfer del que se lee.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">La posición inicial de la que leer en <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Número de bytes que se pueden leer de <paramref name="buffer" />.</param>
      <param name="encoding" vsli:raw="The possible character encoding of the input.">Las posibles codificaciones de caracteres de la entrada.</param>
      <param name="quotas" vsli:raw="The quotas to apply to this reader.">Las cuotas que se van a aplicar a este lector.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;encoding&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="encoding" /> es <see langword="null" />.</exception>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">Crea una instancia de <see cref="T:System.Xml.XmlDictionaryReader" /> que lee XML en formato MTOM.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">El búfer del que se lee.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">La posición inicial de la que leer en <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Número de bytes que se pueden leer de <paramref name="buffer" />.</param>
      <param name="encodings" vsli:raw="The possible character encodings of the input.">Las posibles codificaciones de caracteres de la entrada.</param>
      <param name="contentType" vsli:raw="The Content-Type MIME type of the message.">El tipo de contenido MIME del mensaje.</param>
      <param name="quotas" vsli:raw="The quotas to apply to this reader.">Las cuotas que se van a aplicar a este lector.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas,System.Int32,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">Crea una instancia de <see cref="T:System.Xml.XmlDictionaryReader" /> que lee XML en formato MTOM.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">El búfer del que se lee.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">La posición inicial de la que leer en <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Número de bytes que se pueden leer de <paramref name="buffer" />.</param>
      <param name="encodings" vsli:raw="The possible character encodings of the input.">Las posibles codificaciones de caracteres de la entrada.</param>
      <param name="contentType" vsli:raw="The Content-Type MIME type of the message.">El tipo de contenido MIME del mensaje.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply to the reader.">El atributo <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> que se debe aplicar al lector.</param>
      <param name="maxBufferSize" vsli:raw="The maximum allowed size of the buffer.">El tamaño máximo permitido del búfer.</param>
      <param name="onClose" vsli:raw="The delegate to be called when the reader is closed.">El delegado al que se va a llamar cuando se cierre el lector.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">Crea una instancia de <see cref="T:System.Xml.XmlDictionaryReader" /> que lee XML en formato MTOM.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">El búfer del que se lee.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">La posición inicial de la que leer en <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Número de bytes que se pueden leer de <paramref name="buffer" />.</param>
      <param name="encodings" vsli:raw="The possible character encodings of the input.">Las posibles codificaciones de caracteres de la entrada.</param>
      <param name="quotas" vsli:raw="The quotas to apply to this reader.">Las cuotas que se van a aplicar a este lector.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">Crea una instancia de <see cref="T:System.Xml.XmlDictionaryReader" /> que lee XML en formato MTOM.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Secuencia a partir de la cual se lee.</param>
      <param name="encoding" vsli:raw="The possible character encoding of the stream.">La posible codificación de caracteres de la secuencia.</param>
      <param name="quotas" vsli:raw="The quotas to apply to this reader.">Las cuotas que se van a aplicar a este lector.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;encoding&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="encoding" /> es <see langword="null" />.</exception>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.IO.Stream,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">Crea una instancia de <see cref="T:System.Xml.XmlDictionaryReader" /> que lee XML en formato MTOM.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Secuencia a partir de la cual se lee.</param>
      <param name="encodings" vsli:raw="The possible character encodings of the stream.">Las posibles codificaciones de caracteres de la secuencia.</param>
      <param name="contentType" vsli:raw="The Content-Type MIME type of the message.">El tipo de contenido MIME del mensaje.</param>
      <param name="quotas" vsli:raw="The quotas to apply to this reader.">Las cuotas que se van a aplicar a este lector.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.IO.Stream,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas,System.Int32,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">Crea una instancia de <see cref="T:System.Xml.XmlDictionaryReader" /> que lee XML en formato MTOM.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Secuencia a partir de la cual se lee.</param>
      <param name="encodings" vsli:raw="The possible character encodings of the stream.">Las posibles codificaciones de caracteres de la secuencia.</param>
      <param name="contentType" vsli:raw="The Content-Type MIME type of the message.">El tipo de contenido MIME del mensaje.</param>
      <param name="quotas" vsli:raw="The MIME type of the message.">El tipo MIME del mensaje.</param>
      <param name="maxBufferSize" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply to the reader.">El atributo <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> que se debe aplicar al lector.</param>
      <param name="onClose" vsli:raw="The delegate to be called when the reader is closed.">El delegado al que se va a llamar cuando se cierre el lector.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.IO.Stream,System.Text.Encoding[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that reads XML in the MTOM format.">Crea una instancia de <see cref="T:System.Xml.XmlDictionaryReader" /> que lee XML en formato MTOM.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Secuencia a partir de la cual se lee.</param>
      <param name="encodings" vsli:raw="The possible character encodings of the stream.">Las posibles codificaciones de caracteres de la secuencia.</param>
      <param name="quotas" vsli:raw="The quotas to apply to this reader.">Las cuotas que se van a aplicar a este lector.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;encoding&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="encoding" /> es <see langword="null" />.</exception>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Crea una instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">El búfer del que se lee.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">La posición inicial de la que leer en <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Número de bytes que se pueden leer de <paramref name="buffer" />.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; object that specifies the encoding properties to apply.">El objeto <see cref="T:System.Text.Encoding" /> que especifica las propiedades de codificación que se van a aplicar.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> que se va a aplicar.</param>
      <param name="onClose" vsli:raw="The delegate to be called when the reader is closed.">El delegado al que se va a llamar cuando se cierre el lector.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Crea una instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">El búfer del que se lee.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">La posición inicial de la que leer en <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Número de bytes que se pueden leer de <paramref name="buffer" />.</param>
      <param name="quotas" vsli:raw="The quotas applied to the reader.">Las cuotas que se aplican al lector.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Crea una instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">El búfer del que se lee.</param>
      <param name="quotas" vsli:raw="The quotas applied to the reader.">Las cuotas que se aplican al lector.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;buffer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="buffer" /> es <see langword="null" />.</exception>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Crea una instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Secuencia a partir de la cual se lee.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; object that specifies the encoding properties to apply.">El objeto <see cref="T:System.Text.Encoding" /> que especifica las propiedades de codificación que se van a aplicar.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> que se va a aplicar.</param>
      <param name="onClose" vsli:raw="The delegate to be called when the reader is closed.">El delegado al que se va a llamar cuando se cierre el lector.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Crea una instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Secuencia a partir de la cual se lee.</param>
      <param name="quotas" vsli:raw="The quotas applied to the reader.">Las cuotas que se aplican al lector.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.EndCanonicalization">
      <summary vsli:raw="This method is not yet implemented.">Este método aún no se ha implementado.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="Always.">Siempre.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.GetAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="When overridden in a derived class, gets the value of an attribute.">Cuando se invalida en una clase derivada, obtiene el valor de un atributo.</summary>
      <param name="localName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that represents the local name of the attribute.">
        <see cref="T:System.Xml.XmlDictionaryString" /> que representa el nombre local del atributo.</param>
      <param name="namespaceUri" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that represents the namespace of the attribute.">
        <see cref="T:System.Xml.XmlDictionaryString" /> que representa el espacio de nombres del atributo.</param>
      <returns vsli:raw="The value of the attribute.">El valor del atributo.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.GetNonAtomizedNames(System.String@,System.String@)">
      <summary vsli:raw="Gets non-atomized names.">Obtiene nombres no atomizados.</summary>
      <param name="localName" vsli:raw="The local name.">Nombre local.</param>
      <param name="namespaceUri" vsli:raw="The namespace for the local &lt;paramref name=&quot;localName&quot; /&gt;.">El espacio de nombres para el parámetro <paramref name="localName" /> local.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IndexOfLocalName(System.String[],System.String)">
      <summary vsli:raw="Gets the index of the local name of the current node within an array of names.">Obtiene el índice del nombre local del nodo actual de una matriz de nombres.</summary>
      <param name="localNames" vsli:raw="The string array of local names to be searched.">La matriz de cadenas de nombres locales en que se va a buscar.</param>
      <param name="namespaceUri" vsli:raw="The namespace of current node.">El espacio de nombres de nodo actual.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;localNames&quot; /&gt; or any of the names in the array is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;namespaceUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="localNames" /> o cualquiera de los nombres de la matriz es <see langword="null" />.

o bien

<paramref name="namespaceUri" /> es <see langword="null" />.</exception>
      <returns vsli:raw="The index of the local name of the current node within an array of names.">El índice del nombre local del nodo actual dentro de una matriz de nombres.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IndexOfLocalName(System.Xml.XmlDictionaryString[],System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Gets the index of the local name of the current node within an array of names.">Obtiene el índice del nombre local del nodo actual de una matriz de nombres.</summary>
      <param name="localNames" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; array of local names to be searched.">La matriz de valores de tipo <see cref="T:System.Xml.XmlDictionaryString" /> de nombres locales en que se buscará.</param>
      <param name="namespaceUri" vsli:raw="The namespace of current node.">El espacio de nombres de nodo actual.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;localNames&quot; /&gt; or any of the names in the array is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;namespaceUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="localNames" /> o cualquiera de los nombres de la matriz es <see langword="null" />.

o bien

<paramref name="namespaceUri" /> es <see langword="null" />.</exception>
      <returns vsli:raw="The index of the local name of the current node within an array of names.">El índice del nombre local del nodo actual dentro de una matriz de nombres.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsLocalName(System.String)">
      <summary vsli:raw="Checks whether the parameter, &lt;paramref name=&quot;localName&quot; /&gt;, is the local name of the current node.">Comprueba si el parámetro <paramref name="localName" /> es el nombre local del nodo actual.</summary>
      <param name="localName" vsli:raw="The local name of the current node.">El nombre local del nodo actual.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;localName&quot; /&gt; matches local name of the current node; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si <paramref name="localName" /> coincide con el nombre local del nodo actual; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsLocalName(System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Checks whether the parameter, &lt;paramref name=&quot;localName&quot; /&gt;, is the local name of the current node.">Comprueba si el parámetro <paramref name="localName" /> es el nombre local del nodo actual.</summary>
      <param name="localName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that represents the local name of the current node.">
        <see cref="T:System.Xml.XmlDictionaryString" /> que representa el nombre local del nodo actual.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;localName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="localName" /> es <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;localName&quot; /&gt; matches local name of the current node; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si <paramref name="localName" /> coincide con el nombre local del nodo actual; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsNamespaceUri(System.String)">
      <summary vsli:raw="Checks whether the parameter, &lt;paramref name=&quot;namespaceUri&quot; /&gt;, is the namespace of the current node.">Comprueba si el parámetro <paramref name="namespaceUri" /> es el espacio de nombres del nodo actual.</summary>
      <param name="namespaceUri" vsli:raw="The namespace of current node.">El espacio de nombres de nodo actual.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;namespaceUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="namespaceUri" /> es <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;namespaceUri&quot; /&gt; matches namespace of the current node; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si <paramref name="namespaceUri" /> coincide con el espacio de nombres del nodo actual; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsNamespaceUri(System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Checks whether the parameter, &lt;paramref name=&quot;namespaceUri&quot; /&gt;, is the namespace of the current node.">Comprueba si el parámetro <paramref name="namespaceUri" /> es el espacio de nombres del nodo actual.</summary>
      <param name="namespaceUri" vsli:raw="Namespace of current node.">El espacio de nombres del nodo actual.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;namespaceUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="namespaceUri" /> es <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;namespaceUri&quot; /&gt; matches namespace of the current node; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si <paramref name="namespaceUri" /> coincide con el espacio de nombres del nodo actual; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsStartArray(System.Type@)">
      <summary vsli:raw="Checks whether the reader is positioned at the start of an array. This class returns &lt;see langword=&quot;false&quot; /&gt;, but derived classes that have the concept of arrays might return &lt;see langword=&quot;true&quot; /&gt;.">Comprueba si el lector está colocado en el inicio de una matriz. Esta clase devuelve <see langword="false" />, pero las clases derivadas que tienen el concepto de matrices podrían devolver <see langword="true" />.</summary>
      <param name="type" vsli:raw="Type of the node, if a valid node; otherwise &lt;see langword=&quot;null&quot; /&gt;.">Tipo del nodo, si es válido; de lo contrario <see langword="null" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is positioned at the start of an array node; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el lector está situado al inicio de un nodo de matriz; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Tests whether the first tag is a start tag or empty element tag and if the local name and namespace URI match those of the current node.">Prueba si la primera etiqueta es una etiqueta inicial o una etiqueta de elemento vacía y si el nombre local y el espacio de nombres URI concuerda con los del nodo actual.</summary>
      <param name="localName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that represents the local name of the attribute.">
        <see cref="T:System.Xml.XmlDictionaryString" /> que representa el nombre local del atributo.</param>
      <param name="namespaceUri" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that represents the namespace of the attribute.">
        <see cref="T:System.Xml.XmlDictionaryString" /> que representa el espacio de nombres del atributo.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the first tag in the array is a start tag or empty element tag and matches &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si la primera etiqueta de la matriz es una etiqueta inicial o una etiqueta de elemento vacía y coincide con <paramref name="localName" /> y <paramref name="namespaceUri" />; de lo contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsTextNode(System.Xml.XmlNodeType)">
      <summary vsli:raw="Tests whether the current node is a text node.">Prueba si el nodo actual es un nodo de texto.</summary>
      <param name="nodeType" vsli:raw="Type of the node being tested.">Tipo del nodo que se prueba.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the node type is &lt;see cref=&quot;F:System.Xml.XmlNodeType.Text&quot; /&gt;, &lt;see cref=&quot;F:System.Xml.XmlNodeType.Whitespace&quot; /&gt;, &lt;see cref=&quot;F:System.Xml.XmlNodeType.SignificantWhitespace&quot; /&gt;, &lt;see cref=&quot;F:System.Xml.XmlNodeType.CDATA&quot; /&gt;, or &lt;see cref=&quot;F:System.Xml.XmlNodeType.Attribute&quot; /&gt;; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el tipo de nodo es <see cref="F:System.Xml.XmlNodeType.Text" />, <see cref="F:System.Xml.XmlNodeType.Whitespace" />, <see cref="F:System.Xml.XmlNodeType.SignificantWhitespace" />, <see cref="F:System.Xml.XmlNodeType.CDATA" />, o <see cref="F:System.Xml.XmlNodeType.Attribute" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement">
      <summary vsli:raw="Tests whether the current content node is a start element or an empty element.">Prueba si el nodo de contenido actual es un elemento de inicio o un elemento vacío.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.String)">
      <summary vsli:raw="Tests whether the current content node is a start element or an empty element and if the &lt;see cref=&quot;P:System.Xml.XmlReader.Name&quot; /&gt; property of the element matches the given argument.">Prueba si el nodo de contenido actual es un elemento de inicio o un elemento vacío y si la propiedad <see cref="P:System.Xml.XmlReader.Name" /> del elemento coincide con el argumento especificado.</summary>
      <param name="name" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlReader.Name&quot; /&gt; property of the element.">La propiedad <see cref="P:System.Xml.XmlReader.Name" /> del elemento.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.String,System.String)">
      <summary vsli:raw="Tests whether the current content node is a start element or an empty element and if the &lt;see cref=&quot;P:System.Xml.XmlReader.LocalName&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlReader.NamespaceURI&quot; /&gt; properties of the element matches the given arguments.">Prueba si el nodo de contenido actual es un elemento de inicio o un elemento vacío y si las propiedades <see cref="P:System.Xml.XmlReader.LocalName" /> y <see cref="P:System.Xml.XmlReader.NamespaceURI" /> del elemento coinciden con los argumentos especificados.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Tests whether the current content node is a start element or an empty element and if the &lt;see cref=&quot;P:System.Xml.XmlReader.LocalName&quot; /&gt; and &lt;see cref=&quot;P:System.Xml.XmlReader.NamespaceURI&quot; /&gt; properties of the element matches the given argument.">Prueba si el nodo de contenido actual es un elemento de inicio o un elemento vacío y si las propiedades <see cref="P:System.Xml.XmlReader.LocalName" /> y <see cref="P:System.Xml.XmlReader.NamespaceURI" /> del elemento coinciden con el argumento especificado.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Boolean[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Boolean&quot; /&gt; nodes into a typed array.">Lee las apariciones repetidas de los nodos <see cref="T:System.Boolean" /> en una matriz con tipo.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">Matriz en la que se colocan los nodos.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Índice inicial de la matriz.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">El número de nodos que se van a colocar en la matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
      <returns vsli:raw="The number of nodes put in the array.">El número de nodos colocados en la matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.DateTime[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.DateTime&quot; /&gt; nodes into a typed array.">Lee las apariciones repetidas de los nodos <see cref="T:System.DateTime" /> en una matriz con tipo.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">Matriz en la que se colocan los nodos.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Índice inicial de la matriz.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">El número de nodos que se van a colocar en la matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
      <returns vsli:raw="The number of nodes put in the array.">El número de nodos colocados en la matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Decimal[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Decimal&quot; /&gt; nodes into a typed array.">Lee las apariciones repetidas de los nodos <see cref="T:System.Decimal" /> en una matriz con tipo.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">Matriz en la que se colocan los nodos.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Índice inicial de la matriz.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">El número de nodos que se van a colocar en la matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
      <returns vsli:raw="The number of nodes put in the array.">El número de nodos colocados en la matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Double[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Double&quot; /&gt; nodes into a typed array.">Lee las apariciones repetidas de los nodos <see cref="T:System.Double" /> en una matriz con tipo.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">Matriz en la que se colocan los nodos.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Índice inicial de la matriz.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">El número de nodos que se van a colocar en la matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
      <returns vsli:raw="The number of nodes put in the array.">El número de nodos colocados en la matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Guid[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Guid&quot; /&gt; nodes into a typed array.">Lee las apariciones repetidas de los nodos <see cref="T:System.Guid" /> en una matriz con tipo.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">Matriz en la que se colocan los nodos.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Índice inicial de la matriz.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">El número de nodos que se van a colocar en la matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
      <returns vsli:raw="The number of nodes put in the array.">El número de nodos colocados en la matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int16[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see langword=&quot;short&quot; /&gt; integers into a typed array.">Lee las apariciones repetidas de los enteros <see langword="short" /> en una matriz con tipo.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array" vsli:raw="The array into which the integers are put.">Matriz en la que se colocan los enteros.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Índice inicial de la matriz.</param>
      <param name="count" vsli:raw="The number of integers to put in the array.">El número de enteros que se van a colocar en la matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
      <returns vsli:raw="The number of integers put in the array.">El número de enteros colocados en la matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int32[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of integers into a typed array.">Lee las apariciones repetidas de los enteros en una matriz con tipo.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array" vsli:raw="The array into which the integers are put.">Matriz en la que se colocan los enteros.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Índice inicial de la matriz.</param>
      <param name="count" vsli:raw="The number of integers to put in the array.">El número de enteros que se van a colocar en la matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
      <returns vsli:raw="The number of integers put in the array.">El número de enteros colocados en la matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int64[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see langword=&quot;long&quot; /&gt; integers into a typed array.">Lee las apariciones repetidas de los enteros <see langword="long" /> en una matriz con tipo.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array" vsli:raw="The array into which the integers are put.">Matriz en la que se colocan los enteros.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Índice inicial de la matriz.</param>
      <param name="count" vsli:raw="The number of integers to put in the array.">El número de enteros que se van a colocar en la matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
      <returns vsli:raw="The number of integers put in the array.">El número de enteros colocados en la matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Single[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see langword=&quot;float&quot; /&gt; numbers into a typed array.">Lee las apariciones repetidas de los números <see langword="float" /> en una matriz con tipo.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array" vsli:raw="The array into which the float numbers are put.">La matriz en la que se colocan los números float.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Índice inicial de la matriz.</param>
      <param name="count" vsli:raw="The number of float numbers to put in the array.">El número de números float que se van a colocar en la matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
      <returns vsli:raw="The umber of float numbers put in the array.">El número de números float colocados en la matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.TimeSpan[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; nodes into a typed array.">Lee las apariciones repetidas de los nodos <see cref="T:System.TimeSpan" /> en una matriz con tipo.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">Matriz en la que se colocan los nodos.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Índice inicial de la matriz.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">El número de nodos que se van a colocar en la matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
      <returns vsli:raw="The number of nodes put in the array.">El número de nodos colocados en la matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Boolean[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Boolean&quot; /&gt; nodes into a typed array.">Lee las apariciones repetidas de los nodos <see cref="T:System.Boolean" /> en una matriz con tipo.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">Matriz en la que se colocan los nodos.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Índice inicial de la matriz.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">El número de nodos que se van a colocar en la matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
      <returns vsli:raw="The number of nodes put in the array.">El número de nodos colocados en la matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.DateTime[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.DateTime&quot; /&gt; nodes into a typed array.">Lee las apariciones repetidas de los nodos <see cref="T:System.DateTime" /> en una matriz con tipo.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">Matriz en la que se colocan los nodos.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Índice inicial de la matriz.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">El número de nodos que se van a colocar en la matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
      <returns vsli:raw="The number of nodes put in the array.">El número de nodos colocados en la matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Decimal[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Decimal&quot; /&gt; nodes into a typed array.">Lee las apariciones repetidas de los nodos <see cref="T:System.Decimal" /> en una matriz con tipo.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">Matriz en la que se colocan los nodos.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Índice inicial de la matriz.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">El número de nodos que se van a colocar en la matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
      <returns vsli:raw="The number of nodes put in the array.">El número de nodos colocados en la matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Double[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Double&quot; /&gt; nodes type into a typed array.">Lee las apariciones repetidas del tipo de nodos <see cref="T:System.Double" /> en una matriz con tipo.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">Matriz en la que se colocan los nodos.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Índice inicial de la matriz.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">El número de nodos que se van a colocar en la matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
      <returns vsli:raw="The number of nodes put in the array.">El número de nodos colocados en la matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Guid[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Guid&quot; /&gt; nodes into a typed array.">Lee las apariciones repetidas de los nodos <see cref="T:System.Guid" /> en una matriz con tipo.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">Matriz en la que se colocan los nodos.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Índice inicial de la matriz.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">El número de nodos que se van a colocar en la matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
      <returns vsli:raw="The number of nodes put in the array.">El número de nodos colocados en la matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int16[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see langword=&quot;short&quot; /&gt; integers into a typed array.">Lee las apariciones repetidas de los enteros <see langword="short" /> en una matriz con tipo.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array" vsli:raw="The array into which the integers are put.">Matriz en la que se colocan los enteros.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Índice inicial de la matriz.</param>
      <param name="count" vsli:raw="The number of integers to put in the array.">El número de enteros que se van a colocar en la matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
      <returns vsli:raw="The number of integers put in the array.">El número de enteros colocados en la matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int32[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of integers into a typed array.">Lee las apariciones repetidas de los enteros en una matriz con tipo.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array" vsli:raw="The array into which the integers are put.">Matriz en la que se colocan los enteros.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Índice inicial de la matriz.</param>
      <param name="count" vsli:raw="The number of integers to put in the array.">El número de enteros que se van a colocar en la matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
      <returns vsli:raw="The number of integers put in the array.">El número de enteros colocados en la matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int64[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see langword=&quot;long&quot; /&gt; integers into a typed array.">Lee las apariciones repetidas de los enteros <see langword="long" /> en una matriz con tipo.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array" vsli:raw="The array into which the integers are put.">Matriz en la que se colocan los enteros.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Índice inicial de la matriz.</param>
      <param name="count" vsli:raw="The number of integers to put in the array.">El número de enteros que se van a colocar en la matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
      <returns vsli:raw="The number of integers put in the array.">El número de enteros colocados en la matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Single[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see langword=&quot;float&quot; /&gt; numbers into a typed array.">Lee las apariciones repetidas de los números <see langword="float" /> en una matriz con tipo.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array" vsli:raw="The array into which the float numbers are put.">La matriz en la que se colocan los números float.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Índice inicial de la matriz.</param>
      <param name="count" vsli:raw="The number of float numbers to put in the array.">El número de números float que se van a colocar en la matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
      <returns vsli:raw="The number of float numbers put in the array.">El número de números float colocados en la matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.TimeSpan[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; nodes into a typed array.">Lee las apariciones repetidas de los nodos <see cref="T:System.TimeSpan" /> en una matriz con tipo.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array" vsli:raw="The array into which the nodes are put.">Matriz en la que se colocan los nodos.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Índice inicial de la matriz.</param>
      <param name="count" vsli:raw="The number of nodes to put in the array.">El número de nodos que se van a colocar en la matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
      <returns vsli:raw="The number of nodes put in the array.">El número de nodos colocados en la matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadBooleanArray(System.String,System.String)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Boolean&quot; /&gt; nodes into a typed array.">Lee las apariciones repetidas de los nodos <see cref="T:System.Boolean" /> en una matriz con tipo.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; array of the &lt;see cref=&quot;T:System.Boolean&quot; /&gt; nodes.">Una matriz <see cref="T:System.Boolean" /> de los nodos <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadBooleanArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads repeated occurrences of &lt;see cref=&quot;T:System.Boolean&quot; /&gt; nodes into a typed array.">Lee las apariciones repetidas de los nodos <see cref="T:System.Boolean" /> en una matriz con tipo.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Boolean&quot; /&gt; array of the &lt;see cref=&quot;T:System.Boolean&quot; /&gt; nodes.">Una matriz <see cref="T:System.Boolean" /> de los nodos <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary vsli:raw="Converts a node's content to a specified type.">Convierte el contenido de un nodo en un tipo especificado.</summary>
      <param name="type" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the value to be returned.">El <see cref="T:System.Type" /> del valor que se va a devolver.</param>
      <param name="namespaceResolver" vsli:raw="An &lt;see cref=&quot;T:System.Xml.IXmlNamespaceResolver&quot; /&gt; object that is used to resolve any namespace prefixes related to type conversion. For example, this can be used when converting an &lt;see cref=&quot;T:System.Xml.XmlQualifiedName&quot; /&gt; object to an &lt;c&gt;xs:string&lt;/c&gt;. This value can be a null reference.">Objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> que se utiliza para resolver prefijos de espacios de nombres relacionados con la conversión de tipos. Por ejemplo, se puede utilizar al convertir un objeto <see cref="T:System.Xml.XmlQualifiedName" /> en <c>xs:string</c>. Este valor puede ser una referencia nula.</param>
      <returns vsli:raw="The concatenated text content or attribute value converted to the requested type.">Contenido de texto concatenado o valor de atributo convertido en el tipo solicitado.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsBase64">
      <summary vsli:raw="Reads the content and returns the Base64 decoded binary bytes.">Lee el contenido y devuelve los bytes binarios descodificados en Base64.</summary>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The array size is greater than the MaxArrayLength quota for this reader.">El tamaño de la matriz es mayor que la cuota de MaxArrayLength para este lector.</exception>
      <returns vsli:raw="A byte array that contains the Base64 decoded binary bytes.">Una matriz de bytes que contiene  los bytes binarios Base64 descodificados.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsBinHex">
      <summary vsli:raw="Reads the content and returns the &lt;see langword=&quot;BinHex&quot; /&gt; decoded binary bytes.">Lee el contenido y devuelve los bytes binarios descodificados de <see langword="BinHex" />.</summary>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The array size is greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">El tamaño de la matriz es mayor que <see cref="F:System.Int32.MaxValue" />.</exception>
      <returns vsli:raw="A byte array that contains the &lt;see langword=&quot;BinHex&quot; /&gt; decoded binary bytes.">Una matriz de bytes que contiene los bytes binarios Base64 descodificados <see langword="BinHex" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsBinHex(System.Int32)">
      <summary vsli:raw="Reads the content and returns the &lt;see langword=&quot;BinHex&quot; /&gt; decoded binary bytes.">Lee el contenido y devuelve los bytes binarios descodificados de <see langword="BinHex" />.</summary>
      <param name="maxByteArrayContentLength" vsli:raw="The maximum array length.">La longitud máxima permitida de la matriz.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="The array size is greater than &lt;paramref name=&quot;maxByteArrayContentLength&quot; /&gt;.">El tamaño de la matriz es mayor que <paramref name="maxByteArrayContentLength" />.</exception>
      <returns vsli:raw="A byte array that contains the &lt;see langword=&quot;BinHex&quot; /&gt; decoded binary bytes.">Una matriz de bytes que contiene los bytes binarios Base64 descodificados <see langword="BinHex" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsChars(System.Char[],System.Int32,System.Int32)">
      <summary vsli:raw="Reads the content into a &lt;see langword=&quot;char&quot; /&gt; array.">Lee el contenido en una matriz de <see langword="char" />.</summary>
      <param name="chars" vsli:raw="The array into which the characters are put.">La matriz en la que se colocan los caracteres.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Índice inicial de la matriz.</param>
      <param name="count" vsli:raw="The number of characters to put in the array.">El número de caracteres que se van a colocar en la matriz.</param>
      <returns vsli:raw="Number of characters read.">Número de caracteres que se han leído.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsDecimal">
      <summary vsli:raw="Converts a node's content to &lt;see langword=&quot;decimal&quot; /&gt;.">Convierte el contenido de un nodo en <see langword="decimal" />.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;decimal&quot; /&gt; representation of node's content.">La representación <see langword="decimal" /> del contenido de nodo.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsFloat">
      <summary vsli:raw="Converts a node's content to &lt;see langword=&quot;float&quot; /&gt;.">Convierte el contenido de un nodo en <see langword="float" />.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;float&quot; /&gt; representation of node's content.">La representación <see langword="float" /> del contenido de nodo.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsGuid">
      <summary vsli:raw="Converts a node's content to &lt;see langword=&quot;guid&quot; /&gt;.">Convierte el contenido de un nodo en <see langword="guid" />.</summary>
      <returns vsli:raw="The &lt;see langword=&quot;guid&quot; /&gt; representation of node's content.">La representación <see langword="guid" /> del contenido de nodo.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsQualifiedName(System.String@,System.String@)">
      <summary vsli:raw="Converts a node's content to a qualified name representation.">Convierte el contenido de un nodo en una representación del nombre completo.</summary>
      <param name="localName" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlReader.LocalName&quot; /&gt; part of the qualified name (&lt;see langword=&quot;out&quot; /&gt; parameter).">La parte <see cref="P:System.Xml.XmlReader.LocalName" /> del nombre completo (<see langword="out" /> parámetro).</param>
      <param name="namespaceUri" vsli:raw="The &lt;see cref=&quot;P:System.Xml.XmlReader.NamespaceURI&quot; /&gt; part of the qualified name (&lt;see langword=&quot;out&quot; /&gt; parameter).">La parte <see cref="P:System.Xml.XmlReader.NamespaceURI" /> del nombre completo (<see langword="out" /> parámetro).</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString">
      <summary vsli:raw="Converts a node's content to a string.">Convierte el contenido de un nodo en una cadena.</summary>
      <returns vsli:raw="The node content in a string representation.">El contenido del nodo en una representación de cadena.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.Int32)">
      <summary vsli:raw="Converts a node's content to a string.">Convierte el contenido de un nodo en una cadena.</summary>
      <param name="maxStringContentLength" vsli:raw="The maximum string length.">La longitud máxima permitida de la cadena.</param>
      <returns vsli:raw="Node content in string representation.">El contenido del nodo en una representación de cadena.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.String[],System.Int32@)">
      <summary vsli:raw="Converts a node's content to a string.">Convierte el contenido de un nodo en una cadena.</summary>
      <param name="strings" vsli:raw="The array of strings to match content against.">La matriz de cadenas con la que coincide el contenido.</param>
      <param name="index" vsli:raw="The index of the entry in &lt;paramref name=&quot;strings&quot; /&gt; that matches the content.">El índice de la entrada de <paramref name="strings" /> que coincide con el contenido.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;strings&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;An entry in &lt;paramref name=&quot;strings&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="strings" /> es <see langword="null" />.

o bien

Una entrada en <paramref name="strings" /> es <see langword="null" />.</exception>
      <returns vsli:raw="The node content in a string representation.">El contenido del nodo en una representación de cadena.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.Xml.XmlDictionaryString[],System.Int32@)">
      <summary vsli:raw="Converts a node's content to a string.">Convierte el contenido de un nodo en una cadena.</summary>
      <param name="strings" vsli:raw="The array of &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; objects to match content against.">La matriz de objetos <see cref="T:System.Xml.XmlDictionaryString" /> con la que se compara el contenido.</param>
      <param name="index" vsli:raw="The index of the entry in &lt;paramref name=&quot;strings&quot; /&gt; that matches the content.">El índice de la entrada de <paramref name="strings" /> que coincide con el contenido.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;strings&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;An entry in &lt;paramref name=&quot;strings&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="strings" /> es <see langword="null" />.

o bien

Una entrada en <paramref name="strings" /> es <see langword="null" />.</exception>
      <returns vsli:raw="The node content in a string representation.">El contenido del nodo en una representación de cadena.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsTimeSpan">
      <summary vsli:raw="Converts a node's content to &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">Convierte el contenido de un nodo en <see cref="T:System.TimeSpan" />.</summary>
      <returns vsli:raw="&lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; representation of node's content.">La representación <see cref="T:System.TimeSpan" /> del contenido del nodo.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsUniqueId">
      <summary vsli:raw="Converts a node's content to a unique identifier.">Convierte el contenido de un nodo en un identificador único.</summary>
      <returns vsli:raw="The node's content represented as a unique identifier.">El contenido del nodo representado como un identificador único.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDateTimeArray(System.String,System.String)">
      <summary vsli:raw="Converts a node's content to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; array.">Convierte el contenido de un nodo en una matriz <see cref="T:System.DateTime" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; array.">El contenido del nodo representado como una matriz <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDateTimeArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Converts a node's content to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; array.">Convierte el contenido de un nodo en una matriz <see cref="T:System.DateTime" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; array.">El contenido del nodo representado como una matriz <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDecimalArray(System.String,System.String)">
      <summary vsli:raw="Converts a node's content to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; array.">Convierte el contenido de un nodo en una matriz <see cref="T:System.Decimal" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; array.">El contenido del nodo representado como una matriz <see cref="T:System.Decimal" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDecimalArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Converts a node's content to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; array.">Convierte el contenido de un nodo en una matriz <see cref="T:System.Decimal" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; array.">El contenido del nodo representado como una matriz <see cref="T:System.Decimal" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDoubleArray(System.String,System.String)">
      <summary vsli:raw="Converts a node's content to a &lt;see cref=&quot;T:System.Double&quot; /&gt; array.">Convierte el contenido de un nodo en una matriz <see cref="T:System.Double" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Double&quot; /&gt; array.">El contenido del nodo representado como una matriz <see cref="T:System.Double" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDoubleArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Converts a node's content to a &lt;see cref=&quot;T:System.Double&quot; /&gt; array.">Convierte el contenido de un nodo en una matriz <see cref="T:System.Double" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Double&quot; /&gt; array.">El contenido del nodo representado como una matriz <see cref="T:System.Double" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBase64">
      <summary vsli:raw="Converts a node's content to a array of Base64 bytes.">Convierte el contenido de un nodo en una matriz de bytes de Base64.</summary>
      <returns vsli:raw="The node's content represented as an array of Base64 bytes.">El contenido del nodo representado como una matriz de bytes de Base64.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBinHex">
      <summary vsli:raw="Converts a node's content to an array of &lt;see langword=&quot;BinHex&quot; /&gt; bytes.">Convierte el contenido de un nodo en una matriz de <see langword="BinHex" /> bytes.</summary>
      <returns vsli:raw="The node's content represented as an array of &lt;see langword=&quot;BinHex&quot; /&gt; bytes.">El contenido del nodo representado como una matriz de <see langword="BinHex" /> bytes.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBoolean">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Convierte el contenido de un elemento en <see cref="T:System.Boolean" />.</summary>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">El contenido del nodo representado como un <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDateTime">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">Convierte el contenido de un elemento en <see cref="T:System.DateTime" />.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The element is not in valid format.">El elemento no tiene un formato válido.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The element is not in valid format.">El elemento no tiene un formato válido.</exception>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">El contenido del nodo representado como un <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDecimal">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">Convierte el contenido de un elemento en <see cref="T:System.Decimal" />.</summary>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Decimal&quot; /&gt;.">El contenido del nodo representado como un <see cref="T:System.Decimal" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDouble">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">Convierte el contenido de un elemento en <see cref="T:System.Double" />.</summary>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Double&quot; /&gt;.">El contenido del nodo representado como un <see cref="T:System.Double" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsFloat">
      <summary vsli:raw="Converts an element's content to a floating point number (&lt;see cref=&quot;T:System.Single&quot; /&gt;).">Convierte el contenido de un elemento en un número de punto flotante (<see cref="T:System.Single" />).</summary>
      <returns vsli:raw="The node's content represented as a floating point number (&lt;see cref=&quot;T:System.Single&quot; /&gt;).">El contenido del nodo representado como un número de punto flotante (<see cref="T:System.Single" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsGuid">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Convierte el contenido de un elemento en <see cref="T:System.Guid" />.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The element is not in valid format.">El elemento no tiene un formato válido.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The element is not in valid format.">El elemento no tiene un formato válido.</exception>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">El contenido del nodo representado como un <see cref="T:System.Guid" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsInt">
      <summary vsli:raw="Converts an element's content to an integer (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">Convierte el contenido de un elemento en un entero (<see cref="T:System.Int32" />).</summary>
      <returns vsli:raw="The node's content represented as an integer (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">El contenido del nodo representado como un entero (<see cref="T:System.Int32" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsLong">
      <summary vsli:raw="Converts an element's content to a long integer (&lt;see cref=&quot;T:System.Int64&quot; /&gt;).">Convierte el contenido de un elemento en un entero largo (<see cref="T:System.Int64" />).</summary>
      <returns vsli:raw="The node's content represented as a long integer (&lt;see cref=&quot;T:System.Int64&quot; /&gt;).">El contenido del nodo representado como un entero largo (<see cref="T:System.Int64" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsString">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.String&quot; /&gt;.">Convierte el contenido de un elemento en <see cref="T:System.String" />.</summary>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.String&quot; /&gt;.">El contenido del nodo representado como un <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsTimeSpan">
      <summary vsli:raw="Converts an element's content to a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">Convierte el contenido de un elemento en <see cref="T:System.TimeSpan" />.</summary>
      <returns vsli:raw="The node's content represented as a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt;.">El contenido del nodo representado como un <see cref="T:System.TimeSpan" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsUniqueId">
      <summary vsli:raw="Converts an element's content to a unique identifier.">Convierte el contenido de un elemento en un identificador único.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="The element is not in valid format.">El elemento no tiene un formato válido.</exception>
      <exception cref="T:System.FormatException" vsli:raw="The element is not in valid format.">El elemento no tiene un formato válido.</exception>
      <returns vsli:raw="The node's content represented as a unique identifier.">El contenido del nodo representado como un identificador único.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement">
      <summary vsli:raw="Checks whether the current node is an element and advances the reader to the next node.">Comprueba si el nodo actual es un elemento y desplaza el lector hasta el siguiente nodo.</summary>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" /> devuelve <see langword="false" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.String)">
      <summary vsli:raw="Checks whether the current node is an element with the given &lt;paramref name=&quot;name&quot; /&gt; and advances the reader to the next node.">Comprueba si el nodo de contenido actual es un elemento con la propiedad <paramref name="name" /> especificada y desplaza el lector hasta el siguiente nodo.</summary>
      <param name="name" vsli:raw="The qualified name of the element.">Nombre completo del elemento.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" /> devuelve <see langword="false" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.String,System.String)">
      <summary vsli:raw="Checks whether the current node is an element with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; and advances the reader to the next node.">Comprueba si el nodo actual es un elemento con los <paramref name="localName" /> y <paramref name="namespaceUri" /> especificados y desplaza el lector al siguiente nodo.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" /> devuelve <see langword="false" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Checks whether the current node is an element with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; and advances the reader to the next node.">Comprueba si el nodo actual es un elemento con los <paramref name="localName" /> y <paramref name="namespaceUri" /> especificados y desplaza el lector al siguiente nodo.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;see cref=&quot;M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" /> devuelve <see langword="false" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadGuidArray(System.String,System.String)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Lee el contenido de una serie de nodos con los elementos <paramref name="localName" /> y <paramref name="namespaceUri" /> especificados en una matriz de <see cref="T:System.Guid" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Matriz de <see cref="T:System.Guid" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadGuidArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Lee el contenido de una serie de nodos con los elementos <paramref name="localName" /> y <paramref name="namespaceUri" /> especificados en una matriz de <see cref="T:System.Guid" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <returns vsli:raw="An array of &lt;see cref=&quot;T:System.Guid&quot; /&gt;.">Matriz de <see cref="T:System.Guid" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt16Array(System.String,System.String)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see langword=&quot;short&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int16&quot; /&gt;).">Lee el contenido de una serie de nodos con <paramref name="localName" /> y <paramref name="namespaceUri" /> especificados en una matriz de enteros <see langword="short" /> (<see cref="T:System.Int16" />).</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;short&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int16&quot; /&gt;).">Una matriz de enteros <see langword="short" /> (<see cref="T:System.Int16" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt16Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see langword=&quot;short&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int16&quot; /&gt;).">Lee el contenido de una serie de nodos con <paramref name="localName" /> y <paramref name="namespaceUri" /> especificados en una matriz de enteros <see langword="short" /> (<see cref="T:System.Int16" />).</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;short&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int16&quot; /&gt;).">Una matriz de enteros <see langword="short" /> (<see cref="T:System.Int16" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt32Array(System.String,System.String)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of integers (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">Lee el contenido de una serie de nodos con <paramref name="localName" /> y <paramref name="namespaceUri" /> especificados en una matriz de enteros (<see cref="T:System.Int32" />).</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <returns vsli:raw="An array of integers (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">Una matriz de enteros (<see cref="T:System.Int32" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt32Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of integers (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">Lee el contenido de una serie de nodos con <paramref name="localName" /> y <paramref name="namespaceUri" /> especificados en una matriz de enteros (<see cref="T:System.Int32" />).</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <returns vsli:raw="An array of integers (&lt;see cref=&quot;T:System.Int32&quot; /&gt;).">Una matriz de enteros (<see cref="T:System.Int32" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt64Array(System.String,System.String)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see langword=&quot;long&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int64&quot; /&gt;).">Lee el contenido de una serie de nodos con <paramref name="localName" /> y <paramref name="namespaceUri" /> especificados en una matriz de enteros <see langword="long" /> (<see cref="T:System.Int64" />).</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;long&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int64&quot; /&gt;).">Una matriz de enteros <see langword="long" /> (<see cref="T:System.Int64" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt64Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see langword=&quot;long&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int64&quot; /&gt;).">Lee el contenido de una serie de nodos con <paramref name="localName" /> y <paramref name="namespaceUri" /> especificados en una matriz de enteros <see langword="long" /> (<see cref="T:System.Int64" />).</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;long&quot; /&gt; integers (&lt;see cref=&quot;T:System.Int64&quot; /&gt;).">Una matriz de enteros <see langword="long" /> (<see cref="T:System.Int64" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadSingleArray(System.String,System.String)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see langword=&quot;float&quot; /&gt; numbers (&lt;see cref=&quot;T:System.Single&quot; /&gt;).">Lee el contenido de una serie de nodos con <paramref name="localName" /> y <paramref name="namespaceUri" /> especificados en una matriz de números <see langword="float" /> (<see cref="T:System.Single" />).</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;float&quot; /&gt; numbers (&lt;see cref=&quot;T:System.Single&quot; /&gt;).">Una matriz de números <see langword="float" /> (<see cref="T:System.Single" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadSingleArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into an array of &lt;see langword=&quot;float&quot; /&gt; numbers (&lt;see cref=&quot;T:System.Single&quot; /&gt;).">Lee el contenido de una serie de nodos con <paramref name="localName" /> y <paramref name="namespaceUri" /> especificados en una matriz de números <see langword="float" /> (<see cref="T:System.Single" />).</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <returns vsli:raw="An array of &lt;see langword=&quot;float&quot; /&gt; numbers (&lt;see cref=&quot;T:System.Single&quot; /&gt;).">Una matriz de números <see langword="float" /> (<see cref="T:System.Single" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Checks whether the current node is an element with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; and advances the reader to the next node.">Comprueba si el nodo actual es un elemento con los <paramref name="localName" /> y <paramref name="namespaceUri" /> especificados y desplaza el lector hasta el siguiente nodo.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadString">
      <summary vsli:raw="Reads the contents of the current node into a string.">Lee el contenido del nodo actual en una cadena.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Unable to read the contents of the current node.">No puede leer el contenido del nodo actual.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="Maximum allowed string length exceeded.">Se ha superado la longitud de cadena máxima permitida.</exception>
      <returns vsli:raw="A string that contains the contents of the current node.">Una cadena que contiene el contenido del nodo actual.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadString(System.Int32)">
      <summary vsli:raw="Reads the contents of the current node into a string with a given maximum length.">Lee el contenido del nodo actual en una cadena con una longitud máxima determinada.</summary>
      <param name="maxStringContentLength" vsli:raw="Maximum allowed string length.">Longitud máxima de cadena permitida.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Unable to read the contents of the current node.">No puede leer el contenido del nodo actual.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="Maximum allowed string length exceeded.">Se ha superado la longitud de cadena máxima permitida.</exception>
      <returns vsli:raw="A string that contains the contents of the current node.">Una cadena que contiene el contenido del nodo actual.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadTimeSpanArray(System.String,System.String)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; array.">Lee el contenido de una serie de nodos con los elementos <paramref name="localName" /> y <paramref name="namespaceUri" /> especificados en una matriz de <see cref="T:System.TimeSpan" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; array.">Una matriz de <see cref="T:System.TimeSpan" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadTimeSpanArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Reads the contents of a series of nodes with the given &lt;paramref name=&quot;localName&quot; /&gt; and &lt;paramref name=&quot;namespaceUri&quot; /&gt; into a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; array.">Lee el contenido de una serie de nodos con los elementos <paramref name="localName" /> y <paramref name="namespaceUri" /> especificados en una matriz de <see cref="T:System.TimeSpan" />.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; array.">Una matriz de <see cref="T:System.TimeSpan" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadValueAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Not implemented.">Sin implementar.</summary>
      <param name="buffer" vsli:raw="The buffer from which to read.">El búfer del que se lee.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">La posición inicial de la que leer en <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Número de bytes que se pueden leer de <paramref name="buffer" />.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Always.">Siempre.</exception>
      <returns vsli:raw="Not implemented.">Sin implementar.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])">
      <summary vsli:raw="This method is not yet implemented.">Este método aún no se ha implementado.</summary>
      <param name="stream" vsli:raw="The stream to read from.">Flujo del que se va a leer.</param>
      <param name="includeComments" vsli:raw="Determines whether comments are included.">Determina si los comentarios se incluyen.</param>
      <param name="inclusivePrefixes" vsli:raw="The prefixes to be included.">Los prefijos que se van a incluir.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Always.">Siempre.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetArrayLength(System.Int32@)">
      <summary vsli:raw="Not implemented in this class (it always returns &lt;see langword=&quot;false&quot; /&gt;). May be overridden in derived classes.">No implementado en esta clase (siempre devuelve <see langword="false" />). Se puede invalidar en clases derivadas.</summary>
      <param name="count" vsli:raw="Returns 0, unless overridden in a derived class.">A menos que se invalide en una clase derivada, devuelve 0.</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt;, unless overridden in a derived class.">
        <see langword="false" />, a menos que se invalide en una clase derivada.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetBase64ContentLength(System.Int32@)">
      <summary vsli:raw="Not implemented in this class (it always returns &lt;see langword=&quot;false&quot; /&gt;). May be overridden in derived classes.">No implementado en esta clase (siempre devuelve <see langword="false" />). Se puede invalidar en clases derivadas.</summary>
      <param name="length" vsli:raw="Returns 0, unless overridden in a derived class.">A menos que se invalide en una clase derivada, devuelve 0.</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt;, unless overridden in a derived class.">
        <see langword="false" />, a menos que se invalide en una clase derivada.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetLocalNameAsDictionaryString(System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Not implemented in this class (it always returns &lt;see langword=&quot;false&quot; /&gt;). May be overridden in derived classes.">No implementado en esta clase (siempre devuelve <see langword="false" />). Se puede invalidar en clases derivadas.</summary>
      <param name="localName" vsli:raw="Returns &lt;see langword=&quot;null&quot; /&gt;, unless overridden in a derived class. .">Devuelve <see langword="null" />, a menos que se invalide en una clase derivada. .</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt;, unless overridden in a derived class.">
        <see langword="false" />, a menos que se invalide en una clase derivada.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetNamespaceUriAsDictionaryString(System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Not implemented in this class (it always returns &lt;see langword=&quot;false&quot; /&gt;). May be overridden in derived classes.">No implementado en esta clase (siempre devuelve <see langword="false" />). Se puede invalidar en clases derivadas.</summary>
      <param name="namespaceUri" vsli:raw="Returns &lt;see langword=&quot;null&quot; /&gt;, unless overridden in a derived class.">Devuelve <see langword="null" />, a menos que se invalide en una clase derivada.</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt;, unless overridden in a derived class.">
        <see langword="false" />, a menos que se invalide en una clase derivada.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetValueAsDictionaryString(System.Xml.XmlDictionaryString@)">
      <summary vsli:raw="Not implemented in this class (it always returns &lt;see langword=&quot;false&quot; /&gt;). May be overridden in derived classes.">No implementado en esta clase (siempre devuelve <see langword="false" />). Se puede invalidar en clases derivadas.</summary>
      <param name="value" vsli:raw="Returns &lt;see langword=&quot;null&quot; /&gt;, unless overridden in a derived class.">Devuelve <see langword="null" />, a menos que se invalide en una clase derivada.</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt;, unless overridden in a derived class.">
        <see langword="false" />, a menos que se invalide en una clase derivada.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReader.CanCanonicalize">
      <summary vsli:raw="This property always returns &lt;see langword=&quot;false&quot; /&gt;. Its derived classes can override to return &lt;see langword=&quot;true&quot; /&gt; if they support canonicalization.">Esta propiedad devuelve siempre <see langword="false" />. Sus clases derivadas pueden invalidarse para devolver <see langword="true" /> si admiten la canonización.</summary>
      <returns vsli:raw="Returns &lt;see langword=&quot;false&quot; /&gt;.">Devuelve <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReader.Quotas">
      <summary vsli:raw="Gets the quota values that apply to the current instance of this class.">Obtiene los valores de cuota que se aplican a la instancia actual de esta clase.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; that applies to the current instance of this class.">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> que se aplica a la instancia actual de esta clase.</returns>
    </member>
    <member name="T:System.Xml.XmlDictionaryReaderQuotas">
      <summary vsli:raw="Contains configurable quota values for XmlDictionaryReaders.">Contiene los valores de cuota configurables para XmlDictionaryReaders.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReaderQuotas.#ctor">
      <summary vsli:raw="Creates a new instance of this class.">Crea una nueva instancia de esta clase.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReaderQuotas.CopyTo(System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Sets the properties on a passed-in quotas instance, based on the values in this instance.">Establece las propiedades en una instancia de cuotas pasadas, basada en los valores de esta instancia.</summary>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; instance to which to copy values.">La instancia <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> a la cual se copian los valores.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value, but quota values are read-only for the passed in instance.">Intentar <see langword="set" /> el valor, pero los valores de cuota son de solo lectura para la instancia pasada.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="Passed in target &lt;paramref name=&quot;quotas&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">En el destino <paramref name="quotas" /> se pasa <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.Max">
      <summary vsli:raw="Gets an instance of this class with all properties set to maximum values.">Obtiene una instancia de esta clase con todas las propiedades establecidas en los valores máximos.</summary>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; with properties set to &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">Una instancia de <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> con propiedades establecidas en <see cref="F:System.Int32.MaxValue" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxArrayLength">
      <summary vsli:raw="Gets or sets the maximum allowed array length.">Obtiene o establece la longitud máxima permitida de matriz.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value, but quota values are read-only for this instance.">Intentar <see langword="set" /> el valor, pero los valores de cuota son de solo lectura para esta instancia.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value to less than zero.">Intentar <see langword="set" /> el valor menor que cero.</exception>
      <returns vsli:raw="The maximum allowed array length. The default is 16384.">La Longitud máxima permitida de la matriz. El valor predeterminado es 16384.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead">
      <summary vsli:raw="Gets or sets the maximum allowed bytes returned for each read.">Obtiene o establece el número máximo permitido de bytes devueltos para cada lectura.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value, but quota values are read-only for this instance.">Intentar <see langword="set" /> el valor, pero los valores de cuota son de solo lectura para esta instancia.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value to less than zero.">Intentar <see langword="set" /> el valor menor que cero.</exception>
      <returns vsli:raw="The maximum allowed bytes returned for each read. The default is 4096.">El máximo permitido de bytes devueltos para cada lectura. El valor predeterminado es 4096.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxDepth">
      <summary vsli:raw="Gets or sets the maximum nested node depth.">Obtiene o establece la profundidad máxima de nodos anidados.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value and quota values are read-only for this instance.">Intentar <see langword="set" /> el valor y los valores de cuota son de solo lectura para esta instancia.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value is less than zero.">Intentar <see langword="set" /> el valor es menor que cero.</exception>
      <returns vsli:raw="The maximum nested node depth. The default is 32.">La profundidad de nodo anidada máxima. El valor predeterminado es 32;</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxNameTableCharCount">
      <summary vsli:raw="Gets or sets the maximum characters allowed in a table name.">Obtiene o establece el número máximo de caracteres permitidos en un nombre de tabla.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value, but quota values are read-only for this instance.">Intentar <see langword="set" /> el valor, pero los valores de cuota son de solo lectura para esta instancia.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value to less than zero.">Intentar <see langword="set" /> el valor menor que cero.</exception>
      <returns vsli:raw="The maximum characters allowed in a table name. The default is 16384.">Los caracteres máximos permitidos en un nombre de tabla. El valor predeterminado es 16384.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxStringContentLength">
      <summary vsli:raw="Gets or sets the maximum string length returned by the reader.">Obtiene o establece la longitud de cadena máxima devuelta por el lector.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value, but quota values are read-only for this instance.">Intentar <see langword="set" /> el valor, pero los valores de cuota son de solo lectura para esta instancia.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="Trying to &lt;see langword=&quot;set&quot; /&gt; the value to less than zero.">Intentar <see langword="set" /> el valor menor que cero.</exception>
      <returns vsli:raw="The maximum string length returned by the reader. The default is 8192.">La longitud de cadena máxima devuelta por el lector. El valor predeterminado es 8192.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.ModifiedQuotas">
      <summary vsli:raw="Gets the modified quotas for the &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt;.">Obtiene la cuotas modificadas para <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />.</summary>
      <returns vsli:raw="The modified quotas for the &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt;.">Cuotas modificadas para <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />.</returns>
    </member>
    <member name="T:System.Xml.XmlDictionaryReaderQuotaTypes">
      <summary vsli:raw="Enumerates the configurable quota values for XmlDictionaryReaders.">Enumera los valores de cuota configurables para XmlDictionaryReaders.</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxArrayLength">
      <summary vsli:raw="Specifies the maximum allowed array length.">Especifica la longitud máxima permitida de la matriz.</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxBytesPerRead">
      <summary vsli:raw="Specifies the maximum allowed bytes returned for each read.">Especifica el máximo permitido de bytes devueltos para cada lectura.</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxDepth">
      <summary vsli:raw="Specifies the maximum nested node depth.">Especifica la profundidad de nodo anidada máxima.</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxNameTableCharCount">
      <summary vsli:raw="Specifies the maximum characters allowed in a table name.">Especifica los caracteres máximos permitidos en un nombre de tabla.</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxStringContentLength">
      <summary vsli:raw="Specifies the maximum string length returned by the reader.">Especifica la longitud de cadena máxima devuelta por el lector.</summary>
    </member>
    <member name="T:System.Xml.XmlDictionaryString">
      <summary vsli:raw="Represents an entry stored in a &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt;.">Representa una entrada almacenada en un <see cref="T:System.Xml.XmlDictionary" />.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryString.#ctor(System.Xml.IXmlDictionary,System.String,System.Int32)">
      <summary vsli:raw="Creates an instance of this class.">Crea una instancia de esta clase.</summary>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.IXmlDictionary&quot; /&gt; containing this instance.">
        <see cref="T:System.Xml.IXmlDictionary" /> que contiene esta instancia.</param>
      <param name="value" vsli:raw="The string that is the value of the dictionary entry.">La cadena que es el valor de la entrada del diccionario.</param>
      <param name="key" vsli:raw="The integer that is the key of the dictionary entry.">El entero que es la clave de la entrada del diccionario.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dictionary&quot; /&gt; or &lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dictionary" /> o <paramref name="value" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is less than 0 or greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; / 4.">
        <paramref name="key" /> es menor que 0 o mayor que <see cref="F:System.Int32.MaxValue" /> / 4.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryString.ToString">
      <summary vsli:raw="Displays a text representation of this object.">Muestra una representación de texto de este objeto.</summary>
      <returns vsli:raw="The string value for this instance of the class.">El valor de cadena para esta instancia de la clase.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Dictionary">
      <summary vsli:raw="Represents the &lt;see cref=&quot;T:System.Xml.IXmlDictionary&quot; /&gt; passed to the constructor of this instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;.">Representa el <see cref="T:System.Xml.IXmlDictionary" /> pasado al constructor de esta instancia de <see cref="T:System.Xml.XmlDictionaryString" />.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Xml.IXmlDictionary&quot; /&gt; for this dictionary entry.">
        <see cref="T:System.Xml.IXmlDictionary" /> para esta entrada del diccionario.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Empty">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; representing the empty string.">Obtiene <see cref="T:System.Xml.XmlDictionaryString" /> que representa la cadena vacía.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; representing the empty string.">
        <see cref="T:System.Xml.XmlDictionaryString" /> que representa la cadena vacía.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Key">
      <summary vsli:raw="Gets the integer key for this instance of the class.">Obtiene la clave entera para esta instancia de la clase.</summary>
      <returns vsli:raw="The integer key for this instance of the class.">La clave entera para esta instancia de la clase.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Value">
      <summary vsli:raw="Gets the string value for this instance of the class.">Obtiene el valor de cadena para esta instancia de la clase.</summary>
      <returns vsli:raw="The string value for this instance of the class.">El valor de cadena para esta instancia de la clase.</returns>
    </member>
    <member name="T:System.Xml.XmlDictionaryWriter">
      <summary vsli:raw="Represents an abstract class that Windows Communication Foundation (WCF) derives from &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; to do serialization and deserialization.">Representa una clase abstracta de la que Windows Communication Foundation (WCF) se deriva <see cref="T:System.Xml.XmlWriter" /> para hacer serialización y deserialización.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes WCF binary XML format.">Crea una instancia de <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe el formato XML binario WCF.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Secuencia en la que se va a escribir.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Instancia de <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream,System.Xml.IXmlDictionary)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes WCF binary XML format.">Crea una instancia de <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe el formato XML binario WCF.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Secuencia en la que se va a escribir.</param>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use as the shared dictionary.">
        <see cref="T:System.Xml.XmlDictionary" /> que se va a utilizar como diccionario compartido.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Instancia de <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlBinaryWriterSession)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes WCF binary XML format.">Crea una instancia de <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe el formato XML binario WCF.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Secuencia en la que se va a escribir.</param>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use as the shared dictionary.">
        <see cref="T:System.Xml.XmlDictionary" /> que se va a utilizar como diccionario compartido.</param>
      <param name="session" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlBinaryWriterSession&quot; /&gt; to use.">Objeto <see cref="T:System.Xml.XmlBinaryWriterSession" /> que se va a usar.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Instancia de <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlBinaryWriterSession,System.Boolean)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes WCF binary XML format.">Crea una instancia de <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe el formato XML binario WCF.</summary>
      <param name="stream" vsli:raw="The stream from which to read.">Secuencia a partir de la cual se lee.</param>
      <param name="dictionary" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionary&quot; /&gt; to use as the shared dictionary.">
        <see cref="T:System.Xml.XmlDictionary" /> que se va a utilizar como diccionario compartido.</param>
      <param name="session" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlBinaryWriterSession&quot; /&gt; to use.">Objeto <see cref="T:System.Xml.XmlBinaryWriterSession" /> que se va a usar.</param>
      <param name="ownsStream" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the stream is closed by the writer when done; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Si es <see langword="true" /> para indicar que el sistema de escritura cerrará el flujo cuando haya terminado; de lo contrario, <see langword="false" />.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Instancia de <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateDictionaryWriter(System.Xml.XmlWriter)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; from an existing &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Crea una instancia de <see cref="T:System.Xml.XmlDictionaryWriter" /> a partir de un <see cref="T:System.Xml.XmlWriter" /> existente.</summary>
      <param name="writer" vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Instancia de <see cref="T:System.Xml.XmlWriter" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;writer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="writer" /> es <see langword="null" />.</exception>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Instancia de <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateMtomWriter(System.IO.Stream,System.Text.Encoding,System.Int32,System.String)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes XML in the MTOM format.">Crea una instancia de la clase <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe XML en formato MTOM.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Secuencia en la que se va a escribir.</param>
      <param name="encoding" vsli:raw="The character encoding of the stream.">La codificación de caracteres de la secuencia.</param>
      <param name="maxSizeInBytes" vsli:raw="The maximum number of bytes that are buffered in the writer.">El número máximo de bytes que están almacenados en búfer en el sistema de escritura.</param>
      <param name="startInfo" vsli:raw="An attribute in the ContentType SOAP header.">Un atributo en el encabezado SOAP de ContentType.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Instancia de <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateMtomWriter(System.IO.Stream,System.Text.Encoding,System.Int32,System.String,System.String,System.String,System.Boolean,System.Boolean)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes XML in the MTOM format.">Crea una instancia de la clase <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe XML en formato MTOM.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Secuencia en la que se va a escribir.</param>
      <param name="encoding" vsli:raw="The character encoding of the stream.">La codificación de caracteres de la secuencia.</param>
      <param name="maxSizeInBytes" vsli:raw="The maximum number of bytes that are buffered in the writer.">El número máximo de bytes que están almacenados en búfer en el sistema de escritura.</param>
      <param name="startInfo" vsli:raw="The content-type of the MIME part that contains the Infoset.">El tipo de contenido de la parte de MIME que contiene Infoset.</param>
      <param name="boundary" vsli:raw="The MIME boundary in the message.">El límite de MIME en el mensaje.</param>
      <param name="startUri" vsli:raw="The content-id URI of the MIME part that contains the Infoset.">El ID de contenido URI de la parte MIME que contiene Infoset.</param>
      <param name="writeMessageHeaders" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to write message headers.">
        <see langword="true" /> para escribir encabezados del mensaje.</param>
      <param name="ownsStream" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the stream is closed by the writer when done; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Si es <see langword="true" /> para indicar que el sistema de escritura cerrará el flujo cuando haya terminado; de lo contrario, <see langword="false" />.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Instancia de <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateTextWriter(System.IO.Stream)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes text XML.">Crea una instancia de <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe texto XML.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Secuencia en la que se va a escribir.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Instancia de <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateTextWriter(System.IO.Stream,System.Text.Encoding)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes text XML.">Crea una instancia de <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe texto XML.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Secuencia en la que se va a escribir.</param>
      <param name="encoding" vsli:raw="The character encoding of the output.">La codificación de caracteres del resultado.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Instancia de <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateTextWriter(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary vsli:raw="Creates an instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes text XML.">Crea una instancia de <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe texto XML.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Secuencia en la que se va a escribir.</param>
      <param name="encoding" vsli:raw="The character encoding of the stream.">La codificación de caracteres de la secuencia.</param>
      <param name="ownsStream" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the stream is closed by the writer when done; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Si es <see langword="true" /> para indicar que el sistema de escritura cerrará el flujo cuando haya terminado; de lo contrario, <see langword="false" />.</param>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Instancia de <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.EndCanonicalization">
      <summary vsli:raw="When implemented by a derived class, it stops the canonicalization started by the matching &lt;see cref=&quot;M:System.Xml.XmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])&quot; /&gt; call.">Cuando lo implementa una clase derivada, detiene la colocación en forma canónica iniciada por la llamada al método <see cref="M:System.Xml.XmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])" /> coincidente.</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="Method is not implemented yet.">Este método aún no se ha implementado.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])">
      <summary vsli:raw="When implemented by a derived class, it starts the canonicalization.">Cuando se implementa mediante una clase derivada, inicia la canonización.</summary>
      <param name="stream" vsli:raw="The stream to write to.">Secuencia en la que se va a escribir.</param>
      <param name="includeComments" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to include comments; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para incluir comentarios; en caso contrario, <see langword="false" />.</param>
      <param name="inclusivePrefixes" vsli:raw="The prefixes to be included.">Los prefijos que se van a incluir.</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="Method is not implemented yet.">Este método aún no se ha implementado.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Boolean[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; array.">Escribe los nodos de una matriz <see cref="T:System.Boolean" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">El prefijo del espacio de nombres.</param>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array" vsli:raw="The array that contains the data.">La matriz que contiene los datos.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Índice inicial de la matriz.</param>
      <param name="count" vsli:raw="The number of values to write from the array.">Número de valores para escribir desde la matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.DateTime[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; array.">Escribe los nodos de una matriz <see cref="T:System.DateTime" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">El prefijo del espacio de nombres.</param>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">La matriz que contiene los nodos.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Índice inicial de la matriz.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">El número de nodos para recibir de la matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Decimal[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; array.">Escribe los nodos de una matriz <see cref="T:System.Decimal" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">El prefijo del espacio de nombres.</param>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">La matriz que contiene los nodos.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Índice inicial de la matriz.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">El número de nodos para recibir de la matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Double[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Double&quot; /&gt; array.">Escribe los nodos de una matriz <see cref="T:System.Double" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">El prefijo del espacio de nombres.</param>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">La matriz que contiene los nodos.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Índice inicial de la matriz.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">El número de nodos para recibir de la matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Guid[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Guid&quot; /&gt; array.">Escribe los nodos de una matriz <see cref="T:System.Guid" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">El prefijo del espacio de nombres.</param>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">La matriz que contiene los nodos.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Índice inicial de la matriz.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">El número de nodos para recibir de la matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int16[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Int16&quot; /&gt; array.">Escribe los nodos de una matriz <see cref="T:System.Int16" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">El prefijo del espacio de nombres.</param>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">La matriz que contiene los nodos.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Índice inicial de la matriz.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">El número de nodos para recibir de la matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int32[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Int32&quot; /&gt; array.">Escribe los nodos de una matriz <see cref="T:System.Int32" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">El prefijo del espacio de nombres.</param>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">La matriz que contiene los nodos.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Índice inicial de la matriz.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">El número de nodos para recibir de la matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int64[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Int64&quot; /&gt; array.">Escribe los nodos de una matriz <see cref="T:System.Int64" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">El prefijo del espacio de nombres.</param>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">La matriz que contiene los nodos.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Índice inicial de la matriz.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">El número de nodos para recibir de la matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Single[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Single&quot; /&gt; array.">Escribe los nodos de una matriz <see cref="T:System.Single" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">El prefijo del espacio de nombres.</param>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">La matriz que contiene los nodos.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Índice inicial de la matriz.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">El número de nodos para recibir de la matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.TimeSpan[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; array.">Escribe los nodos de una matriz <see cref="T:System.TimeSpan" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">El prefijo del espacio de nombres.</param>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">La matriz que contiene los nodos.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Índice inicial de la matriz.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">El número de nodos para recibir de la matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Boolean[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Boolean&quot; /&gt; array.">Escribe los nodos de una matriz <see cref="T:System.Boolean" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">El prefijo del espacio de nombres.</param>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">La matriz que contiene los nodos.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Índice inicial de la matriz.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">El número de nodos para recibir de la matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.DateTime[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; array.">Escribe los nodos de una matriz <see cref="T:System.DateTime" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">El prefijo del espacio de nombres.</param>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">La matriz que contiene los nodos.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Índice inicial de la matriz.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">El número de nodos para recibir de la matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Decimal[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Decimal&quot; /&gt; array.">Escribe los nodos de una matriz <see cref="T:System.Decimal" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">El prefijo del espacio de nombres.</param>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">La matriz que contiene los nodos.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Índice inicial de la matriz.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">El número de nodos para recibir de la matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Double[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Double&quot; /&gt; array.">Escribe los nodos de una matriz <see cref="T:System.Double" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">El prefijo del espacio de nombres.</param>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">La matriz que contiene los nodos.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Índice inicial de la matriz.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">El número de nodos para recibir de la matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Guid[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Guid&quot; /&gt; array.">Escribe los nodos de una matriz <see cref="T:System.Guid" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">El prefijo del espacio de nombres.</param>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">La matriz que contiene los nodos.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Índice inicial de la matriz.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">El número de nodos para recibir de la matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int16[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Int16&quot; /&gt; array.">Escribe los nodos de una matriz <see cref="T:System.Int16" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">El prefijo del espacio de nombres.</param>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">La matriz que contiene los nodos.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Índice inicial de la matriz.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">El número de nodos para recibir de la matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int32[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Int32&quot; /&gt; array.">Escribe los nodos de una matriz <see cref="T:System.Int32" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">El prefijo del espacio de nombres.</param>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">La matriz que contiene los nodos.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Índice inicial de la matriz.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">El número de nodos para recibir de la matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int64[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Int64&quot; /&gt; array.">Escribe los nodos de una matriz <see cref="T:System.Int64" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">El prefijo del espacio de nombres.</param>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">La matriz que contiene los nodos.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Índice inicial de la matriz.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">El número de nodos para recibir de la matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Single[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.Single&quot; /&gt; array.">Escribe los nodos de una matriz <see cref="T:System.Single" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">El prefijo del espacio de nombres.</param>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">La matriz que contiene los nodos.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Índice inicial de la matriz.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">El número de nodos para recibir de la matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.TimeSpan[],System.Int32,System.Int32)">
      <summary vsli:raw="Writes nodes from a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; array.">Escribe los nodos de una matriz <see cref="T:System.TimeSpan" />.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">El prefijo del espacio de nombres.</param>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array" vsli:raw="The array that contains the nodes.">La matriz que contiene los nodos.</param>
      <param name="offset" vsli:raw="The starting index in the array.">Índice inicial de la matriz.</param>
      <param name="count" vsli:raw="The number of nodes to get from the array.">El número de nodos para recibir de la matriz.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;count&quot; /&gt; is &amp;lt; 0 or &amp;gt; &lt;paramref name=&quot;array&quot; /&gt; length minus &lt;paramref name=&quot;offset&quot; /&gt;.">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteAttributeString(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary vsli:raw="Writes an attribute qualified name and value.">Escribe un nombre completo de atributo y valor.</summary>
      <param name="prefix" vsli:raw="The prefix of the attribute.">Prefijo del atributo.</param>
      <param name="localName" vsli:raw="The local name of the attribute.">Nombre local del atributo.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the attribute.">URI de espacio de nombres del atributo.</param>
      <param name="value" vsli:raw="The attribute.">El atributo.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteAttributeString(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary vsli:raw="Writes an attribute qualified name and value.">Escribe un nombre completo de atributo y valor.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">Nombre local del atributo.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the attribute.">URI de espacio de nombres del atributo.</param>
      <param name="value" vsli:raw="The attribute.">El atributo.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
      <summary vsli:raw="Asynchronously encodes the specified binary bytes as Base64 and writes out the resulting text.">Codifica asincrónicamente los bytes binarios especificados en Base64 y escribe el texto resultante.</summary>
      <param name="buffer" vsli:raw="Byte array to encode.">Matriz de bytes que se va a codificar.</param>
      <param name="index" vsli:raw="The position in the buffer indicating the start of the bytes to write.">Posición en el búfer que indica el inicio de los bytes que se van a escribir.</param>
      <param name="count" vsli:raw="The number of bytes to write.">Número de bytes que se van a escribir.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Se llamó un método <see cref="T:System.Xml.XmlDictionaryWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.

o bien

Se llamó un método asincrónico de <see cref="T:System.Xml.XmlDictionaryWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteBase64&quot; /&gt; operation.">Tarea que representa la operación <see langword="WriteBase64" /> asincrónica.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteElementString(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary vsli:raw="Writes an element with a text content.">Escribe un elemento con un contenido de texto.</summary>
      <param name="prefix" vsli:raw="The prefix of the element.">Prefijo del elemento.</param>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <param name="value" vsli:raw="The element content.">El contenido del elemento.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteElementString(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary vsli:raw="Writes an element with a text content.">Escribe un elemento con un contenido de texto.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <param name="value" vsli:raw="The element content.">El contenido del elemento.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteNode(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary vsli:raw="Writes the current XML node from an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">Escribe el nodo XML actual de <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryReader" />.</param>
      <param name="defattr" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to copy the default attributes from the &lt;see langword=&quot;XmlReader&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para copiar los atributos predeterminados de <see langword="XmlReader" />; en caso contrario, es <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;reader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="reader" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
      <summary vsli:raw="Writes the current XML node from an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">Escribe el nodo XML actual de <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;.">
        <see cref="T:System.Xml.XmlReader" />.</param>
      <param name="defattr" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to copy the default attributes from the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> para copiar los atributos predeterminados de <see cref="T:System.Xml.XmlReader" />; en caso contrario, es <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;reader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="reader" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteQualifiedName(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes out the namespace-qualified name. This method looks up the prefix that is in scope for the given namespace.">Escribe el nombre completo del espacio de nombres. Este método busca un prefijo que está en el ámbito del espacio de nombres especificado.</summary>
      <param name="localName" vsli:raw="The local name of the qualified name.">El nombre local del nombre calificado.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the qualified name.">El espacio de nombres URI del nombre calificado.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;localName&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="localName" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartAttribute(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes the start of an attribute with the specified prefix, local name, and namespace URI.">Escribe el inicio de un atributo con el URI de espacio de nombres, el prefijo y el nombre local especificados.</summary>
      <param name="prefix" vsli:raw="The namespace prefix.">El prefijo del espacio de nombres.</param>
      <param name="localName" vsli:raw="The local name of the attribute.">Nombre local del atributo.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the attribute.">URI de espacio de nombres del atributo.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes the start of an attribute with the specified local name, and namespace URI.">Escribe el inicio de un atributo con el URI de espacio de nombres y el nombre local especificados.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">Nombre local del atributo.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the attribute.">URI de espacio de nombres del atributo.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartElement(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes the specified start tag and associates it with the given namespace and prefix.">Escribe la etiqueta de apertura especificada y la asocia al espacio de nombres y al prefijo especificados.</summary>
      <param name="prefix" vsli:raw="The prefix of the element.">Prefijo del elemento.</param>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The writer is closed.">El sistema de escritura está cerrado.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes the specified start tag and associates it with the given namespace.">Escribe la etiqueta de apertura especificada y la asocia al espacio de nombres especificado.</summary>
      <param name="localName" vsli:raw="The local name of the element.">Nombre local del elemento.</param>
      <param name="namespaceUri" vsli:raw="The namespace URI of the element.">Identificador URI de espacio de nombres del elemento.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The writer is closed.">El sistema de escritura está cerrado.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteString(System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes the given text content.">Escribe el contenido de texto especificado.</summary>
      <param name="value" vsli:raw="The text to write.">Texto que se va a escribir.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteTextNode(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary vsli:raw="Writes the text node that an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; is currently positioned on.">Escribe el nodo de texto en el que se coloca <see cref="T:System.Xml.XmlDictionaryReader" /> actualmente.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; to get the text value from.">
        <see cref="T:System.Xml.XmlDictionaryReader" /> del que obtener el valor de texto.</param>
      <param name="isAttribute" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to indicate that the reader is positioned on an attribute value or element content; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> para indicar que el lector se coloca en un valor de atributo o contenido de elemento; de lo contrario <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Guid)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.Guid&quot; /&gt; value.">Escribe un valor <see cref="T:System.Guid" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Guid&quot; /&gt; value to write.">Valor <see cref="T:System.Guid" /> que se va a escribir.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.TimeSpan)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value.">Escribe un valor <see cref="T:System.TimeSpan" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; value to write.">Valor <see cref="T:System.TimeSpan" /> que se va a escribir.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.IStreamProvider)">
      <summary vsli:raw="Writes a value from an &lt;see cref=&quot;T:System.Xml.IStreamProvider&quot; /&gt;.">Escribe un valor de un <see cref="T:System.Xml.IStreamProvider" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Xml.IStreamProvider&quot; /&gt; value to write.">Valor <see cref="T:System.Xml.IStreamProvider" /> que se va a escribir.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; returns a &lt;see langword=&quot;null&quot; /&gt; stream object.">
        <paramref name="value" /> devuelve un objeto de secuencia <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;">Se llamó un método <see cref="T:System.Xml.XmlDictionaryWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.UniqueId)">
      <summary vsli:raw="Writes a Unique Id value.">Escribe un valor de identificador único.</summary>
      <param name="value" vsli:raw="The Unique Id value to write.">El valor de identificador único que se escribirá.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes a &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; value.">Escribe un valor <see cref="T:System.Xml.XmlDictionaryString" />.</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; value.">Valor de <see cref="T:System.Xml.XmlDictionaryString" />.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValueAsync(System.Xml.IStreamProvider)">
      <summary vsli:raw="Asynchronously writes a value from an &lt;see cref=&quot;T:System.Xml.IStreamProvider&quot; /&gt;.">De forma asincrónica escribe un valor de un <see cref="T:System.Xml.IStreamProvider" /> .</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Xml.IStreamProvider&quot; /&gt; value to write.">Valor <see cref="T:System.Xml.IStreamProvider" /> que se va a escribir.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; method was called before a previous asynchronous operation finished. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;An asynchronous operation is already in progress.&quot;&#xA;&#xA;-or-&#xA;&#xA;An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; asynchronous method was called without setting the &lt;see cref=&quot;P:System.Xml.XmlWriterSettings.Async&quot; /&gt; flag to &lt;see langword=&quot;true&quot; /&gt;. In this case, &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; is thrown with the message &quot;Set XmlWriterSettings.Async to true if you want to use Async Methods.&quot;">Se llamó un método <see cref="T:System.Xml.XmlDictionaryWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.

o bien

Se llamó un método asincrónico de <see cref="T:System.Xml.XmlDictionaryWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
      <returns vsli:raw="The task that represents the asynchronous &lt;see langword=&quot;WriteValue&quot; /&gt; operation.">Tarea que representa la operación <see langword="WriteValue" /> asincrónica.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlAttribute(System.String,System.String)">
      <summary vsli:raw="Writes a standard XML attribute in the current node.">Escribe un atributo XML estándar en el nodo vigente.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">Nombre local del atributo.</param>
      <param name="value" vsli:raw="The value of the attribute.">El valor del atributo.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes an XML attribute in the current node.">Escribe un atributo XML en el nodo actual.</summary>
      <param name="localName" vsli:raw="The local name of the attribute.">Nombre local del atributo.</param>
      <param name="value" vsli:raw="The value of the attribute.">El valor del atributo.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlnsAttribute(System.String,System.String)">
      <summary vsli:raw="Writes a namespace declaration attribute.">Escribe un atributo de declaración de espacio de nombres.</summary>
      <param name="prefix" vsli:raw="The prefix that is bound to the given namespace.">El prefijo que está enlazado al espacio de nombres especificado.</param>
      <param name="namespaceUri" vsli:raw="The namespace to which the prefix is bound.">El espacio de nombres al que está enlazado el prefijo.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;namespaceUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="namespaceUri" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlnsAttribute(System.String,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Writes a namespace declaration attribute.">Escribe un atributo de declaración de espacio de nombres.</summary>
      <param name="prefix" vsli:raw="The prefix that is bound to the given namespace.">El prefijo que está enlazado al espacio de nombres especificado.</param>
      <param name="namespaceUri" vsli:raw="The namespace to which the prefix is bound.">El espacio de nombres al que está enlazado el prefijo.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;namespaceUri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="namespaceUri" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryWriter.CanCanonicalize">
      <summary vsli:raw="This property always returns &lt;see langword=&quot;false&quot; /&gt;. Its derived classes can override to return &lt;see langword=&quot;true&quot; /&gt; if they support canonicalization.">Esta propiedad devuelve siempre <see langword="false" />. Sus clases derivadas pueden invalidarse para devolver <see langword="true" /> si admiten la canonización.</summary>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; in all cases.">
        <see langword="false" /> en todos los casos.</returns>
    </member>
  </members>
</doc>