<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Runtime.Serialization.Xml</name>
  </assembly>
  <members>
    <member name="T:System.Runtime.Serialization.DataContractResolver">
      <summary>Proporciona un mecanismo para asignar dinámicamente los tipos entre las representaciones <see langword="xsi:type" /> durante la serialización y la deserialización.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractResolver.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.DataContractResolver" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractResolver.ResolveName(System.String,System.String,System.Type,System.Runtime.Serialization.DataContractResolver)">
      <summary>Invalide este método para asignar el nombre y el espacio de nombres <see langword="xsi:type" /> especificados a un tipo de contrato de datos durante la deserialización.</summary>
      <param name="typeName">Nombre de <see langword="xsi:type" /> que se va a asignar.</param>
      <param name="typeNamespace">Espacio de nombres de <see langword="xsi:type" /> que se va a agregar.</param>
      <param name="declaredType">Tipo declarado en el contrato de datos.</param>
      <param name="knownTypeResolver">Resolución de tipos conocidos.</param>
      <returns>Tipo al que están asignados el nombre y el espacio de nombres <see langword="xsi:type" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractResolver.TryResolveType(System.Type,System.Type,System.Runtime.Serialization.DataContractResolver,System.Xml.XmlDictionaryString@,System.Xml.XmlDictionaryString@)">
      <summary>Invalide este método para asignar un tipo de contrato de datos a un nombre y un espacio de nombres <see langword="xsi:type" /> durante la serialización.</summary>
      <param name="type">Tipo que se va a asignar.</param>
      <param name="declaredType">Tipo declarado en el contrato de datos.</param>
      <param name="knownTypeResolver">Resolución de tipos conocidos.</param>
      <param name="typeName">Nombre xsi:type.</param>
      <param name="typeNamespace">Espacio de nombres xsi:type.</param>
      <returns>Es <see langword="true" /> si la asignación se realizó correctamente; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.DataContractSerializer">
      <summary>Serializa y deserializa una instancia de un tipo en un flujo o en un documento XML utilizando un contrato de datos proporcionado. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> para serializar o deserializar un objeto del tipo especificado.</summary>
      <param name="type">Tipo de las instancias serializadas o deserializadas.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> para serializar o deserializar un objeto del tipo especificado y una colección de tipos conocidos que pueden encontrarse en el gráfico de objetos.</summary>
      <param name="type">Tipo de las instancias serializadas o deserializadas.</param>
      <param name="knownTypes">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Type" /> que contiene los tipos que pueden estar presentes en el gráfico de objetos.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Runtime.Serialization.DataContractSerializerSettings)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> para serializar o deserializar un objeto del tipo y configuración especificados.</summary>
      <param name="type">Tipo de las instancias que se serializan o se deserializan.</param>
      <param name="settings">Configuración del serializador</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> para serializar o deserializar un objeto del tipo especificado utilizando el elemento raíz y el espacio de nombres XML proporcionados.</summary>
      <param name="type">Tipo de las instancias serializadas o deserializadas.</param>
      <param name="rootName">El nombre del elemento XML que incluye el contenido para serializar o deserializar.</param>
      <param name="rootNamespace">El espacio de nombres del elemento XML que incluye el contenido para serializar o deserializar.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> para serializar o deserializar un objeto del tipo especificado. Este método también especifica el elemento raíz y el espacio de nombres XML en dos parámetros de cadena así como una lista de tipos conocidos que pueden encontrarse en el gráfico de objetos.</summary>
      <param name="type">Tipo de las instancias serializadas o deserializadas.</param>
      <param name="rootName">El nombre del elemento raíz del contenido.</param>
      <param name="rootNamespace">El espacio de nombres del elemento raíz.</param>
      <param name="knownTypes">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Type" /> que contiene los tipos que pueden estar presentes en el gráfico de objetos.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> para serializar o deserializar un objeto del tipo especificado utilizando el elemento raíz XML y el espacio de nombres especificados mediante los parámetros del tipo <see cref="T:System.Xml.XmlDictionaryString" />.</summary>
      <param name="type">Tipo de las instancias serializadas o deserializadas.</param>
      <param name="rootName">
        <see cref="T:System.Xml.XmlDictionaryString" /> que contiene el nombre del elemento raíz del contenido.</param>
      <param name="rootNamespace">
        <see cref="T:System.Xml.XmlDictionaryString" /> que contiene el espacio de nombres del elemento raíz.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> para serializar o deserializar un objeto del tipo especificado. Este método también especifica el elemento raíz y el espacio de nombres XML en dos parámetros <see cref="T:System.Xml.XmlDictionaryString" /> así como una lista de tipos conocidos que pueden encontrarse en el gráfico de objetos.</summary>
      <param name="type">Tipo de las instancias serializadas o deserializadas.</param>
      <param name="rootName">
        <see cref="T:System.Xml.XmlDictionaryString" /> que contiene el nombre del elemento raíz del contenido.</param>
      <param name="rootNamespace">
        <see cref="T:System.Xml.XmlDictionaryString" /> que contiene el espacio de nombres del elemento raíz.</param>
      <param name="knownTypes">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Type" /> que contiene los tipos conocidos que pueden encontrarse en el gráfico de objetos.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
      <summary>Determina si <see cref="T:System.Xml.XmlDictionaryReader" /> se coloca en un objeto que se puede deserializar.</summary>
      <param name="reader">
        <see cref="T:System.Xml.XmlDictionaryReader" /> que se usa para leer la secuencia XML.</param>
      <returns>Es <see langword="true" /> si el lector está situado en el elemento de inicio de la secuencia que se leerá; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlReader)">
      <summary>Determina si <see cref="T:System.Xml.XmlReader" /> se coloca en un objeto que se puede deserializar.</summary>
      <param name="reader">
        <see cref="T:System.Xml.XmlReader" /> utilizado para leer la secuencia XML.</param>
      <returns>Es <see langword="true" /> si el lector está situado en el elemento de inicio de la secuencia que se leerá; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary>Lee la secuencia XML con <see cref="T:System.Xml.XmlDictionaryReader" /> y devuelve el objeto deserializado y también especifica si se realiza una comprobación para comprobar el nombre de objeto antes de leer su valor.</summary>
      <param name="reader">
        <see cref="T:System.Xml.XmlDictionaryReader" /> utilizado para leer la secuencia XML.</param>
      <param name="verifyObjectName">
        <see langword="true" /> para comprobar si el nombre del objeto corresponde al valor de nombre de raíz proporcionado en el constructor; de lo contrario, <see langword="false" />.</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException">El parámetro <paramref name="verifyObjectName" /> está establecido en <see langword="true" />, y el nombre y el espacio de nombres del elemento no corresponden a los valores establecidos en el constructor.</exception>
      <returns>Objeto deserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean,System.Runtime.Serialization.DataContractResolver)">
      <summary>Lee un documento o secuencia del documento XML y devuelve el objeto deserializado.  El método incluye un parámetro para especificar si se comprueba el nombre de objeto se valida y una resolución para asignar las declaraciones <see langword="xsi:type" /> en tiempo de ejecución.</summary>
      <param name="reader">Lector XML usado para leer el contenido.</param>
      <param name="verifyObjectName">
        <see langword="true" /> para comprobar el nombre de objeto; en caso contrario, <see langword="false" />.</param>
      <param name="dataContractResolver">Implementación de <see cref="T:System.Runtime.Serialization.DataContractResolver" /> para asignar las declaraciones <see langword="xsi:type" /> a los tipos de contrato de datos.</param>
      <returns>Objeto deserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader)">
      <summary>Lee el flujo XML con <see cref="T:System.Xml.XmlReader" /> y devuelve el objeto deserializado.</summary>
      <param name="reader">
        <see cref="T:System.Xml.XmlReader" /> utilizado para leer la secuencia XML.</param>
      <returns>Objeto deserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
      <summary>Lee la secuencia XML con <see cref="T:System.Xml.XmlReader" /> y devuelve el objeto deserializado y también especifica si se realiza una comprobación para comprobar el nombre de objeto antes de leer su valor.</summary>
      <param name="reader">
        <see cref="T:System.Xml.XmlReader" /> utilizado para leer la secuencia XML.</param>
      <param name="verifyObjectName">
        <see langword="true" /> para comprobar si el nombre del objeto corresponde al valor de nombre de raíz proporcionado en el constructor; de lo contrario, <see langword="false" />.</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException">El parámetro <paramref name="verifyObjectName" /> está establecido en <see langword="true" />, y el nombre y el espacio de nombres del elemento no corresponden a los valores establecidos en el constructor.</exception>
      <returns>Objeto deserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
      <summary>Escribe el elemento XML de cierre mediante <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> que se usa para escribir la secuencia.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">El tipo que se está serializando no se ajusta a las reglas del contrato de datos. Por ejemplo, el atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> no se ha aplicado al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Hay un problema con la instancia que se está escribiendo.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlWriter)">
      <summary>Escribe el elemento XML de cierre mediante <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" /> que se usa para escribir la secuencia.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">El tipo que se está serializando no se ajusta a las reglas del contrato de datos. Por ejemplo, el atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> no se ha aplicado al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Hay un problema con la instancia que se está escribiendo.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object,System.Runtime.Serialization.DataContractResolver)">
      <summary>Escribe todos los datos de objeto (elemento XML inicial, contenido y elemento envolvente) en un documento o secuencia XML usando el XmlDictionaryWriter especificado. El método incluye una resolución para asignar las declaraciones <see langword="xsi:type" /> en tiempo de ejecución.</summary>
      <param name="writer">Escritor XmlDictionaryWriter que se usa para escribir el contenido en el documento o la secuencia XML.</param>
      <param name="graph">El objeto que contiene el contenido que se va a escribir.</param>
      <param name="dataContractResolver">Implementación de <see cref="T:System.Runtime.Serialization.DataContractResolver" /> utilizada para asignar las declaraciones <see langword="xsi:type" /> a los contratos de datos conocidos.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
      <summary>Escribe todos los datos de objeto (elemento XML inicial, contenido y elemento de cierre) en un documento o secuencia XML con <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" /> que se usa para escribir el documento o la secuencia XML.</param>
      <param name="graph">El objeto que contiene los datos que se van a escribir en la secuencia.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">El tipo que se está serializando no se ajusta a las reglas del contrato de datos. Por ejemplo, el atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> no se ha aplicado al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Hay un problema con la instancia que se está escribiendo.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>Escribe el contenido XML mediante <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> que se usa para escribir la secuencia.</param>
      <param name="graph">El objeto que se va a escribir en la secuencia.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">El tipo que se está serializando no se ajusta a las reglas del contrato de datos. Por ejemplo, el atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> no se ha aplicado al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Hay un problema con la instancia que se está escribiendo.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
      <summary>Escribe el contenido XML mediante <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" /> que se usa para escribir la secuencia.</param>
      <param name="graph">El objeto que se va a escribir en la secuencia.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">El tipo que se está serializando no se ajusta a las reglas del contrato de datos. Por ejemplo, el atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> no se ha aplicado al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Hay un problema con la instancia que se está escribiendo.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>Escribe el elemento XML de apertura mediante <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> que se usa para escribir el elemento de inicio XML.</param>
      <param name="graph">Objeto que se va a escribir.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
      <summary>Escribe el elemento XML de apertura mediante <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" /> que se usa para escribir el elemento de inicio XML.</param>
      <param name="graph">Objeto que se va a escribir.</param>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.DataContractResolver">
      <summary>Obtiene el componente utilizado para asignar dinámicamente las declaraciones <see langword="xsi:type" /> a los tipos de contrato conocidos.</summary>
      <returns>Una implementación de la clase <see cref="T:System.Runtime.Serialization.DataContractResolver" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject">
      <summary>Obtiene un valor que especifica si omitir datos proporcionados por una extensión de la clase cuando la clase se serializa o deserializa.</summary>
      <returns>
        <see langword="true" /> para omitir los datos de la extensión; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.KnownTypes">
      <summary>Obtiene una colección de tipos que se pueden encontrarse en el gráfico de objetos serializado utilizando esta instancia de <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> que contiene los tipos esperados pasados como tipos conocidos por el constructor <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph">
      <summary>Obtiene el número máximo de elementos de un gráfico de objetos que se van a serializar o deserializar.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">El número de elementos supera el valor máximo.</exception>
      <returns>El número máximo de elementos para serializar o deserializar. De manera predeterminada, es <see cref="F:System.Int32.MaxValue" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences">
      <summary>Obtiene un valor que especifica si utilizar construcciones XML no estándar para conservar los datos de referencia al objeto.</summary>
      <returns>
        <see langword="true" /> para mantener las referencias; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.SerializeReadOnlyTypes">
      <summary>Obtiene un valor que especifica si los tipos de solo lectura se serializan.</summary>
      <returns>
        <see langword="true" /> si los tipos de solo lectura se serializan; <see langword="false" /> si todos los tipos se serializan.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.DataContractSerializerExtensions">
      <summary>Extiende la clase <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> mediante la proporción de métodos para establecer y obtener <see cref="T:System.Runtime.Serialization.ISerializationSurrogateProvider" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializerExtensions.GetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer)">
      <summary>Devuelve el proveedor de serialización suplente para este serializador.</summary>
      <param name="serializer">Serializador que se está usando como suplente.</param>
      <returns>Serializador suplente.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializerExtensions.SetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer,System.Runtime.Serialization.ISerializationSurrogateProvider)">
      <summary>Especifica un proveedor de serialización suplente para este elemento <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</summary>
      <param name="serializer">Serializador que se está usando como suplente.</param>
      <param name="provider">Proveedor de serialización suplente.</param>
    </member>
    <member name="T:System.Runtime.Serialization.DataContractSerializerSettings">
      <summary>Especifica la configuración del serializador de contrato de datos.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializerSettings.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.DataContractSerializerSettings" />.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.DataContractResolver">
      <summary>Obtiene o establece el componente utilizado para asignar dinámicamente las declaraciones xsi:type a los tipos de contrato conocidos.</summary>
      <returns>Componente usado para asignar dinámicamente las declaraciones xsi:type a los tipos de contrato conocidos.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.IgnoreExtensionDataObject">
      <summary>Obtiene o establece un valor que especifica si se deben omitir los datos proporcionados por una extensión de la clase cuando la clase se serializa o deserializa.</summary>
      <returns>
        <see langword="true" /> si se deben omitir los datos proporcionados por una extensión de la clase cuando la clase se serializa o deserializa; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.KnownTypes">
      <summary>Obtiene o establece una colección de tipos que pueden encontrarse en el gráfico de objetos serializado utilizando esta instancia de DataContractSerializerSettings.</summary>
      <returns>Colección de tipos que pueden encontrarse en el gráfico de objetos serializado utilizando esta instancia de DataContractSerializerSettings.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.MaxItemsInObjectGraph">
      <summary>Obtiene o define el número máximo de elementos en un gráfico de objetos que se vaya a serializar o deserializar.</summary>
      <returns>Número máximo de elementos de un gráfico de objetos que se van a serializar o deserializar.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.PreserveObjectReferences">
      <summary>Obtiene o establece un valor que especifica si utilizar construcciones XML no estándar para conservar los datos de referencia al objeto.</summary>
      <returns>
        <see langword="true" /> para utilizar construcciones XML no estándar para conservar los datos de referencia a objeto; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.RootName">
      <summary>Obtiene o establece el nombre raíz del objeto seleccionado.</summary>
      <returns>El nombre raíz del objeto seleccionado.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.RootNamespace">
      <summary>Obtiene o establece el espacio de nombres de la raíz del objeto especificado.</summary>
      <returns>Espacio de nombres para el objeto especificado.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.SerializeReadOnlyTypes">
      <summary>Obtiene o establece un valor que especifica si se van a serializar tipos de solo lectura.</summary>
      <returns>
        <see langword="true" /> para serializar tipos de solo lectura; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.ExportOptions">
      <summary>Representa las opciones que se pueden establecer para <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ExportOptions.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.ExportOptions" />.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.ExportOptions.KnownTypes">
      <summary>Obtiene la colección de tipos que se pueden encontrar durante la serialización o la deserialización.</summary>
      <returns>
        <see langword="KnownTypes" /> que contiene tipos que se pueden encontrar durante la serialización o la deserialización. Las representaciones del esquema XML se exportan para todos los tipos especificados en esta colección por <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" />.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.ExtensionDataObject">
      <summary>Almacena los datos de un contrato de datos con control de versiones que se ha ampliado agregando nuevos miembros.</summary>
    </member>
    <member name="T:System.Runtime.Serialization.IExtensibleDataObject">
      <summary>Proporciona una estructura de datos para almacenar datos adicionales detectados por <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> durante la deserialización de un tipo marcada con el atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.IExtensibleDataObject.ExtensionData">
      <summary>Obtiene o establece la estructura que contiene datos adicionales.</summary>
      <returns>
        <see cref="T:System.Runtime.Serialization.ExtensionDataObject" /> que contiene datos que no se reconocen como pertenecientes al contrato de datos.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.XmlObjectSerializer">
      <summary>Proporciona la clase base usada para serializar objetos como secuencias XML o documentos. Esta clase es abstracta.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
      <summary>Obtiene un valor que especifica si <see cref="T:System.Xml.XmlDictionaryReader" /> se coloca sobre un elemento XML que se puede leer.</summary>
      <param name="reader">Un <see cref="T:System.Xml.XmlDictionaryReader" /> que se usa para leer el documento o la secuencia XML.</param>
      <returns>
        <see langword="true" /> si el lector puede leer los datos; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlReader)">
      <summary>Obtiene un valor que especifica si <see cref="T:System.Xml.XmlReader" /> se coloca sobre un elemento XML que se puede leer.</summary>
      <param name="reader">Un <see cref="T:System.Xml.XmlReader" /> que se usa para leer el documento o la secuencia XML.</param>
      <returns>
        <see langword="true" /> si el lector está colocado sobre el elemento inicial; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.IO.Stream)">
      <summary>Lee la secuencia o el documento XML con <see cref="T:System.IO.Stream" /> y devuelve el objeto deserializado.</summary>
      <param name="stream">Un <see cref="T:System.IO.Stream" /> que se usa para leer el documento o la secuencia XML.</param>
      <returns>Objeto deserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader)">
      <summary>Lee el documento o la secuencia XML con <see cref="T:System.Xml.XmlDictionaryReader" /> y devuelve el objeto deserializado.</summary>
      <param name="reader">Un <see cref="T:System.Xml.XmlDictionaryReader" /> que se usa para leer el documento XML.</param>
      <returns>Objeto deserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary>Lee la secuencia o el documento XML con <see cref="T:System.Xml.XmlDictionaryReader" /> y devuelve el objeto deserializado; también le permite especificar si el serializador puede leer los datos antes de intentar leerlos.</summary>
      <param name="reader">Un <see cref="T:System.Xml.XmlDictionaryReader" /> que se usa para leer el documento XML.</param>
      <param name="verifyObjectName">
        <see langword="true" /> para comprobar si el nombre del elemento envolvente XML y el espacio de nombres corresponden al nombre raíz y el espacio de nombres raíz; de lo contrario, <see langword="false" /> para omitir la comprobación.</param>
      <returns>Objeto deserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader)">
      <summary>Lee el documento o la secuencia XML con <see cref="T:System.Xml.XmlReader" /> y devuelve el objeto deserializado.</summary>
      <param name="reader">Un <see cref="T:System.Xml.XmlReader" /> que se usa para leer el documento o la secuencia XML.</param>
      <returns>Objeto deserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
      <summary>Lee el documento o la secuencia XML con <see cref="T:System.Xml.XmlReader" /> y devuelve el objeto deserializado; también le permite especificar si el serializador puede leer los datos antes de intentar leerlos.</summary>
      <param name="reader">Un <see cref="T:System.Xml.XmlReader" /> que se usa para leer el documento o la secuencia XML.</param>
      <param name="verifyObjectName">
        <see langword="true" /> para comprobar si el nombre del elemento envolvente XML y el espacio de nombres corresponden al nombre raíz y el espacio de nombres raíz; <see langword="false" /> para omitir la comprobación.</param>
      <returns>Objeto deserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
      <summary>Escribe el fin de los datos de objeto como un elemento XML de cierre en el documento o la secuencia XML con <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> que se usa para escribir el documento o la secuencia XML.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">el tipo que se está serializando no se ajusta a las reglas del contrato de datos. Por ejemplo, el atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> no se ha aplicado al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">hay un problema con la instancia que se está serializando.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">se superó el número máximo de objetos para serializar. Compruebe la propiedad <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlWriter)">
      <summary>Escribe el fin de los datos de objeto como un elemento XML de cierre en el documento o la secuencia XML con <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" /> que se usa para escribir el documento o la secuencia XML.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">el tipo que se está serializando no se ajusta a las reglas del contrato de datos. Por ejemplo, el atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> no se ha aplicado al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">hay un problema con la instancia que se está serializando.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">se superó el número máximo de objetos para serializar. Compruebe la propiedad <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.IO.Stream,System.Object)">
      <summary>Escribe todo el contenido (inicio, contenido y fin) del objeto en el documento o la secuencia XML con el <see cref="T:System.IO.Stream" /> especificado.</summary>
      <param name="stream">Un <see cref="T:System.IO.Stream" /> que se usa para escribir el documento o la secuencia XML.</param>
      <param name="graph">El objeto que contiene los datos que se van a escribir en la secuencia.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">el tipo que se está serializando no se ajusta a las reglas del contrato de datos. Por ejemplo, el atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> no se ha aplicado al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">hay un problema con la instancia que se está serializando.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">se superó el número máximo de objetos para serializar. Compruebe la propiedad <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>Escribe todo el contenido (inicio, contenido y fin) del objeto en el documento o la secuencia XML con el <see cref="T:System.Xml.XmlDictionaryWriter" /> especificado.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> que se usa para escribir el contenido en el documento o la secuencia XML.</param>
      <param name="graph">El objeto que contiene el contenido que se va a escribir.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">el tipo que se está serializando no se ajusta a las reglas del contrato de datos. Por ejemplo, el atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> no se ha aplicado al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">hay un problema con la instancia que se está serializando.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">se superó el número máximo de objetos para serializar. Compruebe la propiedad <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
      <summary>Escribe todo el contenido (inicio, contenido y fin) del objeto en el documento o la secuencia XML con el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" /> que se usa para escribir el documento o la secuencia XML.</param>
      <param name="graph">El objeto que contiene el contenido que se va a escribir.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">el tipo que se está serializando no se ajusta a las reglas del contrato de datos. Por ejemplo, el atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> no se ha aplicado al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">hay un problema con la instancia que se está serializando.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">se superó el número máximo de objetos para serializar. Compruebe la propiedad <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>Escribe sólo el contenido del objeto en el documento o la secuencia XML con el <see cref="T:System.Xml.XmlDictionaryWriter" /> especificado.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> que se usa para escribir el documento o la secuencia XML.</param>
      <param name="graph">El objeto que contiene el contenido que se va a escribir.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">el tipo que se está serializando no se ajusta a las reglas del contrato de datos. Por ejemplo, el atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> no se ha aplicado al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">hay un problema con la instancia que se está serializando.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">se superó el número máximo de objetos para serializar. Compruebe la propiedad <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
      <summary>Escribe sólo el contenido del objeto en el documento o la secuencia XML con el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" /> que se usa para escribir el documento o la secuencia XML.</param>
      <param name="graph">El objeto que contiene el contenido que se va a escribir.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">el tipo que se está serializando no se ajusta a las reglas del contrato de datos. Por ejemplo, el atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> no se ha aplicado al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">hay un problema con la instancia que se está serializando.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">se superó el número máximo de objetos para serializar. Compruebe la propiedad <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>Escribe el inicio de los datos del objeto como elemento XML de apertura con el <see cref="T:System.Xml.XmlDictionaryWriter" /> especificado.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> que se usa para escribir el documento XML.</param>
      <param name="graph">El objeto que se va a serializar.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">el tipo que se está serializando no se ajusta a las reglas del contrato de datos. Por ejemplo, el atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> no se ha aplicado al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">hay un problema con la instancia que se está serializando.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">se superó el número máximo de objetos para serializar. Compruebe la propiedad <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
      <summary>Escribe el inicio de los datos del objeto como elemento XML de apertura con el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" /> que se usa para escribir el documento XML.</param>
      <param name="graph">El objeto que se va a serializar.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">el tipo que se está serializando no se ajusta a las reglas del contrato de datos. Por ejemplo, el atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> no se ha aplicado al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">hay un problema con la instancia que se está serializando.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">se superó el número máximo de objetos para serializar. Compruebe la propiedad <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.XmlSerializableServices">
      <summary>Contiene los métodos para leer y escribir XML.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XmlSerializableServices.AddDefaultSchema(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)">
      <summary>Genera un tipo de esquema predeterminado según el nombre de tipo especificado y lo agrega al conjunto de esquemas especificado.</summary>
      <param name="schemas">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" /> al que agregar el tipo de esquema generado.</param>
      <param name="typeQName">
        <see cref="T:System.Xml.XmlQualifiedName" /> que especifica el nombre de tipo al que se asignará el esquema.</param>
      <exception cref="T:System.ArgumentNullException">El argumento <paramref name="schemas" /> o <paramref name="typeQName" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlSerializableServices.ReadNodes(System.Xml.XmlReader)">
      <summary>Lee un conjunto de nodos XML del lector especificado y devuelve el resultado.</summary>
      <param name="xmlReader">
        <see cref="T:System.Xml.XmlReader" /> usado para leer.</param>
      <exception cref="T:System.ArgumentNullException">El argumento <paramref name="xmlReader" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Se encontró un nodo <see langword="null" /> durante la lectura.</exception>
      <returns>Matriz de tipo <see cref="T:System.Xml.XmlNode" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlSerializableServices.WriteNodes(System.Xml.XmlWriter,System.Xml.XmlNode[])">
      <summary>Escribe los nodos proporcionados mediante el sistema de escritura especificado.</summary>
      <param name="xmlWriter">
        <see cref="T:System.Xml.XmlWriter" /> usado para escribir.</param>
      <param name="nodes">Matriz de tipo <see cref="T:System.Xml.XmlNode" /> para escribir.</param>
      <exception cref="T:System.ArgumentNullException">El argumento <paramref name="xmlWriter" /> es <see langword="null" />.</exception>
    </member>
    <member name="T:System.Runtime.Serialization.XPathQueryGenerator">
      <summary>Cuando se da una clase que representa un contrato de datos y metadatos que representan un miembro del contrato, se produce una consulta XPath para el miembro.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XPathQueryGenerator.CreateFromDataContractSerializer(System.Type,System.Reflection.MemberInfo[],System.Text.StringBuilder,System.Xml.XmlNamespaceManager@)">
      <summary>Crea un XPath a partir de un contrato de datos mediante el tipo de datos del contrato, la matriz de elementos de metadatos, el elemento de nivel superior y los espacios de nombres especificados.</summary>
      <param name="type">Tipo que representa un contrato de datos.</param>
      <param name="pathToMember">Los metadatos, generados utilizando el método <see cref="Overload:System.Type.GetMember" /> de la clase <see cref="T:System.Type" /> que señala al miembro de datos concreto usado para generar la consulta.</param>
      <param name="rootElementXpath">El elemento de nivel superior en el xpath.</param>
      <param name="namespaces">Los espacios de nombres XML y sus prefijos situados en el contrato de datos.</param>
      <returns>
        <see cref="T:System.String" />  
  
El XPath generado a partir de los datos de miembro y tipo.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XPathQueryGenerator.CreateFromDataContractSerializer(System.Type,System.Reflection.MemberInfo[],System.Xml.XmlNamespaceManager@)">
      <summary>Crea un elemento XPath a partir de un contrato de datos con los elementos especificados (tipo de contrato de datos, matriz de elementos de metadatos y espacios de nombres).</summary>
      <param name="type">Tipo que representa un contrato de datos.</param>
      <param name="pathToMember">Los metadatos, generados utilizando el método <see cref="Overload:System.Type.GetMember" /> de la clase <see cref="T:System.Type" /> que señala al miembro de datos concreto usado para generar la consulta.</param>
      <param name="namespaces">Los espacios de nombres XML y sus prefijos situados en el contrato de datos.</param>
      <returns>
        <see cref="T:System.String" />  
  
El XPath generado a partir de los datos de miembro y tipo.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.XsdDataContractExporter">
      <summary>Permite la transformación de un conjunto de tipos de .NET Framework que se usan en contratos de datos en un archivo de esquema XML (.xsd).</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.#ctor(System.Xml.Schema.XmlSchemaSet)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> con el conjunto de esquemas especificado.</summary>
      <param name="schemas">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que contiene los esquemas que se van a exportar.</param>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Reflection.Assembly})">
      <summary>Obtiene un valor que indica si se puede exportar el conjunto de tipos de Common Language Runtime (CLR) incluidos en un conjunto de ensamblados.</summary>
      <param name="assemblies">
        <see cref="T:System.Collections.Generic.ICollection`1" /> de <see cref="T:System.Reflection.Assembly" /> que contiene los ensamblados con los tipos para exportar.</param>
      <returns>
        <see langword="true" /> si se pueden exportar los tipos; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Type})">
      <summary>Obtiene un valor que indica si se puede exportar el conjunto tipos de Common Language Runtime (CLR) incluidos en un <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <param name="types">
        <see cref="T:System.Collections.Generic.ICollection`1" /> que contiene los tipos especificados para exportar.</param>
      <returns>
        <see langword="true" /> si se pueden exportar los tipos; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Type)">
      <summary>Obtiene un valor que indica si se puede exportar el tipo de Common Language Runtime (CLR) especificado.</summary>
      <param name="type">
        <see cref="T:System.Type" /> para exportar.</param>
      <returns>
        <see langword="true" /> si se puede exportar el tipo; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Reflection.Assembly})">
      <summary>Transforma los tipos contenidos en la colección especificada de ensamblados.</summary>
      <param name="assemblies">
        <see cref="T:System.Collections.Generic.ICollection`1" /> (de <see cref="T:System.Reflection.Assembly" />) que contiene los tipos para exportar.</param>
      <exception cref="T:System.ArgumentNullException">El argumento <paramref name="assemblies" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Un <see cref="T:System.Reflection.Assembly" /> de la colección es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Type})">
      <summary>Transforma los tipos contenidos en <see cref="T:System.Collections.Generic.ICollection`1" /> pasados a este método.</summary>
      <param name="types">
        <see cref="T:System.Collections.Generic.ICollection`1" /> (de tipo <see cref="T:System.Type" />) que contiene los tipos que se van a exportar.</param>
      <exception cref="T:System.ArgumentNullException">El argumento <paramref name="types" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Un tipo de la colección es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Type)">
      <summary>Transforma el tipo .NET Framework especificado en un esquema del lenguaje de definición de esquemas XML (XSD).</summary>
      <param name="type">
        <see cref="T:System.Type" /> para transformar en un esquema XML.</param>
      <exception cref="T:System.ArgumentNullException">El argumento <paramref name="type" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.GetRootElementName(System.Type)">
      <summary>Devuelve el nombre de nivel superior y el espacio de nombres para <see cref="T:System.Type" />.</summary>
      <param name="type">
        <see cref="T:System.Type" /> que se va a consultar.</param>
      <exception cref="T:System.ArgumentNullException">El argumento <paramref name="type" /> es <see langword="null" />.</exception>
      <returns>El <see cref="T:System.Xml.XmlQualifiedName" /> que representa el nombre de nivel superior y el espacio de nombres para este <see cref="T:System.Type" />, que se escribe en la secuencia al escribir este objeto.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaType(System.Type)">
      <summary>Devuelve un tipo de esquema XML para el tipo especificado.</summary>
      <param name="type">El tipo para el que se va a devolver un esquema.</param>
      <exception cref="T:System.ArgumentNullException">El argumento <paramref name="type" /> es <see langword="null" />.</exception>
      <returns>Un <see cref="T:System.Xml.Schema.XmlSchemaType" /> que contiene el esquema XML.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName(System.Type)">
      <summary>Devuelve el nombre del contrato el espacio de nombres del contrato para el <see cref="T:System.Type" />.</summary>
      <param name="type">El <see cref="T:System.Type" /> que se exportó.</param>
      <exception cref="T:System.ArgumentNullException">El argumento <paramref name="type" /> es <see langword="null" />.</exception>
      <returns>Un <see cref="T:System.Xml.XmlQualifiedName" /> que representa el nombre del contrato del tipo y su espacio de nombres.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.XsdDataContractExporter.Options">
      <summary>Obtiene o establece un <see cref="T:System.Runtime.Serialization.ExportOptions" /> que contiene opciones que se pueden establecer para la operación de exportación.</summary>
      <returns>Un <see cref="T:System.Runtime.Serialization.ExportOptions" /> que contiene las opciones usadas para personalizar cómo se exportan los tipos a los esquemas.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.XsdDataContractExporter.Schemas">
      <summary>Obtiene la colección de esquemas XML exportados.</summary>
      <returns>Un <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que contiene los esquemas transformados del conjunto de tipos de Common Language Runtime (CLR) después de llamar al método <see cref="Overload:System.Runtime.Serialization.XsdDataContractExporter.Export" />.</returns>
    </member>
    <member name="T:System.Xml.IFragmentCapableXmlDictionaryWriter">
      <summary>Contiene propiedades y métodos que cuando son implementados por un <see cref="T:System.Xml.XmlDictionaryWriter" />, permiten el procesamiento de fragmentos XML.</summary>
    </member>
    <member name="M:System.Xml.IFragmentCapableXmlDictionaryWriter.EndFragment">
      <summary>Finaliza el procesamiento de un fragmento XML.</summary>
    </member>
    <member name="M:System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment(System.IO.Stream,System.Boolean)">
      <summary>Inicia el procesamiento de un fragmento XML.</summary>
      <param name="stream">Secuencia en la que se va a escribir.</param>
      <param name="generateSelfContainedTextFragment">Si es <see langword="true" />, se declara de nuevo cualquier espacio de nombres declarado fuera del fragmento si se utiliza dentro de él; si <see langword="false" /> no se declaran los espacios de nombres de nuevo.</param>
    </member>
    <member name="M:System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment(System.Byte[],System.Int32,System.Int32)">
      <summary>Escribe un fragmento XML en la secuencia subyacente del sistema de escritura.</summary>
      <param name="buffer">Búfer en el que se va a escribir.</param>
      <param name="offset">La posición inicial desde la que escribir <paramref name="buffer" />.</param>
      <param name="count">El número de bytes que se escribirán en el <paramref name="buffer" />.</param>
    </member>
    <member name="P:System.Xml.IFragmentCapableXmlDictionaryWriter.CanFragment">
      <summary>Obtiene un valor que indica si este <see cref="T:System.Xml.XmlDictionaryWriter" /> puede procesar fragmentos XML.</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Xml.XmlDictionaryWriter" /> puede procesar fragmentos XML; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xml.IStreamProvider">
      <summary>Representa una interfaz que se puede implementar mediante clases que proporcionan secuencias.</summary>
    </member>
    <member name="M:System.Xml.IStreamProvider.GetStream">
      <summary>Obtiene una secuencia.</summary>
      <returns>Un objeto <see cref="T:System.IO.Stream" />.</returns>
    </member>
    <member name="M:System.Xml.IStreamProvider.ReleaseStream(System.IO.Stream)">
      <summary>Libera una secuencia para la salida.</summary>
      <param name="stream">La secuencia que se libera.</param>
    </member>
    <member name="T:System.Xml.IXmlBinaryReaderInitializer">
      <summary>Proporciona métodos para reinicializar un lector binario para leer un nuevo documento.</summary>
    </member>
    <member name="M:System.Xml.IXmlBinaryReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Reinicializa el lector binario mediante el búfer de entrada determinado.</summary>
      <param name="buffer">El búfer del que se lee.</param>
      <param name="offset">Posición inicial de la que leer en <paramref name="buffer" />.</param>
      <param name="count">Número de bytes que se pueden leer de <paramref name="buffer" />.</param>
      <param name="dictionary">
        <see cref="T:System.Xml.XmlDictionary" /> que se va a utilizar.</param>
      <param name="quotas">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> que se va a aplicar.</param>
      <param name="session">
        <see cref="T:System.Xml.XmlBinaryReaderSession" /> que se va a utilizar.</param>
      <param name="onClose">Delegado al que se llamará cuando se cierre el lector.</param>
    </member>
    <member name="M:System.Xml.IXmlBinaryReaderInitializer.SetInput(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Reinicializa el lector binario mediante el flujo de entrada determinado.</summary>
      <param name="stream">Secuencia a partir de la cual se lee.</param>
      <param name="dictionary">
        <see cref="T:System.Xml.XmlDictionary" /> que se va a utilizar.</param>
      <param name="quotas">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> que se va a aplicar.</param>
      <param name="session">
        <see cref="T:System.Xml.XmlBinaryReaderSession" /> que se va a utilizar.</param>
      <param name="onClose">Delegado al que se llamará cuando se cierre el lector.</param>
    </member>
    <member name="T:System.Xml.IXmlBinaryWriterInitializer">
      <summary>Especifica los requisitos de implementación para sistemas de escritura binarios XML que derivan de esta interfaz.</summary>
    </member>
    <member name="M:System.Xml.IXmlBinaryWriterInitializer.SetOutput(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlBinaryWriterSession,System.Boolean)">
      <summary>Especifica los requisitos de inicialización para sistemas de escritura binarios XML que implementan este método.</summary>
      <param name="stream">Secuencia en la que se va a escribir.</param>
      <param name="dictionary">Objeto <see cref="T:System.Xml.XmlDictionary" /> que se va a usar.</param>
      <param name="session">Objeto <see cref="T:System.Xml.XmlBinaryWriterSession" /> que se va a usar.</param>
      <param name="ownsStream">
        <see langword="true" /> para indicar que el sistema de escritura cerrará el flujo una vez que haya terminado; de lo contrario, <see langword="false" />.</param>
    </member>
    <member name="T:System.Xml.IXmlDictionary">
      <summary>
        <see langword="interface" /> que define el contrato que un diccionario Xml debe implementar para ser utilizado por <see cref="T:System.Xml.XmlDictionaryReader" /> e implementaciones <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
    </member>
    <member name="M:System.Xml.IXmlDictionary.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)">
      <summary>Intenta buscar una entrada en el diccionario.</summary>
      <param name="key">Clave para buscar.</param>
      <param name="result">Si se define <paramref name="key" />, <see cref="T:System.Xml.XmlDictionaryString" /> que está asignado a la clave; de lo contrario, <see langword="null" />.</param>
      <returns>
        <see langword="true" />, si la clave está en el diccionario; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.IXmlDictionary.TryLookup(System.String,System.Xml.XmlDictionaryString@)">
      <summary>Busca en el diccionario un valor de cadena especificado.</summary>
      <param name="value">Valor de cadena que se comprueba.</param>
      <param name="result">Valor <see cref="T:System.Xml.XmlDictionaryString" /> correspondiente, si se encuentra; en caso contrario, es <see langword="null" />.</param>
      <returns>
        <see langword="true" /> si el valor está en el diccionario; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.IXmlDictionary.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)">
      <summary>Busca en el diccionario un <see cref="T:System.Xml.XmlDictionaryString" /> especificado.</summary>
      <param name="value">El objeto <see cref="T:System.Xml.XmlDictionaryString" /> que se busca.</param>
      <param name="result">Valor <see cref="T:System.Xml.XmlDictionaryString" /> correspondiente, si se encuentra; de lo contrario, <see langword="null" />.</param>
      <returns>
        <see langword="true" /> si <see cref="T:System.Xml.XmlDictionaryString" /> está en el diccionario, de lo contrario <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xml.IXmlTextReaderInitializer">
      <summary>Especifica los requisitos de implementación para los lectores de texto XML que derivan de esta interfaz.</summary>
    </member>
    <member name="M:System.Xml.IXmlTextReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Especifica los requisitos de inicialización para los lectores de texto XML que leen un búfer.</summary>
      <param name="buffer">El búfer del que se lee.</param>
      <param name="offset">La posición inicial de la que leer en <paramref name="buffer" />.</param>
      <param name="count">Número de bytes que se pueden leer de <paramref name="buffer" />.</param>
      <param name="encoding">La codificación de caracteres de la secuencia.</param>
      <param name="quotas">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> que se va a aplicar.</param>
      <param name="onClose">El delegado al que se va a llamar cuando se cierre el lector.</param>
    </member>
    <member name="M:System.Xml.IXmlTextReaderInitializer.SetInput(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Especifica los requisitos de inicialización para los lectores de texto XML que leen una secuencia.</summary>
      <param name="stream">Secuencia a partir de la cual se lee.</param>
      <param name="encoding">La codificación de caracteres de la secuencia.</param>
      <param name="quotas">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> que se va a aplicar.</param>
      <param name="onClose">El delegado al que se va a llamar cuando se cierre el lector.</param>
    </member>
    <member name="T:System.Xml.IXmlTextWriterInitializer">
      <summary>Especifica los requisitos de implementación para los editores de texto XML que derivan de esta interfaz.</summary>
    </member>
    <member name="M:System.Xml.IXmlTextWriterInitializer.SetOutput(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary>Especifica los requisitos de inicialización para los editores de texto XML que implementan este método.</summary>
      <param name="stream">Secuencia en la que se va a escribir.</param>
      <param name="encoding">La codificación de caracteres de la secuencia.</param>
      <param name="ownsStream">
        <see langword="true" /> para indicar que el sistema de escritura cerrará el flujo una vez que haya terminado; de lo contrario, <see langword="false" />.</param>
    </member>
    <member name="T:System.Xml.OnXmlDictionaryReaderClose">
      <summary>
        <see langword="delegate" /> para un método de devolución de llamada al cerrar el lector.</summary>
      <param name="reader">Un objeto <see cref="T:System.Xml.XmlDictionaryReader" /> que genera el evento <c>OnClose</c>.</param>
    </member>
    <member name="T:System.Xml.UniqueId">
      <summary>Un identificador único optimizado para Guids.</summary>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor">
      <summary>Crea una nueva instancia de esta clase con un nuevo, único Guid.</summary>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Byte[])">
      <summary>Crea una nueva instancia de esta clase utilizando una matriz de bytes que representa un <see cref="T:System.Guid" />.</summary>
      <param name="guid">Matriz de bytes que representa un <see cref="T:System.Guid" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="guid" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="guid" /> proporciona menos de 16 bytes válidos.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Byte[],System.Int32)">
      <summary>Crea una nueva instancia de esta clase que se inicia de un desplazamiento dentro de una matriz de <see langword="byte" /> que representa un <see cref="T:System.Guid" />.</summary>
      <param name="guid">Una matriz <see langword="byte" /> que representa una <see cref="T:System.Guid" />.</param>
      <param name="offset">Posición compensada dentro de la matriz<see langword="byte" /> que representa <see cref="T:System.Guid" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="guid" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> menor que cero o mayor que la longitud de la matriz.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="guid" /> y <paramref name="offset" /> proporcionan menos de 16 bytes válidos.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Char[],System.Int32,System.Int32)">
      <summary>Crea una nueva instancia de esta clase que se inicia de un desplazamiento dentro de un <see langword="char" /> utilizando un número especificado de entradas.</summary>
      <param name="chars">Una matriz <see langword="char" /> que representa una <see cref="T:System.Guid" />.</param>
      <param name="offset">Posición compensada dentro de la matriz<see langword="char" /> que representa <see cref="T:System.Guid" />.</param>
      <param name="count">El número de entradas de la matriz para utilizar, partiendo de <paramref name="offset" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="chars" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> menor que cero o mayor que la longitud de la matriz.

o bien

<paramref name="count" /> menor que cero o mayor que la longitud de la matriz menos <paramref name="offset" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="count" /> es igual a cero.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Guid)">
      <summary>Crea una nueva instancia de esta clase usando un <see cref="T:System.Guid" />.</summary>
      <param name="guid">Objeto <see cref="T:System.Guid" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="guid" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.String)">
      <summary>Crea una nueva instancia de esta clase usando una cadena.</summary>
      <param name="value">Una cadena utilizada para generar <see cref="T:System.Xml.UniqueId" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> es <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">La longitud de <paramref name="value" /> es cero.</exception>
    </member>
    <member name="M:System.Xml.UniqueId.Equals(System.Object)">
      <summary>Prueba si un objeto es igual a este <see cref="T:System.Xml.UniqueId" />.</summary>
      <param name="obj">Objeto que se va a comparar.</param>
      <returns>
        <see langword="true" /> si el objeto es igual a este <see cref="T:System.Xml.UniqueId" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.GetHashCode">
      <summary>Crea una representación del código hash de este <see cref="T:System.Xml.UniqueId" />.</summary>
      <returns>Una representación del código hash entero de este <see cref="T:System.Xml.UniqueId" />.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.op_Equality(System.Xml.UniqueId,System.Xml.UniqueId)">
      <summary>Reemplaza al operador de igualdad para comprobar la igualdad de dos <see cref="T:System.Xml.UniqueId" />s.</summary>
      <param name="id1">Primer objeto <see cref="T:System.Xml.UniqueId" />.</param>
      <param name="id2">Segundo objeto <see cref="T:System.Xml.UniqueId" />.</param>
      <returns>
        <see langword="true" /> si los dos <see cref="T:System.Xml.UniqueId" /> son iguales, o ambos son <see langword="null" />; <see langword="false" /> si no son iguales, o si sólo uno de ellos es <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.op_Inequality(System.Xml.UniqueId,System.Xml.UniqueId)">
      <summary>Reemplaza al operador de igualdad para comprobar la desigualdad de dos <see cref="T:System.Xml.UniqueId" />s.</summary>
      <param name="id1">Primer objeto <see cref="T:System.Xml.UniqueId" />.</param>
      <param name="id2">Segundo objeto <see cref="T:System.Xml.UniqueId" />.</param>
      <returns>
        <see langword="true" /> si el operador de igualdad invalidado vuelve <see langword="false" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.ToCharArray(System.Char[],System.Int32)">
      <summary>Coloca el valor <see cref="T:System.Xml.UniqueId" /> en una matriz de <see langword="char" />.</summary>
      <param name="chars">Matriz de <see langword="char" />.</param>
      <param name="offset">Coloque en la matriz de <see langword="char" /> para iniciar la inserción del valor <see cref="T:System.Xml.UniqueId" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="chars" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> menor que cero o mayor que la longitud de la matriz.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="guid" /> y <paramref name="offset" /> proporcionan menos de 16 bytes válidos.</exception>
      <returns>Número de entradas en la matriz <see langword="char" /> rellenadas por el valor <see cref="T:System.Xml.UniqueId" />.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.ToString">
      <summary>Muestra el valor <see cref="T:System.Xml.UniqueId" /> en formato de cadena.</summary>
      <returns>Una representación de cadena del valor <see cref="T:System.Xml.UniqueId" />.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.TryGetGuid(System.Byte[],System.Int32)">
      <summary>Intenta obtener el valor de <see cref="T:System.Xml.UniqueId" /> como <see cref="T:System.Guid" /> y almacenarlo en la matriz de bytes determinada en el desplazamiento especificado.</summary>
      <param name="buffer">Matriz de <see langword="byte" /> que contendrá <see cref="T:System.Guid" />.</param>
      <param name="offset">Coloque en la matriz de <see langword="byte" /> para iniciar la inserción del valor <see cref="T:System.Guid" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> menor que cero o mayor que la longitud de la matriz.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffer" /> y <paramref name="offset" /> proporcionan menos de 16 bytes válidos.</exception>
      <returns>
        <see langword="true" /> si el valor almacenado en esta instancia de <see cref="T:System.Xml.UniqueId" /> es <see cref="T:System.Guid" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.UniqueId.TryGetGuid(System.Guid@)">
      <summary>Intenta obtener el valor de <see cref="T:System.Xml.UniqueId" /> como <see cref="T:System.Guid" />.</summary>
      <param name="guid">
        <see cref="T:System.Guid" /> si la entrega resulta satisfactoria; en caso contrario, <see cref="F:System.Guid.Empty" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffer" /> y <paramref name="offset" /> proporcionan menos de 16 bytes válidos.</exception>
      <returns>
        <see langword="true" /> si UniqueId representa <see cref="T:System.Guid" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.UniqueId.CharArrayLength">
      <summary>Obtiene la longitud de la representación de la cadena del <see cref="T:System.Xml.UniqueId" />.</summary>
      <returns>La longitud de la representación de la cadena del <see cref="T:System.Xml.UniqueId" />.</returns>
    </member>
    <member name="P:System.Xml.UniqueId.IsGuid">
      <summary>Indica si el <see cref="T:System.Xml.UniqueId" /> es un <see cref="T:System.Guid" />.</summary>
      <returns>Es <see langword="true" /> si <see cref="T:System.Xml.UniqueId" /> es <see cref="T:System.Guid" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xml.XmlBinaryReaderSession">
      <summary>Permite administrar las cadenas optimizadas de una manera dinámica.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlBinaryReaderSession" />.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.Add(System.Int32,System.String)">
      <summary>Crea una instancia de <see cref="T:System.Xml.XmlDictionaryString" /> a partir de los parámetros de entrada y la agrega a una colección interna.</summary>
      <param name="id">El valor de la clave.</param>
      <param name="value">Valor.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="id" /> es menor que cero.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Ya existe una entrada con clave = <paramref name="id" />.</exception>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryString" /> recién creada que se va a agregar a una colección interna.</returns>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.Clear">
      <summary>Borra todo el contenido de la colección interna.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)">
      <summary>Comprueba si la colección interna contiene una entrada que coincide con una clave.</summary>
      <param name="key">La clave que hay que buscar.</param>
      <param name="result">Cuando este método vuelve, contiene una cadena si se encuentra una entrada; si no, <see langword="null" />. Este parámetro se pasa sin inicializar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> es <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> si se encontrara una entrada que coincide con <paramref name="key" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.TryLookup(System.String,System.Xml.XmlDictionaryString@)">
      <summary>Comprueba si la colección interna contiene una entrada que coincide con un valor.</summary>
      <param name="value">Valor que se va a buscar.</param>
      <param name="result">Cuando este método vuelve, contiene una cadena si se encuentra una entrada; si no, <see langword="null" />. Este parámetro se pasa sin inicializar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> es <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> si se encontrara una entrada que coincide con <paramref name="value" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)">
      <summary>Comprueba si la colección interna contiene una entrada que coincide con un valor.</summary>
      <param name="value">Valor que se va a buscar.</param>
      <param name="result">Cuando este método vuelve, contiene una cadena si se encuentra una entrada; si no, <see langword="null" />. Este parámetro se pasa sin inicializar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> es <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> si se encontrara una entrada que coincide con <paramref name="value" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xml.XmlBinaryWriterSession">
      <summary>Permite el uso de un diccionario dinámico para comprimir cadenas comunes que aparecen en un mensaje y mantener el estado.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryWriterSession.#ctor">
      <summary>Crea una instancia de esta clase.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryWriterSession.Reset">
      <summary>Vacía las colecciones internas.</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryWriterSession.TryAdd(System.Xml.XmlDictionaryString,System.Int32@)">
      <summary>Intenta agregar un objeto <see cref="T:System.Xml.XmlDictionaryString" /> a la colección interna.</summary>
      <param name="value">
        <see cref="T:System.Xml.XmlDictionaryString" /> que se va a agregar.</param>
      <param name="key">La clave del objeto <see cref="T:System.Xml.XmlDictionaryString" /> que se agregó correctamente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Ya existe una entrada con clave = <paramref name="key" />.</exception>
      <returns>
        <see langword="true" /> si se pudo agregar la cadena; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xml.XmlDictionary">
      <summary>Implementa un diccionario que se usa para optimizar las implementaciones del lector o el escritor XML de Windows Communication Foundation (WCF).</summary>
    </member>
    <member name="M:System.Xml.XmlDictionary.#ctor">
      <summary>Crea una colección <see cref="T:System.Xml.XmlDictionary" /> vacía.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionary.#ctor(System.Int32)">
      <summary>Crea un <see cref="T:System.Xml.XmlDictionary" /> con una capacidad inicial.</summary>
      <param name="capacity">El tamaño inicial del diccionario.</param>
    </member>
    <member name="M:System.Xml.XmlDictionary.Add(System.String)">
      <summary>Agrega una cadena a <see cref="T:System.Xml.XmlDictionary" />.</summary>
      <param name="value">Cadena que se agregará al diccionario.</param>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryString" /> que se añadió.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionary.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)">
      <summary>Intenta buscar una entrada en el diccionario.</summary>
      <param name="key">Clave para buscar.</param>
      <param name="result">Si se define <paramref name="key" />, <see cref="T:System.Xml.XmlDictionaryString" /> que está asignado a la clave; de lo contrario, <see langword="null" />.</param>
      <returns>
        <see langword="true" />, si la clave está en el diccionario; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionary.TryLookup(System.String,System.Xml.XmlDictionaryString@)">
      <summary>Busca en el diccionario un valor de cadena especificado.</summary>
      <param name="value">Valor de cadena que se comprueba.</param>
      <param name="result">El/la correspondiente <see cref="T:System.Xml.XmlDictionaryString" />, si se encuentra; en caso contrario, es <see langword="null" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> es <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> si el valor está en el diccionario; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionary.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)">
      <summary>Busca en el diccionario un <see cref="T:System.Xml.XmlDictionaryString" /> especificado.</summary>
      <param name="value">El objeto <see cref="T:System.Xml.XmlDictionaryString" /> que se busca.</param>
      <param name="result">Valor <see cref="T:System.Xml.XmlDictionaryString" /> correspondiente, si se encuentra; de lo contrario, <see langword="null" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> es <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> si <see cref="T:System.Xml.XmlDictionaryString" /> está en el diccionario, de lo contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionary.Empty">
      <summary>Obtiene un <see langword="static" /><see cref="T:System.Xml.IXmlDictionary" /> vacío.</summary>
      <returns>Obtiene un <see langword="static" /> vacío <see cref="T:System.Xml.IXmlDictionary" />.</returns>
    </member>
    <member name="T:System.Xml.XmlDictionaryReader">
      <summary>Una clase <see langword="abstract" /> de la que Windows Communication Foundation (WCF) se deriva <see cref="T:System.Xml.XmlReader" /> para hacer serialización y deserialización.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.#ctor">
      <summary>Crea una instancia de esta clase.  Solo lo invocan sus clases derivadas.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Crea una instancia de <see cref="T:System.Xml.XmlDictionaryReader" /> que puede leer el formato XML binario de .NET.</summary>
      <param name="buffer">El búfer del que se lee.</param>
      <param name="offset">La posición inicial de la que leer en <paramref name="buffer" />.</param>
      <param name="count">Número de bytes que se pueden leer de <paramref name="buffer" />.</param>
      <param name="dictionary">
        <see cref="T:System.Xml.XmlDictionary" /> que se va a utilizar.</param>
      <param name="quotas">Cuotas que se aplican a esta operación.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> es <see langword="null" />.

o bien

<paramref name="offset" /> es menor que cero o mayor que la longitud del búfer.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> es menor que cero o mayor que la longitud del búfer menos el desplazamiento.</exception>
      <returns>Instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession)">
      <summary>Crea una instancia de <see cref="T:System.Xml.XmlDictionaryReader" /> que puede leer el formato XML binario de .NET.</summary>
      <param name="buffer">El búfer del que se lee.</param>
      <param name="offset">La posición inicial de la que leer en <paramref name="buffer" />.</param>
      <param name="count">Número de bytes que se pueden leer de <paramref name="buffer" />.</param>
      <param name="dictionary">Objeto <see cref="T:System.Xml.XmlDictionary" /> que se va a usar.</param>
      <param name="quotas">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> que se va a aplicar.</param>
      <param name="session">Objeto <see cref="T:System.Xml.XmlBinaryReaderSession" /> que se va a usar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> es menor que cero o mayor que la longitud del búfer menos el desplazamiento.

o bien

<paramref name="offset" /> es menor que cero o mayor que la longitud del búfer.</exception>
      <returns>Instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Crea una instancia de <see cref="T:System.Xml.XmlDictionaryReader" /> que puede leer el formato XML binario de .NET.</summary>
      <param name="buffer">El búfer del que se lee.</param>
      <param name="offset">La posición inicial de la que leer en <paramref name="buffer" />.</param>
      <param name="count">Número de bytes que se pueden leer de <paramref name="buffer" />.</param>
      <param name="dictionary">Objeto <see cref="T:System.Xml.XmlDictionary" /> que se va a usar.</param>
      <param name="quotas">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> que se va a aplicar.</param>
      <param name="session">Objeto <see cref="T:System.Xml.XmlBinaryReaderSession" /> que se va a usar.</param>
      <param name="onClose">Delegado al que se llamará cuando se cierre el lector.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> es menor que cero o mayor que la longitud del búfer menos el desplazamiento.

o bien

<paramref name="offset" /> es menor que cero o mayor que la longitud del búfer.</exception>
      <returns>Instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Crea una instancia de <see cref="T:System.Xml.XmlDictionaryReader" /> que puede leer el formato XML binario de .NET.</summary>
      <param name="buffer">El búfer del que se lee.</param>
      <param name="offset">La posición inicial de la que leer en <paramref name="buffer" />.</param>
      <param name="count">Número de bytes que se pueden leer de <paramref name="buffer" />.</param>
      <param name="quotas">Cuotas que se aplican a esta operación.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> es menor que cero o mayor que la longitud del búfer menos el desplazamiento.

o bien

<paramref name="offset" /> es menor que cero o mayor que la longitud del búfer.</exception>
      <returns>Instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Crea una instancia de <see cref="T:System.Xml.XmlDictionaryReader" /> que puede leer el formato XML binario de .NET.</summary>
      <param name="buffer">El búfer del que se lee.</param>
      <param name="quotas">Cuotas que se aplican a esta operación.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> es <see langword="null" />.</exception>
      <returns>Instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Crea una instancia de <see cref="T:System.Xml.XmlDictionaryReader" /> que puede leer el formato XML binario de .NET.</summary>
      <param name="stream">Secuencia a partir de la cual se lee.</param>
      <param name="dictionary">
        <see cref="T:System.Xml.XmlDictionary" /> que se va a utilizar.</param>
      <param name="quotas">Cuotas que se aplican a esta operación.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> o <paramref name="quotas" /> es <see langword="null" />.</exception>
      <returns>Instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession)">
      <summary>Crea una instancia de <see cref="T:System.Xml.XmlDictionaryReader" /> que puede leer el formato XML binario de .NET.</summary>
      <param name="stream">Secuencia a partir de la cual se lee.</param>
      <param name="dictionary">
        <see cref="T:System.Xml.XmlDictionary" /> que se va a utilizar.</param>
      <param name="quotas">Cuotas que se aplican a esta operación.</param>
      <param name="session">
        <see cref="T:System.Xml.XmlBinaryReaderSession" /> que se va a utilizar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> es <see langword="null" />.</exception>
      <returns>Instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Crea una instancia de <see cref="T:System.Xml.XmlDictionaryReader" /> que puede leer el formato XML binario de .NET.</summary>
      <param name="stream">Secuencia a partir de la cual se lee.</param>
      <param name="dictionary">
        <see cref="T:System.Xml.XmlDictionary" /> que se va a utilizar.</param>
      <param name="quotas">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> que se va a aplicar.</param>
      <param name="session">
        <see cref="T:System.Xml.XmlBinaryReaderSession" /> que se va a utilizar.</param>
      <param name="onClose">Delegado al que se llamará cuando se cierre el lector.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> es <see langword="null" />.</exception>
      <returns>Instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Crea una instancia de <see cref="T:System.Xml.XmlDictionaryReader" /> que puede leer el formato XML binario de .NET.</summary>
      <param name="stream">Secuencia a partir de la cual se lee.</param>
      <param name="quotas">Cuotas que se aplican a esta operación.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> es <see langword="null" />.</exception>
      <returns>Instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateDictionaryReader(System.Xml.XmlReader)">
      <summary>Crea una instancia de <see cref="T:System.Xml.XmlDictionaryReader" /> a partir de un <see cref="T:System.Xml.XmlReader" /> existente.</summary>
      <param name="reader">Instancia de <see cref="T:System.Xml.XmlReader" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> es <see langword="null" />.</exception>
      <returns>Instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Crea una instancia de <see cref="T:System.Xml.XmlDictionaryReader" /> que lee XML en formato MTOM.</summary>
      <param name="buffer">El búfer del que se lee.</param>
      <param name="offset">La posición inicial de la que leer en <paramref name="buffer" />.</param>
      <param name="count">Número de bytes que se pueden leer de <paramref name="buffer" />.</param>
      <param name="encoding">Las posibles codificaciones de caracteres de la entrada.</param>
      <param name="quotas">Las cuotas que se van a aplicar a este lector.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="encoding" /> es <see langword="null" />.</exception>
      <returns>Instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Crea una instancia de <see cref="T:System.Xml.XmlDictionaryReader" /> que lee XML en formato MTOM.</summary>
      <param name="buffer">El búfer del que se lee.</param>
      <param name="offset">La posición inicial de la que leer en <paramref name="buffer" />.</param>
      <param name="count">Número de bytes que se pueden leer de <paramref name="buffer" />.</param>
      <param name="encodings">Las posibles codificaciones de caracteres de la entrada.</param>
      <param name="contentType">El tipo de contenido MIME del mensaje.</param>
      <param name="quotas">Las cuotas que se van a aplicar a este lector.</param>
      <returns>Instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas,System.Int32,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Crea una instancia de <see cref="T:System.Xml.XmlDictionaryReader" /> que lee XML en formato MTOM.</summary>
      <param name="buffer">El búfer del que se lee.</param>
      <param name="offset">La posición inicial de la que leer en <paramref name="buffer" />.</param>
      <param name="count">Número de bytes que se pueden leer de <paramref name="buffer" />.</param>
      <param name="encodings">Las posibles codificaciones de caracteres de la entrada.</param>
      <param name="contentType">El tipo de contenido MIME del mensaje.</param>
      <param name="quotas">El atributo <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> que se debe aplicar al lector.</param>
      <param name="maxBufferSize">El tamaño máximo permitido del búfer.</param>
      <param name="onClose">El delegado al que se va a llamar cuando se cierre el lector.</param>
      <returns>Instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Crea una instancia de <see cref="T:System.Xml.XmlDictionaryReader" /> que lee XML en formato MTOM.</summary>
      <param name="buffer">El búfer del que se lee.</param>
      <param name="offset">La posición inicial de la que leer en <paramref name="buffer" />.</param>
      <param name="count">Número de bytes que se pueden leer de <paramref name="buffer" />.</param>
      <param name="encodings">Las posibles codificaciones de caracteres de la entrada.</param>
      <param name="quotas">Las cuotas que se van a aplicar a este lector.</param>
      <returns>Instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Crea una instancia de <see cref="T:System.Xml.XmlDictionaryReader" /> que lee XML en formato MTOM.</summary>
      <param name="stream">Secuencia a partir de la cual se lee.</param>
      <param name="encoding">La posible codificación de caracteres de la secuencia.</param>
      <param name="quotas">Las cuotas que se van a aplicar a este lector.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="encoding" /> es <see langword="null" />.</exception>
      <returns>Instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.IO.Stream,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Crea una instancia de <see cref="T:System.Xml.XmlDictionaryReader" /> que lee XML en formato MTOM.</summary>
      <param name="stream">Secuencia a partir de la cual se lee.</param>
      <param name="encodings">Las posibles codificaciones de caracteres de la secuencia.</param>
      <param name="contentType">El tipo de contenido MIME del mensaje.</param>
      <param name="quotas">Las cuotas que se van a aplicar a este lector.</param>
      <returns>Instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.IO.Stream,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas,System.Int32,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Crea una instancia de <see cref="T:System.Xml.XmlDictionaryReader" /> que lee XML en formato MTOM.</summary>
      <param name="stream">Secuencia a partir de la cual se lee.</param>
      <param name="encodings">Las posibles codificaciones de caracteres de la secuencia.</param>
      <param name="contentType">El tipo de contenido MIME del mensaje.</param>
      <param name="quotas">El tipo MIME del mensaje.</param>
      <param name="maxBufferSize">El atributo <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> que se debe aplicar al lector.</param>
      <param name="onClose">El delegado al que se va a llamar cuando se cierre el lector.</param>
      <returns>Instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.IO.Stream,System.Text.Encoding[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Crea una instancia de <see cref="T:System.Xml.XmlDictionaryReader" /> que lee XML en formato MTOM.</summary>
      <param name="stream">Secuencia a partir de la cual se lee.</param>
      <param name="encodings">Las posibles codificaciones de caracteres de la secuencia.</param>
      <param name="quotas">Las cuotas que se van a aplicar a este lector.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="encoding" /> es <see langword="null" />.</exception>
      <returns>Instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Crea una instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="buffer">El búfer del que se lee.</param>
      <param name="offset">La posición inicial de la que leer en <paramref name="buffer" />.</param>
      <param name="count">Número de bytes que se pueden leer de <paramref name="buffer" />.</param>
      <param name="encoding">El objeto <see cref="T:System.Text.Encoding" /> que especifica las propiedades de codificación que se van a aplicar.</param>
      <param name="quotas">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> que se va a aplicar.</param>
      <param name="onClose">El delegado al que se va a llamar cuando se cierre el lector.</param>
      <returns>Instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Crea una instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="buffer">El búfer del que se lee.</param>
      <param name="offset">La posición inicial de la que leer en <paramref name="buffer" />.</param>
      <param name="count">Número de bytes que se pueden leer de <paramref name="buffer" />.</param>
      <param name="quotas">Las cuotas que se aplican al lector.</param>
      <returns>Instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Crea una instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="buffer">El búfer del que se lee.</param>
      <param name="quotas">Las cuotas que se aplican al lector.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> es <see langword="null" />.</exception>
      <returns>Instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Crea una instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="stream">Secuencia a partir de la cual se lee.</param>
      <param name="encoding">El objeto <see cref="T:System.Text.Encoding" /> que especifica las propiedades de codificación que se van a aplicar.</param>
      <param name="quotas">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> que se va a aplicar.</param>
      <param name="onClose">El delegado al que se va a llamar cuando se cierre el lector.</param>
      <returns>Instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Crea una instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="stream">Secuencia a partir de la cual se lee.</param>
      <param name="quotas">Las cuotas que se aplican al lector.</param>
      <returns>Instancia de <see cref="T:System.Xml.XmlDictionaryReader" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.EndCanonicalization">
      <summary>Este método aún no se ha implementado.</summary>
      <exception cref="T:System.NotSupportedException">Siempre.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.GetAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Cuando se invalida en una clase derivada, obtiene el valor de un atributo.</summary>
      <param name="localName">
        <see cref="T:System.Xml.XmlDictionaryString" /> que representa el nombre local del atributo.</param>
      <param name="namespaceUri">
        <see cref="T:System.Xml.XmlDictionaryString" /> que representa el espacio de nombres del atributo.</param>
      <returns>El valor del atributo.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.GetNonAtomizedNames(System.String@,System.String@)">
      <summary>Obtiene nombres no atomizados.</summary>
      <param name="localName">Nombre local.</param>
      <param name="namespaceUri">El espacio de nombres para el parámetro <paramref name="localName" /> local.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IndexOfLocalName(System.String[],System.String)">
      <summary>Obtiene el índice del nombre local del nodo actual de una matriz de nombres.</summary>
      <param name="localNames">La matriz de cadenas de nombres locales en que se va a buscar.</param>
      <param name="namespaceUri">El espacio de nombres de nodo actual.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localNames" /> o cualquiera de los nombres de la matriz es <see langword="null" />.

o bien

<paramref name="namespaceUri" /> es <see langword="null" />.</exception>
      <returns>El índice del nombre local del nodo actual dentro de una matriz de nombres.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IndexOfLocalName(System.Xml.XmlDictionaryString[],System.Xml.XmlDictionaryString)">
      <summary>Obtiene el índice del nombre local del nodo actual de una matriz de nombres.</summary>
      <param name="localNames">La matriz de valores de tipo <see cref="T:System.Xml.XmlDictionaryString" /> de nombres locales en que se buscará.</param>
      <param name="namespaceUri">El espacio de nombres de nodo actual.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localNames" /> o cualquiera de los nombres de la matriz es <see langword="null" />.

o bien

<paramref name="namespaceUri" /> es <see langword="null" />.</exception>
      <returns>El índice del nombre local del nodo actual dentro de una matriz de nombres.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsLocalName(System.String)">
      <summary>Comprueba si el parámetro <paramref name="localName" /> es el nombre local del nodo actual.</summary>
      <param name="localName">El nombre local del nodo actual.</param>
      <returns>Es <see langword="true" /> si <paramref name="localName" /> coincide con el nombre local del nodo actual; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsLocalName(System.Xml.XmlDictionaryString)">
      <summary>Comprueba si el parámetro <paramref name="localName" /> es el nombre local del nodo actual.</summary>
      <param name="localName">
        <see cref="T:System.Xml.XmlDictionaryString" /> que representa el nombre local del nodo actual.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localName" /> es <see langword="null" />.</exception>
      <returns>Es <see langword="true" /> si <paramref name="localName" /> coincide con el nombre local del nodo actual; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsNamespaceUri(System.String)">
      <summary>Comprueba si el parámetro <paramref name="namespaceUri" /> es el espacio de nombres del nodo actual.</summary>
      <param name="namespaceUri">El espacio de nombres de nodo actual.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="namespaceUri" /> es <see langword="null" />.</exception>
      <returns>Es <see langword="true" /> si <paramref name="namespaceUri" /> coincide con el espacio de nombres del nodo actual; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsNamespaceUri(System.Xml.XmlDictionaryString)">
      <summary>Comprueba si el parámetro <paramref name="namespaceUri" /> es el espacio de nombres del nodo actual.</summary>
      <param name="namespaceUri">El espacio de nombres del nodo actual.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="namespaceUri" /> es <see langword="null" />.</exception>
      <returns>Es <see langword="true" /> si <paramref name="namespaceUri" /> coincide con el espacio de nombres del nodo actual; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsStartArray(System.Type@)">
      <summary>Comprueba si el lector está colocado en el inicio de una matriz. Esta clase devuelve <see langword="false" />, pero las clases derivadas que tienen el concepto de matrices podrían devolver <see langword="true" />.</summary>
      <param name="type">Tipo del nodo, si es válido; de lo contrario <see langword="null" />.</param>
      <returns>Es <see langword="true" /> si el lector está situado al inicio de un nodo de matriz; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Prueba si la primera etiqueta es una etiqueta inicial o una etiqueta de elemento vacía y si el nombre local y el espacio de nombres URI concuerda con los del nodo actual.</summary>
      <param name="localName">
        <see cref="T:System.Xml.XmlDictionaryString" /> que representa el nombre local del atributo.</param>
      <param name="namespaceUri">
        <see cref="T:System.Xml.XmlDictionaryString" /> que representa el espacio de nombres del atributo.</param>
      <returns>
        <see langword="true" /> si la primera etiqueta de la matriz es una etiqueta inicial o una etiqueta de elemento vacía y coincide con <paramref name="localName" /> y <paramref name="namespaceUri" />; de lo contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsTextNode(System.Xml.XmlNodeType)">
      <summary>Prueba si el nodo actual es un nodo de texto.</summary>
      <param name="nodeType">Tipo del nodo que se prueba.</param>
      <returns>
        <see langword="true" /> si el tipo de nodo es <see cref="F:System.Xml.XmlNodeType.Text" />, <see cref="F:System.Xml.XmlNodeType.Whitespace" />, <see cref="F:System.Xml.XmlNodeType.SignificantWhitespace" />, <see cref="F:System.Xml.XmlNodeType.CDATA" />, o <see cref="F:System.Xml.XmlNodeType.Attribute" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement">
      <summary>Prueba si el nodo de contenido actual es un elemento de inicio o un elemento vacío.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.String)">
      <summary>Prueba si el nodo de contenido actual es un elemento de inicio o un elemento vacío y si la propiedad <see cref="P:System.Xml.XmlReader.Name" /> del elemento coincide con el argumento especificado.</summary>
      <param name="name">La propiedad <see cref="P:System.Xml.XmlReader.Name" /> del elemento.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.String,System.String)">
      <summary>Prueba si el nodo de contenido actual es un elemento de inicio o un elemento vacío y si las propiedades <see cref="P:System.Xml.XmlReader.LocalName" /> y <see cref="P:System.Xml.XmlReader.NamespaceURI" /> del elemento coinciden con los argumentos especificados.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Prueba si el nodo de contenido actual es un elemento de inicio o un elemento vacío y si las propiedades <see cref="P:System.Xml.XmlReader.LocalName" /> y <see cref="P:System.Xml.XmlReader.NamespaceURI" /> del elemento coinciden con el argumento especificado.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Boolean[],System.Int32,System.Int32)">
      <summary>Lee las apariciones repetidas de los nodos <see cref="T:System.Boolean" /> en una matriz con tipo.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Nombre local del elemento.</param>
      <param name="array">Matriz en la que se colocan los nodos.</param>
      <param name="offset">Índice inicial de la matriz.</param>
      <param name="count">El número de nodos que se van a colocar en la matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
      <returns>El número de nodos colocados en la matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.DateTime[],System.Int32,System.Int32)">
      <summary>Lee las apariciones repetidas de los nodos <see cref="T:System.DateTime" /> en una matriz con tipo.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array">Matriz en la que se colocan los nodos.</param>
      <param name="offset">Índice inicial de la matriz.</param>
      <param name="count">El número de nodos que se van a colocar en la matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
      <returns>El número de nodos colocados en la matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Decimal[],System.Int32,System.Int32)">
      <summary>Lee las apariciones repetidas de los nodos <see cref="T:System.Decimal" /> en una matriz con tipo.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array">Matriz en la que se colocan los nodos.</param>
      <param name="offset">Índice inicial de la matriz.</param>
      <param name="count">El número de nodos que se van a colocar en la matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
      <returns>El número de nodos colocados en la matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Double[],System.Int32,System.Int32)">
      <summary>Lee las apariciones repetidas de los nodos <see cref="T:System.Double" /> en una matriz con tipo.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array">Matriz en la que se colocan los nodos.</param>
      <param name="offset">Índice inicial de la matriz.</param>
      <param name="count">El número de nodos que se van a colocar en la matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
      <returns>El número de nodos colocados en la matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Guid[],System.Int32,System.Int32)">
      <summary>Lee las apariciones repetidas de los nodos <see cref="T:System.Guid" /> en una matriz con tipo.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array">Matriz en la que se colocan los nodos.</param>
      <param name="offset">Índice inicial de la matriz.</param>
      <param name="count">El número de nodos que se van a colocar en la matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
      <returns>El número de nodos colocados en la matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int16[],System.Int32,System.Int32)">
      <summary>Lee las apariciones repetidas de los enteros <see langword="short" /> en una matriz con tipo.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array">Matriz en la que se colocan los enteros.</param>
      <param name="offset">Índice inicial de la matriz.</param>
      <param name="count">El número de enteros que se van a colocar en la matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
      <returns>El número de enteros colocados en la matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int32[],System.Int32,System.Int32)">
      <summary>Lee las apariciones repetidas de los enteros en una matriz con tipo.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array">Matriz en la que se colocan los enteros.</param>
      <param name="offset">Índice inicial de la matriz.</param>
      <param name="count">El número de enteros que se van a colocar en la matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
      <returns>El número de enteros colocados en la matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int64[],System.Int32,System.Int32)">
      <summary>Lee las apariciones repetidas de los enteros <see langword="long" /> en una matriz con tipo.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array">Matriz en la que se colocan los enteros.</param>
      <param name="offset">Índice inicial de la matriz.</param>
      <param name="count">El número de enteros que se van a colocar en la matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
      <returns>El número de enteros colocados en la matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Single[],System.Int32,System.Int32)">
      <summary>Lee las apariciones repetidas de los números <see langword="float" /> en una matriz con tipo.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array">La matriz en la que se colocan los números float.</param>
      <param name="offset">Índice inicial de la matriz.</param>
      <param name="count">El número de números float que se van a colocar en la matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
      <returns>El número de números float colocados en la matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.TimeSpan[],System.Int32,System.Int32)">
      <summary>Lee las apariciones repetidas de los nodos <see cref="T:System.TimeSpan" /> en una matriz con tipo.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array">Matriz en la que se colocan los nodos.</param>
      <param name="offset">Índice inicial de la matriz.</param>
      <param name="count">El número de nodos que se van a colocar en la matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
      <returns>El número de nodos colocados en la matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Boolean[],System.Int32,System.Int32)">
      <summary>Lee las apariciones repetidas de los nodos <see cref="T:System.Boolean" /> en una matriz con tipo.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array">Matriz en la que se colocan los nodos.</param>
      <param name="offset">Índice inicial de la matriz.</param>
      <param name="count">El número de nodos que se van a colocar en la matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
      <returns>El número de nodos colocados en la matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.DateTime[],System.Int32,System.Int32)">
      <summary>Lee las apariciones repetidas de los nodos <see cref="T:System.DateTime" /> en una matriz con tipo.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array">Matriz en la que se colocan los nodos.</param>
      <param name="offset">Índice inicial de la matriz.</param>
      <param name="count">El número de nodos que se van a colocar en la matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
      <returns>El número de nodos colocados en la matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Decimal[],System.Int32,System.Int32)">
      <summary>Lee las apariciones repetidas de los nodos <see cref="T:System.Decimal" /> en una matriz con tipo.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array">Matriz en la que se colocan los nodos.</param>
      <param name="offset">Índice inicial de la matriz.</param>
      <param name="count">El número de nodos que se van a colocar en la matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
      <returns>El número de nodos colocados en la matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Double[],System.Int32,System.Int32)">
      <summary>Lee las apariciones repetidas del tipo de nodos <see cref="T:System.Double" /> en una matriz con tipo.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array">Matriz en la que se colocan los nodos.</param>
      <param name="offset">Índice inicial de la matriz.</param>
      <param name="count">El número de nodos que se van a colocar en la matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
      <returns>El número de nodos colocados en la matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Guid[],System.Int32,System.Int32)">
      <summary>Lee las apariciones repetidas de los nodos <see cref="T:System.Guid" /> en una matriz con tipo.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array">Matriz en la que se colocan los nodos.</param>
      <param name="offset">Índice inicial de la matriz.</param>
      <param name="count">El número de nodos que se van a colocar en la matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
      <returns>El número de nodos colocados en la matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int16[],System.Int32,System.Int32)">
      <summary>Lee las apariciones repetidas de los enteros <see langword="short" /> en una matriz con tipo.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array">Matriz en la que se colocan los enteros.</param>
      <param name="offset">Índice inicial de la matriz.</param>
      <param name="count">El número de enteros que se van a colocar en la matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
      <returns>El número de enteros colocados en la matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int32[],System.Int32,System.Int32)">
      <summary>Lee las apariciones repetidas de los enteros en una matriz con tipo.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array">Matriz en la que se colocan los enteros.</param>
      <param name="offset">Índice inicial de la matriz.</param>
      <param name="count">El número de enteros que se van a colocar en la matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
      <returns>El número de enteros colocados en la matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int64[],System.Int32,System.Int32)">
      <summary>Lee las apariciones repetidas de los enteros <see langword="long" /> en una matriz con tipo.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array">Matriz en la que se colocan los enteros.</param>
      <param name="offset">Índice inicial de la matriz.</param>
      <param name="count">El número de enteros que se van a colocar en la matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
      <returns>El número de enteros colocados en la matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Single[],System.Int32,System.Int32)">
      <summary>Lee las apariciones repetidas de los números <see langword="float" /> en una matriz con tipo.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array">La matriz en la que se colocan los números float.</param>
      <param name="offset">Índice inicial de la matriz.</param>
      <param name="count">El número de números float que se van a colocar en la matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
      <returns>El número de números float colocados en la matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.TimeSpan[],System.Int32,System.Int32)">
      <summary>Lee las apariciones repetidas de los nodos <see cref="T:System.TimeSpan" /> en una matriz con tipo.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array">Matriz en la que se colocan los nodos.</param>
      <param name="offset">Índice inicial de la matriz.</param>
      <param name="count">El número de nodos que se van a colocar en la matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
      <returns>El número de nodos colocados en la matriz.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadBooleanArray(System.String,System.String)">
      <summary>Lee las apariciones repetidas de los nodos <see cref="T:System.Boolean" /> en una matriz con tipo.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <returns>Una matriz <see cref="T:System.Boolean" /> de los nodos <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadBooleanArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Lee las apariciones repetidas de los nodos <see cref="T:System.Boolean" /> en una matriz con tipo.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <returns>Una matriz <see cref="T:System.Boolean" /> de los nodos <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Convierte el contenido de un nodo en un tipo especificado.</summary>
      <param name="type">El <see cref="T:System.Type" /> del valor que se va a devolver.</param>
      <param name="namespaceResolver">Objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> que se utiliza para resolver prefijos de espacios de nombres relacionados con la conversión de tipos. Por ejemplo, se puede utilizar al convertir un objeto <see cref="T:System.Xml.XmlQualifiedName" /> en <c>xs:string</c>. Este valor puede ser una referencia nula.</param>
      <returns>Contenido de texto concatenado o valor de atributo convertido en el tipo solicitado.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsBase64">
      <summary>Lee el contenido y devuelve los bytes binarios descodificados en Base64.</summary>
      <exception cref="T:System.Xml.XmlException">El tamaño de la matriz es mayor que la cuota de MaxArrayLength para este lector.</exception>
      <returns>Una matriz de bytes que contiene  los bytes binarios Base64 descodificados.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsBinHex">
      <summary>Lee el contenido y devuelve los bytes binarios descodificados de <see langword="BinHex" />.</summary>
      <exception cref="T:System.Xml.XmlException">El tamaño de la matriz es mayor que <see cref="F:System.Int32.MaxValue" />.</exception>
      <returns>Una matriz de bytes que contiene los bytes binarios Base64 descodificados <see langword="BinHex" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsBinHex(System.Int32)">
      <summary>Lee el contenido y devuelve los bytes binarios descodificados de <see langword="BinHex" />.</summary>
      <param name="maxByteArrayContentLength">La longitud máxima permitida de la matriz.</param>
      <exception cref="T:System.Xml.XmlException">El tamaño de la matriz es mayor que <paramref name="maxByteArrayContentLength" />.</exception>
      <returns>Una matriz de bytes que contiene los bytes binarios Base64 descodificados <see langword="BinHex" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsChars(System.Char[],System.Int32,System.Int32)">
      <summary>Lee el contenido en una matriz de <see langword="char" />.</summary>
      <param name="chars">La matriz en la que se colocan los caracteres.</param>
      <param name="offset">Índice inicial de la matriz.</param>
      <param name="count">El número de caracteres que se van a colocar en la matriz.</param>
      <returns>Número de caracteres que se han leído.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsDecimal">
      <summary>Convierte el contenido de un nodo en <see langword="decimal" />.</summary>
      <returns>La representación <see langword="decimal" /> del contenido de nodo.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsFloat">
      <summary>Convierte el contenido de un nodo en <see langword="float" />.</summary>
      <returns>La representación <see langword="float" /> del contenido de nodo.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsGuid">
      <summary>Convierte el contenido de un nodo en <see langword="guid" />.</summary>
      <returns>La representación <see langword="guid" /> del contenido de nodo.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsQualifiedName(System.String@,System.String@)">
      <summary>Convierte el contenido de un nodo en una representación del nombre completo.</summary>
      <param name="localName">La parte <see cref="P:System.Xml.XmlReader.LocalName" /> del nombre completo (<see langword="out" /> parámetro).</param>
      <param name="namespaceUri">La parte <see cref="P:System.Xml.XmlReader.NamespaceURI" /> del nombre completo (<see langword="out" /> parámetro).</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString">
      <summary>Convierte el contenido de un nodo en una cadena.</summary>
      <returns>El contenido del nodo en una representación de cadena.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.Int32)">
      <summary>Convierte el contenido de un nodo en una cadena.</summary>
      <param name="maxStringContentLength">La longitud máxima permitida de la cadena.</param>
      <returns>El contenido del nodo en una representación de cadena.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.String[],System.Int32@)">
      <summary>Convierte el contenido de un nodo en una cadena.</summary>
      <param name="strings">La matriz de cadenas con la que coincide el contenido.</param>
      <param name="index">El índice de la entrada de <paramref name="strings" /> que coincide con el contenido.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strings" /> es <see langword="null" />.

o bien

Una entrada en <paramref name="strings" /> es <see langword="null" />.</exception>
      <returns>El contenido del nodo en una representación de cadena.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.Xml.XmlDictionaryString[],System.Int32@)">
      <summary>Convierte el contenido de un nodo en una cadena.</summary>
      <param name="strings">La matriz de objetos <see cref="T:System.Xml.XmlDictionaryString" /> con la que se compara el contenido.</param>
      <param name="index">El índice de la entrada de <paramref name="strings" /> que coincide con el contenido.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strings" /> es <see langword="null" />.

o bien

Una entrada en <paramref name="strings" /> es <see langword="null" />.</exception>
      <returns>El contenido del nodo en una representación de cadena.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsTimeSpan">
      <summary>Convierte el contenido de un nodo en <see cref="T:System.TimeSpan" />.</summary>
      <returns>La representación <see cref="T:System.TimeSpan" /> del contenido del nodo.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsUniqueId">
      <summary>Convierte el contenido de un nodo en un identificador único.</summary>
      <returns>El contenido del nodo representado como un identificador único.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDateTimeArray(System.String,System.String)">
      <summary>Convierte el contenido de un nodo en una matriz <see cref="T:System.DateTime" />.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <returns>El contenido del nodo representado como una matriz <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDateTimeArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Convierte el contenido de un nodo en una matriz <see cref="T:System.DateTime" />.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <returns>El contenido del nodo representado como una matriz <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDecimalArray(System.String,System.String)">
      <summary>Convierte el contenido de un nodo en una matriz <see cref="T:System.Decimal" />.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <returns>El contenido del nodo representado como una matriz <see cref="T:System.Decimal" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDecimalArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Convierte el contenido de un nodo en una matriz <see cref="T:System.Decimal" />.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <returns>El contenido del nodo representado como una matriz <see cref="T:System.Decimal" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDoubleArray(System.String,System.String)">
      <summary>Convierte el contenido de un nodo en una matriz <see cref="T:System.Double" />.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <returns>El contenido del nodo representado como una matriz <see cref="T:System.Double" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDoubleArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Convierte el contenido de un nodo en una matriz <see cref="T:System.Double" />.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <returns>El contenido del nodo representado como una matriz <see cref="T:System.Double" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBase64">
      <summary>Convierte el contenido de un nodo en una matriz de bytes de Base64.</summary>
      <returns>El contenido del nodo representado como una matriz de bytes de Base64.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBinHex">
      <summary>Convierte el contenido de un nodo en una matriz de <see langword="BinHex" /> bytes.</summary>
      <returns>El contenido del nodo representado como una matriz de <see langword="BinHex" /> bytes.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBoolean">
      <summary>Convierte el contenido de un elemento en <see cref="T:System.Boolean" />.</summary>
      <returns>El contenido del nodo representado como un <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDateTime">
      <summary>Convierte el contenido de un elemento en <see cref="T:System.DateTime" />.</summary>
      <exception cref="T:System.ArgumentException">El elemento no tiene un formato válido.</exception>
      <exception cref="T:System.FormatException">El elemento no tiene un formato válido.</exception>
      <returns>El contenido del nodo representado como un <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDecimal">
      <summary>Convierte el contenido de un elemento en <see cref="T:System.Decimal" />.</summary>
      <returns>El contenido del nodo representado como un <see cref="T:System.Decimal" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDouble">
      <summary>Convierte el contenido de un elemento en <see cref="T:System.Double" />.</summary>
      <returns>El contenido del nodo representado como un <see cref="T:System.Double" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsFloat">
      <summary>Convierte el contenido de un elemento en un número de punto flotante (<see cref="T:System.Single" />).</summary>
      <returns>El contenido del nodo representado como un número de punto flotante (<see cref="T:System.Single" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsGuid">
      <summary>Convierte el contenido de un elemento en <see cref="T:System.Guid" />.</summary>
      <exception cref="T:System.ArgumentException">El elemento no tiene un formato válido.</exception>
      <exception cref="T:System.FormatException">El elemento no tiene un formato válido.</exception>
      <returns>El contenido del nodo representado como un <see cref="T:System.Guid" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsInt">
      <summary>Convierte el contenido de un elemento en un entero (<see cref="T:System.Int32" />).</summary>
      <returns>El contenido del nodo representado como un entero (<see cref="T:System.Int32" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsLong">
      <summary>Convierte el contenido de un elemento en un entero largo (<see cref="T:System.Int64" />).</summary>
      <returns>El contenido del nodo representado como un entero largo (<see cref="T:System.Int64" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsString">
      <summary>Convierte el contenido de un elemento en <see cref="T:System.String" />.</summary>
      <returns>El contenido del nodo representado como un <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsTimeSpan">
      <summary>Convierte el contenido de un elemento en <see cref="T:System.TimeSpan" />.</summary>
      <returns>El contenido del nodo representado como un <see cref="T:System.TimeSpan" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsUniqueId">
      <summary>Convierte el contenido de un elemento en un identificador único.</summary>
      <exception cref="T:System.ArgumentException">El elemento no tiene un formato válido.</exception>
      <exception cref="T:System.FormatException">El elemento no tiene un formato válido.</exception>
      <returns>El contenido del nodo representado como un identificador único.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement">
      <summary>Comprueba si el nodo actual es un elemento y desplaza el lector hasta el siguiente nodo.</summary>
      <exception cref="T:System.Xml.XmlException">
        <see cref="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" /> devuelve <see langword="false" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.String)">
      <summary>Comprueba si el nodo de contenido actual es un elemento con la propiedad <paramref name="name" /> especificada y desplaza el lector hasta el siguiente nodo.</summary>
      <param name="name">Nombre completo del elemento.</param>
      <exception cref="T:System.Xml.XmlException">
        <see cref="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" /> devuelve <see langword="false" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.String,System.String)">
      <summary>Comprueba si el nodo actual es un elemento con los <paramref name="localName" /> y <paramref name="namespaceUri" /> especificados y desplaza el lector al siguiente nodo.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <exception cref="T:System.Xml.XmlException">
        <see cref="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" /> devuelve <see langword="false" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Comprueba si el nodo actual es un elemento con los <paramref name="localName" /> y <paramref name="namespaceUri" /> especificados y desplaza el lector al siguiente nodo.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <exception cref="T:System.Xml.XmlException">
        <see cref="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" /> devuelve <see langword="false" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadGuidArray(System.String,System.String)">
      <summary>Lee el contenido de una serie de nodos con los elementos <paramref name="localName" /> y <paramref name="namespaceUri" /> especificados en una matriz de <see cref="T:System.Guid" />.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <returns>Matriz de <see cref="T:System.Guid" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadGuidArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Lee el contenido de una serie de nodos con los elementos <paramref name="localName" /> y <paramref name="namespaceUri" /> especificados en una matriz de <see cref="T:System.Guid" />.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <returns>Matriz de <see cref="T:System.Guid" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt16Array(System.String,System.String)">
      <summary>Lee el contenido de una serie de nodos con <paramref name="localName" /> y <paramref name="namespaceUri" /> especificados en una matriz de enteros <see langword="short" /> (<see cref="T:System.Int16" />).</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <returns>Una matriz de enteros <see langword="short" /> (<see cref="T:System.Int16" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt16Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Lee el contenido de una serie de nodos con <paramref name="localName" /> y <paramref name="namespaceUri" /> especificados en una matriz de enteros <see langword="short" /> (<see cref="T:System.Int16" />).</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <returns>Una matriz de enteros <see langword="short" /> (<see cref="T:System.Int16" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt32Array(System.String,System.String)">
      <summary>Lee el contenido de una serie de nodos con <paramref name="localName" /> y <paramref name="namespaceUri" /> especificados en una matriz de enteros (<see cref="T:System.Int32" />).</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <returns>Una matriz de enteros (<see cref="T:System.Int32" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt32Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Lee el contenido de una serie de nodos con <paramref name="localName" /> y <paramref name="namespaceUri" /> especificados en una matriz de enteros (<see cref="T:System.Int32" />).</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <returns>Una matriz de enteros (<see cref="T:System.Int32" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt64Array(System.String,System.String)">
      <summary>Lee el contenido de una serie de nodos con <paramref name="localName" /> y <paramref name="namespaceUri" /> especificados en una matriz de enteros <see langword="long" /> (<see cref="T:System.Int64" />).</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <returns>Una matriz de enteros <see langword="long" /> (<see cref="T:System.Int64" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt64Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Lee el contenido de una serie de nodos con <paramref name="localName" /> y <paramref name="namespaceUri" /> especificados en una matriz de enteros <see langword="long" /> (<see cref="T:System.Int64" />).</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <returns>Una matriz de enteros <see langword="long" /> (<see cref="T:System.Int64" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadSingleArray(System.String,System.String)">
      <summary>Lee el contenido de una serie de nodos con <paramref name="localName" /> y <paramref name="namespaceUri" /> especificados en una matriz de números <see langword="float" /> (<see cref="T:System.Single" />).</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <returns>Una matriz de números <see langword="float" /> (<see cref="T:System.Single" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadSingleArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Lee el contenido de una serie de nodos con <paramref name="localName" /> y <paramref name="namespaceUri" /> especificados en una matriz de números <see langword="float" /> (<see cref="T:System.Single" />).</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <returns>Una matriz de números <see langword="float" /> (<see cref="T:System.Single" />).</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Comprueba si el nodo actual es un elemento con los <paramref name="localName" /> y <paramref name="namespaceUri" /> especificados y desplaza el lector hasta el siguiente nodo.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadString">
      <summary>Lee el contenido del nodo actual en una cadena.</summary>
      <exception cref="T:System.InvalidOperationException">No puede leer el contenido del nodo actual.</exception>
      <exception cref="T:System.Xml.XmlException">Se ha superado la longitud de cadena máxima permitida.</exception>
      <returns>Una cadena que contiene el contenido del nodo actual.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadString(System.Int32)">
      <summary>Lee el contenido del nodo actual en una cadena con una longitud máxima determinada.</summary>
      <param name="maxStringContentLength">Longitud máxima de cadena permitida.</param>
      <exception cref="T:System.InvalidOperationException">No puede leer el contenido del nodo actual.</exception>
      <exception cref="T:System.Xml.XmlException">Se ha superado la longitud de cadena máxima permitida.</exception>
      <returns>Una cadena que contiene el contenido del nodo actual.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadTimeSpanArray(System.String,System.String)">
      <summary>Lee el contenido de una serie de nodos con los elementos <paramref name="localName" /> y <paramref name="namespaceUri" /> especificados en una matriz de <see cref="T:System.TimeSpan" />.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <returns>Una matriz de <see cref="T:System.TimeSpan" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadTimeSpanArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Lee el contenido de una serie de nodos con los elementos <paramref name="localName" /> y <paramref name="namespaceUri" /> especificados en una matriz de <see cref="T:System.TimeSpan" />.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <returns>Una matriz de <see cref="T:System.TimeSpan" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadValueAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Sin implementar.</summary>
      <param name="buffer">El búfer del que se lee.</param>
      <param name="offset">La posición inicial de la que leer en <paramref name="buffer" />.</param>
      <param name="count">Número de bytes que se pueden leer de <paramref name="buffer" />.</param>
      <exception cref="T:System.NotSupportedException">Siempre.</exception>
      <returns>Sin implementar.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])">
      <summary>Este método aún no se ha implementado.</summary>
      <param name="stream">Flujo del que se va a leer.</param>
      <param name="includeComments">Determina si los comentarios se incluyen.</param>
      <param name="inclusivePrefixes">Los prefijos que se van a incluir.</param>
      <exception cref="T:System.NotSupportedException">Siempre.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetArrayLength(System.Int32@)">
      <summary>No implementado en esta clase (siempre devuelve <see langword="false" />). Se puede invalidar en clases derivadas.</summary>
      <param name="count">A menos que se invalide en una clase derivada, devuelve 0.</param>
      <returns>
        <see langword="false" />, a menos que se invalide en una clase derivada.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetBase64ContentLength(System.Int32@)">
      <summary>No implementado en esta clase (siempre devuelve <see langword="false" />). Se puede invalidar en clases derivadas.</summary>
      <param name="length">A menos que se invalide en una clase derivada, devuelve 0.</param>
      <returns>
        <see langword="false" />, a menos que se invalide en una clase derivada.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetLocalNameAsDictionaryString(System.Xml.XmlDictionaryString@)">
      <summary>No implementado en esta clase (siempre devuelve <see langword="false" />). Se puede invalidar en clases derivadas.</summary>
      <param name="localName">Devuelve <see langword="null" />, a menos que se invalide en una clase derivada. .</param>
      <returns>
        <see langword="false" />, a menos que se invalide en una clase derivada.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetNamespaceUriAsDictionaryString(System.Xml.XmlDictionaryString@)">
      <summary>No implementado en esta clase (siempre devuelve <see langword="false" />). Se puede invalidar en clases derivadas.</summary>
      <param name="namespaceUri">Devuelve <see langword="null" />, a menos que se invalide en una clase derivada.</param>
      <returns>
        <see langword="false" />, a menos que se invalide en una clase derivada.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetValueAsDictionaryString(System.Xml.XmlDictionaryString@)">
      <summary>No implementado en esta clase (siempre devuelve <see langword="false" />). Se puede invalidar en clases derivadas.</summary>
      <param name="value">Devuelve <see langword="null" />, a menos que se invalide en una clase derivada.</param>
      <returns>
        <see langword="false" />, a menos que se invalide en una clase derivada.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReader.CanCanonicalize">
      <summary>Esta propiedad devuelve siempre <see langword="false" />. Sus clases derivadas pueden invalidarse para devolver <see langword="true" /> si admiten la canonización.</summary>
      <returns>Devuelve <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReader.Quotas">
      <summary>Obtiene los valores de cuota que se aplican a la instancia actual de esta clase.</summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> que se aplica a la instancia actual de esta clase.</returns>
    </member>
    <member name="T:System.Xml.XmlDictionaryReaderQuotas">
      <summary>Contiene los valores de cuota configurables para XmlDictionaryReaders.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReaderQuotas.#ctor">
      <summary>Crea una nueva instancia de esta clase.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReaderQuotas.CopyTo(System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Establece las propiedades en una instancia de cuotas pasadas, basada en los valores de esta instancia.</summary>
      <param name="quotas">La instancia <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> a la cual se copian los valores.</param>
      <exception cref="T:System.InvalidOperationException">Intentar <see langword="set" /> el valor, pero los valores de cuota son de solo lectura para la instancia pasada.</exception>
      <exception cref="T:System.ArgumentNullException">En el destino <paramref name="quotas" /> se pasa <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.Max">
      <summary>Obtiene una instancia de esta clase con todas las propiedades establecidas en los valores máximos.</summary>
      <returns>Una instancia de <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> con propiedades establecidas en <see cref="F:System.Int32.MaxValue" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxArrayLength">
      <summary>Obtiene o establece la longitud máxima permitida de matriz.</summary>
      <exception cref="T:System.InvalidOperationException">Intentar <see langword="set" /> el valor, pero los valores de cuota son de solo lectura para esta instancia.</exception>
      <exception cref="T:System.ArgumentException">Intentar <see langword="set" /> el valor menor que cero.</exception>
      <returns>La Longitud máxima permitida de la matriz. El valor predeterminado es 16384.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead">
      <summary>Obtiene o establece el número máximo permitido de bytes devueltos para cada lectura.</summary>
      <exception cref="T:System.InvalidOperationException">Intentar <see langword="set" /> el valor, pero los valores de cuota son de solo lectura para esta instancia.</exception>
      <exception cref="T:System.ArgumentException">Intentar <see langword="set" /> el valor menor que cero.</exception>
      <returns>El máximo permitido de bytes devueltos para cada lectura. El valor predeterminado es 4096.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxDepth">
      <summary>Obtiene o establece la profundidad máxima de nodos anidados.</summary>
      <exception cref="T:System.InvalidOperationException">Intentar <see langword="set" /> el valor y los valores de cuota son de solo lectura para esta instancia.</exception>
      <exception cref="T:System.ArgumentException">Intentar <see langword="set" /> el valor es menor que cero.</exception>
      <returns>La profundidad de nodo anidada máxima. El valor predeterminado es 32;</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxNameTableCharCount">
      <summary>Obtiene o establece el número máximo de caracteres permitidos en un nombre de tabla.</summary>
      <exception cref="T:System.InvalidOperationException">Intentar <see langword="set" /> el valor, pero los valores de cuota son de solo lectura para esta instancia.</exception>
      <exception cref="T:System.ArgumentException">Intentar <see langword="set" /> el valor menor que cero.</exception>
      <returns>Los caracteres máximos permitidos en un nombre de tabla. El valor predeterminado es 16384.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxStringContentLength">
      <summary>Obtiene o establece la longitud de cadena máxima devuelta por el lector.</summary>
      <exception cref="T:System.InvalidOperationException">Intentar <see langword="set" /> el valor, pero los valores de cuota son de solo lectura para esta instancia.</exception>
      <exception cref="T:System.ArgumentException">Intentar <see langword="set" /> el valor menor que cero.</exception>
      <returns>La longitud de cadena máxima devuelta por el lector. El valor predeterminado es 8192.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.ModifiedQuotas">
      <summary>Obtiene la cuotas modificadas para <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />.</summary>
      <returns>Cuotas modificadas para <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />.</returns>
    </member>
    <member name="T:System.Xml.XmlDictionaryReaderQuotaTypes">
      <summary>Enumera los valores de cuota configurables para XmlDictionaryReaders.</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxArrayLength">
      <summary>Especifica la longitud máxima permitida de la matriz.</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxBytesPerRead">
      <summary>Especifica el máximo permitido de bytes devueltos para cada lectura.</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxDepth">
      <summary>Especifica la profundidad de nodo anidada máxima.</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxNameTableCharCount">
      <summary>Especifica los caracteres máximos permitidos en un nombre de tabla.</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxStringContentLength">
      <summary>Especifica la longitud de cadena máxima devuelta por el lector.</summary>
    </member>
    <member name="T:System.Xml.XmlDictionaryString">
      <summary>Representa una entrada almacenada en un <see cref="T:System.Xml.XmlDictionary" />.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryString.#ctor(System.Xml.IXmlDictionary,System.String,System.Int32)">
      <summary>Crea una instancia de esta clase.</summary>
      <param name="dictionary">
        <see cref="T:System.Xml.IXmlDictionary" /> que contiene esta instancia.</param>
      <param name="value">La cadena que es el valor de la entrada del diccionario.</param>
      <param name="key">El entero que es la clave de la entrada del diccionario.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dictionary" /> o <paramref name="value" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="key" /> es menor que 0 o mayor que <see cref="F:System.Int32.MaxValue" /> / 4.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryString.ToString">
      <summary>Muestra una representación de texto de este objeto.</summary>
      <returns>El valor de cadena para esta instancia de la clase.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Dictionary">
      <summary>Representa el <see cref="T:System.Xml.IXmlDictionary" /> pasado al constructor de esta instancia de <see cref="T:System.Xml.XmlDictionaryString" />.</summary>
      <returns>
        <see cref="T:System.Xml.IXmlDictionary" /> para esta entrada del diccionario.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Empty">
      <summary>Obtiene <see cref="T:System.Xml.XmlDictionaryString" /> que representa la cadena vacía.</summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryString" /> que representa la cadena vacía.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Key">
      <summary>Obtiene la clave entera para esta instancia de la clase.</summary>
      <returns>La clave entera para esta instancia de la clase.</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Value">
      <summary>Obtiene el valor de cadena para esta instancia de la clase.</summary>
      <returns>El valor de cadena para esta instancia de la clase.</returns>
    </member>
    <member name="T:System.Xml.XmlDictionaryWriter">
      <summary>Representa una clase abstracta de la que Windows Communication Foundation (WCF) se deriva <see cref="T:System.Xml.XmlWriter" /> para hacer serialización y deserialización.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream)">
      <summary>Crea una instancia de <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe el formato XML binario WCF.</summary>
      <param name="stream">Secuencia en la que se va a escribir.</param>
      <returns>Instancia de <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream,System.Xml.IXmlDictionary)">
      <summary>Crea una instancia de <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe el formato XML binario WCF.</summary>
      <param name="stream">Secuencia en la que se va a escribir.</param>
      <param name="dictionary">
        <see cref="T:System.Xml.XmlDictionary" /> que se va a utilizar como diccionario compartido.</param>
      <returns>Instancia de <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlBinaryWriterSession)">
      <summary>Crea una instancia de <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe el formato XML binario WCF.</summary>
      <param name="stream">Secuencia en la que se va a escribir.</param>
      <param name="dictionary">
        <see cref="T:System.Xml.XmlDictionary" /> que se va a utilizar como diccionario compartido.</param>
      <param name="session">Objeto <see cref="T:System.Xml.XmlBinaryWriterSession" /> que se va a usar.</param>
      <returns>Instancia de <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlBinaryWriterSession,System.Boolean)">
      <summary>Crea una instancia de <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe el formato XML binario WCF.</summary>
      <param name="stream">Secuencia a partir de la cual se lee.</param>
      <param name="dictionary">
        <see cref="T:System.Xml.XmlDictionary" /> que se va a utilizar como diccionario compartido.</param>
      <param name="session">Objeto <see cref="T:System.Xml.XmlBinaryWriterSession" /> que se va a usar.</param>
      <param name="ownsStream">Si es <see langword="true" /> para indicar que el sistema de escritura cerrará el flujo cuando haya terminado; de lo contrario, <see langword="false" />.</param>
      <returns>Instancia de <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateDictionaryWriter(System.Xml.XmlWriter)">
      <summary>Crea una instancia de <see cref="T:System.Xml.XmlDictionaryWriter" /> a partir de un <see cref="T:System.Xml.XmlWriter" /> existente.</summary>
      <param name="writer">Instancia de <see cref="T:System.Xml.XmlWriter" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> es <see langword="null" />.</exception>
      <returns>Instancia de <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateMtomWriter(System.IO.Stream,System.Text.Encoding,System.Int32,System.String)">
      <summary>Crea una instancia de la clase <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe XML en formato MTOM.</summary>
      <param name="stream">Secuencia en la que se va a escribir.</param>
      <param name="encoding">La codificación de caracteres de la secuencia.</param>
      <param name="maxSizeInBytes">El número máximo de bytes que están almacenados en búfer en el sistema de escritura.</param>
      <param name="startInfo">Un atributo en el encabezado SOAP de ContentType.</param>
      <returns>Instancia de <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateMtomWriter(System.IO.Stream,System.Text.Encoding,System.Int32,System.String,System.String,System.String,System.Boolean,System.Boolean)">
      <summary>Crea una instancia de la clase <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe XML en formato MTOM.</summary>
      <param name="stream">Secuencia en la que se va a escribir.</param>
      <param name="encoding">La codificación de caracteres de la secuencia.</param>
      <param name="maxSizeInBytes">El número máximo de bytes que están almacenados en búfer en el sistema de escritura.</param>
      <param name="startInfo">El tipo de contenido de la parte de MIME que contiene Infoset.</param>
      <param name="boundary">El límite de MIME en el mensaje.</param>
      <param name="startUri">El ID de contenido URI de la parte MIME que contiene Infoset.</param>
      <param name="writeMessageHeaders">
        <see langword="true" /> para escribir encabezados del mensaje.</param>
      <param name="ownsStream">Si es <see langword="true" /> para indicar que el sistema de escritura cerrará el flujo cuando haya terminado; de lo contrario, <see langword="false" />.</param>
      <returns>Instancia de <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateTextWriter(System.IO.Stream)">
      <summary>Crea una instancia de <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe texto XML.</summary>
      <param name="stream">Secuencia en la que se va a escribir.</param>
      <returns>Instancia de <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateTextWriter(System.IO.Stream,System.Text.Encoding)">
      <summary>Crea una instancia de <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe texto XML.</summary>
      <param name="stream">Secuencia en la que se va a escribir.</param>
      <param name="encoding">La codificación de caracteres del resultado.</param>
      <returns>Instancia de <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateTextWriter(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary>Crea una instancia de <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe texto XML.</summary>
      <param name="stream">Secuencia en la que se va a escribir.</param>
      <param name="encoding">La codificación de caracteres de la secuencia.</param>
      <param name="ownsStream">Si es <see langword="true" /> para indicar que el sistema de escritura cerrará el flujo cuando haya terminado; de lo contrario, <see langword="false" />.</param>
      <returns>Instancia de <see cref="T:System.Xml.XmlDictionaryWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.EndCanonicalization">
      <summary>Cuando lo implementa una clase derivada, detiene la colocación en forma canónica iniciada por la llamada al método <see cref="M:System.Xml.XmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])" /> coincidente.</summary>
      <exception cref="T:System.NotSupportedException">Este método aún no se ha implementado.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])">
      <summary>Cuando se implementa mediante una clase derivada, inicia la canonización.</summary>
      <param name="stream">Secuencia en la que se va a escribir.</param>
      <param name="includeComments">
        <see langword="true" /> para incluir comentarios; en caso contrario, <see langword="false" />.</param>
      <param name="inclusivePrefixes">Los prefijos que se van a incluir.</param>
      <exception cref="T:System.NotSupportedException">Este método aún no se ha implementado.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Boolean[],System.Int32,System.Int32)">
      <summary>Escribe los nodos de una matriz <see cref="T:System.Boolean" />.</summary>
      <param name="prefix">El prefijo del espacio de nombres.</param>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array">La matriz que contiene los datos.</param>
      <param name="offset">Índice inicial de la matriz.</param>
      <param name="count">Número de valores para escribir desde la matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.DateTime[],System.Int32,System.Int32)">
      <summary>Escribe los nodos de una matriz <see cref="T:System.DateTime" />.</summary>
      <param name="prefix">El prefijo del espacio de nombres.</param>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array">La matriz que contiene los nodos.</param>
      <param name="offset">Índice inicial de la matriz.</param>
      <param name="count">El número de nodos para recibir de la matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Decimal[],System.Int32,System.Int32)">
      <summary>Escribe los nodos de una matriz <see cref="T:System.Decimal" />.</summary>
      <param name="prefix">El prefijo del espacio de nombres.</param>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array">La matriz que contiene los nodos.</param>
      <param name="offset">Índice inicial de la matriz.</param>
      <param name="count">El número de nodos para recibir de la matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Double[],System.Int32,System.Int32)">
      <summary>Escribe los nodos de una matriz <see cref="T:System.Double" />.</summary>
      <param name="prefix">El prefijo del espacio de nombres.</param>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array">La matriz que contiene los nodos.</param>
      <param name="offset">Índice inicial de la matriz.</param>
      <param name="count">El número de nodos para recibir de la matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Guid[],System.Int32,System.Int32)">
      <summary>Escribe los nodos de una matriz <see cref="T:System.Guid" />.</summary>
      <param name="prefix">El prefijo del espacio de nombres.</param>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array">La matriz que contiene los nodos.</param>
      <param name="offset">Índice inicial de la matriz.</param>
      <param name="count">El número de nodos para recibir de la matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int16[],System.Int32,System.Int32)">
      <summary>Escribe los nodos de una matriz <see cref="T:System.Int16" />.</summary>
      <param name="prefix">El prefijo del espacio de nombres.</param>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array">La matriz que contiene los nodos.</param>
      <param name="offset">Índice inicial de la matriz.</param>
      <param name="count">El número de nodos para recibir de la matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int32[],System.Int32,System.Int32)">
      <summary>Escribe los nodos de una matriz <see cref="T:System.Int32" />.</summary>
      <param name="prefix">El prefijo del espacio de nombres.</param>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array">La matriz que contiene los nodos.</param>
      <param name="offset">Índice inicial de la matriz.</param>
      <param name="count">El número de nodos para recibir de la matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int64[],System.Int32,System.Int32)">
      <summary>Escribe los nodos de una matriz <see cref="T:System.Int64" />.</summary>
      <param name="prefix">El prefijo del espacio de nombres.</param>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array">La matriz que contiene los nodos.</param>
      <param name="offset">Índice inicial de la matriz.</param>
      <param name="count">El número de nodos para recibir de la matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Single[],System.Int32,System.Int32)">
      <summary>Escribe los nodos de una matriz <see cref="T:System.Single" />.</summary>
      <param name="prefix">El prefijo del espacio de nombres.</param>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array">La matriz que contiene los nodos.</param>
      <param name="offset">Índice inicial de la matriz.</param>
      <param name="count">El número de nodos para recibir de la matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.TimeSpan[],System.Int32,System.Int32)">
      <summary>Escribe los nodos de una matriz <see cref="T:System.TimeSpan" />.</summary>
      <param name="prefix">El prefijo del espacio de nombres.</param>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array">La matriz que contiene los nodos.</param>
      <param name="offset">Índice inicial de la matriz.</param>
      <param name="count">El número de nodos para recibir de la matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Boolean[],System.Int32,System.Int32)">
      <summary>Escribe los nodos de una matriz <see cref="T:System.Boolean" />.</summary>
      <param name="prefix">El prefijo del espacio de nombres.</param>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array">La matriz que contiene los nodos.</param>
      <param name="offset">Índice inicial de la matriz.</param>
      <param name="count">El número de nodos para recibir de la matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.DateTime[],System.Int32,System.Int32)">
      <summary>Escribe los nodos de una matriz <see cref="T:System.DateTime" />.</summary>
      <param name="prefix">El prefijo del espacio de nombres.</param>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array">La matriz que contiene los nodos.</param>
      <param name="offset">Índice inicial de la matriz.</param>
      <param name="count">El número de nodos para recibir de la matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Decimal[],System.Int32,System.Int32)">
      <summary>Escribe los nodos de una matriz <see cref="T:System.Decimal" />.</summary>
      <param name="prefix">El prefijo del espacio de nombres.</param>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array">La matriz que contiene los nodos.</param>
      <param name="offset">Índice inicial de la matriz.</param>
      <param name="count">El número de nodos para recibir de la matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Double[],System.Int32,System.Int32)">
      <summary>Escribe los nodos de una matriz <see cref="T:System.Double" />.</summary>
      <param name="prefix">El prefijo del espacio de nombres.</param>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array">La matriz que contiene los nodos.</param>
      <param name="offset">Índice inicial de la matriz.</param>
      <param name="count">El número de nodos para recibir de la matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Guid[],System.Int32,System.Int32)">
      <summary>Escribe los nodos de una matriz <see cref="T:System.Guid" />.</summary>
      <param name="prefix">El prefijo del espacio de nombres.</param>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array">La matriz que contiene los nodos.</param>
      <param name="offset">Índice inicial de la matriz.</param>
      <param name="count">El número de nodos para recibir de la matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int16[],System.Int32,System.Int32)">
      <summary>Escribe los nodos de una matriz <see cref="T:System.Int16" />.</summary>
      <param name="prefix">El prefijo del espacio de nombres.</param>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array">La matriz que contiene los nodos.</param>
      <param name="offset">Índice inicial de la matriz.</param>
      <param name="count">El número de nodos para recibir de la matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int32[],System.Int32,System.Int32)">
      <summary>Escribe los nodos de una matriz <see cref="T:System.Int32" />.</summary>
      <param name="prefix">El prefijo del espacio de nombres.</param>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array">La matriz que contiene los nodos.</param>
      <param name="offset">Índice inicial de la matriz.</param>
      <param name="count">El número de nodos para recibir de la matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int64[],System.Int32,System.Int32)">
      <summary>Escribe los nodos de una matriz <see cref="T:System.Int64" />.</summary>
      <param name="prefix">El prefijo del espacio de nombres.</param>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array">La matriz que contiene los nodos.</param>
      <param name="offset">Índice inicial de la matriz.</param>
      <param name="count">El número de nodos para recibir de la matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Single[],System.Int32,System.Int32)">
      <summary>Escribe los nodos de una matriz <see cref="T:System.Single" />.</summary>
      <param name="prefix">El prefijo del espacio de nombres.</param>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array">La matriz que contiene los nodos.</param>
      <param name="offset">Índice inicial de la matriz.</param>
      <param name="count">El número de nodos para recibir de la matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.TimeSpan[],System.Int32,System.Int32)">
      <summary>Escribe los nodos de una matriz <see cref="T:System.TimeSpan" />.</summary>
      <param name="prefix">El prefijo del espacio de nombres.</param>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <param name="array">La matriz que contiene los nodos.</param>
      <param name="offset">Índice inicial de la matriz.</param>
      <param name="count">El número de nodos para recibir de la matriz.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> es &lt; 0 o &gt; la longitud de <paramref name="array" />.

o bien

<paramref name="count" /> es &lt; 0 o &gt; la longitud de <paramref name="array" /> menos <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteAttributeString(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary>Escribe un nombre completo de atributo y valor.</summary>
      <param name="prefix">Prefijo del atributo.</param>
      <param name="localName">Nombre local del atributo.</param>
      <param name="namespaceUri">URI de espacio de nombres del atributo.</param>
      <param name="value">El atributo.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteAttributeString(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary>Escribe un nombre completo de atributo y valor.</summary>
      <param name="localName">Nombre local del atributo.</param>
      <param name="namespaceUri">URI de espacio de nombres del atributo.</param>
      <param name="value">El atributo.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
      <summary>Codifica asincrónicamente los bytes binarios especificados en Base64 y escribe el texto resultante.</summary>
      <param name="buffer">Matriz de bytes que se va a codificar.</param>
      <param name="index">Posición en el búfer que indica el inicio de los bytes que se van a escribir.</param>
      <param name="count">Número de bytes que se van a escribir.</param>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlDictionaryWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.

o bien

Se llamó un método asincrónico de <see cref="T:System.Xml.XmlDictionaryWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
      <returns>Tarea que representa la operación <see langword="WriteBase64" /> asincrónica.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteElementString(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary>Escribe un elemento con un contenido de texto.</summary>
      <param name="prefix">Prefijo del elemento.</param>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <param name="value">El contenido del elemento.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteElementString(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary>Escribe un elemento con un contenido de texto.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <param name="value">El contenido del elemento.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteNode(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary>Escribe el nodo XML actual de <see cref="T:System.Xml.XmlDictionaryReader" />.</summary>
      <param name="reader">
        <see cref="T:System.Xml.XmlDictionaryReader" />.</param>
      <param name="defattr">Es <see langword="true" /> para copiar los atributos predeterminados de <see langword="XmlReader" />; en caso contrario, es <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
      <summary>Escribe el nodo XML actual de <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">
        <see cref="T:System.Xml.XmlReader" />.</param>
      <param name="defattr">Es <see langword="true" /> para copiar los atributos predeterminados de <see cref="T:System.Xml.XmlReader" />; en caso contrario, es <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteQualifiedName(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Escribe el nombre completo del espacio de nombres. Este método busca un prefijo que está en el ámbito del espacio de nombres especificado.</summary>
      <param name="localName">El nombre local del nombre calificado.</param>
      <param name="namespaceUri">El espacio de nombres URI del nombre calificado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localName" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartAttribute(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Escribe el inicio de un atributo con el URI de espacio de nombres, el prefijo y el nombre local especificados.</summary>
      <param name="prefix">El prefijo del espacio de nombres.</param>
      <param name="localName">Nombre local del atributo.</param>
      <param name="namespaceUri">URI de espacio de nombres del atributo.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Escribe el inicio de un atributo con el URI de espacio de nombres y el nombre local especificados.</summary>
      <param name="localName">Nombre local del atributo.</param>
      <param name="namespaceUri">URI de espacio de nombres del atributo.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartElement(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Escribe la etiqueta de apertura especificada y la asocia al espacio de nombres y al prefijo especificados.</summary>
      <param name="prefix">Prefijo del elemento.</param>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <exception cref="T:System.InvalidOperationException">El sistema de escritura está cerrado.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Escribe la etiqueta de apertura especificada y la asocia al espacio de nombres especificado.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceUri">Identificador URI de espacio de nombres del elemento.</param>
      <exception cref="T:System.InvalidOperationException">El sistema de escritura está cerrado.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteString(System.Xml.XmlDictionaryString)">
      <summary>Escribe el contenido de texto especificado.</summary>
      <param name="value">Texto que se va a escribir.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteTextNode(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary>Escribe el nodo de texto en el que se coloca <see cref="T:System.Xml.XmlDictionaryReader" /> actualmente.</summary>
      <param name="reader">
        <see cref="T:System.Xml.XmlDictionaryReader" /> del que obtener el valor de texto.</param>
      <param name="isAttribute">
        <see langword="true" /> para indicar que el lector se coloca en un valor de atributo o contenido de elemento; de lo contrario <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Guid)">
      <summary>Escribe un valor <see cref="T:System.Guid" />.</summary>
      <param name="value">Valor <see cref="T:System.Guid" /> que se va a escribir.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.TimeSpan)">
      <summary>Escribe un valor <see cref="T:System.TimeSpan" />.</summary>
      <param name="value">Valor <see cref="T:System.TimeSpan" /> que se va a escribir.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.IStreamProvider)">
      <summary>Escribe un valor de un <see cref="T:System.Xml.IStreamProvider" />.</summary>
      <param name="value">Valor <see cref="T:System.Xml.IStreamProvider" /> que se va a escribir.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="value" /> devuelve un objeto de secuencia <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlDictionaryWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.UniqueId)">
      <summary>Escribe un valor de identificador único.</summary>
      <param name="value">El valor de identificador único que se escribirá.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.XmlDictionaryString)">
      <summary>Escribe un valor <see cref="T:System.Xml.XmlDictionaryString" />.</summary>
      <param name="value">Valor de <see cref="T:System.Xml.XmlDictionaryString" />.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValueAsync(System.Xml.IStreamProvider)">
      <summary>De forma asincrónica escribe un valor de un <see cref="T:System.Xml.IStreamProvider" /> .</summary>
      <param name="value">Valor <see cref="T:System.Xml.IStreamProvider" /> que se va a escribir.</param>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlDictionaryWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.

o bien

Se llamó un método asincrónico de <see cref="T:System.Xml.XmlDictionaryWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
      <returns>Tarea que representa la operación <see langword="WriteValue" /> asincrónica.</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlAttribute(System.String,System.String)">
      <summary>Escribe un atributo XML estándar en el nodo vigente.</summary>
      <param name="localName">Nombre local del atributo.</param>
      <param name="value">El valor del atributo.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Escribe un atributo XML en el nodo actual.</summary>
      <param name="localName">Nombre local del atributo.</param>
      <param name="value">El valor del atributo.</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlnsAttribute(System.String,System.String)">
      <summary>Escribe un atributo de declaración de espacio de nombres.</summary>
      <param name="prefix">El prefijo que está enlazado al espacio de nombres especificado.</param>
      <param name="namespaceUri">El espacio de nombres al que está enlazado el prefijo.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="namespaceUri" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlnsAttribute(System.String,System.Xml.XmlDictionaryString)">
      <summary>Escribe un atributo de declaración de espacio de nombres.</summary>
      <param name="prefix">El prefijo que está enlazado al espacio de nombres especificado.</param>
      <param name="namespaceUri">El espacio de nombres al que está enlazado el prefijo.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="namespaceUri" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryWriter.CanCanonicalize">
      <summary>Esta propiedad devuelve siempre <see langword="false" />. Sus clases derivadas pueden invalidarse para devolver <see langword="true" /> si admiten la canonización.</summary>
      <returns>
        <see langword="false" /> en todos los casos.</returns>
    </member>
  </members>
</doc>