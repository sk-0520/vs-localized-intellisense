<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Threading.Thread</name>
  </assembly>
  <members>
    <member name="T:System.LocalDataStoreSlot">
      <summary vsli:raw="Encapsulates a memory slot to store local data. This class cannot be inherited.">Encapsula una ranura de memoria para almacenar datos locales. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.LocalDataStoreSlot.Finalize">
      <summary vsli:raw="Ensures that resources are freed and other cleanup operations are performed when the garbage collector reclaims the &lt;see cref=&quot;T:System.LocalDataStoreSlot&quot; /&gt; object.">Se asegura de que los recursos se liberan y que se llevan a cabo otras operaciones de limpieza cuando el recolector de elementos no utilizados recupere el objeto <see cref="T:System.LocalDataStoreSlot" />.</summary>
    </member>
    <member name="T:System.Threading.ApartmentState">
      <summary vsli:raw="Specifies the apartment state of a &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt;.">Especifica el estado de apartamento de un <see cref="T:System.Threading.Thread" />.</summary>
    </member>
    <member name="F:System.Threading.ApartmentState.MTA">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; will create and enter a multithreaded apartment.">
        <see cref="T:System.Threading.Thread" /> creará y entrará en un apartamento multiproceso.</summary>
    </member>
    <member name="F:System.Threading.ApartmentState.STA">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; will create and enter a single-threaded apartment.">
        <see cref="T:System.Threading.Thread" /> creará y entrará en un contenedor uniproceso.</summary>
    </member>
    <member name="F:System.Threading.ApartmentState.Unknown">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Threading.Thread.ApartmentState&quot; /&gt; property has not been set.">No se ha establecido el valor de la propiedad <see cref="P:System.Threading.Thread.ApartmentState" />.</summary>
    </member>
    <member name="T:System.Threading.CompressedStack">
      <summary vsli:raw="Provides methods for setting and capturing the compressed stack on the current thread. This class cannot be inherited.">Proporciona métodos para la configuración y captura de la pila comprimida en el subproceso actual. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Threading.CompressedStack.Capture">
      <summary vsli:raw="Captures the compressed stack from the current thread.">Captura la pila comprimida del subproceso actual.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.CompressedStack&quot; /&gt; object.">Un objeto <see cref="T:System.Threading.CompressedStack" />.</returns>
    </member>
    <member name="M:System.Threading.CompressedStack.CreateCopy">
      <summary vsli:raw="Creates a copy of the current compressed stack.">Crea una copia de la pila comprimida actual.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.CompressedStack&quot; /&gt; object representing the current compressed stack.">Objeto <see cref="T:System.Threading.CompressedStack" /> que representa la pila comprimida actual.</returns>
    </member>
    <member name="M:System.Threading.CompressedStack.GetCompressedStack">
      <summary vsli:raw="Gets the compressed stack for the current thread.">Obtiene la pila comprimida del subproceso actual.</summary>
      <exception cref="T:System.Security.SecurityException" vsli:raw="A caller in the call chain does not have permission to access unmanaged code.  &#xA;  &#xA; -or-  &#xA;  &#xA; The request for &lt;see cref=&quot;T:System.Security.Permissions.StrongNameIdentityPermission&quot; /&gt; failed.">Un llamador de la cadena de llamadas no tiene permiso para obtener acceso al código no administrado.  
  
o bien 
La solicitud de <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> no se ha realizado correctamente.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.CompressedStack&quot; /&gt; for the current thread.">
        <see cref="T:System.Threading.CompressedStack" /> del subproceso actual.</returns>
    </member>
    <member name="M:System.Threading.CompressedStack.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Sets the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object with the logical context information needed to recreate an instance of this execution context.">Establece el objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con la información de contexto lógica que se necesita para volver a crear una instancia de este contexto de ejecución.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; object to be populated with serialization information.">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que se debe llenar con información de serialización.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; structure representing the destination context of the serialization.">Estructura <see cref="T:System.Runtime.Serialization.StreamingContext" /> que representa el contexto de destino de la serialización.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;info&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="info" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.CompressedStack.Run(System.Threading.CompressedStack,System.Threading.ContextCallback,System.Object)">
      <summary vsli:raw="Runs a method in the specified compressed stack on the current thread.">Ejecuta un método en la pila comprimida especificada del subproceso actual.</summary>
      <param name="compressedStack" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CompressedStack&quot; /&gt; to set.">Objeto <see cref="T:System.Threading.CompressedStack" /> que se va a establecer.</param>
      <param name="callback" vsli:raw="A &lt;see cref=&quot;T:System.Threading.ContextCallback&quot; /&gt; that represents the method to be run in the specified security context.">
        <see cref="T:System.Threading.ContextCallback" /> que representa el método que se va a ejecutar en el contexto de seguridad especificado.</param>
      <param name="state" vsli:raw="The object to be passed to the callback method.">Objeto que se pasa al método de devolución de llamada.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;compressedStack&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="compressedStack" /> es <see langword="null" />.</exception>
    </member>
    <member name="T:System.Threading.ParameterizedThreadStart">
      <summary vsli:raw="Represents the method that executes on a &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt;.">Representa el método que se ejecuta en <see cref="T:System.Threading.Thread" />.</summary>
      <param name="obj" vsli:raw="An object that contains data for the thread procedure.">Objeto que contiene datos para el procedimiento de subproceso.</param>
    </member>
    <member name="T:System.Threading.Thread">
      <summary vsli:raw="Creates and controls a thread, sets its priority, and gets its status.">Crea y controla un subproceso, establece su prioridad y obtiene su estado.</summary>
    </member>
    <member name="M:System.Threading.Thread.#ctor(System.Threading.ParameterizedThreadStart)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; class, specifying a delegate that allows an object to be passed to the thread when the thread is started.">Inicializa una nueva instancia de la clase <see cref="T:System.Threading.Thread" />, especificando un delegado que permite pasar un objeto al subproceso cuando este último se inicia.</summary>
      <param name="start" vsli:raw="A delegate that represents the methods to be invoked when this thread begins executing.">Delegado que representa los métodos que deben invocarse cuando empieza a ejecutarse este subproceso.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;start&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="start" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Thread.#ctor(System.Threading.ParameterizedThreadStart,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; class, specifying a delegate that allows an object to be passed to the thread when the thread is started and specifying the maximum stack size for the thread.">Inicializa una nueva instancia de la clase <see cref="T:System.Threading.Thread" /> y, para ello, especifica un delegado que permite pasar un objeto al subproceso cuando este último se inicia; además, especifica el tamaño de pila máximo para el subproceso.</summary>
      <param name="start" vsli:raw="A &lt;see cref=&quot;T:System.Threading.ParameterizedThreadStart&quot; /&gt; delegate that represents the methods to be invoked when this thread begins executing.">Delegado <see cref="T:System.Threading.ParameterizedThreadStart" /> que representa los métodos que deben invocarse cuando empieza a ejecutarse este subproceso.</param>
      <param name="maxStackSize" vsli:raw="The maximum stack size, in bytes, to be used by the thread, or 0 to use the default maximum stack size specified in the header for the executable.  &#xA;  &#xA; Important   For partially trusted code, &lt;paramref name=&quot;maxStackSize&quot; /&gt; is ignored if it is greater than the default stack size. No exception is thrown.">Tamaño de pila máximo, en bytes, que va a usar el subproceso, o 0 para usar el tamaño de pila máximo predeterminado especificado en el encabezado del ejecutable.  
  
Importante   En el caso de código de confianza parcial, se pasa por alto <paramref name="maxStackSize" /> si es mayor que el tamaño de pila predeterminado. No se inicia ninguna excepción.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;start&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="start" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;maxStackSize&quot; /&gt; is less than zero.">
        <paramref name="maxStackSize" /> es menor que cero.</exception>
    </member>
    <member name="M:System.Threading.Thread.#ctor(System.Threading.ThreadStart)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Threading.Thread" />.</summary>
      <param name="start" vsli:raw="A &lt;see cref=&quot;T:System.Threading.ThreadStart&quot; /&gt; delegate that represents the methods to be invoked when this thread begins executing.">Delegado <see cref="T:System.Threading.ThreadStart" /> que representa los métodos que deben invocarse cuando empieza a ejecutarse este subproceso.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;start&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.">El parámetro <paramref name="start" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Thread.#ctor(System.Threading.ThreadStart,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; class, specifying the maximum stack size for the thread.">Inicializa una nueva instancia de la clase <see cref="T:System.Threading.Thread" />, especificando el tamaño de pila máximo para el subproceso.</summary>
      <param name="start" vsli:raw="A &lt;see cref=&quot;T:System.Threading.ThreadStart&quot; /&gt; delegate that represents the methods to be invoked when this thread begins executing.">Delegado <see cref="T:System.Threading.ThreadStart" /> que representa los métodos que deben invocarse cuando empieza a ejecutarse este subproceso.</param>
      <param name="maxStackSize" vsli:raw="The maximum stack size, in bytes, to be used by the thread, or 0 to use the default maximum stack size specified in the header for the executable.  &#xA;  &#xA; Important   For partially trusted code, &lt;paramref name=&quot;maxStackSize&quot; /&gt; is ignored if it is greater than the default stack size. No exception is thrown.">Tamaño de pila máximo, en bytes, que va a usar el subproceso, o 0 para usar el tamaño de pila máximo predeterminado especificado en el encabezado del ejecutable.  
  
Importante   En el caso de código de confianza parcial, se pasa por alto <paramref name="maxStackSize" /> si es mayor que el tamaño de pila predeterminado. No se inicia ninguna excepción.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;start&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="start" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;maxStackSize&quot; /&gt; is less than zero.">
        <paramref name="maxStackSize" /> es menor que cero.</exception>
    </member>
    <member name="M:System.Threading.Thread.Abort">
      <summary vsli:raw="Raises a &lt;see cref=&quot;T:System.Threading.ThreadAbortException&quot; /&gt; in the thread on which it is invoked, to begin the process of terminating the thread. Calling this method usually terminates the thread.">Produce una excepción <see cref="T:System.Threading.ThreadAbortException" /> en el subproceso en el que se invoca, para iniciar el proceso de finalización del subproceso. Normalmente, una llamada a este método finaliza el subproceso.</summary>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases.">.NET 5.0 y versiones posteriores y .NET Core: en todos los casos.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">El llamador no dispone del permiso requerido.</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread that is being aborted is currently suspended.">Actualmente se suspende el subproceso que se está anulando.</exception>
    </member>
    <member name="M:System.Threading.Thread.Abort(System.Object)">
      <summary vsli:raw="Raises a &lt;see cref=&quot;T:System.Threading.ThreadAbortException&quot; /&gt; in the thread on which it is invoked, to begin the process of terminating the thread while also providing exception information about the thread termination. Calling this method usually terminates the thread.">Produce una excepción <see cref="T:System.Threading.ThreadAbortException" /> en el subproceso en el que se invoca, para iniciar el proceso de finalización del subproceso, proporcionando al mismo tiempo información sobre excepciones relativa a la terminación del subproceso. Normalmente, una llamada a este método finaliza el subproceso.</summary>
      <param name="stateInfo" vsli:raw="An object that contains application-specific information, such as state, which can be used by the thread being aborted.">Objeto que contiene información específica de la aplicación como, por ejemplo, su estado, y que el subproceso anulado puede utilizar.</param>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases.">.NET 5.0 y versiones posteriores y .NET Core: en todos los casos.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">El llamador no dispone del permiso requerido.</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread that is being aborted is currently suspended.">Actualmente se suspende el subproceso que se está anulando.</exception>
    </member>
    <member name="M:System.Threading.Thread.AllocateDataSlot">
      <summary vsli:raw="Allocates an unnamed data slot on all the threads. For better performance, use fields that are marked with the &lt;see cref=&quot;T:System.ThreadStaticAttribute&quot; /&gt; attribute instead.">Asigna una ranura de datos sin nombre en todos los subprocesos. Para mejorar el rendimiento, en su lugar use campos marcados con el atributo <see cref="T:System.ThreadStaticAttribute" />.</summary>
      <returns vsli:raw="The allocated named data slot on all threads.">Ranura de datos con nombre asignada en todos los subprocesos.</returns>
    </member>
    <member name="M:System.Threading.Thread.AllocateNamedDataSlot(System.String)">
      <summary vsli:raw="Allocates a named data slot on all threads. For better performance, use fields that are marked with the &lt;see cref=&quot;T:System.ThreadStaticAttribute&quot; /&gt; attribute instead.">Asigna una ranura de datos con nombre en todos los subprocesos. Para mejorar el rendimiento, en su lugar use campos marcados con el atributo <see cref="T:System.ThreadStaticAttribute" />.</summary>
      <param name="name" vsli:raw="The name of the data slot to be allocated.">Nombre de la ranura de datos que se va a asignar.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="A named data slot with the specified name already exists.">Ya existe una ranura para datos con el nombre especificado</exception>
      <returns vsli:raw="The allocated named data slot on all threads.">Ranura de datos con nombre asignada en todos los subprocesos.</returns>
    </member>
    <member name="M:System.Threading.Thread.BeginCriticalRegion">
      <summary vsli:raw="Notifies a host that execution is about to enter a region of code in which the effects of a thread abort or unhandled exception might jeopardize other tasks in the application domain.">Notifica a un host que la ejecución está a punto de entrar en una región del código donde los efectos de una anulación del subproceso o de una excepción no controlada podrían constituir un riesgo para otras tareas del dominio de aplicaciones.</summary>
    </member>
    <member name="M:System.Threading.Thread.BeginThreadAffinity">
      <summary vsli:raw="Notifies a host that managed code is about to execute instructions that depend on the identity of the current physical operating system thread.">Notifica a un host que el código administrado está a punto de ejecutar instrucciones que dependen de la identidad del subproceso del sistema operativo físico actual.</summary>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">El llamador no dispone del permiso requerido.</exception>
    </member>
    <member name="M:System.Threading.Thread.DisableComObjectEagerCleanup">
      <summary vsli:raw="Turns off automatic cleanup of runtime callable wrappers (RCW) for the current thread.">Desactiva la limpieza automática de contenedores RCW (Runtime Callable Wrappers) para el subproceso actual.</summary>
    </member>
    <member name="M:System.Threading.Thread.EndCriticalRegion">
      <summary vsli:raw="Notifies a host that execution is about to enter a region of code in which the effects of a thread abort or unhandled exception are limited to the current task.">Notifica a un host que la ejecución está a punto de entrar en una región de código donde los efectos de una anulación del subproceso o de una excepción no controlada se limitan a la tarea actual.</summary>
    </member>
    <member name="M:System.Threading.Thread.EndThreadAffinity">
      <summary vsli:raw="Notifies a host that managed code has finished executing instructions that depend on the identity of the current physical operating system thread.">Notifica a un host que el código administrado ha terminado de ejecutar instrucciones que dependen de la identidad del subproceso del sistema operativo físico actual.</summary>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required permission.">El llamador no dispone del permiso requerido.</exception>
    </member>
    <member name="M:System.Threading.Thread.Finalize">
      <summary vsli:raw="Ensures that resources are freed and other cleanup operations are performed when the garbage collector reclaims the &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; object.">Se asegura de que los recursos se liberan y que se llevan a cabo otras operaciones de limpieza cuando el recolector de elementos no utilizados recupere el objeto <see cref="T:System.Threading.Thread" />.</summary>
    </member>
    <member name="M:System.Threading.Thread.FreeNamedDataSlot(System.String)">
      <summary vsli:raw="Eliminates the association between a name and a slot, for all threads in the process. For better performance, use fields that are marked with the &lt;see cref=&quot;T:System.ThreadStaticAttribute&quot; /&gt; attribute instead.">Elimina la asociación entre un nombre y una ranura en todos los subprocesos del proceso. Para mejorar el rendimiento, en su lugar use campos marcados con el atributo <see cref="T:System.ThreadStaticAttribute" />.</summary>
      <param name="name" vsli:raw="The name of the data slot to be freed.">Nombre de la ranura de datos que se va a liberar.</param>
    </member>
    <member name="M:System.Threading.Thread.GetApartmentState">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Threading.ApartmentState&quot; /&gt; value indicating the apartment state.">Devuelve un valor <see cref="T:System.Threading.ApartmentState" /> que indica el estado del apartamento.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Threading.ApartmentState&quot; /&gt; values indicating the apartment state of the managed thread. The default is &lt;see cref=&quot;F:System.Threading.ApartmentState.Unknown&quot; /&gt;.">Uno de los valores de <see cref="T:System.Threading.ApartmentState" /> que indica el estado del apartamento del subproceso administrado. De manera predeterminada, es <see cref="F:System.Threading.ApartmentState.Unknown" />.</returns>
    </member>
    <member name="M:System.Threading.Thread.GetCompressedStack">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Threading.CompressedStack&quot; /&gt; object that can be used to capture the stack for the current thread.">Devuelve un objeto <see cref="T:System.Threading.CompressedStack" /> que se puede utilizar para capturar la pila correspondiente al subproceso actual.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="In all cases.">En todos los casos.</exception>
      <returns>Ninguno.</returns>
    </member>
    <member name="M:System.Threading.Thread.GetCurrentProcessorId">
      <summary vsli:raw="Gets an ID used to indicate on which processor the current thread is executing.">Obtiene un identificador que se usa para indicar en qué procesador se ejecuta el subproceso actual.</summary>
      <returns vsli:raw="An integer representing the cached processor ID.">Entero que representa el identificador del procesador almacenado en caché.</returns>
    </member>
    <member name="M:System.Threading.Thread.GetData(System.LocalDataStoreSlot)">
      <summary vsli:raw="Retrieves the value from the specified slot on the current thread, within the current thread's current domain. For better performance, use fields that are marked with the &lt;see cref=&quot;T:System.ThreadStaticAttribute&quot; /&gt; attribute instead.">Recupera el valor de la ranura especificada en el subproceso actual, dentro del dominio actual del subproceso. Para mejorar el rendimiento, en su lugar use campos marcados con el atributo <see cref="T:System.ThreadStaticAttribute" />.</summary>
      <param name="slot" vsli:raw="The &lt;see cref=&quot;T:System.LocalDataStoreSlot&quot; /&gt; from which to get the value.">La <see cref="T:System.LocalDataStoreSlot" /> de donde se va a obtener el valor.</param>
      <returns vsli:raw="The retrieved value.">El valor recuperado.</returns>
    </member>
    <member name="M:System.Threading.Thread.GetDomain">
      <summary vsli:raw="Returns the current domain in which the current thread is running.">Devuelve el dominio en el que se está ejecutando el subproceso actual.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.AppDomain&quot; /&gt; representing the current application domain of the running thread.">Un <see cref="T:System.AppDomain" /> que representa el dominio de la aplicación actual del subproceso en ejecución.</returns>
    </member>
    <member name="M:System.Threading.Thread.GetDomainID">
      <summary vsli:raw="Returns a unique application domain identifier.">Devuelve un identificador único del dominio de la aplicación.</summary>
      <returns vsli:raw="A 32-bit signed integer uniquely identifying the application domain.">Entero de 32 bits con signo que identifica de forma unívoca el dominio de la aplicación.</returns>
    </member>
    <member name="M:System.Threading.Thread.GetHashCode">
      <summary vsli:raw="Returns a hash code for the current thread.">Devuelve un código hash para el subproceso actual.</summary>
      <returns vsli:raw="An integer hash code value.">Valor de código hash entero.</returns>
    </member>
    <member name="M:System.Threading.Thread.GetNamedDataSlot(System.String)">
      <summary vsli:raw="Looks up a named data slot. For better performance, use fields that are marked with the &lt;see cref=&quot;T:System.ThreadStaticAttribute&quot; /&gt; attribute instead.">Busca una ranura de datos con nombre. Para mejorar el rendimiento, en su lugar use campos marcados con el atributo <see cref="T:System.ThreadStaticAttribute" />.</summary>
      <param name="name" vsli:raw="The name of the local data slot.">Nombre de la ranura de datos local.</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.LocalDataStoreSlot&quot; /&gt; allocated for this thread.">Una <see cref="T:System.LocalDataStoreSlot" /> asignada para este subproceso.</returns>
    </member>
    <member name="M:System.Threading.Thread.Interrupt">
      <summary vsli:raw="Interrupts a thread that is in the &lt;see cref=&quot;F:System.Threading.ThreadState.WaitSleepJoin&quot; /&gt; thread state.">Interrumpe un subproceso que se encuentra en estado de subproceso <see cref="F:System.Threading.ThreadState.WaitSleepJoin" />.</summary>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the appropriate &lt;see cref=&quot;T:System.Security.Permissions.SecurityPermission&quot; /&gt;.">El autor de la llamada no dispone del <see cref="T:System.Security.Permissions.SecurityPermission" /> adecuado</exception>
    </member>
    <member name="M:System.Threading.Thread.Join">
      <summary vsli:raw="Blocks the calling thread until the thread represented by this instance terminates, while continuing to perform standard COM and &lt;see langword=&quot;SendMessage&quot; /&gt; pumping.">Bloquea el subproceso de llamada hasta que el subproceso representado por esta instancia finaliza, pero continúa bombeando <see langword="SendMessage" /> y COM estándar.</summary>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The caller attempted to join a thread that is in the &lt;see cref=&quot;F:System.Threading.ThreadState.Unstarted&quot; /&gt; state.">El autor de la llamada ha intentado combinar un subproceso que se encuentra en el estado <see cref="F:System.Threading.ThreadState.Unstarted" />.</exception>
      <exception cref="T:System.Threading.ThreadInterruptedException" vsli:raw="The thread is interrupted while waiting.">El subproceso se interrumpe mientras espera.</exception>
    </member>
    <member name="M:System.Threading.Thread.Join(System.Int32)">
      <summary vsli:raw="Blocks the calling thread until the thread represented by this instance terminates or the specified time elapses, while continuing to perform standard COM and SendMessage pumping.">Bloquea el subproceso de llamada hasta que el subproceso representado por esta instancia finaliza o transcurre el tiempo especificado, pero continúa bombeando SendMessage y COM estándar.</summary>
      <param name="millisecondsTimeout" vsli:raw="The number of milliseconds to wait for the thread to terminate.">Número de milisegundos durante los que se va a esperar a que el subproceso finalice.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value of &lt;paramref name=&quot;millisecondsTimeout&quot; /&gt; is negative and is not equal to &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt; in milliseconds.">El valor de <paramref name="millisecondsTimeout" /> es negativo y no es igual a <see cref="F:System.Threading.Timeout.Infinite" /> en milisegundos.</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread has not been started.">No se ha iniciado el subproceso.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;millisecondsTimeout&quot; /&gt; is less than -1 (Timeout.Infinite).">
        <paramref name="millisecondsTimeout" /> es menor que -1 (Timeout.Infinite).</exception>
      <exception cref="T:System.Threading.ThreadInterruptedException" vsli:raw="The thread was interrupted while waiting.">El subproceso se ha interrumpido mientras se esperaba.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the thread has terminated; &lt;see langword=&quot;false&quot; /&gt; if the thread has not terminated after the amount of time specified by the &lt;paramref name=&quot;millisecondsTimeout&quot; /&gt; parameter has elapsed.">
        <see langword="true" /> si el subproceso ha terminado; <see langword="false" /> si el subproceso no ha terminado una vez transcurrido el período de tiempo especificado por el parámetro <paramref name="millisecondsTimeout" />.</returns>
    </member>
    <member name="M:System.Threading.Thread.Join(System.TimeSpan)">
      <summary vsli:raw="Blocks the calling thread until the thread represented by this instance terminates or the specified time elapses, while continuing to perform standard COM and SendMessage pumping.">Bloquea el subproceso de llamada hasta que el subproceso representado por esta instancia finaliza o transcurre el tiempo especificado, pero continúa bombeando SendMessage y COM estándar.</summary>
      <param name="timeout" vsli:raw="A &lt;see cref=&quot;T:System.TimeSpan&quot; /&gt; set to the amount of time to wait for the thread to terminate.">Un <see cref="T:System.TimeSpan" /> establecido en el período de tiempo durante el que se esperará a que espere el subproceso.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value of &lt;paramref name=&quot;timeout&quot; /&gt; is negative and is not equal to &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt; in milliseconds, or is greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; milliseconds.">El valor de <paramref name="timeout" /> es negativo y no es igual a <see cref="F:System.Threading.Timeout.Infinite" /> en milisegundos, o es superior a <see cref="F:System.Int32.MaxValue" /> milisegundos.</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The caller attempted to join a thread that is in the &lt;see cref=&quot;F:System.Threading.ThreadState.Unstarted&quot; /&gt; state.">El autor de la llamada ha intentado combinar un subproceso que se encuentra en el estado <see cref="F:System.Threading.ThreadState.Unstarted" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the thread terminated; &lt;see langword=&quot;false&quot; /&gt; if the thread has not terminated after the amount of time specified by the &lt;paramref name=&quot;timeout&quot; /&gt; parameter has elapsed.">
        <see langword="true" /> si el subproceso ha terminado; <see langword="false" /> si el subproceso no ha terminado una vez transcurrido el período de tiempo especificado por el parámetro <paramref name="timeout" />.</returns>
    </member>
    <member name="M:System.Threading.Thread.MemoryBarrier">
      <summary vsli:raw="Synchronizes memory access as follows: The processor executing the current thread cannot reorder instructions in such a way that memory accesses prior to the call to &lt;see cref=&quot;M:System.Threading.Thread.MemoryBarrier&quot; /&gt; execute after memory accesses that follow the call to &lt;see cref=&quot;M:System.Threading.Thread.MemoryBarrier&quot; /&gt;.">Sincroniza el acceso a la memoria de la siguiente forma: el procesador que ejecuta el subproceso actual no puede reordenar las instrucciones de forma que los accesos a la memoria anteriores a la llamada a <see cref="M:System.Threading.Thread.MemoryBarrier" /> se ejecuten después de los accesos a memoria que siguen a la llamada a <see cref="M:System.Threading.Thread.MemoryBarrier" />.</summary>
    </member>
    <member name="M:System.Threading.Thread.ResetAbort">
      <summary vsli:raw="Cancels an &lt;see cref=&quot;M:System.Threading.Thread.Abort(System.Object)&quot; /&gt; requested for the current thread.">Cancela un método <see cref="M:System.Threading.Thread.Abort(System.Object)" /> solicitado para el subproceso actual.</summary>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases.">.NET 5.0 y versiones posteriores y .NET Core: en todos los casos.</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="&lt;see langword=&quot;Abort&quot; /&gt; was not invoked on the current thread.">
        <see langword="Abort" /> no se invocó en el subproceso actual.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the required security permission for the current thread.">El autor de la llamada no tiene el permiso de seguridad necesario para el subproceso actual.</exception>
    </member>
    <member name="M:System.Threading.Thread.Resume">
      <summary vsli:raw="Resumes a thread that has been suspended.">Reanuda un subproceso que se ha suspendido.</summary>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases.">.NET 5.0 y versiones posteriores, y .NET Core: en todos los casos.</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread has not been started, is dead, or is not in the suspended state.">El subproceso no se ha iniciado, está inactivo o no está en estado suspendido.</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the appropriate &lt;see cref=&quot;T:System.Security.Permissions.SecurityPermission&quot; /&gt;.">El autor de la llamada no dispone del <see cref="T:System.Security.Permissions.SecurityPermission" /> adecuado</exception>
    </member>
    <member name="M:System.Threading.Thread.SetApartmentState(System.Threading.ApartmentState)">
      <summary vsli:raw="Sets the apartment state of a thread before it is started.">Establece el estado del apartamento de un subproceso antes de iniciarse.</summary>
      <param name="state" vsli:raw="The new apartment state.">Nuevo estado del apartamento.</param>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases on macOS and Linux.">.NET 5.0 y versiones posteriores, y .NET Core: en todos los casos en macOS y Linux.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;state&quot; /&gt; is not a valid apartment state.">
        <paramref name="state" /> no es un estado del apartamento válido.</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread has already been started.">Ya se inició el subproceso.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The apartment state has already been initialized.">El estado de apartamento ya se inicializó.</exception>
    </member>
    <member name="M:System.Threading.Thread.SetCompressedStack(System.Threading.CompressedStack)">
      <summary vsli:raw="Applies a captured &lt;see cref=&quot;T:System.Threading.CompressedStack&quot; /&gt; to the current thread.">Aplica un objeto <see cref="T:System.Threading.CompressedStack" /> capturado al subproceso actual.</summary>
      <param name="stack" vsli:raw="The &lt;see cref=&quot;T:System.Threading.CompressedStack&quot; /&gt; object to be applied to the current thread.">Objeto <see cref="T:System.Threading.CompressedStack" /> que va a aplicarse al subproceso actual.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="In all cases.">En todos los casos.</exception>
    </member>
    <member name="M:System.Threading.Thread.SetData(System.LocalDataStoreSlot,System.Object)">
      <summary vsli:raw="Sets the data in the specified slot on the currently running thread, for that thread's current domain. For better performance, use fields marked with the &lt;see cref=&quot;T:System.ThreadStaticAttribute&quot; /&gt; attribute instead.">Establece los datos de la ranura especificada en el subproceso actualmente en ejecución, para el dominio actual de dicho subproceso. Para obtener un mejor rendimiento, utilice en su lugar los campos marcados con el atributo <see cref="T:System.ThreadStaticAttribute" />.</summary>
      <param name="slot" vsli:raw="The &lt;see cref=&quot;T:System.LocalDataStoreSlot&quot; /&gt; in which to set the value.">La <see cref="T:System.LocalDataStoreSlot" /> donde se va a establecer el valor.</param>
      <param name="data" vsli:raw="The value to be set.">Valor que se va a establecer.</param>
    </member>
    <member name="M:System.Threading.Thread.Sleep(System.Int32)">
      <summary vsli:raw="Suspends the current thread for the specified number of milliseconds.">Suspende el subproceso actual durante el número de milisegundos especificado.</summary>
      <param name="millisecondsTimeout" vsli:raw="The number of milliseconds for which the thread is suspended. If the value of the &lt;paramref name=&quot;millisecondsTimeout&quot; /&gt; argument is zero, the thread relinquishes the remainder of its time slice to any thread of equal priority that is ready to run. If there are no other threads of equal priority that are ready to run, execution of the current thread is not suspended.">Número de milisegundos durante los que el subproceso está suspendido. Si el valor del argumento <paramref name="millisecondsTimeout" /> es cero, el subproceso cede el resto de su porción de tiempo a cualquier subproceso de idéntica prioridad que está listo para ejecutarse. Si no hay ningún otro subproceso de igual prioridad que está listo para ejecutarse, no se suspende la ejecución del subproceso actual.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The time-out value is negative and is not equal to &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt;.">El valor de tiempo de espera es negativo y no es igual a <see cref="F:System.Threading.Timeout.Infinite" />.</exception>
    </member>
    <member name="M:System.Threading.Thread.Sleep(System.TimeSpan)">
      <summary vsli:raw="Suspends the current thread for the specified amount of time.">Suspende el subproceso actual durante la cantidad de tiempo especificada.</summary>
      <param name="timeout" vsli:raw="The amount of time for which the thread is suspended. If the value of the &lt;paramref name=&quot;timeout&quot; /&gt; argument is &lt;see cref=&quot;F:System.TimeSpan.Zero&quot; /&gt;, the thread relinquishes the remainder of its time slice to any thread of equal priority that is ready to run. If there are no other threads of equal priority that are ready to run, execution of the current thread is not suspended.">Cantidad de tiempo durante la que el subproceso está suspendido. Si el valor del argumento <paramref name="timeout" /> es <see cref="F:System.TimeSpan.Zero" />, el subproceso cede el resto de su porción de tiempo a cualquier subproceso de idéntica prioridad que está listo para ejecutarse. Si no hay ningún otro subproceso de igual prioridad que está listo para ejecutarse, no se suspende la ejecución del subproceso actual.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value of &lt;paramref name=&quot;timeout&quot; /&gt; is negative and is not equal to &lt;see cref=&quot;F:System.Threading.Timeout.Infinite&quot; /&gt; in milliseconds, or is greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt; milliseconds.">El valor de <paramref name="timeout" /> es negativo y no es igual a <see cref="F:System.Threading.Timeout.Infinite" /> en milisegundos, o es superior a <see cref="F:System.Int32.MaxValue" /> milisegundos.</exception>
    </member>
    <member name="M:System.Threading.Thread.SpinWait(System.Int32)">
      <summary vsli:raw="Causes a thread to wait the number of times defined by the &lt;paramref name=&quot;iterations&quot; /&gt; parameter.">Hace que un subproceso espere el número de veces definido por el parámetro <paramref name="iterations" />.</summary>
      <param name="iterations" vsli:raw="A 32-bit signed integer that defines how long a thread is to wait.">Entero de 32 bits con signo que define la cantidad de tiempo de espera de un subproceso.</param>
    </member>
    <member name="M:System.Threading.Thread.Start">
      <summary vsli:raw="Causes the operating system to change the state of the current instance to &lt;see cref=&quot;F:System.Threading.ThreadState.Running&quot; /&gt;.">Hace que el sistema operativo cambie el estado de la instancia actual a <see cref="F:System.Threading.ThreadState.Running" />.</summary>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread has already been started.">Ya se inició el subproceso.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory available to start this thread.">No hay memoria suficiente iniciar este subproceso.</exception>
    </member>
    <member name="M:System.Threading.Thread.Start(System.Object)">
      <summary vsli:raw="Causes the operating system to change the state of the current instance to &lt;see cref=&quot;F:System.Threading.ThreadState.Running&quot; /&gt;, and optionally supplies an object containing data to be used by the method the thread executes.">Hace que el sistema operativo cambie el estado de la instancia actual a <see cref="F:System.Threading.ThreadState.Running" />; también puede proporcionar un objeto que contiene datos para que los use el método ejecutado por el subproceso.</summary>
      <param name="parameter" vsli:raw="An object that contains data to be used by the method the thread executes.">Objeto que contiene datos para que los use el método ejecutado por el subproceso.</param>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread has already been started.">Ya se inició el subproceso.</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory available to start this thread.">No hay memoria suficiente iniciar este subproceso.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="This thread was created using a &lt;see cref=&quot;T:System.Threading.ThreadStart&quot; /&gt; delegate instead of a &lt;see cref=&quot;T:System.Threading.ParameterizedThreadStart&quot; /&gt; delegate.">Este subproceso se creó mediante un delegado <see cref="T:System.Threading.ThreadStart" /> en lugar de un delegado <see cref="T:System.Threading.ParameterizedThreadStart" />.</exception>
    </member>
    <member name="M:System.Threading.Thread.Suspend">
      <summary vsli:raw="Either suspends the thread, or if the thread is already suspended, has no effect.">Suspende el subproceso o, si este ya se ha suspendido, no tiene efecto alguno.</summary>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases.">.NET 5.0 y versiones posteriores, y .NET Core: en todos los casos.</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread has not been started or is dead.">No se ha iniciado el subproceso o está inactivo</exception>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the appropriate &lt;see cref=&quot;T:System.Security.Permissions.SecurityPermission&quot; /&gt;.">El autor de la llamada no dispone del <see cref="T:System.Security.Permissions.SecurityPermission" /> adecuado</exception>
    </member>
    <member name="M:System.Threading.Thread.TrySetApartmentState(System.Threading.ApartmentState)">
      <summary vsli:raw="Sets the apartment state of a thread before it is started.">Establece el estado del apartamento de un subproceso antes de iniciarse.</summary>
      <param name="state" vsli:raw="The new apartment state.">Nuevo estado del apartamento.</param>
      <exception cref="T:System.PlatformNotSupportedException" vsli:raw=".NET Core and .NET 5+ only: In all cases on macOS and Linux.">.NET 5.0 y versiones posteriores, y .NET Core: en todos los casos en macOS y Linux.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;state&quot; /&gt; is not a valid apartment state.">
        <paramref name="state" /> no es un estado del apartamento válido.</exception>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread was started and has terminated, or the call is not being made from the thread's context while the thread is running.">El subproceso se ha iniciado y se ha terminado, o bien la llamada no se está realizando desde el contexto del subproceso mientras se está ejecutando el subproceso.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the apartment state is set; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si se ha establecido el estado del apartamento; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.Byte@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">Lee el valor de un campo. El valor es el último que haya escrito cualquier procesador de un equipo, independientemente del número de procesadores y del estado de la caché del procesador.</summary>
      <param name="address" vsli:raw="The field to be read.">Campo que se va a leer.</param>
      <returns vsli:raw="The value that was read.">Último valor que ha escrito en el campo un procesador.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.Double@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">Lee el valor de un campo. El valor es el último que haya escrito cualquier procesador de un equipo, independientemente del número de procesadores y del estado de la caché del procesador.</summary>
      <param name="address" vsli:raw="The field to be read.">Campo que se va a leer.</param>
      <returns vsli:raw="The value that was read.">Último valor que ha escrito en el campo un procesador.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.Int16@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">Lee el valor de un campo. El valor es el último que haya escrito cualquier procesador de un equipo, independientemente del número de procesadores y del estado de la caché del procesador.</summary>
      <param name="address" vsli:raw="The field to be read.">Campo que se va a leer.</param>
      <returns vsli:raw="The value that was read.">Último valor que ha escrito en el campo un procesador.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.Int32@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">Lee el valor de un campo. El valor es el último que haya escrito cualquier procesador de un equipo, independientemente del número de procesadores y del estado de la caché del procesador.</summary>
      <param name="address" vsli:raw="The field to be read.">Campo que se va a leer.</param>
      <returns vsli:raw="The value that was read.">Último valor que ha escrito en el campo un procesador.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.Int64@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">Lee el valor de un campo. El valor es el último que haya escrito cualquier procesador de un equipo, independientemente del número de procesadores y del estado de la caché del procesador.</summary>
      <param name="address" vsli:raw="The field to be read.">Campo que se va a leer.</param>
      <returns vsli:raw="The value that was read.">Último valor que ha escrito en el campo un procesador.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.IntPtr@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">Lee el valor de un campo. El valor es el último que haya escrito cualquier procesador de un equipo, independientemente del número de procesadores y del estado de la caché del procesador.</summary>
      <param name="address" vsli:raw="The field to be read.">Campo que se va a leer.</param>
      <returns vsli:raw="The value that was read.">Último valor que ha escrito en el campo un procesador.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.Object@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">Lee el valor de un campo. El valor es el último que haya escrito cualquier procesador de un equipo, independientemente del número de procesadores y del estado de la caché del procesador.</summary>
      <param name="address" vsli:raw="The field to be read.">Campo que se va a leer.</param>
      <returns vsli:raw="The value that was read.">Último valor que ha escrito en el campo un procesador.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.SByte@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">Lee el valor de un campo. El valor es el último que haya escrito cualquier procesador de un equipo, independientemente del número de procesadores y del estado de la caché del procesador.</summary>
      <param name="address" vsli:raw="The field to be read.">Campo que se va a leer.</param>
      <returns vsli:raw="The value that was read.">Último valor que ha escrito en el campo un procesador.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.Single@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">Lee el valor de un campo. El valor es el último que haya escrito cualquier procesador de un equipo, independientemente del número de procesadores y del estado de la caché del procesador.</summary>
      <param name="address" vsli:raw="The field to be read.">Campo que se va a leer.</param>
      <returns vsli:raw="The value that was read.">Último valor que ha escrito en el campo un procesador.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.UInt16@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">Lee el valor de un campo. El valor es el último que haya escrito cualquier procesador de un equipo, independientemente del número de procesadores y del estado de la caché del procesador.</summary>
      <param name="address" vsli:raw="The field to be read.">Campo que se va a leer.</param>
      <returns vsli:raw="The value that was read.">Último valor que ha escrito en el campo un procesador.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.UInt32@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">Lee el valor de un campo. El valor es el último que haya escrito cualquier procesador de un equipo, independientemente del número de procesadores y del estado de la caché del procesador.</summary>
      <param name="address" vsli:raw="The field to be read.">Campo que se va a leer.</param>
      <returns vsli:raw="The value that was read.">Último valor que ha escrito en el campo un procesador.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.UInt64@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">Lee el valor de un campo. El valor es el último que haya escrito cualquier procesador de un equipo, independientemente del número de procesadores y del estado de la caché del procesador.</summary>
      <param name="address" vsli:raw="The field to be read.">Campo que se va a leer.</param>
      <returns vsli:raw="The value that was read.">Último valor que ha escrito en el campo un procesador.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileRead(System.UIntPtr@)">
      <summary vsli:raw="Reads the value of a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.">Lee el valor de un campo. El valor es el último que haya escrito cualquier procesador de un equipo, independientemente del número de procesadores y del estado de la caché del procesador.</summary>
      <param name="address" vsli:raw="The field to be read.">Campo que se va a leer.</param>
      <returns vsli:raw="The value that was read.">Último valor que ha escrito en el campo un procesador.</returns>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.Byte@,System.Byte)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">Escribe inmediatamente un valor en un campo, de manera que el valor sea visible para todos los procesadores del equipo.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">Campo en el que se escribirá el valor.</param>
      <param name="value" vsli:raw="The value to be written.">Valor que se va a escribir.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.Double@,System.Double)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">Escribe inmediatamente un valor en un campo, de manera que el valor sea visible para todos los procesadores del equipo.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">Campo en el que se escribirá el valor.</param>
      <param name="value" vsli:raw="The value to be written.">Valor que se va a escribir.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.Int16@,System.Int16)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">Escribe inmediatamente un valor en un campo, de manera que el valor sea visible para todos los procesadores del equipo.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">Campo en el que se escribirá el valor.</param>
      <param name="value" vsli:raw="The value to be written.">Valor que se va a escribir.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.Int32@,System.Int32)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">Escribe inmediatamente un valor en un campo, de manera que el valor sea visible para todos los procesadores del equipo.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">Campo en el que se escribirá el valor.</param>
      <param name="value" vsli:raw="The value to be written.">Valor que se va a escribir.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.Int64@,System.Int64)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">Escribe inmediatamente un valor en un campo, de manera que el valor sea visible para todos los procesadores del equipo.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">Campo en el que se escribirá el valor.</param>
      <param name="value" vsli:raw="The value to be written.">Valor que se va a escribir.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.IntPtr@,System.IntPtr)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">Escribe inmediatamente un valor en un campo, de manera que el valor sea visible para todos los procesadores del equipo.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">Campo en el que se escribirá el valor.</param>
      <param name="value" vsli:raw="The value to be written.">Valor que se va a escribir.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.Object@,System.Object)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">Escribe inmediatamente un valor en un campo, de manera que el valor sea visible para todos los procesadores del equipo.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">Campo en el que se escribirá el valor.</param>
      <param name="value" vsli:raw="The value to be written.">Valor que se va a escribir.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.SByte@,System.SByte)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">Escribe inmediatamente un valor en un campo, de manera que el valor sea visible para todos los procesadores del equipo.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">Campo en el que se escribirá el valor.</param>
      <param name="value" vsli:raw="The value to be written.">Valor que se va a escribir.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.Single@,System.Single)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">Escribe inmediatamente un valor en un campo, de manera que el valor sea visible para todos los procesadores del equipo.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">Campo en el que se escribirá el valor.</param>
      <param name="value" vsli:raw="The value to be written.">Valor que se va a escribir.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.UInt16@,System.UInt16)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">Escribe inmediatamente un valor en un campo, de manera que el valor sea visible para todos los procesadores del equipo.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">Campo en el que se escribirá el valor.</param>
      <param name="value" vsli:raw="The value to be written.">Valor que se va a escribir.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.UInt32@,System.UInt32)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">Escribe inmediatamente un valor en un campo, de manera que el valor sea visible para todos los procesadores del equipo.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">Campo en el que se escribirá el valor.</param>
      <param name="value" vsli:raw="The value to be written.">Valor que se va a escribir.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.UInt64@,System.UInt64)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">Escribe inmediatamente un valor en un campo, de manera que el valor sea visible para todos los procesadores del equipo.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">Campo en el que se escribirá el valor.</param>
      <param name="value" vsli:raw="The value to be written.">Valor que se va a escribir.</param>
    </member>
    <member name="M:System.Threading.Thread.VolatileWrite(System.UIntPtr@,System.UIntPtr)">
      <summary vsli:raw="Writes a value to a field. On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.">Escribe inmediatamente un valor en un campo, de manera que el valor sea visible para todos los procesadores del equipo.</summary>
      <param name="address" vsli:raw="The field to which the value is to be written.">Campo en el que se escribirá el valor.</param>
      <param name="value" vsli:raw="The value to be written.">Valor que se va a escribir.</param>
    </member>
    <member name="M:System.Threading.Thread.Yield">
      <summary vsli:raw="Causes the calling thread to yield execution to another thread that is ready to run on the current processor. The operating system selects the thread to yield to.">Hace que el subproceso que realiza la llamada ceda la ejecución a otro subproceso que está listo para ejecutarse en el procesador actual. El sistema operativo selecciona el subproceso al que se va a ceder la ejecución.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the operating system switched execution to another thread; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Es <see langword="true" /> si el sistema operativo cambió la ejecución a otro subproceso; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Threading.Thread.ApartmentState">
      <summary vsli:raw="Gets or sets the apartment state of this thread.">Obtiene o establece el estado de apartamento de este subproceso.</summary>
      <exception cref="T:System.ArgumentException" vsli:raw="An attempt is made to set this property to a state that is not a valid apartment state (a state other than single-threaded apartment (&lt;see langword=&quot;STA&quot; /&gt;) or multithreaded apartment (&lt;see langword=&quot;MTA&quot; /&gt;)).">Se realiza un intento de establecer esta propiedad en un estado que no es un estado de contenedor válido (un estado distinto de contenedor uniproceso (<see langword="STA" />) o contenedor multiproceso (<see langword="MTA" />)).</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Threading.ApartmentState&quot; /&gt; values. The initial value is &lt;see langword=&quot;Unknown&quot; /&gt;.">Uno de los valores de <see cref="T:System.Threading.ApartmentState" />. El valor inicial es <see langword="Unknown" />.</returns>
    </member>
    <member name="P:System.Threading.Thread.CurrentCulture">
      <summary vsli:raw="Gets or sets the culture for the current thread.">Obtiene o establece la referencia cultural del subproceso actual.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The property is set to &lt;see langword=&quot;null&quot; /&gt;.">La propiedad se establece en <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw=".NET Core and .NET 5+ only: Reading or writing the culture of a thread from another thread is not supported.">Solo .NET Core: no se admite la lectura o escritura de la referencia cultural de un subproceso desde otro subproceso.</exception>
      <returns vsli:raw="An object that represents the culture for the current thread.">Objeto que representa la referencia cultural del subproceso actual.</returns>
    </member>
    <member name="P:System.Threading.Thread.CurrentPrincipal">
      <summary vsli:raw="Gets or sets the thread's current principal (for role-based security).">Obtiene o establece la entidad de seguridad actual del subproceso (de la seguridad basada en roles).</summary>
      <exception cref="T:System.Security.SecurityException" vsli:raw="The caller does not have the permission required to set the principal.">El autor de llamada no tiene el permiso necesario para establecer la entidad de seguridad.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Security.Principal.IPrincipal&quot; /&gt; value representing the security context.">Valor de <see cref="T:System.Security.Principal.IPrincipal" /> que representa el contexto de seguridad.</returns>
    </member>
    <member name="P:System.Threading.Thread.CurrentThread">
      <summary vsli:raw="Gets the currently running thread.">Obtiene el subproceso actualmente en ejecución.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; that is the representation of the currently running thread.">
        <see cref="T:System.Threading.Thread" /> que representa el subproceso actualmente en ejecución.</returns>
    </member>
    <member name="P:System.Threading.Thread.CurrentUICulture">
      <summary vsli:raw="Gets or sets the current culture used by the Resource Manager to look up culture-specific resources at run time.">Obtiene o establece la referencia cultural actual utilizada por el administrador de recursos para buscar recursos específicos de la referencia cultural en tiempo de ejecución.</summary>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The property is set to &lt;see langword=&quot;null&quot; /&gt;.">La propiedad se establece en <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The property is set to a culture name that cannot be used to locate a resource file. Resource filenames must include only letters, numbers, hyphens or underscores.">La propiedad se establece en un nombre de referencia cultural que no se puede usar para buscar un archivo de recursos. Los nombres de archivo de recursos deben incluir solo letras, números, guiones o caracteres de subrayado.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw=".NET Core and .NET 5+ only: Reading or writing the culture of a thread from another thread is not supported.">Solo .NET Core: no se admite la lectura o escritura de la referencia cultural de un subproceso desde otro subproceso.</exception>
      <returns vsli:raw="An object that represents the current culture.">Objeto que representa la referencia cultural actual.</returns>
    </member>
    <member name="P:System.Threading.Thread.ExecutionContext">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Threading.ExecutionContext&quot; /&gt; object that contains information about the various contexts of the current thread.">Obtiene un objeto <see cref="T:System.Threading.ExecutionContext" /> que contiene información sobre los distintos contextos del subproceso actual.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Threading.ExecutionContext&quot; /&gt; object that consolidates context information for the current thread.">Objeto <see cref="T:System.Threading.ExecutionContext" /> que consolida la información de contexto del subproceso actual.</returns>
    </member>
    <member name="P:System.Threading.Thread.IsAlive">
      <summary vsli:raw="Gets a value indicating the execution status of the current thread.">Obtiene un valor que indica el estado de ejecución del subproceso actual.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this thread has been started and has not terminated normally or aborted; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el subproceso se ha iniciado y no ha terminado con normalidad o se ha anulado; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Threading.Thread.IsBackground">
      <summary vsli:raw="Gets or sets a value indicating whether or not a thread is a background thread.">Obtiene o establece un valor que indica si un subproceso es o no un subproceso en segundo plano.</summary>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread is dead.">El proceso está inactivo.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this thread is or is to become a background thread; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el subproceso es un subproceso en segundo plano o va a convertirse en un subproceso en segundo plano; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Threading.Thread.IsThreadPoolThread">
      <summary vsli:raw="Gets a value indicating whether or not a thread belongs to the managed thread pool.">Obtiene un valor que indica si un subproceso pertenece al grupo de subprocesos administrados o no.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this thread belongs to the managed thread pool; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> si el subproceso pertenece al grupo de subprocesos administrados; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Threading.Thread.ManagedThreadId">
      <summary vsli:raw="Gets a unique identifier for the current managed thread.">Obtiene un identificador único para el actual subproceso administrado.</summary>
      <returns vsli:raw="An integer that represents a unique identifier for this managed thread.">Entero que representa un identificador único para este subproceso administrado.</returns>
    </member>
    <member name="P:System.Threading.Thread.Name">
      <summary vsli:raw="Gets or sets the name of the thread.">Obtiene o establece el nombre del subproceso.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A set operation was requested, but the &lt;see langword=&quot;Name&quot; /&gt; property has already been set.">Se solicitó una operación Set, pero ya se ha establecido la propiedad <see langword="Name" />.</exception>
      <returns vsli:raw="A string containing the name of the thread, or &lt;see langword=&quot;null&quot; /&gt; if no name was set.">Cadena que contiene el nombre del subproceso o <see langword="null" /> si no se ha establecido ningún nombre.</returns>
    </member>
    <member name="P:System.Threading.Thread.Priority">
      <summary vsli:raw="Gets or sets a value indicating the scheduling priority of a thread.">Obtiene o establece un valor que indica la prioridad de programación de un subproceso.</summary>
      <exception cref="T:System.Threading.ThreadStateException" vsli:raw="The thread has reached a final state, such as &lt;see cref=&quot;F:System.Threading.ThreadState.Aborted&quot; /&gt;.">El subproceso ha alcanzado un estado final, como <see cref="F:System.Threading.ThreadState.Aborted" />.</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The value specified for a set operation is not a valid &lt;see cref=&quot;T:System.Threading.ThreadPriority&quot; /&gt; value.">El valor especificado para un operación set no es un valor <see cref="T:System.Threading.ThreadPriority" /> válido.</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Threading.ThreadPriority&quot; /&gt; values. The default value is &lt;see cref=&quot;F:System.Threading.ThreadPriority.Normal&quot; /&gt;.">Uno de los valores de <see cref="T:System.Threading.ThreadPriority" />. El valor predeterminado es <see cref="F:System.Threading.ThreadPriority.Normal" />.</returns>
    </member>
    <member name="P:System.Threading.Thread.ThreadState">
      <summary vsli:raw="Gets a value containing the states of the current thread.">Obtiene un valor que contiene los estados del subproceso actual.</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Threading.ThreadState&quot; /&gt; values indicating the state of the current thread. The initial value is &lt;see cref=&quot;F:System.Threading.ThreadState.Unstarted&quot; /&gt;.">Uno de los valores de <see cref="T:System.Threading.ThreadState" /> que indica el estado del subproceso actual. El valor inicial es <see cref="F:System.Threading.ThreadState.Unstarted" />.</returns>
    </member>
    <member name="T:System.Threading.ThreadAbortException">
      <summary vsli:raw="The exception that is thrown when a call is made to the &lt;see cref=&quot;M:System.Threading.Thread.Abort(System.Object)&quot; /&gt; method. This class cannot be inherited.">Excepción que se produce cuando se realiza una llamada al método <see cref="M:System.Threading.Thread.Abort(System.Object)" />. Esta clase no puede heredarse.</summary>
    </member>
    <member name="P:System.Threading.ThreadAbortException.ExceptionState">
      <summary vsli:raw="Gets an object that contains application-specific information related to the thread abort.">Obtiene un objeto que contiene la información específica de la aplicación relacionada con la anulación del subproceso.</summary>
      <returns vsli:raw="An object containing application-specific information.">Objeto que contiene la información específica de la aplicación.</returns>
    </member>
    <member name="T:System.Threading.ThreadExceptionEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.Windows.Forms.Application.ThreadException&quot; /&gt; event.">Proporciona datos para el evento <see cref="E:System.Windows.Forms.Application.ThreadException" />.</summary>
    </member>
    <member name="M:System.Threading.ThreadExceptionEventArgs.#ctor(System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadExceptionEventArgs&quot; /&gt; class.">Inicializa una nueva instancia de la clase <see cref="T:System.Threading.ThreadExceptionEventArgs" />.</summary>
      <param name="t" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; that occurred.">
        <see cref="T:System.Exception" /> que se ha producido.</param>
    </member>
    <member name="P:System.Threading.ThreadExceptionEventArgs.Exception">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Exception&quot; /&gt; that occurred.">Obtiene la propiedad <see cref="T:System.Exception" /> que se ha producido.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; that occurred.">
        <see cref="T:System.Exception" /> que se ha producido.</returns>
    </member>
    <member name="T:System.Threading.ThreadExceptionEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.Windows.Forms.Application.ThreadException&quot; /&gt; event of an &lt;see cref=&quot;T:System.Windows.Forms.Application&quot; /&gt;.">Representa el método que controlará el evento <see cref="E:System.Windows.Forms.Application.ThreadException" /> de <see cref="T:System.Windows.Forms.Application" />.</summary>
      <param name="sender" vsli:raw="The source of the event.">Origen del evento.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.Threading.ThreadExceptionEventArgs&quot; /&gt; that contains the event data.">Objeto <see cref="T:System.Threading.ThreadExceptionEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="T:System.Threading.ThreadInterruptedException">
      <summary vsli:raw="The exception that is thrown when a &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; is interrupted while it is in a waiting state.">Excepción que se produce cuando <see cref="T:System.Threading.Thread" /> se interrumpe mientras se encuentra en estado de espera.</summary>
    </member>
    <member name="M:System.Threading.ThreadInterruptedException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadInterruptedException&quot; /&gt; class with default properties.">Inicializa una nueva instancia de la clase <see cref="T:System.Threading.ThreadInterruptedException" /> con propiedades predeterminadas.</summary>
    </member>
    <member name="M:System.Threading.ThreadInterruptedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadInterruptedException&quot; /&gt; class with serialized data.">Inicializa una nueva instancia de la clase <see cref="T:System.Threading.ThreadInterruptedException" /> con datos serializados.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that holds the serialized object data about the exception being thrown.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene los datos serializados del objeto que hacen referencia a la excepción que se va a producir.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains contextual information about the source or destination.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene información contextual sobre el origen o el destino.</param>
    </member>
    <member name="M:System.Threading.ThreadInterruptedException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadInterruptedException&quot; /&gt; class with a specified error message.">Inicializa una nueva instancia de la clase <see cref="T:System.Threading.ThreadInterruptedException" /> con el mensaje de error especificado.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Mensaje de error que explica el motivo de la excepción.</param>
    </member>
    <member name="M:System.Threading.ThreadInterruptedException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadInterruptedException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa una nueva instancia de la clase <see cref="T:System.Threading.ThreadInterruptedException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Mensaje de error que explica el motivo de la excepción.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Excepción que es la causa de la excepción actual. Si el parámetro <paramref name="innerException" /> no es <see langword="null" />, la excepción actual se produce en un bloque <see langword="catch" /> que controla la excepción interna.</param>
    </member>
    <member name="T:System.Threading.ThreadPriority">
      <summary vsli:raw="Specifies the scheduling priority of a &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt;.">Especifica la prioridad de programación de <see cref="T:System.Threading.Thread" />.</summary>
    </member>
    <member name="F:System.Threading.ThreadPriority.AboveNormal">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; can be scheduled after threads with &lt;see langword=&quot;Highest&quot; /&gt; priority and before those with &lt;see langword=&quot;Normal&quot; /&gt; priority.">
        <see cref="T:System.Threading.Thread" /> puede programarse después de los subprocesos con prioridad <see langword="Highest" /> y antes que los subprocesos con prioridad <see langword="Normal" />.</summary>
    </member>
    <member name="F:System.Threading.ThreadPriority.BelowNormal">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; can be scheduled after threads with &lt;see langword=&quot;Normal&quot; /&gt; priority and before those with &lt;see langword=&quot;Lowest&quot; /&gt; priority.">
        <see cref="T:System.Threading.Thread" /> puede programarse después de los subprocesos con prioridad <see langword="Normal" /> y antes que los subprocesos con prioridad <see langword="Lowest" />.</summary>
    </member>
    <member name="F:System.Threading.ThreadPriority.Highest">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; can be scheduled before threads with any other priority.">
        <see cref="T:System.Threading.Thread" /> puede programarse antes que los subprocesos que tengan cualquier otra prioridad.</summary>
    </member>
    <member name="F:System.Threading.ThreadPriority.Lowest">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; can be scheduled after threads with any other priority.">
        <see cref="T:System.Threading.Thread" /> puede programarse después de los subprocesos que tengan cualquier otra prioridad.</summary>
    </member>
    <member name="F:System.Threading.ThreadPriority.Normal">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; can be scheduled after threads with &lt;see langword=&quot;AboveNormal&quot; /&gt; priority and before those with &lt;see langword=&quot;BelowNormal&quot; /&gt; priority. Threads have &lt;see langword=&quot;Normal&quot; /&gt; priority by default.">
        <see cref="T:System.Threading.Thread" /> puede programarse después de los subprocesos con prioridad <see langword="AboveNormal" /> y antes que los subprocesos con prioridad <see langword="BelowNormal" />. Los subprocesos tienen prioridad <see langword="Normal" /> de forma predeterminada.</summary>
    </member>
    <member name="T:System.Threading.ThreadStart">
      <summary vsli:raw="Represents the method that executes on a &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt;.">Representa el método que se ejecuta en <see cref="T:System.Threading.Thread" />.</summary>
    </member>
    <member name="T:System.Threading.ThreadStartException">
      <summary vsli:raw="The exception that is thrown when a failure occurs in a managed thread after the underlying operating system thread has been started, but before the thread is ready to execute user code.">Excepción que se produce cuando se produce un error en un subproceso administrado después de que se haya iniciado el subproceso del sistema operativo subyacente, pero antes de que el subproceso esté listo para ejecutar el código de usuario.</summary>
    </member>
    <member name="T:System.Threading.ThreadState">
      <summary vsli:raw="Specifies the execution states of a &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt;.">Especifica los estados de ejecución de <see cref="T:System.Threading.Thread" />.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.Aborted">
      <summary vsli:raw="The thread state includes &lt;see cref=&quot;F:System.Threading.ThreadState.AbortRequested&quot; /&gt; and the thread is now dead, but its state has not yet changed to &lt;see cref=&quot;F:System.Threading.ThreadState.Stopped&quot; /&gt;.">El estado del subproceso incluye <see cref="F:System.Threading.ThreadState.AbortRequested" /> y el subproceso está ahora inactivo, pero su estado no ha cambiado todavía a <see cref="F:System.Threading.ThreadState.Stopped" />.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.AbortRequested">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Threading.Thread.Abort(System.Object)&quot; /&gt; method has been invoked on the thread, but the thread has not yet received the pending &lt;see cref=&quot;T:System.Threading.ThreadAbortException&quot; /&gt; that will attempt to terminate it.">Se ha invocado al método <see cref="M:System.Threading.Thread.Abort(System.Object)" /> en el subproceso, pero el subproceso aún no ha recibido la excepción <see cref="T:System.Threading.ThreadAbortException" /> pendiente que intentará finalizarlo.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.Background">
      <summary vsli:raw="The thread is being executed as a background thread, as opposed to a foreground thread. This state is controlled by setting the &lt;see cref=&quot;P:System.Threading.Thread.IsBackground&quot; /&gt; property.">El subproceso está ejecutándose como subproceso en segundo plano, por oposición a un subproceso en primer plano. Para controlar este estado, hay que establecer la propiedad <see cref="P:System.Threading.Thread.IsBackground" />.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.Running">
      <summary vsli:raw="The thread has been started and not yet stopped.">El subproceso se ha iniciado y aún no se ha detenido.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.Stopped">
      <summary vsli:raw="The thread has stopped.">El subproceso se ha detenido.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.StopRequested">
      <summary vsli:raw="The thread is being requested to stop. This is for internal use only.">Se ha solicitado que el subproceso se detenga. Esto último sólo se refiere al uso interno.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.Suspended">
      <summary vsli:raw="The thread has been suspended.">El subproceso se ha suspendido.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.SuspendRequested">
      <summary vsli:raw="The thread is being requested to suspend.">Se ha solicitado que el subproceso se suspenda.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.Unstarted">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Threading.Thread.Start&quot; /&gt; method has not been invoked on the thread.">No se ha invocado al método <see cref="M:System.Threading.Thread.Start" /> en el subproceso.</summary>
    </member>
    <member name="F:System.Threading.ThreadState.WaitSleepJoin">
      <summary vsli:raw="The thread is blocked. This could be the result of calling &lt;see cref=&quot;M:System.Threading.Thread.Sleep(System.Int32)&quot; /&gt; or &lt;see cref=&quot;M:System.Threading.Thread.Join&quot; /&gt;, of requesting a lock - for example, by calling &lt;see cref=&quot;M:System.Threading.Monitor.Enter(System.Object)&quot; /&gt; or &lt;see cref=&quot;M:System.Threading.Monitor.Wait(System.Object,System.Int32,System.Boolean)&quot; /&gt; - or of waiting on a thread synchronization object such as &lt;see cref=&quot;T:System.Threading.ManualResetEvent&quot; /&gt;.">Subproceso bloqueado. Este podría ser el resultado de llamar a <see cref="M:System.Threading.Thread.Sleep(System.Int32)" /> o <see cref="M:System.Threading.Thread.Join" />, de solicitar un bloqueo (por ejemplo, llamando a <see cref="M:System.Threading.Monitor.Enter(System.Object)" /> o <see cref="M:System.Threading.Monitor.Wait(System.Object,System.Int32,System.Boolean)" />) o de esperar en un objeto de sincronización de subprocesos como <see cref="T:System.Threading.ManualResetEvent" />.</summary>
    </member>
    <member name="T:System.Threading.ThreadStateException">
      <summary vsli:raw="The exception that is thrown when a &lt;see cref=&quot;T:System.Threading.Thread&quot; /&gt; is in an invalid &lt;see cref=&quot;P:System.Threading.Thread.ThreadState&quot; /&gt; for the method call.">Excepción que se produce cuando un <see cref="T:System.Threading.Thread" /> es un <see cref="P:System.Threading.Thread.ThreadState" /> que no es válido para la llamada de método.</summary>
    </member>
    <member name="M:System.Threading.ThreadStateException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadStateException&quot; /&gt; class with default properties.">Inicializa una nueva instancia de la clase <see cref="T:System.Threading.ThreadStateException" /> con propiedades predeterminadas.</summary>
    </member>
    <member name="M:System.Threading.ThreadStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadStateException&quot; /&gt; class with serialized data.">Inicializa una nueva instancia de la clase <see cref="T:System.Threading.ThreadStateException" /> con datos serializados.</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; that holds the serialized object data about the exception being thrown.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene los datos serializados del objeto que hacen referencia a la excepción que se va a producir.</param>
      <param name="context" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains contextual information about the source or destination.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene información contextual sobre el origen o el destino.</param>
    </member>
    <member name="M:System.Threading.ThreadStateException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadStateException&quot; /&gt; class with a specified error message.">Inicializa una nueva instancia de la clase <see cref="T:System.Threading.ThreadStateException" /> con el mensaje de error especificado.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Mensaje de error que explica el motivo de la excepción.</param>
    </member>
    <member name="M:System.Threading.ThreadStateException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.ThreadStateException&quot; /&gt; class with a specified error message and a reference to the inner exception that is the cause of this exception.">Inicializa una nueva instancia de la clase <see cref="T:System.Threading.ThreadStateException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">Mensaje de error que explica el motivo de la excepción.</param>
      <param name="innerException" vsli:raw="The exception that is the cause of the current exception. If the &lt;paramref name=&quot;innerException&quot; /&gt; parameter is not &lt;see langword=&quot;null&quot; /&gt;, the current exception is raised in a &lt;see langword=&quot;catch&quot; /&gt; block that handles the inner exception.">Excepción que es la causa de la excepción actual. Si el parámetro <paramref name="innerException" /> no es <see langword="null" />, la excepción actual se produce en un bloque <see langword="catch" /> que controla la excepción interna.</param>
    </member>
  </members>
</doc>