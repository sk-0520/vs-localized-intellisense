<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Runtime.Serialization.Json</name>
  </assembly>
  <members>
    <member name="T:System.Runtime.Serialization.DateTimeFormat">
      <summary>Especifica las opciones de formato de fecha y hora.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DateTimeFormat.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.DateTimeFormat" /> con la cadena de formato.</summary>
      <param name="formatString">Cadena de formato.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DateTimeFormat.#ctor(System.String,System.IFormatProvider)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.DateTimeFormat" /> usando la cadena de formato y proveedor de formato.</summary>
      <param name="formatString">Cadena de formato.</param>
      <param name="formatProvider">Proveedor de formatos.</param>
    </member>
    <member name="P:System.Runtime.Serialization.DateTimeFormat.DateTimeStyles">
      <summary>Obtiene o establece las opciones de formato que personalizan el análisis de cadenas de algunos métodos de análisis de fecha y hora.</summary>
      <returns>Opciones de formato que personalizan el análisis de cadenas de algunos métodos de análisis de fecha y hora.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DateTimeFormat.FormatProvider">
      <summary>Obtiene un objeto que controla las operaciones de formato.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.DateTimeFormat.FormatString">
      <summary>Obtiene las cadenas de formato para controlar el formato que se produce cuando una fecha o una hora se representa como cadena.</summary>
      <returns>Cadenas de formato para controlar el formato mostrado cuando una fecha o una hora se representa como una cadena.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.EmitTypeInformation">
      <summary>Especifica la frecuencia para emitir información de tipo.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.EmitTypeInformation.Always">
      <summary>Emitir siempre información de tipo.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.EmitTypeInformation.AsNeeded">
      <summary>Según sea necesario emitir información de tipo.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.EmitTypeInformation.Never">
      <summary>No emitir jamás información de tipo.</summary>
    </member>
    <member name="T:System.Runtime.Serialization.Json.DataContractJsonSerializer">
      <summary>Serializa objetos a JavaScript Object Notation (JSON) y deserializa datos de JSON a objetos. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> para serializar o deserializar un objeto del tipo especificado.</summary>
      <param name="type">Tipo de las instancias que se serializa o deserializa.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> para serializar o deserializar un objeto del tipo especificado con una colección de tipos conocidos que pueden encontrarse en el gráfico de objetos.</summary>
      <param name="type">Tipo de las instancias serializadas o deserializadas.</param>
      <param name="knownTypes">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Type" /> que contiene los tipos que pueden estar presentes en el gráfico de objetos.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Runtime.Serialization.Json.DataContractJsonSerializerSettings)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> para serializar o deserializar un objeto del tipo y configuración de serializador especificados.</summary>
      <param name="type">Tipo de las instancias que se serializa o deserializa.</param>
      <param name="settings">La configuración de serializador para el serializador JSON.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> para serializar o deserializar un objeto de un tipo especificado utilizando el elemento raíz de XML especificado por un parámetro.</summary>
      <param name="type">Tipo de las instancias que se serializa o deserializa.</param>
      <param name="rootName">El nombre del elemento XML que incluye el contenido para serializar o deserializar.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> para serializar o deserializar un objeto de un tipo especificado utilizando el elemento raíz de XML especificado por un parámetro, con una colección de tipos conocidos que pueden encontrarse en el gráfico de objetos.</summary>
      <param name="type">Tipo de las instancias que se serializa o deserializa.</param>
      <param name="rootName">El nombre del elemento XML que incluye el contenido para serializar o deserializar. El valor predeterminado es "root".</param>
      <param name="knownTypes">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Type" /> que contiene los tipos que pueden estar presentes en el gráfico de objetos.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> para serializar o deserializar un objeto de un tipo especificado utilizando el elemento raíz de XML especificado por un parámetro del tipo <see cref="T:System.Xml.XmlDictionaryString" />.</summary>
      <param name="type">Tipo de las instancias que se serializa o deserializa.</param>
      <param name="rootName">
        <see cref="T:System.Xml.XmlDictionaryString" /> que contiene el nombre del elemento raíz del contenido.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> para serializar o deserializar un objeto de un tipo especificado utilizando el elemento raíz de XML especificado por un parámetro del tipo <see cref="T:System.Xml.XmlDictionaryString" />, con una colección de tipos conocidos que pueden encontrarse en el gráfico de objetos.</summary>
      <param name="type">Tipo de las instancias que se serializa o deserializa.</param>
      <param name="rootName">
        <see cref="T:System.Xml.XmlDictionaryString" /> que contiene el nombre del elemento raíz del contenido.</param>
      <param name="knownTypes">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Type" /> que contiene los tipos que pueden estar presentes en el gráfico de objetos.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
      <summary>Obtiene un valor que especifica si <see cref="T:System.Xml.XmlDictionaryReader" /> se coloca sobre un elemento XML que representa un objeto del que el serializador puede deserializar.</summary>
      <param name="reader">
        <see cref="T:System.Xml.XmlDictionaryReader" /> utilizado para leer la secuencia XML asignada de JSON.</param>
      <returns>
        <see langword="true" /> si el lector está colocado correctamente; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlReader)">
      <summary>Determina si <see cref="T:System.Xml.XmlReader" /> se coloca en un objeto que se puede deserializar.</summary>
      <param name="reader">
        <see cref="T:System.Xml.XmlReader" /> utilizado para leer la secuencia XML.</param>
      <returns>
        <see langword="true" /> si el lector está colocado correctamente; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.IO.Stream)">
      <summary>Lee una secuencia del documento en el formato JSON (JavaScript Object Notation) y devuelve el objeto deserializado.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" /> que se leerá.</param>
      <returns>Objeto deserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlDictionaryReader)">
      <summary>Lee el documento XML asignado de JSON (JavaScript Object Notation) con <see cref="T:System.Xml.XmlDictionaryReader" /> y devuelve el objeto deserializado.</summary>
      <param name="reader">
        <see cref="T:System.Xml.XmlDictionaryReader" /> utilizado para leer el documento XML asignado de JSON.</param>
      <returns>Objeto deserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary>Lee el documento XML asignado de JSON con <see cref="T:System.Xml.XmlDictionaryReader" /> y devuelve el objeto deserializado; también le permite especificar si el serializador debería comprobar que está colocado sobre un elemento adecuado antes de intentar deserializar.</summary>
      <param name="reader">
        <see cref="T:System.Xml.XmlDictionaryReader" /> utilizado para leer el documento XML asignado de JSON.</param>
      <param name="verifyObjectName">
        <see langword="true" /> para comprobar si el nombre del elemento envolvente XML y el espacio de nombres corresponden al nombre y al espacio de nombres esperados; de lo contrario, <see langword="false" /> para omitir la comprobación. De manera predeterminada, es <see langword="true" />.</param>
      <returns>Objeto deserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlReader)">
      <summary>Lee el documento XML asignado de JSON (JavaScript Object Notation) con <see cref="T:System.Xml.XmlReader" /> y devuelve el objeto deserializado.</summary>
      <param name="reader">
        <see cref="T:System.Xml.XmlReader" /> utilizado para leer el documento XML asignado de JSON.</param>
      <returns>Objeto deserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
      <summary>Lee un documento XML asignado de JSON con <see cref="T:System.Xml.XmlReader" /> y devuelve el objeto deserializado; también le permite especificar si el serializador debería comprobar que está colocado sobre un elemento adecuado antes de intentar deserializar.</summary>
      <param name="reader">
        <see cref="T:System.Xml.XmlReader" /> utilizado para leer el documento XML asignado de JSON.</param>
      <param name="verifyObjectName">
        <see langword="true" /> para comprobar si el nombre del elemento envolvente XML y el espacio de nombres corresponden al nombre y al espacio de nombres esperados; de lo contrario, <see langword="false" /> para omitir la comprobación. De manera predeterminada, es <see langword="true" />.</param>
      <returns>Objeto deserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
      <summary>Escribe el elemento XML de cierre en un documento XML, que puede estar asignado a JavaScript Object Notation (JSON), mediante <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">Un <see cref="T:System.Xml.XmlDictionaryWriter" /> que se usa para escribir el documento XML que se asignará a JSON.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteEndObject(System.Xml.XmlWriter)">
      <summary>Escribe el elemento XML de cierre en un documento XML, que puede estar asignado a JavaScript Object Notation (JSON), mediante <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Un <see cref="T:System.Xml.XmlWriter" /> que se usa para escribir el documento XML asignado a JSON.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.IO.Stream,System.Object)">
      <summary>Serializa un objeto especificado a datos JavaScript Object Notation (JSON) y escribe el JSON resultante en una secuencia.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" /> en el que se escribe.</param>
      <param name="graph">El objeto que contiene los datos que se van a escribir en la secuencia.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">El tipo que se está serializando no se ajusta a las reglas del contrato de datos. Por ejemplo, el atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> no se ha aplicado al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Hay un problema con la instancia que se está escribiendo.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">Se ha superado el número máximo de objetos para serializar. Compruebe la propiedad <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>Serializa a XML un objeto que puede estar asignado a JavaScript Object Notation (JSON). Escribe todos los datos de objeto (incluido el elemento XML inicial, el contenido y el elemento de cierre) con <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> que se utiliza para escribir el documento o la secuencia XML que se asignará a JSON.</param>
      <param name="graph">El objeto que contiene los datos que se van a escribir.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">El tipo que se está serializando no se ajusta a las reglas del contrato de datos. Por ejemplo, el atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> no se ha aplicado al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Hay un problema con la instancia que se está escribiendo.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">Se ha superado el número máximo de objetos para serializar. Compruebe la propiedad <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
      <summary>Serializa a XML un objeto que puede estar asignado a JavaScript Object Notation (JSON). Escribe todos los datos de objeto (incluido el elemento XML inicial, el contenido y el elemento de cierre) con <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" /> que se utiliza para escribir el documento XML que se asignará a JSON.</param>
      <param name="graph">El objeto que contiene los datos que se van a escribir.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">El tipo que se está serializando no se ajusta a las reglas del contrato de datos. Por ejemplo, el atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> no se ha aplicado al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Hay un problema con la instancia que se está escribiendo.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">Se ha superado el número máximo de objetos para serializar. Compruebe la propiedad <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>Escribe el contenido de XML que puede asignarse a JavaScript Object Notation (JSON) mediante <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> en el que se va a escribir.</param>
      <param name="graph">Objeto que se va a escribir.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">El tipo que se está serializando no se ajusta a las reglas del contrato de datos. Por ejemplo, el atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> no se ha aplicado al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Hay un problema con la instancia que se está escribiendo.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">Se ha superado el número máximo de objetos para serializar. Compruebe la propiedad <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
      <summary>Escribe el contenido de XML que puede asignarse a JavaScript Object Notation (JSON) mediante <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" /> donde se va a escribir.</param>
      <param name="graph">Objeto que se va a escribir.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">El tipo que se está serializando no se ajusta a las reglas del contrato de datos. Por ejemplo, el atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> no se ha aplicado al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Hay un problema con la instancia que se está escribiendo.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">Se ha superado el número máximo de objetos para serializar. Compruebe la propiedad <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>Escribe el elemento XML de apertura para serializar un objeto a XML que puede asignarse a JavaScript Object Notation (JSON) utilizando <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> que se usa para escribir el elemento de inicio XML.</param>
      <param name="graph">Objeto que se va a escribir.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
      <summary>Escribe el elemento XML de apertura para serializar un objeto a XML que puede asignarse a JavaScript Object Notation (JSON) utilizando <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" /> que se usa para escribir el elemento de inicio XML.</param>
      <param name="graph">Objeto que se va a escribir.</param>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.DateTimeFormat">
      <summary>Obtiene el formato de los elementos de tipo fecha y hora en un gráfico de objetos.</summary>
      <returns>Formato de los elementos de tipo de fecha y hora en un gráfico de objetos.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.EmitTypeInformation">
      <summary>Obtiene o establece la configuración del serializador JSON de contrato de datos para emitir información de tipo.</summary>
      <returns>Configuración del serializador JSON de contrato de datos para emitir información de tipo.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.IgnoreExtensionDataObject">
      <summary>Obtiene un valor que especifica si los datos desconocidos se omiten en la deserialización y si la interfaz <see cref="T:System.Runtime.Serialization.IExtensibleDataObject" /> se omite en la serialización.</summary>
      <returns>
        <see langword="true" /> para omitir datos desconocidos y <see cref="T:System.Runtime.Serialization.IExtensibleDataObject" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.KnownTypes">
      <summary>Obtiene una colección de tipos que se pueden encontrarse en el gráfico de objetos serializado utilizando esta instancia de <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" />.</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> que contiene los tipos esperados pasados como tipos conocidos por el constructor <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.MaxItemsInObjectGraph">
      <summary>Obtiene el número máximo de elementos en un gráfico de objetos que el serializador serializa o deserializa en una llamada de lectura o de escritura.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">El número de elementos supera el valor máximo.</exception>
      <returns>El número máximo de elementos para serializar o deserializar.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.SerializeReadOnlyTypes">
      <summary>Obtiene o establece un valor que especifica si se van a serializar tipos de solo lectura.</summary>
      <returns>
        <see langword="true" /> para serializar tipos de solo lectura; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.UseSimpleDictionaryFormat">
      <summary>Obtiene un valor que especifica si se va a usar un formato de diccionario simple.</summary>
      <returns>
        <see langword="true" /> para usar un formato simple de diccionario; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings">
      <summary>Especifica valores de configuración de <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings" />.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.DateTimeFormat">
      <summary>Obtiene o establece un DateTimeFormat que define el formato de presentación de fechas y horas culturalmente apropiado.</summary>
      <returns>DateTimeFormat que define el formato de presentación de fechas y horas culturalmente apropiado.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.EmitTypeInformation">
      <summary>Obtiene o establece la configuración del serializador JSON de contrato de datos para emitir información de tipo.</summary>
      <returns>Configuración del serializador JSON de contrato de datos para emitir información de tipo.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.IgnoreExtensionDataObject">
      <summary>Obtiene o establece un valor que especifica si se deben omitir los datos proporcionados por una extensión de la clase cuando la clase se serializa o deserializa.</summary>
      <returns>
        <see langword="true" /> si se deben omitir los datos proporcionados por una extensión de la clase cuando la clase se serializa o deserializa; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.KnownTypes">
      <summary>Obtiene o establece una colección de tipos que pueden encontrarse en el gráfico de objetos serializado utilizando esta instancia de DataContractJsonSerializerSettings.</summary>
      <returns>Colección de tipos que pueden encontrarse en el gráfico de objetos serializado utilizando esta instancia de DataContractJsonSerializerSettings.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.MaxItemsInObjectGraph">
      <summary>Obtiene o define el número máximo de elementos en un gráfico de objetos que se vaya a serializar o deserializar.</summary>
      <returns>Número máximo de elementos de un gráfico de objetos que se van a serializar o deserializar.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.RootName">
      <summary>Obtiene o establece el nombre raíz del objeto seleccionado.</summary>
      <returns>El nombre raíz del objeto seleccionado.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.SerializeReadOnlyTypes">
      <summary>Obtiene o establece un valor que especifica si se van a serializar tipos de solo lectura.</summary>
      <returns>
        <see langword="true" /> para serializar tipos de solo lectura; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.UseSimpleDictionaryFormat">
      <summary>Obtiene o establece un valor que especifica si se va a utilizar un formato de diccionario simple.</summary>
      <returns>
        <see langword="true" /> para usar un formato simple de diccionario; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer">
      <summary>Especifica la interfaz para inicializar un lector de JavaScript Object Notation (JSON) al reutilizarlos para leer de una secuencia determinada o búfer.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Reinicializa un lector habilitado JavaScript Object Notation (JSON) para un búfer especificado que contiene datos codificados por JSON.</summary>
      <param name="buffer">La matriz de búferes <see cref="T:System.Byte" /> de entrada de la cual se leerá.</param>
      <param name="offset">La posición inicial de la que leer en <paramref name="buffer" />.</param>
      <param name="count">Número de bytes que se pueden leer de <paramref name="buffer" />.</param>
      <param name="encoding">
        <see cref="T:System.Text.Encoding" /> utilizado por el lector.</param>
      <param name="quotas">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> que se va a aplicar.</param>
      <param name="onClose">Delegado <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> que se llamará cuando se cierre el lector.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Reinicializa un lector habilitado JavaScript Object Notation (JSON) para una secuencia especificada que contiene datos codificados por JSON.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" /> de entrada de donde se leerá.</param>
      <param name="encoding">
        <see cref="T:System.Text.Encoding" /> utilizado por el lector.</param>
      <param name="quotas">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> que se va a aplicar.</param>
      <param name="onClose">Delegado al que se llamará cuando se cierre el lector.</param>
    </member>
    <member name="T:System.Runtime.Serialization.Json.IXmlJsonWriterInitializer">
      <summary>Especifica la interfaz para inicializar un sistema de escritura de JavaScript Object Notation (JSON) al reutilizarlos para escribir en un flujo de salida determinado.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.IXmlJsonWriterInitializer.SetOutput(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary>Inicializa (o reinicializa) un sistema de escritura JavaScript Object Notation (JSON) para un flujo de salida especificado con una codificación de caracteres especificada.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" /> de salida donde escribe el sistema de escritura.</param>
      <param name="encoding">
        <see cref="T:System.Text.Encoding" /> que especifica la codificación de caracteres del flujo de salida.</param>
      <param name="ownsStream">Si es <see langword="true" />, el sistema de escritura cerrará el flujo de salida cuando haya finalizado; de lo contrario, es <see langword="false" />.</param>
    </member>
    <member name="T:System.Runtime.Serialization.Json.JsonReaderWriterFactory">
      <summary>Genera instancias de <see cref="T:System.Xml.XmlDictionaryReader" /> que pueden leer datos codificados por JavaScript Object Notation (JSON) de una secuencia o búfer y asignarlos a un conjunto de información XML e instancias de <see cref="T:System.Xml.XmlDictionaryWriter" /> que pueden asignar un conjunto de información XML a JSON y escribir datos codificados por JSON en una secuencia.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Crea <see cref="T:System.Xml.XmlDictionaryReader" /> que puede asignar búferes codificados con JavaScript Object Notation (JSON), con un tamaño y desplazamiento especificados y codificación de caracteres, a un conjunto de información XML.</summary>
      <param name="buffer">La matriz de búferes <see cref="T:System.Byte" /> de entrada de la cual se leerá.</param>
      <param name="offset">Posición inicial de la que leer en <paramref name="buffer" />.</param>
      <param name="count">Número de bytes que se pueden leer de <paramref name="buffer" />.</param>
      <param name="encoding">
        <see cref="T:System.Text.Encoding" /> que especifica la codificación de caracteres utilizada por el lector. Si se especifica <see langword="null" /> como valor, el lector intenta detectar automáticamente la codificación.</param>
      <param name="quotas">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> usado para evitar ataques de denegación de servicio al leer datos que no son de confianza.</param>
      <param name="onClose">Delegado <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> que se llamará cuando se cierre el lector. El valor predeterminado es <see langword="null" />.</param>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" /> que puede leer el formato JSON (JavaScript Object Notation).</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Crea <see cref="T:System.Xml.XmlDictionaryReader" /> que puede asignar búferes codificados con JavaScript Object Notation (JSON), de un tamaño y desplazamiento especificados, a un conjunto de información XML.</summary>
      <param name="buffer">La matriz de búferes <see cref="T:System.Byte" /> de entrada de la cual se leerá.</param>
      <param name="offset">Posición inicial de la que leer en <paramref name="buffer" />.</param>
      <param name="count">Número de bytes que se pueden leer de <paramref name="buffer" />.</param>
      <param name="quotas">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> usado para evitar ataques de denegación de servicio al leer datos que no son de confianza.</param>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" /> que puede leer el formato JSON (JavaScript Object Notation).</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Crea un <see cref="T:System.Xml.XmlDictionaryReader" /> que puede asignar búferes codificados con JavaScript Object Notation (JSON) a un conjunto de información XML.</summary>
      <param name="buffer">La matriz de búferes <see cref="T:System.Byte" /> de entrada de la cual se leerá.</param>
      <param name="quotas">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> usado para evitar ataques de denegación de servicio al leer datos que no son de confianza.</param>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" /> que puede procesar datos JavaScript Object Notation (JSON).</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Crea <see cref="T:System.Xml.XmlDictionaryReader" /> que puede asignar secuencias codificadas con JavaScript Object Notation (JSON), de un tamaño y desplazamiento especificados, a un conjunto de información XML.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" /> de entrada de donde se leerá.</param>
      <param name="encoding">
        <see cref="T:System.Text.Encoding" /> que especifica la codificación de caracteres utilizada por el lector. Si se especifica <see langword="null" /> como valor, el lector intenta detectar automáticamente la codificación.</param>
      <param name="quotas">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> usado para evitar ataques de denegación de servicio al leer datos que no son de confianza.</param>
      <param name="onClose">Delegado <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> que se llamará cuando se cierre el lector.</param>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" /> que puede leer el formato JSON (JavaScript Object Notation).</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Crea un <see cref="T:System.Xml.XmlDictionaryReader" /> que puede asignar secuencias codificadas con JavaScript Object Notation (JSON) a un conjunto de información XML.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" /> de entrada de donde se leerá.</param>
      <param name="quotas">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> usado para evitar ataques de denegación de servicio al leer datos que no son de confianza.</param>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" /> que puede leer el formato JSON (JavaScript Object Notation).</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream)">
      <summary>Crea un objeto <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe datos codificados con JSON en una secuencia.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" /> de salida para el escritor de JSON.</param>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe datos codificados con JSON en la secuencia basándose en un conjunto de información XML.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding)">
      <summary>Crea <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe datos codificados con JSON en una secuencia con una codificación de caracteres especificada.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" /> de salida para el escritor de JSON.</param>
      <param name="encoding">
        <see cref="T:System.Text.Encoding" /> que especifica la codificación de caracteres utilizada por el sistema de escritura. La codificación predeterminada es UTF-8.</param>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe datos codificados con JSON en la secuencia basándose en un conjunto de información XML.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary>Crea <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe datos codificados con JSON en una secuencia con una codificación de caracteres especificada.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" /> de salida para el escritor de JSON.</param>
      <param name="encoding">
        <see cref="T:System.Text.Encoding" /> que especifica la codificación de caracteres utilizada por el sistema de escritura. La codificación predeterminada es UTF-8.</param>
      <param name="ownsStream">Si es <see langword="true" />, el sistema de escritura cerrará el flujo de salida cuando haya finalizado; de lo contrario, es <see langword="false" />. El valor predeterminado es <see langword="true" />.</param>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe datos codificados con JSON en la secuencia basándose en un conjunto de información XML.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
      <summary>Crea <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe datos codificados con JSON en una secuencia con un carácter especificado.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" /> de salida para el escritor de JSON.</param>
      <param name="encoding">
        <see cref="T:System.Text.Encoding" /> que especifica la codificación de caracteres utilizada por el sistema de escritura. La codificación predeterminada es UTF-8.</param>
      <param name="ownsStream">Si es <see langword="true" />, el sistema de escritura cerrará el flujo de salida cuando haya finalizado; de lo contrario, es <see langword="false" />. El valor predeterminado es <see langword="true" />.</param>
      <param name="indent">Si es <see langword="true" />, la salida usa el formato multilínea y aplica sangría a cada nivel correctamente; de lo contrario, <see langword="false" />.</param>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe datos codificados con JSON en la secuencia basándose en un conjunto de información XML.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean,System.String)">
      <summary>Crea <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe datos codificados con JSON en una secuencia con un carácter especificado.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" /> de salida para el escritor de JSON.</param>
      <param name="encoding">
        <see cref="T:System.Text.Encoding" /> que especifica la codificación de caracteres utilizada por el sistema de escritura. La codificación predeterminada es UTF-8.</param>
      <param name="ownsStream">Si es <see langword="true" />, el sistema de escritura cerrará el flujo de salida cuando haya finalizado; de lo contrario, es <see langword="false" />. El valor predeterminado es <see langword="true" />.</param>
      <param name="indent">Si es <see langword="true" />, la salida usa el formato multilínea y aplica sangría a cada nivel correctamente; de lo contrario, <see langword="false" />.</param>
      <param name="indentChars">La cadena usada para aplicar sangría a cada nivel.</param>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryWriter" /> que escribe datos codificados con JSON en la secuencia basándose en un conjunto de información XML.</returns>
    </member>
  </members>
</doc>