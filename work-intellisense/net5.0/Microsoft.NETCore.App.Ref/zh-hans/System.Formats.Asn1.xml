<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Formats.Asn1</name>
  </assembly>
  <members>
    <member name="T:System.Formats.Asn1.Asn1Tag">
      <summary vsli:raw="This type represents an ASN.1 tag, as described in ITU-T Recommendation X.680.">此类型表示 ASN.1 标记，如 ITU-T 建议 X.680 中所述。</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Boolean">
      <summary vsli:raw="Represents the universal class tag for a Boolean value.">表示布尔值的通用类标记。</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.ConstructedBitString">
      <summary vsli:raw="Represents the universal class tag for a Bit String value under a constructed encoding.">表示采用结构化编码的位字符串值的通用类标记。</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.ConstructedOctetString">
      <summary vsli:raw="Represents the universal class tag for a Octet String value under a constructed encoding.">表示采用结构化编码的八进制字符串值的通用类标记。</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Enumerated">
      <summary vsli:raw="Represents the universal class tag for an Enumerated value.">表示枚举值的通用类标记。</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.GeneralizedTime">
      <summary vsli:raw="Represents the universal class tag for a GeneralizedTime value.">表示 GeneralizedTime 值的通用类标记。</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Integer">
      <summary vsli:raw="Represents the universal class tag for an Integer value.">表示整数值的通用类标记。</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Null">
      <summary vsli:raw="Represents the universal class tag for a &lt;see langword=&quot;null&quot; /&gt; value.">表示 <see langword="null" /> 值的通用类标记。</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.ObjectIdentifier">
      <summary vsli:raw="Represents the universal class tag for an Object Identifier value.">表示对象标识符值的通用类标记。</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.PrimitiveBitString">
      <summary vsli:raw="Represents the universal class tag for a Bit String value under a primitive encoding.">表示采用原始编码的位字符串值的通用类标记。</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.PrimitiveOctetString">
      <summary vsli:raw="Represents the universal class tag for an Octet String value under a primitive encoding.">表示采用原始编码的八进制字符串值的通用类标记。</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Sequence">
      <summary vsli:raw="Represents the universal class tag for a Sequence value (always a constructed encoding).">表示序列值的通用类标记（始终采用结构化编码）。</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.SetOf">
      <summary vsli:raw="Represents the universal class tag for a SetOf value (always a constructed encoding).">表示 SetOf 值的通用类标记（始终采用结构化编码）。</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.UtcTime">
      <summary vsli:raw="Represents the universal class tag for a UtcTime value.">表示 UtcTime 值的通用类标记。</summary>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.#ctor(System.Formats.Asn1.TagClass,System.Int32,System.Boolean)">
      <summary vsli:raw="Create an &lt;see cref=&quot;T:System.Formats.Asn1.Asn1Tag&quot; /&gt; for a specified value within a specified tag class.">为指定标记类中的指定值创建 <see cref="T:System.Formats.Asn1.Asn1Tag" />。</summary>
      <param name="tagClass" vsli:raw="The tag class for this tag.">此标记的标记类。</param>
      <param name="tagValue" vsli:raw="The numeric value for this tag.">此标记的数值。</param>
      <param name="isConstructed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; for a constructed tag, &lt;see langword=&quot;false&quot; /&gt; for a primitive tag.">对于构造标记为 <see langword="true" />，对于原始标记为 <see langword="false" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;tagClass&quot; /&gt; is not a known value.&#xA;             -or- &#xA;               &lt;paramref name=&quot;tagValue&quot; /&gt; is negative.">
        <paramref name="tagClass" /> 不是已知值。
-或- <paramref name="tagValue" /> 为负数。</exception>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.#ctor(System.Formats.Asn1.UniversalTagNumber,System.Boolean)">
      <summary vsli:raw="Create an &lt;see cref=&quot;T:System.Formats.Asn1.Asn1Tag&quot; /&gt; for a tag from the UNIVERSAL class.">为通用类中的标记创建 <see cref="T:System.Formats.Asn1.Asn1Tag" />。</summary>
      <param name="universalTagNumber" vsli:raw="One of the enumeration values that specifies the semantic type for this tag.">枚举值之一，指定此标记的语义类型。</param>
      <param name="isConstructed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; for a constructed tag, &lt;see langword=&quot;false&quot; /&gt; for a primitive tag.">对于构造标记为 <see langword="true" />，对于原始标记为 <see langword="false" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;universalTagNumber&quot; /&gt; is not a known value.">
        <paramref name="universalTagNumber" /> 不是已知值。</exception>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.AsConstructed">
      <summary vsli:raw="Produces a tag with the same &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; and &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; values, but whose &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.IsConstructed&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;.">生成一个具有相同的 <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 和 <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 值的标记，但其 <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> 为 <see langword="true" />。</summary>
      <returns vsli:raw="A tag with the same &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; and &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; values, but whose &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.IsConstructed&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;.">一个具有相同的 <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 和 <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 值的标记，但其 <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> 为 <see langword="true" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.AsPrimitive">
      <summary vsli:raw="Produces a tag with the same &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; and &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; values, but whose &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.IsConstructed&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;.">生成一个具有相同的 <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 和 <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 值的标记，但其 <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> 为 <see langword="false" />。</summary>
      <returns vsli:raw="A tag with the same &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; and &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; values, but whose &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.IsConstructed&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;.">一个具有相同的 <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 和 <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 值的标记，但其 <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> 为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize">
      <summary vsli:raw="Reports the number of bytes required for the BER-encoding of this tag.">报告此标记的 BER 编码所需的字节数。</summary>
      <returns vsli:raw="The number of bytes required for the BER-encoding of this tag.">此标记的 BER 编码所需的字节数。</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Decode(System.ReadOnlySpan{System.Byte},System.Int32@)">
      <summary vsli:raw="Reads a BER-encoded tag which starts at &lt;paramref name=&quot;source&quot; /&gt;.">读取从 <paramref name="source" /> 开始的 BER 编码标记。</summary>
      <param name="source" vsli:raw="The read only byte sequence whose beginning is a BER-encoded tag.">开头为 BER 编码的标记的只读字节序列。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, contains the number of bytes that contributed to the encoded tag. This parameter is treated as uninitialized.">当此方法返回时，包含构成编码标记的字节数。 该参数未经初始化即被处理。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The provided data does not decode to a tag.">提供的数据无法解码为标记。</exception>
      <returns vsli:raw="The decoded tag.">解码的标记。</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Encode(System.Span{System.Byte})">
      <summary vsli:raw="Writes the BER-encoded form of this tag to &lt;paramref name=&quot;destination&quot; /&gt;.">将此标记的 BER 编码形式写入到 <paramref name="destination" />。</summary>
      <param name="destination" vsli:raw="The start of where the encoded tag should be written.">应将编码标记写入到的位置的开头。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;destination&quot; /&gt;.&lt;see cref=&quot;P:System.Span`1.Length&quot; /&gt; &amp;lt; &lt;see cref=&quot;M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize&quot; /&gt;.">
        <paramref name="destination" />.<see cref="P:System.Span`1.Length" /> &lt; <see cref="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize" />。</exception>
      <returns vsli:raw="The number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">写入到 <paramref name="destination" /> 的字节数。</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Equals(System.Formats.Asn1.Asn1Tag)">
      <summary vsli:raw="Tests if &lt;paramref name=&quot;other&quot; /&gt; has the same encoding as this tag.">测试 <paramref name="other" /> 的编码是否与此标记相同。</summary>
      <param name="other" vsli:raw="Tag to test for equality.">要进行相等性测试的标记。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;other&quot; /&gt; has the same values for &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt;, &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt;, and &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.IsConstructed&quot; /&gt;; &lt;see langword=&quot;false&quot; /&gt; otherwise.">如果 <paramref name="other" /> 具有相同的 <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" />、<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 和 <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> 值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Equals(System.Object)">
      <summary vsli:raw="Tests if &lt;paramref name=&quot;obj&quot; /&gt; is an &lt;see cref=&quot;T:System.Formats.Asn1.Asn1Tag&quot; /&gt; with the same encoding as this tag.">测试 <paramref name="obj" /> 是否是 <see cref="T:System.Formats.Asn1.Asn1Tag" /> 并且与此标记的编码相同。</summary>
      <param name="obj" vsli:raw="Object to test for value equality.">要进行值相等性测试的对象</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is not an &lt;see cref=&quot;T:System.Formats.Asn1.Asn1Tag&quot; /&gt;, &lt;see cref=&quot;M:System.Formats.Asn1.Asn1Tag.Equals(System.Formats.Asn1.Asn1Tag)&quot; /&gt; otherwise.">如果 <paramref name="obj" /> 不是 <see cref="T:System.Formats.Asn1.Asn1Tag" />，则为 <see langword="false" />；否则为 <see cref="M:System.Formats.Asn1.Asn1Tag.Equals(System.Formats.Asn1.Asn1Tag)" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">返回此实例的哈希代码。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 位有符号整数哈希代码。</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.HasSameClassAndValue(System.Formats.Asn1.Asn1Tag)">
      <summary vsli:raw="Tests if &lt;paramref name=&quot;other&quot; /&gt; has the same &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; and &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; values as this tag, and does not compare &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.IsConstructed&quot; /&gt;.">测试 <paramref name="other" /> 的 <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 和 <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 值是否与此标记相同，不比较 <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" />。</summary>
      <param name="other" vsli:raw="Tag to test for concept equality.">要进行概念相等性测试的标记。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;other&quot; /&gt; has the same &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; and &lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; as this tag, &lt;see langword=&quot;false&quot; /&gt; otherwise.">如果 <paramref name="other" /> 的 <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" />、<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 与此标记相同，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.op_Equality(System.Formats.Asn1.Asn1Tag,System.Formats.Asn1.Asn1Tag)">
      <summary vsli:raw="Tests if two &lt;see cref=&quot;T:System.Formats.Asn1.Asn1Tag&quot; /&gt; values have the same BER encoding.">测试两个 <see cref="T:System.Formats.Asn1.Asn1Tag" /> 值是否具有相同的 BER 编码。</summary>
      <param name="left" vsli:raw="The first value to compare.">要比较的第一个值。</param>
      <param name="right" vsli:raw="The second value to compare.">要比较的第二个值。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; have the same BER encoding, &lt;see langword=&quot;false&quot; /&gt; otherwise.">如果 <paramref name="left" /> 和 <paramref name="right" /> 具有相同的 BER 编码，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.op_Inequality(System.Formats.Asn1.Asn1Tag,System.Formats.Asn1.Asn1Tag)">
      <summary vsli:raw="Tests if two &lt;see cref=&quot;T:System.Formats.Asn1.Asn1Tag&quot; /&gt; values have a different BER encoding.">测试两个 <see cref="T:System.Formats.Asn1.Asn1Tag" /> 值是否具有不同的 BER 编码。</summary>
      <param name="left" vsli:raw="The first value to compare.">要比较的第一个值。</param>
      <param name="right" vsli:raw="The second value to compare.">要比较的第二个值。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;left&quot; /&gt; and &lt;paramref name=&quot;right&quot; /&gt; have a different BER encoding, &lt;see langword=&quot;false&quot; /&gt; otherwise.">如果 <paramref name="left" /> 和 <paramref name="right" /> 具有不同的 BER 编码，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.ToString">
      <summary vsli:raw="Provides a text representation of this tag suitable for debugging.">提供此标记的便于调试的文本表示形式。</summary>
      <returns vsli:raw="A text representation of this tag suitable for debugging.">此标记的便于调试的文本表示形式。</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.TryDecode(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.Asn1Tag@,System.Int32@)">
      <summary vsli:raw="Attempts to read a BER-encoded tag which starts at &lt;paramref name=&quot;source&quot; /&gt;.">尝试读取从 <paramref name="source" /> 开始的 BER 编码的标记。</summary>
      <param name="source" vsli:raw="The read only byte sequence whose beginning is a BER-encoded tag.">开头为 BER 编码的标记的只读字节序列。</param>
      <param name="tag" vsli:raw="The decoded tag.">解码的标记。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, contains the number of bytes that contributed to the encoded tag, 0 on failure. This parameter is treated as uninitialized.">当此方法返回时，包含构成编码标记的字节数，失败时为 0。 该参数未经初始化即被处理。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a tag was correctly decoded; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果标记已正确解码，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary vsli:raw="Attempts to write the BER-encoded form of this tag to &lt;paramref name=&quot;destination&quot; /&gt;.">尝试将此标记的 BER 编码形式写入到 <paramref name="destination" />。</summary>
      <param name="destination" vsli:raw="The start of where the encoded tag should be written.">应将编码标记写入到的位置的开头。</param>
      <param name="bytesWritten" vsli:raw="Receives the value from &lt;see cref=&quot;M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize&quot; /&gt; on success, 0 on failure.">成功时将收到 <see cref="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize" /> 的值，失败时为 0。</param>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt;.&lt;see cref=&quot;P:System.Span`1.Length&quot; /&gt; &amp;lt; &lt;see cref=&quot;M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize&quot; /&gt;(), &lt;see langword=&quot;true&quot; /&gt; otherwise.">如果为以下值则为 <see langword="false" />：<paramref name="destination" />.<see cref="P:System.Span`1.Length" /> &lt; <see cref="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize" />()，否则为 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Formats.Asn1.Asn1Tag.IsConstructed">
      <summary vsli:raw="Indicates if the tag represents a constructed encoding (&lt;see langword=&quot;true&quot; /&gt;), or a primitive encoding (&lt;see langword=&quot;false&quot; /&gt;).">指示标记表示结构化编码 (<see langword="true" />) 还是原始编码 (<see langword="false" />)。</summary>
    </member>
    <member name="P:System.Formats.Asn1.Asn1Tag.TagClass">
      <summary vsli:raw="The tag class to which this tag belongs.">此标记所属于的标记类。</summary>
    </member>
    <member name="P:System.Formats.Asn1.Asn1Tag.TagValue">
      <summary vsli:raw="The numeric value for this tag.">此标记的数值。</summary>
    </member>
    <member name="T:System.Formats.Asn1.AsnContentException">
      <summary vsli:raw="The exception that is thrown when an encoded ASN.1 value cannot be successfully decoded.">无法成功解码已编码的 ASN.1 值时引发的异常。</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Formats.Asn1.AsnContentException&quot; /&gt; class, using the default message.">使用默认消息初始化 <see cref="T:System.Formats.Asn1.AsnContentException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Formats.Asn1.AsnContentException&quot; /&gt; class with serialized data.">用序列化数据初始化 <see cref="T:System.Formats.Asn1.AsnContentException" /> 类的新实例。</summary>
      <param name="info" vsli:raw="The object that holds the serialized object data.">承载序列化对象数据的对象。</param>
      <param name="context" vsli:raw="The contextual information about the source or destination.">关于来源和目标的上下文信息</param>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Formats.Asn1.AsnContentException&quot; /&gt; class, using the provided message.">使用提供的消息初始化 <see cref="T:System.Formats.Asn1.AsnContentException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">解释异常原因的错误消息。</param>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Formats.Asn1.AsnContentException&quot; /&gt; class, using the provided message and exception that is the cause of this exception.">使用提供的消息和引发此异常的异常初始化 <see cref="T:System.Formats.Asn1.AsnContentException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="The error message that explains the reason for the exception.">解释异常原因的错误消息。</param>
      <param name="inner" vsli:raw="The exception that is the cause of the current exception.">导致当前异常的异常。</param>
    </member>
    <member name="T:System.Formats.Asn1.AsnDecoder">
      <summary vsli:raw="Provides stateless methods for decoding BER-encoded, CER-encoded, and DER-encoded ASN.1 data.">提供了一种无状态方法用于解码 BER、CER 或 DER 编码的 ASN.1 数据。</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadBitString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a Bit String value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, returning the contents in a new array.">在指定编码规则下，从带有指定标记的 <paramref name="source" /> 中读取位字符串值，以返回新数组内容。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">包含编码数据的缓冲区。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">解释数据时要使用的编码约束。</param>
      <param name="unusedBitCount" vsli:raw="On success, receives the number of bits in the last byte which were reported as &quot;unused&quot; by the writer.&#xA;               This parameter is treated as uninitialized.">成功时，将接收由编写器报告为“未使用”的最后一个字节中的位数。
该参数未经初始化即被处理。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">此方法返回时，为编码值的字节总数。
该参数未经初始化即被处理。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">读取前要检查的标记，或使用 <see langword="null" /> 作为默认标记（通用 3）。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">未定义 <paramref name="ruleSet" />。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <returns vsli:raw="An array containing the contents of the Bit String value.">包含位字符串值内容的数组。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadBoolean(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a Boolean value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">在指定编码规则下，从带有指定标记的 <paramref name="source" /> 中读取布尔值。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">包含编码数据的缓冲区。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">解释数据时要使用的编码约束。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">此方法返回时，为编码值的字节总数。
该参数未经初始化即被处理。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 1).">读取前要检查的标记，或使用 <see langword="null" /> 作为默认标记（通用 1）。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">未定义 <paramref name="ruleSet" />。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <returns vsli:raw="The decoded value.">已解码的值。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadCharacterString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.UniversalTagNumber,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as character string with the specified tag and encoding type, returning the decoded string.">读取下一个值，作为带有指定标记和编码类型的字符串值，以返回解码字符串。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">包含编码数据的缓冲区。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">解释数据时要使用的编码约束。</param>
      <param name="encodingType" vsli:raw="One of the enumeration values which represents the value type to process.">枚举值之一，表示要处理的值类型。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">此方法返回时，为编码值的字节总数。
该参数未经初始化即被处理。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the universal tag that is appropriate to the requested encoding type.">读取前要检查的标记，或使用 <see langword="null" /> 作为符合请求的编码类型的通用标记。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;encodingType&quot; /&gt; is not a known character string type.">未定义 <paramref name="ruleSet" />。
-或- <paramref name="encodingType" /> 不是已知的字符串类型。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The string did not successfully decode.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。
-或- 字符串未成功解码。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not the same as &lt;paramref name=&quot;encodingType&quot; /&gt;.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 与 <paramref name="encodingType" /> 不同。</exception>
      <returns vsli:raw="The decoded value.">已解码的值。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEncodedValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@)">
      <summary vsli:raw="Locates the contents range for the encoded value at the beginning of the &lt;paramref name=&quot;source&quot; /&gt; buffer using the specified encoding rules.">使用指定的编码规则在 <paramref name="source" /> 缓冲区的开头查找编码值的内容范围。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">包含编码数据的缓冲区。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">解释数据时要使用的编码约束。</param>
      <param name="contentOffset" vsli:raw="When this method returns, the offset of the content payload relative to the start of &lt;paramref name=&quot;source&quot; /&gt;.&#xA;              This parameter is treated as uninitialized.">此方法返回时，为内容有效负载相对于 <paramref name="source" /> 起始位置的偏移量。
该参数未经初始化即被处理。</param>
      <param name="contentLength" vsli:raw="When this method returns, the number of bytes in the content payload (which may be 0).&#xA;              This parameter is treated as uninitialized.">此方法返回时，为内容有效负载中的字节数（可能为 0）。
该参数未经初始化即被处理。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;              This parameter is treated as uninitialized.">此方法返回时，为编码值的字节总数。
该参数未经初始化即被处理。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">未定义 <paramref name="ruleSet" />。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; does not represent a value encoded under the specified encoding rules.">
        <paramref name="source" /> 不表示在指定编码规则下编码的值。</exception>
      <returns vsli:raw="The tag identifying the content.">标识内容的标记。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEnumeratedBytes(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads an Enumerated value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, returning the contents as a slice of the buffer.">在指定编码规则下，从带有指定标记的 <paramref name="source" /> 中读取枚举值，进而以缓冲区切片形式返回内容。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">包含编码数据的缓冲区。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">解释数据时要使用的编码约束。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">此方法返回时，为编码值的字节总数。
该参数未经初始化即被处理。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">读取前要检查的标记，或使用 <see langword="null" /> 作为默认标记（通用 10）。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">未定义 <paramref name="ruleSet" />。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <returns vsli:raw="The slice of the buffer containing the bytes of the Enumerated value, in signed big-endian form.">缓冲区切片包含带符号的 Big Endian 格式的枚举值的字节数。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEnumeratedValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Type,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads an Enumerated from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, converting it to the non-[&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;paramref name=&quot;enumType&quot; /&gt;.">在指定编码规则下，从带有指定标记的 <paramref name="source" /> 中读取枚举，并将其转换为由 <paramref name="enumType" /> 指定的非 [<see cref="T:System.FlagsAttribute" />] 枚举。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">包含编码数据的缓冲区。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">解释数据时要使用的编码约束。</param>
      <param name="enumType" vsli:raw="Type object representing the destination type.">表示目标类型的类型对象。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">此方法返回时，为编码值的字节总数。
该参数未经初始化即被处理。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">读取前要检查的标记，或使用 <see langword="null" /> 作为默认标记（通用 10）。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;enumType&quot; /&gt; value.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。
-或- 编码值太大，无法容纳 <paramref name="enumType" /> 值。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;enumType&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;enumType&quot; /&gt; was declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;enumType&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;enumType&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="enumType" /> 不是一个枚举类型。
-或- <paramref name="enumType" /> 是使用 <see cref="T:System.FlagsAttribute" /> 声明的。
-或- <paramref name="enumType" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="enumType" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;enumType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="enumType" /> 为 <see langword="null" />。</exception>
      <returns vsli:raw="The Enumerated value converted to a &lt;paramref name=&quot;enumType&quot; /&gt;.">转换为 <paramref name="enumType" /> 的枚举值。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEnumeratedValue``1(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads an Enumerated from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, converting it to the non-[&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;typeparamref name=&quot;TEnum&quot; /&gt;.">在指定编码规则下，从带有指定标记的 <paramref name="source" /> 中读取枚举，并将其转换为由 <typeparamref name="TEnum" /> 指定的非 [<see cref="T:System.FlagsAttribute" />] 枚举。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">包含编码数据的缓冲区。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">解释数据时要使用的编码约束。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">此方法返回时，为编码值的字节总数。
该参数未经初始化即被处理。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">读取前要检查的标记，或使用 <see langword="null" /> 作为默认标记（通用 10）。</param>
      <typeparam name="TEnum" vsli:raw="Destination enum type.">目标枚举类型</typeparam>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">未定义 <paramref name="ruleSet" />。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;enumType&quot; /&gt; value.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。
-或- 编码值太大，无法容纳 <typeparamref name="TEnum" /> 值。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;typeparamref name=&quot;TEnum&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;typeparamref name=&quot;TEnum&quot; /&gt; was declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <typeparamref name="TEnum" /> 不是一个枚举类型。
-或- <typeparamref name="TEnum" /> 是使用 <see cref="T:System.FlagsAttribute" /> 声明的。
-或- <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <returns vsli:raw="The Enumerated value converted to a &lt;typeparamref name=&quot;TEnum&quot; /&gt;.">转换为 <typeparamref name="TEnum" /> 的枚举值。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadGeneralizedTime(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a GeneralizedTime value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">在指定编码规则下，从带有指定标记的 <paramref name="source" /> 中读取 GeneralizedTime 值。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">包含编码数据的缓冲区。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">解释数据时要使用的编码约束。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">此方法返回时，为编码值的字节总数。
该参数未经初始化即被处理。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 24).">读取前要检查的标记，或使用 <see langword="null" /> 作为默认标记（通用 24）。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">未定义 <paramref name="ruleSet" />。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <returns vsli:raw="The decoded value.">已解码的值。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadInteger(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads an Integer value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">在指定编码规则下，从带有指定标记的 <paramref name="source" /> 中读取整数值。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">包含编码数据的缓冲区。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">解释数据时要使用的编码约束。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">此方法返回时，为编码值的字节总数。
该参数未经初始化即被处理。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">读取前要检查的标记，或使用 <see langword="null" /> 作为默认标记（通用 2）。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">未定义 <paramref name="ruleSet" />。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <returns vsli:raw="The decoded numeric value.">已解码的数字值。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadIntegerBytes(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads an Integer value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, returning the contents as a slice of the buffer.">在指定编码规则下，从带有指定标记的 <paramref name="source" /> 中读取整数值，进而以缓冲区切片形式返回内容。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">包含编码数据的缓冲区。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">解释数据时要使用的编码约束。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">此方法返回时，为编码值的字节总数。
该参数未经初始化即被处理。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">读取前要检查的标记，或使用 <see langword="null" /> 作为默认标记（通用 2）。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">未定义 <paramref name="ruleSet" />。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <returns vsli:raw="The slice of the buffer containing the bytes of the Integer value, in signed big-endian form.">缓冲区切片包含带符号的 Big Endian 格式的整数值的字节数。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNamedBitList(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a NamedBitList from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">在指定编码规则下，从带有指定标记的 <paramref name="source" /> 中读取 NamedBitList。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">包含编码数据的缓冲区。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">解释数据时要使用的编码约束。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">此方法返回时，为编码值的字节总数。
该参数未经初始化即被处理。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">读取前要检查的标记，或使用 <see langword="null" /> 作为默认标记（通用 3）。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">未定义 <paramref name="ruleSet" />。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <returns vsli:raw="The bits from the encoded value.">编码值的位数。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNamedBitListValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Type,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a NamedBitList from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, converting it to the [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;paramref name=&quot;flagsEnumType&quot; /&gt;.">在指定编码规则下，从带有指定标记的 <paramref name="source" /> 中读取 NamedBitList，并将其转换为由 <paramref name="flagsEnumType" /> 指定的 [<see cref="T:System.FlagsAttribute" />] 枚举。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">包含编码数据的缓冲区。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">解释数据时要使用的编码约束。</param>
      <param name="flagsEnumType" vsli:raw="Type object representing the destination type.">表示目标类型的类型对象。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">此方法返回时，为编码值的字节总数。
该参数未经初始化即被处理。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">读取前要检查的标记，或使用 <see langword="null" /> 作为默认标记（通用 3）。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">未定义 <paramref name="ruleSet" />。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;flagsEnumType&quot; /&gt; value.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。
-或- 编码值太大，无法容纳 <paramref name="flagsEnumType" /> 值。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;flagsEnumType&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;flagsEnumType&quot; /&gt; was not declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="flagsEnumType" /> 不是一个枚举类型。
-或- 未使用 <see cref="T:System.FlagsAttribute" /> -或- <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 声明 <paramref name="flagsEnumType" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;flagsEnumType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;">
        <paramref name="flagsEnumType" /> 为 <see langword="null" /></exception>
      <returns vsli:raw="The NamedBitList value converted to a &lt;paramref name=&quot;flagsEnumType&quot; /&gt;.">转换为 <paramref name="flagsEnumType" /> 的 NamedBitList 值。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNamedBitListValue``1(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a NamedBitList from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, converting it to the [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt;.">在指定编码规则下，从带有指定标记的 <paramref name="source" /> 中读取 NamedBitList，并将其转换为由 <typeparamref name="TFlagsEnum" /> 指定的 [<see cref="T:System.FlagsAttribute" />] 枚举。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">包含编码数据的缓冲区。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">解释数据时要使用的编码约束。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">此方法返回时，为编码值的字节总数。
该参数未经初始化即被处理。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">读取前要检查的标记，或使用 <see langword="null" /> 作为默认标记（通用 3）。</param>
      <typeparam name="TFlagsEnum" vsli:raw="Destination enum type.">目标枚举类型</typeparam>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">未定义 <paramref name="ruleSet" />。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;TFlagsEnum&quot; /&gt; value.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。
-或- 编码值太大，无法容纳 <typeparamref name="TFlagsEnum" /> 值。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt; was not declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <typeparamref name="TFlagsEnum" /> 不是一个枚举类型。
-或- 未使用 <see cref="T:System.FlagsAttribute" /> -或- <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 声明 <typeparamref name="TFlagsEnum" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <returns vsli:raw="The NamedBitList value converted to a &lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt;.">转换为 <typeparamref name="TFlagsEnum" /> 的 NamedBitList 值。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNull(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a &lt;see langword=&quot;null&quot; /&gt; value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">在指定编码规则下，从带有指定标记的 <paramref name="source" /> 中读取 <see langword="null" /> 值。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">包含编码数据的缓冲区。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">解释数据时要使用的编码约束。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">此方法返回时，为编码值的字节总数。
该参数未经初始化即被处理。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 5).">读取前要检查的标记，或使用 <see langword="null" /> 作为默认标记（通用 5）。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">未定义 <paramref name="ruleSet" />。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadObjectIdentifier(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads an Object Identifier value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">在指定编码规则下，从带有指定标记的 <paramref name="source" /> 中读取对象标识符值。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">包含编码数据的缓冲区。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">解释数据时要使用的编码约束。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">此方法返回时，为编码值的字节总数。
该参数未经初始化即被处理。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 6).">读取前要检查的标记，或使用 <see langword="null" /> 作为默认标记（通用 6）。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">未定义 <paramref name="ruleSet" />。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <returns vsli:raw="The decoded object identifier, in dotted-decimal notation.">已解码的对象标识符，采用点分十进制表示法。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadOctetString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads an Octet String value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, returning the contents in a new array.">在指定编码规则下，从带有指定标记的 <paramref name="source" /> 中读取八进制字符串值，以返回新数组内容。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">包含编码数据的缓冲区。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">解释数据时要使用的编码约束。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">此方法返回时，为编码值的字节总数。
该参数未经初始化即被处理。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">读取前要检查的标记，或使用 <see langword="null" /> 作为默认标记（通用 4）。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">未定义 <paramref name="ruleSet" />。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <returns vsli:raw="An array containing the contents of the Octet String value.">包含八进制字符串值内容的数组。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadSequence(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a Sequence or Sequence-Of value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">在指定编码规则下，从带有指定标记的 <paramref name="source" /> 中读取 Sequence 或 Sequence-Of 值。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">包含编码数据的缓冲区。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">解释数据时要使用的编码约束。</param>
      <param name="contentOffset" vsli:raw="When this method returns, the offset of the content payload relative to the start of &lt;paramref name=&quot;source&quot; /&gt;.&#xA;               This parameter is treated as uninitialized.">此方法返回时，为内容有效负载相对于 <paramref name="source" /> 起始位置的偏移量。
该参数未经初始化即被处理。</param>
      <param name="contentLength" vsli:raw="When this method returns, the number of bytes in the content payload (which may be 0).&#xA;               This parameter is treated as uninitialized.">此方法返回时，为内容有效负载中的字节数（可能为 0）。
该参数未经初始化即被处理。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">此方法返回时，为编码值的字节总数。
该参数未经初始化即被处理。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 16).">读取前要检查的标记，或使用 <see langword="null" /> 作为默认标记（通用 16）。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">未定义 <paramref name="ruleSet" />。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadSetOf(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@,System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a Set-Of value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">在指定编码规则下，从带有指定标记的 <paramref name="source" /> 中读取 Set-Of 值。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">包含编码数据的缓冲区。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">解释数据时要使用的编码约束。</param>
      <param name="contentOffset" vsli:raw="When this method returns, the offset of the content payload relative to the start of &lt;paramref name=&quot;source&quot; /&gt;.&#xA;               This parameter is treated as uninitialized.">此方法返回时，为内容有效负载相对于 <paramref name="source" /> 起始位置的偏移量。
该参数未经初始化即被处理。</param>
      <param name="contentLength" vsli:raw="When this method returns, the number of bytes in the content payload (which may be 0).&#xA;               This parameter is treated as uninitialized.">此方法返回时，为内容有效负载中的字节数（可能为 0）。
该参数未经初始化即被处理。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">此方法返回时，为编码值的字节总数。
该参数未经初始化即被处理。</param>
      <param name="skipSortOrderValidation" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to always accept the data in the order it is presented, &lt;see langword=&quot;false&quot; /&gt; to verify that the data is sorted correctly when the encoding rules say sorting was required (CER and DER).">如果为 <see langword="true" />，则始终按显示的顺序接受数据，如果为 <see langword="false" />，则验证在编码规则说明需要排序时是否正确地对数据进行排序（CER 和 DER）。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 17).">读取前要检查的标记，或使用 <see langword="null" /> 作为默认标记（通用 17）。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">未定义 <paramref name="ruleSet" />。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadUtcTime(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a UtcTime value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules.">在指定编码规则下，从带有指定标记的 <paramref name="source" /> 中读取 UtcTime 值。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">包含编码数据的缓冲区。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">解释数据时要使用的编码约束。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">此方法返回时，为编码值的字节总数。
该参数未经初始化即被处理。</param>
      <param name="twoDigitYearMax" vsli:raw="The largest year to represent with this value.&#xA;               The default value, 2049, represents the 1950-2049 range for X.509 certificates.">此值所表示的最大年份。
默认值 2049 表示 x.509 证书的 1950-2049 范围。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 24).">读取前要检查的标记，或使用 <see langword="null" /> 作为默认标记（通用 24）。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;twoDigitYearMax&quot; /&gt; is not in the range [99, 9999].">未定义 <paramref name="ruleSet" />。
-或- <paramref name="twoDigitYearMax" /> 不在 [99, 9999] 的范围内。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <returns vsli:raw="The decoded value.">已解码的值。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadBitString(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to copy a Bit String value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules into &lt;paramref name=&quot;destination&quot; /&gt;.">在指定编码规则下，尝试从带有指定标记的 <paramref name="source" /> 中将位字符串值复制到 <paramref name="destination" />。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">包含编码数据的缓冲区。</param>
      <param name="destination" vsli:raw="The buffer in which to write.">要写入的缓冲区。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">解释数据时要使用的编码约束。</param>
      <param name="unusedBitCount" vsli:raw="On success, receives the number of bits in the last byte which were reported as &quot;unused&quot; by the writer.&#xA;               This parameter is treated as uninitialized.">成功时，将接收由编写器报告为“未使用”的最后一个字节中的位数。
该参数未经初始化即被处理。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">此方法返回时，为编码值的字节总数。
该参数未经初始化即被处理。</param>
      <param name="bytesWritten" vsli:raw="When this method returns, the total number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.&#xA;               This parameter is treated as uninitialized.">此方法返回时，为写入 <paramref name="destination" /> 的字节总数。
该参数未经初始化即被处理。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">读取前要检查的标记，或使用 <see langword="null" /> 作为默认标记（通用 3）。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">未定义 <paramref name="ruleSet" />。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;destination&quot; /&gt; overlaps &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。
-或- <paramref name="destination" /> 与 <paramref name="source" /> 重叠。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt; is large enough to receive the value of the Bit String; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="destination" /> 足以接收位字符串的值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadCharacterString(System.ReadOnlySpan{System.Byte},System.Span{System.Char},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.UniversalTagNumber,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads a character string value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, copying the decoded string into a provided destination buffer.">在指定编码规则下，从带有指定标记的 <paramref name="source" /> 中读取字符串值，进而将已解码的字符串复制到提供的目标缓冲区。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">包含编码数据的缓冲区。</param>
      <param name="destination" vsli:raw="The buffer in which to write.">要写入的缓冲区。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">解释数据时要使用的编码约束。</param>
      <param name="encodingType" vsli:raw="One of the enumeration values which represents the value type to process.">枚举值之一，表示要处理的值类型。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">此方法返回时，为编码值的字节总数。
该参数未经初始化即被处理。</param>
      <param name="charsWritten" vsli:raw="When this method returns, the number of chars written to &lt;paramref name=&quot;destination&quot; /&gt;.&#xA;               This parameter is treated as uninitialized.">此方法返回时，为写入 <paramref name="destination" /> 的字符数。
该参数未经初始化即被处理。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the universal tag that is appropriate to the requested encoding type.">读取前要检查的标记，或使用 <see langword="null" /> 作为符合请求的编码类型的通用标记。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;encodingType&quot; /&gt; is not a known character string type.">未定义 <paramref name="ruleSet" />。
-或- <paramref name="encodingType" /> 不是已知的字符串类型。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The string did not successfully decode.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。
-或- 字符串未成功解码。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not the same as &lt;paramref name=&quot;encodingType&quot; /&gt;.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 与 <paramref name="encodingType" /> 不同。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if &lt;paramref name=&quot;destination&quot; /&gt; had sufficient length to receive the value, otherwise &lt;see langword=&quot;false&quot; /&gt; and the reader does not advance.">如果 <paramref name="destination" /> 有足够的长度来接收值，则为 <see langword="true" /> 并推进读取器，否则为 <see langword="false" />，且读取器不会前进。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadCharacterStringBytes(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.Asn1Tag,System.Int32@,System.Int32@)">
      <summary vsli:raw="Attempts to read a character string value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, copying the unprocessed bytes into the provided destination buffer.">在指定编码规则下，尝试从带有指定标记的 <paramref name="source" /> 中读取字符串值，以将未处理的字节复制到所提供的目标缓冲区。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">包含编码数据的缓冲区。</param>
      <param name="destination" vsli:raw="The buffer in which to write.">要写入的缓冲区。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">解释数据时要使用的编码约束。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">读取前要检查的标记。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">此方法返回时，为编码值的字节总数。
该参数未经初始化即被处理。</param>
      <param name="bytesWritten" vsli:raw="On success, receives the number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">成功后，将收到已写入 <paramref name="destination" /> 的字节数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">未定义 <paramref name="ruleSet" />。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not a character string tag type.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;destination&quot; /&gt; overlaps &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 不是字符串标记类型。
-或- <paramref name="destination" /> 与 <paramref name="source" /> 重叠。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt; is large enough to receive the value of the unprocessed character string; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="destination" /> 足以接收位未处理字符串的值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadEncodedValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.Asn1Tag@,System.Int32@,System.Int32@,System.Int32@)">
      <summary vsli:raw="Attempts locate the contents range for the encoded value at the beginning of the &lt;paramref name=&quot;source&quot; /&gt; buffer using the specified encoding rules.">尝试使用指定编码规则查找 <paramref name="source" /> 缓冲区开头编码值的内容范围。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">包含编码数据的缓冲区。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">解释数据时要使用的编码约束。</param>
      <param name="tag" vsli:raw="When this method returns, the tag identifying the content.&#xA;              This parameter is treated as uninitialized.">此方法返回时，为标识内容的标记。
该参数未经初始化即被处理。</param>
      <param name="contentOffset" vsli:raw="When this method returns, the offset of the content payload relative to the start of &lt;paramref name=&quot;source&quot; /&gt;.&#xA;              This parameter is treated as uninitialized.">此方法返回时，为内容有效负载相对于 <paramref name="source" /> 起始位置的偏移量。
该参数未经初始化即被处理。</param>
      <param name="contentLength" vsli:raw="When this method returns, the number of bytes in the content payload (which may be 0).&#xA;              This parameter is treated as uninitialized.">此方法返回时，为内容有效负载中的字节数（可能为 0）。
该参数未经初始化即被处理。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;              This parameter is treated as uninitialized.">此方法返回时，为编码值的字节总数。
该参数未经初始化即被处理。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">未定义 <paramref name="ruleSet" />。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;source&quot; /&gt; represents a valid structural encoding for the specified encoding rules; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="source" /> 表示指定编码规则的有效结构编码，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadInt32(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read an Integer value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules as a signed 32-bit value.">在指定编码规则下，尝试从带有指定标记的 <paramref name="source" /> 中读取带符号的 32 位值形式的整数值。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">包含编码数据的缓冲区。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">解释数据时要使用的编码约束。</param>
      <param name="value" vsli:raw="On success, receives the interpreted numeric value.&#xA;               This parameter is treated as uninitialized.">成功时，将收到解释的数值。
该参数未经初始化即被处理。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">此方法返回时，为编码值的字节总数。
该参数未经初始化即被处理。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">读取前要检查的标记，或使用 <see langword="null" /> 作为默认标记（通用 2）。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">未定义 <paramref name="ruleSet" />。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Integer represents value is between &lt;see cref=&quot;F:System.Int32.MinValue&quot;&gt;Int32.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;, inclusive; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果整数表示值介于 <see cref="F:System.Int32.MinValue" /> 和 <see cref="F:System.Int32.MaxValue" />（含）之间，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadInt64(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int64@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read an Integer value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules as a signed 64-bit value.">在指定编码规则下，尝试从带有指定标记的 <paramref name="source" /> 中读取带符号的 64 位值形式的整数值。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">包含编码数据的缓冲区。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">解释数据时要使用的编码约束。</param>
      <param name="value" vsli:raw="On success, receives the interpreted numeric value.&#xA;               This parameter is treated as uninitialized.">成功时，将收到解释的数值。
该参数未经初始化即被处理。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">此方法返回时，为编码值的字节总数。
该参数未经初始化即被处理。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">读取前要检查的标记，或使用 <see langword="null" /> 作为默认标记（通用 2）。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">未定义 <paramref name="ruleSet" />。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Integer represents value is between &lt;see cref=&quot;F:System.Int64.MinValue&quot;&gt;Int64.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;, inclusive; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果整数表示值介于 <see cref="F:System.Int64.MinValue" /> 和 <see cref="F:System.Int64.MaxValue" />（含）之间，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadOctetString(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to get an Octet String value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, copying the value into the provided destination buffer.">在指定编码规则下，尝试从带有指定标记的 <paramref name="source" /> 中获取八进制字符串值，以将值复制到所提供的目标缓冲区。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">包含编码数据的缓冲区。</param>
      <param name="destination" vsli:raw="The buffer in which to write.">要写入的缓冲区。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">解释数据时要使用的编码约束。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">此方法返回时，为编码值的字节总数。
该参数未经初始化即被处理。</param>
      <param name="bytesWritten" vsli:raw="When this method returns, the total number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.&#xA;               This parameter is treated as uninitialized.">此方法返回时，为写入 <paramref name="destination" /> 的字节总数。
该参数未经初始化即被处理。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">读取前要检查的标记，或使用 <see langword="null" /> 作为默认标记（通用 4）。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">未定义 <paramref name="ruleSet" />。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;destination&quot; /&gt; overlaps &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。
-或- <paramref name="destination" /> 与 <paramref name="source" /> 重叠。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt; is large enough to receive the value of the Octet String; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="destination" /> 足以接收八进制字符串的值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadPrimitiveBitString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.ReadOnlySpan{System.Byte}@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to get a Bit String value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, if the value is contained in a single (primitive) encoding.">如果值包含在单个（基元）编码中，则尝试在指定编码规则下，从带有指定标记的 <paramref name="source" /> 中获取位字符串值。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">包含编码数据的缓冲区。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">解释数据时要使用的编码约束。</param>
      <param name="unusedBitCount" vsli:raw="On success, receives the number of bits in the last byte which were reported as &quot;unused&quot; by the writer.&#xA;               This parameter is treated as uninitialized.">成功时，将接收由编写器报告为“未使用”的最后一个字节中的位数。
该参数未经初始化即被处理。</param>
      <param name="value" vsli:raw="On success, receives a slice of the input buffer that corresponds to the value of the Bit String.&#xA;               This parameter is treated as uninitialized.">成功时，将接收与位字符串的值相对应的输入缓冲区的切片。
该参数未经初始化即被处理。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">此方法返回时，为编码值的字节总数。
该参数未经初始化即被处理。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">读取前要检查的标记，或使用 <see langword="null" /> 作为默认标记（通用 3）。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">未定义 <paramref name="ruleSet" />。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Bit String value has a primitive encoding and all of the bits reported as unused are set to 0; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果位字符串值具有基元编码，并且所有报告为“未使用”的位均设置为 0，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadPrimitiveCharacterStringBytes(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.Asn1Tag,System.ReadOnlySpan{System.Byte}@,System.Int32@)">
      <summary vsli:raw="Attempts to get an unprocessed character string value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, if the value is contained in a single (primitive) encoding.">如果值包含在单个（基元）编码中，则尝试在指定编码规则下，从带有指定标记的 <paramref name="source" /> 中获取未处理的字符串值。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">包含编码数据的缓冲区。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">解释数据时要使用的编码约束。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">读取前要检查的标记。</param>
      <param name="value" vsli:raw="On success, receives a slice of the input buffer that corresponds to the value of the Bit String.&#xA;               This parameter is treated as uninitialized.">成功时，将接收与位字符串的值相对应的输入缓冲区的切片。
该参数未经初始化即被处理。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">此方法返回时，为编码值的字节总数。
该参数未经初始化即被处理。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">未定义 <paramref name="ruleSet" />。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not a character string tag type.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 不是字符串标记类型。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the character string value has a primitive encoding; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果该字符串值具有基元编码，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadPrimitiveOctetString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.ReadOnlySpan{System.Byte}@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to get an Octet String value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules, if the value is contained in a single (primitive) encoding.">如果值包含在单个（基元）编码中，则尝试在指定编码规则下，从带有指定标记的 <paramref name="source" /> 中获取八进制字符串值。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">包含编码数据的缓冲区。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">解释数据时要使用的编码约束。</param>
      <param name="value" vsli:raw="On success, receives a slice of the input buffer that corresponds to the value of the Octet String.&#xA;               This parameter is treated as uninitialized.">成功时，将接收与八进制字符串的值相对应的输入缓冲区的切片。
该参数未经初始化即被处理。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">此方法返回时，为编码值的字节总数。
该参数未经初始化即被处理。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">读取前要检查的标记，或使用 <see langword="null" /> 作为默认标记（通用 4）。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">未定义 <paramref name="ruleSet" />。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Octet String value has a primitive encoding; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果该八进制字符串值具有基元编码，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadUInt32(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.UInt32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read an Integer value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules as an unsigned 32-bit value.">在指定编码规则下，尝试从带有指定标记的 <paramref name="source" /> 中读取无符号 32 位值形式的整数值。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">包含编码数据的缓冲区。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">解释数据时要使用的编码约束。</param>
      <param name="value" vsli:raw="On success, receives the interpreted numeric value.&#xA;               This parameter is treated as uninitialized.">成功时，将收到解释的数值。
该参数未经初始化即被处理。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">此方法返回时，为编码值的字节总数。
该参数未经初始化即被处理。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">读取前要检查的标记，或使用 <see langword="null" /> 作为默认标记（通用 2）。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">未定义 <paramref name="ruleSet" />。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Integer represents value is between &lt;see cref=&quot;F:System.UInt32.MinValue&quot;&gt;UInt32.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.UInt32.MaxValue&quot;&gt;UInt32.MaxValue&lt;/see&gt;, inclusive; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果整数表示值介于 <see cref="F:System.UInt32.MinValue" /> 和 <see cref="F:System.UInt32.MaxValue" />（含）之间，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadUInt64(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.UInt64@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read an Integer value from &lt;paramref name=&quot;source&quot; /&gt; with a specified tag under the specified encoding rules as an unsigned 64-bit value.">在指定编码规则下，尝试从带有指定标记的 <paramref name="source" /> 中读取无符号 64 位值形式的整数值。</summary>
      <param name="source" vsli:raw="The buffer containing encoded data.">包含编码数据的缓冲区。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints to use when interpreting the data.">解释数据时要使用的编码约束。</param>
      <param name="value" vsli:raw="On success, receives the interpreted numeric value.&#xA;               This parameter is treated as uninitialized.">成功时，将收到解释的数值。
该参数未经初始化即被处理。</param>
      <param name="bytesConsumed" vsli:raw="When this method returns, the total number of bytes for the encoded value.&#xA;               This parameter is treated as uninitialized.">此方法返回时，为编码值的字节总数。
该参数未经初始化即被处理。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">读取前要检查的标记，或使用 <see langword="null" /> 作为默认标记（通用 2）。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">未定义 <paramref name="ruleSet" />。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the Integer represents value is between &lt;see cref=&quot;F:System.UInt64.MinValue&quot;&gt;UInt64.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.UInt64.MaxValue&quot;&gt;UInt64.MaxValue&lt;/see&gt;, inclusive; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果整数表示值介于 <see cref="F:System.UInt64.MinValue" /> 和 <see cref="F:System.UInt64.MaxValue" />（含）之间，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnEncodingRules">
      <summary vsli:raw="The encoding ruleset for an &lt;see cref=&quot;T:System.Formats.Asn1.AsnReader&quot; /&gt; or &lt;see cref=&quot;T:System.Formats.Asn1.AsnWriter&quot; /&gt;.">
        <see cref="T:System.Formats.Asn1.AsnReader" /> 或 <see cref="T:System.Formats.Asn1.AsnWriter" /> 的编码规则集。</summary>
    </member>
    <member name="F:System.Formats.Asn1.AsnEncodingRules.BER">
      <summary vsli:raw="ITU-T X.690 Basic Encoding Rules.">ITU-T X.690 基本编码规则</summary>
    </member>
    <member name="F:System.Formats.Asn1.AsnEncodingRules.CER">
      <summary vsli:raw="ITU-T X.690 Canonical Encoding Rules.">ITU-T X.690 规范编码规则</summary>
    </member>
    <member name="F:System.Formats.Asn1.AsnEncodingRules.DER">
      <summary vsli:raw="ITU-T X.690 Distinguished Encoding Rules.">ITU-T X.690 可辨别编码规则</summary>
    </member>
    <member name="T:System.Formats.Asn1.AsnReader">
      <summary vsli:raw="A stateful, forward-only reader for BER-, CER-, or DER-encoded ASN.1 data.">用于 BER 编码、CER 编码或 DER 编码的 ASN.1 数据的监控状态的只进读取器。</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.#ctor(System.ReadOnlyMemory{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.AsnReaderOptions)">
      <summary vsli:raw="Construct an &lt;see cref=&quot;T:System.Formats.Asn1.AsnReader&quot; /&gt; over &lt;paramref name=&quot;data&quot; /&gt; with a given ruleset.">使用给定的规则集对 <paramref name="data" /> 构造 <see cref="T:System.Formats.Asn1.AsnReader" />。</summary>
      <param name="data" vsli:raw="The data to read.">要读取的数据。</param>
      <param name="ruleSet" vsli:raw="The encoding constraints for the reader.">对读取器的编码约束。</param>
      <param name="options" vsli:raw="Additional options for the reader.">读取器的附加选项。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">未定义 <paramref name="ruleSet" />。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.PeekContentBytes">
      <summary vsli:raw="Get a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; view of the content octets (bytes) of the next encoded value without advancing the reader.">获取下一个编码值的内容八进制（字节）的 <see cref="T:System.ReadOnlyMemory`1" /> 视图（读取器不会前进）。</summary>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The reader is positioned at a point where the tag or length is invalid under the current encoding rules.">读取器定位在当前编码规则下的标记或长度无效的点上。</exception>
      <returns vsli:raw="The bytes of the contents octets of the next encoded value.">下一个编码值的内容八进制字节。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.PeekEncodedValue">
      <summary vsli:raw="Get a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; view of the next encoded value without advancing the reader. For indefinite length encodings this includes the End of Contents marker.">获取下一个编码值的 <see cref="T:System.ReadOnlyMemory`1" /> 视图（读取器不会前进）。 对于不确定长度的编码，这包括内容结束标记。</summary>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The reader is positioned at a point where the tag or length is invalid under the current encoding rules.">读取器定位在当前编码规则下的标记或长度无效的点上。</exception>
      <returns vsli:raw="The bytes of the next encoded value.">下一个编码值的字节。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.PeekTag">
      <summary vsli:raw="Read the encoded tag at the next data position, without advancing the reader.">读取下一个数据位置的编码标记（读取器不会前进）。</summary>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="A tag could not be decoded at the reader's current position.">不能在读取器的当前位置对标记进行解码。</exception>
      <returns vsli:raw="The decoded tag value.">已解码的标记值。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadBitString(System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a BIT STRING with a specified tag, returning the value in a byte array.">读取下一个值，作为带有指定标记的 BIT STRING 值，并以字节数组形式返回该值。</summary>
      <param name="unusedBitCount" vsli:raw="On success, receives the number of bits in the last byte which were reported as &quot;unused&quot; by the writer.">成功时，将接收由编写器报告为“未使用”的最后一个字节中的位数。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 1).">读取前要检查的标记，或使用 <see langword="null" /> 作为默认标记（通用 1）。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <returns vsli:raw="A copy of the value in a newly allocated, precisely sized, array.">一个新分配的、精确大小的数组中的值的副本。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadBoolean(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a Boolean with a specified tag.">读取下一个值，作为带有指定标记的布尔值。</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 1).">读取前要检查的标记，或使用 <see langword="null" /> 作为默认标记（通用 1）。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <returns vsli:raw="The decoded value.">已解码的值。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadCharacterString(System.Formats.Asn1.UniversalTagNumber,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as character string with the specified tag and encoding type, returning the decoded value as a string.">读取下一个值，作为带有指定标记和编码类型的字符串值，并以字符串形式返回该解码值。</summary>
      <param name="encodingType" vsli:raw="One of the enumeration values representing the value type to process.">枚举值之一，表示要处理的值类型。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the universal tag that is appropriate to the requested encoding type.">读取前要检查的标记，或使用 <see langword="null" /> 作为符合请求的编码类型的通用标记。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;encodingType&quot; /&gt; is not a known character string type.">
        <paramref name="encodingType" /> 不是一个已知的字符串类型。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The string did not successfully decode.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。
-或- 字符串未成功解码。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not the same as &lt;paramref name=&quot;encodingType&quot; /&gt;.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 与 <paramref name="encodingType" /> 不同。</exception>
      <returns vsli:raw="The decoded value.">已解码的值。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEncodedValue">
      <summary vsli:raw="Get a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; view of the next encoded value, and advance the reader past it. For an indefinite length encoding this includes the End of Contents marker.">获取下一个编码值的 <see cref="T:System.ReadOnlyMemory`1" /> 视图，并推进已超过的读取器。 对于不确定长度的编码，这包括内容结束标记。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; view of the next encoded value.">下一个编码值的 <see cref="T:System.ReadOnlyMemory`1" /> 视图。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEnumeratedBytes(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a Enumerated with a specified tag, returning the contents as a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data.">读取下一个值，作为带有指定标记的枚举值，并以原始数据的 <see cref="T:System.ReadOnlyMemory`1" /> 形式返回内容。</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">读取前要检查的标记，或使用 <see langword="null" /> 作为默认标记（通用 10）。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <returns vsli:raw="The bytes of the Enumerated value, in signed big-endian form.">带符号的 Big Endian 格式的枚举值的字节数。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEnumeratedValue(System.Type,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as an Enumerated with a specified tag, converting it to the non-[&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;paramref name=&quot;enumType&quot; /&gt;.">读取下一个值，作为带有指定标记的枚举值，并将其转换为由 <paramref name="enumType" /> 指定的非 [<see cref="T:System.FlagsAttribute" />] 枚举。</summary>
      <param name="enumType" vsli:raw="Type object representing the destination type.">表示目标类型的类型对象。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">读取前要检查的标记，或使用 <see langword="null" /> 作为默认标记（通用 10）。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;enumType&quot; /&gt; value.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。
-或- 编码值太大，无法容纳 <paramref name="enumType" /> 值。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;enumType&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;enumType&quot; /&gt; was declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;enumType&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;enumType&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="enumType" /> 不是一个枚举类型。
-或- <paramref name="enumType" /> 是使用 <see cref="T:System.FlagsAttribute" /> 声明的。
-或- <paramref name="enumType" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="enumType" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;enumType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="enumType" /> 为 <see langword="null" />。</exception>
      <returns vsli:raw="The Enumerated value converted to a &lt;paramref name=&quot;enumType&quot; /&gt;.">转换为 <paramref name="enumType" /> 的枚举值。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEnumeratedValue``1(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as an Enumerated with a specified tag, converting it to the non-[&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;typeparamref name=&quot;TEnum&quot; /&gt;.">读取下一个值，作为带有指定标记的枚举值，并将其转换为由 <typeparamref name="TEnum" /> 指定的非 [<see cref="T:System.FlagsAttribute" />] 枚举。</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">读取前要检查的标记，或使用 <see langword="null" /> 作为默认标记（通用 10）。</param>
      <typeparam name="TEnum" vsli:raw="Destination enum type.">目标枚举类型</typeparam>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;TEnum&quot; /&gt; value.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。
-或- 编码值太大，无法容纳 <typeparamref name="TEnum" /> 值。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;typeparamref name=&quot;TEnum&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;typeparamref name=&quot;TEnum&quot; /&gt; was declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <typeparamref name="TEnum" /> 不是一个枚举类型。
-或- <typeparamref name="TEnum" /> 是使用 <see cref="T:System.FlagsAttribute" /> 声明的。
-或- <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <returns vsli:raw="The Enumerated value converted to a &lt;typeparamref name=&quot;TEnum&quot; /&gt;.">转换为 <typeparamref name="TEnum" /> 的枚举值。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadGeneralizedTime(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a GeneralizedTime with a specified tag.">读取下一个值，作为带有指定标记的 GeneralizedTime 值。</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 24).">读取前要检查的标记，或使用 <see langword="null" /> 作为默认标记（通用 24）。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <returns vsli:raw="The decoded value.">已解码的值。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadInteger(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as an Integer with a specified tag.">读取下一个值，作为带有指定标记的整数值。</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">读取前要检查的标记，或使用 <see langword="null" /> 作为默认标记（通用 2）。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <returns vsli:raw="The decoded value.">已解码的值。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadIntegerBytes(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a Integer with a specified tag, returning the contents as a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data.">读取下一个值，作为带有指定标记的整数值，并以原始数据的 <see cref="T:System.ReadOnlyMemory`1" /> 的形式返回内容。</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">读取前要检查的标记，或使用 <see langword="null" /> 作为默认标记（通用 2）。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <returns vsli:raw="The bytes of the Integer value, in signed big-endian form.">带符号的 Big Endian 格式的整数值的字节数。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNamedBitList(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a NamedBitList with a specified tag.">读取下一个值，作为带有指定标记的 NamedBitList 值。</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">读取前要检查的标记。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <returns vsli:raw="The bits from the encoded value.">编码值的位数。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNamedBitListValue(System.Type,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a NamedBitList with a specified tag, converting it to the [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;paramref name=&quot;flagsEnumType&quot; /&gt;.">读取下一个值，作为带有指定标记的 NamedBitList 值，并将其转换为由 <paramref name="flagsEnumType" /> 指定的 [<see cref="T:System.FlagsAttribute" />] 枚举。</summary>
      <param name="flagsEnumType" vsli:raw="Type object representing the destination type.">表示目标类型的类型对象。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">读取前要检查的标记。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;flagsEnumType&quot; /&gt; value.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。
-或- 编码值太大，无法容纳 <paramref name="flagsEnumType" /> 值。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;flagsEnumType&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;flagsEnumType&quot; /&gt; was not declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="flagsEnumType" /> 不是一个枚举类型。
-或- 未使用 <see cref="T:System.FlagsAttribute" /> -或- <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 声明 <paramref name="flagsEnumType" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;flagsEnumType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;">
        <paramref name="flagsEnumType" /> 为 <see langword="null" /></exception>
      <returns vsli:raw="The NamedBitList value converted to a &lt;paramref name=&quot;flagsEnumType&quot; /&gt;.">转换为 <paramref name="flagsEnumType" /> 的 NamedBitList 值。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNamedBitListValue``1(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a NamedBitList with a specified tag, converting it to the [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum specified by &lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt;.">读取下一个值，作为带有指定标记的 NamedBitList 值，并将其转换为由 <typeparamref name="TFlagsEnum" /> 指定的 [<see cref="T:System.FlagsAttribute" />] 枚举。</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">读取前要检查的标记。</param>
      <typeparam name="TFlagsEnum" vsli:raw="Destination enum type.">目标枚举类型</typeparam>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The encoded value is too big to fit in a &lt;paramref name=&quot;TFlagsEnum&quot; /&gt; value.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。
-或- 编码值太大，无法容纳 <typeparamref name="TFlagsEnum" /> 值。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt; is not an enum type.&#xA;&#xA;-or-&#xA;&#xA;&lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt; was not declared with &lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <typeparamref name="TFlagsEnum" /> 不是一个枚举类型。
-或- 未使用 <see cref="T:System.FlagsAttribute" /> -或- <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 声明 <typeparamref name="TFlagsEnum" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <returns vsli:raw="The NamedBitList value converted to a &lt;typeparamref name=&quot;TFlagsEnum&quot; /&gt;.">转换为 <typeparamref name="TFlagsEnum" /> 的 NamedBitList 值。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNull(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a NULL with a specified tag.">读取下一个值，作为带有指定标记的 NULL 值。</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 5).">读取前要检查的标记，或使用 <see langword="null" /> 作为默认标记（通用 5）。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadObjectIdentifier(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as an OBJECT IDENTIFIER with a specified tag, returning the value in a dotted decimal format string.">读取下一个值，作为带有指定标记的 OBJECT IDENTIFIER 值，并以用点分隔的十进制格式字符串形式返回该值。</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 6).">读取前要检查的标记，或使用 <see langword="null" /> 作为默认标记（通用 6）。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <returns vsli:raw="The object identifier value in a dotted decimal format string.">采用点分隔的十进制格式字符串形式的对象标识符。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as an OCTET STRING with tag UNIVERSAL 4, returning the value in a byte array.">读取下一个值，作为带有通用 4 标记的 OCTET STRING 值，并以字节数组形式返回该值。</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">读取前要检查的标记，或使用 <see langword="null" /> 作为默认标记（通用 4）。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <returns vsli:raw="A copy of the value in a newly allocated, precisely sized, array.">一个新分配的、精确大小的数组中的值的副本。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a SEQUENCE or SEQUENCE-OF with the specified tag and returns the result as a new reader positioned at the first value in the sequence (or with &lt;see cref=&quot;P:System.Formats.Asn1.AsnReader.HasData&quot; /&gt; == &lt;see langword=&quot;false&quot; /&gt;).">读取下一个值，作为带有指定标记的 SEQUENCE 或 SEQUENCE-OF 值，并将结果作为定位在序列中的第一个值处（或带有 <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />）的一个新读取器的形式返回。</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 16).">读取前要检查的标记，或使用 <see langword="null" /> 作为默认标记（通用 16）。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <returns vsli:raw="A new reader positioned at the first value in the sequence (or with &lt;see cref=&quot;P:System.Formats.Asn1.AsnReader.HasData&quot; /&gt; == &lt;see langword=&quot;false&quot; /&gt;).">定位在序列中的第一个值处（或带有 <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />）的新的读取器。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadSetOf(System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a SET-OF with the specified tag and returns the result as a new reader positioned at the first value in the set-of (or with &lt;see cref=&quot;P:System.Formats.Asn1.AsnReader.HasData&quot; /&gt; == &lt;see langword=&quot;false&quot; /&gt;).">读取下一个值，作为带有指定标记的 SET-OF 值，并将结果作为定位在 set-of 中的第一个值处（或带有 <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />）的一个新读取器返回。</summary>
      <param name="skipSortOrderValidation" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to always accept the data in the order it is presented, &lt;see langword=&quot;false&quot; /&gt; to verify that the data is sorted correctly when the encoding rules say sorting was required (CER and DER).">如果为 <see langword="true" />，则始终按显示的顺序接受数据，如果为 <see langword="false" />，则验证在编码规则说明需要排序时是否正确地对数据进行排序（CER 和 DER）。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 17).">读取前要检查的标记，或使用 <see langword="null" /> 作为默认标记（通用 17）。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <returns vsli:raw="A new reader positioned at the first value in the set-of (or with &lt;see cref=&quot;P:System.Formats.Asn1.AsnReader.HasData&quot; /&gt; == &lt;see langword=&quot;false&quot; /&gt;).">定位在 set-of 中的第一个值处（或带有 <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />）的新的读取器。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a SET-OF with the specified tag and returns the result as a new reader positioned at the first value in the set-of (or with &lt;see cref=&quot;P:System.Formats.Asn1.AsnReader.HasData&quot; /&gt; == &lt;see langword=&quot;false&quot; /&gt;), using the &lt;see cref=&quot;P:System.Formats.Asn1.AsnReaderOptions.SkipSetSortOrderVerification&quot; /&gt; value from the constructor (default &lt;see langword=&quot;false&quot; /&gt;).">读取下一个值，作为带有指定标记的 SET-OF 值，并使用来自构造函数（默认为 <see langword="false" />）的 <see cref="P:System.Formats.Asn1.AsnReaderOptions.SkipSetSortOrderVerification" /> 值将结果作为定位在 set-of 中的第一个值处（或带有 <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />）的一个新读取器返回。</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 17).">读取前要检查的标记，或使用 <see langword="null" /> 作为默认标记（通用 17）。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <returns vsli:raw="A new reader positioned at the first value in the set-of (or with &lt;see cref=&quot;P:System.Formats.Asn1.AsnReader.HasData&quot; /&gt; == &lt;see langword=&quot;false&quot; /&gt;).">定位在 set-of 中的第一个值处（或带有 <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />）的新的读取器。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadUtcTime(System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a UTCTime with a specified tag.">读取下一个值，作为带有指定标记的 UTCTime 值。</summary>
      <param name="twoDigitYearMax" vsli:raw="The largest year to represent with this value.">此值所表示的最大年份。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 23).">读取前要检查的标记，或使用 <see langword="null" /> 作为默认标记（通用 23）。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <returns vsli:raw="The decoded value.">已解码的值。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadUtcTime(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a UTCTime with a specified tag using the &lt;see cref=&quot;P:System.Formats.Asn1.AsnReaderOptions.UtcTimeTwoDigitYearMax&quot; /&gt; value from options passed to the constructor (with a default of 2049).">读取下一个值，作为带有指定标记并使用传递给构造函数的选项中的 <see cref="P:System.Formats.Asn1.AsnReaderOptions.UtcTimeTwoDigitYearMax" /> 值（默认值为 2049）的 UTCTime 值。</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 23).">读取前要检查的标记，或使用 <see langword="null" /> 作为默认标记（通用 23）。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <returns vsli:raw="The decoded value.">已解码的值。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ThrowIfNotEmpty">
      <summary vsli:raw="Throws a standardized &lt;see cref=&quot;T:System.Formats.Asn1.AsnContentException&quot; /&gt; if the reader has remaining data, performs no function if &lt;see cref=&quot;P:System.Formats.Asn1.AsnReader.HasData&quot; /&gt; returns &lt;see langword=&quot;false&quot; /&gt;.">如果读取器包含剩余数据，则会引发标准化 <see cref="T:System.Formats.Asn1.AsnContentException" />，如果 <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> 返回 <see langword="false" />，则不执行任何功能。</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadBitString(System.Span{System.Byte},System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a BIT STRING with a specified tag, copying the value into a provided destination buffer.">读取下一个值，作为带有指定标记的 BIT STRING 值，并将该值复制到所提供的目标缓冲区。</summary>
      <param name="destination" vsli:raw="The buffer in which to write.">要写入的缓冲区。</param>
      <param name="unusedBitCount" vsli:raw="On success, receives the number of bits in the last byte which were reported as &quot;unused&quot; by the writer.">成功时，将接收由编写器报告为“未使用”的最后一个字节中的位数。</param>
      <param name="bytesWritten" vsli:raw="On success, receives the number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">成功后，将收到已写入 <paramref name="destination" /> 的字节数。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 1).">读取前要检查的标记，或使用 <see langword="null" /> 作为默认标记（通用 1）。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if &lt;paramref name=&quot;destination&quot; /&gt; had sufficient length to receive the value, otherwise &lt;see langword=&quot;false&quot; /&gt; and the reader does not advance.">如果 <paramref name="destination" /> 有足够的长度来接收值，则为 <see langword="true" /> 并推进读取器，否则为 <see langword="false" />，且读取器不会前进。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadCharacterString(System.Span{System.Char},System.Formats.Asn1.UniversalTagNumber,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as character string with the specified tag and encoding type, copying the decoded value into a provided destination buffer.">读取下一个值，作为带有指定标记和编码类型的字符串值，并将已解码的值复制到所提供的目标缓冲区。</summary>
      <param name="destination" vsli:raw="The buffer in which to write.">要写入的缓冲区。</param>
      <param name="encodingType" vsli:raw="One of the enumeration values representing the value type to process.">枚举值之一，表示要处理的值类型。</param>
      <param name="charsWritten" vsli:raw="On success, receives the number of chars written to &lt;paramref name=&quot;destination&quot; /&gt;.">成功后，将收到已写入 <paramref name="destination" /> 的字符数。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the universal tag that is appropriate to the requested encoding type.">读取前要检查的标记，或使用 <see langword="null" /> 作为符合请求的编码类型的通用标记。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;encodingType&quot; /&gt; is not a known character string type.">
        <paramref name="encodingType" /> 不是一个已知的字符串类型。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The string did not successfully decode.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。
-或- 字符串未成功解码。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not the same as &lt;paramref name=&quot;encodingType&quot; /&gt;.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 与 <paramref name="encodingType" /> 不同。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if &lt;paramref name=&quot;destination&quot; /&gt; had sufficient length to receive the value, otherwise &lt;see langword=&quot;false&quot; /&gt; and the reader does not advance.">如果 <paramref name="destination" /> 有足够的长度来接收值，则为 <see langword="true" /> 并推进读取器，否则为 <see langword="false" />，且读取器不会前进。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadCharacterStringBytes(System.Span{System.Byte},System.Formats.Asn1.Asn1Tag,System.Int32@)">
      <summary vsli:raw="Reads the next value as character string with the specified tag, copying the unprocessed bytes into a provided destination buffer.">读取下一个值，作为带有指定标记的字符串值，并将未处理的字节复制到所提供的目标缓冲区。</summary>
      <param name="destination" vsli:raw="The buffer in which to write.">要写入的缓冲区。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">读取前要检查的标记。</param>
      <param name="bytesWritten" vsli:raw="On success, receives the number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">成功后，将收到已写入 <paramref name="destination" /> 的字节数。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not a character string tag type.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 不是字符串标记类型。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if &lt;paramref name=&quot;destination&quot; /&gt; had sufficient length to receive the value, otherwise &lt;see langword=&quot;false&quot; /&gt; and the reader does not advance.">如果 <paramref name="destination" /> 有足够的长度来接收值，则为 <see langword="true" /> 并推进读取器，否则为 <see langword="false" />，且读取器不会前进。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadInt32(System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read the next value as an Integer with a specified tag, as a signed 32-bit value.">尝试读取下一个带有指定标记并作为有符号的 32 位值的整数值。</summary>
      <param name="value" vsli:raw="On success, receives the decoded value.">成功后，将收到解码后的值。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">读取前要检查的标记，或使用 <see langword="null" /> 作为默认标记（通用 2）。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; and does not advance the reader if the value is not between &lt;see cref=&quot;F:System.Int32.MinValue&quot;&gt;Int32.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;, inclusive; otherwise &lt;see langword=&quot;true&quot; /&gt; is returned and the reader advances.">如果值不在 <see cref="F:System.Int32.MinValue" /> 和 <see cref="F:System.Int32.MaxValue" />（含）之间，则为 <see langword="false" />，并且不会推进读取器；否则，将返回 <see langword="true" />，且读取器会前进。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadInt64(System.Int64@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read the next value as an Integer with a specified tag, as a signed 64-bit value.">尝试读取下一个带有指定标记并作为有符号的 64 位值的整数值。</summary>
      <param name="value" vsli:raw="On success, receives the decoded value.">成功后，将收到解码后的值。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">读取前要检查的标记，或使用 <see langword="null" /> 作为默认标记（通用 2）。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; and does not advance the reader if the value is not between &lt;see cref=&quot;F:System.Int64.MinValue&quot;&gt;Int64.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.Int64.MaxValue&quot;&gt;Int64.MaxValue&lt;/see&gt;, inclusive; otherwise &lt;see langword=&quot;true&quot; /&gt; is returned and the reader advances.">如果值不在 <see cref="F:System.Int64.MinValue" /> 和 <see cref="F:System.Int64.MaxValue" />（含）之间，则为 <see langword="false" />，并且不会推进读取器；否则，将返回 <see langword="true" />，且读取器会前进。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadOctetString(System.Span{System.Byte},System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as an OCTET STRING with a specified tag, copying the value into a provided destination buffer.">读取下一个值，作为带有指定标记的 OCTET STRING 值，并将该值复制到所提供的目标缓冲区。</summary>
      <param name="destination" vsli:raw="The buffer in which to write.">要写入的缓冲区。</param>
      <param name="bytesWritten" vsli:raw="On success, receives the number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">成功后，将收到已写入 <paramref name="destination" /> 的字节数。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">读取前要检查的标记，或使用 <see langword="null" /> 作为默认标记（通用 4）。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if &lt;paramref name=&quot;destination&quot; /&gt; had sufficient length to receive the value, otherwise &lt;see langword=&quot;false&quot; /&gt; and the reader does not advance.">如果 <paramref name="destination" /> 有足够的长度来接收值，则为 <see langword="true" /> 并推进读取器，否则为 <see langword="false" />，且读取器不会前进。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadPrimitiveBitString(System.Int32@,System.ReadOnlyMemory{System.Byte}@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Reads the next value as a BIT STRING with a specified tag, returning the contents as a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data.">读取下一个值，作为带有指定标记的 BIT STRING 值，并将结果作为原始数据的 <see cref="T:System.ReadOnlyMemory`1" /> 返回。</summary>
      <param name="unusedBitCount" vsli:raw="On success, receives the number of bits in the last byte which were reported as &quot;unused&quot; by the writer.">成功时，将接收由编写器报告为“未使用”的最后一个字节中的位数。</param>
      <param name="value" vsli:raw="On success, receives a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data corresponding to the value of the BIT STRING.">成功后，将收到与 BIT STRING 的值相对应的原始数据的 <see cref="T:System.ReadOnlyMemory`1" />。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 1).">读取前要检查的标记，或使用 <see langword="null" /> 作为默认标记（通用 1）。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if the BIT STRING value had a primitive encoding, &lt;see langword=&quot;false&quot; /&gt; and does not advance the reader if it had a constructed encoding.">如果 BIT STRING 值具有基元编码，则为 <see langword="true" />，并推进读取器，否则为 <see langword="false" />，并且在读取器具有构造编码的情况下，不会推进读取器。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadPrimitiveCharacterStringBytes(System.Formats.Asn1.Asn1Tag,System.ReadOnlyMemory{System.Byte}@)">
      <summary vsli:raw="Reads the next value as a character with a specified tag, returning the contents as an unprocessed &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data.">读取下一个值，作为带有指定标记的字符值，并将结果作为原始数据的未处理 <see cref="T:System.ReadOnlyMemory`1" /> 返回。</summary>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">读取前要检查的标记。</param>
      <param name="contents" vsli:raw="On success, receives a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data corresponding to the value of the character string.">成功后，将收到与字符串值相对应的原始数据的 <see cref="T:System.ReadOnlyMemory`1" />。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not a character string tag type.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 不是字符串标记类型。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if the character string value had a primitive encoding, &lt;see langword=&quot;false&quot; /&gt; and does not advance the reader if it had a constructed encoding.">如果字符串值具有基元编码，则为 <see langword="true" />，并推进读取器，否则为 <see langword="false" />，并且在读取器具有构造编码的情况下，不会推进读取器。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadPrimitiveOctetString(System.ReadOnlyMemory{System.Byte}@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read the next value as an OCTET STRING with a specified tag, returning the contents as a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data.">尝试读取下一个带有指定标记，并返回原始数据的 <see cref="T:System.ReadOnlyMemory`1" /> 内容的 OCTET STRING 值。</summary>
      <param name="contents" vsli:raw="On success, receives a &lt;see cref=&quot;T:System.ReadOnlyMemory`1&quot; /&gt; over the original data corresponding to the value of the OCTET STRING.">成功后，将收到与 OCTET STRING 的值相对应的原始数据的 <see cref="T:System.ReadOnlyMemory`1" />。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading.">读取前要检查的标记。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; and advances the reader if the OCTET STRING value had a primitive encoding, &lt;see langword=&quot;false&quot; /&gt; and does not advance the reader if it had a constructed encoding.">如果 OCTET STRING 值具有基元编码，则为 <see langword="true" />，并推进读取器，否则为 <see langword="false" />，并且在读取器具有构造编码的情况下，不会推进读取器。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadUInt32(System.UInt32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read the next value as an Integer with a specified tag, as an unsigned 32-bit value.">尝试读取下一个带有指定标记并作为无符号的 32 位值的整数值。</summary>
      <param name="value" vsli:raw="On success, receives the decoded value.">成功后，将收到解码后的值。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">读取前要检查的标记，或使用 <see langword="null" /> 作为默认标记（通用 2）。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; and does not advance the reader if the value is not between &lt;see cref=&quot;F:System.UInt32.MinValue&quot;&gt;UInt32.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.UInt32.MaxValue&quot;&gt;UInt32.MaxValue&lt;/see&gt;, inclusive; otherwise &lt;see langword=&quot;true&quot; /&gt; is returned and the reader advances.">如果值不在 <see cref="F:System.UInt32.MinValue" /> 和 <see cref="F:System.UInt32.MaxValue" />（含）之间，则为 <see langword="false" />，并且不会推进读取器；否则，将返回 <see langword="true" />，且读取器会前进。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadUInt64(System.UInt64@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Attempts to read the next value as an Integer with a specified tag, as an unsigned 64-bit value.">尝试读取下一个带有指定标记并作为无符号的 64 位值的整数值。</summary>
      <param name="value" vsli:raw="On success, receives the decoded value.">成功后，将收到解码后的值。</param>
      <param name="expectedTag" vsli:raw="The tag to check for before reading, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">读取前要检查的标记，或使用 <see langword="null" /> 作为默认标记（通用 2）。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException" vsli:raw="The next value does not have the correct tag.&#xA;&#xA;-or-&#xA;&#xA;The length encoding is not valid under the current encoding rules.&#xA;&#xA;-or-&#xA;&#xA;The contents are not valid under the current encoding rules.">下一个值没有正确的标记。
-或- 在当前编码规则下，长度编码无效。
-或- 在当前编码规则下，内容无效。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;expectedTag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <returns vsli:raw="&lt;see langword=&quot;false&quot; /&gt; and does not advance the reader if the value is not between &lt;see cref=&quot;F:System.UInt64.MinValue&quot;&gt;UInt64.MinValue&lt;/see&gt; and &lt;see cref=&quot;F:System.UInt64.MaxValue&quot;&gt;UInt64.MaxValue&lt;/see&gt;, inclusive; otherwise &lt;see langword=&quot;true&quot; /&gt; is returned and the reader advances.">如果值不在 <see cref="F:System.UInt64.MinValue" /> 和 <see cref="F:System.UInt64.MaxValue" />（含）之间，则为 <see langword="false" />，并且不会推进读取器；否则，将返回 <see langword="true" />，且读取器会前进。</returns>
    </member>
    <member name="P:System.Formats.Asn1.AsnReader.HasData">
      <summary vsli:raw="Gets an indication of whether the reader has remaining data available to process.">获取有关读取器是否具有可供处理的剩余数据的指示。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if there is more data available for the reader to process; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 如果有更多数据可供读取器处理，则为;否则为 <see langword="false" /> 。</returns>
    </member>
    <member name="P:System.Formats.Asn1.AsnReader.RuleSet">
      <summary vsli:raw="Gets the encoding rules in use by this reader.">获取此读取器使用的编码规则。</summary>
      <returns vsli:raw="The encoding rules in use by this reader.">此读取器使用的编码规则。</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnReaderOptions">
      <summary vsli:raw="Specifies options that modify the behavior of an &lt;see cref=&quot;T:System.Formats.Asn1.AsnReader&quot; /&gt;.">指定修改 <see cref="T:System.Formats.Asn1.AsnReader" /> 的行为的选项。</summary>
    </member>
    <member name="P:System.Formats.Asn1.AsnReaderOptions.SkipSetSortOrderVerification">
      <summary vsli:raw="Gets or sets a value that indicates whether the reader should bypass sort ordering on a Set or Set-Of value.">获取或设置一个值，该值指示读取器是否应跳过对 Set 或 Set-Of 值的排序。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader should not validate that a Set or Set-Of value is sorted correctly for the current encoding rules; otherwise &lt;see langword=&quot;false&quot; /&gt;.&#xA;              The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> 如果读取器不应验证是否为当前编码规则正确地排序了集或值集，则为;否则为 <see langword="false" /> 。
默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Formats.Asn1.AsnReaderOptions.UtcTimeTwoDigitYearMax">
      <summary vsli:raw="Gets or sets the largest year to represent with a UtcTime value.">获取或设置要用 UtcTime 值表示的最大年份。</summary>
      <returns vsli:raw="The largest year to represent with a UtcTime value. The default is 2049.">用 UtcTime 值表示的最大年份。 默认值为2049。</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnWriter">
      <summary vsli:raw="A writer for BER-, CER-, and DER-encoded ASN.1 data.">用于 BER、CER 和 DER 编码的 ASN. 1 数据的编写器。</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.#ctor(System.Formats.Asn1.AsnEncodingRules)">
      <summary vsli:raw="Create a new &lt;see cref=&quot;T:System.Formats.Asn1.AsnWriter&quot; /&gt; with a given set of encoding rules.">使用一组给定的编码规则新建 <see cref="T:System.Formats.Asn1.AsnWriter" />。</summary>
      <param name="ruleSet" vsli:raw="The encoding constraints for the writer.">编写器的编码约束。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;ruleSet&quot; /&gt; is not defined.">未定义 <paramref name="ruleSet" />。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.CopyTo(System.Formats.Asn1.AsnWriter)">
      <summary vsli:raw="Copy the value of this writer into another.">将此编写器的值复制到另一个编写器。</summary>
      <param name="destination" vsli:raw="The writer to receive the value.">要接收值的编写器。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;destination&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="destination" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; has not been closed via &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.&#xA;             -or- &#xA;               This writer is empty.&#xA;             -or- &#xA;               This writer represents more than one top-level value.&#xA;             -or- &#xA;               This writer's value is encoded in a manner that is not compatible with the ruleset for the destination writer.">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 或 <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 未通过 <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 或 <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 关闭。
-或- 此编写器为空。
-或- 此编写器表示多个顶级值。
-或- 此编写器值的编码方式与目标编写器的规则集不兼容。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Encode">
      <summary vsli:raw="Return a new array containing the encoded value.">返回包含编码值的新数组。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; has not been closed via &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 或 <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 未通过 <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 或 <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 关闭。</exception>
      <returns vsli:raw="A precisely-sized array containing the encoded value.">一个包含编码值的精确大小的数组。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Encode(System.Span{System.Byte})">
      <summary vsli:raw="Writes the encoded representation of the data to &lt;paramref name=&quot;destination&quot; /&gt;.">将数据的已编码表示形式写入 <paramref name="destination" />。</summary>
      <param name="destination" vsli:raw="The buffer in which to write.">要写入的缓冲区。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; has not been closed via &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 或 <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 未通过 <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 或 <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 关闭。</exception>
      <returns vsli:raw="The number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">写入到 <paramref name="destination" /> 的字节数。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.EncodedValueEquals(System.Formats.Asn1.AsnWriter)">
      <summary vsli:raw="Determines if &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.Encode&quot; /&gt; would produce an output identical to &lt;paramref name=&quot;other&quot; /&gt;.">确定 <see cref="M:System.Formats.Asn1.AsnWriter.Encode" /> 是否生成与 <paramref name="other" /> 相同的输出。</summary>
      <param name="other" vsli:raw="The instance to compare encoded values against.">编码值要比较的实例。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;other&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="other" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; has not been closed via &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 或 <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 未通过 <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 或 <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 关闭。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the pending encoded data is identical to &lt;paramref name=&quot;other&quot; /&gt;, &lt;see langword=&quot;false&quot; /&gt; otherwise.">如果挂起的编码数据与 <paramref name="other" /> 相同，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.EncodedValueEquals(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Determines if &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.Encode&quot; /&gt; would produce an output identical to &lt;paramref name=&quot;other&quot; /&gt;.">确定 <see cref="M:System.Formats.Asn1.AsnWriter.Encode" /> 是否生成与 <paramref name="other" /> 相同的输出。</summary>
      <param name="other" vsli:raw="The encoded value to compare against.">要比较的编码值。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; has not been closed via &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 或 <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 未通过 <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 或 <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 关闭。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the pending encoded data is identical to &lt;paramref name=&quot;other&quot; /&gt;, &lt;see langword=&quot;false&quot; /&gt; otherwise.">如果挂起的编码数据与 <paramref name="other" /> 相同，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.GetEncodedLength">
      <summary vsli:raw="Gets the number of bytes that would be written by &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)&quot; /&gt;.">获取将由 <see cref="M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)" /> 写入的字节数。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;, &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;, or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; was called without the corresponding Pop method.">已调用 <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" />、<see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 或 <see cref="M:System.Formats.Asn1.AsnWriter.PushOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})" />，但未使用相应的 Pop 方法。</exception>
      <returns vsli:raw="The number of bytes that would be written by &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)&quot; /&gt;.">将由 <see cref="M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)" /> 写入的字节数。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PopOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Indicate that the open Octet String with the tag UNIVERSAL 4 is closed, returning the writer to the parent context.">指示已关闭带有通用 4 标记的公开八进制字符串，以将编写器返回到父上下文。</summary>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">要写入的标记，或将 <see langword="null" /> 用作默认标记（通用 4）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="the writer is not currently positioned within an Octet String with the specified tag.">编写器当前不在具有指定标记的八进制字符串中。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Indicate that the open Sequence with the specified tag is closed, returning the writer to the parent context.">指示已关闭带有特定标记的公开 Sequence，以将编写器返回到父上下文。</summary>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 16).">要写入的标记，或将 <see langword="null" /> 用作默认标记（通用 16）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="the writer is not currently positioned within a Sequence with the specified tag.">编写器当前不在具有指定标记的 Sequence 中。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Indicate that the open Set-Of with the specified tag is closed, returning the writer to the parent context.">指示已关闭带有特定标记的公开 Set-Of，以将编写器返回到父上下文。</summary>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 17).">要写入的标记，或将 <see langword="null" /> 用作默认标记（通用 17）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="the writer is not currently positioned within a Set-Of with the specified tag.">编写器当前不在具有指定标记的 Set-Of 中。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PushOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Begin writing an Octet String value with a specified tag.">开始写入带有指定标记的八进制字符串值。</summary>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">要写入的标记，或将 <see langword="null" /> 用作默认标记（通用 4）。</param>
      <returns vsli:raw="A disposable value which will automatically call &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">将自动调用 <see cref="M:System.Formats.Asn1.AsnWriter.PopOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 的可释放值。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Begin writing a Sequence with a specified tag.">开始写入带有指定标记的 Sequence。</summary>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 16).">要写入的标记，或将 <see langword="null" /> 用作默认标记（通用 16）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <returns vsli:raw="A disposable value which will automatically call &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">将自动调用 <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 的可释放值。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Begin writing a Set-Of with a specified tag.">开始写入带有指定标记的 Set-Of。</summary>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 17).">要写入的标记，或将 <see langword="null" /> 用作默认标记（通用 17）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <returns vsli:raw="A disposable value which will automatically call &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">将自动调用 <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 的可释放值。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Reset">
      <summary vsli:raw="Reset the writer to have no data, without releasing resources.">重置编写器使其不包含数据，且未释放资源。</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary vsli:raw="Attempts to write the encoded representation of the data to &lt;paramref name=&quot;destination&quot; /&gt;.">尝试将数据的已编码表示形式写入 <paramref name="destination" />。</summary>
      <param name="destination" vsli:raw="The buffer in which to write.">要写入的缓冲区。</param>
      <param name="bytesWritten" vsli:raw="On success, receives the number of bytes written to &lt;paramref name=&quot;destination&quot; /&gt;.">成功后，将收到已写入 <paramref name="destination" /> 的字节数。</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="A &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; has not been closed via &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt; or &lt;see cref=&quot;M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})&quot; /&gt;.">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 或 <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 未通过 <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 或 <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 关闭。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the encode succeeded, &lt;see langword=&quot;false&quot; /&gt; if &lt;paramref name=&quot;destination&quot; /&gt; is too small.">如果编码成功，则为 <see langword="true" />；如果 <paramref name="destination" /> 太小，则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteBitString(System.ReadOnlySpan{System.Byte},System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write a Bit String value with a specified tag.">写入带有指定标记的位字符串值。</summary>
      <param name="value" vsli:raw="The value to write.">要写入的值。</param>
      <param name="unusedBitCount" vsli:raw="The number of trailing bits which are not semantic.">不具语义的尾随位数。</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">要写入的标记，或将 <see langword="null" /> 用作默认标记（通用 3）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;             -or- &#xA;               &lt;paramref name=&quot;value&quot; /&gt; has length 0 and &lt;paramref name=&quot;unusedBitCount&quot; /&gt; is not 0 &#xA;               -or- &#xA;               &lt;paramref name=&quot;value&quot; /&gt; is not empty and any of the bits identified by &lt;paramref name=&quot;unusedBitCount&quot; /&gt; is set.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。
-或- <paramref name="value" /> 长度为 0 且 <paramref name="unusedBitCount" /> 不为 0 -或- <paramref name="value" /> 不为空，并且已设置 <paramref name="unusedBitCount" /> 标识的任何位。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;unusedBitCount&quot; /&gt; is not in the range [0,7].">
        <paramref name="unusedBitCount" /> 不在范围 [0,7] 内。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteBoolean(System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write a Boolean value with a specified tag.">写入带有指定标记的布尔值。</summary>
      <param name="value" vsli:raw="The value to write.">要写入的值。</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 1).">要写入的标记，或将 <see langword="null" /> 用作默认标记（通用 1）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于方法是不正确的</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteCharacterString(System.Formats.Asn1.UniversalTagNumber,System.ReadOnlySpan{System.Char},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write the provided string using the specified encoding type using the specified tag corresponding to the encoding type.">使用指定的编码类型，以及与编码类型相对应的指定标记写入提供的字符串。</summary>
      <param name="encodingType" vsli:raw="One of the enumeration values representing the encoding to use.">枚举值之一，表示要使用的编码。</param>
      <param name="str" vsli:raw="The string to write.">要写入的字符串。</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the universal tag that is appropriate to the requested encoding type.">要写入的标记，或使用 <see langword="null" /> 作为符合请求的编码类型的通用标记。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;encodingType&quot; /&gt; is not a restricted character string encoding type.&#xA;             -or- &#xA;               &lt;paramref name=&quot;encodingType&quot; /&gt; is a restricted character string encoding type that is not currently supported by this method.">
        <paramref name="encodingType" /> 不是受限制的字符串编码类型。
-或- <paramref name="encodingType" /> 是此方法当前不支持的受限制的字符串编码类型。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteCharacterString(System.Formats.Asn1.UniversalTagNumber,System.String,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write the provided string using the specified encoding type using the specified tag corresponding to the encoding type.">使用指定的编码类型，以及与编码类型相对应的指定标记写入提供的字符串。</summary>
      <param name="encodingType" vsli:raw="One of the enumeration values representing the encoding to use.">枚举值之一，表示要使用的编码。</param>
      <param name="value" vsli:raw="The string to write.">要写入的字符串。</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the universal tag that is appropriate to the requested encoding type.">要写入的标记，或使用 <see langword="null" /> 作为符合请求的编码类型的通用标记。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;">
        <paramref name="value" /> 为 <see langword="null" /></exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;encodingType&quot; /&gt; is not a restricted character string encoding type.&#xA;             -or- &#xA;               &lt;paramref name=&quot;encodingType&quot; /&gt; is a restricted character string encoding type that is not currently supported by this method.">
        <paramref name="encodingType" /> 不是受限制的字符串编码类型。
-或- <paramref name="encodingType" /> 是此方法当前不支持的受限制的字符串编码类型。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteEncodedValue(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Write a single value which has already been encoded.">写入已编码的单个值。</summary>
      <param name="value" vsli:raw="The value to write.">要写入的值。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; could not be read under the current encoding rules.&#xA;             -or- &#xA;               &lt;paramref name=&quot;value&quot; /&gt; has data beyond the end of the first value.">无法在当前编码规则下读取 <paramref name="value" />。
-或- <paramref name="value" /> 包含超出第一个值末尾的数据。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteEnumeratedValue(System.Enum,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write a non-[&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum value as an Enumerated with tag UNIVERSAL 10.">将一个非 [<see cref="T:System.FlagsAttribute" />] 枚举值作为带“通用 10”标记的枚举写入。</summary>
      <param name="value" vsli:raw="The boxed enumeration value to write.">要写入的装箱枚举值。</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">要写入的标记，或将 <see langword="null" /> 用作默认标记（通用 10）。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;             -or- &#xA;               &lt;paramref name=&quot;value&quot; /&gt; is not a boxed enum value.&#xA;             -or- &#xA;               the unboxed type of &lt;paramref name=&quot;value&quot; /&gt; is declared [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;].">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。
-或- <paramref name="value" /> 不是装箱枚举值。
-或- 未装箱的 <paramref name="value" /> 类型被声明为 [<see cref="T:System.FlagsAttribute" />]。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteEnumeratedValue``1(``0,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write a non-[&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum value as an Enumerated with tag UNIVERSAL 10.">将一个非 [<see cref="T:System.FlagsAttribute" />] 枚举值作为带“通用 10”标记的枚举写入。</summary>
      <param name="value" vsli:raw="The boxed enumeration value to write.">要写入的装箱枚举值。</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 10).">要写入的标记，或将 <see langword="null" /> 用作默认标记（通用 10）。</param>
      <typeparam name="TEnum" vsli:raw="The non-[&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enumeration type to write.">要写入的非 [ <see cref="T:System.FlagsAttribute" /> ] 枚举类型。</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;             -or- &#xA;               &lt;typeparamref name=&quot;TEnum&quot; /&gt; is not an enum.&#xA;             -or- &#xA;               &lt;typeparamref name=&quot;TEnum&quot; /&gt; is declared [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;].">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。
-或- <typeparamref name="TEnum" /> 不是枚举。
-或- <typeparamref name="TEnum" /> 声明为 [<see cref="T:System.FlagsAttribute" />]。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteGeneralizedTime(System.DateTimeOffset,System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write the provided &lt;see cref=&quot;T:System.DateTimeOffset&quot; /&gt; as a GeneralizedTime with a specified UNIVERSAL 24, optionally excluding the fractional seconds.">将提供的 <see cref="T:System.DateTimeOffset" /> 写入为带有指定的“通用 24”的 GeneralizedTime，可以选择排除秒的小数部分。</summary>
      <param name="value" vsli:raw="The value to write.">要写入的值。</param>
      <param name="omitFractionalSeconds" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to treat the fractional seconds in &lt;paramref name=&quot;value&quot; /&gt; as 0 even if a non-zero value is present.">
        <see langword="true" /> 可以将 <paramref name="value" /> 中秒的小数部分视为 0，即使存在非零值也是如此。</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 24).">要写入的标记，或将 <see langword="null" /> 用作默认标记（通用 24）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.Int64,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Integer value with a specified tag.">写入带有指定标记的整数值。</summary>
      <param name="value" vsli:raw="The value to write.">要写入的值。</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">要写入的标记，或将 <see langword="null" /> 用作默认标记（通用 2）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.Numerics.BigInteger,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Integer value with a specified tag.">写入带有指定标记的整数值。</summary>
      <param name="value" vsli:raw="The value to write.">要写入的值。</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">要写入的标记，或将 <see langword="null" /> 用作默认标记（通用 2）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.ReadOnlySpan{System.Byte},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Integer value with a specified tag.">写入带有指定标记的整数值。</summary>
      <param name="value" vsli:raw="The integer value to write, in signed big-endian byte order.">要以带符号 Big-Endian 顺序写入的整数值。</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">要写入的标记，或将 <see langword="null" /> 用作默认标记（通用 2）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="the 9 most significant bits are all set.&#xA;             -or- &#xA;               the 9 most significant bits are all unset.">最多 9 个有效位设置完毕。
-或- 最多 9 个有效位均未设置。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.UInt64,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Integer value with a specified tag.">写入带有指定标记的整数值。</summary>
      <param name="value" vsli:raw="The value to write.">要写入的值。</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">要写入的标记，或将 <see langword="null" /> 用作默认标记（通用 2）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteIntegerUnsigned(System.ReadOnlySpan{System.Byte},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Integer value with a specified tag.">写入带有指定标记的整数值。</summary>
      <param name="value" vsli:raw="The integer value to write, in unsigned big-endian byte order.">要以无符号 Big-Endian 顺序写入的整数值。</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 2).">要写入的标记，或将 <see langword="null" /> 用作默认标记（通用 2）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="the 9 most significant bits are all unset.">最多 9 个有效位均未设置。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNamedBitList(System.Collections.BitArray,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write a bit array value as a NamedBitList with a specified tag.">将位数组值作为带有指定标记的 NamedBitList 写入。</summary>
      <param name="value" vsli:raw="The bits to write.">要写入的位</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">要写入的标记，或将 <see langword="null" /> 用作默认标记（通用 3）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNamedBitList(System.Enum,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write a [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum value as a NamedBitList with a specified tag.">将 [<see cref="T:System.FlagsAttribute" />] 枚举值作为带有指定标记的 NamedBitList 写入。</summary>
      <param name="value" vsli:raw="The boxed enumeration value to write.">要写入的装箱枚举值</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">要写入的标记，或将 <see langword="null" /> 用作默认标记（通用 3）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;             -or- &#xA;               &lt;paramref name=&quot;value&quot; /&gt; is not a boxed enum value.&#xA;             -or- &#xA;               the unboxed type of &lt;paramref name=&quot;value&quot; /&gt; is not declared [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;].">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。
-或- <paramref name="value" /> 不是装箱枚举值。
-或- 未装箱类型 <paramref name="value" /> 未声明为 [<see cref="T:System.FlagsAttribute" />]。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNamedBitList``1(``0,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write a [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enum value as a NamedBitList with a specified tag.">将 [<see cref="T:System.FlagsAttribute" />] 枚举值作为带有指定标记的 NamedBitList 写入。</summary>
      <param name="value" vsli:raw="The enumeration value to write.">要写入的枚举值</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 3).">要写入的标记，或将 <see langword="null" /> 用作默认标记（通用 3）。</param>
      <typeparam name="TEnum" vsli:raw="The [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;] enumeration type to write.">
        <see cref="T:System.FlagsAttribute" />要写入的 [] 枚举类型。</typeparam>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;             -or- &#xA;               &lt;typeparamref name=&quot;TEnum&quot; /&gt; is not an enum value.&#xA;             -or- &#xA;               &lt;typeparamref name=&quot;TEnum&quot; /&gt; is not declared [&lt;see cref=&quot;T:System.FlagsAttribute&quot; /&gt;].">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。
-或- <typeparamref name="TEnum" /> 不是枚举值。
-或- <typeparamref name="TEnum" /> 未声明为 [<see cref="T:System.FlagsAttribute" />]。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNull(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write NULL with a specified tag.">使用指定标记写入 NULL。</summary>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 5).">要写入的标记，或将 <see langword="null" /> 用作默认标记（通用 5）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteObjectIdentifier(System.ReadOnlySpan{System.Char},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Object Identifier with a specified tag.">使用指定标记写入对象标识符。</summary>
      <param name="oidValue" vsli:raw="The object identifier to write.">要写入的对象标识符。</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 6).">要写入的标记，或将 <see langword="null" /> 用作默认标记（通用 6）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;             -or- &#xA;               &lt;paramref name=&quot;oidValue&quot; /&gt; is not a valid dotted decimal object identifier.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。
-或- <paramref name="oidValue" /> 不是有效的点分隔的十进制对象标识符。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteObjectIdentifier(System.String,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Object Identifier with a specified tag.">使用指定标记写入对象标识符。</summary>
      <param name="oidValue" vsli:raw="The object identifier to write.">要写入的对象标识符。</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 6).">要写入的标记，或将 <see langword="null" /> 用作默认标记（通用 6）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.&#xA;             -or- &#xA;               &lt;paramref name=&quot;oidValue&quot; /&gt; is not a valid dotted decimal object identifier.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。
-或- <paramref name="oidValue" /> 不是有效的点分隔的十进制对象标识符。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;oidValue&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="oidValue" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteOctetString(System.ReadOnlySpan{System.Byte},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write an Octet String value with a specified tag.">写入带有指定标记的八进制字符串值。</summary>
      <param name="value" vsli:raw="The value to write.">要写入的值。</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 4).">要写入的标记，或将 <see langword="null" /> 用作默认标记（通用 4）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteUtcTime(System.DateTimeOffset,System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write the provided value as a UTCTime with a specified tag, provided the year is in the allowed range.">将提供的值作为带有指定标记的 UTCTime 写入，前提是该年份在允许范围内。</summary>
      <param name="value" vsli:raw="The value to write.">要写入的值。</param>
      <param name="twoDigitYearMax" vsli:raw="The maximum valid year for &lt;paramref name=&quot;value&quot; /&gt;, after conversion to UTC.&#xA;              For the X.509 Time.utcTime range of 1950-2049, pass &lt;c&gt;2049&lt;/c&gt;.">在转换为 UTC 后 <paramref name="value" /> 的最大有效年份。
对于 X.509 Time.utcTime 1950-2049 范围，则传递 <c>2049</c>。</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 23).">要写入的标记，或将 <see langword="null" /> 用作默认标记（通用 23）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt;.&lt;see cref=&quot;P:System.DateTimeOffset.Year&quot; /&gt; (after conversion to UTC) is not in the range (&lt;paramref name=&quot;twoDigitYearMax&quot; /&gt; - 100, &lt;paramref name=&quot;twoDigitYearMax&quot; /&gt;].">
        <paramref name="value" />.<see cref="P:System.DateTimeOffset.Year" /> （转换为 UTC 后）不在 (<paramref name="twoDigitYearMax" /> - 100, <paramref name="twoDigitYearMax" />) 范围内。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteUtcTime(System.DateTimeOffset,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary vsli:raw="Write the provided value as a UTCTime with a specified tag, accepting the two-digit year as valid in context.">将提供的值作为带有指定标记的 UTCTime 写入，接受两位数年份在上下文中有效。</summary>
      <param name="value" vsli:raw="The value to write.">要写入的值。</param>
      <param name="tag" vsli:raw="The tag to write, or &lt;see langword=&quot;null&quot; /&gt; for the default tag (Universal 23).">要写入的标记，或将 <see langword="null" /> 用作默认标记（通用 23）。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagClass&quot; /&gt; is &lt;see cref=&quot;F:System.Formats.Asn1.TagClass.Universal&quot; /&gt;, but &lt;paramref name=&quot;tag&quot; /&gt;.&lt;see cref=&quot;P:System.Formats.Asn1.Asn1Tag.TagValue&quot; /&gt; is not correct for the method.">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 为 <see cref="F:System.Formats.Asn1.TagClass.Universal" />，但 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 对于此方法而言是不正确的。</exception>
    </member>
    <member name="P:System.Formats.Asn1.AsnWriter.RuleSet">
      <summary vsli:raw="Gets the encoding rules in use by this writer.">获取此编写器使用的编码规则。</summary>
      <returns vsli:raw="The encoding rules in use by this writer.">此编写器使用的编码规则。</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnWriter.Scope">
      <summary vsli:raw="Provides an &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; target for safely closing an opened tag by using a lexical scope as a logical scope.">提供一个 <see cref="T:System.IDisposable" /> 目标，通过使用词法范围作为逻辑范围安全关闭打开的标记。</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Scope.Dispose">
      <summary vsli:raw="Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.">执行与释放或重置非托管资源关联的应用程序定义的任务。</summary>
    </member>
    <member name="T:System.Formats.Asn1.TagClass">
      <summary vsli:raw="The tag class for a particular ASN.1 tag.">特定的 ASN 1 标记的标记类。</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.Application">
      <summary vsli:raw="The Application tag class.">应用程序标记类</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.ContextSpecific">
      <summary vsli:raw="The Context-Specific tag class.">上下文特定的标记类</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.Private">
      <summary vsli:raw="The Private tag class.">私有标记类</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.Universal">
      <summary vsli:raw="The Universal tag class.">通用标记类</summary>
    </member>
    <member name="T:System.Formats.Asn1.UniversalTagNumber">
      <summary vsli:raw="Tag assignments for the UNIVERSAL class in ITU-T X.680.">ITU-T X.680 中通用类的标记分配。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.BitString">
      <summary vsli:raw="The universal class tag value for Bit String.">Bit String 的通用类标记值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.BMPString">
      <summary vsli:raw="The universal class tag value for BMPString.">BMPString 的通用类标记值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Boolean">
      <summary vsli:raw="The universal class tag value for Boolean.">Boolean 的通用类标记值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Date">
      <summary vsli:raw="The universal class tag value for Date.">Date 的通用类标记值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.DateTime">
      <summary vsli:raw="The universal class tag value for Date-Time.">Date-Time 的通用类标记值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Duration">
      <summary vsli:raw="The universal class tag value for Duration.">Duration 的通用类标记值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Embedded">
      <summary vsli:raw="The universal class tag value for Embedded-PDV.">Embedded-PDV 的通用类标记值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.EndOfContents">
      <summary vsli:raw="The reserved identifier for the End-of-Contents marker in an indefinite length encoding.">不定长度编码的内容结尾标记的保留标识符。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Enumerated">
      <summary vsli:raw="The universal class tag value for Enumerated.">Enumerated 的通用类标记值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.External">
      <summary vsli:raw="The universal class tag value for External.">External 的通用类标记值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.GeneralizedTime">
      <summary vsli:raw="The universal class tag value for GeneralizedTime.">GeneralizedTime 的通用类标记值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.GeneralString">
      <summary vsli:raw="The universal class tag value for GeneralString.">GeneralString 的通用类标记值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.GraphicString">
      <summary vsli:raw="The universal class tag value for GraphicString.">GraphicString 的通用类标记值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.IA5String">
      <summary vsli:raw="The universal class tag value for IA5String.">IA5String 的通用类标记值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.InstanceOf">
      <summary vsli:raw="The universal class tag value for Instance-Of.">Instance-Of 的通用类标记值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Integer">
      <summary vsli:raw="The universal class tag value for Integer.">Integer 的通用类标记值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ISO646String">
      <summary vsli:raw="The universal class tag value for ISO646String (VisibleString).">ISO646String (VisibleString) 的通用类标记值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Null">
      <summary vsli:raw="The universal class tag value for Null.">Null 的通用类标记值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.NumericString">
      <summary vsli:raw="The universal class tag value for NumericString.">NumericString 的通用类标记值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ObjectDescriptor">
      <summary vsli:raw="The universal class tag value for Object Descriptor.">Object Descriptor 的通用类标记值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ObjectIdentifier">
      <summary vsli:raw="The universal class tag value for Object Identifier.">Object Identifier 的通用类标记值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ObjectIdentifierIRI">
      <summary vsli:raw="The universal class tag value for Object Identifier Internationalized Resource Identifier (IRI).">Object Identifier Internationalized Resource Identifier (IRI) 的通用类标记值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.OctetString">
      <summary vsli:raw="The universal class tag value for Octet String.">Octet String 的通用类标记值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.PrintableString">
      <summary vsli:raw="The universal class tag value for PrintableString.">PrintableString 的通用类标记值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Real">
      <summary vsli:raw="The universal class tag value for Real.">Real 的通用类标记值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.RelativeObjectIdentifier">
      <summary vsli:raw="The universal class tag value for Relative Object Identifier.">Relative Object Identifier 的通用类标记值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.RelativeObjectIdentifierIRI">
      <summary vsli:raw="The universal class tag value for Relative Object Identifier Internationalized Resource Identifier (IRI).">Relative Object Identifier Internationalized Resource Identifier (IRI) 的通用类标记值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Sequence">
      <summary vsli:raw="The universal class tag value for Sequence.">Sequence 的通用类标记值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.SequenceOf">
      <summary vsli:raw="The universal class tag value for Sequence-Of.">Sequence-Of 的通用类标记值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Set">
      <summary vsli:raw="The universal class tag value for Set.">Set 的通用类标记值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.SetOf">
      <summary vsli:raw="The universal class tag value for Set-Of.">Set-Of 的通用类标记值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.T61String">
      <summary vsli:raw="The universal class tag value for T61String (TeletexString).">T61String (TeletexString) 的通用类标记值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.TeletexString">
      <summary vsli:raw="The universal class tag value for TeletexString (T61String).">TeletexString (T61String) 的通用类标记值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Time">
      <summary vsli:raw="The universal class tag value for Time.">Time 的通用类标记值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.TimeOfDay">
      <summary vsli:raw="The universal class tag value for Time-Of-Day.">Time-Of-Day 的通用类标记值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UniversalString">
      <summary vsli:raw="The universal class tag value for UniversalString.">UniversalString 的通用类标记值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UnrestrictedCharacterString">
      <summary vsli:raw="The universal class tag value for an unrestricted character string.">不受限制的字符串的通用类标记值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UtcTime">
      <summary vsli:raw="The universal class tag value for UTCTime.">UTCTime 的通用类标记值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UTF8String">
      <summary vsli:raw="The universal class tag value for UTF8String.">UTF8String 的通用类标记值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.VideotexString">
      <summary vsli:raw="The universal class tag value for VideotexString.">VideotexString 的通用类标记值。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.VisibleString">
      <summary vsli:raw="The universal class tag value for VisibleString (ISO646String).">VisibleString (ISO646String) 的通用类标记值。</summary>
    </member>
  </members>
</doc>