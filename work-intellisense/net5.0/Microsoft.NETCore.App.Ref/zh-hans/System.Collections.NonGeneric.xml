<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Collections.NonGeneric</name>
  </assembly>
  <members>
    <member name="T:System.Collections.CaseInsensitiveComparer">
      <summary vsli:raw="Compares two objects for equivalence, ignoring the case of strings.">比较两个对象是否相等，比较时忽略字符串的大小写。</summary>
    </member>
    <member name="M:System.Collections.CaseInsensitiveComparer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.CaseInsensitiveComparer&quot; /&gt; class using the &lt;see cref=&quot;P:System.Threading.Thread.CurrentCulture&quot; /&gt; of the current thread.">使用当前线程的 <see cref="T:System.Collections.CaseInsensitiveComparer" /> 初始化 <see cref="P:System.Threading.Thread.CurrentCulture" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Collections.CaseInsensitiveComparer.#ctor(System.Globalization.CultureInfo)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.CaseInsensitiveComparer&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt;.">使用指定的 <see cref="T:System.Collections.CaseInsensitiveComparer" /> 初始化 <see cref="T:System.Globalization.CultureInfo" /> 类的新实例。</summary>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; to use for the new &lt;see cref=&quot;T:System.Collections.CaseInsensitiveComparer&quot; /&gt;.">要用于新 <see cref="T:System.Globalization.CultureInfo" /> 的 <see cref="T:System.Collections.CaseInsensitiveComparer" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;culture&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="culture" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Collections.CaseInsensitiveComparer.Compare(System.Object,System.Object)">
      <summary vsli:raw="Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.">对同一类型的两个对象执行不区分大小写的比较，并返回一个值，指示其中一个对象是小于、等于还是大于另一个对象。</summary>
      <param name="a" vsli:raw="The first object to compare.">要比较的第一个对象。</param>
      <param name="b" vsli:raw="The second object to compare.">要比较的第二个对象。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="Neither &lt;paramref name=&quot;a&quot; /&gt; nor &lt;paramref name=&quot;b&quot; /&gt; implements the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; interface.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;a&quot; /&gt; and &lt;paramref name=&quot;b&quot; /&gt; are of different types.">
        <paramref name="a" /> 和 <paramref name="b" /> 都不实现 <see cref="T:System.IComparable" /> 接口。  
  
- 或 - 
 <paramref name="a" /> 和 <paramref name="b" /> 的类型不同。</exception>
      <returns vsli:raw="A signed integer that indicates the relative values of &lt;paramref name=&quot;a&quot; /&gt; and &lt;paramref name=&quot;b&quot; /&gt;, as shown in the following table.  &#xA;  &#xA; &lt;list type=&quot;table&quot;&gt;&lt;listheader&gt;&lt;term&gt; Value&lt;/term&gt;&lt;description&gt; Meaning&lt;/description&gt;&lt;/listheader&gt;&lt;item&gt;&lt;term&gt; Less than zero&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;a&quot; /&gt; is less than &lt;paramref name=&quot;b&quot; /&gt;, with casing ignored.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Zero&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;a&quot; /&gt; equals &lt;paramref name=&quot;b&quot; /&gt;, with casing ignored.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt; Greater than zero&lt;/term&gt;&lt;description&gt;&lt;paramref name=&quot;a&quot; /&gt; is greater than &lt;paramref name=&quot;b&quot; /&gt;, with casing ignored.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;">一个有符号整数，指示 <paramref name="a" /> 和 <paramref name="b" /> 的相对值，如下表所示。  
  
 <list type="table"><listheader><term> “值”</term><description> 含义</description></listheader><item><term> 小于零</term><description>在忽略大小写的情况下，<paramref name="a" /> 小于 <paramref name="b" />。</description></item><item><term> 零</term><description>在忽略大小写的情况下，<paramref name="a" /> 等于 <paramref name="b" />。</description></item><item><term> 大于零</term><description>在忽略大小写的情况下，<paramref name="a" /> 大于 <paramref name="b" />。</description></item></list></returns>
    </member>
    <member name="P:System.Collections.CaseInsensitiveComparer.Default">
      <summary vsli:raw="Gets an instance of &lt;see cref=&quot;T:System.Collections.CaseInsensitiveComparer&quot; /&gt; that is associated with the &lt;see cref=&quot;P:System.Threading.Thread.CurrentCulture&quot; /&gt; of the current thread and that is always available.">获取 <see cref="T:System.Collections.CaseInsensitiveComparer" /> 的一个实例，该实例与当前线程的 <see cref="P:System.Threading.Thread.CurrentCulture" /> 关联并且始终可用。</summary>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Collections.CaseInsensitiveComparer&quot; /&gt; that is associated with the &lt;see cref=&quot;P:System.Threading.Thread.CurrentCulture&quot; /&gt; of the current thread.">
        <see cref="T:System.Collections.CaseInsensitiveComparer" /> 的实例，它与当前线程的 <see cref="P:System.Threading.Thread.CurrentCulture" /> 关联。</returns>
    </member>
    <member name="P:System.Collections.CaseInsensitiveComparer.DefaultInvariant">
      <summary vsli:raw="Gets an instance of &lt;see cref=&quot;T:System.Collections.CaseInsensitiveComparer&quot; /&gt; that is associated with &lt;see cref=&quot;P:System.Globalization.CultureInfo.InvariantCulture&quot; /&gt; and that is always available.">获取 <see cref="T:System.Collections.CaseInsensitiveComparer" /> 的一个实例，该实例与 <see cref="P:System.Globalization.CultureInfo.InvariantCulture" /> 关联并且始终可用。</summary>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Collections.CaseInsensitiveComparer&quot; /&gt; that is associated with &lt;see cref=&quot;P:System.Globalization.CultureInfo.InvariantCulture&quot; /&gt;.">
        <see cref="T:System.Collections.CaseInsensitiveComparer" /> 的实例，它与 <see cref="P:System.Globalization.CultureInfo.InvariantCulture" /> 关联。</returns>
    </member>
    <member name="T:System.Collections.CaseInsensitiveHashCodeProvider">
      <summary vsli:raw="Supplies a hash code for an object, using a hashing algorithm that ignores the case of strings.">使用忽略字符串大小写的哈希算法，为对象提供哈希代码。</summary>
    </member>
    <member name="M:System.Collections.CaseInsensitiveHashCodeProvider.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.CaseInsensitiveHashCodeProvider&quot; /&gt; class using the &lt;see cref=&quot;P:System.Threading.Thread.CurrentCulture&quot; /&gt; of the current thread.">使用当前线程的 <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> 初始化 <see cref="P:System.Threading.Thread.CurrentCulture" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Collections.CaseInsensitiveHashCodeProvider.#ctor(System.Globalization.CultureInfo)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.CaseInsensitiveHashCodeProvider&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt;.">使用指定的 <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> 初始化 <see cref="T:System.Globalization.CultureInfo" /> 类的新实例。</summary>
      <param name="culture" vsli:raw="The &lt;see cref=&quot;T:System.Globalization.CultureInfo&quot; /&gt; to use for the new &lt;see cref=&quot;T:System.Collections.CaseInsensitiveHashCodeProvider&quot; /&gt;.">要用于新 <see cref="T:System.Globalization.CultureInfo" /> 的 <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;culture&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="culture" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Collections.CaseInsensitiveHashCodeProvider.GetHashCode(System.Object)">
      <summary vsli:raw="Returns a hash code for the given object, using a hashing algorithm that ignores the case of strings.">使用忽略字符串大小写的哈希算法返回给定对象的哈希代码。</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; for which a hash code is to be returned.">
        <see cref="T:System.Object" />，将为其返回哈希代码。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;obj&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="obj" /> 为 <see langword="null" />。</exception>
      <returns vsli:raw="A hash code for the given object, using a hashing algorithm that ignores the case of strings.">给定对象的哈希代码（使用忽略字符串大小写的哈希算法返回）。</returns>
    </member>
    <member name="P:System.Collections.CaseInsensitiveHashCodeProvider.Default">
      <summary vsli:raw="Gets an instance of &lt;see cref=&quot;T:System.Collections.CaseInsensitiveHashCodeProvider&quot; /&gt; that is associated with the &lt;see cref=&quot;P:System.Threading.Thread.CurrentCulture&quot; /&gt; of the current thread and that is always available.">获取 <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> 的一个实例，该实例与当前线程的 <see cref="P:System.Threading.Thread.CurrentCulture" /> 关联并且始终可用。</summary>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Collections.CaseInsensitiveHashCodeProvider&quot; /&gt; that is associated with the &lt;see cref=&quot;P:System.Threading.Thread.CurrentCulture&quot; /&gt; of the current thread.">
        <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> 的实例，它与当前线程的 <see cref="P:System.Threading.Thread.CurrentCulture" /> 关联。</returns>
    </member>
    <member name="P:System.Collections.CaseInsensitiveHashCodeProvider.DefaultInvariant">
      <summary vsli:raw="Gets an instance of &lt;see cref=&quot;T:System.Collections.CaseInsensitiveHashCodeProvider&quot; /&gt; that is associated with &lt;see cref=&quot;P:System.Globalization.CultureInfo.InvariantCulture&quot; /&gt; and that is always available.">获取 <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> 的一个实例，该实例与 <see cref="P:System.Globalization.CultureInfo.InvariantCulture" /> 关联并且始终可用。</summary>
      <returns vsli:raw="An instance of &lt;see cref=&quot;T:System.Collections.CaseInsensitiveHashCodeProvider&quot; /&gt; that is associated with &lt;see cref=&quot;P:System.Globalization.CultureInfo.InvariantCulture&quot; /&gt;.">
        <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> 的实例，它与 <see cref="P:System.Globalization.CultureInfo.InvariantCulture" /> 关联。</returns>
    </member>
    <member name="T:System.Collections.CollectionBase">
      <summary vsli:raw="Provides the &lt;see langword=&quot;abstract&quot; /&gt; base class for a strongly typed collection.">提供强类型集合的 <see langword="abstract" /> 基类。</summary>
    </member>
    <member name="M:System.Collections.CollectionBase.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; class with the default initial capacity.">使用默认初始容量初始化 <see cref="T:System.Collections.CollectionBase" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Collections.CollectionBase.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; class with the specified capacity.">使用指定容量初始化 <see cref="T:System.Collections.CollectionBase" /> 类的新实例。</summary>
      <param name="capacity" vsli:raw="The number of elements that the new list can initially store.">新列表最初可以存储的元素数。</param>
    </member>
    <member name="M:System.Collections.CollectionBase.Clear">
      <summary vsli:raw="Removes all objects from the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance. This method cannot be overridden.">从 <see cref="T:System.Collections.CollectionBase" /> 实例移除所有对象。 不能重写此方法。</summary>
    </member>
    <member name="M:System.Collections.CollectionBase.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">返回循环访问 <see cref="T:System.Collections.CollectionBase" /> 实例的枚举器。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">用于 <see cref="T:System.Collections.IEnumerator" /> 实例的 <see cref="T:System.Collections.CollectionBase" />。</returns>
    </member>
    <member name="M:System.Collections.CollectionBase.OnClear">
      <summary vsli:raw="Performs additional custom processes when clearing the contents of the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">清除 <see cref="T:System.Collections.CollectionBase" /> 实例的内容时执行其他自定义进程。</summary>
    </member>
    <member name="M:System.Collections.CollectionBase.OnClearComplete">
      <summary vsli:raw="Performs additional custom processes after clearing the contents of the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">在清除 <see cref="T:System.Collections.CollectionBase" /> 实例的内容之后执行其他自定义进程。</summary>
    </member>
    <member name="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
      <summary vsli:raw="Performs additional custom processes before inserting a new element into the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">在向 <see cref="T:System.Collections.CollectionBase" /> 实例中插入新元素之前执行其他自定义进程。</summary>
      <param name="index" vsli:raw="The zero-based index at which to insert &lt;paramref name=&quot;value&quot; /&gt;.">从零开始的索引，在该处插入 <paramref name="value" />。</param>
      <param name="value" vsli:raw="The new value of the element at &lt;paramref name=&quot;index&quot; /&gt;.">
        <paramref name="index" /> 处的元素的新值。</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
      <summary vsli:raw="Performs additional custom processes after inserting a new element into the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">在向 <see cref="T:System.Collections.CollectionBase" /> 实例中插入新元素之后执行其他自定义进程。</summary>
      <param name="index" vsli:raw="The zero-based index at which to insert &lt;paramref name=&quot;value&quot; /&gt;.">从零开始的索引，在该处插入 <paramref name="value" />。</param>
      <param name="value" vsli:raw="The new value of the element at &lt;paramref name=&quot;index&quot; /&gt;.">
        <paramref name="index" /> 处的元素的新值。</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
      <summary vsli:raw="Performs additional custom processes when removing an element from the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">当从 <see cref="T:System.Collections.CollectionBase" /> 实例移除元素时执行其他自定义进程。</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; can be found.">从零开始的索引，可在该位置找到 <paramref name="value" />。</param>
      <param name="value" vsli:raw="The value of the element to remove from &lt;paramref name=&quot;index&quot; /&gt;.">要从 <paramref name="index" /> 移除的元素的值。</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
      <summary vsli:raw="Performs additional custom processes after removing an element from the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">在从 <see cref="T:System.Collections.CollectionBase" /> 实例中移除元素之后执行其他自定义进程。</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; can be found.">从零开始的索引，可在该位置找到 <paramref name="value" />。</param>
      <param name="value" vsli:raw="The value of the element to remove from &lt;paramref name=&quot;index&quot; /&gt;.">要从 <paramref name="index" /> 移除的元素的值。</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes before setting a value in the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">当在 <see cref="T:System.Collections.CollectionBase" /> 实例中设置值之前执行其他自定义进程。</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;oldValue&quot; /&gt; can be found.">从零开始的索引，可在该位置找到 <paramref name="oldValue" />。</param>
      <param name="oldValue" vsli:raw="The value to replace with &lt;paramref name=&quot;newValue&quot; /&gt;.">要用 <paramref name="newValue" /> 替换的值。</param>
      <param name="newValue" vsli:raw="The new value of the element at &lt;paramref name=&quot;index&quot; /&gt;.">
        <paramref name="index" /> 处的元素的新值。</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes after setting a value in the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">当在 <see cref="T:System.Collections.CollectionBase" /> 实例中设置值后执行其他自定义进程。</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;oldValue&quot; /&gt; can be found.">从零开始的索引，可在该位置找到 <paramref name="oldValue" />。</param>
      <param name="oldValue" vsli:raw="The value to replace with &lt;paramref name=&quot;newValue&quot; /&gt;.">要用 <paramref name="newValue" /> 替换的值。</param>
      <param name="newValue" vsli:raw="The new value of the element at &lt;paramref name=&quot;index&quot; /&gt;.">
        <paramref name="index" /> 处的元素的新值。</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnValidate(System.Object)">
      <summary vsli:raw="Performs additional custom processes when validating a value.">当验证值时执行其他自定义进程。</summary>
      <param name="value" vsli:raw="The object to validate.">要验证的对象。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;value&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="value" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Collections.CollectionBase.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the element at the specified index of the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance. This method is not overridable.">移除 <see cref="T:System.Collections.CollectionBase" /> 实例的指定索引处的元素。 此方法不可重写。</summary>
      <param name="index" vsli:raw="The zero-based index of the element to remove.">要移除的元素的从零开始的索引。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is equal to or greater than &lt;see cref=&quot;P:System.Collections.CollectionBase.Count&quot; /&gt;.">
        <paramref name="index" /> 小于零。  
  
- 或 - 
 <paramref name="index" /> 等于或大于 <see cref="P:System.Collections.CollectionBase.Count" />。</exception>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the entire &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; to a compatible one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified index of the target array.">从目标数组的指定索引处开始将整个 <see cref="T:System.Collections.CollectionBase" /> 复制到兼容的一维 <see cref="T:System.Array" />。</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">一维 <see cref="T:System.Array" />，它是从 <see cref="T:System.Collections.CollectionBase" /> 复制的元素的目标。 <see cref="T:System.Array" /> 必须具有从零开始的索引。</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">
        <paramref name="array" /> 中从零开始的索引，从此处开始复制。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" /> 小于零。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in the source &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> 是多维的。  
  
- 或 - 
源 <see cref="T:System.Collections.CollectionBase" /> 中的元素个数大于从 <paramref name="index" /> 到目标 <paramref name="array" /> 末尾之间的可用空间。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The type of the source &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">无法自动将源 <see cref="T:System.Collections.CollectionBase" /> 的类型转换为目标 <paramref name="array" /> 的类型。</exception>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)">
      <summary vsli:raw="Adds an object to the end of the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">将对象添加到 <see cref="T:System.Collections.CollectionBase" /> 的结尾处。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to be added to the end of the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">要添加到 <see cref="T:System.Object" /> 的结尾处的 <see cref="T:System.Collections.CollectionBase" />。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; has a fixed size.">
        <see cref="T:System.Collections.CollectionBase" /> 为只读。  
  
- 或 - 
<see cref="T:System.Collections.CollectionBase" /> 具有固定的大小。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; index at which the &lt;paramref name=&quot;value&quot; /&gt; has been added.">已添加 <paramref name="value" /> 的 <see cref="T:System.Collections.CollectionBase" /> 索引。</returns>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; contains a specific element.">确定 <see cref="T:System.Collections.CollectionBase" /> 是否包含特定元素。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to locate in the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">要在 <see cref="T:System.Object" /> 中定位的 <see cref="T:System.Collections.CollectionBase" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; contains the specified &lt;paramref name=&quot;value&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Collections.CollectionBase" /> 包含指定的 <paramref name="value" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)">
      <summary vsli:raw="Searches for the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; and returns the zero-based index of the first occurrence within the entire &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">搜索指定的 <see cref="T:System.Object" />，并返回整个 <see cref="T:System.Collections.CollectionBase" /> 中第一个匹配项的从零开始的索引。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to locate in the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">要在 <see cref="T:System.Object" /> 中定位的 <see cref="T:System.Collections.CollectionBase" />。</param>
      <returns vsli:raw="The zero-based index of the first occurrence of &lt;paramref name=&quot;value&quot; /&gt; within the entire &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;, if found; otherwise, -1.">如果找到，则为整个 <paramref name="value" /> 中 <see cref="T:System.Collections.CollectionBase" /> 第一个匹配项的从零开始的索引；否则为 -1。</returns>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary vsli:raw="Inserts an element into the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; at the specified index.">将元素插入 <see cref="T:System.Collections.CollectionBase" /> 的指定索引处。</summary>
      <param name="index" vsli:raw="The zero-based index at which &lt;paramref name=&quot;value&quot; /&gt; should be inserted.">应插入 <paramref name="value" /> 的从零开始的索引。</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to insert.">要插入的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is greater than &lt;see cref=&quot;P:System.Collections.CollectionBase.Count&quot; /&gt;.">
        <paramref name="index" /> 小于零。  
  
- 或 - 
 <paramref name="index" /> 大于 <see cref="P:System.Collections.CollectionBase.Count" />。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; has a fixed size.">
        <see cref="T:System.Collections.CollectionBase" /> 为只读。  
  
- 或 - 
<see cref="T:System.Collections.CollectionBase" /> 具有固定的大小。</exception>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)">
      <summary vsli:raw="Removes the first occurrence of a specific object from the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">从 <see cref="T:System.Collections.CollectionBase" /> 中移除特定对象的第一个匹配项。</summary>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to remove from the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">要从 <see cref="T:System.Object" /> 移除的 <see cref="T:System.Collections.CollectionBase" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;value&quot; /&gt; parameter was not found in the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; object.">未在 <see cref="T:System.Collections.CollectionBase" /> 对象中找到 <paramref name="value" /> 参数。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; has a fixed size.">
        <see cref="T:System.Collections.CollectionBase" /> 为只读。  
  
- 或 - 
<see cref="T:System.Collections.CollectionBase" /> 具有固定的大小。</exception>
    </member>
    <member name="P:System.Collections.CollectionBase.Capacity">
      <summary vsli:raw="Gets or sets the number of elements that the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; can contain.">获取或设置 <see cref="T:System.Collections.CollectionBase" /> 可包含的元素数。</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;see cref=&quot;P:System.Collections.CollectionBase.Capacity&quot; /&gt; is set to a value that is less than &lt;see cref=&quot;P:System.Collections.CollectionBase.Count&quot; /&gt;.">
        <see cref="P:System.Collections.CollectionBase.Capacity" /> 已设置为一个小于 <see cref="P:System.Collections.CollectionBase.Count" /> 的值。</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory available on the system.">系统上没有足够的可用内存。</exception>
      <returns vsli:raw="The number of elements that the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; can contain.">
        <see cref="T:System.Collections.CollectionBase" /> 可包含的元素数。</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.Count">
      <summary vsli:raw="Gets the number of elements contained in the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance. This property cannot be overridden.">获取 <see cref="T:System.Collections.CollectionBase" /> 实例中包含的元素数。 不能重写此属性。</summary>
      <returns vsli:raw="The number of elements contained in the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance. Retrieving the value of this property is an O(1) operation.">
        <see cref="T:System.Collections.CollectionBase" /> 实例中包含的元素数。 检索此属性的值的运算复杂度为 O(1)。</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.InnerList">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; containing the list of elements in the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">获取一个 <see cref="T:System.Collections.ArrayList" />，它包含 <see cref="T:System.Collections.CollectionBase" /> 实例中元素的列表。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; representing the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance itself. Retrieving the value of this property is an O(1) operation.">表示 <see cref="T:System.Collections.ArrayList" /> 实例本身的 <see cref="T:System.Collections.CollectionBase" />。 检索此属性的值的运算复杂度为 O(1)。</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.List">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; containing the list of elements in the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance.">获取一个 <see cref="T:System.Collections.IList" />，它包含 <see cref="T:System.Collections.CollectionBase" /> 实例中元素的列表。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; representing the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; instance itself.">表示 <see cref="T:System.Collections.IList" /> 实例本身的 <see cref="T:System.Collections.CollectionBase" />。</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; is synchronized (thread safe).">获取一个值，该值指示是否同步对 <see cref="T:System.Collections.CollectionBase" /> 的访问（线程安全）。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果对 <see langword="true" /> 的访问是同步的（线程安全），则为 <see cref="T:System.Collections.CollectionBase" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">获取可用于同步对 <see cref="T:System.Collections.CollectionBase" /> 的访问的对象。</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt;.">用于同步对 <see cref="T:System.Collections.CollectionBase" /> 的访问的对象。</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; has a fixed size.">获取一个值，该值指示 <see cref="T:System.Collections.CollectionBase" /> 是否具有固定大小。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; has a fixed size; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="true" /> 具有固定大小，则为 <see cref="T:System.Collections.CollectionBase" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; is read-only.">获取一个值，该值指示 <see cref="T:System.Collections.CollectionBase" /> 是否为只读。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.CollectionBase&quot; /&gt; is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="true" /> 是只读的，则为 <see cref="T:System.Collections.CollectionBase" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)">
      <summary vsli:raw="Gets or sets the element at the specified index.">获取或设置指定索引处的元素。</summary>
      <param name="index" vsli:raw="The zero-based index of the element to get or set.">要获取或设置的元素的从零开始的索引。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;index&quot; /&gt; is equal to or greater than &lt;see cref=&quot;P:System.Collections.CollectionBase.Count&quot; /&gt;.">
        <paramref name="index" /> 小于零。  
  
- 或 - 
 <paramref name="index" /> 等于或大于 <see cref="P:System.Collections.CollectionBase.Count" />。</exception>
      <returns vsli:raw="The element at the specified index.">指定索引处的元素。</returns>
    </member>
    <member name="T:System.Collections.DictionaryBase">
      <summary vsli:raw="Provides the &lt;see langword=&quot;abstract&quot; /&gt; base class for a strongly typed collection of key/value pairs.">为键/值对的强类型集合提供 <see langword="abstract" /> 基类。</summary>
    </member>
    <member name="M:System.Collections.DictionaryBase.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; class.">初始化 <see cref="T:System.Collections.DictionaryBase" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Collections.DictionaryBase.Clear">
      <summary vsli:raw="Clears the contents of the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">清除 <see cref="T:System.Collections.DictionaryBase" /> 实例的内容。</summary>
    </member>
    <member name="M:System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; elements to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; at the specified index.">将 <see cref="T:System.Collections.DictionaryBase" /> 元素复制到位于指定索引处的一维 <see cref="T:System.Array" /> 中。</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the &lt;see cref=&quot;T:System.Collections.DictionaryEntry&quot; /&gt; objects copied from the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">一维 <see cref="T:System.Array" />，为从 <see cref="T:System.Collections.DictionaryEntry" /> 实例复制的 <see cref="T:System.Collections.DictionaryBase" /> 对象的目标位置。 <see cref="T:System.Array" /> 必须具有从零开始的索引。</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">
        <paramref name="array" /> 中从零开始的索引，从此处开始复制。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" /> 小于零。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in the source &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> 是多维的。  
  
- 或 - 
源 <see cref="T:System.Collections.DictionaryBase" /> 中的元素个数大于从 <paramref name="index" /> 到目标 <paramref name="array" /> 末尾之间的可用空间。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The type of the source &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">无法自动将源 <see cref="T:System.Collections.DictionaryBase" /> 的类型转换为目标 <paramref name="array" /> 的类型。</exception>
    </member>
    <member name="M:System.Collections.DictionaryBase.GetEnumerator">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IDictionaryEnumerator&quot; /&gt; that iterates through the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">返回循环访问 <see cref="T:System.Collections.IDictionaryEnumerator" /> 实例的 <see cref="T:System.Collections.DictionaryBase" />。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionaryEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">用于 <see cref="T:System.Collections.IDictionaryEnumerator" /> 实例的 <see cref="T:System.Collections.DictionaryBase" />。</returns>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnClear">
      <summary vsli:raw="Performs additional custom processes before clearing the contents of the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">在清除 <see cref="T:System.Collections.DictionaryBase" /> 实例的内容之前执行其他自定义进程。</summary>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnClearComplete">
      <summary vsli:raw="Performs additional custom processes after clearing the contents of the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">在清除 <see cref="T:System.Collections.DictionaryBase" /> 实例的内容之后执行其他自定义进程。</summary>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)">
      <summary vsli:raw="Gets the element with the specified key and value in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">获取 <see cref="T:System.Collections.DictionaryBase" /> 实例中带有指定键和值的元素。</summary>
      <param name="key" vsli:raw="The key of the element to get.">要获取的元素的键。</param>
      <param name="currentValue" vsli:raw="The current value of the element associated with &lt;paramref name=&quot;key&quot; /&gt;.">与 <paramref name="key" /> 相关联的元素的当前值。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; containing the element with the specified key and value.">包含带有指定键和值的元素的 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes before inserting a new element into the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">在向 <see cref="T:System.Collections.DictionaryBase" /> 实例中插入新元素之前执行其他自定义进程。</summary>
      <param name="key" vsli:raw="The key of the element to insert.">要插入的元素的键。</param>
      <param name="value" vsli:raw="The value of the element to insert.">要插入的元素的值。</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes after inserting a new element into the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">在向 <see cref="T:System.Collections.DictionaryBase" /> 实例中插入新元素之后执行其他自定义进程。</summary>
      <param name="key" vsli:raw="The key of the element to insert.">要插入的元素的键。</param>
      <param name="value" vsli:raw="The value of the element to insert.">要插入的元素的值。</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes before removing an element from the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">当从 <see cref="T:System.Collections.DictionaryBase" /> 实例移除元素时执行其他自定义进程。</summary>
      <param name="key" vsli:raw="The key of the element to remove.">要移除的元素的键。</param>
      <param name="value" vsli:raw="The value of the element to remove.">要移除的元素的值。</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes after removing an element from the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">在从 <see cref="T:System.Collections.DictionaryBase" /> 实例中移除元素之后执行其他自定义进程。</summary>
      <param name="key" vsli:raw="The key of the element to remove.">要移除的元素的键。</param>
      <param name="value" vsli:raw="The value of the element to remove.">要移除的元素的值。</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes before setting a value in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">当在 <see cref="T:System.Collections.DictionaryBase" /> 实例中设置值之前执行其他自定义进程。</summary>
      <param name="key" vsli:raw="The key of the element to locate.">要定位的元素的键。</param>
      <param name="oldValue" vsli:raw="The old value of the element associated with &lt;paramref name=&quot;key&quot; /&gt;.">与 <paramref name="key" /> 相关联的元素的旧值。</param>
      <param name="newValue" vsli:raw="The new value of the element associated with &lt;paramref name=&quot;key&quot; /&gt;.">与 <paramref name="key" /> 相关联的元素的新值。</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes after setting a value in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">当在 <see cref="T:System.Collections.DictionaryBase" /> 实例中设置值后执行其他自定义进程。</summary>
      <param name="key" vsli:raw="The key of the element to locate.">要定位的元素的键。</param>
      <param name="oldValue" vsli:raw="The old value of the element associated with &lt;paramref name=&quot;key&quot; /&gt;.">与 <paramref name="key" /> 相关联的元素的旧值。</param>
      <param name="newValue" vsli:raw="The new value of the element associated with &lt;paramref name=&quot;key&quot; /&gt;.">与 <paramref name="key" /> 相关联的元素的新值。</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)">
      <summary vsli:raw="Performs additional custom processes when validating the element with the specified key and value.">在验证具有指定键和值的元素时执行其他自定义进程。</summary>
      <param name="key" vsli:raw="The key of the element to validate.">要验证的元素的键。</param>
      <param name="value" vsli:raw="The value of the element to validate.">要验证的元素的值。</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary vsli:raw="Adds an element with the specified key and value into the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt;.">将带有指定键和值的元素添加到 <see cref="T:System.Collections.DictionaryBase" /> 中。</summary>
      <param name="key" vsli:raw="The key of the element to add.">要添加的元素的键。</param>
      <param name="value" vsli:raw="The value of the element to add.">要添加的元素的值。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An element with the same key already exists in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt;.">
        <see cref="T:System.Collections.DictionaryBase" /> 中已存在具有相同键的元素。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; has a fixed size.">
        <see cref="T:System.Collections.DictionaryBase" /> 为只读。  
  
- 或 - 
<see cref="T:System.Collections.DictionaryBase" /> 具有固定的大小。</exception>
    </member>
    <member name="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; contains a specific key.">确定 <see cref="T:System.Collections.DictionaryBase" /> 是否包含特定键。</summary>
      <param name="key" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt;.">要在 <see cref="T:System.Collections.DictionaryBase" /> 中定位的键。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> 为 <see langword="null" />。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; contains an element with the specified key; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="true" /> 包含具有指定键的元素，则为 <see cref="T:System.Collections.DictionaryBase" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)">
      <summary vsli:raw="Removes the element with the specified key from the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt;.">从 <see cref="T:System.Collections.DictionaryBase" /> 中移除带有指定键的元素。</summary>
      <param name="key" vsli:raw="The key of the element to remove.">要移除的元素的键。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; has a fixed size.">
        <see cref="T:System.Collections.DictionaryBase" /> 为只读。  
  
- 或 - 
<see cref="T:System.Collections.DictionaryBase" /> 具有固定的大小。</exception>
    </member>
    <member name="M:System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that iterates through the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt;.">返回循环访问 <see cref="T:System.Collections.IEnumerator" /> 的 <see cref="T:System.Collections.DictionaryBase" />。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt;.">
        <see cref="T:System.Collections.IEnumerator" /> 的一个 <see cref="T:System.Collections.DictionaryBase" />。</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.Count">
      <summary vsli:raw="Gets the number of elements contained in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">获取 <see cref="T:System.Collections.DictionaryBase" /> 实例中包含的元素数。</summary>
      <returns vsli:raw="The number of elements contained in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">
        <see cref="T:System.Collections.DictionaryBase" /> 实例中包含的元素数。</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.Dictionary">
      <summary vsli:raw="Gets the list of elements contained in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">获取 <see cref="T:System.Collections.DictionaryBase" /> 实例中包含的元素的列表。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; representing the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance itself.">表示 <see cref="T:System.Collections.IDictionary" /> 实例本身的 <see cref="T:System.Collections.DictionaryBase" />。</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.InnerHashtable">
      <summary vsli:raw="Gets the list of elements contained in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance.">获取 <see cref="T:System.Collections.DictionaryBase" /> 实例中包含的元素的列表。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; representing the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; instance itself.">
        <see cref="T:System.Collections.Hashtable" />，表示 <see cref="T:System.Collections.DictionaryBase" /> 实例本身。</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to a &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object is synchronized (thread safe).">获取一个值，该值指示对 <see cref="T:System.Collections.DictionaryBase" /> 对象的访问是否同步（线程安全）。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果对 <see cref="T:System.Collections.DictionaryBase" /> 对象的访问是同步的（线程安全），则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to a &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object.">获取一个对象，该对象可用于同步对 <see cref="T:System.Collections.DictionaryBase" /> 对象的访问。</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object.">一个对象，该对象可用于同步对 <see cref="T:System.Collections.DictionaryBase" /> 对象的访问。</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize">
      <summary vsli:raw="Gets a value indicating whether a &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object has a fixed size.">获取一个值，该值指示 <see cref="T:System.Collections.DictionaryBase" /> 对象是否具有固定大小。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object has a fixed size; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Collections.DictionaryBase" /> 对象具有固定大小，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether a &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object is read-only.">获取一个值，该值指示 <see cref="T:System.Collections.DictionaryBase" /> 对象是否为只读。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Collections.DictionaryBase" /> 对象为只读，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)">
      <summary vsli:raw="Gets or sets the value associated with the specified key.">获取或设置与指定的键关联的值。</summary>
      <param name="key" vsli:raw="The key whose value to get or set.">要获取或设置其值的键。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The property is set and the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The property is set, &lt;paramref name=&quot;key&quot; /&gt; does not exist in the collection, and the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; has a fixed size.">设置了该属性，但 <see cref="T:System.Collections.DictionaryBase" /> 为只读。  
  
- 或 - 
设置了该属性，但 <paramref name="key" /> 不存在于集合中，且 <see cref="T:System.Collections.DictionaryBase" /> 具有固定的大小。</exception>
      <returns vsli:raw="The value associated with the specified key. If the specified key is not found, attempting to get it returns &lt;see langword=&quot;null&quot; /&gt;, and attempting to set it creates a new element using the specified key.">与指定的键相关联的值。 如果未找到指定的键，尝试获取它将返回 <see langword="null" />，尝试设置它将使用指定的键创建新元素。</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Keys">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; object containing the keys in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object.">获取包含 <see cref="T:System.Collections.ICollection" /> 对象中的键的 <see cref="T:System.Collections.DictionaryBase" /> 对象。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; object containing the keys in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object.">包含 <see cref="T:System.Collections.ICollection" /> 对象中的键的 <see cref="T:System.Collections.DictionaryBase" /> 对象。</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Values">
      <summary vsli:raw="Gets an &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; object containing the values in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object.">获取 <see cref="T:System.Collections.ICollection" /> 对象，它包含 <see cref="T:System.Collections.DictionaryBase" /> 对象中的值。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; object containing the values in the &lt;see cref=&quot;T:System.Collections.DictionaryBase&quot; /&gt; object.">
        <see cref="T:System.Collections.ICollection" /> 对象，它包含 <see cref="T:System.Collections.DictionaryBase" /> 对象中的值。</returns>
    </member>
    <member name="T:System.Collections.Queue">
      <summary vsli:raw="Represents a first-in, first-out collection of objects.">表示对象的先进先出集合。</summary>
    </member>
    <member name="M:System.Collections.Queue.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; class that is empty, has the default initial capacity, and uses the default growth factor.">初始化 <see cref="T:System.Collections.Queue" /> 类的新实例，该实例为空，具有默认初始容量并使用默认增长因子。</summary>
    </member>
    <member name="M:System.Collections.Queue.#ctor(System.Collections.ICollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; class that contains elements copied from the specified collection, has the same initial capacity as the number of elements copied, and uses the default growth factor.">初始化 <see cref="T:System.Collections.Queue" /> 类的新实例，该实例包含从指定集合复制的元素，具有与所复制的元素数相同的初始容量并使用默认增长因子。</summary>
      <param name="col" vsli:raw="The &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; to copy elements from.">
        <see cref="T:System.Collections.ICollection" />，从其中复制元素。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;col&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="col" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Collections.Queue.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; class that is empty, has the specified initial capacity, and uses the default growth factor.">初始化 <see cref="T:System.Collections.Queue" /> 类的新实例，该实例为空，具有指定的初始容量并使用默认增长因子。</summary>
      <param name="capacity" vsli:raw="The initial number of elements that the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; can contain.">
        <see cref="T:System.Collections.Queue" /> 可包含的初始元素数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is less than zero.">
        <paramref name="capacity" /> 小于零。</exception>
    </member>
    <member name="M:System.Collections.Queue.#ctor(System.Int32,System.Single)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; class that is empty, has the specified initial capacity, and uses the specified growth factor.">初始化 <see cref="T:System.Collections.Queue" /> 类的新实例，该实例为空，具有指定的初始容量并使用指定的增长因子。</summary>
      <param name="capacity" vsli:raw="The initial number of elements that the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; can contain.">
        <see cref="T:System.Collections.Queue" /> 可包含的初始元素数。</param>
      <param name="growFactor" vsli:raw="The factor by which the capacity of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; is expanded.">扩展 <see cref="T:System.Collections.Queue" /> 容量要使用的因子。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is less than zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;growFactor&quot; /&gt; is less than 1.0 or greater than 10.0.">
        <paramref name="capacity" /> 小于零。  
  
- 或 - 
 <paramref name="growFactor" /> 小于 1.0 或大于 10.0。</exception>
    </member>
    <member name="M:System.Collections.Queue.Clear">
      <summary vsli:raw="Removes all objects from the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">从 <see cref="T:System.Collections.Queue" /> 中移除所有对象。</summary>
    </member>
    <member name="M:System.Collections.Queue.Clone">
      <summary vsli:raw="Creates a shallow copy of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">创建 <see cref="T:System.Collections.Queue" /> 的浅表副本。</summary>
      <returns vsli:raw="A shallow copy of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">
        <see cref="T:System.Collections.Queue" /> 的浅表副本。</returns>
    </member>
    <member name="M:System.Collections.Queue.Contains(System.Object)">
      <summary vsli:raw="Determines whether an element is in the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">确定某元素是否在 <see cref="T:System.Collections.Queue" /> 中。</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to locate in the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;. The value can be &lt;see langword=&quot;null&quot; /&gt;.">要在 <see cref="T:System.Object" /> 中定位的 <see cref="T:System.Collections.Queue" />。 该值可以为 <see langword="null" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is found in the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果在 <see langword="true" /> 中找到 <paramref name="obj" />，则为 <see cref="T:System.Collections.Queue" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Collections.Queue.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; elements to an existing one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified array index.">从指定数组索引开始将 <see cref="T:System.Collections.Queue" /> 元素复制到现有一维 <see cref="T:System.Array" /> 中。</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">一维 <see cref="T:System.Array" />，它是从 <see cref="T:System.Collections.Queue" /> 复制的元素的目标。 <see cref="T:System.Array" /> 必须具有从零开始的索引。</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">
        <paramref name="array" /> 中从零开始的索引，从此处开始复制。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" /> 小于零。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in the source &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> 是多维的。  
  
- 或 - 
源 <see cref="T:System.Collections.Queue" /> 中的元素个数大于从 <paramref name="index" /> 到目标 <paramref name="array" /> 末尾之间的可用空间。</exception>
      <exception cref="T:System.ArrayTypeMismatchException" vsli:raw="The type of the source &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">无法自动将源 <see cref="T:System.Collections.Queue" /> 的类型转换为目标 <paramref name="array" /> 的类型。</exception>
    </member>
    <member name="M:System.Collections.Queue.Dequeue">
      <summary vsli:raw="Removes and returns the object at the beginning of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">移除并返回位于 <see cref="T:System.Collections.Queue" /> 开始处的对象。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; is empty.">
        <see cref="T:System.Collections.Queue" /> 为空。</exception>
      <returns vsli:raw="The object that is removed from the beginning of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">从 <see cref="T:System.Collections.Queue" /> 的开始处移除的对象。</returns>
    </member>
    <member name="M:System.Collections.Queue.Enqueue(System.Object)">
      <summary vsli:raw="Adds an object to the end of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">将对象添加到 <see cref="T:System.Collections.Queue" /> 的结尾处。</summary>
      <param name="obj" vsli:raw="The object to add to the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;. The value can be &lt;see langword=&quot;null&quot; /&gt;.">要添加到 <see cref="T:System.Collections.Queue" /> 的对象。 该值可以为 <see langword="null" />。</param>
    </member>
    <member name="M:System.Collections.Queue.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">返回循环访问 <see cref="T:System.Collections.Queue" /> 的枚举数。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">
        <see cref="T:System.Collections.IEnumerator" /> 的一个 <see cref="T:System.Collections.Queue" />。</returns>
    </member>
    <member name="M:System.Collections.Queue.Peek">
      <summary vsli:raw="Returns the object at the beginning of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; without removing it.">返回位于 <see cref="T:System.Collections.Queue" /> 开始处的对象但不将其移除。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; is empty.">
        <see cref="T:System.Collections.Queue" /> 为空。</exception>
      <returns vsli:raw="The object at the beginning of the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">位于 <see cref="T:System.Collections.Queue" /> 的开头的对象。</returns>
    </member>
    <member name="M:System.Collections.Queue.Synchronized(System.Collections.Queue)">
      <summary vsli:raw="Returns a new &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; that wraps the original queue, and is thread safe.">返回将包装原始队列并且是线程安全的新的 <see cref="T:System.Collections.Queue" />。</summary>
      <param name="queue" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; to synchronize.">要同步的 <see cref="T:System.Collections.Queue" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;queue&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="queue" /> 为 <see langword="null" />。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; wrapper that is synchronized (thread safe).">同步的（线程安全）<see cref="T:System.Collections.Queue" /> 包装。</returns>
    </member>
    <member name="M:System.Collections.Queue.ToArray">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; elements to a new array.">将 <see cref="T:System.Collections.Queue" /> 元素复制到新数组。</summary>
      <returns vsli:raw="A new array containing elements copied from the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">包含从 <see cref="T:System.Collections.Queue" /> 复制的元素的新数组。</returns>
    </member>
    <member name="M:System.Collections.Queue.TrimToSize">
      <summary vsli:raw="Sets the capacity to the actual number of elements in the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">将容量设置为 <see cref="T:System.Collections.Queue" /> 中元素的实际数目。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; is read-only.">
        <see cref="T:System.Collections.Queue" /> 为只读。</exception>
    </member>
    <member name="P:System.Collections.Queue.Count">
      <summary vsli:raw="Gets the number of elements contained in the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">获取 <see cref="T:System.Collections.Queue" /> 中包含的元素数。</summary>
      <returns vsli:raw="The number of elements contained in the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">
        <see cref="T:System.Collections.Queue" /> 中包含的元素数。</returns>
    </member>
    <member name="P:System.Collections.Queue.IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; is synchronized (thread safe).">获取一个值，该值指示是否同步对 <see cref="T:System.Collections.Queue" /> 的访问（线程安全）。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果对 <see langword="true" /> 的访问是同步的（线程安全），则为 <see cref="T:System.Collections.Queue" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Collections.Queue.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">获取可用于同步对 <see cref="T:System.Collections.Queue" /> 的访问的对象。</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.Queue&quot; /&gt;.">用于同步对 <see cref="T:System.Collections.Queue" /> 的访问的对象。</returns>
    </member>
    <member name="T:System.Collections.ReadOnlyCollectionBase">
      <summary vsli:raw="Provides the &lt;see langword=&quot;abstract&quot; /&gt; base class for a strongly typed non-generic read-only collection.">提供强类型化非泛型只读集合的 <see langword="abstract" /> 基类。</summary>
    </member>
    <member name="M:System.Collections.ReadOnlyCollectionBase.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; class.">初始化 <see cref="T:System.Collections.ReadOnlyCollectionBase" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that iterates through the &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; instance.">返回循环访问 <see cref="T:System.Collections.ReadOnlyCollectionBase" /> 实例的枚举器。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; instance.">用于 <see cref="T:System.Collections.IEnumerator" /> 实例的 <see cref="T:System.Collections.ReadOnlyCollectionBase" />。</returns>
    </member>
    <member name="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the entire &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; to a compatible one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified index of the target array.">从目标数组的指定索引处开始将整个 <see cref="T:System.Collections.ReadOnlyCollectionBase" /> 复制到兼容的一维 <see cref="T:System.Array" />。</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">一维 <see cref="T:System.Array" />，它是从 <see cref="T:System.Collections.ReadOnlyCollectionBase" /> 复制的元素的目标。 <see cref="T:System.Array" /> 必须具有从零开始的索引。</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">
        <paramref name="array" /> 中从零开始的索引，从此处开始复制。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" /> 小于零。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in the source &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> 是多维的。  
  
- 或 - 
源 <see cref="T:System.Collections.ReadOnlyCollectionBase" /> 中的元素个数大于从 <paramref name="index" /> 到目标 <paramref name="array" /> 末尾之间的可用空间。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The type of the source &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">无法自动将源 <see cref="T:System.Collections.ReadOnlyCollectionBase" /> 的类型转换为目标 <paramref name="array" /> 的类型。</exception>
    </member>
    <member name="P:System.Collections.ReadOnlyCollectionBase.Count">
      <summary vsli:raw="Gets the number of elements contained in the &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; instance.">获取 <see cref="T:System.Collections.ReadOnlyCollectionBase" /> 实例中包含的元素数。</summary>
      <returns vsli:raw="The number of elements contained in the &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; instance. Retrieving the value of this property is an O(1) operation.">
        <see cref="T:System.Collections.ReadOnlyCollectionBase" /> 实例中包含的元素数。 检索此属性的值的运算复杂度为 O(1)。</returns>
    </member>
    <member name="P:System.Collections.ReadOnlyCollectionBase.InnerList">
      <summary vsli:raw="Gets the list of elements contained in the &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; instance.">获取 <see cref="T:System.Collections.ReadOnlyCollectionBase" /> 实例中包含的元素的列表。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ArrayList&quot; /&gt; representing the &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; instance itself.">表示 <see cref="T:System.Collections.ArrayList" /> 实例本身的 <see cref="T:System.Collections.ReadOnlyCollectionBase" />。</returns>
    </member>
    <member name="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to a &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; object is synchronized (thread safe).">获取一个值，该值指示对 <see cref="T:System.Collections.ReadOnlyCollectionBase" /> 对象的访问是否同步（线程安全）。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; object is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果对 <see cref="T:System.Collections.ReadOnlyCollectionBase" /> 对象的访问是同步的（线程安全），则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to a &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; object.">获取一个对象，该对象可用于同步对 <see cref="T:System.Collections.ReadOnlyCollectionBase" /> 对象的访问。</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.ReadOnlyCollectionBase&quot; /&gt; object.">一个对象，该对象可用于同步对 <see cref="T:System.Collections.ReadOnlyCollectionBase" /> 对象的访问。</returns>
    </member>
    <member name="T:System.Collections.SortedList">
      <summary vsli:raw="Represents a collection of key/value pairs that are sorted by the keys and are accessible by key and by index.">表示键/值对的集合，这些键值对按键排序并可按照键和索引访问。</summary>
    </member>
    <member name="M:System.Collections.SortedList.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; class that is empty, has the default initial capacity, and is sorted according to the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; interface implemented by each key added to the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">初始化 <see cref="T:System.Collections.SortedList" /> 类的新实例，该实例为空、具有默认初始容量并根据 <see cref="T:System.IComparable" /> 接口（此接口由添加到 <see cref="T:System.Collections.SortedList" /> 对象中的每个键实现）进行排序。</summary>
    </member>
    <member name="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; class that is empty, has the default initial capacity, and is sorted according to the specified &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt; interface.">初始化 <see cref="T:System.Collections.SortedList" /> 类的新实例，该实例为空、具有默认初始容量并根据指定的 <see cref="T:System.Collections.IComparer" /> 接口进行排序。</summary>
      <param name="comparer" vsli:raw="The &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt; implementation to use when comparing keys.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; to use the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; implementation of each key.">在对键进行比较时使用的 <see cref="T:System.Collections.IComparer" /> 实现。  
  
- 或 - 
 <see langword="null" />，使用每一个键的 <see cref="T:System.IComparable" /> 实现。</param>
    </member>
    <member name="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; class that is empty, has the specified initial capacity, and is sorted according to the specified &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt; interface.">初始化 <see cref="T:System.Collections.SortedList" /> 类的新实例，该实例为空、具有指定的初始容量并根据指定的 <see cref="T:System.Collections.IComparer" /> 接口排序。</summary>
      <param name="comparer" vsli:raw="The &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt; implementation to use when comparing keys.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; to use the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; implementation of each key.">在对键进行比较时使用的 <see cref="T:System.Collections.IComparer" /> 实现。  
  
- 或 - 
 <see langword="null" />，使用每一个键的 <see cref="T:System.IComparable" /> 实现。</param>
      <param name="capacity" vsli:raw="The initial number of elements that the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object can contain.">
        <see cref="T:System.Collections.SortedList" /> 对象可包含的初始元素数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is less than zero.">
        <paramref name="capacity" /> 小于零。</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough available memory to create a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object with the specified &lt;paramref name=&quot;capacity&quot; /&gt;.">没有足够的可用内存来创建具有指定 <paramref name="capacity" /> 的 <see cref="T:System.Collections.SortedList" /> 对象。</exception>
    </member>
    <member name="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; class that contains elements copied from the specified dictionary, has the same initial capacity as the number of elements copied, and is sorted according to the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; interface implemented by each key.">初始化 <see cref="T:System.Collections.SortedList" /> 类的新实例，该实例包含从指定字典复制的元素、具有与所复制的元素数相同的初始容量并根据由每个键实现的 <see cref="T:System.IComparable" /> 接口排序。</summary>
      <param name="d" vsli:raw="The &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; implementation to copy to a new &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">要复制到新 <see cref="T:System.Collections.IDictionary" /> 对象的 <see cref="T:System.Collections.SortedList" /> 实现。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;d&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="d" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="One or more elements in &lt;paramref name=&quot;d&quot; /&gt; do not implement the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; interface.">
        <paramref name="d" /> 中的一个或多个元素未实现 <see cref="T:System.IComparable" /> 接口。</exception>
    </member>
    <member name="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; class that contains elements copied from the specified dictionary, has the same initial capacity as the number of elements copied, and is sorted according to the specified &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt; interface.">初始化 <see cref="T:System.Collections.SortedList" /> 类的新实例，该实例包含从指定字典复制的元素、具有与所复制的元素数相同的初始容量并根据指定的 <see cref="T:System.Collections.IComparer" /> 接口排序。</summary>
      <param name="d" vsli:raw="The &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; implementation to copy to a new &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">要复制到新 <see cref="T:System.Collections.IDictionary" /> 对象的 <see cref="T:System.Collections.SortedList" /> 实现。</param>
      <param name="comparer" vsli:raw="The &lt;see cref=&quot;T:System.Collections.IComparer&quot; /&gt; implementation to use when comparing keys.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; to use the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; implementation of each key.">在对键进行比较时使用的 <see cref="T:System.Collections.IComparer" /> 实现。  
  
- 或 - 
 <see langword="null" />，使用每一个键的 <see cref="T:System.IComparable" /> 实现。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;d&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="d" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="&lt;paramref name=&quot;comparer&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;, and one or more elements in &lt;paramref name=&quot;d&quot; /&gt; do not implement the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; interface.">
        <paramref name="comparer" /> 为 <see langword="null" />，且 <paramref name="d" /> 中的一个或多个元素未实现 <see cref="T:System.IComparable" /> 接口。</exception>
    </member>
    <member name="M:System.Collections.SortedList.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; class that is empty, has the specified initial capacity, and is sorted according to the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; interface implemented by each key added to the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">初始化 <see cref="T:System.Collections.SortedList" /> 类的新实例，该实例为空、具有指定的初始容量并且根据 <see cref="T:System.IComparable" /> 接口（此接口由添加到 <see cref="T:System.Collections.SortedList" /> 对象的每个键实现）进行排序。</summary>
      <param name="initialCapacity" vsli:raw="The initial number of elements that the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object can contain.">
        <see cref="T:System.Collections.SortedList" /> 对象可包含的初始元素数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;initialCapacity&quot; /&gt; is less than zero.">
        <paramref name="initialCapacity" /> 小于零。</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough available memory to create a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object with the specified &lt;paramref name=&quot;initialCapacity&quot; /&gt;.">没有足够的可用内存来创建具有指定 <paramref name="initialCapacity" /> 的 <see cref="T:System.Collections.SortedList" /> 对象。</exception>
    </member>
    <member name="M:System.Collections.SortedList.Add(System.Object,System.Object)">
      <summary vsli:raw="Adds an element with the specified key and value to a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">将带有指定键和值的元素添加到 <see cref="T:System.Collections.SortedList" /> 对象。</summary>
      <param name="key" vsli:raw="The key of the element to add.">要添加的元素的键。</param>
      <param name="value" vsli:raw="The value of the element to add. The value can be &lt;see langword=&quot;null&quot; /&gt;.">要添加的元素的值。 该值可以为 <see langword="null" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="An element with the specified &lt;paramref name=&quot;key&quot; /&gt; already exists in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; is set to use the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; interface, and &lt;paramref name=&quot;key&quot; /&gt; does not implement the &lt;see cref=&quot;T:System.IComparable&quot; /&gt; interface.">带有指定 <paramref name="key" /> 的元素已经存在于 <see cref="T:System.Collections.SortedList" /> 对象中。  
  
- 或 - 
<see cref="T:System.Collections.SortedList" /> 设置为使用 <see cref="T:System.IComparable" /> 接口，并且 <paramref name="key" /> 不实现 <see cref="T:System.IComparable" /> 接口。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; has a fixed size.">
        <see cref="T:System.Collections.SortedList" /> 为只读。  
  
- 或 - 
<see cref="T:System.Collections.SortedList" /> 具有固定的大小。</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough available memory to add the element to the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt;.">没有足够的可用内存来将元素添加到 <see cref="T:System.Collections.SortedList" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The comparer throws an exception.">比较器引发异常。</exception>
    </member>
    <member name="M:System.Collections.SortedList.Clear">
      <summary vsli:raw="Removes all elements from a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">从 <see cref="T:System.Collections.SortedList" /> 对象中移除所有元素。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; has a fixed size.">
        <see cref="T:System.Collections.SortedList" /> 对象是只读的。  
  
- 或 - 
<see cref="T:System.Collections.SortedList" /> 具有固定的大小。</exception>
    </member>
    <member name="M:System.Collections.SortedList.Clone">
      <summary vsli:raw="Creates a shallow copy of a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">创建 <see cref="T:System.Collections.SortedList" /> 对象的浅表副本。</summary>
      <returns vsli:raw="A shallow copy of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> 对象的浅表副本。</returns>
    </member>
    <member name="M:System.Collections.SortedList.Contains(System.Object)">
      <summary vsli:raw="Determines whether a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object contains a specific key.">确定 <see cref="T:System.Collections.SortedList" /> 对象是否包含特定键。</summary>
      <param name="key" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">要在 <see cref="T:System.Collections.SortedList" /> 对象中查找的键。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The comparer throws an exception.">比较器引发异常。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object contains an element with the specified &lt;paramref name=&quot;key&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Collections.SortedList" /> 对象包含带有指定 <paramref name="key" /> 的元素，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Collections.SortedList.ContainsKey(System.Object)">
      <summary vsli:raw="Determines whether a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object contains a specific key.">确定 <see cref="T:System.Collections.SortedList" /> 对象是否包含特定键。</summary>
      <param name="key" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">要在 <see cref="T:System.Collections.SortedList" /> 对象中查找的键。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The comparer throws an exception.">比较器引发异常。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object contains an element with the specified &lt;paramref name=&quot;key&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Collections.SortedList" /> 对象包含带有指定 <paramref name="key" /> 的元素，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Collections.SortedList.ContainsValue(System.Object)">
      <summary vsli:raw="Determines whether a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object contains a specific value.">确定 <see cref="T:System.Collections.SortedList" /> 对象是否包含特定值。</summary>
      <param name="value" vsli:raw="The value to locate in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object. The value can be &lt;see langword=&quot;null&quot; /&gt;.">要在 <see cref="T:System.Collections.SortedList" /> 对象中定位的值。 该值可以为 <see langword="null" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object contains an element with the specified &lt;paramref name=&quot;value&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Collections.SortedList" /> 对象包含带有指定 <paramref name="value" /> 的元素，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; elements to a one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; object, starting at the specified index in the array.">从指定数组索引开始将 <see cref="T:System.Collections.SortedList" /> 元素复制到一维 <see cref="T:System.Array" /> 对象中。</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; object that is the destination of the &lt;see cref=&quot;T:System.Collections.DictionaryEntry&quot; /&gt; objects copied from &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">一维 <see cref="T:System.Array" /> 对象，它是从 <see cref="T:System.Collections.DictionaryEntry" /> 复制的 <see cref="T:System.Collections.SortedList" /> 对象的目标位置。 <see cref="T:System.Array" /> 必须具有从零开始的索引。</param>
      <param name="arrayIndex" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">
        <paramref name="array" /> 中从零开始的索引，从此处开始复制。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;arrayIndex&quot; /&gt; is less than zero.">
        <paramref name="arrayIndex" /> 小于零。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in the source &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object is greater than the available space from &lt;paramref name=&quot;arrayIndex&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> 是多维的。  
  
- 或 - 
源 <see cref="T:System.Collections.SortedList" /> 对象中的元素数目大于从 <paramref name="arrayIndex" /> 到目标 <paramref name="array" /> 末尾之间的可用空间。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The type of the source &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">无法自动将源 <see cref="T:System.Collections.SortedList" /> 的类型转换为目标 <paramref name="array" /> 的类型。</exception>
    </member>
    <member name="M:System.Collections.SortedList.GetByIndex(System.Int32)">
      <summary vsli:raw="Gets the value at the specified index of a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">获取 <see cref="T:System.Collections.SortedList" /> 对象的指定索引处的值。</summary>
      <param name="index" vsli:raw="The zero-based index of the value to get.">要获取的值的从零开始索引。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is outside the range of valid indexes for the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <paramref name="index" /> 不在 <see cref="T:System.Collections.SortedList" /> 对象的有效索引范围内。</exception>
      <returns vsli:raw="The value at the specified index of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">位于 <see cref="T:System.Collections.SortedList" /> 对象的指定索引处的值。</returns>
    </member>
    <member name="M:System.Collections.SortedList.GetEnumerator">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IDictionaryEnumerator&quot; /&gt; object that iterates through a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">返回一个循环访问 <see cref="T:System.Collections.IDictionaryEnumerator" /> 对象的 <see cref="T:System.Collections.SortedList" /> 对象。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IDictionaryEnumerator&quot; /&gt; object for the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.IDictionaryEnumerator" /> 对象的 <see cref="T:System.Collections.SortedList" /> 对象。</returns>
    </member>
    <member name="M:System.Collections.SortedList.GetKey(System.Int32)">
      <summary vsli:raw="Gets the key at the specified index of a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">获取 <see cref="T:System.Collections.SortedList" /> 对象的指定索引处的键。</summary>
      <param name="index" vsli:raw="The zero-based index of the key to get.">要获取的键的从零开始的索引。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is outside the range of valid indexes for the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <paramref name="index" /> 不在 <see cref="T:System.Collections.SortedList" /> 对象的有效索引范围内。</exception>
      <returns vsli:raw="The key at the specified index of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> 对象的指定索引处的键。</returns>
    </member>
    <member name="M:System.Collections.SortedList.GetKeyList">
      <summary vsli:raw="Gets the keys in a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">获取 <see cref="T:System.Collections.SortedList" /> 对象中的键。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; object containing the keys in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">包含 <see cref="T:System.Collections.IList" /> 对象中的键的 <see cref="T:System.Collections.SortedList" /> 对象。</returns>
    </member>
    <member name="M:System.Collections.SortedList.GetValueList">
      <summary vsli:raw="Gets the values in a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">获取 <see cref="T:System.Collections.SortedList" /> 对象中的值。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IList&quot; /&gt; object containing the values in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.IList" /> 对象，它包含 <see cref="T:System.Collections.SortedList" /> 对象中的值。</returns>
    </member>
    <member name="M:System.Collections.SortedList.IndexOfKey(System.Object)">
      <summary vsli:raw="Returns the zero-based index of the specified key in a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">返回 <see cref="T:System.Collections.SortedList" /> 对象中指定键的从零开始的索引。</summary>
      <param name="key" vsli:raw="The key to locate in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">要在 <see cref="T:System.Collections.SortedList" /> 对象中查找的键。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The comparer throws an exception.">比较器引发异常。</exception>
      <returns vsli:raw="The zero-based index of the &lt;paramref name=&quot;key&quot; /&gt; parameter, if &lt;paramref name=&quot;key&quot; /&gt; is found in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object; otherwise, -1.">如果在 <see cref="T:System.Collections.SortedList" /> 对象中找到 <paramref name="key" />，则为 <paramref name="key" /> 参数的从零开始的索引；否则为 -1。</returns>
    </member>
    <member name="M:System.Collections.SortedList.IndexOfValue(System.Object)">
      <summary vsli:raw="Returns the zero-based index of the first occurrence of the specified value in a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">返回指定的值在 <see cref="T:System.Collections.SortedList" /> 对象中第一个匹配项的从零开始的索引。</summary>
      <param name="value" vsli:raw="The value to locate in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object. The value can be &lt;see langword=&quot;null&quot; /&gt;.">要在 <see cref="T:System.Collections.SortedList" /> 对象中定位的值。 该值可以为 <see langword="null" />。</param>
      <returns vsli:raw="The zero-based index of the first occurrence of the &lt;paramref name=&quot;value&quot; /&gt; parameter, if &lt;paramref name=&quot;value&quot; /&gt; is found in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object; otherwise, -1.">如果在 <see cref="T:System.Collections.SortedList" /> 对象中找到 <paramref name="value" />，则为 <paramref name="value" /> 参数的第一个匹配项的从零开始的索引；否则为 -1。</returns>
    </member>
    <member name="M:System.Collections.SortedList.Remove(System.Object)">
      <summary vsli:raw="Removes the element with the specified key from a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">从 <see cref="T:System.Collections.SortedList" /> 对象中移除带有指定键的元素。</summary>
      <param name="key" vsli:raw="The key of the element to remove.">要移除的元素的键。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; has a fixed size.">
        <see cref="T:System.Collections.SortedList" /> 对象是只读的。  
  
- 或 - 
<see cref="T:System.Collections.SortedList" /> 具有固定的大小。</exception>
    </member>
    <member name="M:System.Collections.SortedList.RemoveAt(System.Int32)">
      <summary vsli:raw="Removes the element at the specified index of a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">移除 <see cref="T:System.Collections.SortedList" /> 对象的指定索引处的元素。</summary>
      <param name="index" vsli:raw="The zero-based index of the element to remove.">要移除的元素的从零开始的索引。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is outside the range of valid indexes for the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <paramref name="index" /> 不在 <see cref="T:System.Collections.SortedList" /> 对象的有效索引范围内。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; has a fixed size.">
        <see cref="T:System.Collections.SortedList" /> 为只读。  
  
- 或 - 
<see cref="T:System.Collections.SortedList" /> 具有固定的大小。</exception>
    </member>
    <member name="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
      <summary vsli:raw="Replaces the value at a specific index in a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">替换 <see cref="T:System.Collections.SortedList" /> 对象中指定索引处的值。</summary>
      <param name="index" vsli:raw="The zero-based index at which to save &lt;paramref name=&quot;value&quot; /&gt;.">从零开始的索引，在该位置保存 <paramref name="value" />。</param>
      <param name="value" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to save into the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object. The value can be &lt;see langword=&quot;null&quot; /&gt;.">要保存到 <see cref="T:System.Object" /> 对象中的 <see cref="T:System.Collections.SortedList" />。 该值可以为 <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is outside the range of valid indexes for the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <paramref name="index" /> 不在 <see cref="T:System.Collections.SortedList" /> 对象的有效索引范围内。</exception>
    </member>
    <member name="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
      <summary vsli:raw="Returns a synchronized (thread-safe) wrapper for a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">返回 <see cref="T:System.Collections.SortedList" /> 对象的同步（线程安全）包装。</summary>
      <param name="list" vsli:raw="The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object to synchronize.">要同步的 <see cref="T:System.Collections.SortedList" /> 对象。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;list&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="list" /> 为 <see langword="null" />。</exception>
      <returns vsli:raw="A synchronized (thread-safe) wrapper for the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> 对象的同步（线程安全）包装。</returns>
    </member>
    <member name="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; that iterates through the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt;.">返回循环访问 <see cref="T:System.Collections.IEnumerator" /> 的 <see cref="T:System.Collections.SortedList" />。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt;.">
        <see cref="T:System.Collections.IEnumerator" /> 的一个 <see cref="T:System.Collections.SortedList" />。</returns>
    </member>
    <member name="M:System.Collections.SortedList.TrimToSize">
      <summary vsli:raw="Sets the capacity to the actual number of elements in a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">将容量设置为 <see cref="T:System.Collections.SortedList" /> 对象中元素的实际数目。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; has a fixed size.">
        <see cref="T:System.Collections.SortedList" /> 对象是只读的。  
  
- 或 - 
<see cref="T:System.Collections.SortedList" /> 具有固定的大小。</exception>
    </member>
    <member name="P:System.Collections.SortedList.Capacity">
      <summary vsli:raw="Gets or sets the capacity of a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">获取或设置 <see cref="T:System.Collections.SortedList" /> 对象的容量。</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value assigned is less than the current number of elements in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">分配的值小于 <see cref="T:System.Collections.SortedList" /> 对象中的当前元素数。</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough memory available on the system.">系统上没有足够的可用内存。</exception>
      <returns vsli:raw="The number of elements that the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object can contain.">
        <see cref="T:System.Collections.SortedList" /> 对象可包含的元素数。</returns>
    </member>
    <member name="P:System.Collections.SortedList.Count">
      <summary vsli:raw="Gets the number of elements contained in a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">获取 <see cref="T:System.Collections.SortedList" /> 对象中包含的元素数。</summary>
      <returns vsli:raw="The number of elements contained in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.SortedList" /> 对象中包含的元素数。</returns>
    </member>
    <member name="P:System.Collections.SortedList.IsFixedSize">
      <summary vsli:raw="Gets a value indicating whether a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object has a fixed size.">获取一个值，该值指示 <see cref="T:System.Collections.SortedList" /> 对象是否具有固定大小。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object has a fixed size; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Collections.SortedList" /> 对象具有固定大小，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Collections.SortedList.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object is read-only.">获取一个值，该值指示 <see cref="T:System.Collections.SortedList" /> 对象是否为只读。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object is read-only; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Collections.SortedList" /> 对象为只读，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Collections.SortedList.IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object is synchronized (thread safe).">获取一个值，该值指示对 <see cref="T:System.Collections.SortedList" /> 对象的访问是否同步（线程安全）。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果对 <see cref="T:System.Collections.SortedList" /> 对象的访问是同步的（线程安全），则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Collections.SortedList.Item(System.Object)">
      <summary vsli:raw="Gets or sets the value associated with a specific key in a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">获取或设置与 <see cref="T:System.Collections.SortedList" /> 对象中的特定键相关联的值。</summary>
      <param name="key" vsli:raw="The key associated with the value to get or set.">与要获取或设置的值相关联的键。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;key&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="key" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.NotSupportedException" vsli:raw="The property is set and the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object is read-only.  &#xA;  &#xA; -or-  &#xA;  &#xA; The property is set, &lt;paramref name=&quot;key&quot; /&gt; does not exist in the collection, and the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; has a fixed size.">设置该属性，而且 <see cref="T:System.Collections.SortedList" /> 对象为只读。  
  
- 或 - 
设置了该属性，但 <paramref name="key" /> 不存在于集合中，且 <see cref="T:System.Collections.SortedList" /> 具有固定的大小。</exception>
      <exception cref="T:System.OutOfMemoryException" vsli:raw="There is not enough available memory to add the element to the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt;.">没有足够的可用内存来将元素添加到 <see cref="T:System.Collections.SortedList" />。</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The comparer throws an exception.">比较器引发异常。</exception>
      <returns vsli:raw="The value associated with the &lt;paramref name=&quot;key&quot; /&gt; parameter in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object, if &lt;paramref name=&quot;key&quot; /&gt; is found; otherwise, &lt;see langword=&quot;null&quot; /&gt;.">如果找到 <paramref name="key" />，则为与 <see cref="T:System.Collections.SortedList" /> 对象中的 <paramref name="key" /> 参数相关联的值；否则为 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Collections.SortedList.Keys">
      <summary vsli:raw="Gets the keys in a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">获取 <see cref="T:System.Collections.SortedList" /> 对象中的键。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; object containing the keys in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">包含 <see cref="T:System.Collections.ICollection" /> 对象中的键的 <see cref="T:System.Collections.SortedList" /> 对象。</returns>
    </member>
    <member name="P:System.Collections.SortedList.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">获取一个对象，该对象可用于同步对 <see cref="T:System.Collections.SortedList" /> 对象的访问。</summary>
      <returns vsli:raw="An object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">一个对象，该对象可用于同步对 <see cref="T:System.Collections.SortedList" /> 对象的访问。</returns>
    </member>
    <member name="P:System.Collections.SortedList.Values">
      <summary vsli:raw="Gets the values in a &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">获取 <see cref="T:System.Collections.SortedList" /> 对象中的值。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; object containing the values in the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; object.">
        <see cref="T:System.Collections.ICollection" /> 对象，它包含 <see cref="T:System.Collections.SortedList" /> 对象中的值。</returns>
    </member>
    <member name="T:System.Collections.Specialized.CollectionsUtil">
      <summary vsli:raw="Creates collections that ignore the case in strings.">创建忽略字符串大小写的集合。</summary>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Specialized.CollectionsUtil&quot; /&gt; class.">初始化 <see cref="T:System.Collections.Specialized.CollectionsUtil" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable">
      <summary vsli:raw="Creates a new case-insensitive instance of the &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; class with the default initial capacity.">创建 <see cref="T:System.Collections.Hashtable" /> 类具有默认初始容量的不区分大小写的新实例。</summary>
      <returns vsli:raw="A new case-insensitive instance of the &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; class with the default initial capacity.">
        <see cref="T:System.Collections.Hashtable" /> 类具有默认初始容量的不区分大小写的新实例。</returns>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable(System.Collections.IDictionary)">
      <summary vsli:raw="Copies the entries from the specified dictionary to a new case-insensitive instance of the &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; class with the same initial capacity as the number of entries copied.">将项从指定字典复制到 <see cref="T:System.Collections.Hashtable" /> 类的不区分大小写的新实例，该实例具有与复制项的数量相同的初始容量。</summary>
      <param name="d" vsli:raw="The &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt; to copy to a new case-insensitive &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt;.">要复制到不区分大小写的新 <see cref="T:System.Collections.IDictionary" /> 的 <see cref="T:System.Collections.Hashtable" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;d&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="d" /> 为 <see langword="null" />。</exception>
      <returns vsli:raw="A new case-insensitive instance of the &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; class containing the entries from the specified &lt;see cref=&quot;T:System.Collections.IDictionary&quot; /&gt;.">
        <see cref="T:System.Collections.Hashtable" /> 类的不区分大小写的新实例，该实例包含指定的 <see cref="T:System.Collections.IDictionary" /> 中的项。</returns>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable(System.Int32)">
      <summary vsli:raw="Creates a new case-insensitive instance of the &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; class with the specified initial capacity.">创建 <see cref="T:System.Collections.Hashtable" /> 类具有指定初始容量的不区分大小写的新实例。</summary>
      <param name="capacity" vsli:raw="The approximate number of entries that the &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; can initially contain.">
        <see cref="T:System.Collections.Hashtable" /> 最初可包含的大概项数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is less than zero.">
        <paramref name="capacity" /> 小于零。</exception>
      <returns vsli:raw="A new case-insensitive instance of the &lt;see cref=&quot;T:System.Collections.Hashtable&quot; /&gt; class with the specified initial capacity.">具有指定初始容量的 <see cref="T:System.Collections.Hashtable" /> 类的不区分大小写的新实例。</returns>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveSortedList">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; class that ignores the case of strings.">创建 <see cref="T:System.Collections.SortedList" /> 类的新实例，该实例忽略字符串的大小写。</summary>
      <returns vsli:raw="A new instance of the &lt;see cref=&quot;T:System.Collections.SortedList&quot; /&gt; class that ignores the case of strings.">
        <see cref="T:System.Collections.SortedList" /> 类的新实例，该实例忽略字符串的大小写。</returns>
    </member>
    <member name="T:System.Collections.Stack">
      <summary vsli:raw="Represents a simple last-in-first-out (LIFO) non-generic collection of objects.">表示对象的简单后进先出 (LIFO) 非泛型集合。</summary>
    </member>
    <member name="M:System.Collections.Stack.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; class that is empty and has the default initial capacity.">初始化 <see cref="T:System.Collections.Stack" /> 类的新实例，该实例为空并且具有默认初始容量。</summary>
    </member>
    <member name="M:System.Collections.Stack.#ctor(System.Collections.ICollection)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; class that contains elements copied from the specified collection and has the same initial capacity as the number of elements copied.">初始化 <see cref="T:System.Collections.Stack" /> 类的新实例，该实例包含从指定集合复制的元素并且具有与所复制的元素数相同的初始容量。</summary>
      <param name="col" vsli:raw="The &lt;see cref=&quot;T:System.Collections.ICollection&quot; /&gt; to copy elements from.">
        <see cref="T:System.Collections.ICollection" />，从其中复制元素。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;col&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="col" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Collections.Stack.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; class that is empty and has the specified initial capacity or the default initial capacity, whichever is greater.">初始化 <see cref="T:System.Collections.Stack" /> 类的新实例，该实例为空并且具有指定的初始容量或默认初始容量（这两个容量中的较大者）。</summary>
      <param name="initialCapacity" vsli:raw="The initial number of elements that the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; can contain.">
        <see cref="T:System.Collections.Stack" /> 可包含的初始元素数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;initialCapacity&quot; /&gt; is less than zero.">
        <paramref name="initialCapacity" /> 小于零。</exception>
    </member>
    <member name="M:System.Collections.Stack.Clear">
      <summary vsli:raw="Removes all objects from the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">从 <see cref="T:System.Collections.Stack" /> 中移除所有对象。</summary>
    </member>
    <member name="M:System.Collections.Stack.Clone">
      <summary vsli:raw="Creates a shallow copy of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">创建 <see cref="T:System.Collections.Stack" /> 的浅表副本。</summary>
      <returns vsli:raw="A shallow copy of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">
        <see cref="T:System.Collections.Stack" /> 的浅表副本。</returns>
    </member>
    <member name="M:System.Collections.Stack.Contains(System.Object)">
      <summary vsli:raw="Determines whether an element is in the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">确定某元素是否在 <see cref="T:System.Collections.Stack" /> 中。</summary>
      <param name="obj" vsli:raw="The object to locate in the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;. The value can be &lt;see langword=&quot;null&quot; /&gt;.">要在 <see cref="T:System.Collections.Stack" /> 中定位的对象。 该值可以为 <see langword="null" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if &lt;paramref name=&quot;obj&quot; /&gt; is found in the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果在 <see cref="T:System.Collections.Stack" /> 中找到 <paramref name="obj" />，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Collections.Stack.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; to an existing one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt;, starting at the specified array index.">从指定的数组索引处开始，将 <see cref="T:System.Collections.Stack" /> 复制到现有的一维 <see cref="T:System.Array" /> 中。</summary>
      <param name="array" vsli:raw="The one-dimensional &lt;see cref=&quot;T:System.Array&quot; /&gt; that is the destination of the elements copied from &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;. The &lt;see cref=&quot;T:System.Array&quot; /&gt; must have zero-based indexing.">一维 <see cref="T:System.Array" />，它是从 <see cref="T:System.Collections.Stack" /> 复制的元素的目标。 <see cref="T:System.Array" /> 必须具有从零开始的索引。</param>
      <param name="index" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which copying begins.">
        <paramref name="array" /> 中从零开始的索引，从此处开始复制。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" /> 小于零。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in the source &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> 是多维的。  
  
- 或 - 
源 <see cref="T:System.Collections.Stack" /> 中的元素个数大于从 <paramref name="index" /> 到目标 <paramref name="array" /> 末尾之间的可用空间。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The type of the source &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">无法自动将源 <see cref="T:System.Collections.Stack" /> 的类型转换为目标 <paramref name="array" /> 的类型。</exception>
    </member>
    <member name="M:System.Collections.Stack.GetEnumerator">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">返回 <see cref="T:System.Collections.IEnumerator" /> 的 <see cref="T:System.Collections.Stack" />。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">
        <see cref="T:System.Collections.IEnumerator" /> 的一个 <see cref="T:System.Collections.Stack" />。</returns>
    </member>
    <member name="M:System.Collections.Stack.Peek">
      <summary vsli:raw="Returns the object at the top of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; without removing it.">返回位于 <see cref="T:System.Collections.Stack" /> 顶部的对象但不将其移除。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; is empty.">
        <see cref="T:System.Collections.Stack" /> 为空。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; at the top of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">位于 <see cref="T:System.Object" /> 顶部的 <see cref="T:System.Collections.Stack" />。</returns>
    </member>
    <member name="M:System.Collections.Stack.Pop">
      <summary vsli:raw="Removes and returns the object at the top of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">删除并返回 <see cref="T:System.Collections.Stack" /> 顶部的对象。</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; is empty.">
        <see cref="T:System.Collections.Stack" /> 为空。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; removed from the top of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">从 <see cref="T:System.Collections.Stack" /> 顶部删除的 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="M:System.Collections.Stack.Push(System.Object)">
      <summary vsli:raw="Inserts an object at the top of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">在 <see cref="T:System.Collections.Stack" /> 的顶部插入一个对象。</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to push onto the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;. The value can be &lt;see langword=&quot;null&quot; /&gt;.">要推入到 <see cref="T:System.Collections.Stack" /> 中的 <see cref="T:System.Object" />。 该值可以为 <see langword="null" />。</param>
    </member>
    <member name="M:System.Collections.Stack.Synchronized(System.Collections.Stack)">
      <summary vsli:raw="Returns a synchronized (thread safe) wrapper for the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">返回 <see cref="T:System.Collections.Stack" /> 的同步（线程安全）包装。</summary>
      <param name="stack" vsli:raw="The &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; to synchronize.">要同步的 <see cref="T:System.Collections.Stack" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;stack&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="stack" /> 为 <see langword="null" />。</exception>
      <returns vsli:raw="A synchronized wrapper around the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">
        <see cref="T:System.Collections.Stack" /> 周围的同步包装。</returns>
    </member>
    <member name="M:System.Collections.Stack.ToArray">
      <summary vsli:raw="Copies the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; to a new array.">将 <see cref="T:System.Collections.Stack" /> 复制到新数组中。</summary>
      <returns vsli:raw="A new array containing copies of the elements of the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">新数组，包含 <see cref="T:System.Collections.Stack" /> 的元素的副本。</returns>
    </member>
    <member name="P:System.Collections.Stack.Count">
      <summary vsli:raw="Gets the number of elements contained in the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">获取 <see cref="T:System.Collections.Stack" /> 中包含的元素数。</summary>
      <returns vsli:raw="The number of elements contained in the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">
        <see cref="T:System.Collections.Stack" /> 中包含的元素数。</returns>
    </member>
    <member name="P:System.Collections.Stack.IsSynchronized">
      <summary vsli:raw="Gets a value indicating whether access to the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; is synchronized (thread safe).">获取一个值，该值指示是否同步对 <see cref="T:System.Collections.Stack" /> 的访问（线程安全）。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if access to the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt; is synchronized (thread safe); otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果对 <see cref="T:System.Collections.Stack" /> 的访问是同步的（线程安全），则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Collections.Stack.SyncRoot">
      <summary vsli:raw="Gets an object that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">获取可用于同步对 <see cref="T:System.Collections.Stack" /> 的访问的对象。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that can be used to synchronize access to the &lt;see cref=&quot;T:System.Collections.Stack&quot; /&gt;.">一个可用于同步对 <see cref="T:System.Object" /> 的访问的 <see cref="T:System.Collections.Stack" />。</returns>
    </member>
  </members>
</doc>