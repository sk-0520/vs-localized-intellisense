<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.ComponentModel.Primitives</name>
  </assembly>
  <members>
    <member name="T:System.ComponentModel.BrowsableAttribute">
      <summary vsli:raw="Specifies whether a property or event should be displayed in a Properties window.">指定某一属性或事件是否应在“属性”窗口中显示。</summary>
    </member>
    <member name="F:System.ComponentModel.BrowsableAttribute.Default">
      <summary vsli:raw="Specifies the default value for the &lt;see cref=&quot;T:System.ComponentModel.BrowsableAttribute&quot; /&gt;, which is &lt;see cref=&quot;F:System.ComponentModel.BrowsableAttribute.Yes&quot; /&gt;. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">指定 <see cref="T:System.ComponentModel.BrowsableAttribute" /> 的默认值，即 <see cref="F:System.ComponentModel.BrowsableAttribute.Yes" />。 此 <see langword="static" /> 字段是只读的。</summary>
    </member>
    <member name="F:System.ComponentModel.BrowsableAttribute.No">
      <summary vsli:raw="Specifies that a property or event cannot be modified at design time. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">指定一个属性或事件在设计时不能修改。 此 <see langword="static" /> 字段是只读的。</summary>
    </member>
    <member name="F:System.ComponentModel.BrowsableAttribute.Yes">
      <summary vsli:raw="Specifies that a property or event can be modified at design time. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">指定一个属性或事件在设计时可以修改。 此 <see langword="static" /> 字段是只读的。</summary>
    </member>
    <member name="M:System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.BrowsableAttribute&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.BrowsableAttribute" /> 类的新实例。</summary>
      <param name="browsable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a property or event can be modified at design time; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">如果属性或事件可以在设计时修改，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</param>
    </member>
    <member name="M:System.ComponentModel.BrowsableAttribute.Equals(System.Object)">
      <summary vsli:raw="Indicates whether this instance and a specified object are equal.">指示此实例与指定对象是否相等。</summary>
      <param name="obj" vsli:raw="Another object to compare to.">要比较的另一个对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is equal to this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="true" /> 与此实例相等，则为 <paramref name="obj" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.BrowsableAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">返回此实例的哈希代码。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 位有符号整数哈希代码。</returns>
    </member>
    <member name="M:System.ComponentModel.BrowsableAttribute.IsDefaultAttribute">
      <summary vsli:raw="Determines if this attribute is the default.">确定此特性是否为默认特性。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is the default value for this attribute class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果此特性是此特性类的默认值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.BrowsableAttribute.Browsable">
      <summary vsli:raw="Gets a value indicating whether an object is browsable.">获取一个值，该值指示此对象是否可浏览。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is browsable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果对象可以浏览，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.ComponentModel.CategoryAttribute">
      <summary vsli:raw="Specifies the name of the category in which to group the property or event when displayed in a &lt;see cref=&quot;T:System.Windows.Forms.PropertyGrid&quot; /&gt; control set to Categorized mode.">指定当属性或事件显示在一个设置为“按分类顺序”模式的 <see cref="T:System.Windows.Forms.PropertyGrid" /> 控件中时，用于对属性或事件分组的类别的名称。</summary>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; class using the category name Default.">使用类别名称"Default"初始化 <see cref="T:System.ComponentModel.CategoryAttribute" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; class using the specified category name.">使用指定的类别名称初始化 <see cref="T:System.ComponentModel.CategoryAttribute" /> 类的新实例。</summary>
      <param name="category" vsli:raw="The name of the category.">类别的名称。</param>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.Equals(System.Object)">
      <summary vsli:raw="Returns whether the value of the given object is equal to the current &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt;.">返回给定对象的值是否等于当前的 <see cref="T:System.ComponentModel.CategoryAttribute" />。</summary>
      <param name="obj" vsli:raw="The object to test the value equality of.">要进行值的相等性测试的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the given object is equal to that of the current; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果给定对象的值等于当前对象的值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this attribute.">返回此属性 (Attribute) 的哈希代码。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 位有符号整数哈希代码。</returns>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.GetLocalizedString(System.String)">
      <summary vsli:raw="Looks up the localized name of the specified category.">查阅指定类别的本地化名称。</summary>
      <param name="value" vsli:raw="The identifer for the category to look up.">要查阅的类别的标识符。</param>
      <returns vsli:raw="The localized name of the category, or &lt;see langword=&quot;null&quot; /&gt; if a localized name does not exist.">类别的本地化名称；如果本地化名称不存在，则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.IsDefaultAttribute">
      <summary vsli:raw="Determines if this attribute is the default.">确定此特性是否为默认特性。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is the default value for this attribute class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果此特性是此特性类的默认值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Action">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the Action category.">获取表示"Action"类别的 <see cref="T:System.ComponentModel.CategoryAttribute" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the action category.">操作类别的 <see cref="T:System.ComponentModel.CategoryAttribute" />。</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Appearance">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the Appearance category.">获取表示"Appearance"类别的 <see cref="T:System.ComponentModel.CategoryAttribute" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the appearance category.">外观类别的 <see cref="T:System.ComponentModel.CategoryAttribute" />。</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Asynchronous">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the Asynchronous category.">获取表示"Asynchronous"类别的 <see cref="T:System.ComponentModel.CategoryAttribute" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the asynchronous category.">异步类别的 <see cref="T:System.ComponentModel.CategoryAttribute" />。</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Behavior">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the Behavior category.">获取表示"Behavior"类别的 <see cref="T:System.ComponentModel.CategoryAttribute" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the behavior category.">行为类别的 <see cref="T:System.ComponentModel.CategoryAttribute" />。</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Category">
      <summary vsli:raw="Gets the name of the category for the property or event that this attribute is applied to.">获取此属性 (Attribute) 应用于的属性 (Property) 或事件的类别名称。</summary>
      <returns vsli:raw="The name of the category for the property or event that this attribute is applied to.">此属性 (Attribute) 应用于的属性 (Property) 或事件的类别名称。</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Data">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the Data category.">获取表示"Data"类别的 <see cref="T:System.ComponentModel.CategoryAttribute" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the data category.">数据类别的 <see cref="T:System.ComponentModel.CategoryAttribute" />。</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Default">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the Default category.">获取表示"Default"类别的 <see cref="T:System.ComponentModel.CategoryAttribute" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the default category.">默认类别的 <see cref="T:System.ComponentModel.CategoryAttribute" />。</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Design">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the Design category.">获取表示"Design"类别的 <see cref="T:System.ComponentModel.CategoryAttribute" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the design category.">设计类别的 <see cref="T:System.ComponentModel.CategoryAttribute" />。</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.DragDrop">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the DragDrop category.">获取表示"DragDrop"类别的 <see cref="T:System.ComponentModel.CategoryAttribute" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the drag-and-drop category.">拖放类别的 <see cref="T:System.ComponentModel.CategoryAttribute" />。</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Focus">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the Focus category.">获取表示"Focus"类别的 <see cref="T:System.ComponentModel.CategoryAttribute" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the focus category.">焦点类别的 <see cref="T:System.ComponentModel.CategoryAttribute" />。</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Format">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the Format category.">获取表示"Format"类别的 <see cref="T:System.ComponentModel.CategoryAttribute" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the format category.">格式类别的 <see cref="T:System.ComponentModel.CategoryAttribute" />。</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Key">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the Key category.">获取表示"Key"类别的 <see cref="T:System.ComponentModel.CategoryAttribute" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the key category.">键类别的 <see cref="T:System.ComponentModel.CategoryAttribute" />。</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Layout">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the Layout category.">获取表示"Layout"类别的 <see cref="T:System.ComponentModel.CategoryAttribute" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the layout category.">布局类别的 <see cref="T:System.ComponentModel.CategoryAttribute" />。</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Mouse">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the Mouse category.">获取表示"Mouse"类别的 <see cref="T:System.ComponentModel.CategoryAttribute" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the mouse category.">鼠标类别的 <see cref="T:System.ComponentModel.CategoryAttribute" />。</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.WindowStyle">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; representing the WindowStyle category.">获取表示"WindowStyle"类别的 <see cref="T:System.ComponentModel.CategoryAttribute" />。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.CategoryAttribute&quot; /&gt; for the window style category.">窗口样式类别的 <see cref="T:System.ComponentModel.CategoryAttribute" />。</returns>
    </member>
    <member name="T:System.ComponentModel.Component">
      <summary vsli:raw="Provides the base implementation for the &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; interface and enables object sharing between applications.">提供 <see cref="T:System.ComponentModel.IComponent" /> 接口的基实现并启用应用程序之间的对象共享。</summary>
    </member>
    <member name="E:System.ComponentModel.Component.Disposed">
      <summary vsli:raw="Occurs when the component is disposed by a call to the &lt;see cref=&quot;M:System.ComponentModel.Component.Dispose&quot; /&gt; method.">在通过调用 <see cref="M:System.ComponentModel.Component.Dispose" /> 方法释放组件时发生。</summary>
    </member>
    <member name="M:System.ComponentModel.Component.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Component" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.Component.Dispose">
      <summary vsli:raw="Releases all resources used by the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;.">释放由 <see cref="T:System.ComponentModel.Component" /> 使用的所有资源。</summary>
    </member>
    <member name="M:System.ComponentModel.Component.Dispose(System.Boolean)">
      <summary vsli:raw="Releases the unmanaged resources used by the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; and optionally releases the managed resources.">释放由 <see cref="T:System.ComponentModel.Component" /> 占用的非托管资源，还可以另外再释放托管资源。</summary>
      <param name="disposing" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to release both managed and unmanaged resources; &lt;see langword=&quot;false&quot; /&gt; to release only unmanaged resources.">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.ComponentModel.Component.Finalize">
      <summary vsli:raw="Releases unmanaged resources and performs other cleanup operations before the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; is reclaimed by garbage collection.">在通过垃圾回收将 <see cref="T:System.ComponentModel.Component" /> 回收之前，释放非托管资源并执行其他清理操作。</summary>
    </member>
    <member name="M:System.ComponentModel.Component.GetService(System.Type)">
      <summary vsli:raw="Returns an object that represents a service provided by the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; or by its &lt;see cref=&quot;T:System.ComponentModel.Container&quot; /&gt;.">返回一个对象，该对象表示由 <see cref="T:System.ComponentModel.Component" /> 或它的 <see cref="T:System.ComponentModel.Container" /> 提供的服务。</summary>
      <param name="service" vsli:raw="A service provided by the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;.">由 <see cref="T:System.ComponentModel.Component" /> 提供的服务。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents a service provided by the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; does not provide the specified service.">表示由 <see cref="T:System.Object" /> 提供的服务的 <see cref="T:System.ComponentModel.Component" />，如果 <see cref="T:System.ComponentModel.Component" /> 不提供指定的服务，则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.ComponentModel.Component.ToString">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.String&quot; /&gt; containing the name of the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;, if any. This method should not be overridden.">返回包含 <see cref="T:System.ComponentModel.Component" /> 的名称的 <see cref="T:System.String" />（如果有）。 不应重写此方法。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the name of the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;, if any, or &lt;see langword=&quot;null&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; is unnamed.">包含 <see cref="T:System.ComponentModel.Component" /> 的名称的 <see cref="T:System.String" />（如果有）；如果 <see cref="T:System.ComponentModel.Component" /> 未命名，则为 <see langword="null" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Component.CanRaiseEvents">
      <summary vsli:raw="Gets a value indicating whether the component can raise an event.">获取一个指示组件是否可以引发事件的值。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component can raise events; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">如果组件可以引发事件，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Component.Container">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt; that contains the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;.">获取包含 <see cref="T:System.ComponentModel.IContainer" /> 的 <see cref="T:System.ComponentModel.Component" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt; that contains the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;, if any, or &lt;see langword=&quot;null&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; is not encapsulated in an &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt;.">包含 <see cref="T:System.ComponentModel.IContainer" /> 的 <see cref="T:System.ComponentModel.Component" />（如果有），如果 <see cref="T:System.ComponentModel.Component" /> 未封装在 <see cref="T:System.ComponentModel.IContainer" /> 中，则为 <see langword="null" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Component.DesignMode">
      <summary vsli:raw="Gets a value that indicates whether the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; is currently in design mode.">获取一个值，用以指示 <see cref="T:System.ComponentModel.Component" /> 当前是否处于设计模式。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; is in design mode; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.ComponentModel.Component" /> 处于设计模式，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.Component.Events">
      <summary vsli:raw="Gets the list of event handlers that are attached to this &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;.">获取附加到此 <see cref="T:System.ComponentModel.Component" /> 的事件处理程序的列表。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.EventHandlerList&quot; /&gt; that provides the delegates for this component.">一个 <see cref="T:System.ComponentModel.EventHandlerList" />，它提供此组件的委托。</returns>
    </member>
    <member name="P:System.ComponentModel.Component.Site">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; of the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;.">获取或设置 <see cref="T:System.ComponentModel.Component" /> 的 <see cref="T:System.ComponentModel.ISite" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; associated with the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; is not encapsulated in an &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt;, the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; does not have an &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; associated with it, or the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; is removed from its &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt;.">与 <see cref="T:System.ComponentModel.ISite" /> 关联的 <see cref="T:System.ComponentModel.Component" />；如果 <see cref="T:System.ComponentModel.Component" /> 未封装在 <see cref="T:System.ComponentModel.IContainer" /> 中，<see cref="T:System.ComponentModel.Component" /> 没有与其关联的 <see cref="T:System.ComponentModel.ISite" /> 或者 <see cref="T:System.ComponentModel.Component" /> 已从其 <see cref="T:System.ComponentModel.IContainer" /> 中移除，则为 <see langword="null" />。</returns>
    </member>
    <member name="T:System.ComponentModel.ComponentCollection">
      <summary vsli:raw="Provides a read-only container for a collection of &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects.">为 <see cref="T:System.ComponentModel.IComponent" /> 对象的集合提供只读容器。</summary>
    </member>
    <member name="M:System.ComponentModel.ComponentCollection.#ctor(System.ComponentModel.IComponent[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.ComponentCollection&quot; /&gt; class using the specified array of components.">使用指定的组件数组初始化 <see cref="T:System.ComponentModel.ComponentCollection" /> 类的新实例。</summary>
      <param name="components" vsli:raw="An array of &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects to initialize the collection with.">用来初始化集合的 <see cref="T:System.ComponentModel.IComponent" /> 对象数组。</param>
    </member>
    <member name="M:System.ComponentModel.ComponentCollection.CopyTo(System.ComponentModel.IComponent[],System.Int32)">
      <summary vsli:raw="Copies the entire collection to an array, starting writing at the specified array index.">将整个集合复制到数组中，从指定的数组索引处开始写入。</summary>
      <param name="array" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; array to copy the objects in the collection to.">要将集合中的对象复制到其中的 <see cref="T:System.ComponentModel.IComponent" /> 数组。</param>
      <param name="index" vsli:raw="The index of the &lt;paramref name=&quot;array&quot; /&gt; at which copying to should begin.">复制开始位置的 <paramref name="array" /> 索引。</param>
    </member>
    <member name="P:System.ComponentModel.ComponentCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; in the collection at the specified collection index.">获取集合中位于指定集合索引处的 <see cref="T:System.ComponentModel.Component" />。</summary>
      <param name="index" vsli:raw="The collection index of the &lt;see cref=&quot;T:System.ComponentModel.Component&quot; /&gt; to get.">要获取的 <see cref="T:System.ComponentModel.Component" /> 的集合索引。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="If the specified index is not within the index range of the collection.">如果指定的索引不在集合的索引范围内。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; at the specified index.">指定索引处的 <see cref="T:System.ComponentModel.IComponent" />。</returns>
    </member>
    <member name="P:System.ComponentModel.ComponentCollection.Item(System.String)">
      <summary vsli:raw="Gets any component in the collection matching the specified name.">获取集合中与指定的名称相匹配的任何组件。</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to get.">要获取的 <see cref="T:System.ComponentModel.IComponent" /> 的名称。</param>
      <returns vsli:raw="A component with a name matching the name specified by the &lt;paramref name=&quot;name&quot; /&gt; parameter, or &lt;see langword=&quot;null&quot; /&gt; if the named component cannot be found in the collection.">名称与 <paramref name="name" /> 参数所指定的名称相匹配的组件，如果无法在集合中找到指定的组件，则为 <see langword="null" />。</returns>
    </member>
    <member name="T:System.ComponentModel.DescriptionAttribute">
      <summary vsli:raw="Specifies a description for a property or event.">指定属性或事件的说明。</summary>
    </member>
    <member name="F:System.ComponentModel.DescriptionAttribute.Default">
      <summary vsli:raw="Specifies the default value for the &lt;see cref=&quot;T:System.ComponentModel.DescriptionAttribute&quot; /&gt;, which is an empty string (&quot;&quot;). This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">指定 <see cref="T:System.ComponentModel.DescriptionAttribute" /> 的默认值，即空字符串 ("")。 此 <see langword="static" /> 字段是只读的。</summary>
    </member>
    <member name="M:System.ComponentModel.DescriptionAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DescriptionAttribute&quot; /&gt; class with no parameters.">不带参数初始化 <see cref="T:System.ComponentModel.DescriptionAttribute" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.DescriptionAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DescriptionAttribute&quot; /&gt; class with a description.">初始化 <see cref="T:System.ComponentModel.DescriptionAttribute" /> 类的新实例并带有说明。</summary>
      <param name="description" vsli:raw="The description text.">说明文本。</param>
    </member>
    <member name="M:System.ComponentModel.DescriptionAttribute.Equals(System.Object)">
      <summary vsli:raw="Returns whether the value of the given object is equal to the current &lt;see cref=&quot;T:System.ComponentModel.DescriptionAttribute&quot; /&gt;.">返回给定对象的值是否等于当前的 <see cref="T:System.ComponentModel.DescriptionAttribute" />。</summary>
      <param name="obj" vsli:raw="The object to test the value equality of.">要进行值的相等性测试的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the given object is equal to that of the current; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果给定对象的值等于当前对象的值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.DescriptionAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">返回此实例的哈希代码。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 位有符号整数哈希代码。</returns>
    </member>
    <member name="M:System.ComponentModel.DescriptionAttribute.IsDefaultAttribute">
      <summary vsli:raw="Returns a value indicating whether this is the default &lt;see cref=&quot;T:System.ComponentModel.DescriptionAttribute&quot; /&gt; instance.">返回一个值，该值指示这是否为默认 <see cref="T:System.ComponentModel.DescriptionAttribute" /> 实例。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if this is the default &lt;see cref=&quot;T:System.ComponentModel.DescriptionAttribute&quot; /&gt; instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果这是默认 <see cref="T:System.ComponentModel.DescriptionAttribute" /> 实例，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.DescriptionAttribute.Description">
      <summary vsli:raw="Gets the description stored in this attribute.">获取存储在此属性 (Attribute) 中的说明。</summary>
      <returns vsli:raw="The description stored in this attribute.">存储在此属性 (Attribute) 中的说明。</returns>
    </member>
    <member name="P:System.ComponentModel.DescriptionAttribute.DescriptionValue">
      <summary vsli:raw="Gets or sets the string stored as the description.">获取或设置作为说明存储的字符串。</summary>
      <returns vsli:raw="The string stored as the description. The default value is an empty string (&quot;&quot;).">作为说明存储的字符串。 默认值为空字符串 ("")。</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute">
      <summary vsli:raw="Indicates a serializer for the serialization manager to use to serialize the values of the type this attribute is applied to. This class cannot be inherited.">指示某个序列化管理器的序列化程序，它将用于序列化此特性所应用到的类型的值。 此类不能被继承。</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute" /> 类的新实例。</summary>
      <param name="serializerTypeName" vsli:raw="The fully qualified name of the data type of the serializer.">序列化程序的数据类型的完全限定名。</param>
      <param name="baseSerializerTypeName" vsli:raw="The fully qualified name of the base data type of the serializer. Multiple serializers can be supplied for a class as long as the serializers have different base types.">序列化程序的基数据类型的完全限定名。 只要序列化程序具有不同的基类型，就可以为一个类提供多个序列化程序。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.#ctor(System.String,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute" /> 类的新实例。</summary>
      <param name="serializerTypeName" vsli:raw="The fully qualified name of the data type of the serializer.">序列化程序的数据类型的完全限定名。</param>
      <param name="baseSerializerType" vsli:raw="The base data type of the serializer. Multiple serializers can be supplied for a class as long as the serializers have different base types.">序列化程序的基数据类型。 只要序列化程序具有不同的基类型，就可以为一个类提供多个序列化程序。</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.#ctor(System.Type,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute" /> 类的新实例。</summary>
      <param name="serializerType" vsli:raw="The data type of the serializer.">序列化程序的数据类型。</param>
      <param name="baseSerializerType" vsli:raw="The base data type of the serializer. Multiple serializers can be supplied for a class as long as the serializers have different base types.">序列化程序的基数据类型。 只要序列化程序具有不同的基类型，就可以为一个类提供多个序列化程序。</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.SerializerBaseTypeName">
      <summary vsli:raw="Gets the fully qualified type name of the serializer base type.">获取序列化程序基类型的完全限定类型名。</summary>
      <returns vsli:raw="The fully qualified type name of the serializer base type.">序列化程序基类型的完全限定类型名。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.SerializerTypeName">
      <summary vsli:raw="Gets the fully qualified type name of the serializer.">获取序列化程序的完全限定类型名。</summary>
      <returns vsli:raw="The fully qualified type name of the serializer.">序列化程序的完全限定类型名。</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.TypeId">
      <summary vsli:raw="Indicates a unique ID for this attribute type.">指示此特性类型的唯一 ID。</summary>
      <returns vsli:raw="A unique ID for this attribute type.">此特性类型的唯一 ID。</returns>
    </member>
    <member name="T:System.ComponentModel.DesignerAttribute">
      <summary vsli:raw="Specifies the class used to implement design-time services for a component.">指定用于为组件实现设计时服务的类。</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DesignerAttribute&quot; /&gt; class using the name of the type that provides design-time services.">使用提供设计时服务的类型的名称初始化 <see cref="T:System.ComponentModel.DesignerAttribute" /> 类的新实例。</summary>
      <param name="designerTypeName" vsli:raw="The concatenation of the fully qualified name of the type that provides design-time services for the component this attribute is bound to, and the name of the assembly this type resides in.">将类型（该类型为此特性所绑定到的组件提供设计时服务）的完全限定名称和此类型所驻留的程序集的名称串联后得到的结果。</param>
    </member>
    <member name="M:System.ComponentModel.DesignerAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DesignerAttribute&quot; /&gt; class using the designer type and the base class for the designer.">使用设计器类型和设计器的基类初始化 <see cref="T:System.ComponentModel.DesignerAttribute" /> 类的新实例。</summary>
      <param name="designerTypeName" vsli:raw="The concatenation of the fully qualified name of the type that provides design-time services for the component this attribute is bound to, and the name of the assembly this type resides in.">将类型（该类型为此特性所绑定到的组件提供设计时服务）的完全限定名称和此类型所驻留的程序集的名称串联后得到的结果。</param>
      <param name="designerBaseTypeName" vsli:raw="The fully qualified name of the base class to associate with the designer class.">要与设计器类关联的基类的完全限定名。</param>
    </member>
    <member name="M:System.ComponentModel.DesignerAttribute.#ctor(System.String,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DesignerAttribute&quot; /&gt; class, using the name of the designer class and the base class for the designer.">使用设计器类的名称和设计器的基类初始化 <see cref="T:System.ComponentModel.DesignerAttribute" /> 类的新实例。</summary>
      <param name="designerTypeName" vsli:raw="The concatenation of the fully qualified name of the type that provides design-time services for the component this attribute is bound to, and the name of the assembly this type resides in.">将类型（该类型为此特性所绑定到的组件提供设计时服务）的完全限定名称和此类型所驻留的程序集的名称串联后得到的结果。</param>
      <param name="designerBaseType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the base class to associate with the &lt;paramref name=&quot;designerTypeName&quot; /&gt;.">
        <see cref="T:System.Type" />，表示要与 <paramref name="designerTypeName" /> 关联的基类。</param>
    </member>
    <member name="M:System.ComponentModel.DesignerAttribute.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DesignerAttribute&quot; /&gt; class using the type that provides design-time services.">使用提供设计时服务的类型初始化 <see cref="T:System.ComponentModel.DesignerAttribute" /> 类的新实例。</summary>
      <param name="designerType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the class that provides design-time services for the component this attribute is bound to.">
        <see cref="T:System.Type" />，表示为该特性所绑定到的组件提供设计时服务的类。</param>
    </member>
    <member name="M:System.ComponentModel.DesignerAttribute.#ctor(System.Type,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DesignerAttribute&quot; /&gt; class using the types of the designer and designer base class.">使用设计器类型和设计器基类的类型初始化 <see cref="T:System.ComponentModel.DesignerAttribute" /> 类的新实例。</summary>
      <param name="designerType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the class that provides design-time services for the component this attribute is bound to.">
        <see cref="T:System.Type" />，表示为该特性所绑定到的组件提供设计时服务的类。</param>
      <param name="designerBaseType" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the base class to associate with the &lt;paramref name=&quot;designerType&quot; /&gt;.">
        <see cref="T:System.Type" />，表示要与 <paramref name="designerType" /> 关联的基类。</param>
    </member>
    <member name="M:System.ComponentModel.DesignerAttribute.Equals(System.Object)">
      <summary vsli:raw="Returns whether the value of the given object is equal to the current &lt;see cref=&quot;T:System.ComponentModel.DesignerAttribute&quot; /&gt;.">返回给定对象的值是否等于当前的 <see cref="T:System.ComponentModel.DesignerAttribute" />。</summary>
      <param name="obj" vsli:raw="The object to test the value equality of.">要进行值的相等性测试的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the given object is equal to that of the current; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果给定对象的值等于当前对象的值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.DesignerAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">返回此实例的哈希代码。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 位有符号整数哈希代码。</returns>
    </member>
    <member name="P:System.ComponentModel.DesignerAttribute.DesignerBaseTypeName">
      <summary vsli:raw="Gets the name of the base type of this designer.">获取此设计器的基类型名。</summary>
      <returns vsli:raw="The name of the base type of this designer.">此设计器的基类型名。</returns>
    </member>
    <member name="P:System.ComponentModel.DesignerAttribute.DesignerTypeName">
      <summary vsli:raw="Gets the name of the designer type associated with this designer attribute.">获取与此设计器特性关联的设计器类型名。</summary>
      <returns vsli:raw="The name of the designer type associated with this designer attribute.">与此设计器特性关联的设计器类型名。</returns>
    </member>
    <member name="P:System.ComponentModel.DesignerAttribute.TypeId">
      <summary vsli:raw="Gets a unique ID for this attribute type.">获取此特性类型的唯一 ID。</summary>
      <returns vsli:raw="A unique ID for this attribute type.">此特性类型的唯一 ID。</returns>
    </member>
    <member name="T:System.ComponentModel.DesignerCategoryAttribute">
      <summary vsli:raw="Specifies that the designer for a class belongs to a certain category.">指定类设计器属于某一类别。</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerCategoryAttribute.Component">
      <summary vsli:raw="Specifies that a component marked with this category use a component designer. This field is read-only.">指定标记为此类别的组件使用组件设计器。 此字段为只读。</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerCategoryAttribute.Default">
      <summary vsli:raw="Specifies that a component marked with this category cannot use a visual designer. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">指定标记为此类别的组件不能使用可视化设计器。 此 <see langword="static" /> 字段是只读的。</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerCategoryAttribute.Form">
      <summary vsli:raw="Specifies that a component marked with this category use a form designer. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">指定标记为此类别的组件使用窗体设计器。 此 <see langword="static" /> 字段是只读的。</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerCategoryAttribute.Generic">
      <summary vsli:raw="Specifies that a component marked with this category use a generic designer. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">指定标记为此类别的组件使用一般设计器。 此 <see langword="static" /> 字段是只读的。</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerCategoryAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DesignerCategoryAttribute&quot; /&gt; class with an empty string (&quot;&quot;).">用空字符串 ("") 初始化 <see cref="T:System.ComponentModel.DesignerCategoryAttribute" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerCategoryAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DesignerCategoryAttribute&quot; /&gt; class with the given category name.">用给定的类别名称初始化 <see cref="T:System.ComponentModel.DesignerCategoryAttribute" /> 类的新实例。</summary>
      <param name="category" vsli:raw="The name of the category.">类别的名称。</param>
    </member>
    <member name="M:System.ComponentModel.DesignerCategoryAttribute.Equals(System.Object)">
      <summary vsli:raw="Returns whether the value of the given object is equal to the current &lt;see cref=&quot;T:System.ComponentModel.DesignOnlyAttribute&quot; /&gt;.">返回给定对象的值是否等于当前的 <see cref="T:System.ComponentModel.DesignOnlyAttribute" />。</summary>
      <param name="obj" vsli:raw="The object to test the value equality of.">要进行值的相等性测试的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the given object is equal to that of the current; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果给定对象的值等于当前对象的值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.DesignerCategoryAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">返回此实例的哈希代码。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 位有符号整数哈希代码。</returns>
    </member>
    <member name="M:System.ComponentModel.DesignerCategoryAttribute.IsDefaultAttribute">
      <summary vsli:raw="Determines if this attribute is the default.">确定此特性是否为默认特性。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is the default value for this attribute class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果此特性是此特性类的默认值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.DesignerCategoryAttribute.Category">
      <summary vsli:raw="Gets the name of the category.">获取类别名称。</summary>
      <returns vsli:raw="The name of the category.">类别的名称。</returns>
    </member>
    <member name="P:System.ComponentModel.DesignerCategoryAttribute.TypeId">
      <summary vsli:raw="Gets a unique identifier for this attribute.">获取此特性的唯一标识符。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that is a unique identifier for the attribute.">一个表示该属性的唯一标识符的 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="T:System.ComponentModel.DesignerSerializationVisibility">
      <summary vsli:raw="Specifies the visibility a property has to the design-time serializer.">指定属性对设计时序列化程序所具有的可见性。</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibility.Content">
      <summary vsli:raw="The code generator produces code for the contents of the object, rather than for the object itself.">代码生成器产生对象内容的代码，而不是对象本身的代码。</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibility.Hidden">
      <summary vsli:raw="The code generator does not produce code for the object.">代码生成器不生成对象的代码。</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibility.Visible">
      <summary vsli:raw="The code generator produces code for the object.">代码生成器生成对象的代码。</summary>
    </member>
    <member name="T:System.ComponentModel.DesignerSerializationVisibilityAttribute">
      <summary vsli:raw="Specifies the type of persistence to use when serializing a property on a component at design time.">指定在设计时序列化组件上的属性时所使用的持久性类型。</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Content">
      <summary vsli:raw="Specifies that a serializer should serialize the contents of the property, rather than the property itself. This field is read-only.">指定序列化程序应该序列化属性的内容，而不是属性本身。 此字段为只读。</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Default">
      <summary vsli:raw="Specifies the default value, which is &lt;see cref=&quot;F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visible&quot; /&gt;, that is, a visual designer uses default rules to generate the value of a property. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">指定默认值为 <see cref="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visible" />，也就是说，可视化设计器使用默认规则来生成属性值。 此 <see langword="static" /> 字段是只读的。</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Hidden">
      <summary vsli:raw="Specifies that a serializer should not serialize the value of the property. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">指定序列化程序不应该序列化属性的值。 此 <see langword="static" /> 字段是只读的。</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visible">
      <summary vsli:raw="Specifies that a serializer should be allowed to serialize the value of the property. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">指定应该允许序列化程序序列化属性的值。 此 <see langword="static" /> 字段是只读的。</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.#ctor(System.ComponentModel.DesignerSerializationVisibility)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DesignerSerializationVisibilityAttribute&quot; /&gt; class using the specified &lt;see cref=&quot;T:System.ComponentModel.DesignerSerializationVisibility&quot; /&gt; value.">使用指定的 <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> 值初始化 <see cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" /> 类的新实例。</summary>
      <param name="visibility" vsli:raw="One of the &lt;see cref=&quot;T:System.ComponentModel.DesignerSerializationVisibility&quot; /&gt; values.">
        <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> 值之一。</param>
    </member>
    <member name="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.Equals(System.Object)">
      <summary vsli:raw="Indicates whether this instance and a specified object are equal.">指示此实例与指定对象是否相等。</summary>
      <param name="obj" vsli:raw="Another object to compare to.">要比较的另一个对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is equal to this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="true" /> 与此实例相等，则为 <paramref name="obj" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this object.">返回此对象的哈希代码。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 位有符号整数哈希代码。</returns>
    </member>
    <member name="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.IsDefaultAttribute">
      <summary vsli:raw="Gets a value indicating whether the current value of the attribute is the default value for the attribute.">获取一个值，该值指示该特性的当前值是否为该特性的默认值。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is set to the default value; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果该特性设置为默认值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visibility">
      <summary vsli:raw="Gets a value indicating the basic serialization mode a serializer should use when determining whether and how to persist the value of a property.">获取一个值，该值指示序列化程序在确定是否以及如何保持某个属性的值时应使用的基本序列化模式。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.ComponentModel.DesignerSerializationVisibility&quot; /&gt; values. The default is &lt;see cref=&quot;F:System.ComponentModel.DesignerSerializationVisibility.Visible&quot; /&gt;.">
        <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> 值之一。 默认值为 <see cref="F:System.ComponentModel.DesignerSerializationVisibility.Visible" />。</returns>
    </member>
    <member name="T:System.ComponentModel.DesignOnlyAttribute">
      <summary vsli:raw="Specifies whether a property can only be set at design time.">指定某个属性是否只能在设计时设置。</summary>
    </member>
    <member name="F:System.ComponentModel.DesignOnlyAttribute.Default">
      <summary vsli:raw="Specifies the default value for the &lt;see cref=&quot;T:System.ComponentModel.DesignOnlyAttribute&quot; /&gt;, which is &lt;see cref=&quot;F:System.ComponentModel.DesignOnlyAttribute.No&quot; /&gt;. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">指定 <see cref="T:System.ComponentModel.DesignOnlyAttribute" /> 的默认值，即 <see cref="F:System.ComponentModel.DesignOnlyAttribute.No" />。 此 <see langword="static" /> 字段是只读的。</summary>
    </member>
    <member name="F:System.ComponentModel.DesignOnlyAttribute.No">
      <summary vsli:raw="Specifies that a property can be set at design time or at run time. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">指定某个属性可在设计时或运行时设置。 此 <see langword="static" /> 字段是只读的。</summary>
    </member>
    <member name="F:System.ComponentModel.DesignOnlyAttribute.Yes">
      <summary vsli:raw="Specifies that a property can be set only at design time. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">指定某个属性只能在设计时设置。 此 <see langword="static" /> 字段是只读的。</summary>
    </member>
    <member name="M:System.ComponentModel.DesignOnlyAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DesignOnlyAttribute&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.DesignOnlyAttribute" /> 类的新实例。</summary>
      <param name="isDesignOnly" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a property can be set only at design time; &lt;see langword=&quot;false&quot; /&gt; if the property can be set at design time and at run time.">如果属性只能在设计时设置，则为 <see langword="true" />；如果属性可在设计时和运行时设置，则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.ComponentModel.DesignOnlyAttribute.Equals(System.Object)">
      <summary vsli:raw="Returns whether the value of the given object is equal to the current &lt;see cref=&quot;T:System.ComponentModel.DesignOnlyAttribute&quot; /&gt;.">返回给定对象的值是否等于当前的 <see cref="T:System.ComponentModel.DesignOnlyAttribute" />。</summary>
      <param name="obj" vsli:raw="The object to test the value equality of.">要进行值的相等性测试的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the given object is equal to that of the current; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果给定对象的值等于当前对象的值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.DesignOnlyAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">返回此实例的哈希代码。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 位有符号整数哈希代码。</returns>
    </member>
    <member name="M:System.ComponentModel.DesignOnlyAttribute.IsDefaultAttribute">
      <summary vsli:raw="Determines if this attribute is the default.">确定此特性是否为默认特性。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is the default value for this attribute class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果此特性是此特性类的默认值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.DesignOnlyAttribute.IsDesignOnly">
      <summary vsli:raw="Gets a value indicating whether a property can be set only at design time.">获取一个值，该值指示属性是否只能在设计时设置。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a property can be set only at design time; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果属性只能在设计时设置，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.ComponentModel.DisplayNameAttribute">
      <summary vsli:raw="Specifies the display name for a property, event, or public void method which takes no arguments.">指定属性、事件或不采用任何参数的公共 void 方法的显示名称。</summary>
    </member>
    <member name="F:System.ComponentModel.DisplayNameAttribute.Default">
      <summary vsli:raw="Specifies the default value for the &lt;see cref=&quot;T:System.ComponentModel.DisplayNameAttribute&quot; /&gt;. This field is read-only.">指定 <see cref="T:System.ComponentModel.DisplayNameAttribute" /> 的默认值。 此字段为只读。</summary>
    </member>
    <member name="M:System.ComponentModel.DisplayNameAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DisplayNameAttribute&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.DisplayNameAttribute" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.DisplayNameAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DisplayNameAttribute&quot; /&gt; class using the display name.">使用显示名称初始化 <see cref="T:System.ComponentModel.DisplayNameAttribute" /> 类的新实例。</summary>
      <param name="displayName" vsli:raw="The display name.">显示名称。</param>
    </member>
    <member name="M:System.ComponentModel.DisplayNameAttribute.Equals(System.Object)">
      <summary vsli:raw="Determines whether two &lt;see cref=&quot;T:System.ComponentModel.DisplayNameAttribute&quot; /&gt; instances are equal.">确定两个 <see cref="T:System.ComponentModel.DisplayNameAttribute" /> 实例是否相等。</summary>
      <param name="obj" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.DisplayNameAttribute&quot; /&gt; to test the value equality of.">要进行值的相等性测试的 <see cref="T:System.ComponentModel.DisplayNameAttribute" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the given object is equal to that of the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果给定对象的值等于当前对象的值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.DisplayNameAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">返回此实例的哈希代码。</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.ComponentModel.DisplayNameAttribute&quot; /&gt;.">当前 <see cref="T:System.ComponentModel.DisplayNameAttribute" /> 的哈希代码。</returns>
    </member>
    <member name="M:System.ComponentModel.DisplayNameAttribute.IsDefaultAttribute">
      <summary vsli:raw="Determines if this attribute is the default.">确定此特性是否为默认特性。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is the default value for this attribute class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果此特性是此特性类的默认值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.DisplayNameAttribute.DisplayName">
      <summary vsli:raw="Gets the display name for a property, event, or public void method that takes no arguments stored in this attribute.">获取属性、事件或不采用此特性中存储的任何参数的公共 void 方法的显示名称。</summary>
      <returns vsli:raw="The display name.">显示名称。</returns>
    </member>
    <member name="P:System.ComponentModel.DisplayNameAttribute.DisplayNameValue">
      <summary vsli:raw="Gets or sets the display name.">获取或设置显示名称。</summary>
      <returns vsli:raw="The display name.">显示名称。</returns>
    </member>
    <member name="T:System.ComponentModel.EditorAttribute">
      <summary vsli:raw="Specifies the editor to use to change a property. This class cannot be inherited.">指定用于更改属性的编辑器。 此类不能被继承。</summary>
    </member>
    <member name="M:System.ComponentModel.EditorAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.EditorAttribute&quot; /&gt; class with the default editor, which is no editor.">用默认的编辑器（即不使用任何编辑器）初始化 <see cref="T:System.ComponentModel.EditorAttribute" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.EditorAttribute&quot; /&gt; class with the type name and base type name of the editor.">用编辑器的类型名称和基类型名称初始化 <see cref="T:System.ComponentModel.EditorAttribute" /> 类的新实例。</summary>
      <param name="typeName" vsli:raw="The fully qualified type name of the editor.">编辑器的完全限定的类型名。</param>
      <param name="baseTypeName" vsli:raw="The fully qualified type name of the base class or interface to use as a lookup key for the editor. This class must be or derive from &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditor&quot; /&gt;.">用作编辑器查找键的基类或接口的完全限定类型名。 此类必须是 <see cref="T:System.Drawing.Design.UITypeEditor" /> 或是从它派生的。</param>
    </member>
    <member name="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.EditorAttribute&quot; /&gt; class with the type name and the base type.">用类型名和基类型来初始化 <see cref="T:System.ComponentModel.EditorAttribute" /> 类的新实例。</summary>
      <param name="typeName" vsli:raw="The fully qualified type name of the editor.">编辑器的完全限定的类型名。</param>
      <param name="baseType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the base class or interface to use as a lookup key for the editor. This class must be or derive from &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditor&quot; /&gt;.">用作编辑器查找键的基类或接口的 <see cref="T:System.Type" />。 此类必须是 <see cref="T:System.Drawing.Design.UITypeEditor" /> 或是从它派生的。</param>
    </member>
    <member name="M:System.ComponentModel.EditorAttribute.#ctor(System.Type,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.EditorAttribute&quot; /&gt; class with the type and the base type.">用类型和基类型初始化 <see cref="T:System.ComponentModel.EditorAttribute" /> 类的新实例。</summary>
      <param name="type" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the type of the editor.">一个表示编辑器类型的 <see cref="T:System.Type" />。</param>
      <param name="baseType" vsli:raw="The &lt;see cref=&quot;T:System.Type&quot; /&gt; of the base class or interface to use as a lookup key for the editor. This class must be or derive from &lt;see cref=&quot;T:System.Drawing.Design.UITypeEditor&quot; /&gt;.">用作编辑器查找键的基类或接口的 <see cref="T:System.Type" />。 此类必须是 <see cref="T:System.Drawing.Design.UITypeEditor" /> 或是从它派生的。</param>
    </member>
    <member name="M:System.ComponentModel.EditorAttribute.Equals(System.Object)">
      <summary vsli:raw="Returns whether the value of the given object is equal to the current &lt;see cref=&quot;T:System.ComponentModel.EditorAttribute&quot; /&gt;.">返回给定对象的值是否等于当前的 <see cref="T:System.ComponentModel.EditorAttribute" />。</summary>
      <param name="obj" vsli:raw="The object to test the value equality of.">要进行值的相等性测试的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the given object is equal to that of the current object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果给定对象的值等于当前对象的值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.EditorAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">返回此实例的哈希代码。</summary>
      <returns vsli:raw="A 32-bit signed integer hash code.">32 位有符号整数哈希代码。</returns>
    </member>
    <member name="P:System.ComponentModel.EditorAttribute.EditorBaseTypeName">
      <summary vsli:raw="Gets the name of the base class or interface serving as a lookup key for this editor.">获取作为此编辑器查找键的基类或接口的名称。</summary>
      <returns vsli:raw="The name of the base class or interface serving as a lookup key for this editor.">作为此编辑器查找键的基类或接口的名称。</returns>
    </member>
    <member name="P:System.ComponentModel.EditorAttribute.EditorTypeName">
      <summary vsli:raw="Gets the name of the editor class in the &lt;see cref=&quot;P:System.Type.AssemblyQualifiedName&quot; /&gt; format.">获取 <see cref="P:System.Type.AssemblyQualifiedName" /> 格式的编辑器类的名称。</summary>
      <returns vsli:raw="The name of the editor class in the &lt;see cref=&quot;P:System.Type.AssemblyQualifiedName&quot; /&gt; format.">
        <see cref="P:System.Type.AssemblyQualifiedName" /> 格式的编辑器类的名称。</returns>
    </member>
    <member name="P:System.ComponentModel.EditorAttribute.TypeId">
      <summary vsli:raw="Gets a unique ID for this attribute type.">获取此特性类型的唯一 ID。</summary>
      <returns vsli:raw="A unique ID for this attribute type.">此特性类型的唯一 ID。</returns>
    </member>
    <member name="T:System.ComponentModel.EventHandlerList">
      <summary vsli:raw="Provides a simple list of delegates. This class cannot be inherited.">提供一个简单的委托列表。 此类不能被继承。</summary>
    </member>
    <member name="M:System.ComponentModel.EventHandlerList.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.EventHandlerList&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.EventHandlerList" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.EventHandlerList.AddHandler(System.Object,System.Delegate)">
      <summary vsli:raw="Adds a delegate to the list.">将委托添加到列表。</summary>
      <param name="key" vsli:raw="The object that owns the event.">拥有该事件的对象。</param>
      <param name="value" vsli:raw="The delegate to add to the list.">要添加到列表的委托。</param>
    </member>
    <member name="M:System.ComponentModel.EventHandlerList.AddHandlers(System.ComponentModel.EventHandlerList)">
      <summary vsli:raw="Adds a list of delegates to the current list.">向当前列表添加委托的列表。</summary>
      <param name="listToAddFrom" vsli:raw="The list to add.">要添加的列表。</param>
    </member>
    <member name="M:System.ComponentModel.EventHandlerList.Dispose">
      <summary vsli:raw="Disposes the delegate list.">处置委托列表。</summary>
    </member>
    <member name="M:System.ComponentModel.EventHandlerList.RemoveHandler(System.Object,System.Delegate)">
      <summary vsli:raw="Removes a delegate from the list.">从列表中将委托移除。</summary>
      <param name="key" vsli:raw="The object that owns the event.">拥有该事件的对象。</param>
      <param name="value" vsli:raw="The delegate to remove from the list.">要从列表中移除的委托。</param>
    </member>
    <member name="P:System.ComponentModel.EventHandlerList.Item(System.Object)">
      <summary vsli:raw="Gets or sets the delegate for the specified object.">获取或设置指定对象的委托。</summary>
      <param name="key" vsli:raw="An object to find in the list.">要在列表中查找的对象。</param>
      <returns vsli:raw="The delegate for the specified key, or &lt;see langword=&quot;null&quot; /&gt; if a delegate does not exist.">指定键的委托；如果委托不存在，则为 <see langword="null" />。</returns>
    </member>
    <member name="T:System.ComponentModel.IComponent">
      <summary vsli:raw="Provides functionality required by all components.">提供全部组件所需的功能。</summary>
    </member>
    <member name="E:System.ComponentModel.IComponent.Disposed">
      <summary vsli:raw="Represents the method that handles the &lt;see cref=&quot;E:System.ComponentModel.IComponent.Disposed&quot; /&gt; event of a component.">表示处理组件的 <see cref="E:System.ComponentModel.IComponent.Disposed" /> 事件的方法。</summary>
    </member>
    <member name="P:System.ComponentModel.IComponent.Site">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; associated with the &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt;.">获取或设置与 <see cref="T:System.ComponentModel.ISite" /> 关联的 <see cref="T:System.ComponentModel.IComponent" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; object associated with the component; or &lt;see langword=&quot;null&quot; /&gt;, if the component does not have a site.">与组件关联的 <see cref="T:System.ComponentModel.ISite" /> 对象；或者在组件不具有站点的情况下为 <see langword="null" />。</returns>
    </member>
    <member name="T:System.ComponentModel.IContainer">
      <summary vsli:raw="Provides functionality for containers. Containers are objects that logically contain zero or more components.">提供容器的功能。 容器是在逻辑上包含零个或多个组件的对象。</summary>
    </member>
    <member name="M:System.ComponentModel.IContainer.Add(System.ComponentModel.IComponent)">
      <summary vsli:raw="Adds the specified &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to the &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt; at the end of the list.">将指定的 <see cref="T:System.ComponentModel.IComponent" /> 添加至列表结尾的 <see cref="T:System.ComponentModel.IContainer" />。</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to add.">要添加的 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="M:System.ComponentModel.IContainer.Add(System.ComponentModel.IComponent,System.String)">
      <summary vsli:raw="Adds the specified &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to the &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt; at the end of the list, and assigns a name to the component.">将指定的 <see cref="T:System.ComponentModel.IComponent" /> 添加至列表结尾的 <see cref="T:System.ComponentModel.IContainer" />，并给该组件分配一个名称。</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to add.">要添加的 <see cref="T:System.ComponentModel.IComponent" />。</param>
      <param name="name" vsli:raw="The unique, case-insensitive name to assign to the component.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;see langword=&quot;null&quot; /&gt; that leaves the component unnamed.">要给该组件分配的唯一的、区分大小写的名称。  
  
- 或 - 
 <see langword="null" />，它使组件保持未命名状态。</param>
    </member>
    <member name="M:System.ComponentModel.IContainer.Remove(System.ComponentModel.IComponent)">
      <summary vsli:raw="Removes a component from the &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt;.">从 <see cref="T:System.ComponentModel.IContainer" /> 中移除组件。</summary>
      <param name="component" vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; to remove.">要移除的 <see cref="T:System.ComponentModel.IComponent" />。</param>
    </member>
    <member name="P:System.ComponentModel.IContainer.Components">
      <summary vsli:raw="Gets all the components in the &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt;.">获取 <see cref="T:System.ComponentModel.IContainer" /> 中的所有组件。</summary>
      <returns vsli:raw="A collection of &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; objects that represents all the components in the &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt;.">
        <see cref="T:System.ComponentModel.IComponent" /> 对象的集合，它表示 <see cref="T:System.ComponentModel.IContainer" /> 中的所有组件。</returns>
    </member>
    <member name="T:System.ComponentModel.ImmutableObjectAttribute">
      <summary vsli:raw="Specifies that an object has no subproperties capable of being edited. This class cannot be inherited.">指定对象没有可以被编辑的子属性。 此类不能被继承。</summary>
    </member>
    <member name="F:System.ComponentModel.ImmutableObjectAttribute.Default">
      <summary vsli:raw="Represents the default value for &lt;see cref=&quot;T:System.ComponentModel.ImmutableObjectAttribute&quot; /&gt;.">表示 <see cref="T:System.ComponentModel.ImmutableObjectAttribute" /> 的默认值。</summary>
    </member>
    <member name="F:System.ComponentModel.ImmutableObjectAttribute.No">
      <summary vsli:raw="Specifies that an object has at least one editable subproperty. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">指定对象至少有一个可编辑的子属性。 此 <see langword="static" /> 字段是只读的。</summary>
    </member>
    <member name="F:System.ComponentModel.ImmutableObjectAttribute.Yes">
      <summary vsli:raw="Specifies that an object has no subproperties that can be edited. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">指定对象没有可编辑的子属性。 此 <see langword="static" /> 字段是只读的。</summary>
    </member>
    <member name="M:System.ComponentModel.ImmutableObjectAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.ImmutableObjectAttribute&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.ImmutableObjectAttribute" /> 类的新实例。</summary>
      <param name="immutable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is immutable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果该对象不可变，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.ComponentModel.ImmutableObjectAttribute.Equals(System.Object)">
      <summary vsli:raw="Returns a value that indicates whether this instance is equal to a specified object.">返回一个值，该值指示此实例是否与指定的对象相等。</summary>
      <param name="obj" vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare with this instance or a null reference (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">要与此实例或 null 引用 （Visual Basic 中的 <see langword="Nothing" />）进行比较的 <see cref="T:System.Object" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; equals the type and value of this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="true" /> 等于此实例的类型和值，则为 <paramref name="obj" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.ImmutableObjectAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">返回此实例的哈希代码。</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.ComponentModel.ImmutableObjectAttribute&quot; /&gt;.">当前 <see cref="T:System.ComponentModel.ImmutableObjectAttribute" /> 的哈希代码。</returns>
    </member>
    <member name="M:System.ComponentModel.ImmutableObjectAttribute.IsDefaultAttribute">
      <summary vsli:raw="Indicates whether the value of this instance is the default value.">指示此实例的值是否为默认值。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this instance is the default attribute for the class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果此实例是该类的默认属性，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.ImmutableObjectAttribute.Immutable">
      <summary vsli:raw="Gets whether the object is immutable.">获取该对象是否是不变的。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is immutable; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果该对象不可变，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.ComponentModel.InitializationEventAttribute">
      <summary vsli:raw="Specifies which event is raised on initialization. This class cannot be inherited.">指定在初始化时引发的事件。 此类不能被继承。</summary>
    </member>
    <member name="M:System.ComponentModel.InitializationEventAttribute.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.InitializationEventAttribute&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.InitializationEventAttribute" /> 类的新实例。</summary>
      <param name="eventName" vsli:raw="The name of the initialization event.">初始化事件的名称。</param>
    </member>
    <member name="P:System.ComponentModel.InitializationEventAttribute.EventName">
      <summary vsli:raw="Gets the name of the initialization event.">获取初始化事件的名称。</summary>
      <returns vsli:raw="The name of the initialization event.">初始化事件的名称。</returns>
    </member>
    <member name="T:System.ComponentModel.InvalidAsynchronousStateException">
      <summary vsli:raw="Thrown when a thread on which an operation should execute no longer exists or has no message loop.">当应执行某个操作的线程不再存在或者没有消息循环时，将引发此异常。</summary>
    </member>
    <member name="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.InvalidAsynchronousStateException&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.InvalidAsynchronousStateException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.InvalidAsynchronousStateException&quot; /&gt; class with the given &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt;.">使用给定的 <see cref="T:System.ComponentModel.InvalidAsynchronousStateException" /> 和 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 初始化 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 类的新实例。</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to be used for deserialization.">要用于反序列化的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context" vsli:raw="The destination to be used for deserialization.">用于反序列化的目标。</param>
    </member>
    <member name="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.InvalidAsynchronousStateException&quot; /&gt; class with the specified detailed description.">使用指定的详细说明初始化 <see cref="T:System.ComponentModel.InvalidAsynchronousStateException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="A detailed description of the error.">该错误的详细说明。</param>
    </member>
    <member name="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.InvalidAsynchronousStateException&quot; /&gt; class with the specified detailed description and the specified exception.">使用指定的详细说明和指定的异常初始化 <see cref="T:System.ComponentModel.InvalidAsynchronousStateException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="A detailed description of the error.">该错误的详细说明。</param>
      <param name="innerException" vsli:raw="A reference to the inner exception that is the cause of this exception.">对导致此异常的内部异常的引用。</param>
    </member>
    <member name="T:System.ComponentModel.InvalidEnumArgumentException">
      <summary vsli:raw="The exception that is thrown when an invalid enumeration value is used.">使用无效参数（为枚举数）时引发的异常。</summary>
    </member>
    <member name="M:System.ComponentModel.InvalidEnumArgumentException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.InvalidEnumArgumentException&quot; /&gt; class without a message.">在不带消息的情况下初始化 <see cref="T:System.ComponentModel.InvalidEnumArgumentException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.ComponentModel.InvalidEnumArgumentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.InvalidEnumArgumentException&quot; /&gt; class using the specified serialization data and context.">使用指定的序列化数据和上下文初始化 <see cref="T:System.ComponentModel.InvalidEnumArgumentException" /> 类的新实例。</summary>
      <param name="info" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to be used for deserialization.">要用于反序列化的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context" vsli:raw="The destination to be used for deserialization.">用于反序列化的目标。</param>
    </member>
    <member name="M:System.ComponentModel.InvalidEnumArgumentException.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.InvalidEnumArgumentException&quot; /&gt; class with the specified message.">使用指定的消息初始化 <see cref="T:System.ComponentModel.InvalidEnumArgumentException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="The message to display with this exception.">与此异常一起显示的消息。</param>
    </member>
    <member name="M:System.ComponentModel.InvalidEnumArgumentException.#ctor(System.String,System.Exception)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.InvalidEnumArgumentException&quot; /&gt; class with the specified detailed description and the specified exception.">使用指定的详细说明和指定的异常初始化 <see cref="T:System.ComponentModel.InvalidEnumArgumentException" /> 类的新实例。</summary>
      <param name="message" vsli:raw="A detailed description of the error.">该错误的详细说明。</param>
      <param name="innerException" vsli:raw="A reference to the inner exception that is the cause of this exception.">对导致此异常的内部异常的引用。</param>
    </member>
    <member name="M:System.ComponentModel.InvalidEnumArgumentException.#ctor(System.String,System.Int32,System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.InvalidEnumArgumentException&quot; /&gt; class with a message generated from the argument, the invalid value, and an enumeration class.">初始化 <see cref="T:System.ComponentModel.InvalidEnumArgumentException" /> 类的新实例，带有从参数、无效值和枚举类生成的消息。</summary>
      <param name="argumentName" vsli:raw="The name of the argument that caused the exception.">导致异常的参数的名称。</param>
      <param name="invalidValue" vsli:raw="The value of the argument that failed.">失败的参数的值。</param>
      <param name="enumClass" vsli:raw="A &lt;see cref=&quot;T:System.Type&quot; /&gt; that represents the enumeration class with the valid values.">
        <see cref="T:System.Type" />，表示具有有效值的枚举类。</param>
    </member>
    <member name="T:System.ComponentModel.ISite">
      <summary vsli:raw="Provides functionality required by sites.">提供站点所需的功能。</summary>
    </member>
    <member name="P:System.ComponentModel.ISite.Component">
      <summary vsli:raw="Gets the component associated with the &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; when implemented by a class.">当由类实现时，获取与 <see cref="T:System.ComponentModel.ISite" /> 关联的组件。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IComponent&quot; /&gt; instance associated with the &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt;.">与 <see cref="T:System.ComponentModel.IComponent" /> 关联的 <see cref="T:System.ComponentModel.ISite" /> 实例。</returns>
    </member>
    <member name="P:System.ComponentModel.ISite.Container">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt; associated with the &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; when implemented by a class.">当由类实现时，获取与 <see cref="T:System.ComponentModel.IContainer" /> 关联的 <see cref="T:System.ComponentModel.ISite" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.ComponentModel.IContainer&quot; /&gt; instance associated with the &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt;.">与 <see cref="T:System.ComponentModel.IContainer" /> 关联的 <see cref="T:System.ComponentModel.ISite" /> 实例。</returns>
    </member>
    <member name="P:System.ComponentModel.ISite.DesignMode">
      <summary vsli:raw="Determines whether the component is in design mode when implemented by a class.">确定组件在由类实现时是否处于设计模式。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the component is in design mode; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果组件处于设计模式，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.ISite.Name">
      <summary vsli:raw="Gets or sets the name of the component associated with the &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt; when implemented by a class.">当由类实现时，获取或设置与 <see cref="T:System.ComponentModel.ISite" /> 关联的组件的名称。</summary>
      <returns vsli:raw="The name of the component associated with the &lt;see cref=&quot;T:System.ComponentModel.ISite&quot; /&gt;; or &lt;see langword=&quot;null&quot; /&gt;, if no name is assigned to the component.">与 <see cref="T:System.ComponentModel.ISite" /> 关联的组件的名称，或者在未给该组件分配名称的情况下为 <see langword="null" />。</returns>
    </member>
    <member name="T:System.ComponentModel.ISupportInitialize">
      <summary vsli:raw="Specifies that this object supports a simple, transacted notification for batch initialization.">指定该对象支持对批初始化的简单的事务处理通知。</summary>
    </member>
    <member name="M:System.ComponentModel.ISupportInitialize.BeginInit">
      <summary vsli:raw="Signals the object that initialization is starting.">用信号通知对象初始化即将开始。</summary>
    </member>
    <member name="M:System.ComponentModel.ISupportInitialize.EndInit">
      <summary vsli:raw="Signals the object that initialization is complete.">用信号通知对象初始化已完成。</summary>
    </member>
    <member name="T:System.ComponentModel.ISynchronizeInvoke">
      <summary vsli:raw="Provides a way to synchronously or asynchronously execute a delegate.">提供同步或异步执行委托的方法。</summary>
    </member>
    <member name="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])">
      <summary vsli:raw="Asynchronously executes the delegate on the thread that created this object.">在创建了此对象的线程上异步执行委托。</summary>
      <param name="method" vsli:raw="A &lt;see cref=&quot;T:System.Delegate&quot; /&gt; to a method that takes parameters of the same number and type that are contained in &lt;paramref name=&quot;args&quot; /&gt;.">对方法的 <see cref="T:System.Delegate" />，采用 <paramref name="args" /> 中包含的相同数字和类型的参数。</param>
      <param name="args" vsli:raw="An array of type &lt;see cref=&quot;T:System.Object&quot; /&gt; to pass as arguments to the given method. This can be &lt;see langword=&quot;null&quot; /&gt; if no arguments are needed.">作为给定方法的参数传递的 <see cref="T:System.Object" /> 类型数组。 如果不需要参数，则可以为 <see langword="null" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; interface that represents the asynchronous operation started by calling this method.">
        <see cref="T:System.IAsyncResult" /> 接口，表示通过调用此方法启动的异步操作。</returns>
    </member>
    <member name="M:System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)">
      <summary vsli:raw="Waits until the process started by calling &lt;see cref=&quot;M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])&quot; /&gt; completes, and then returns the value generated by the process.">等待通过调用 <see cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" /> 启动的进程完成，然后返回该进程生成的值。</summary>
      <param name="result" vsli:raw="An &lt;see cref=&quot;T:System.IAsyncResult&quot; /&gt; interface that represents the asynchronous operation started by calling &lt;see cref=&quot;M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])&quot; /&gt;.">
        <see cref="T:System.IAsyncResult" /> 接口，表示通过调用 <see cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" /> 启动的异步操作。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the return value generated by the asynchronous operation.">表示异步操作生成的返回值的 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])">
      <summary vsli:raw="Synchronously executes the delegate on the thread that created this object and marshals the call to the creating thread.">在创建了此对象的线程上同步执行委托并封送对创建线程的调用。</summary>
      <param name="method" vsli:raw="A &lt;see cref=&quot;T:System.Delegate&quot; /&gt; that contains a method to call, in the context of the thread for the control.">包含要调用的方法的 <see cref="T:System.Delegate" />，在控件的线程上下文中。</param>
      <param name="args" vsli:raw="An array of type &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the arguments to pass to the given method. This can be &lt;see langword=&quot;null&quot; /&gt; if no arguments are needed.">表示要传递到给定方法的参数的 <see cref="T:System.Object" /> 类型数组。 如果不需要参数，则可以为 <see langword="null" />。</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; that represents the return value from the delegate being invoked, or &lt;see langword=&quot;null&quot; /&gt; if the delegate has no return value.">表示正被调用的委托返回值的 <see cref="T:System.Object" />；如果该委托没有返回值，则为 <see langword="null" />。</returns>
    </member>
    <member name="P:System.ComponentModel.ISynchronizeInvoke.InvokeRequired">
      <summary vsli:raw="Gets a value indicating whether the caller must call &lt;see cref=&quot;M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])&quot; /&gt; when calling an object that implements this interface.">获取一个值，通过该值指示当调用实现此接口的对象时，调用方是否必须调用 <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" />。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the caller must call &lt;see cref=&quot;M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果调用方必须调用 <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" />，则为 <see langword="true" />；否则，为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.ComponentModel.LocalizableAttribute">
      <summary vsli:raw="Specifies whether a property or parameter should be localized. This class cannot be inherited.">指定是否应本地化某一属性。 此类不能被继承。</summary>
    </member>
    <member name="F:System.ComponentModel.LocalizableAttribute.Default">
      <summary vsli:raw="Specifies the default value, which is &lt;see cref=&quot;F:System.ComponentModel.LocalizableAttribute.No&quot; /&gt;. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">指定默认值，即 <see cref="F:System.ComponentModel.LocalizableAttribute.No" />。 此 <see langword="static" /> 字段是只读的。</summary>
    </member>
    <member name="F:System.ComponentModel.LocalizableAttribute.No">
      <summary vsli:raw="Specifies that a property should not be localized. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">指定属性不应本地化。 此 <see langword="static" /> 字段是只读的。</summary>
    </member>
    <member name="F:System.ComponentModel.LocalizableAttribute.Yes">
      <summary vsli:raw="Specifies that a property should be localized. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">指定属性应本地化。 此 <see langword="static" /> 字段是只读的。</summary>
    </member>
    <member name="M:System.ComponentModel.LocalizableAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.LocalizableAttribute&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.LocalizableAttribute" /> 类的新实例。</summary>
      <param name="isLocalizable" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a property should be localized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果属性应本地化，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.ComponentModel.LocalizableAttribute.Equals(System.Object)">
      <summary vsli:raw="Returns whether the value of the given object is equal to the current &lt;see cref=&quot;T:System.ComponentModel.LocalizableAttribute&quot; /&gt;.">返回给定对象的值是否等于当前的 <see cref="T:System.ComponentModel.LocalizableAttribute" />。</summary>
      <param name="obj" vsli:raw="The object to test the value equality of.">要进行值的相等性测试的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the value of the given object is equal to that of the current; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果给定对象的值等于当前对象的值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.LocalizableAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">返回此实例的哈希代码。</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.ComponentModel.LocalizableAttribute&quot; /&gt;.">当前 <see cref="T:System.ComponentModel.LocalizableAttribute" /> 的哈希代码。</returns>
    </member>
    <member name="M:System.ComponentModel.LocalizableAttribute.IsDefaultAttribute">
      <summary vsli:raw="Determines if this attribute is the default.">确定此特性是否为默认特性。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is the default value for this attribute class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果此特性是此特性类的默认值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.LocalizableAttribute.IsLocalizable">
      <summary vsli:raw="Gets a value indicating whether a property should be localized.">获取一个值，该值指示属性是否应本地化。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if a property should be localized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果属性应本地化，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.ComponentModel.MergablePropertyAttribute">
      <summary vsli:raw="Specifies that this property can be combined with properties belonging to other objects in a Properties window.">指定该属性能与“属性”窗口中属于其他对象的属性组合。</summary>
    </member>
    <member name="F:System.ComponentModel.MergablePropertyAttribute.Default">
      <summary vsli:raw="Specifies the default value, which is &lt;see cref=&quot;F:System.ComponentModel.MergablePropertyAttribute.Yes&quot; /&gt;, that is a property can be combined with properties belonging to other objects in a Properties window. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">指定默认值 <see cref="F:System.ComponentModel.MergablePropertyAttribute.Yes" />，它可以与“属性”窗口中属于其他对象的属性组合。 此 <see langword="static" /> 字段是只读的。</summary>
    </member>
    <member name="F:System.ComponentModel.MergablePropertyAttribute.No">
      <summary vsli:raw="Specifies that a property cannot be combined with properties belonging to other objects in a Properties window. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">指定属性不能与“属性”窗口中属于其他对象的属性组合。 此 <see langword="static" /> 字段是只读的。</summary>
    </member>
    <member name="F:System.ComponentModel.MergablePropertyAttribute.Yes">
      <summary vsli:raw="Specifies that a property can be combined with properties belonging to other objects in a Properties window. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">指定属性能与“属性”窗口中属于其他对象的属性组合。 此 <see langword="static" /> 字段是只读的。</summary>
    </member>
    <member name="M:System.ComponentModel.MergablePropertyAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.MergablePropertyAttribute&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.MergablePropertyAttribute" /> 类的新实例。</summary>
      <param name="allowMerge" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this property can be combined with properties belonging to other objects in a Properties window; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果该属性可以与“属性”窗口中属于其他对象的属性进行组合，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.ComponentModel.MergablePropertyAttribute.Equals(System.Object)">
      <summary vsli:raw="Indicates whether this instance and a specified object are equal.">指示此实例与指定对象是否相等。</summary>
      <param name="obj" vsli:raw="Another object to compare to.">要比较的另一个对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;obj&quot; /&gt; is equal to this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="true" /> 与此实例相等，则为 <paramref name="obj" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.MergablePropertyAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">返回此实例的哈希代码。</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.ComponentModel.MergablePropertyAttribute&quot; /&gt;.">当前 <see cref="T:System.ComponentModel.MergablePropertyAttribute" /> 的哈希代码。</returns>
    </member>
    <member name="M:System.ComponentModel.MergablePropertyAttribute.IsDefaultAttribute">
      <summary vsli:raw="Determines if this attribute is the default.">确定此特性是否为默认特性。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is the default value for this attribute class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果此特性是此特性类的默认值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.MergablePropertyAttribute.AllowMerge">
      <summary vsli:raw="Gets a value indicating whether this property can be combined with properties belonging to other objects in a Properties window.">获取一个值，该值指示该属性能否与“属性”窗口属于其他对象的属性组合。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this property can be combined with properties belonging to other objects in a Properties window; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果该属性可以与“属性”窗口中属于其他对象的属性进行组合，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.ComponentModel.NotifyParentPropertyAttribute">
      <summary vsli:raw="Indicates that the parent property is notified when the value of the property that this attribute is applied to is modified. This class cannot be inherited.">指示当此特性应用到的属性的值被修改时，通知父属性。 此类不能被继承。</summary>
    </member>
    <member name="F:System.ComponentModel.NotifyParentPropertyAttribute.Default">
      <summary vsli:raw="Indicates the default attribute state, that the property should not notify the parent property of changes to its value. This field is read-only.">指示默认的特性状态，即属性不向父属性通知其值的更改。 此字段为只读。</summary>
    </member>
    <member name="F:System.ComponentModel.NotifyParentPropertyAttribute.No">
      <summary vsli:raw="Indicates that the parent property is not be notified of changes to the value of the property. This field is read-only.">指示不通知父属性有关属性值的更改。 此字段为只读。</summary>
    </member>
    <member name="F:System.ComponentModel.NotifyParentPropertyAttribute.Yes">
      <summary vsli:raw="Indicates that the parent property is notified of changes to the value of the property. This field is read-only.">指示通知父属性有关属性值的更改。 此字段为只读。</summary>
    </member>
    <member name="M:System.ComponentModel.NotifyParentPropertyAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.NotifyParentPropertyAttribute&quot; /&gt; class, using the specified value to determine whether the parent property is notified of changes to the value of the property.">初始化 <see cref="T:System.ComponentModel.NotifyParentPropertyAttribute" /> 类的新实例，使用指定的值确定是否通知父属性有关属性值的更改。</summary>
      <param name="notifyParent" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the parent should be notified of changes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果应该向父属性通知更改，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.ComponentModel.NotifyParentPropertyAttribute.Equals(System.Object)">
      <summary vsli:raw="Gets a value indicating whether the specified object is the same as the current object.">获取一个值，该值指示指定对象是否与当前对象相同。</summary>
      <param name="obj" vsli:raw="The object to test for equality.">要测试相等的对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the object is the same as this object; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定对象与当前对象相同，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.NotifyParentPropertyAttribute.GetHashCode">
      <summary vsli:raw="Gets the hash code for this object.">获取此对象的哈希代码。</summary>
      <returns vsli:raw="The hash code for the object the attribute belongs to.">该特性所属对象的哈希代码。</returns>
    </member>
    <member name="M:System.ComponentModel.NotifyParentPropertyAttribute.IsDefaultAttribute">
      <summary vsli:raw="Gets a value indicating whether the current value of the attribute is the default value for the attribute.">获取一个值，该值指示该特性的当前值是否为该特性的默认值。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current value of the attribute is the default value of the attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果特性的当前值为该特性的默认值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.NotifyParentPropertyAttribute.NotifyParent">
      <summary vsli:raw="Gets or sets a value indicating whether the parent property should be notified of changes to the value of the property.">获取或设置一个值，该值指示是否应该通知父属性有关属性值的更改。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the parent property should be notified of changes; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果应该向父属性通知更改，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.ComponentModel.ParenthesizePropertyNameAttribute">
      <summary vsli:raw="Indicates whether the name of the associated property is displayed with parentheses in the Properties window. This class cannot be inherited.">指示关联属性的名称在“属性”窗口中显示时是否带有括号。 此类不能被继承。</summary>
    </member>
    <member name="F:System.ComponentModel.ParenthesizePropertyNameAttribute.Default">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.ParenthesizePropertyNameAttribute&quot; /&gt; class with a default value that indicates that the associated property should not be shown with parentheses. This field is read-only.">用默认值（该值指示关联的属性显示时不应带有括号）初始化 <see cref="T:System.ComponentModel.ParenthesizePropertyNameAttribute" /> 类的新实例。 此字段为只读。</summary>
    </member>
    <member name="M:System.ComponentModel.ParenthesizePropertyNameAttribute.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.ParenthesizePropertyNameAttribute&quot; /&gt; class that indicates that the associated property should not be shown with parentheses.">初始化 <see cref="T:System.ComponentModel.ParenthesizePropertyNameAttribute" /> 类的新实例，该实例指示关联属性显示时不应带括号。</summary>
    </member>
    <member name="M:System.ComponentModel.ParenthesizePropertyNameAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.ParenthesizePropertyNameAttribute&quot; /&gt; class, using the specified value to indicate whether the attribute is displayed with parentheses.">通过使用指定值来指示该特性显示时是否带有括号，初始化 <see cref="T:System.ComponentModel.ParenthesizePropertyNameAttribute" /> 类的新实例。</summary>
      <param name="needParenthesis" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the name should be enclosed in parentheses; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果名称应括在括号中，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.ComponentModel.ParenthesizePropertyNameAttribute.Equals(System.Object)">
      <summary vsli:raw="Compares the specified object to this object and tests for equality.">将指定的对象与此对象进行比较并测试是否相等。</summary>
      <param name="obj" vsli:raw="" />
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.ParenthesizePropertyNameAttribute.GetHashCode">
      <summary vsli:raw="Gets the hash code for this object.">获取此对象的哈希代码。</summary>
      <returns vsli:raw="The hash code for the object the attribute belongs to.">该特性所属对象的哈希代码。</returns>
    </member>
    <member name="M:System.ComponentModel.ParenthesizePropertyNameAttribute.IsDefaultAttribute">
      <summary vsli:raw="Gets a value indicating whether the current value of the attribute is the default value for the attribute.">获取一个值，该值指示该特性的当前值是否为该特性的默认值。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current value of the attribute is the default value of the attribute; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果特性的当前值为该特性的默认值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.ParenthesizePropertyNameAttribute.NeedParenthesis">
      <summary vsli:raw="Gets a value indicating whether the Properties window displays the name of the property in parentheses in the Properties window.">获取一个值，该值指示在“属性”窗口中显示属性的名称时是否带有括号。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property is displayed with parentheses; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果属性显示时带有括号，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.ComponentModel.ReadOnlyAttribute">
      <summary vsli:raw="Specifies whether the property this attribute is bound to is read-only or read/write. This class cannot be inherited.">指定该特性所绑定到的属性是只读属性还是读/写属性。 此类不能被继承。</summary>
    </member>
    <member name="F:System.ComponentModel.ReadOnlyAttribute.Default">
      <summary vsli:raw="Specifies the default value for the &lt;see cref=&quot;T:System.ComponentModel.ReadOnlyAttribute&quot; /&gt;, which is &lt;see cref=&quot;F:System.ComponentModel.ReadOnlyAttribute.No&quot; /&gt; (that is, the property this attribute is bound to is read/write). This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">指定 <see cref="T:System.ComponentModel.ReadOnlyAttribute" /> 的默认值，为 <see cref="F:System.ComponentModel.ReadOnlyAttribute.No" />（即此特性绑定到的属性是可读/写的）。 此 <see langword="static" /> 字段是只读的。</summary>
    </member>
    <member name="F:System.ComponentModel.ReadOnlyAttribute.No">
      <summary vsli:raw="Specifies that the property this attribute is bound to is read/write and can be modified. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">指定该特性绑定到的属性为读/写属性，可以修改。 此 <see langword="static" /> 字段是只读的。</summary>
    </member>
    <member name="F:System.ComponentModel.ReadOnlyAttribute.Yes">
      <summary vsli:raw="Specifies that the property this attribute is bound to is read-only and cannot be modified in the server explorer. This &lt;see langword=&quot;static&quot; /&gt; field is read-only.">指定此特性绑定到的属性为只读，并且不能在服务器资源管理器中修改。 此 <see langword="static" /> 字段是只读的。</summary>
    </member>
    <member name="M:System.ComponentModel.ReadOnlyAttribute.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.ReadOnlyAttribute&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.ReadOnlyAttribute" /> 类的新实例。</summary>
      <param name="isReadOnly" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to show that the property this attribute is bound to is read-only; &lt;see langword=&quot;false&quot; /&gt; to show that the property is read/write.">如果该特性所绑定到的属性为只读属性，则为 <see langword="true" />；如果该属性为读/写属性，则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.ComponentModel.ReadOnlyAttribute.Equals(System.Object)">
      <summary vsli:raw="Indicates whether this instance and a specified object are equal.">指示此实例与指定对象是否相等。</summary>
      <param name="value" vsli:raw="Another object to compare to.">要比较的另一个对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;value&quot; /&gt; is equal to this instance; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <see langword="true" /> 与此实例相等，则为 <paramref name="value" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.ReadOnlyAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this instance.">返回此实例的哈希代码。</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.ComponentModel.ReadOnlyAttribute&quot; /&gt;.">当前 <see cref="T:System.ComponentModel.ReadOnlyAttribute" /> 的哈希代码。</returns>
    </member>
    <member name="M:System.ComponentModel.ReadOnlyAttribute.IsDefaultAttribute">
      <summary vsli:raw="Determines if this attribute is the default.">确定此特性是否为默认特性。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the attribute is the default value for this attribute class; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果此特性是此特性类的默认值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.ReadOnlyAttribute.IsReadOnly">
      <summary vsli:raw="Gets a value indicating whether the property this attribute is bound to is read-only.">获取一个值，该值指示该特性绑定到的属性是否为只读属性。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the property this attribute is bound to is read-only; &lt;see langword=&quot;false&quot; /&gt; if the property is read/write.">如果该特性所绑定到的属性为只读属性，则为 <see langword="true" />；如果该属性为读/写属性，则为 <see langword="false" />。</returns>
    </member>
    <member name="T:System.ComponentModel.RefreshProperties">
      <summary vsli:raw="Defines identifiers that indicate the type of a refresh of the Properties window.">定义指示“属性”窗口刷新类型的标识符。</summary>
    </member>
    <member name="F:System.ComponentModel.RefreshProperties.All">
      <summary vsli:raw="The properties should be requeried and the view should be refreshed.">应该重新查询该属性并刷新视图。</summary>
    </member>
    <member name="F:System.ComponentModel.RefreshProperties.None">
      <summary vsli:raw="No refresh is necessary.">不需要进行刷新。</summary>
    </member>
    <member name="F:System.ComponentModel.RefreshProperties.Repaint">
      <summary vsli:raw="The view should be refreshed.">应该刷新该视图。</summary>
    </member>
    <member name="T:System.ComponentModel.RefreshPropertiesAttribute">
      <summary vsli:raw="Indicates that the property grid should refresh when the associated property value changes. This class cannot be inherited.">指示关联的属性值更改时应刷新属性网格。 此类不能被继承。</summary>
    </member>
    <member name="F:System.ComponentModel.RefreshPropertiesAttribute.All">
      <summary vsli:raw="Indicates that all properties are queried again and refreshed if the property value is changed. This field is read-only.">指示在属性值更改时重新查询并刷新所有属性。 此字段为只读。</summary>
    </member>
    <member name="F:System.ComponentModel.RefreshPropertiesAttribute.Default">
      <summary vsli:raw="Indicates that no other properties are refreshed if the property value is changed. This field is read-only.">指示在该属性值更改时不刷新其他任何属性。 此字段为只读。</summary>
    </member>
    <member name="F:System.ComponentModel.RefreshPropertiesAttribute.Repaint">
      <summary vsli:raw="Indicates that all properties are repainted if the property value is changed. This field is read-only.">指示在属性值更改时重新绘制所有属性。 此字段为只读。</summary>
    </member>
    <member name="M:System.ComponentModel.RefreshPropertiesAttribute.#ctor(System.ComponentModel.RefreshProperties)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.RefreshPropertiesAttribute&quot; /&gt; class.">初始化 <see cref="T:System.ComponentModel.RefreshPropertiesAttribute" /> 类的新实例。</summary>
      <param name="refresh" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.RefreshProperties&quot; /&gt; value indicating the nature of the refresh.">一个 <see cref="T:System.ComponentModel.RefreshProperties" /> 值，它指示刷新的性质。</param>
    </member>
    <member name="M:System.ComponentModel.RefreshPropertiesAttribute.Equals(System.Object)">
      <summary vsli:raw="Overrides the object's &lt;see cref=&quot;Overload:System.Object.Equals&quot; /&gt; method.">重写对象的 <see cref="Overload:System.Object.Equals" /> 方法。</summary>
      <param name="obj" vsli:raw="" />
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified object is the same; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的对象相同，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.ComponentModel.RefreshPropertiesAttribute.GetHashCode">
      <summary vsli:raw="Returns the hash code for this object.">返回此对象的哈希代码。</summary>
      <returns vsli:raw="The hash code for the object that the attribute belongs to.">该特性所属的对象的哈希代码。</returns>
    </member>
    <member name="M:System.ComponentModel.RefreshPropertiesAttribute.IsDefaultAttribute">
      <summary vsli:raw="Gets a value indicating whether the current value of the attribute is the default value for the attribute.">获取一个值，该值指示该特性的当前值是否为该特性的默认值。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the current value of the attribute is the default; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果该特性的当前值是默认值，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.ComponentModel.RefreshPropertiesAttribute.RefreshProperties">
      <summary vsli:raw="Gets the refresh properties for the member.">获取成员的刷新属性。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.RefreshProperties&quot; /&gt; that indicates the current refresh properties for the member.">一个 <see cref="T:System.ComponentModel.RefreshProperties" />，指示成员的当前刷新属性。</returns>
    </member>
  </members>
</doc>