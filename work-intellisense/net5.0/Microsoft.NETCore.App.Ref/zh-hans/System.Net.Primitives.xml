<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Net.Primitives</name>
  </assembly>
  <members>
    <member name="T:System.Net.AuthenticationSchemes">
      <summary vsli:raw="Specifies protocols for authentication.">指定身份验证的协议。</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.Anonymous">
      <summary vsli:raw="Specifies anonymous authentication.">指定匿名身份验证。</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.Basic">
      <summary vsli:raw="Specifies basic authentication.">指定基本身份验证。</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.Digest">
      <summary vsli:raw="Specifies digest authentication.">指定摘要式身份验证。</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.IntegratedWindowsAuthentication">
      <summary vsli:raw="Specifies Windows authentication.">指定 Windows 身份验证。</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.Negotiate">
      <summary vsli:raw="Negotiates with the client to determine the authentication scheme. If both client and server support Kerberos, it is used; otherwise, NTLM is used.">和客户端协商以确定身份验证方案。 如果客户端和服务器均支持 Kerberos，则使用 Kerberos；否则使用 NTLM。</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.None">
      <summary vsli:raw="No authentication is allowed. A client requesting an &lt;see cref=&quot;T:System.Net.HttpListener&quot; /&gt; object with this flag set will always receive a 403 Forbidden status. Use this flag when a resource should never be served to a client.">不允许进行任何身份验证。 设置了此标志并请求 <see cref="T:System.Net.HttpListener" /> 对象的客户端将始终会接收 403 Forbidden 状态。 当资源决不应该用于客户端时，请使用此标志。</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.Ntlm">
      <summary vsli:raw="Specifies NTLM authentication.">指定 NTLM 身份验证。</summary>
    </member>
    <member name="T:System.Net.Cache.RequestCacheLevel">
      <summary vsli:raw="Specifies caching behavior for resources obtained using &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; and its derived classes.">为使用 <see cref="T:System.Net.WebRequest" /> 及其派生类获取的资源指定缓存行为。</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.BypassCache">
      <summary vsli:raw="Satisfies a request by using the server. No entries are taken from caches, added to caches, or removed from caches between the client and server. This is the default cache behavior specified in the machine configuration file that ships with the .NET Framework.">使用服务器满足请求。 在客户端和服务器之间没有项从缓存中取出、添加到缓存中或从缓存中移除。 这是 .NET Framework 附带的计算机配置文件中指定的默认缓存行为。</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.CacheIfAvailable">
      <summary vsli:raw="Satisfies a request for a resource from the cache, if the resource is available; otherwise, sends a request for a resource to the server. If the requested item is available in any cache between the client and the server, the request might be satisfied by the intermediate cache.">如果资源可用，则从缓存满足资源请求；否则，将资源请求发送到服务器。 如果请求的项在客户端和服务器之间的任何缓存中可用，则可由中间缓存满足请求。</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.CacheOnly">
      <summary vsli:raw="Satisfies a request using the locally cached resource; does not send a request for an item that is not in the cache. When this cache policy level is specified, a &lt;see cref=&quot;T:System.Net.WebException&quot; /&gt; exception is thrown if the item is not in the client cache.">使用本地缓存资源满足请求；不发送对不在缓存中的项的请求。 当指定此缓存策略级别时，如果项不在客户端缓存中，则引发 <see cref="T:System.Net.WebException" /> 异常。</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.Default">
      <summary vsli:raw="Satisfies a request for a resource either by using the cached copy of the resource or by sending a request for the resource to the server. The action taken is determined by the current cache policy and the age of the content in the cache. This is the cache level that should be used by most applications.">通过使用资源的缓存副本或通过将资源请求发送到服务器来满足资源请求。 采取的操作取决于当前的缓存策略和缓存内容的生存期。 这是大多数应用程序应使用的缓存级别。</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.NoCacheNoStore">
      <summary vsli:raw="Never satisfies a request by using resources from the cache and does not cache resources. If the resource is present in the local cache, it is removed. This policy level indicates to intermediate caches that they should remove the resource. In the HTTP caching protocol, this is achieved using the &lt;see langword=&quot;no-cache&quot; /&gt; cache control directive.">从不通过使用缓存中的资源来满足请求，也不缓存资源。 如果资源在本地缓存中，则会移除该资源。 此策略级别指示中间缓存应移除资源。 在 HTTP 缓存协议中，这是通过 <see langword="no-cache" /> 缓存控制指令实现的。</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.Reload">
      <summary vsli:raw="Satisfies a request by using the server. The response might be saved in the cache. In the HTTP caching protocol, this is achieved using the &lt;see langword=&quot;no-cache&quot; /&gt; cache control directive and the no-cache &lt;see langword=&quot;Pragma&quot; /&gt; header.">使用服务器满足请求。 响应可能保存在缓存中。 在 HTTP 缓存协议中，这是通过 <see langword="no-cache" /> 缓存控制指令和 no-cache <see langword="Pragma" /> 标头实现的。</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.Revalidate">
      <summary vsli:raw="Satisfies a request by using the cached copy of the resource if the timestamp is the same as the timestamp of the resource on the server; otherwise, the resource is downloaded from the server, presented to the caller, and stored in the cache.">如果时间戳与服务器上的资源的时间戳相同，则使用资源的缓存副本满足请求；否则从服务器下载资源，将资源展示给调用方，然后再存储在缓存中。</summary>
    </member>
    <member name="T:System.Net.Cache.RequestCachePolicy">
      <summary vsli:raw="Defines an application's caching requirements for resources obtained by using &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; objects.">为通过使用 <see cref="T:System.Net.WebRequest" /> 对象获取的资源定义应用程序的缓存要求。</summary>
    </member>
    <member name="M:System.Net.Cache.RequestCachePolicy.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Cache.RequestCachePolicy&quot; /&gt; class.">初始化 <see cref="T:System.Net.Cache.RequestCachePolicy" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Net.Cache.RequestCachePolicy.#ctor(System.Net.Cache.RequestCacheLevel)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Cache.RequestCachePolicy&quot; /&gt; class. using the specified cache policy.">初始化 <see cref="T:System.Net.Cache.RequestCachePolicy" /> 类的新实例。 使用指定的缓存策略。</summary>
      <param name="level" vsli:raw="A &lt;see cref=&quot;T:System.Net.Cache.RequestCacheLevel&quot; /&gt; that specifies the cache behavior for resources obtained using &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; objects.">一个 <see cref="T:System.Net.Cache.RequestCacheLevel" />，它为使用 <see cref="T:System.Net.WebRequest" /> 对象获取的资源指定缓存行为。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="level is not a valid &lt;see cref=&quot;T:System.Net.Cache.RequestCacheLevel&quot; /&gt;.value.">级别不是有效的 <see cref="T:System.Net.Cache.RequestCacheLevel" /> 值。</exception>
    </member>
    <member name="M:System.Net.Cache.RequestCachePolicy.ToString">
      <summary vsli:raw="Returns a string representation of this instance.">返回此实例的字符串表示形式。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; containing the &lt;see cref=&quot;P:System.Net.Cache.RequestCachePolicy.Level&quot; /&gt; for this instance.">一个 <see cref="T:System.String" />，其中包含此实例的 <see cref="P:System.Net.Cache.RequestCachePolicy.Level" />。</returns>
    </member>
    <member name="P:System.Net.Cache.RequestCachePolicy.Level">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Net.Cache.RequestCacheLevel&quot; /&gt; value specified when this instance was constructed.">获取构造此实例时指定的 <see cref="T:System.Net.Cache.RequestCacheLevel" /> 值。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Cache.RequestCacheLevel&quot; /&gt; value that specifies the cache behavior for resources obtained using &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; objects.">一个 <see cref="T:System.Net.Cache.RequestCacheLevel" /> 值，它为使用 <see cref="T:System.Net.WebRequest" /> 对象获取的资源指定缓存行为。</returns>
    </member>
    <member name="T:System.Net.Cookie">
      <summary vsli:raw="Provides a set of properties and methods that are used to manage cookies. This class cannot be inherited.">提供一组用于管理 Cookie 的属性和方法。 此类不能被继承。</summary>
    </member>
    <member name="M:System.Net.Cookie.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; class.">初始化 <see cref="T:System.Net.Cookie" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Net.Cookie.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; class with a specified &lt;see cref=&quot;P:System.Net.Cookie.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Net.Cookie.Value&quot; /&gt;.">使用指定的 <see cref="T:System.Net.Cookie" /> 和 <see cref="P:System.Net.Cookie.Name" /> 初始化 <see cref="P:System.Net.Cookie.Value" /> 类的新实例。</summary>
      <param name="name" vsli:raw="The name of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;. The following characters must not be used inside &lt;paramref name=&quot;name&quot; /&gt;: equal sign, semicolon, comma, newline (\n), return (\r), tab (\t), and space character. The dollar sign character (&quot;$&quot;) cannot be the first character.">
        <see cref="T:System.Net.Cookie" /> 的名称。 不能在 <paramref name="name" /> 中使用下列字符：等号、分号、逗号、换行符 (\n)、回车符 (\r)、制表符 (\t) 和空格字符。 货币符号 ($) 不能作为第一个字符。</param>
      <param name="value" vsli:raw="The value of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;. The following characters must not be used inside &lt;paramref name=&quot;value&quot; /&gt;: semicolon, comma.">
        <see cref="T:System.Net.Cookie" /> 的值。 下列字符不得用在 <paramref name="value" /> 中：分号、逗号。</param>
      <exception cref="T:System.Net.CookieException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;name&quot; /&gt; parameter is of zero length.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;name&quot; /&gt; parameter contains an invalid character.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt; .  &#xA;  &#xA; -or -  &#xA;  &#xA; The &lt;paramref name=&quot;value&quot; /&gt; parameter contains a string not enclosed in quotes that contains an invalid character.">
        <paramref name="name" /> 参数为 <see langword="null" />。  
  
- 或 - 
<paramref name="name" /> 参数的长度为零。  
  
- 或 - 
<paramref name="name" /> 参数包含无效字符。  
  
- 或 - 
<paramref name="value" /> 参数为 <see langword="null" />。  
  
- 或 - 
<paramref name="value" /> 参数包含一个未使用引号引起来的字符串，且该字符串中包含无效字符。</exception>
    </member>
    <member name="M:System.Net.Cookie.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; class with a specified &lt;see cref=&quot;P:System.Net.Cookie.Name&quot; /&gt;, &lt;see cref=&quot;P:System.Net.Cookie.Value&quot; /&gt;, and &lt;see cref=&quot;P:System.Net.Cookie.Path&quot; /&gt;.">使用指定的 <see cref="P:System.Net.Cookie.Name" />、<see cref="P:System.Net.Cookie.Value" /> 和 <see cref="P:System.Net.Cookie.Path" /> 初始化 <see cref="T:System.Net.Cookie" /> 类的新实例。</summary>
      <param name="name" vsli:raw="The name of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;. The following characters must not be used inside &lt;paramref name=&quot;name&quot; /&gt;: equal sign, semicolon, comma, newline (\n), return (\r), tab (\t), and space character. The dollar sign character (&quot;$&quot;) cannot be the first character.">
        <see cref="T:System.Net.Cookie" /> 的名称。 不能在 <paramref name="name" /> 中使用下列字符：等号、分号、逗号、换行符 (\n)、回车符 (\r)、制表符 (\t) 和空格字符。 货币符号 ($) 不能作为第一个字符。</param>
      <param name="value" vsli:raw="The value of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;. The following characters must not be used inside &lt;paramref name=&quot;value&quot; /&gt;: semicolon, comma.">
        <see cref="T:System.Net.Cookie" /> 的值。 下列字符不得用在 <paramref name="value" /> 中：分号、逗号。</param>
      <param name="path" vsli:raw="The subset of URIs on the origin server to which this &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; applies. The default value is &quot;/&quot;.">此 <see cref="T:System.Net.Cookie" /> 适用于的源服务器上的 URI 的子集。 默认值为“/”。</param>
      <exception cref="T:System.Net.CookieException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;name&quot; /&gt; parameter is of zero length.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;name&quot; /&gt; parameter contains an invalid character.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt; .  &#xA;  &#xA; -or -  &#xA;  &#xA; The &lt;paramref name=&quot;value&quot; /&gt; parameter contains a string not enclosed in quotes that contains an invalid character.">
        <paramref name="name" /> 参数为 <see langword="null" />。  
  
- 或 - 
<paramref name="name" /> 参数的长度为零。  
  
- 或 - 
<paramref name="name" /> 参数包含无效字符。  
  
- 或 - 
<paramref name="value" /> 参数为 <see langword="null" />。  
  
- 或 - 
<paramref name="value" /> 参数包含一个未使用引号引起来的字符串，且该字符串中包含无效字符。</exception>
    </member>
    <member name="M:System.Net.Cookie.#ctor(System.String,System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; class with a specified &lt;see cref=&quot;P:System.Net.Cookie.Name&quot; /&gt;, &lt;see cref=&quot;P:System.Net.Cookie.Value&quot; /&gt;, &lt;see cref=&quot;P:System.Net.Cookie.Path&quot; /&gt;, and &lt;see cref=&quot;P:System.Net.Cookie.Domain&quot; /&gt;.">使用指定的 <see cref="P:System.Net.Cookie.Name" />、<see cref="P:System.Net.Cookie.Value" />、<see cref="P:System.Net.Cookie.Path" /> 和 <see cref="P:System.Net.Cookie.Domain" /> 初始化 <see cref="T:System.Net.Cookie" /> 类的新实例。</summary>
      <param name="name" vsli:raw="The name of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;. The following characters must not be used inside &lt;paramref name=&quot;name&quot; /&gt;: equal sign, semicolon, comma, newline (\n), return (\r), tab (\t), and space character. The dollar sign character (&quot;$&quot;) cannot be the first character.">
        <see cref="T:System.Net.Cookie" /> 的名称。 不能在 <paramref name="name" /> 中使用下列字符：等号、分号、逗号、换行符 (\n)、回车符 (\r)、制表符 (\t) 和空格字符。 货币符号 ($) 不能作为第一个字符。</param>
      <param name="value" vsli:raw="The value of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; object. The following characters must not be used inside &lt;paramref name=&quot;value&quot; /&gt;: semicolon, comma.">
        <see cref="T:System.Net.Cookie" /> 对象的值。 下列字符不得用在 <paramref name="value" /> 中：分号、逗号。</param>
      <param name="path" vsli:raw="The subset of URIs on the origin server to which this &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; applies. The default value is &quot;/&quot;.">此 <see cref="T:System.Net.Cookie" /> 适用于的源服务器上的 URI 的子集。 默认值为“/”。</param>
      <param name="domain" vsli:raw="The optional internet domain for which this &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; is valid. The default value is the host this &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; has been received from.">此 <see cref="T:System.Net.Cookie" /> 对其有效的可选 Internet 域。 默认值为已从其中接收到此 <see cref="T:System.Net.Cookie" /> 的主机。</param>
      <exception cref="T:System.Net.CookieException" vsli:raw="The &lt;paramref name=&quot;name&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;name&quot; /&gt; parameter is of zero length.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;name&quot; /&gt; parameter contains an invalid character.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;value&quot; /&gt; parameter is &lt;see langword=&quot;null&quot; /&gt; .  &#xA;  &#xA; -or -  &#xA;  &#xA; The &lt;paramref name=&quot;value&quot; /&gt; parameter contains a string not enclosed in quotes that contains an invalid character.">
        <paramref name="name" /> 参数为 <see langword="null" />。  
  
- 或 - 
<paramref name="name" /> 参数的长度为零。  
  
- 或 - 
<paramref name="name" /> 参数包含无效字符。  
  
- 或 - 
<paramref name="value" /> 参数为 <see langword="null" />。  
  
- 或 - 
<paramref name="value" /> 参数包含一个未使用引号引起来的字符串，且该字符串中包含无效字符。</exception>
    </member>
    <member name="M:System.Net.Cookie.Equals(System.Object)">
      <summary vsli:raw="Overrides the &lt;see cref=&quot;M:System.Object.Equals(System.Object)&quot; /&gt; method.">重写 <see cref="M:System.Object.Equals(System.Object)" /> 方法。</summary>
      <param name="comparand" vsli:raw="A reference to a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">对 <see cref="T:System.Net.Cookie" /> 的引用。</param>
      <returns vsli:raw="Returns &lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; is equal to &lt;paramref name=&quot;comparand&quot; /&gt;. Two &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances are equal if their &lt;see cref=&quot;P:System.Net.Cookie.Name&quot; /&gt;, &lt;see cref=&quot;P:System.Net.Cookie.Value&quot; /&gt;, &lt;see cref=&quot;P:System.Net.Cookie.Path&quot; /&gt;, &lt;see cref=&quot;P:System.Net.Cookie.Domain&quot; /&gt;, and &lt;see cref=&quot;P:System.Net.Cookie.Version&quot; /&gt; properties are equal. &lt;see cref=&quot;P:System.Net.Cookie.Name&quot; /&gt; and &lt;see cref=&quot;P:System.Net.Cookie.Domain&quot; /&gt; string comparisons are case-insensitive.">如果 <see cref="T:System.Net.Cookie" /> 等于 <paramref name="comparand" />，则返回 <see langword="true" />。 两个 <see cref="T:System.Net.Cookie" /> 实例相等的条件是它们的 <see cref="P:System.Net.Cookie.Name" />、<see cref="P:System.Net.Cookie.Value" />、<see cref="P:System.Net.Cookie.Path" />、<see cref="P:System.Net.Cookie.Domain" /> 和 <see cref="P:System.Net.Cookie.Version" /> 属性相等。 <see cref="P:System.Net.Cookie.Name" /> 和 <see cref="P:System.Net.Cookie.Domain" /> 字符串比较不区分大小写。</returns>
    </member>
    <member name="M:System.Net.Cookie.GetHashCode">
      <summary vsli:raw="Overrides the &lt;see cref=&quot;M:System.Object.GetHashCode&quot; /&gt; method.">重写 <see cref="M:System.Object.GetHashCode" /> 方法。</summary>
      <returns vsli:raw="The 32-bit signed integer hash code for this instance.">此实例的 32 位有符号整数哈希代码。</returns>
    </member>
    <member name="M:System.Net.Cookie.ToString">
      <summary vsli:raw="Overrides the &lt;see cref=&quot;M:System.Object.ToString&quot; /&gt; method.">重写 <see cref="M:System.Object.ToString" /> 方法。</summary>
      <returns vsli:raw="Returns a string representation of this &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; object that is suitable for including in a HTTP Cookie: request header.">返回此 <see cref="T:System.Net.Cookie" /> 对象的字符串表示形式，该对象适合包含在 HTTP Cookie: 请求标头中。</returns>
    </member>
    <member name="P:System.Net.Cookie.Comment">
      <summary vsli:raw="Gets or sets a comment that the server can add to a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">获取或设置服务器可添加到 <see cref="T:System.Net.Cookie" /> 中的注释。</summary>
      <returns vsli:raw="An optional comment to document intended usage for this &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">用于记录此 <see cref="T:System.Net.Cookie" /> 预定用途的可选注释。</returns>
    </member>
    <member name="P:System.Net.Cookie.CommentUri">
      <summary vsli:raw="Gets or sets a URI comment that the server can provide with a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">获取或设置服务器可通过 <see cref="T:System.Net.Cookie" /> 来提供的 URI 注释。</summary>
      <returns vsli:raw="An optional comment that represents the intended usage of the URI reference for this &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;. The value must conform to URI format.">一个可选注释，它表示此 <see cref="T:System.Net.Cookie" /> 的 URI 引用的预定用途。 该值必须符合 URI 格式。</returns>
    </member>
    <member name="P:System.Net.Cookie.Discard">
      <summary vsli:raw="Gets or sets the discard flag set by the server.">获取或设置由服务器设置的放弃标志。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the client is to discard the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; at the end of the current session; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果客户端将在当前会话结束时丢弃 <see cref="T:System.Net.Cookie" />，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Cookie.Domain">
      <summary vsli:raw="Gets or sets the URI for which the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; is valid.">获取或设置 <see cref="T:System.Net.Cookie" /> 对其有效的 URI。</summary>
      <returns vsli:raw="The URI for which the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; is valid.">
        <see cref="T:System.Net.Cookie" /> 对其有效的 URI。</returns>
    </member>
    <member name="P:System.Net.Cookie.Expired">
      <summary vsli:raw="Gets or sets the current state of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">获取或设置 <see cref="T:System.Net.Cookie" /> 的当前状态。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; has expired; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果 <see cref="T:System.Net.Cookie" /> 已过期，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Cookie.Expires">
      <summary vsli:raw="Gets or sets the expiration date and time for the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">获取或设置作为 <see cref="T:System.DateTime" /> 的 <see cref="T:System.Net.Cookie" /> 的过期日期和时间。</summary>
      <returns vsli:raw="The expiration date and time for the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt; instance.">作为 <see cref="T:System.Net.Cookie" /> 实例的 <see cref="T:System.DateTime" /> 过期日期和时间。</returns>
    </member>
    <member name="P:System.Net.Cookie.HttpOnly">
      <summary vsli:raw="Determines whether a page script or other active content can access this cookie.">确定页面脚本或其他活动内容是否可访问此 Cookie。</summary>
      <returns vsli:raw="Boolean value that determines whether a page script or other active content can access this cookie.">确定页脚本或其他活动内容是否可访问此 Cookie 的布尔值。</returns>
    </member>
    <member name="P:System.Net.Cookie.Name">
      <summary vsli:raw="Gets or sets the name for the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">获取或设置 <see cref="T:System.Net.Cookie" /> 的名称。</summary>
      <exception cref="T:System.Net.CookieException" vsli:raw="The value specified for a set operation is &lt;see langword=&quot;null&quot; /&gt; or the empty string  &#xA;  &#xA;-or-&#xA;  &#xA; The value specified for a set operation contained an illegal character. The following characters must not be used inside the &lt;see cref=&quot;P:System.Net.Cookie.Name&quot; /&gt; property: equal sign, semicolon, comma, newline (\n), return (\r), tab (\t), and space character. The dollar sign character (&quot;$&quot;) cannot be the first character.">为集合运算指定的值为 <see langword="null" /> 或是空字符串 
- 或 - 
为集合运算指定的值包含非法字符。 不能在 <see cref="P:System.Net.Cookie.Name" /> 属性中使用下列字符：等于号、分号、逗号、换行符 (\n)、回车符 (\r)、制表符 (\t) 和空格字符。 货币符号 ($) 不能作为第一个字符。</exception>
      <returns vsli:raw="The name for the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" /> 的名称。</returns>
    </member>
    <member name="P:System.Net.Cookie.Path">
      <summary vsli:raw="Gets or sets the URIs to which the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; applies.">获取或设置此 <see cref="T:System.Net.Cookie" /> 适用于的 URI。</summary>
      <returns vsli:raw="The URIs to which the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; applies.">此 <see cref="T:System.Net.Cookie" /> 适用于的 URI。</returns>
    </member>
    <member name="P:System.Net.Cookie.Port">
      <summary vsli:raw="Gets or sets a list of TCP ports that the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; applies to.">获取或设置此 <see cref="T:System.Net.Cookie" /> 适用于的 TCP 端口的列表。</summary>
      <exception cref="T:System.Net.CookieException" vsli:raw="The value specified for a set operation could not be parsed or is not enclosed in double quotes.">无法分析为集合运算指定的值或者该值没有用双引号括起来。</exception>
      <returns vsli:raw="The list of TCP ports that the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; applies to.">此 <see cref="T:System.Net.Cookie" /> 适用于的 TCP 端口的列表。</returns>
    </member>
    <member name="P:System.Net.Cookie.Secure">
      <summary vsli:raw="Gets or sets the security level of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">获取或设置 <see cref="T:System.Net.Cookie" /> 的安全性级别。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the client is only to return the cookie in subsequent requests if those requests use Secure Hypertext Transfer Protocol (HTTPS); otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果客户端仅在使用安全超文本传输协议 (HTTPS) 的后继请求中返回 Cookie，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.Cookie.TimeStamp">
      <summary vsli:raw="Gets the time when the cookie was issued as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">获取此 Cookie 作为 <see cref="T:System.DateTime" /> 发出的时间。</summary>
      <returns vsli:raw="The time when the cookie was issued as a &lt;see cref=&quot;T:System.DateTime&quot; /&gt;.">此 Cookie 作为 <see cref="T:System.DateTime" /> 发出的时间。</returns>
    </member>
    <member name="P:System.Net.Cookie.Value">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;P:System.Net.Cookie.Value&quot; /&gt; for the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">获取或设置 <see cref="P:System.Net.Cookie.Value" /> 的 <see cref="T:System.Net.Cookie" />。</summary>
      <returns vsli:raw="The &lt;see cref=&quot;P:System.Net.Cookie.Value&quot; /&gt; for the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">
        <see cref="P:System.Net.Cookie.Value" /> 的 <see cref="T:System.Net.Cookie" />。</returns>
    </member>
    <member name="P:System.Net.Cookie.Version">
      <summary vsli:raw="Gets or sets the version of HTTP state maintenance to which the cookie conforms.">获取或设置此 Cookie 符合的 HTTP 状态维护版本。</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value specified for a version is not allowed.">不允许使用为版本指定的值。</exception>
      <returns vsli:raw="The version of HTTP state maintenance to which the cookie conforms.">此 Cookie 符合的 HTTP 状态维护版本。</returns>
    </member>
    <member name="T:System.Net.CookieCollection">
      <summary vsli:raw="Provides a collection container for instances of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; class.">为 <see cref="T:System.Net.Cookie" /> 类的实例提供集合容器。</summary>
    </member>
    <member name="M:System.Net.CookieCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; class.">初始化 <see cref="T:System.Net.CookieCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Net.CookieCollection.Add(System.Net.Cookie)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">将 <see cref="T:System.Net.Cookie" /> 添加到 <see cref="T:System.Net.CookieCollection" />。</summary>
      <param name="cookie" vsli:raw="The &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to be added to a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">要添加到 <see cref="T:System.Net.Cookie" /> 中的 <see cref="T:System.Net.CookieCollection" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;cookie&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="cookie" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Net.CookieCollection.Add(System.Net.CookieCollection)">
      <summary vsli:raw="Adds the contents of a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to the current instance.">将 <see cref="T:System.Net.CookieCollection" /> 的内容添加到当前实例中。</summary>
      <param name="cookies" vsli:raw="The &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to be added.">要添加的 <see cref="T:System.Net.CookieCollection" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;cookies&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="cookies" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Net.CookieCollection.Clear">
      <summary vsli:raw="Removes all elements from the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; object.">从 <see cref="T:System.Net.CookieCollection" /> 对象中移除所有元素。</summary>
    </member>
    <member name="M:System.Net.CookieCollection.Contains(System.Net.Cookie)">
      <summary vsli:raw="Determines whether the specified cookie is in the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">确定指定的 cookie 是否在 <see cref="T:System.Net.CookieCollection" /> 中。</summary>
      <param name="cookie" vsli:raw="The cookie to locate in the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">要在 <see cref="T:System.Net.CookieCollection" /> 中定位的 cookie。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified cookie is found in the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 cookie 在 <see cref="T:System.Net.CookieCollection" /> 中，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.CookieCollection.CopyTo(System.Array,System.Int32)">
      <summary vsli:raw="Copies the elements of a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to the specified array, starting at a particular index.">将 <see cref="T:System.Net.CookieCollection" /> 的元素复制到指定数组，从特定索引开始。</summary>
      <param name="array" vsli:raw="The target array to which the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; will be copied.">该 <see cref="T:System.Net.CookieCollection" /> 将被复制到的目标数组。</param>
      <param name="index" vsli:raw="The zero-based index in the target array where copying begins.">目标数组中复制开始位置的从零开始的索引。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" /> 小于零。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in this &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> 是多维的。  
  
- 或 - 
此 <see cref="T:System.Net.CookieCollection" /> 中的元素数大于从 <paramref name="index" /> 到目标 <paramref name="array" /> 末尾之间的可用空间。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The elements in this &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">此 <see cref="T:System.Net.CookieCollection" /> 中的元素无法自动转换为目标 <paramref name="array" /> 的类型。</exception>
    </member>
    <member name="M:System.Net.CookieCollection.CopyTo(System.Net.Cookie[],System.Int32)">
      <summary vsli:raw="Copies the elements of this &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; array starting at the specified index of the target array.">将该 <see cref="T:System.Net.CookieCollection" /> 的元素复制到在目标数组的指定索引处开始的 <see cref="T:System.Net.Cookie" /> 数组。</summary>
      <param name="array" vsli:raw="The target &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; array to which the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; will be copied.">该 <see cref="T:System.Net.Cookie" /> 将被复制到的目标 <see cref="T:System.Net.CookieCollection" /> 数组。</param>
      <param name="index" vsli:raw="The zero-based index in the target array where copying begins.">目标数组中复制开始位置的从零开始的索引。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than zero.">
        <paramref name="index" /> 小于零。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;  &#xA; -or-  &#xA;  &#xA; The number of elements in this &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;index&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> 是多维的。  
  
- 或 - 
此 <see cref="T:System.Net.CookieCollection" /> 中的元素数大于从 <paramref name="index" /> 到目标 <paramref name="array" /> 末尾之间的可用空间。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The elements in this &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">此 <see cref="T:System.Net.CookieCollection" /> 中的元素无法自动转换为目标 <paramref name="array" /> 的类型。</exception>
    </member>
    <member name="M:System.Net.CookieCollection.GetEnumerator">
      <summary vsli:raw="Gets an enumerator that can iterate through a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">获取可循环访问 <see cref="T:System.Net.CookieCollection" /> 的枚举器。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for this collection.">该集合的 <see cref="T:System.Collections.IEnumerator" />。</returns>
    </member>
    <member name="M:System.Net.CookieCollection.Remove(System.Net.Cookie)">
      <summary vsli:raw="Removes the specified cookie from the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">从 <see cref="T:System.Net.CookieCollection" /> 中移除指定的 cookie。</summary>
      <param name="cookie" vsli:raw="The cookie to remove from the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">要从 <see cref="T:System.Net.CookieCollection" /> 移除的 cookie。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;cookie&quot; /&gt; was successfully removed from the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. This method also returns &lt;see langword=&quot;false&quot; /&gt; if item is not found in the original collection.">如果从 <see langword="true" /> 中成功移除 <paramref name="cookie" />，则为 <see cref="T:System.Net.CookieCollection" />；否则为 <see langword="false" />。 如果在原始集合中找不到该项，则此方法也会返回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.CookieCollection.System#Collections#Generic#IEnumerable{System#Net#Cookie}#GetEnumerator">
      <summary vsli:raw="Gets an enumerator that can iterate through the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">获取可循环访问 <see cref="T:System.Net.CookieCollection" /> 的枚举器。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerator`1&quot; /&gt; for this collection.">该集合的 <see cref="T:System.Collections.Generic.IEnumerator`1" />。</returns>
    </member>
    <member name="P:System.Net.CookieCollection.Count">
      <summary vsli:raw="Gets the number of cookies contained in a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">获取 <see cref="T:System.Net.CookieCollection" /> 中包含的 Cookie 的数目。</summary>
      <returns vsli:raw="The number of cookies contained in a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">
        <see cref="T:System.Net.CookieCollection" /> 中包含的 Cookie 的数目。</returns>
    </member>
    <member name="P:System.Net.CookieCollection.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; is read-only.">获取一个值，该值指示 <see cref="T:System.Net.CookieCollection" /> 是否为只读。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if this is a read-only &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;true&quot; /&gt;.">如果该集合为只读 <see cref="T:System.Net.CookieCollection" />，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Net.CookieCollection.IsSynchronized">
      <summary vsli:raw="Gets a value that indicates whether access to a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; is thread safe.">获取一个值，该值指示对 <see cref="T:System.Net.CookieCollection" /> 的访问是否是线程安全的。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if access to the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; is thread safe; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">如果对 <see cref="T:System.Net.CookieCollection" /> 的访问是线程安全的，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.CookieCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; with a specific index from a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">从 <see cref="T:System.Net.Cookie" /> 中获取具有特定索引的 <see cref="T:System.Net.CookieCollection" />。</summary>
      <param name="index" vsli:raw="The zero-based index of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to be found.">要查找的 <see cref="T:System.Net.Cookie" /> 的从零开始的索引。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;index&quot; /&gt; is less than 0 or &lt;paramref name=&quot;index&quot; /&gt; is greater than or equal to &lt;see cref=&quot;P:System.Net.CookieCollection.Count&quot; /&gt;.">
        <paramref name="index" /> 小于 0 或 <paramref name="index" /> 大于等于 <see cref="P:System.Net.CookieCollection.Count" />。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; with a specific index from a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" /> 中具有特定索引的 <see cref="T:System.Net.CookieCollection" />。</returns>
    </member>
    <member name="P:System.Net.CookieCollection.Item(System.String)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; with a specific name from a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">从 <see cref="T:System.Net.Cookie" /> 中获取具有特定名称的 <see cref="T:System.Net.CookieCollection" />。</summary>
      <param name="name" vsli:raw="The name of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to be found.">要查找的 <see cref="T:System.Net.Cookie" /> 的名称。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;name&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="name" /> 为 <see langword="null" />。</exception>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; with a specific name from a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" /> 中具有特定名称的 <see cref="T:System.Net.CookieCollection" />。</returns>
    </member>
    <member name="P:System.Net.CookieCollection.SyncRoot">
      <summary vsli:raw="Gets an object to synchronize access to the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">获取用于同步对 <see cref="T:System.Net.CookieCollection" /> 的访问的对象。</summary>
      <returns vsli:raw="An object to synchronize access to the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">用于同步对 <see cref="T:System.Net.CookieCollection" /> 的访问的对象。</returns>
    </member>
    <member name="T:System.Net.CookieContainer">
      <summary vsli:raw="Provides a container for a collection of &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; objects.">为 <see cref="T:System.Net.CookieCollection" /> 对象的集合提供容器。</summary>
    </member>
    <member name="F:System.Net.CookieContainer.DefaultCookieLengthLimit">
      <summary vsli:raw="Represents the default maximum size, in bytes, of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; can hold. This field is constant.">表示 <see cref="T:System.Net.Cookie" /> 可以包含的 <see cref="T:System.Net.CookieContainer" /> 实例的默认最大大小（以字节为单位）。 此字段为常数。</summary>
    </member>
    <member name="F:System.Net.CookieContainer.DefaultCookieLimit">
      <summary vsli:raw="Represents the default maximum number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; can hold. This field is constant.">表示 <see cref="T:System.Net.Cookie" /> 可以包含的 <see cref="T:System.Net.CookieContainer" /> 实例的默认最大数目。 此字段为常数。</summary>
    </member>
    <member name="F:System.Net.CookieContainer.DefaultPerDomainCookieLimit">
      <summary vsli:raw="Represents the default maximum number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; can reference per domain. This field is constant.">表示 <see cref="T:System.Net.Cookie" /> 可以在每个域引用的 <see cref="T:System.Net.CookieContainer" /> 实例的默认最大数目。 此字段为常数。</summary>
    </member>
    <member name="M:System.Net.CookieContainer.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; class.">初始化 <see cref="T:System.Net.CookieContainer" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Net.CookieContainer.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; class with a specified value for the number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that the container can hold.">使用指定的表示容器可以包含的 <see cref="T:System.Net.CookieContainer" /> 实例数的值初始化 <see cref="T:System.Net.Cookie" /> 类的新实例。</summary>
      <param name="capacity" vsli:raw="The number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; can hold.">
        <see cref="T:System.Net.Cookie" /> 可以包含的 <see cref="T:System.Net.CookieContainer" /> 实例数。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;capacity&quot; /&gt; is less than or equal to zero.">
        <paramref name="capacity" /> 小于或等于零。</exception>
    </member>
    <member name="M:System.Net.CookieContainer.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; class with specific properties.">使用指定属性初始化 <see cref="T:System.Net.CookieContainer" /> 类的新实例。</summary>
      <param name="capacity" vsli:raw="The number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; can hold.">
        <see cref="T:System.Net.Cookie" /> 可以包含的 <see cref="T:System.Net.CookieContainer" /> 实例数。</param>
      <param name="perDomainCapacity" vsli:raw="The number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances per domain.">每个域的 <see cref="T:System.Net.Cookie" /> 实例数。</param>
      <param name="maxCookieSize" vsli:raw="The maximum size in bytes for any single &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; in a &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" /> 中任何单个 <see cref="T:System.Net.CookieContainer" /> 的最大大小（以字节为单位）。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;perDomainCapacity&quot; /&gt; is not equal to &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.  &#xA;  &#xA; and  &#xA;  &#xA; &lt;paramref name=&quot;(perDomainCapacity&quot; /&gt; is less than or equal to zero or &lt;paramref name=&quot;perDomainCapacity&quot; /&gt; is greater than &lt;paramref name=&quot;capacity)&quot; /&gt;.">
        <paramref name="perDomainCapacity" /> 不等于 <see cref="F:System.Int32.MaxValue" />。  
  
和 
 <paramref name="(perDomainCapacity" /> 小于或等于零，或者 <paramref name="perDomainCapacity" /> 大于 <paramref name="capacity)" /></exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;maxCookieSize&quot; /&gt; is less than or equal to zero.">
        <paramref name="maxCookieSize" /> 小于或等于零。</exception>
    </member>
    <member name="M:System.Net.CookieContainer.Add(System.Net.Cookie)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to a &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;. This method uses the domain from the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to determine which domain collection to associate the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; with.">将 <see cref="T:System.Net.Cookie" /> 添加到 <see cref="T:System.Net.CookieContainer" />。 此方法使用 <see cref="T:System.Net.Cookie" /> 中的域来确定将 <see cref="T:System.Net.Cookie" /> 与哪个域集合相关联。</summary>
      <param name="cookie" vsli:raw="The &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to be added to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">要添加到 <see cref="T:System.Net.Cookie" /> 的 <see cref="T:System.Net.CookieContainer" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;cookie&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="cookie" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The domain for &lt;paramref name=&quot;cookie&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or the empty string (&quot;&quot;).">
        <paramref name="cookie" /> 的域为 <see langword="null" /> 或空字符串 ("")。</exception>
      <exception cref="T:System.Net.CookieException" vsli:raw="&lt;paramref name=&quot;cookie&quot; /&gt; is larger than &lt;paramref name=&quot;maxCookieSize&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; the domain for &lt;paramref name=&quot;cookie&quot; /&gt; is not a valid URI.">
        <paramref name="cookie" /> 大于 <paramref name="maxCookieSize" />。  
  
- 或 - 
<paramref name="cookie" /> 的域不是有效的 URI。</exception>
    </member>
    <member name="M:System.Net.CookieContainer.Add(System.Net.CookieCollection)">
      <summary vsli:raw="Adds the contents of a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">将 <see cref="T:System.Net.CookieCollection" /> 的内容添加到 <see cref="T:System.Net.CookieContainer" /> 中。</summary>
      <param name="cookies" vsli:raw="The &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to be added to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">要添加到 <see cref="T:System.Net.CookieCollection" /> 的 <see cref="T:System.Net.CookieContainer" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;cookies&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="cookies" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Net.CookieContainer.Add(System.Uri,System.Net.Cookie)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; for a particular URI.">将 <see cref="T:System.Net.Cookie" /> 添加到特定 URI 的 <see cref="T:System.Net.CookieContainer" /> 中。</summary>
      <param name="uri" vsli:raw="The URI of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to be added to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">要添加到 <see cref="T:System.Net.Cookie" /> 的 <see cref="T:System.Net.CookieContainer" /> 的 URI。</param>
      <param name="cookie" vsli:raw="The &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to be added to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">要添加到 <see cref="T:System.Net.Cookie" /> 的 <see cref="T:System.Net.CookieContainer" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; or &lt;paramref name=&quot;cookie&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uri" /> 为 <see langword="null" /> 或 <paramref name="cookie" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Net.CookieException" vsli:raw="&lt;paramref name=&quot;cookie&quot; /&gt; is larger than &lt;paramref name=&quot;maxCookieSize&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The domain for &lt;paramref name=&quot;cookie&quot; /&gt; is not a valid URI.">
        <paramref name="cookie" /> 大于 <paramref name="maxCookieSize" />。  
  
- 或 - 
<paramref name="cookie" /> 的域不是有效的 URI。</exception>
    </member>
    <member name="M:System.Net.CookieContainer.Add(System.Uri,System.Net.CookieCollection)">
      <summary vsli:raw="Adds the contents of a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; for a particular URI.">将 <see cref="T:System.Net.CookieCollection" /> 的内容添加到特定 URI 的 <see cref="T:System.Net.CookieContainer" /> 中。</summary>
      <param name="uri" vsli:raw="The URI of the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to be added to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">要添加到 <see cref="T:System.Net.CookieCollection" /> 的 <see cref="T:System.Net.CookieContainer" /> 的 URI。</param>
      <param name="cookies" vsli:raw="The &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; to be added to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">要添加到 <see cref="T:System.Net.CookieCollection" /> 的 <see cref="T:System.Net.CookieContainer" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;cookies&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="cookies" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The domain for one of the cookies in &lt;paramref name=&quot;cookies&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="cookies" /> 中的某一个 Cookie 的域是 <see langword="null" />。</exception>
      <exception cref="T:System.Net.CookieException" vsli:raw="One of the cookies in &lt;paramref name=&quot;cookies&quot; /&gt; contains an invalid domain.">
        <paramref name="cookies" /> 中的某一个 Cookie 包含无效的域。</exception>
    </member>
    <member name="M:System.Net.CookieContainer.GetCookieHeader(System.Uri)">
      <summary vsli:raw="Gets the HTTP cookie header that contains the HTTP cookies that represent the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that are associated with a specific URI.">获取 HTTP Cookie 标头，该标头包含表示与特定 URI 关联的 <see cref="T:System.Net.Cookie" /> 实例的 HTTP Cookie。</summary>
      <param name="uri" vsli:raw="The URI of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances desired.">所需的 <see cref="T:System.Net.Cookie" /> 实例的 URI。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uri" /> 为 <see langword="null" />。</exception>
      <returns vsli:raw="An HTTP cookie header, with strings representing &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances delimited by semicolons.">一个 HTTP Cookie 标头，其中包含表示由分号分隔的 <see cref="T:System.Net.Cookie" /> 实例的字符串。</returns>
    </member>
    <member name="M:System.Net.CookieContainer.GetCookies(System.Uri)">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that are associated with a specific URI.">获取包含与特定 URI 关联的 <see cref="T:System.Net.CookieCollection" /> 实例的 <see cref="T:System.Net.Cookie" />。</summary>
      <param name="uri" vsli:raw="The URI of the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances desired.">所需的 <see cref="T:System.Net.Cookie" /> 实例的 URI。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uri&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uri" /> 为 <see langword="null" />。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt; that contains the &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that are associated with a specific URI.">包含与特定 URI 关联的 <see cref="T:System.Net.CookieCollection" /> 实例的 <see cref="T:System.Net.Cookie" />。</returns>
    </member>
    <member name="M:System.Net.CookieContainer.SetCookies(System.Uri,System.String)">
      <summary vsli:raw="Adds &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances for one or more cookies from an HTTP cookie header to the &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; for a specific URI.">将 HTTP Cookie 标头中的一个或多个 Cookie 的 <see cref="T:System.Net.Cookie" /> 实例添加到特定 URI 的 <see cref="T:System.Net.CookieContainer" /> 中。</summary>
      <param name="uri" vsli:raw="The URI of the &lt;see cref=&quot;T:System.Net.CookieCollection&quot; /&gt;.">
        <see cref="T:System.Net.CookieCollection" /> 的 URI。</param>
      <param name="cookieHeader" vsli:raw="The contents of an HTTP set-cookie header as returned by a HTTP server, with &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances delimited by commas.">HTTP 服务器所返回的 HTTP Set-Cookie 标头的内容，其中的 <see cref="T:System.Net.Cookie" /> 实例用逗号分隔。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uri&quot; /&gt; or &lt;paramref name=&quot;cookieHeader&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uri" /> 或 <paramref name="cookieHeader" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Net.CookieException" vsli:raw="One of the cookies is invalid.  &#xA;  &#xA; -or-  &#xA;  &#xA; An error occurred while adding one of the cookies to the container.">某一个 Cookie 是无效的。  
  
 - 或 -  
  
 当将某一个 Cookie 添加到容器中时发生错误。</exception>
    </member>
    <member name="P:System.Net.CookieContainer.Capacity">
      <summary vsli:raw="Gets or sets the number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that a &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; can hold.">获取或设置 <see cref="T:System.Net.CookieContainer" /> 可以包含的 <see cref="T:System.Net.Cookie" /> 实例数。</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;Capacity&quot; /&gt; is less than or equal to zero or (value is less than &lt;see cref=&quot;P:System.Net.CookieContainer.PerDomainCapacity&quot; /&gt; and &lt;see cref=&quot;P:System.Net.CookieContainer.PerDomainCapacity&quot; /&gt; is not equal to &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;).">
        <paramref name="Capacity" /> 小于或等于零，或者（值小于 <see cref="P:System.Net.CookieContainer.PerDomainCapacity" /> 且 <see cref="P:System.Net.CookieContainer.PerDomainCapacity" /> 不等于 <see cref="F:System.Int32.MaxValue" />）。</exception>
      <returns vsli:raw="The number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that a &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; can hold. This is a hard limit and cannot be exceeded by adding a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" /> 可以包含的 <see cref="T:System.Net.CookieContainer" /> 实例数。 这是硬性限制，不能通过添加 <see cref="T:System.Net.Cookie" /> 超过此限制。</returns>
    </member>
    <member name="P:System.Net.CookieContainer.Count">
      <summary vsli:raw="Gets the number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that a &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; currently holds.">获取 <see cref="T:System.Net.Cookie" /> 当前包含的 <see cref="T:System.Net.CookieContainer" /> 实例数。</summary>
      <returns vsli:raw="The number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that a &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; currently holds. This is the total of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances in all domains.">
        <see cref="T:System.Net.Cookie" /> 当前包含的 <see cref="T:System.Net.CookieContainer" /> 实例数。 这是所有域中 <see cref="T:System.Net.Cookie" /> 实例的总数。</returns>
    </member>
    <member name="P:System.Net.CookieContainer.MaxCookieSize">
      <summary vsli:raw="Represents the maximum allowed length of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">表示 <see cref="T:System.Net.Cookie" /> 的最大允许长度。</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;MaxCookieSize&quot; /&gt; is less than or equal to zero.">
        <paramref name="MaxCookieSize" /> 小于或等于零。</exception>
      <returns vsli:raw="The maximum allowed length, in bytes, of a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt;.">
        <see cref="T:System.Net.Cookie" /> 的最大允许长度（以字节为单位）。</returns>
    </member>
    <member name="P:System.Net.CookieContainer.PerDomainCapacity">
      <summary vsli:raw="Gets or sets the number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that a &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt; can hold per domain.">获取或设置 <see cref="T:System.Net.CookieContainer" /> 可以在每个域包含的 <see cref="T:System.Net.Cookie" /> 实例数。</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;PerDomainCapacity&quot; /&gt; is less than or equal to zero.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;(PerDomainCapacity&quot; /&gt; is greater than the maximum allowable number of cookies instances, 300, and is not equal to &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;).">
        <paramref name="PerDomainCapacity" /> 小于或等于零。  
  
- 或 - 
 （<paramref name="(PerDomainCapacity" /> 大于允许的最大 Cookie 实例数 300 且不等于 <see cref="F:System.Int32.MaxValue" />）。</exception>
      <returns vsli:raw="The number of &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; instances that are allowed per domain.">每个域允许的 <see cref="T:System.Net.Cookie" /> 实例数。</returns>
    </member>
    <member name="T:System.Net.CookieException">
      <summary vsli:raw="The exception that is thrown when an error is made adding a &lt;see cref=&quot;T:System.Net.Cookie&quot; /&gt; to a &lt;see cref=&quot;T:System.Net.CookieContainer&quot; /&gt;.">向 <see cref="T:System.Net.CookieContainer" /> 添加 <see cref="T:System.Net.Cookie" /> 出错时引发的异常。</summary>
    </member>
    <member name="M:System.Net.CookieException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.CookieException&quot; /&gt; class.">初始化 <see cref="T:System.Net.CookieException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Net.CookieException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.CookieException&quot; /&gt; class with specific values of &lt;paramref name=&quot;serializationInfo&quot; /&gt; and &lt;paramref name=&quot;streamingContext&quot; /&gt;.">使用 <paramref name="serializationInfo" /> 和 <paramref name="streamingContext" /> 的特定值初始化 <see cref="T:System.Net.CookieException" /> 类的新实例。</summary>
      <param name="serializationInfo" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to be used.">要使用的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="streamingContext" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; to be used.">要使用的 <see cref="T:System.Runtime.Serialization.StreamingContext" />。</param>
    </member>
    <member name="M:System.Net.CookieException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; instance with the data needed to serialize the &lt;see cref=&quot;T:System.Net.CookieException&quot; /&gt;.">用序列化 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 所需的数据填充 <see cref="T:System.Net.CookieException" /> 实例。</summary>
      <param name="serializationInfo" vsli:raw="The object that holds the serialized object data. The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to populate with data.">承载序列化对象数据的对象。 要填充数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="streamingContext" vsli:raw="The contextual information about the source or destination. A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that specifies the destination for this serialization.">关于来源和目标的上下文信息 用于指定该序列化的目标的 <see cref="T:System.Runtime.Serialization.StreamingContext" />。</param>
    </member>
    <member name="M:System.Net.CookieException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Populates a &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; instance with the data needed to serialize the &lt;see cref=&quot;T:System.Net.CookieException&quot; /&gt;.">用序列化 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 所需的数据填充 <see cref="T:System.Net.CookieException" /> 实例。</summary>
      <param name="serializationInfo" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; to be used.">要使用的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="streamingContext" vsli:raw="The &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; to be used.">要使用的 <see cref="T:System.Runtime.Serialization.StreamingContext" />。</param>
    </member>
    <member name="T:System.Net.CredentialCache">
      <summary vsli:raw="Provides storage for multiple credentials.">为多个凭据提供存储空间。</summary>
    </member>
    <member name="M:System.Net.CredentialCache.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.CredentialCache&quot; /&gt; class.">创建 <see cref="T:System.Net.CredentialCache" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Net.CredentialCache.Add(System.String,System.Int32,System.String,System.Net.NetworkCredential)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; instance for use with SMTP to the credential cache and associates it with a host computer, port, and authentication protocol. Credentials added using this method are valid for SMTP only. This method does not work for HTTP or FTP requests.">向凭据缓存添加要与 SMTP 一起使用的 <see cref="T:System.Net.NetworkCredential" /> 实例，并将其与主机、端口和身份验证协议关联。 使用此方法添加的凭据仅对 SMTP 有效。 此方法对 HTTP 或 FTP 请求无效。</summary>
      <param name="host" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that identifies the host computer.">标识主机的 <see cref="T:System.String" />。</param>
      <param name="port" vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; that specifies the port to connect to on &lt;paramref name=&quot;host&quot; /&gt;.">指定要连接到 <paramref name="host" /> 的端口的 <see cref="T:System.Int32" />。</param>
      <param name="authenticationType" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that identifies the authentication scheme used when connecting to &lt;paramref name=&quot;host&quot; /&gt; using &lt;paramref name=&quot;cred&quot; /&gt;.">
        <see cref="T:System.String" />，它标识使用 <paramref name="host" /> 连接到 <paramref name="cred" /> 时使用的身份验证方案。</param>
      <param name="credential" vsli:raw="The &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; to add to the credential cache.">要添加到凭据缓存中的 <see cref="T:System.Net.NetworkCredential" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;host&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;authType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="host" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="authType" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;authType&quot; /&gt; not an accepted value.">
        <paramref name="authType" /> 不是一个接受的值。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;port&quot; /&gt; is less than zero.">
        <paramref name="port" /> 小于零。</exception>
    </member>
    <member name="M:System.Net.CredentialCache.Add(System.Uri,System.String,System.Net.NetworkCredential)">
      <summary vsli:raw="Adds a &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; instance to the credential cache for use with protocols other than SMTP and associates it with a Uniform Resource Identifier (URI) prefix and authentication protocol.">向凭据缓存添加一个要与 SMTP 以外的协议一起使用的 <see cref="T:System.Net.NetworkCredential" /> 实例，并将其与统一资源标识符 (URI) 前缀和身份验证协议关联。</summary>
      <param name="uriPrefix" vsli:raw="A &lt;see cref=&quot;T:System.Uri&quot; /&gt; that specifies the URI prefix of the resources that the credential grants access to.">一个 <see cref="T:System.Uri" />，它指定资源的 URI 前缀，该资源由凭据授予访问权。</param>
      <param name="authType" vsli:raw="The authentication scheme used by the resource named in &lt;paramref name=&quot;uriPrefix&quot; /&gt;.">在 <paramref name="uriPrefix" /> 中命名的资源所使用的身份验证方案。</param>
      <param name="cred" vsli:raw="The &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; to add to the credential cache.">要添加到凭据缓存中的 <see cref="T:System.Net.NetworkCredential" />。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uriPrefix&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;authType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uriPrefix" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="authType" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="The same credentials are added more than once.">相同的凭据被添加多次。</exception>
    </member>
    <member name="M:System.Net.CredentialCache.GetCredential(System.String,System.Int32,System.String)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; instance associated with the specified host, port, and authentication protocol.">返回与指定的主机、端口和身份验证协议关联的 <see cref="T:System.Net.NetworkCredential" /> 实例。</summary>
      <param name="host" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that identifies the host computer.">标识主机的 <see cref="T:System.String" />。</param>
      <param name="port" vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; that specifies the port to connect to on &lt;paramref name=&quot;host&quot; /&gt;.">指定要连接到 <paramref name="host" /> 的端口的 <see cref="T:System.Int32" />。</param>
      <param name="authenticationType" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that identifies the authentication scheme used when connecting to &lt;paramref name=&quot;host&quot; /&gt;.">
        <see cref="T:System.String" />，它标识连接到 <paramref name="host" /> 时使用的身份验证方案。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;host&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;authType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="host" /> 为 <see langword="null" />。  
  
- 或 - 
 <paramref name="authType" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;authType&quot; /&gt; not an accepted value.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;host&quot; /&gt; is equal to the empty string (&quot;&quot;).">
        <paramref name="authType" /> 不是一个接受的值。  
  
- 或 - 
 <paramref name="host" /> 是空字符串 ("")。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;port&quot; /&gt; is less than zero.">
        <paramref name="port" /> 小于零。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; or, if there is no matching credential in the cache, &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Net.NetworkCredential" />；如果缓存中没有匹配的凭据，则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Net.CredentialCache.GetCredential(System.Uri,System.String)">
      <summary vsli:raw="Returns the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; instance associated with the specified Uniform Resource Identifier (URI) and authentication type.">返回与指定的统一资源标识符 (URI) 和身份验证类型相关联的 <see cref="T:System.Net.NetworkCredential" /> 实例。</summary>
      <param name="uriPrefix" vsli:raw="A &lt;see cref=&quot;T:System.Uri&quot; /&gt; that specifies the URI prefix of the resources that the credential grants access to.">一个 <see cref="T:System.Uri" />，它指定资源的 URI 前缀，该资源由凭据授予访问权。</param>
      <param name="authType" vsli:raw="The authentication scheme used by the resource named in &lt;paramref name=&quot;uriPrefix&quot; /&gt;.">在 <paramref name="uriPrefix" /> 中命名的资源所使用的身份验证方案。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;uriPrefix&quot; /&gt; or &lt;paramref name=&quot;authType&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="uriPrefix" /> 或 <paramref name="authType" /> 为 <see langword="null" />。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; or, if there is no matching credential in the cache, &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Net.NetworkCredential" />；如果缓存中没有匹配的凭据，则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Net.CredentialCache.GetEnumerator">
      <summary vsli:raw="Returns an enumerator that can iterate through the &lt;see cref=&quot;T:System.Net.CredentialCache&quot; /&gt; instance.">返回可循环访问 <see cref="T:System.Net.CredentialCache" /> 实例的枚举器。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; for the &lt;see cref=&quot;T:System.Net.CredentialCache&quot; /&gt;.">
        <see cref="T:System.Collections.IEnumerator" /> 的一个 <see cref="T:System.Net.CredentialCache" />。</returns>
    </member>
    <member name="M:System.Net.CredentialCache.Remove(System.String,System.Int32,System.String)">
      <summary vsli:raw="Deletes a &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; instance from the cache if it is associated with the specified host, port, and authentication protocol.">如果 <see cref="T:System.Net.NetworkCredential" /> 实例与指定的主机、端口和身份验证协议相关联，则将其从缓存中删除。</summary>
      <param name="host" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that identifies the host computer.">标识主机的 <see cref="T:System.String" />。</param>
      <param name="port" vsli:raw="A &lt;see cref=&quot;T:System.Int32&quot; /&gt; that specifies the port to connect to on &lt;paramref name=&quot;host&quot; /&gt;.">指定要连接到 <paramref name="host" /> 的端口的 <see cref="T:System.Int32" />。</param>
      <param name="authenticationType" vsli:raw="A &lt;see cref=&quot;T:System.String&quot; /&gt; that identifies the authentication scheme used when connecting to &lt;paramref name=&quot;host&quot; /&gt;.">
        <see cref="T:System.String" />，它标识连接到 <paramref name="host" /> 时使用的身份验证方案。</param>
    </member>
    <member name="M:System.Net.CredentialCache.Remove(System.Uri,System.String)">
      <summary vsli:raw="Deletes a &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; instance from the cache if it is associated with the specified Uniform Resource Identifier (URI) prefix and authentication protocol.">如果 <see cref="T:System.Net.NetworkCredential" /> 实例与指定的统一资源标识符 (URI) 前缀和身份验证协议相关联，则将其从缓存中删除。</summary>
      <param name="uriPrefix" vsli:raw="A &lt;see cref=&quot;T:System.Uri&quot; /&gt; that specifies the URI prefix of the resources that the credential is used for.">
        <see cref="T:System.Uri" />，它指定该凭据所用于的资源的 URI 前缀。</param>
      <param name="authType" vsli:raw="The authentication scheme used by the host named in &lt;paramref name=&quot;uriPrefix&quot; /&gt;.">
        <paramref name="uriPrefix" /> 中命名的主机所使用的身份验证方案。</param>
    </member>
    <member name="P:System.Net.CredentialCache.DefaultCredentials">
      <summary vsli:raw="Gets the system credentials of the application.">获取应用程序的系统凭据。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.ICredentials&quot; /&gt; that represents the system credentials of the application.">表示应用程序的系统凭据的 <see cref="T:System.Net.ICredentials" />。</returns>
    </member>
    <member name="P:System.Net.CredentialCache.DefaultNetworkCredentials">
      <summary vsli:raw="Gets the network credentials of the current security context.">获取当前安全上下文的网络凭据。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; that represents the network credentials of the current user or application.">表示当前用户或应用程序的网络凭据的 <see cref="T:System.Net.NetworkCredential" />。</returns>
    </member>
    <member name="T:System.Net.DecompressionMethods">
      <summary vsli:raw="Represents the file compression and decompression encoding format to be used to compress the data received in response to an &lt;see cref=&quot;T:System.Net.HttpWebRequest&quot; /&gt;.">表示文件压缩和解压缩编码格式，该格式将用来压缩在 <see cref="T:System.Net.HttpWebRequest" /> 的响应中收到的数据。</summary>
    </member>
    <member name="F:System.Net.DecompressionMethods.All">
      <summary vsli:raw="Use all compression-decompression algorithms.">使用全部压缩-解压缩算法。</summary>
    </member>
    <member name="F:System.Net.DecompressionMethods.Brotli">
      <summary vsli:raw="Use the Brotli compression-decompression algorithm.">使用 Brotli 压缩-解压缩算法。</summary>
    </member>
    <member name="F:System.Net.DecompressionMethods.Deflate">
      <summary vsli:raw="Use the deflate compression-decompression algorithm.">使用 Deflate 压缩/解压缩算法。</summary>
    </member>
    <member name="F:System.Net.DecompressionMethods.GZip">
      <summary vsli:raw="Use the gZip compression-decompression algorithm.">使用 gZip 压缩/解压缩算法。</summary>
    </member>
    <member name="F:System.Net.DecompressionMethods.None">
      <summary vsli:raw="Do not use compression.">不使用压缩。</summary>
    </member>
    <member name="T:System.Net.DnsEndPoint">
      <summary vsli:raw="Represents a network endpoint as a host name or a string representation of an IP address and a port number.">将网络终结点表示为主机名或 IP 地址和端口号的字符串表示方法。</summary>
    </member>
    <member name="M:System.Net.DnsEndPoint.#ctor(System.String,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt; class with the host name or string representation of an IP address and a port number.">用主机名或 IP 地址和端口号的字符串表示形式初始化 <see cref="T:System.Net.DnsEndPoint" /> 类的新实例。</summary>
      <param name="host" vsli:raw="The host name or a string representation of the IP address.">主机名或 IP 地址的字符串表示形式。</param>
      <param name="port" vsli:raw="The port number associated with the address, or 0 to specify any available port. &lt;paramref name=&quot;port&quot; /&gt; is in host order.">与 address 关联的端口号，或为 0 以指定任何可用端口。 <paramref name="port" /> 以主机顺序排列。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;host&quot; /&gt; parameter contains an empty string.">
        <paramref name="host" /> 参数包含空字符串。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;host&quot; /&gt; parameter is a &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="host" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;port&quot; /&gt; is less than &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;port&quot; /&gt; is greater than &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt;.">
        <paramref name="port" /> 小于 <see cref="F:System.Net.IPEndPoint.MinPort" />。  
  
- 或 - 
 <paramref name="port" /> 大于 <see cref="F:System.Net.IPEndPoint.MaxPort" />。</exception>
    </member>
    <member name="M:System.Net.DnsEndPoint.#ctor(System.String,System.Int32,System.Net.Sockets.AddressFamily)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt; class with the host name or string representation of an IP address, a port number, and an address family.">用主机名或 IP 地址、端口号和地址族的字符串表示形式初始化 <see cref="T:System.Net.DnsEndPoint" /> 类的新实例。</summary>
      <param name="host" vsli:raw="The host name or a string representation of the IP address.">主机名或 IP 地址的字符串表示形式。</param>
      <param name="port" vsli:raw="The port number associated with the address, or 0 to specify any available port. &lt;paramref name=&quot;port&quot; /&gt; is in host order.">与 address 关联的端口号，或为 0 以指定任何可用端口。 <paramref name="port" /> 以主机顺序排列。</param>
      <param name="addressFamily" vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.AddressFamily" /> 值之一。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;host&quot; /&gt; parameter contains an empty string.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;addressFamily&quot; /&gt; is &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.Unknown&quot; /&gt;.">
        <paramref name="host" /> 参数包含空字符串。  
  
- 或 - 
 <paramref name="addressFamily" /> 为 <see cref="F:System.Net.Sockets.AddressFamily.Unknown" />。</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;host&quot; /&gt; parameter is a &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="host" /> 参数为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;port&quot; /&gt; is less than &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;port&quot; /&gt; is greater than &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt;.">
        <paramref name="port" /> 小于 <see cref="F:System.Net.IPEndPoint.MinPort" />。  
  
- 或 - 
 <paramref name="port" /> 大于 <see cref="F:System.Net.IPEndPoint.MaxPort" />。</exception>
    </member>
    <member name="M:System.Net.DnsEndPoint.Equals(System.Object)">
      <summary vsli:raw="Compares two &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt; objects.">比较两个 <see cref="T:System.Net.DnsEndPoint" /> 对象。</summary>
      <param name="comparand" vsli:raw="A &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt; instance to compare to the current instance.">与当前实例比较的 <see cref="T:System.Net.DnsEndPoint" /> 实例。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt; instances are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果这两个 <see cref="T:System.Net.DnsEndPoint" /> 实例相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.DnsEndPoint.GetHashCode">
      <summary vsli:raw="Returns a hash value for a &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt;.">返回 <see cref="T:System.Net.DnsEndPoint" /> 的哈希值。</summary>
      <returns vsli:raw="An integer hash value for the &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt;.">
        <see cref="T:System.Net.DnsEndPoint" /> 的整数哈希值。</returns>
    </member>
    <member name="M:System.Net.DnsEndPoint.ToString">
      <summary vsli:raw="Returns the host name or string representation of the IP address and port number of the &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt;.">返回 <see cref="T:System.Net.DnsEndPoint" /> 的主机名或 IP 地址和端口号的字符串表示形式。</summary>
      <returns vsli:raw="A string containing the address family, host name or IP address string, and the port number of the specified &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt;.">一个字符串，包含指定 <see cref="T:System.Net.DnsEndPoint" /> 的地址族、主机名或 IP 地址字符串和端口号。</returns>
    </member>
    <member name="P:System.Net.DnsEndPoint.AddressFamily">
      <summary vsli:raw="Gets the Internet Protocol (IP) address family.">获取网际协议 (IP) 地址族。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.AddressFamily" /> 值之一。</returns>
    </member>
    <member name="P:System.Net.DnsEndPoint.Host">
      <summary vsli:raw="Gets the host name or string representation of the Internet Protocol (IP) address of the host.">获取主机的主机名或 Internet 协议 (IP) 地址的字符串表示形式。</summary>
      <returns vsli:raw="A host name or string representation of an IP address.">主机名或 IP 地址的字符串表示形式。</returns>
    </member>
    <member name="P:System.Net.DnsEndPoint.Port">
      <summary vsli:raw="Gets the port number of the &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt;.">获取 <see cref="T:System.Net.DnsEndPoint" /> 的端口号。</summary>
      <returns vsli:raw="An integer value in the range 0 to 0xffff indicating the port number of the &lt;see cref=&quot;T:System.Net.DnsEndPoint&quot; /&gt;.">介于 0 到 0xffff 之间的整数值，指示 <see cref="T:System.Net.DnsEndPoint" /> 的端口号。</returns>
    </member>
    <member name="T:System.Net.EndPoint">
      <summary vsli:raw="Identifies a network address. This is an &lt;see langword=&quot;abstract&quot; /&gt; class.">标识网络地址。 这是一个 <see langword="abstract" /> 类。</summary>
    </member>
    <member name="M:System.Net.EndPoint.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; class.">初始化 <see cref="T:System.Net.EndPoint" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Net.EndPoint.Create(System.Net.SocketAddress)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; instance from a &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; instance.">通过 <see cref="T:System.Net.SocketAddress" /> 实例创建 <see cref="T:System.Net.EndPoint" /> 实例。</summary>
      <param name="socketAddress" vsli:raw="The socket address that serves as the endpoint for a connection.">用作连接终结点的套接字地址。</param>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method when the method is not overridden in a descendant class.">当未在子类中重写该方法时，为访问该方法进行的任何尝试。</exception>
      <returns vsli:raw="A new &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; instance that is initialized from the specified &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; instance.">从指定的 <see cref="T:System.Net.SocketAddress" /> 实例初始化的新 <see cref="T:System.Net.EndPoint" /> 实例。</returns>
    </member>
    <member name="M:System.Net.EndPoint.Serialize">
      <summary vsli:raw="Serializes endpoint information into a &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; instance.">将终结点信息序列化为 <see cref="T:System.Net.SocketAddress" /> 实例。</summary>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to access the method when the method is not overridden in a descendant class.">当未在子类中重写该方法时，为访问该方法进行的任何尝试。</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; instance that contains the endpoint information.">包含终结点信息的 <see cref="T:System.Net.SocketAddress" /> 实例。</returns>
    </member>
    <member name="P:System.Net.EndPoint.AddressFamily">
      <summary vsli:raw="Gets the address family to which the endpoint belongs.">获取终结点所属的地址族。</summary>
      <exception cref="T:System.NotImplementedException" vsli:raw="Any attempt is made to get or set the property when the property is not overridden in a descendant class.">当未在子类中重写该属性时，为获取或设置属性进行的任何尝试。</exception>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; values.">
        <see cref="T:System.Net.Sockets.AddressFamily" /> 值之一。</returns>
    </member>
    <member name="T:System.Net.HttpStatusCode">
      <summary vsli:raw="Contains the values of status codes defined for HTTP defined in RFC 2616 for HTTP 1.1.">包含为 HTTP 定义的状态代码的值。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Accepted">
      <summary vsli:raw="Equivalent to HTTP status 202. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Accepted&quot; /&gt; indicates that the request has been accepted for further processing.">等效于 HTTP 状态 202。 <see cref="F:System.Net.HttpStatusCode.Accepted" /> 指示已接受请求做进一步处理。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.AlreadyReported">
      <summary vsli:raw="Equivalent to HTTP status 208. &lt;see cref=&quot;F:System.Net.HttpStatusCode.AlreadyReported&quot; /&gt; indicates that the members of a WebDAV binding have already been enumerated in a preceding part of the multistatus response, and are not being included again.">等效于 HTTP 状态 208。 <see cref="F:System.Net.HttpStatusCode.AlreadyReported" /> 指示已在多状态响应的前面部分枚举了 WebDAV 绑定的成员，并且不再将其包含在内。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Ambiguous">
      <summary vsli:raw="Equivalent to HTTP status 300. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Ambiguous&quot; /&gt; indicates that the requested information has multiple representations. The default action is to treat this status as a redirect and follow the contents of the Location header associated with this response. &lt;c&gt;Ambiguous&lt;/c&gt; is a synonym for &lt;c&gt;MultipleChoices&lt;/c&gt;.">等效于 HTTP 状态 300。 <see cref="F:System.Net.HttpStatusCode.Ambiguous" /> 指示请求的信息有多种表示形式。 默认操作是将此状态视为重定向，并遵循与此响应关联的 Location 标头的内容。 <c>Ambiguous</c> 是 <c>MultipleChoices</c> 的同义词。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.BadGateway">
      <summary vsli:raw="Equivalent to HTTP status 502. &lt;see cref=&quot;F:System.Net.HttpStatusCode.BadGateway&quot; /&gt; indicates that an intermediate proxy server received a bad response from another proxy or the origin server.">等效于 HTTP 状态 502。 <see cref="F:System.Net.HttpStatusCode.BadGateway" /> 指示中间代理服务器从另一代理或原始服务器接收到错误响应。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.BadRequest">
      <summary vsli:raw="Equivalent to HTTP status 400. &lt;see cref=&quot;F:System.Net.HttpStatusCode.BadRequest&quot; /&gt; indicates that the request could not be understood by the server. &lt;see cref=&quot;F:System.Net.HttpStatusCode.BadRequest&quot; /&gt; is sent when no other error is applicable, or if the exact error is unknown or does not have its own error code.">等效于 HTTP 状态 400。 <see cref="F:System.Net.HttpStatusCode.BadRequest" /> 指示服务器未能识别请求。 如果没有其他适用的错误，或者不知道准确的错误或错误没有自己的错误代码，则发送 <see cref="F:System.Net.HttpStatusCode.BadRequest" />。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Conflict">
      <summary vsli:raw="Equivalent to HTTP status 409. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Conflict&quot; /&gt; indicates that the request could not be carried out because of a conflict on the server.">等效于 HTTP 状态 409。 <see cref="F:System.Net.HttpStatusCode.Conflict" /> 指示由于服务器上的冲突而未能执行请求。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Continue">
      <summary vsli:raw="Equivalent to HTTP status 100. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Continue&quot; /&gt; indicates that the client can continue with its request.">等效于 HTTP 状态 100。 <see cref="F:System.Net.HttpStatusCode.Continue" /> 指示客户端可能继续其请求。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Created">
      <summary vsli:raw="Equivalent to HTTP status 201. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Created&quot; /&gt; indicates that the request resulted in a new resource created before the response was sent.">等效于 HTTP 状态 201。 <see cref="F:System.Net.HttpStatusCode.Created" /> 指示请求导致在响应被发送前创建新资源。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.EarlyHints">
      <summary vsli:raw="Equivalent to HTTP status 103. &lt;see cref=&quot;F:System.Net.HttpStatusCode.EarlyHints&quot; /&gt; indicates to the client that the server is likely to send a final response with the header fields included in the informational response.">等效于 HTTP 状态 103。 <see cref="F:System.Net.HttpStatusCode.EarlyHints" /> 向客户端指示服务器可能会发送最终响应，其中标头字段包含在信息性响应中。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ExpectationFailed">
      <summary vsli:raw="Equivalent to HTTP status 417. &lt;see cref=&quot;F:System.Net.HttpStatusCode.ExpectationFailed&quot; /&gt; indicates that an expectation given in an Expect header could not be met by the server.">等效于 HTTP 状态 417。 <see cref="F:System.Net.HttpStatusCode.ExpectationFailed" /> 指示服务器未能符合 Expect 标头中给定的预期值。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.FailedDependency">
      <summary vsli:raw="Equivalent to HTTP status 424. &lt;see cref=&quot;F:System.Net.HttpStatusCode.FailedDependency&quot; /&gt; indicates that the method couldn't be performed on the resource because the requested action depended on another action and that action failed.">等效于 HTTP 状态 424。 <see cref="F:System.Net.HttpStatusCode.FailedDependency" /> 指示无法对资源执行该方法，因为请求的操作依赖于其他操作，并且该操作失败。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Forbidden">
      <summary vsli:raw="Equivalent to HTTP status 403. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Forbidden&quot; /&gt; indicates that the server refuses to fulfill the request.">等效于 HTTP 状态 403。 <see cref="F:System.Net.HttpStatusCode.Forbidden" /> 指示服务器拒绝满足请求。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Found">
      <summary vsli:raw="Equivalent to HTTP status 302. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Found&quot; /&gt; indicates that the requested information is located at the URI specified in the Location header. The default action when this status is received is to follow the Location header associated with the response. When the original request method was POST, the redirected request will use the GET method. &lt;c&gt;Found&lt;/c&gt; is a synonym for &lt;c&gt;Redirect&lt;/c&gt;.">等效于 HTTP 状态 302。 <see cref="F:System.Net.HttpStatusCode.Found" /> 指示请求的信息位于 Location 标头中指定的 URI 处。 接收到此状态时的默认操作为遵循与响应关联的 Location 标头。 原始请求方法为 POST 时，重定向的请求将使用 GET 方法。 <c>Found</c> 是 <c>Redirect</c> 的同义词。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.GatewayTimeout">
      <summary vsli:raw="Equivalent to HTTP status 504. &lt;see cref=&quot;F:System.Net.HttpStatusCode.GatewayTimeout&quot; /&gt; indicates that an intermediate proxy server timed out while waiting for a response from another proxy or the origin server.">等效于 HTTP 状态 504。 <see cref="F:System.Net.HttpStatusCode.GatewayTimeout" /> 指示中间代理服务器在等待来自另一个代理或原始服务器的响应时已超时。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Gone">
      <summary vsli:raw="Equivalent to HTTP status 410. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Gone&quot; /&gt; indicates that the requested resource is no longer available.">等效于 HTTP 状态 410。 <see cref="F:System.Net.HttpStatusCode.Gone" /> 指示请求的资源不再可用。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.HttpVersionNotSupported">
      <summary vsli:raw="Equivalent to HTTP status 505. &lt;see cref=&quot;F:System.Net.HttpStatusCode.HttpVersionNotSupported&quot; /&gt; indicates that the requested HTTP version is not supported by the server.">等效于 HTTP 状态 505。 <see cref="F:System.Net.HttpStatusCode.HttpVersionNotSupported" /> 指示服务器不支持请求的 HTTP 版本。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.IMUsed">
      <summary vsli:raw="Equivalent to HTTP status 226. &lt;see cref=&quot;F:System.Net.HttpStatusCode.IMUsed&quot; /&gt; indicates that the server has fulfilled a request for the resource, and the response is a representation of the result of one or more instance-manipulations applied to the current instance.">等效于 HTTP 状态 226。 <see cref="F:System.Net.HttpStatusCode.IMUsed" /> 指示服务器已执行对资源的请求，并且响应表示应用于当前实例的一个或多个实例操作的结果。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.InsufficientStorage">
      <summary vsli:raw="Equivalent to HTTP status 507. &lt;see cref=&quot;F:System.Net.HttpStatusCode.InsufficientStorage&quot; /&gt; indicates that the server is unable to store the representation needed to complete the request.">等效于 HTTP 状态 507。 <see cref="F:System.Net.HttpStatusCode.InsufficientStorage" /> 指示服务器无法存储完成请求所需的表示形式。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.InternalServerError">
      <summary vsli:raw="Equivalent to HTTP status 500. &lt;see cref=&quot;F:System.Net.HttpStatusCode.InternalServerError&quot; /&gt; indicates that a generic error has occurred on the server.">等效于 HTTP 状态 500。 <see cref="F:System.Net.HttpStatusCode.InternalServerError" /> 指示服务器上发生了一般错误。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.LengthRequired">
      <summary vsli:raw="Equivalent to HTTP status 411. &lt;see cref=&quot;F:System.Net.HttpStatusCode.LengthRequired&quot; /&gt; indicates that the required Content-length header is missing.">等效于 HTTP 状态 411。 <see cref="F:System.Net.HttpStatusCode.LengthRequired" /> 指示缺少必需的 Content-length 标头。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Locked">
      <summary vsli:raw="Equivalent to HTTP status 423. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Locked&quot; /&gt; indicates that the source or destination resource is locked.">等效于 HTTP 状态 423。 <see cref="F:System.Net.HttpStatusCode.Locked" /> 指示源或目标资源已锁定。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.LoopDetected">
      <summary vsli:raw="Equivalent to HTTP status 508. &lt;see cref=&quot;F:System.Net.HttpStatusCode.LoopDetected&quot; /&gt; indicates that the server terminated an operation because it encountered an infinite loop while processing a WebDAV request with &quot;Depth: infinity&quot;. This status code is meant for backward compatibility with clients not aware of the 208 status code &lt;see cref=&quot;F:System.Net.HttpStatusCode.AlreadyReported&quot; /&gt; appearing in multistatus response bodies.">等效于 HTTP 状态 508。 <see cref="F:System.Net.HttpStatusCode.LoopDetected" /> 指示服务器已终止操作，因为它在处理带有“Depth: infinity”的 WebDAV 请求时遇到了无限循环。 此状态代码用于与不知道多状态响应正文中出现 208 状态代码 <see cref="F:System.Net.HttpStatusCode.AlreadyReported" /> 的客户端进行后向兼容。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MethodNotAllowed">
      <summary vsli:raw="Equivalent to HTTP status 405. &lt;see cref=&quot;F:System.Net.HttpStatusCode.MethodNotAllowed&quot; /&gt; indicates that the request method (POST or GET) is not allowed on the requested resource.">等效于 HTTP 状态 405。 <see cref="F:System.Net.HttpStatusCode.MethodNotAllowed" /> 指示请求的资源上不允许请求方法（POST 或 GET）。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MisdirectedRequest">
      <summary vsli:raw="Equivalent to HTTP status 421. &lt;see cref=&quot;F:System.Net.HttpStatusCode.MisdirectedRequest&quot; /&gt; indicates that the request was directed at a server that is not able to produce a response.">等效于 HTTP 状态 421。 <see cref="F:System.Net.HttpStatusCode.MisdirectedRequest" /> 指示请求被定向到无法生成响应的服务器。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Moved">
      <summary vsli:raw="Equivalent to HTTP status 301. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Moved&quot; /&gt; indicates that the requested information has been moved to the URI specified in the Location header. The default action when this status is received is to follow the Location header associated with the response. When the original request method was POST, the redirected request will use the GET method. &lt;c&gt;Moved&lt;/c&gt; is a synonym for &lt;c&gt;MovedPermanently&lt;/c&gt;.">等效于 HTTP 状态 301。 <see cref="F:System.Net.HttpStatusCode.Moved" /> 指示请求的信息已移到 Location 头中指定的 URI 处。 接收到此状态时的默认操作为遵循与响应关联的 Location 标头。 原始请求方法为 POST 时，重定向的请求将使用 GET 方法。 <c>Moved</c> 是 <c>MovedPermanently</c> 的同义词。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MovedPermanently">
      <summary vsli:raw="Equivalent to HTTP status 301. &lt;see cref=&quot;F:System.Net.HttpStatusCode.MovedPermanently&quot; /&gt; indicates that the requested information has been moved to the URI specified in the Location header. The default action when this status is received is to follow the Location header associated with the response. &lt;c&gt;MovedPermanently&lt;/c&gt; is a synonym for &lt;c&gt;Moved&lt;/c&gt;.">等效于 HTTP 状态 301。 <see cref="F:System.Net.HttpStatusCode.MovedPermanently" /> 指示请求的信息已移到 Location 头中指定的 URI 处。 接收到此状态时的默认操作为遵循与响应关联的 Location 标头。 <c>MovedPermanently</c> 是 <c>Moved</c> 的同义词。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MultipleChoices">
      <summary vsli:raw="Equivalent to HTTP status 300. &lt;see cref=&quot;F:System.Net.HttpStatusCode.MultipleChoices&quot; /&gt; indicates that the requested information has multiple representations. The default action is to treat this status as a redirect and follow the contents of the Location header associated with this response. &lt;c&gt;MultipleChoices&lt;/c&gt; is a synonym for &lt;c&gt;Ambiguous&lt;/c&gt;.">等效于 HTTP 状态 300。 <see cref="F:System.Net.HttpStatusCode.MultipleChoices" /> 指示请求的信息有多种表示形式。 默认操作是将此状态视为重定向，并遵循与此响应关联的 Location 标头的内容。 <c>MultipleChoices</c> 是 <c>Ambiguous</c> 的同义词。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MultiStatus">
      <summary vsli:raw="Equivalent to HTTP status 207. &lt;see cref=&quot;F:System.Net.HttpStatusCode.MultiStatus&quot; /&gt; indicates multiple status codes for a single response during a Web Distributed Authoring and Versioning (WebDAV) operation. The response body contains XML that describes the status codes.">等效于 HTTP 状态 207。 <see cref="F:System.Net.HttpStatusCode.MultiStatus" /> 指示 Web 分布式创作和版本管理 (WebDAV) 操作期间的单个响应有多个状态代码。 响应正文包含描述状态代码的 XML。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NetworkAuthenticationRequired">
      <summary vsli:raw="Equivalent to HTTP status 511. &lt;see cref=&quot;F:System.Net.HttpStatusCode.NetworkAuthenticationRequired&quot; /&gt; indicates that the client needs to authenticate to gain network access; it's intended for use by intercepting proxies used to control access to the network.">等效于 HTTP 状态 511。 <see cref="F:System.Net.HttpStatusCode.NetworkAuthenticationRequired" /> 指示客户端需要进行身份验证才能获得网络访问权限；它旨在用于拦截用于控制网络访问权限的代理。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NoContent">
      <summary vsli:raw="Equivalent to HTTP status 204. &lt;see cref=&quot;F:System.Net.HttpStatusCode.NoContent&quot; /&gt; indicates that the request has been successfully processed and that the response is intentionally blank.">等效于 HTTP 状态 204。 <see cref="F:System.Net.HttpStatusCode.NoContent" /> 指示已成功处理请求并且响应已被设定为无内容。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NonAuthoritativeInformation">
      <summary vsli:raw="Equivalent to HTTP status 203. &lt;see cref=&quot;F:System.Net.HttpStatusCode.NonAuthoritativeInformation&quot; /&gt; indicates that the returned meta information is from a cached copy instead of the origin server and therefore may be incorrect.">等效于 HTTP 状态 203。 <see cref="F:System.Net.HttpStatusCode.NonAuthoritativeInformation" /> 指示返回的元信息来自缓存副本而不是原始服务器，因此可能不正确。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotAcceptable">
      <summary vsli:raw="Equivalent to HTTP status 406. &lt;see cref=&quot;F:System.Net.HttpStatusCode.NotAcceptable&quot; /&gt; indicates that the client has indicated with Accept headers that it will not accept any of the available representations of the resource.">等效于 HTTP 状态 406。 <see cref="F:System.Net.HttpStatusCode.NotAcceptable" /> 指示客户端已用 Accept 标头指示将不接受资源的任何可用表示形式。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotExtended">
      <summary vsli:raw="Equivalent to HTTP status 510. &lt;see cref=&quot;F:System.Net.HttpStatusCode.NotExtended&quot; /&gt; indicates that further extensions to the request are required for the server to fulfill it.">等效于 HTTP 状态 510。 <see cref="F:System.Net.HttpStatusCode.NotExtended" /> 指示服务器需要进一步扩展请求才能使服务器完成该请求。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotFound">
      <summary vsli:raw="Equivalent to HTTP status 404. &lt;see cref=&quot;F:System.Net.HttpStatusCode.NotFound&quot; /&gt; indicates that the requested resource does not exist on the server.">等效于 HTTP 状态 404。 <see cref="F:System.Net.HttpStatusCode.NotFound" /> 指示请求的资源不在服务器上。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotImplemented">
      <summary vsli:raw="Equivalent to HTTP status 501. &lt;see cref=&quot;F:System.Net.HttpStatusCode.NotImplemented&quot; /&gt; indicates that the server does not support the requested function.">等效于 HTTP 状态 501。 <see cref="F:System.Net.HttpStatusCode.NotImplemented" /> 指示服务器不支持请求的函数。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotModified">
      <summary vsli:raw="Equivalent to HTTP status 304. &lt;see cref=&quot;F:System.Net.HttpStatusCode.NotModified&quot; /&gt; indicates that the client's cached copy is up to date. The contents of the resource are not transferred.">等效于 HTTP 状态 304。 <see cref="F:System.Net.HttpStatusCode.NotModified" /> 指示客户端的缓存副本是最新的。 未传输此资源的内容。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.OK">
      <summary vsli:raw="Equivalent to HTTP status 200. &lt;see cref=&quot;F:System.Net.HttpStatusCode.OK&quot; /&gt; indicates that the request succeeded and that the requested information is in the response. This is the most common status code to receive.">等效于 HTTP 状态 200。 <see cref="F:System.Net.HttpStatusCode.OK" /> 指示请求成功，且请求的信息包含在响应中。 这是最常接收的状态代码。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PartialContent">
      <summary vsli:raw="Equivalent to HTTP status 206. &lt;see cref=&quot;F:System.Net.HttpStatusCode.PartialContent&quot; /&gt; indicates that the response is a partial response as requested by a GET request that includes a byte range.">等效于 HTTP 状态 206。 <see cref="F:System.Net.HttpStatusCode.PartialContent" /> 指示响应是包括字节范围的 GET 请求所请求的部分响应。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PaymentRequired">
      <summary vsli:raw="Equivalent to HTTP status 402. &lt;see cref=&quot;F:System.Net.HttpStatusCode.PaymentRequired&quot; /&gt; is reserved for future use.">等效于 HTTP 状态 402。 保留 <see cref="F:System.Net.HttpStatusCode.PaymentRequired" /> 以供将来使用。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PermanentRedirect">
      <summary vsli:raw="Equivalent to HTTP status 308. &lt;see cref=&quot;F:System.Net.HttpStatusCode.PermanentRedirect&quot; /&gt; indicates that the request information is located at the URI specified in the Location header. The default action when this status is received is to follow the Location header associated with the response. When the original request method was POST, the redirected request will also use the POST method.">等效于 HTTP 状态 308。 <see cref="F:System.Net.HttpStatusCode.PermanentRedirect" /> 指示请求信息位于 Location 标头中指定的 URI 处。 接收到此状态时的默认操作为遵循与响应关联的 Location 标头。 原始请求方法为 POST 时，重定向的请求还将使用 POST 方法。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PreconditionFailed">
      <summary vsli:raw="Equivalent to HTTP status 412. &lt;see cref=&quot;F:System.Net.HttpStatusCode.PreconditionFailed&quot; /&gt; indicates that a condition set for this request failed, and the request cannot be carried out. Conditions are set with conditional request headers like If-Match, If-None-Match, or If-Unmodified-Since.">等效于 HTTP 状态 412。 <see cref="F:System.Net.HttpStatusCode.PreconditionFailed" /> 指示此请求的条件集失败，并且无法执行该请求。使用条件请求标头设置添加，如：If-Match、If-None-Match 或 If-Unmodified-Since。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PreconditionRequired">
      <summary vsli:raw="Equivalent to HTTP status 428. &lt;see cref=&quot;F:System.Net.HttpStatusCode.PreconditionRequired&quot; /&gt; indicates that the server requires the request to be conditional.">等效于 HTTP 状态 428。 <see cref="F:System.Net.HttpStatusCode.PreconditionRequired" /> 指示服务器要求的请求为条件请求。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Processing">
      <summary vsli:raw="Equivalent to HTTP status 102. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Processing&quot; /&gt; indicates that the server has accepted the complete request but hasn't completed it yet.">等效于 HTTP 状态 102。 <see cref="F:System.Net.HttpStatusCode.Processing" /> 指示服务器已接受完成请求，但尚未完成该请求。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ProxyAuthenticationRequired">
      <summary vsli:raw="Equivalent to HTTP status 407. &lt;see cref=&quot;F:System.Net.HttpStatusCode.ProxyAuthenticationRequired&quot; /&gt; indicates that the requested proxy requires authentication. The Proxy-authenticate header contains the details of how to perform the authentication.">等效于 HTTP 状态 407。 <see cref="F:System.Net.HttpStatusCode.ProxyAuthenticationRequired" /> 指示请求的代理要求身份验证。 Proxy-authenticate 标头包含如何执行身份验证的详细信息。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Redirect">
      <summary vsli:raw="Equivalent to HTTP status 302. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Redirect&quot; /&gt; indicates that the requested information is located at the URI specified in the Location header. The default action when this status is received is to follow the Location header associated with the response. When the original request method was POST, the redirected request will use the GET method. &lt;c&gt;Redirect&lt;/c&gt; is a synonym for &lt;c&gt;Found&lt;/c&gt;.">等效于 HTTP 状态 302。 <see cref="F:System.Net.HttpStatusCode.Redirect" /> 指示请求的信息位于 Location 标头中指定的 URI 处。 接收到此状态时的默认操作为遵循与响应关联的 Location 标头。 原始请求方法为 POST 时，重定向的请求将使用 GET 方法。 <c>Redirect</c> 是 <c>Found</c> 的同义词。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RedirectKeepVerb">
      <summary vsli:raw="Equivalent to HTTP status 307. &lt;see cref=&quot;F:System.Net.HttpStatusCode.RedirectKeepVerb&quot; /&gt; indicates that the request information is located at the URI specified in the Location header. The default action when this status is received is to follow the Location header associated with the response. When the original request method was POST, the redirected request will also use the POST method. &lt;c&gt;RedirectKeepVerb&lt;/c&gt; is a synonym for &lt;c&gt;TemporaryRedirect&lt;/c&gt;.">等效于 HTTP 状态 307。 <see cref="F:System.Net.HttpStatusCode.RedirectKeepVerb" /> 指示请求信息位于 Location 标头中指定的 URI 处。 接收到此状态时的默认操作为遵循与响应关联的 Location 标头。 原始请求方法为 POST 时，重定向的请求还将使用 POST 方法。 <c>RedirectKeepVerb</c> 是 <c>TemporaryRedirect</c> 的同义词。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RedirectMethod">
      <summary vsli:raw="Equivalent to HTTP status 303. &lt;see cref=&quot;F:System.Net.HttpStatusCode.RedirectMethod&quot; /&gt; automatically redirects the client to the URI specified in the Location header as the result of a POST. The request to the resource specified by the Location header will be made with a GET. &lt;c&gt;RedirectMethod&lt;/c&gt; is a synonym for &lt;c&gt;SeeOther&lt;/c&gt;.">等效于 HTTP 状态 303。 作为 POST 的结果，<see cref="F:System.Net.HttpStatusCode.RedirectMethod" /> 将客户端自动重定向到 Location 标头中指定的 URI。 用 GET 生成对 Location 标头所指定的资源的请求。 <c>RedirectMethod</c> 是 <c>SeeOther</c> 的同义词。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestedRangeNotSatisfiable">
      <summary vsli:raw="Equivalent to HTTP status 416. &lt;see cref=&quot;F:System.Net.HttpStatusCode.RequestedRangeNotSatisfiable&quot; /&gt; indicates that the range of data requested from the resource cannot be returned, either because the beginning of the range is before the beginning of the resource, or the end of the range is after the end of the resource.">等效于 HTTP 状态 416。 <see cref="F:System.Net.HttpStatusCode.RequestedRangeNotSatisfiable" /> 指示无法返回从资源请求的数据范围，因为范围的开头在资源的开头之前，或因为范围的结尾在资源的结尾之后。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestEntityTooLarge">
      <summary vsli:raw="Equivalent to HTTP status 413. &lt;see cref=&quot;F:System.Net.HttpStatusCode.RequestEntityTooLarge&quot; /&gt; indicates that the request is too large for the server to process.">等效于 HTTP 状态 413。 <see cref="F:System.Net.HttpStatusCode.RequestEntityTooLarge" /> 指示请求太大，服务器无法处理。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestHeaderFieldsTooLarge">
      <summary vsli:raw="Equivalent to HTTP status 431. &lt;see cref=&quot;F:System.Net.HttpStatusCode.RequestHeaderFieldsTooLarge&quot; /&gt; indicates that the server is unwilling to process the request because its header fields (either an individual header field or all the header fields collectively) are too large.">等效于 HTTP 状态 431。 <see cref="F:System.Net.HttpStatusCode.RequestHeaderFieldsTooLarge" /> 指示服务器不愿意处理请求，因为它的标头字段（单个标头字段或所有标头字段合计）太大。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestTimeout">
      <summary vsli:raw="Equivalent to HTTP status 408. &lt;see cref=&quot;F:System.Net.HttpStatusCode.RequestTimeout&quot; /&gt; indicates that the client did not send a request within the time the server was expecting the request.">等效于 HTTP 状态 408。 <see cref="F:System.Net.HttpStatusCode.RequestTimeout" /> 指示客户端没有在服务器期望请求的时间内发送请求。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestUriTooLong">
      <summary vsli:raw="Equivalent to HTTP status 414. &lt;see cref=&quot;F:System.Net.HttpStatusCode.RequestUriTooLong&quot; /&gt; indicates that the URI is too long.">等效于 HTTP 状态 414。 <see cref="F:System.Net.HttpStatusCode.RequestUriTooLong" /> 指示 URI 太长。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ResetContent">
      <summary vsli:raw="Equivalent to HTTP status 205. &lt;see cref=&quot;F:System.Net.HttpStatusCode.ResetContent&quot; /&gt; indicates that the client should reset (not reload) the current resource.">等效于 HTTP 状态 205。 <see cref="F:System.Net.HttpStatusCode.ResetContent" /> 指示客户端应重置（而非重新加载）当前资源。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.SeeOther">
      <summary vsli:raw="Equivalent to HTTP status 303. &lt;see cref=&quot;F:System.Net.HttpStatusCode.SeeOther&quot; /&gt; automatically redirects the client to the URI specified in the Location header as the result of a POST. The request to the resource specified by the Location header will be made with a GET. &lt;c&gt;SeeOther&lt;/c&gt; is a synonym for &lt;c&gt;RedirectMethod&lt;/c&gt;.">等效于 HTTP 状态 303。 作为 POST 的结果，<see cref="F:System.Net.HttpStatusCode.SeeOther" /> 将客户端自动重定向到 Location 标头中指定的 URI。 用 GET 生成对 Location 标头所指定的资源的请求。 <c>SeeOther</c> 是 <c>RedirectMethod</c> 的同义词</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ServiceUnavailable">
      <summary vsli:raw="Equivalent to HTTP status 503. &lt;see cref=&quot;F:System.Net.HttpStatusCode.ServiceUnavailable&quot; /&gt; indicates that the server is temporarily unavailable, usually due to high load or maintenance.">等效于 HTTP 状态 503。 <see cref="F:System.Net.HttpStatusCode.ServiceUnavailable" /> 指示服务器暂时不可用，通常是由于过多加载或维护。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.SwitchingProtocols">
      <summary vsli:raw="Equivalent to HTTP status 101. &lt;see cref=&quot;F:System.Net.HttpStatusCode.SwitchingProtocols&quot; /&gt; indicates that the protocol version or protocol is being changed.">等效于 HTTP 状态 101。 <see cref="F:System.Net.HttpStatusCode.SwitchingProtocols" /> 指示正在更改协议版本或协议。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.TemporaryRedirect">
      <summary vsli:raw="Equivalent to HTTP status 307. &lt;see cref=&quot;F:System.Net.HttpStatusCode.TemporaryRedirect&quot; /&gt; indicates that the request information is located at the URI specified in the Location header. The default action when this status is received is to follow the Location header associated with the response. When the original request method was POST, the redirected request will also use the POST method. &lt;c&gt;TemporaryRedirect&lt;/c&gt; is a synonym for &lt;c&gt;RedirectKeepVerb&lt;/c&gt;.">等效于 HTTP 状态 307。 <see cref="F:System.Net.HttpStatusCode.TemporaryRedirect" /> 指示请求信息位于 Location 标头中指定的 URI 处。 接收到此状态时的默认操作为遵循与响应关联的 Location 标头。 原始请求方法为 POST 时，重定向的请求还将使用 POST 方法。 <c>TemporaryRedirect</c> 是 <c>RedirectKeepVerb</c> 的同义词。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.TooManyRequests">
      <summary vsli:raw="Equivalent to HTTP status 429. &lt;see cref=&quot;F:System.Net.HttpStatusCode.TooManyRequests&quot; /&gt; indicates that the user has sent too many requests in a given amount of time.">等效于 HTTP 状态 429。 <see cref="F:System.Net.HttpStatusCode.TooManyRequests" /> 指示用户在给定时间内发送了太多请求。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Unauthorized">
      <summary vsli:raw="Equivalent to HTTP status 401. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Unauthorized&quot; /&gt; indicates that the requested resource requires authentication. The WWW-Authenticate header contains the details of how to perform the authentication.">等效于 HTTP 状态 401。 <see cref="F:System.Net.HttpStatusCode.Unauthorized" /> 指示请求的资源要求身份验证。 WWW-Authenticate 标头包含如何执行身份验证的详细信息。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.UnavailableForLegalReasons">
      <summary vsli:raw="Equivalent to HTTP status 451. &lt;see cref=&quot;F:System.Net.HttpStatusCode.UnavailableForLegalReasons&quot; /&gt; indicates that the server is denying access to the resource as a consequence of a legal demand.">等效于 HTTP 状态 451。 <see cref="F:System.Net.HttpStatusCode.UnavailableForLegalReasons" /> 指示服务器由于法律要求而拒绝访问资源。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.UnprocessableEntity">
      <summary vsli:raw="Equivalent to HTTP status 422. &lt;see cref=&quot;F:System.Net.HttpStatusCode.UnprocessableEntity&quot; /&gt; indicates that the request was well-formed but was unable to be followed due to semantic errors.&#xA;        UnprocessableEntity is a synonym for UnprocessableContent.">等效于 HTTP 状态 422。 <see cref="F:System.Net.HttpStatusCode.UnprocessableEntity" /> 指示请求格式正确，但由于语义错误，无法遵循该请求。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.UnsupportedMediaType">
      <summary vsli:raw="Equivalent to HTTP status 415. &lt;see cref=&quot;F:System.Net.HttpStatusCode.UnsupportedMediaType&quot; /&gt; indicates that the request is an unsupported type.">等效于 HTTP 状态 415。 <see cref="F:System.Net.HttpStatusCode.UnsupportedMediaType" /> 指示请求是不受支持的类型。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Unused">
      <summary vsli:raw="Equivalent to HTTP status 306. &lt;see cref=&quot;F:System.Net.HttpStatusCode.Unused&quot; /&gt; is a proposed extension to the HTTP/1.1 specification that is not fully specified.">等效于 HTTP 状态 306。 <see cref="F:System.Net.HttpStatusCode.Unused" /> 是未完全指定的 HTTP/1.1 规范的建议扩展。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.UpgradeRequired">
      <summary vsli:raw="Equivalent to HTTP status 426. &lt;see cref=&quot;F:System.Net.HttpStatusCode.UpgradeRequired&quot; /&gt; indicates that the client should switch to a different protocol such as TLS/1.0.">等效于 HTTP 状态 426。 <see cref="F:System.Net.HttpStatusCode.UpgradeRequired" /> 指示客户端应切换为诸如 TLS/1.0 之类的其他协议。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.UseProxy">
      <summary vsli:raw="Equivalent to HTTP status 305. &lt;see cref=&quot;F:System.Net.HttpStatusCode.UseProxy&quot; /&gt; indicates that the request should use the proxy server at the URI specified in the Location header.">等效于 HTTP 状态 305。 <see cref="F:System.Net.HttpStatusCode.UseProxy" /> 指示请求应使用位于 Location 标头中指定的 URI 的代理服务器。</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.VariantAlsoNegotiates">
      <summary vsli:raw="Equivalent to HTTP status 506. &lt;see cref=&quot;F:System.Net.HttpStatusCode.VariantAlsoNegotiates&quot; /&gt; indicates that the chosen variant resource is configured to engage in transparent content negotiation itself and, therefore, isn't a proper endpoint in the negotiation process.">等效于 HTTP 状态 506。 <see cref="F:System.Net.HttpStatusCode.VariantAlsoNegotiates" /> 指示所选的变体资源配置为参与透明内容协商本身，因此在协商过程中不是正确的终结点。</summary>
    </member>
    <member name="T:System.Net.HttpVersion">
      <summary vsli:raw="Defines the HTTP version numbers that are supported by the &lt;see cref=&quot;T:System.Net.HttpWebRequest&quot; /&gt; and &lt;see cref=&quot;T:System.Net.HttpWebResponse&quot; /&gt; classes.">定义 <see cref="T:System.Net.HttpWebRequest" /> 和 <see cref="T:System.Net.HttpWebResponse" /> 类支持的 HTTP 版本号。</summary>
    </member>
    <member name="F:System.Net.HttpVersion.Unknown">
      <summary vsli:raw="Defines a &lt;see cref=&quot;T:System.Version&quot; /&gt; instance for an unknown HTTP version.">定义用于未知 HTTP 版本的 <see cref="T:System.Version" /> 实例。</summary>
    </member>
    <member name="F:System.Net.HttpVersion.Version10">
      <summary vsli:raw="Defines a &lt;see cref=&quot;T:System.Version&quot; /&gt; instance for HTTP 1.0.">定义用于 HTTP 1.0 的 <see cref="T:System.Version" /> 实例。</summary>
    </member>
    <member name="F:System.Net.HttpVersion.Version11">
      <summary vsli:raw="Defines a &lt;see cref=&quot;T:System.Version&quot; /&gt; instance for HTTP 1.1.">定义用于 HTTP 1.1 的 <see cref="T:System.Version" /> 实例。</summary>
    </member>
    <member name="F:System.Net.HttpVersion.Version20">
      <summary vsli:raw="Defines a &lt;see cref=&quot;T:System.Version&quot; /&gt; instance for HTTP 2.0.">定义用于 HTTP 2.0 的 <see cref="T:System.Version" /> 实例。</summary>
    </member>
    <member name="T:System.Net.ICredentials">
      <summary vsli:raw="Provides the base authentication interface for retrieving credentials for Web client authentication.">提供用于检索 Web 客户端身份验证的凭据的基本身份验证接口。</summary>
    </member>
    <member name="M:System.Net.ICredentials.GetCredential(System.Uri,System.String)">
      <summary vsli:raw="Returns a &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; object that is associated with the specified URI, and authentication type.">返回与指定的 URI 关联的 <see cref="T:System.Net.NetworkCredential" /> 对象，以及身份验证类型。</summary>
      <param name="uri" vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; that the client is providing authentication for.">客户端为其提供身份验证的 <see cref="T:System.Uri" />。</param>
      <param name="authType" vsli:raw="The type of authentication, as defined in the &lt;see cref=&quot;P:System.Net.IAuthenticationModule.AuthenticationType&quot; /&gt; property.">
        <see cref="P:System.Net.IAuthenticationModule.AuthenticationType" /> 属性中定义的身份验证类型。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; that is associated with the specified URI and authentication type, or, if no credentials are available, &lt;see langword=&quot;null&quot; /&gt;.">与指定的 URI 和身份验证类型关联的 <see cref="T:System.Net.NetworkCredential" />；如果没有可用的凭据，则为 <see langword="null" />。</returns>
    </member>
    <member name="T:System.Net.ICredentialsByHost">
      <summary vsli:raw="Provides the interface for retrieving credentials for a host, port, and authentication type.">提供用于检索主机、端口和身份验证类型的凭据的接口。</summary>
    </member>
    <member name="M:System.Net.ICredentialsByHost.GetCredential(System.String,System.Int32,System.String)">
      <summary vsli:raw="Returns the credential for the specified host, port, and authentication protocol.">返回指定的主机、端口和身份验证协议的凭据。</summary>
      <param name="host" vsli:raw="The host computer that is authenticating the client.">对客户端进行身份验证的主机。</param>
      <param name="port" vsli:raw="The port on &lt;paramref name=&quot;host&quot; /&gt; that the client will communicate with.">客户端将与之通信的 <paramref name="host" /> 上的端口。</param>
      <param name="authenticationType" vsli:raw="The authentication protocol.">身份验证协议。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; for the specified host, port, and authentication protocol, or &lt;see langword=&quot;null&quot; /&gt; if there are no credentials available for the specified host, port, and authentication protocol.">指定的主机、端口和身份验证协议的 <see cref="T:System.Net.NetworkCredential" />；如果指定的主机、端口和身份验证协议没有可用的凭据，则为 <see langword="null" />。</returns>
    </member>
    <member name="T:System.Net.IPAddress">
      <summary vsli:raw="Provides an Internet Protocol (IP) address.">提供 Internet 协议 (IP) 地址。</summary>
    </member>
    <member name="F:System.Net.IPAddress.Any">
      <summary vsli:raw="Provides an IP address that indicates that the server must listen for client activity on all network interfaces. This field is read-only.">提供一个 IP 地址，指示服务器必须侦听所有网络接口上的客户端活动。 此字段为只读。</summary>
    </member>
    <member name="F:System.Net.IPAddress.Broadcast">
      <summary vsli:raw="Provides the IP broadcast address. This field is read-only.">提供 IP 广播地址。 此字段为只读。</summary>
    </member>
    <member name="F:System.Net.IPAddress.IPv6Any">
      <summary vsli:raw="The &lt;see cref=&quot;M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)&quot; /&gt; method uses the &lt;see cref=&quot;F:System.Net.IPAddress.IPv6Any&quot; /&gt; field to indicate that a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; must listen for client activity on all network interfaces.">
        <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> 方法使用 <see cref="F:System.Net.IPAddress.IPv6Any" /> 字段指示 <see cref="T:System.Net.Sockets.Socket" /> 必须侦听所有网络接口上的客户端活动。</summary>
    </member>
    <member name="F:System.Net.IPAddress.IPv6Loopback">
      <summary vsli:raw="Provides the IP loopback address. This property is read-only.">提供 IP 环回地址。 此属性是只读的。</summary>
    </member>
    <member name="F:System.Net.IPAddress.IPv6None">
      <summary vsli:raw="Provides an IP address that indicates that no network interface should be used. This property is read-only.">提供指示不应使用任何网络接口的 IP 地址。 此属性是只读的。</summary>
    </member>
    <member name="F:System.Net.IPAddress.Loopback">
      <summary vsli:raw="Provides the IP loopback address. This field is read-only.">提供 IP 环回地址。 此字段为只读。</summary>
    </member>
    <member name="F:System.Net.IPAddress.None">
      <summary vsli:raw="Provides an IP address that indicates that no network interface should be used. This field is read-only.">提供指示不应使用任何网络接口的 IP 地址。 此字段为只读。</summary>
    </member>
    <member name="M:System.Net.IPAddress.#ctor(System.Byte[])">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; class with the address specified as a &lt;see cref=&quot;T:System.Byte&quot; /&gt; array.">使用指定为 <see cref="T:System.Net.IPAddress" /> 数组的地址初始化 <see cref="T:System.Byte" /> 类的新实例。</summary>
      <param name="address" vsli:raw="The byte array value of the IP address.">IP 地址的字节数组值。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;address&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="address" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;address&quot; /&gt; contains a bad IP address.">
        <paramref name="address" /> 包含错误的 IP 地址。</exception>
    </member>
    <member name="M:System.Net.IPAddress.#ctor(System.Byte[],System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; class with the address specified as a &lt;see cref=&quot;T:System.Byte&quot; /&gt; array and the specified scope identifier.">使用指定为 <see cref="T:System.Net.IPAddress" /> 数组的地址和指定的范围标识符初始化 <see cref="T:System.Byte" /> 类的新实例。</summary>
      <param name="address" vsli:raw="The byte array value of the IP address.">IP 地址的字节数组值。</param>
      <param name="scopeid" vsli:raw="The long value of the scope identifier.">范围标识符的长值。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;address&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="address" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;address&quot; /&gt; contains a bad IP address.">
        <paramref name="address" /> 包含错误的 IP 地址。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;scopeid&quot; /&gt; &amp;lt; 0 or&#xA;&#xA; &lt;paramref name=&quot;scopeid&quot; /&gt; &amp;gt; 0x00000000FFFFFFFF">
        <paramref name="scopeid" />&lt; 0 或 
 <paramref name="scopeid" />&gt; 0x00000000FFFFFFFF</exception>
    </member>
    <member name="M:System.Net.IPAddress.#ctor(System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; class with the address specified as an &lt;see cref=&quot;T:System.Int64&quot; /&gt;.">使用指定为 <see cref="T:System.Net.IPAddress" /> 的地址初始化 <see cref="T:System.Int64" /> 类的新实例。</summary>
      <param name="newAddress" vsli:raw="The long value of the IP address. For example, the value 0x2414188f in big-endian format would be the IP address &quot;143.24.20.36&quot;.">IP 地址的长值。 例如，大端格式的值 0x2414188f 可能为 IP 地址“143.24.20.36”。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;newAddress&quot; /&gt; &amp;lt; 0 or&#xA;&#xA; &lt;paramref name=&quot;newAddress&quot; /&gt; &amp;gt; 0x00000000FFFFFFFF">
        <paramref name="newAddress" />&lt; 0 或 
 <paramref name="newAddress" />&gt; 0x00000000FFFFFFFF</exception>
    </member>
    <member name="M:System.Net.IPAddress.#ctor(System.ReadOnlySpan{System.Byte})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; class with the address specified as a byte span.">使用指定为字节范围的地址初始化 <see cref="T:System.Net.IPAddress" /> 类的新实例。</summary>
      <param name="address" vsli:raw="The byte representation of the IP address, in network byte order, with the most significant byte first in index position 0.">按网络字节顺序表示 IP 地址的字节，其最高有效字节在索引位置 0 前面。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;address&quot; /&gt; contains a bad IP address.">
        <paramref name="address" /> 包含错误的 IP 地址。</exception>
    </member>
    <member name="M:System.Net.IPAddress.#ctor(System.ReadOnlySpan{System.Byte},System.Int64)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; class with the address specified as a byte span and the specified scope identifier.">使用指定为字节范围的地址和指定的范围标识符初始化 <see cref="T:System.Net.IPAddress" /> 类的新实例。</summary>
      <param name="address" vsli:raw="The byte span value of the IP address.">IP 地址的字节跨度值。</param>
      <param name="scopeid" vsli:raw="The long value of the scope identifier.">范围标识符的长值。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;address&quot; /&gt; contains a bad IP address.">
        <paramref name="address" /> 包含错误的 IP 地址。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;scopeid&quot; /&gt; &amp;lt; 0&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;scopeid&quot; /&gt; &amp;gt; 0x00000000FFFFFFFF">
        <paramref name="scopeid" /> &lt; 0

- 或 -

<paramref name="scopeid" />&gt; 0x00000000FFFFFFFF</exception>
    </member>
    <member name="M:System.Net.IPAddress.Equals(System.Object)">
      <summary vsli:raw="Compares two IP addresses.">比较两个 IP 地址。</summary>
      <param name="comparand" vsli:raw="An &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; instance to compare to the current instance.">要与当前实例比较的 <see cref="T:System.Net.IPAddress" /> 实例。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the two addresses are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果两个地址相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.IPAddress.GetAddressBytes">
      <summary vsli:raw="Provides a copy of the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; as an array of bytes in network order.">以字节数组形式提供 <see cref="T:System.Net.IPAddress" /> 的副本。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Byte&quot; /&gt; array.">
        <see cref="T:System.Byte" /> 数组。</returns>
    </member>
    <member name="M:System.Net.IPAddress.GetHashCode">
      <summary vsli:raw="Returns a hash value for an IP address.">返回 IP 地址的哈希值。</summary>
      <returns vsli:raw="An integer hash value.">整数哈希值。</returns>
    </member>
    <member name="M:System.Net.IPAddress.HostToNetworkOrder(System.Int16)">
      <summary vsli:raw="Converts a short value from host byte order to network byte order.">将短值由主机字节顺序转换为网络字节顺序。</summary>
      <param name="host" vsli:raw="The number to convert, expressed in host byte order.">以主机字节顺序表示的要转换的数字。</param>
      <returns vsli:raw="A short value, expressed in network byte order.">以网络字节顺序表示的短值。</returns>
    </member>
    <member name="M:System.Net.IPAddress.HostToNetworkOrder(System.Int32)">
      <summary vsli:raw="Converts an integer value from host byte order to network byte order.">将整数值由主机字节顺序转换为网络字节顺序。</summary>
      <param name="host" vsli:raw="The number to convert, expressed in host byte order.">以主机字节顺序表示的要转换的数字。</param>
      <returns vsli:raw="An integer value, expressed in network byte order.">以网络字节顺序表示的整数值。</returns>
    </member>
    <member name="M:System.Net.IPAddress.HostToNetworkOrder(System.Int64)">
      <summary vsli:raw="Converts a long value from host byte order to network byte order.">将长值由主机字节顺序转换为网络字节顺序。</summary>
      <param name="host" vsli:raw="The number to convert, expressed in host byte order.">以主机字节顺序表示的要转换的数字。</param>
      <returns vsli:raw="A long value, expressed in network byte order.">以网络字节顺序表示的长值。</returns>
    </member>
    <member name="M:System.Net.IPAddress.IsLoopback(System.Net.IPAddress)">
      <summary vsli:raw="Indicates whether the specified IP address is the loopback address.">指示指定的 IP 地址是否为环回地址。</summary>
      <param name="address" vsli:raw="An IP address.">IP 地址。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;address&quot; /&gt; is the loopback address; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="address" /> 是环回地址，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.IPAddress.MapToIPv4">
      <summary vsli:raw="Maps the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; object to an IPv4 address.">将 <see cref="T:System.Net.IPAddress" /> 对象映射到 IPv4 地址。</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt;.&#xA;&#xA; An IPv4 address.">返回 <see cref="T:System.Net.IPAddress" />。  
  
IPv4 地址。</returns>
    </member>
    <member name="M:System.Net.IPAddress.MapToIPv6">
      <summary vsli:raw="Maps the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; object to an IPv6 address.">将 <see cref="T:System.Net.IPAddress" /> 对象映射到 IPv6 地址。</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt;.&#xA;&#xA; An IPv6 address.">返回 <see cref="T:System.Net.IPAddress" />。  
  
IPv6 地址。</returns>
    </member>
    <member name="M:System.Net.IPAddress.NetworkToHostOrder(System.Int16)">
      <summary vsli:raw="Converts a short value from network byte order to host byte order.">将短值由网络字节顺序转换为主机字节顺序。</summary>
      <param name="network" vsli:raw="The number to convert, expressed in network byte order.">以网络字节顺序表示的要转换的数字。</param>
      <returns vsli:raw="A short value, expressed in host byte order.">以主机字节顺序表示的短值。</returns>
    </member>
    <member name="M:System.Net.IPAddress.NetworkToHostOrder(System.Int32)">
      <summary vsli:raw="Converts an integer value from network byte order to host byte order.">将整数值由网络字节顺序转换为主机字节顺序。</summary>
      <param name="network" vsli:raw="The number to convert, expressed in network byte order.">以网络字节顺序表示的要转换的数字。</param>
      <returns vsli:raw="An integer value, expressed in host byte order.">以主机字节顺序表示的整数值。</returns>
    </member>
    <member name="M:System.Net.IPAddress.NetworkToHostOrder(System.Int64)">
      <summary vsli:raw="Converts a long value from network byte order to host byte order.">将长值由网络字节顺序转换为主机字节顺序。</summary>
      <param name="network" vsli:raw="The number to convert, expressed in network byte order.">以网络字节顺序表示的要转换的数字。</param>
      <returns vsli:raw="A long value, expressed in host byte order.">以主机字节顺序表示的长值。</returns>
    </member>
    <member name="M:System.Net.IPAddress.Parse(System.ReadOnlySpan{System.Char})">
      <summary vsli:raw="Converts an IP address represented as a character span to an &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; instance.">将以字符范围表示的 IP 地址转换为 <see cref="T:System.Net.IPAddress" /> 实例。</summary>
      <param name="ipSpan" vsli:raw="A character span that contains an IP address in dotted-quad notation for IPv4 and in colon-hexadecimal notation for IPv6." />
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;ipString&quot; /&gt; is not a valid IP address.">
        <paramref name="ipString" /> 不是有效的 IP 地址。</exception>
      <returns vsli:raw="The converted IP address.">转换后的 IP 地址。</returns>
    </member>
    <member name="M:System.Net.IPAddress.Parse(System.String)">
      <summary vsli:raw="Converts an IP address string to an &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; instance.">将 IP 地址字符串转换为 <see cref="T:System.Net.IPAddress" /> 实例。</summary>
      <param name="ipString" vsli:raw="A string that contains an IP address in dotted-quad notation for IPv4 and in colon-hexadecimal notation for IPv6.">包含 IP 地址（IPv4 使用点分四组表示法，IPv6 使用冒号十六进制表示法）的字符串。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;ipString&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="ipString" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;ipString&quot; /&gt; is not a valid IP address.">
        <paramref name="ipString" /> 不是有效的 IP 地址。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; instance.">一个 <see cref="T:System.Net.IPAddress" /> 实例。</returns>
    </member>
    <member name="M:System.Net.IPAddress.ToString">
      <summary vsli:raw="Converts an Internet address to its standard notation.">将 Internet 地址转换为标准表示法。</summary>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="The address family is &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetworkV6&quot; /&gt; and the address is bad.">该地址族为 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />，而且该地址是错误的。</exception>
      <returns vsli:raw="A string that contains the IP address in either IPv4 dotted-quad or in IPv6 colon-hexadecimal notation.">包含 IP 地址（IPv4 使用点分四组表示法，IPv6 使用冒号十六进制表示法）的字符串。</returns>
    </member>
    <member name="M:System.Net.IPAddress.TryFormat(System.Span{System.Char},System.Int32@)">
      <summary vsli:raw="Tries to format the current IP address into the provided span.">尝试将当前 IP 地址格式化为提供的范围。</summary>
      <param name="destination" vsli:raw="When this method returns, the IP address as a span of characters.">此方法返回时，IP 地址为一段字符。</param>
      <param name="charsWritten" vsli:raw="When this method returns, the number of characters written into the span.">此方法返回时，写入范围的字符数。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the formatting was successful; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果格式设置成功，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.IPAddress.TryParse(System.ReadOnlySpan{System.Char},System.Net.IPAddress@)">
      <summary vsli:raw="Tries to parse a span of characters into a value.">确定指定的字节范围是否表示有效的 IP 地址。</summary>
      <param name="address" vsli:raw="When this method returns, the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; version of the byte span.">此方法返回时，字节范围的 <see cref="T:System.Net.IPAddress" /> 版本。</param>
      <param name="ipSpan" vsli:raw="The byte span to parse." />
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;ipSpan&quot; /&gt; was able to be parsed as an IP address; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="ipString" /> 能解析 IP 地址，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.IPAddress.TryParse(System.String,System.Net.IPAddress@)">
      <summary vsli:raw="Determines whether a string is a valid IP address.">确定字符串是否为有效的 IP 地址。</summary>
      <param name="ipString" vsli:raw="The string to parse.">要验证的字符串。</param>
      <param name="address" vsli:raw="The &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; version of the string.">字符串的 <see cref="T:System.Net.IPAddress" /> 版本。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;ipString&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="ipString" /> 为 null。</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;ipString&quot; /&gt; was able to be parsed as an IP address; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="ipString" /> 能解析 IP 地址，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.IPAddress.TryWriteBytes(System.Span{System.Byte},System.Int32@)">
      <summary vsli:raw="Tries to write the current IP address into a span of bytes in network order.">尝试将当前 IP 地址写为一段字节。</summary>
      <param name="destination" vsli:raw="When this method returns, the IP address as a span of bytes.">此方法返回时，IP 地址为一段字节。</param>
      <param name="bytesWritten" vsli:raw="When this method returns, the number of bytes written into the span.">此方法返回时，写入范围的字节数。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the IP address is successfully written to the given span; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 IP 地址已成功写入给定范围，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.IPAddress.Address">
      <summary vsli:raw="An Internet Protocol (IP) address.">Internet 协议 (IP) 地址。</summary>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="The address family is &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetworkV6&quot; /&gt;.">该地址族为 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />。</exception>
      <returns vsli:raw="The long value of the IP address.">IP 地址的长值。</returns>
    </member>
    <member name="P:System.Net.IPAddress.AddressFamily">
      <summary vsli:raw="Gets the address family of the IP address.">获取 IP 地址的地址族。</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetwork&quot; /&gt; for IPv4 or &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetworkV6&quot; /&gt; for IPv6.">对于 IPv4，返回 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />；对于 IPv6，返回 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />。</returns>
    </member>
    <member name="P:System.Net.IPAddress.IsIPv4MappedToIPv6">
      <summary vsli:raw="Gets whether the IP address is an IPv4-mapped IPv6 address.">了解 IP 地址是否为 IPv4 映射的 IPv6 地址。</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.&#xA;&#xA; &lt;see langword=&quot;true&quot; /&gt; if the IP address is an IPv4-mapped IPv6 address; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">返回 <see cref="T:System.Boolean" />。  
  
 如果 IP 地址为 IPv4 映射的 IPv6 地址，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.IPAddress.IsIPv6LinkLocal">
      <summary vsli:raw="Gets whether the address is an IPv6 link local address.">了解地址是否为 IPv6 链路本地地址。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the IP address is an IPv6 link local address; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 IP 地址为 IPv6 链接本地地址，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.IPAddress.IsIPv6Multicast">
      <summary vsli:raw="Gets whether the address is an IPv6 multicast global address.">了解地址是否为 IPv6 多播全局地址。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the IP address is an IPv6 multicast global address; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 IP 地址为 IPv6 多路广播全局地址，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.IPAddress.IsIPv6SiteLocal">
      <summary vsli:raw="Gets whether the address is an IPv6 site local address.">了解地址是否为 IPv6 站点本地地址。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the IP address is an IPv6 site local address; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 IP 地址为 IPv6 站点本地地址，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.IPAddress.IsIPv6Teredo">
      <summary vsli:raw="Gets whether the address is an IPv6 Teredo address.">了解地址是否为 IPv6 Teredo 地址。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the IP address is an IPv6 Teredo address; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 IP 地址为 IPv6 Teredo 地址，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.IPAddress.ScopeId">
      <summary vsli:raw="Gets or sets the IPv6 address scope identifier.">获取或设置 IPv6 地址范围标识符。</summary>
      <exception cref="T:System.Net.Sockets.SocketException" vsli:raw="&lt;see langword=&quot;AddressFamily&quot; /&gt; = &lt;see langword=&quot;InterNetwork&quot; /&gt;.">
        <see langword="AddressFamily" /> = <see langword="InterNetwork" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;scopeId&quot; /&gt; &amp;lt; 0&#xA;&#xA;-or-&#xA;&#xA;&lt;paramref name=&quot;scopeId&quot; /&gt; &amp;gt; 0x00000000FFFFFFFF">
        <paramref name="scopeId" /> &lt; 0 
- 或 - 
<paramref name="scopeId" />&gt; 0x00000000FFFFFFFF</exception>
      <returns vsli:raw="A long integer that specifies the scope of the address.">指定地址范围的长整数。</returns>
    </member>
    <member name="T:System.Net.IPEndPoint">
      <summary vsli:raw="Represents a network endpoint as an IP address and a port number.">将网络终结点表示为 IP 地址和端口号。</summary>
    </member>
    <member name="F:System.Net.IPEndPoint.MaxPort">
      <summary vsli:raw="Specifies the maximum value that can be assigned to the &lt;see cref=&quot;P:System.Net.IPEndPoint.Port&quot; /&gt; property. The MaxPort value is set to 0x0000FFFF. This field is read-only.">指定可以分配给 <see cref="P:System.Net.IPEndPoint.Port" /> 属性的最大值。 MaxPort 值设置为 0x0000FFFF。 此字段为只读。</summary>
    </member>
    <member name="F:System.Net.IPEndPoint.MinPort">
      <summary vsli:raw="Specifies the minimum value that can be assigned to the &lt;see cref=&quot;P:System.Net.IPEndPoint.Port&quot; /&gt; property. This field is read-only.">指定可以分配给 <see cref="P:System.Net.IPEndPoint.Port" /> 属性的最小值。 此字段为只读。</summary>
    </member>
    <member name="M:System.Net.IPEndPoint.#ctor(System.Int64,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; class with the specified address and port number.">用指定的地址和端口号初始化 <see cref="T:System.Net.IPEndPoint" /> 类的新实例。</summary>
      <param name="address" vsli:raw="The IP address of the Internet host. For example, the value 0x2414188f in big-endian format would be the IP address &quot;143.24.20.36&quot;.">Internet 主机的 IP 地址。 例如，大端格式的值 0x2414188f 可能为 IP 地址“143.24.20.36”。</param>
      <param name="port" vsli:raw="The port number associated with the &lt;paramref name=&quot;address&quot; /&gt;, or 0 to specify any available port. &lt;paramref name=&quot;port&quot; /&gt; is in host order.">与 <paramref name="address" /> 关联的端口号，或为 0 以指定任何可用端口。 <paramref name="port" /> 以主机顺序排列。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;port&quot; /&gt; is less than &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;port&quot; /&gt; is greater than &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;address&quot; /&gt; is less than 0 or greater than 0x00000000FFFFFFFF.">
        <paramref name="port" /> 小于 <see cref="F:System.Net.IPEndPoint.MinPort" />。  
  
- 或 - 
 <paramref name="port" /> 大于 <see cref="F:System.Net.IPEndPoint.MaxPort" />。  
  
- 或 - 
 <paramref name="address" /> 小于 0 或大于 0x00000000FFFFFFFF。</exception>
    </member>
    <member name="M:System.Net.IPEndPoint.#ctor(System.Net.IPAddress,System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; class with the specified address and port number.">用指定的地址和端口号初始化 <see cref="T:System.Net.IPEndPoint" /> 类的新实例。</summary>
      <param name="address" vsli:raw="An &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt;.">
        <see cref="T:System.Net.IPAddress" />。</param>
      <param name="port" vsli:raw="The port number associated with the &lt;paramref name=&quot;address&quot; /&gt;, or 0 to specify any available port. &lt;paramref name=&quot;port&quot; /&gt; is in host order.">与 <paramref name="address" /> 关联的端口号，或为 0 以指定任何可用端口。 <paramref name="port" /> 以主机顺序排列。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;address&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="address" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;port&quot; /&gt; is less than &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;port&quot; /&gt; is greater than &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt;.">
        <paramref name="port" /> 小于 <see cref="F:System.Net.IPEndPoint.MinPort" />。  
  
- 或 - 
 <paramref name="port" /> 大于 <see cref="F:System.Net.IPEndPoint.MaxPort" />。  
  
- 或 - 
 <paramref name="address" /> 小于 0 或大于 0x00000000FFFFFFFF。</exception>
    </member>
    <member name="M:System.Net.IPEndPoint.Create(System.Net.SocketAddress)">
      <summary vsli:raw="Creates an endpoint from a socket address.">从套接字地址创建终结点。</summary>
      <param name="socketAddress" vsli:raw="The &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; to use for the endpoint.">用于终结点的 <see cref="T:System.Net.SocketAddress" />。</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The AddressFamily of &lt;paramref name=&quot;socketAddress&quot; /&gt; is not equal to the AddressFamily of the current instance.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;socketAddress&quot; /&gt;.Size &amp;lt; 8.">
        <paramref name="socketAddress" /> 的 AddressFamily 与当前实例的 AddressFamily 不相等。  
  
- 或 - 
 <paramref name="socketAddress" />.Size &lt; 8。</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; instance using the specified socket address.">使用指定套接字地址的 <see cref="T:System.Net.EndPoint" /> 实例。</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">确定指定的 <see cref="T:System.Object" /> 是否等同于当前的 <see cref="T:System.Object" />。</summary>
      <param name="comparand" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare with the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">要与当前的 <see cref="T:System.Object" /> 进行比较的 <see cref="T:System.Object" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see cref=&quot;T:System.Object&quot; /&gt; is equal to the current &lt;see cref=&quot;T:System.Object&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see langword="true" /> 等于当前的 <see cref="T:System.Object" />，则为 <see cref="T:System.Object" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.GetHashCode">
      <summary vsli:raw="Returns a hash value for a &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; instance.">返回 <see cref="T:System.Net.IPEndPoint" /> 实例的哈希值。</summary>
      <returns vsli:raw="An integer hash value.">整数哈希值。</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.Parse(System.ReadOnlySpan{System.Char})">
      <summary vsli:raw="Converts an IP network endpoint (address and port) represented as a read-only span to an &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; instance.">将表示为只读范围的 IP 网络终结点（地址和端口）转换为 <see cref="T:System.Net.IPEndPoint" /> 实例。</summary>
      <param name="s" vsli:raw="A read-only span that contains an IP endpoint in dotted-quad notation or network byte order for IPv4 and in colon-hexadecimal notation for IPv6.">包含 IP 终结点（IPv4 使用点分四组表示法或网络字节顺序，IPv6 使用冒号十六进制表示法）的只读范围。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is not a valid IP endpoint.">
        <paramref name="s" /> 不是有效的 IP 终结点。</exception>
      <returns vsli:raw="The object representation of an IP network endpoint.">IP 网络终结点的对象表示形式。</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.Parse(System.String)">
      <summary vsli:raw="Converts an IP network endpoint (address and port) represented as a string to an &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; instance.">将表示为字符串的 IP 网络终结点（地址和端口）转换为 <see cref="T:System.Net.IPEndPoint" /> 实例。</summary>
      <param name="s" vsli:raw="A string that contains an IP endpoint in dotted-quad notation or network byte order for IPv4 and in colon-hexadecimal notation for IPv6.">包含 IP 终结点（IPv4 使用点分四组表示法或网络字节顺序，IPv6 使用冒号十六进制表示法）的字符串。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="s" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.FormatException" vsli:raw="&lt;paramref name=&quot;s&quot; /&gt; is not a valid IP endpoint.">
        <paramref name="s" /> 不是有效的 IP 终结点。</exception>
      <returns vsli:raw="The object representation of an IP network endpoint.">IP 网络终结点的对象表示形式。</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.Serialize">
      <summary vsli:raw="Serializes endpoint information into a &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; instance.">将终结点信息序列化为 <see cref="T:System.Net.SocketAddress" /> 实例。</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; instance containing the socket address for the endpoint.">一个 <see cref="T:System.Net.SocketAddress" /> 实例，包含终结点的套接字地址。</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.ToString">
      <summary vsli:raw="Returns the IP address and port number of the specified endpoint.">返回指定终结点的 IP 地址和端口号。</summary>
      <returns vsli:raw="A string containing the IP address and the port number of the specified endpoint (for example, 192.168.1.2:80).">包含指定终结点（例如，192.168.1.2:80）的 IP 地址和端口号的字符串。</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.TryParse(System.ReadOnlySpan{System.Char},System.Net.IPEndPoint@)">
      <summary vsli:raw="Tries to convert an IP network endpoint (address and port) represented as a read-only span to its &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; equivalent, and returns a value that indicates whether the conversion succeeded.">尝试将表示为只读范围的 IP 网络终结点（地址和端口）转换为其 <see cref="T:System.Net.IPEndPoint" /> 等效项，返回指示转换是否成功的值。</summary>
      <param name="s" vsli:raw="The IP endpoint to validate.">要验证的 IP 终结点。</param>
      <param name="result" vsli:raw="When this method returns, the &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; version of &lt;paramref name=&quot;s&quot; /&gt;.">此方法返回时，为 <paramref name="s" /> 的 <see cref="T:System.Net.IPEndPoint" /> 版本。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;s&quot; /&gt; can be parsed as an IP endpoint; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="s" /> 可分析为 IP 终结点，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.TryParse(System.String,System.Net.IPEndPoint@)">
      <summary vsli:raw="Tries to convert an IP network endpoint (address and port) represented as a string to its &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; equivalent, and returns a value that indicates whether the conversion succeeded.">尝试将表示为字符串的 IP 网络终结点（地址和端口）转换为其 <see cref="T:System.Net.IPEndPoint" /> 等效项，返回指示转换是否成功的值。</summary>
      <param name="s" vsli:raw="The IP endpoint to validate.">要验证的 IP 终结点。</param>
      <param name="result" vsli:raw="When this method returns, the &lt;see cref=&quot;T:System.Net.IPEndPoint&quot; /&gt; version of &lt;paramref name=&quot;s&quot; /&gt;.">此方法返回时，为 <paramref name="s" /> 的 <see cref="T:System.Net.IPEndPoint" /> 版本。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if &lt;paramref name=&quot;s&quot; /&gt; can be parsed as an IP endpoint; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果 <paramref name="s" /> 可分析为 IP 终结点，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.IPEndPoint.Address">
      <summary vsli:raw="Gets or sets the IP address of the endpoint.">获取或设置终结点的 IP 地址。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; instance containing the IP address of the endpoint.">包含终结点的 IP 地址的 <see cref="T:System.Net.IPAddress" /> 实例。</returns>
    </member>
    <member name="P:System.Net.IPEndPoint.AddressFamily">
      <summary vsli:raw="Gets the Internet Protocol (IP) address family.">获取网际协议 (IP) 地址族。</summary>
      <returns vsli:raw="Returns &lt;see cref=&quot;F:System.Net.Sockets.AddressFamily.InterNetwork&quot; /&gt;.">返回 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />。</returns>
    </member>
    <member name="P:System.Net.IPEndPoint.Port">
      <summary vsli:raw="Gets or sets the port number of the endpoint.">获取或设置终结点的端口号。</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The value that was specified for a set operation is less than &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt; or greater than &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt;.">为设置操作指定的值小于 <see cref="F:System.Net.IPEndPoint.MinPort" /> 或大于 <see cref="F:System.Net.IPEndPoint.MaxPort" />。</exception>
      <returns vsli:raw="An integer value in the range &lt;see cref=&quot;F:System.Net.IPEndPoint.MinPort&quot; /&gt; to &lt;see cref=&quot;F:System.Net.IPEndPoint.MaxPort&quot; /&gt; indicating the port number of the endpoint.">介于 <see cref="F:System.Net.IPEndPoint.MinPort" /> 到 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 之间的整数值，指示终结点的端口号。</returns>
    </member>
    <member name="T:System.Net.IWebProxy">
      <summary vsli:raw="Provides the base interface for implementation of proxy access for the &lt;see cref=&quot;T:System.Net.Http.HttpClient&quot; /&gt; class.">提供基接口以实现对 <see cref="T:System.Net.WebRequest" /> 类的代理访问。</summary>
    </member>
    <member name="M:System.Net.IWebProxy.GetProxy(System.Uri)">
      <summary vsli:raw="Returns the URI of a proxy.">返回代理的 URI。</summary>
      <param name="destination" vsli:raw="A &lt;see cref=&quot;T:System.Uri&quot; /&gt; that specifies the requested Internet resource.">
        <see cref="T:System.Uri" />，指定请求的 Internet 资源。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Uri&quot; /&gt; instance that contains the URI of the proxy used to contact &lt;paramref name=&quot;destination&quot; /&gt;; otherwise null or &lt;paramref name=&quot;destination&quot; /&gt; itself.">
        <see cref="T:System.Uri" /> 实例，它包含用于与 <paramref name="destination" /> 联系的代理的 URI。</returns>
    </member>
    <member name="M:System.Net.IWebProxy.IsBypassed(System.Uri)">
      <summary vsli:raw="Indicates that the proxy should not be used for the specified host.">指示代理不应用于指定的主机。</summary>
      <param name="host" vsli:raw="The &lt;see cref=&quot;T:System.Uri&quot; /&gt; of the host to check for proxy use.">要检查代理使用情况的主机的 <see cref="T:System.Uri" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the proxy server should not be used for &lt;paramref name=&quot;host&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果代理服务器不应用于 <paramref name="host" />，则为 <see langword="true" />；否则，为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Net.IWebProxy.Credentials">
      <summary vsli:raw="The credentials to submit to the proxy server for authentication.">要提交给代理服务器进行身份验证的凭据。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Net.ICredentials&quot; /&gt; instance that contains the credentials that are needed to authenticate a request to the proxy server.">
        <see cref="T:System.Net.ICredentials" /> 实例，它包含对代理服务器请求进行身份验证所需的凭据。</returns>
    </member>
    <member name="T:System.Net.NetworkCredential">
      <summary vsli:raw="Provides credentials for password-based authentication schemes such as basic, digest, NTLM, and Kerberos authentication.">为基于密码的身份验证方案（如基本、摘要式、NTLM 和 Kerberos 身份验证）提供凭据。</summary>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; class.">初始化 <see cref="T:System.Net.NetworkCredential" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor(System.String,System.Security.SecureString)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; class with the specified user name and password.">用指定的用户名和密码初始化 <see cref="T:System.Net.NetworkCredential" /> 类的新实例。</summary>
      <param name="userName" vsli:raw="The user name associated with the credentials.">与凭据关联的用户名。</param>
      <param name="password" vsli:raw="The password for the user name associated with the credentials.">与凭据关联的用户名的密码。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; class is not supported on this platform.">
        <see cref="T:System.Security.SecureString" /> 在此平台上不受支持。</exception>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor(System.String,System.Security.SecureString,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; class with the specified user name, password, and domain.">用指定的用户名、密码和域初始化 <see cref="T:System.Net.NetworkCredential" /> 类的新实例。</summary>
      <param name="userName" vsli:raw="The user name associated with the credentials.">与凭据关联的用户名。</param>
      <param name="password" vsli:raw="The password for the user name associated with the credentials.">与凭据关联的用户名的密码。</param>
      <param name="domain" vsli:raw="The domain associated with these credentials.">与这些凭据关联的域。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; class is not supported on this platform.">
        <see cref="T:System.Security.SecureString" /> 在此平台上不受支持。</exception>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor(System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; class with the specified user name and password.">用指定的用户名和密码初始化 <see cref="T:System.Net.NetworkCredential" /> 类的新实例。</summary>
      <param name="userName" vsli:raw="The user name associated with the credentials.">与凭据关联的用户名。</param>
      <param name="password" vsli:raw="The password for the user name associated with the credentials.">与凭据关联的用户名的密码。</param>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor(System.String,System.String,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; class with the specified user name, password, and domain.">用指定的用户名、密码和域初始化 <see cref="T:System.Net.NetworkCredential" /> 类的新实例。</summary>
      <param name="userName" vsli:raw="The user name associated with the credentials.">与凭据关联的用户名。</param>
      <param name="password" vsli:raw="The password for the user name associated with the credentials.">与凭据关联的用户名的密码。</param>
      <param name="domain" vsli:raw="The domain associated with these credentials.">与这些凭据关联的域。</param>
    </member>
    <member name="M:System.Net.NetworkCredential.GetCredential(System.String,System.Int32,System.String)">
      <summary vsli:raw="Returns an instance of the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; class for the specified host, port, and authentication type.">针对指定的主机、端口和身份验证类型返回 <see cref="T:System.Net.NetworkCredential" /> 类的实例。</summary>
      <param name="host" vsli:raw="The host computer that authenticates the client.">对该客户端进行身份验证的主机。</param>
      <param name="port" vsli:raw="The port on the &lt;paramref name=&quot;host&quot; /&gt; that the client communicates with.">与客户端通信的 <paramref name="host" /> 上的端口。</param>
      <param name="authenticationType" vsli:raw="The type of authentication requested, as defined in the &lt;see cref=&quot;P:System.Net.IAuthenticationModule.AuthenticationType&quot; /&gt; property.">
        <see cref="P:System.Net.IAuthenticationModule.AuthenticationType" /> 属性中定义的所请求的身份验证类型。</param>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; for the specified host, port, and authentication protocol, or &lt;see langword=&quot;null&quot; /&gt; if there are no credentials available for the specified host, port, and authentication protocol.">指定的主机、端口和身份验证协议的 <see cref="T:System.Net.NetworkCredential" />；如果指定的主机、端口和身份验证协议没有可用的凭据，则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Net.NetworkCredential.GetCredential(System.Uri,System.String)">
      <summary vsli:raw="Returns an instance of the &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; class for the specified Uniform Resource Identifier (URI) and authentication type.">针对指定的统一资源标识符 (URI) 和身份验证类型返回 <see cref="T:System.Net.NetworkCredential" /> 类的实例。</summary>
      <param name="uri" vsli:raw="The URI that the client provides authentication for.">客户端为其提供身份验证的 URI。</param>
      <param name="authenticationType" vsli:raw="" />
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; object.">
        <see cref="T:System.Net.NetworkCredential" /> 对象。</returns>
    </member>
    <member name="P:System.Net.NetworkCredential.Domain">
      <summary vsli:raw="Gets or sets the domain or computer name that verifies the credentials.">获取或设置验证凭据的域名或计算机名。</summary>
      <returns vsli:raw="The name of the domain associated with the credentials.">与凭据关联的域名。</returns>
    </member>
    <member name="P:System.Net.NetworkCredential.Password">
      <summary vsli:raw="Gets or sets the password for the user name associated with the credentials.">获取或设置与凭据关联的用户名的密码。</summary>
      <returns vsli:raw="The password associated with the credentials. If this &lt;see cref=&quot;T:System.Net.NetworkCredential&quot; /&gt; instance was initialized with the &lt;paramref name=&quot;password&quot; /&gt; parameter set to &lt;see langword=&quot;null&quot; /&gt;, then the &lt;see cref=&quot;P:System.Net.NetworkCredential.Password&quot; /&gt; property will return an empty string.">与凭据关联的密码。 如果已通过设置为 <see langword="null" /> 的 <paramref name="password" /> 参数初始化此 <see cref="T:System.Net.NetworkCredential" /> 实例，则 <see cref="P:System.Net.NetworkCredential.Password" /> 属性将返回空字符串。</returns>
    </member>
    <member name="P:System.Net.NetworkCredential.SecurePassword">
      <summary vsli:raw="Gets or sets the password as a &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; instance.">获取或设置 <see cref="T:System.Security.SecureString" /> 实例形式的密码。</summary>
      <exception cref="T:System.NotSupportedException" vsli:raw="The &lt;see cref=&quot;T:System.Security.SecureString&quot; /&gt; class is not supported on this platform.">
        <see cref="T:System.Security.SecureString" /> 在此平台上不受支持。</exception>
      <returns vsli:raw="The password for the user name associated with the credentials.">与凭据关联的用户名的密码。</returns>
    </member>
    <member name="P:System.Net.NetworkCredential.UserName">
      <summary vsli:raw="Gets or sets the user name associated with the credentials.">获取或设置与凭据关联的用户名。</summary>
      <returns vsli:raw="The user name associated with the credentials.">与凭据关联的用户名。</returns>
    </member>
    <member name="T:System.Net.NetworkInformation.IPAddressCollection">
      <summary vsli:raw="Stores a set of &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; types.">存储一组 <see cref="T:System.Net.IPAddress" /> 类型。</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.NetworkInformation.IPAddressCollection&quot; /&gt; class.">初始化 <see cref="T:System.Net.NetworkInformation.IPAddressCollection" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.Add(System.Net.IPAddress)">
      <summary vsli:raw="Throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; because this operation is not supported for this collection.">由于该集合不支持此操作，因此引发 <see cref="T:System.NotSupportedException" />。</summary>
      <param name="address" vsli:raw="The object to be added to the collection.">要添加到集合的对象。</param>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.Clear">
      <summary vsli:raw="Throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; because this operation is not supported for this collection.">由于该集合不支持此操作，因此引发 <see cref="T:System.NotSupportedException" />。</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.Contains(System.Net.IPAddress)">
      <summary vsli:raw="Checks whether the collection contains the specified &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; object.">检查集合中是否包含指定的 <see cref="T:System.Net.IPAddress" /> 对象。</summary>
      <param name="address" vsli:raw="The &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; object to be searched in the collection.">要在集合中搜索的 <see cref="T:System.Net.IPAddress" /> 对象。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; object exists in the collection; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果集合中存在 <see cref="T:System.Net.IPAddress" /> 对象，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.CopyTo(System.Net.IPAddress[],System.Int32)">
      <summary vsli:raw="Copies the elements in this collection to a one-dimensional array of type &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt;.">将此集合中的元素复制到 <see cref="T:System.Net.IPAddress" /> 类型的一维数组。</summary>
      <param name="array" vsli:raw="A one-dimensional array that receives a copy of the collection.">接收集合副本的一维数组。</param>
      <param name="offset" vsli:raw="The zero-based index in &lt;paramref name=&quot;array&quot; /&gt; at which the copy begins.">
        <paramref name="array" /> 中从零开始的索引，在此处开始复制。</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="array" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;offset&quot; /&gt; is less than zero.">
        <paramref name="offset" /> 小于零。</exception>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;array&quot; /&gt; is multidimensional.  &#xA;&#xA;-or-  &#xA;&#xA;The number of elements in this &lt;see cref=&quot;T:System.Net.NetworkInformation.IPAddressCollection&quot; /&gt; is greater than the available space from &lt;paramref name=&quot;offset&quot; /&gt; to the end of the destination &lt;paramref name=&quot;array&quot; /&gt;.">
        <paramref name="array" /> 是多维的。  

- 或 -

此 <see cref="T:System.Net.NetworkInformation.IPAddressCollection" /> 中的元素数大于从 <paramref name="offset" /> 到目标 <paramref name="array" /> 末尾之间的可用空间。</exception>
      <exception cref="T:System.InvalidCastException" vsli:raw="The elements in this &lt;see cref=&quot;T:System.Net.NetworkInformation.IPAddressCollection&quot; /&gt; cannot be cast automatically to the type of the destination &lt;paramref name=&quot;array&quot; /&gt;.">此 <see cref="T:System.Net.NetworkInformation.IPAddressCollection" /> 中的元素无法自动转换为目标 <paramref name="array" /> 的类型。</exception>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.GetEnumerator">
      <summary vsli:raw="Returns an object that can be used to iterate through this collection.">返回一个可用于循环访问此集合的对象。</summary>
      <returns vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; interface and provides access to the &lt;see cref=&quot;T:System.Net.NetworkInformation.IPAddressCollection&quot; /&gt; types in this collection.">一个对象，它实现了 <see cref="T:System.Collections.IEnumerator" /> 接口，并提供对此集合中的 <see cref="T:System.Net.NetworkInformation.IPAddressCollection" /> 类型的访问。</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.Remove(System.Net.IPAddress)">
      <summary vsli:raw="Throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt; because this operation is not supported for this collection.">由于该集合不支持此操作，因此引发 <see cref="T:System.NotSupportedException" />。</summary>
      <param name="address" vsli:raw="The object to be removed.">要移除的对象。</param>
      <returns vsli:raw="Always throws a &lt;see cref=&quot;T:System.NotSupportedException&quot; /&gt;.">总是引发 <see cref="T:System.NotSupportedException" />。</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary vsli:raw="Returns an object that can be used to iterate through this collection.">返回一个可用于循环访问此集合的对象。</summary>
      <returns vsli:raw="An object that implements the &lt;see cref=&quot;T:System.Collections.IEnumerator&quot; /&gt; interface and provides access to the &lt;see cref=&quot;T:System.Net.NetworkInformation.IPAddressCollection&quot; /&gt; types in this collection.">一个对象，它实现了 <see cref="T:System.Collections.IEnumerator" /> 接口，并提供对此集合中的 <see cref="T:System.Net.NetworkInformation.IPAddressCollection" /> 类型的访问。</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPAddressCollection.Count">
      <summary vsli:raw="Gets the number of &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; types in this collection.">获取此集合中的 <see cref="T:System.Net.IPAddress" /> 类型数。</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Int32&quot; /&gt; value that contains the number of &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; types in this collection.">一个包含此集合中 <see cref="T:System.Int32" /> 类型的数目的 <see cref="T:System.Net.IPAddress" /> 值。</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPAddressCollection.IsReadOnly">
      <summary vsli:raw="Gets a value that indicates whether access to this collection is read-only.">获取一个值，该值指示对此集合的访问是否为只读。</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; in all cases.">在所有情况下均为 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPAddressCollection.Item(System.Int32)">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; at the specific index of the collection.">获取集合中指定索引处的 <see cref="T:System.Net.IPAddress" />。</summary>
      <param name="index" vsli:raw="The index of interest.">相关索引。</param>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Net.IPAddress&quot; /&gt; at the specific index in the collection.">位于集合中指定索引处的 <see cref="T:System.Net.IPAddress" />。</returns>
    </member>
    <member name="T:System.Net.Security.AuthenticationLevel">
      <summary vsli:raw="Specifies client requirements for authentication and impersonation when using the &lt;see cref=&quot;T:System.Net.WebRequest&quot; /&gt; class and derived classes to request a resource.">指定使用 <see cref="T:System.Net.WebRequest" /> 类和派生类请求资源时，客户端对身份验证和模拟的要求。</summary>
    </member>
    <member name="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested">
      <summary vsli:raw="The client and server should be authenticated. The request does not fail if the server is not authenticated. To determine whether mutual authentication occurred, check the value of the &lt;see cref=&quot;P:System.Net.WebResponse.IsMutuallyAuthenticated&quot; /&gt; property.">应对客户端和服务器进行身份验证。 如果未对服务器进行身份验证，请求不会失败。 若要确定是否已进行相互身份验证，请检查 <see cref="P:System.Net.WebResponse.IsMutuallyAuthenticated" /> 属性的值。</summary>
    </member>
    <member name="F:System.Net.Security.AuthenticationLevel.MutualAuthRequired">
      <summary vsli:raw="The client and server should be authenticated. If the server is not authenticated, your application will receive an &lt;see cref=&quot;T:System.IO.IOException&quot; /&gt; with a &lt;see cref=&quot;T:System.Net.ProtocolViolationException&quot; /&gt; inner exception that indicates that mutual authentication failed.">应对客户端和服务器进行身份验证。 如果服务器未进行身份验证，应用程序将收到一个 <see cref="T:System.IO.IOException" />，它具有一个指示相互身份验证已失败的 <see cref="T:System.Net.ProtocolViolationException" /> 内部异常。</summary>
    </member>
    <member name="F:System.Net.Security.AuthenticationLevel.None">
      <summary vsli:raw="No authentication is required for the client and server.">不要求对客户端和服务器进行身份验证。</summary>
    </member>
    <member name="T:System.Net.Security.SslPolicyErrors">
      <summary vsli:raw="Enumerates Secure Socket Layer (SSL) policy errors.">枚举安全套接字层 (SSL) 策略错误。</summary>
    </member>
    <member name="F:System.Net.Security.SslPolicyErrors.None">
      <summary vsli:raw="No SSL policy errors.">无 SSL 策略错误。</summary>
    </member>
    <member name="F:System.Net.Security.SslPolicyErrors.RemoteCertificateChainErrors">
      <summary vsli:raw="&lt;see cref=&quot;P:System.Security.Cryptography.X509Certificates.X509Chain.ChainStatus&quot; /&gt; has returned a non empty array.">
        <see cref="P:System.Security.Cryptography.X509Certificates.X509Chain.ChainStatus" /> 已返回非空数组。</summary>
    </member>
    <member name="F:System.Net.Security.SslPolicyErrors.RemoteCertificateNameMismatch">
      <summary vsli:raw="Certificate name mismatch.">证书名不匹配。</summary>
    </member>
    <member name="F:System.Net.Security.SslPolicyErrors.RemoteCertificateNotAvailable">
      <summary vsli:raw="Certificate not available.">证书不可用。</summary>
    </member>
    <member name="T:System.Net.SocketAddress">
      <summary vsli:raw="Stores serialized information from &lt;see cref=&quot;T:System.Net.EndPoint&quot; /&gt; derived classes.">存储 <see cref="T:System.Net.EndPoint" /> 派生类的序列化信息。</summary>
    </member>
    <member name="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; class for the given address family.">为给定的地址族创建 <see cref="T:System.Net.SocketAddress" /> 类的新实例。</summary>
      <param name="family" vsli:raw="An &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; enumerated value.">
        <see cref="T:System.Net.Sockets.AddressFamily" /> 枚举值。</param>
    </member>
    <member name="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily,System.Int32)">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt; class using the specified address family and buffer size.">使用指定的地址族和缓冲区大小创建 <see cref="T:System.Net.SocketAddress" /> 类的新实例。</summary>
      <param name="family" vsli:raw="An &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; enumerated value.">
        <see cref="T:System.Net.Sockets.AddressFamily" /> 枚举值。</param>
      <param name="size" vsli:raw="The number of bytes to allocate for the underlying buffer.">要为基础缓冲区分配的字节数。</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;size&quot; /&gt; is less than 2. These 2 bytes are needed to store &lt;paramref name=&quot;family&quot; /&gt;.">
        <paramref name="size" /> 小于 2。 这两字节需要存储 <paramref name="family" />。</exception>
    </member>
    <member name="M:System.Net.SocketAddress.Equals(System.Object)">
      <summary vsli:raw="Determines whether the specified &lt;see langword=&quot;Object&quot; /&gt; is equal to the current &lt;see langword=&quot;Object&quot; /&gt;.">确定指定的 <see langword="Object" /> 是否等同于当前的 <see langword="Object" />。</summary>
      <param name="comparand" vsli:raw="The &lt;see cref=&quot;T:System.Object&quot; /&gt; to compare with the current &lt;see langword=&quot;Object&quot; /&gt;.">要与当前的 <see cref="T:System.Object" /> 进行比较的 <see langword="Object" />。</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the specified &lt;see langword=&quot;Object&quot; /&gt; is equal to the current &lt;see langword=&quot;Object&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">如果指定的 <see langword="true" /> 等于当前的 <see langword="Object" />，则为 <see langword="Object" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Net.SocketAddress.GetHashCode">
      <summary vsli:raw="Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.">充当特定类型的哈希函数，适用于哈希算法以及哈希表之类的数据结构中。</summary>
      <returns vsli:raw="A hash code for the current &lt;see cref=&quot;T:System.Object&quot; /&gt;.">当前 <see cref="T:System.Object" /> 的哈希代码。</returns>
    </member>
    <member name="M:System.Net.SocketAddress.ToString">
      <summary vsli:raw="Returns information about the socket address.">返回有关套接字地址的信息。</summary>
      <returns vsli:raw="A string that contains information about the &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt;.">一个字符串，包含有关 <see cref="T:System.Net.SocketAddress" /> 的信息。</returns>
    </member>
    <member name="P:System.Net.SocketAddress.Family">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; enumerated value of the current &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt;.">获取当前 <see cref="T:System.Net.Sockets.AddressFamily" /> 的 <see cref="T:System.Net.SocketAddress" /> 枚举值。</summary>
      <returns vsli:raw="One of the &lt;see cref=&quot;T:System.Net.Sockets.AddressFamily&quot; /&gt; enumerated values.">
        <see cref="T:System.Net.Sockets.AddressFamily" /> 枚举值之一。</returns>
    </member>
    <member name="P:System.Net.SocketAddress.Item(System.Int32)">
      <summary vsli:raw="Gets or sets the specified index element in the underlying buffer.">获取或设置基础缓冲区中指定的索引元素。</summary>
      <param name="offset" vsli:raw="The array index element of the desired information.">所需信息的数组索引元素。</param>
      <exception cref="T:System.IndexOutOfRangeException" vsli:raw="The specified index does not exist in the buffer.">缓冲区中不存在指定的索引。</exception>
      <returns vsli:raw="The value of the specified index element in the underlying buffer.">基础缓冲区中指定的索引元素的值。</returns>
    </member>
    <member name="P:System.Net.SocketAddress.Size">
      <summary vsli:raw="Gets the underlying buffer size of the &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt;.">获取 <see cref="T:System.Net.SocketAddress" /> 的基础缓冲区大小。</summary>
      <returns vsli:raw="The underlying buffer size of the &lt;see cref=&quot;T:System.Net.SocketAddress&quot; /&gt;.">
        <see cref="T:System.Net.SocketAddress" /> 的基础缓冲区大小。</returns>
    </member>
    <member name="T:System.Net.Sockets.AddressFamily">
      <summary vsli:raw="Specifies the addressing scheme that an instance of the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; class can use.">指定 <see cref="T:System.Net.Sockets.Socket" /> 类的实例可以使用的寻址方案。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.AppleTalk">
      <summary vsli:raw="AppleTalk address.">AppleTalk 地址。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Atm">
      <summary vsli:raw="Native ATM services address.">本机 ATM 服务地址。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Banyan">
      <summary vsli:raw="Banyan address.">Banyan 地址。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Ccitt">
      <summary vsli:raw="Addresses for CCITT protocols, such as X.25.">CCITT 协议（如 X.25）的地址。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Chaos">
      <summary vsli:raw="Address for MIT CHAOS protocols.">MIT CHAOS 协议的地址。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Cluster">
      <summary vsli:raw="Address for Microsoft cluster products.">Microsoft 群集产品的地址。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.ControllerAreaNetwork">
      <summary vsli:raw="Controller Area Network address.">控制器区域网络地址。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.DataKit">
      <summary vsli:raw="Address for Datakit protocols.">Datakit 协议的地址。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.DataLink">
      <summary vsli:raw="Direct data-link interface address.">直接数据链接接口地址。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.DecNet">
      <summary vsli:raw="DECnet address.">DECnet 地址。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Ecma">
      <summary vsli:raw="European Computer Manufacturers Association (ECMA) address.">欧洲计算机制造商协会 (ECMA) 地址。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.FireFox">
      <summary vsli:raw="FireFox address.">FireFox 地址。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.HyperChannel">
      <summary vsli:raw="NSC Hyperchannel address.">NSC Hyperchannel 地址。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Ieee12844">
      <summary vsli:raw="IEEE 1284.4 workgroup address.">IEEE 1284.4 工作组地址。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.ImpLink">
      <summary vsli:raw="ARPANET IMP address.">ARPANET IMP 地址。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.InterNetwork">
      <summary vsli:raw="Address for IP version 4.">IP 版本 4 的地址。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.InterNetworkV6">
      <summary vsli:raw="Address for IP version 6.">IP 版本 6 的地址。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Ipx">
      <summary vsli:raw="IPX or SPX address.">IPX 或 SPX 地址。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Irda">
      <summary vsli:raw="IrDA address.">IrDA 地址。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Iso">
      <summary vsli:raw="Address for ISO protocols.">ISO 协议的地址。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Lat">
      <summary vsli:raw="LAT address.">LAT 地址。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Max">
      <summary vsli:raw="MAX address.">MAX 地址。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.NetBios">
      <summary vsli:raw="NetBios address.">NetBios 地址。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.NetworkDesigners">
      <summary vsli:raw="Address for Network Designers OSI gateway-enabled protocols.">支持网络设计器 OSI 网关的协议的地址。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.NS">
      <summary vsli:raw="Address for Xerox NS protocols.">Xerox NS 协议的地址。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Osi">
      <summary vsli:raw="Address for OSI protocols.">OSI 协议的地址。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Packet">
      <summary vsli:raw="Low-level Packet address.">低级别数据包地址。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Pup">
      <summary vsli:raw="Address for PUP protocols.">PUP 协议的地址。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Sna">
      <summary vsli:raw="IBM SNA address.">IBM SNA 地址。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Unix">
      <summary vsli:raw="Unix local to host address.">Unix 本地到主机地址。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Unknown">
      <summary vsli:raw="Unknown address family.">未知的地址族。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Unspecified">
      <summary vsli:raw="Unspecified address family.">未指定的地址族。</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.VoiceView">
      <summary vsli:raw="VoiceView address.">VoiceView 地址。</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketError">
      <summary vsli:raw="Defines error codes for the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; class.">定义 <see cref="T:System.Net.Sockets.Socket" /> 类的错误代码。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AccessDenied">
      <summary vsli:raw="An attempt was made to access a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; in a way that is forbidden by its access permissions.">已试图通过被其访问权限禁止的方式访问 <see cref="T:System.Net.Sockets.Socket" />。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AddressAlreadyInUse">
      <summary vsli:raw="Only one use of an address is normally permitted.">通常，只允许使用地址一次。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AddressFamilyNotSupported">
      <summary vsli:raw="The address family specified is not supported. This error is returned if the IPv6 address family was specified and the IPv6 stack is not installed on the local machine. This error is returned if the IPv4 address family was specified and the IPv4 stack is not installed on the local machine.">不支持指定的地址族。 如果指定了 IPv6 地址族而未在本地计算机上安装 IPv6 堆栈，则会返回此错误。 如果指定了 IPv4 地址族而未在本地计算机上安装 IPv4 堆栈，则会返回此错误。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AddressNotAvailable">
      <summary vsli:raw="The selected IP address is not valid in this context.">选定的 IP 地址在此上下文中无效。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AlreadyInProgress">
      <summary vsli:raw="The nonblocking &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; already has an operation in progress.">非阻止性 <see cref="T:System.Net.Sockets.Socket" /> 已有一个操作正在进行中。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ConnectionAborted">
      <summary vsli:raw="The connection was aborted by .NET or the underlying socket provider.">此连接由 .NET Framework 或基础套接字提供程序中止。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ConnectionRefused">
      <summary vsli:raw="The remote host is actively refusing a connection.">远程主机正在主动拒绝连接。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ConnectionReset">
      <summary vsli:raw="The connection was reset by the remote peer.">此连接由远程对等计算机重置。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.DestinationAddressRequired">
      <summary vsli:raw="A required address was omitted from an operation on a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">在对 <see cref="T:System.Net.Sockets.Socket" /> 的操作中省略了必需的地址。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Disconnecting">
      <summary vsli:raw="A graceful shutdown is in progress.">正常关机正在进行中。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Fault">
      <summary vsli:raw="An invalid pointer address was detected by the underlying socket provider.">基础套接字提供程序检测到无效的指针地址。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.HostDown">
      <summary vsli:raw="The operation failed because the remote host is down.">由于远程主机被关闭，操作失败。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.HostNotFound">
      <summary vsli:raw="No such host is known. The name is not an official host name or alias.">无法识别这种主机。 该名称不是正式的主机名或别名。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.HostUnreachable">
      <summary vsli:raw="There is no network route to the specified host.">没有到指定主机的网络路由。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.InProgress">
      <summary vsli:raw="A blocking operation is in progress.">阻止操作正在进行中。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Interrupted">
      <summary vsli:raw="A blocking &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; call was canceled.">已取消阻止 <see cref="T:System.Net.Sockets.Socket" /> 调用的操作。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.InvalidArgument">
      <summary vsli:raw="An invalid argument was supplied to a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; member.">给 <see cref="T:System.Net.Sockets.Socket" /> 成员提供了一个无效参数。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.IOPending">
      <summary vsli:raw="The application has initiated an overlapped operation that cannot be completed immediately.">应用程序已启动一个无法立即完成的重叠操作。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.IsConnected">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is already connected.">
        <see cref="T:System.Net.Sockets.Socket" /> 已连接。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.MessageSize">
      <summary vsli:raw="The datagram is too long.">数据报太长。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NetworkDown">
      <summary vsli:raw="The network is not available.">网络不可用。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NetworkReset">
      <summary vsli:raw="The application tried to set &lt;see cref=&quot;F:System.Net.Sockets.SocketOptionName.KeepAlive&quot; /&gt; on a connection that has already timed out.">应用程序尝试在已超时的连接上设置 <see cref="F:System.Net.Sockets.SocketOptionName.KeepAlive" />。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NetworkUnreachable">
      <summary vsli:raw="No route to the remote host exists.">不存在到远程主机的路由。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NoBufferSpaceAvailable">
      <summary vsli:raw="No free buffer space is available for a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; operation.">没有可用于 <see cref="T:System.Net.Sockets.Socket" /> 操作的可用缓冲区空间。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NoData">
      <summary vsli:raw="The requested name or IP address was not found on the name server.">在名称服务器上找不到请求的名称或 IP 地址。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NoRecovery">
      <summary vsli:raw="The error is unrecoverable or the requested database cannot be located.">错误不可恢复或找不到请求的数据库。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NotConnected">
      <summary vsli:raw="The application tried to send or receive data, and the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; is not connected.">应用程序试图发送或接收数据，但是 <see cref="T:System.Net.Sockets.Socket" /> 未连接。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NotInitialized">
      <summary vsli:raw="The underlying socket provider has not been initialized.">尚未初始化基础套接字提供程序。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NotSocket">
      <summary vsli:raw="A &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; operation was attempted on a non-socket.">对非套接字尝试 <see cref="T:System.Net.Sockets.Socket" /> 操作。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.OperationAborted">
      <summary vsli:raw="The overlapped operation was aborted due to the closure of the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">由于 <see cref="T:System.Net.Sockets.Socket" /> 已关闭，重叠的操作被中止。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.OperationNotSupported">
      <summary vsli:raw="The address family is not supported by the protocol family.">协议族不支持地址族。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProcessLimit">
      <summary vsli:raw="Too many processes are using the underlying socket provider.">正在使用基础套接字提供程序的进程过多。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProtocolFamilyNotSupported">
      <summary vsli:raw="The protocol family is not implemented or has not been configured.">未实现或未配置协议族。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProtocolNotSupported">
      <summary vsli:raw="The protocol is not implemented or has not been configured.">未实现或未配置协议。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProtocolOption">
      <summary vsli:raw="An unknown, invalid, or unsupported option or level was used with a &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">对 <see cref="T:System.Net.Sockets.Socket" /> 使用了未知、无效或不受支持的选项或级别。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProtocolType">
      <summary vsli:raw="The protocol type is incorrect for this &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt;.">此 <see cref="T:System.Net.Sockets.Socket" /> 的协议类型不正确。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Shutdown">
      <summary vsli:raw="A request to send or receive data was disallowed because the &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; has already been closed.">发送或接收数据的请求未得到允许，因为 <see cref="T:System.Net.Sockets.Socket" /> 已被关闭。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.SocketError">
      <summary vsli:raw="An unspecified &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; error has occurred.">发生了未指定的 <see cref="T:System.Net.Sockets.Socket" /> 错误。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.SocketNotSupported">
      <summary vsli:raw="The support for the specified socket type does not exist in this address family.">在此地址族中不存在对指定的套接字类型的支持。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Success">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Net.Sockets.Socket&quot; /&gt; operation succeeded.">
        <see cref="T:System.Net.Sockets.Socket" /> 操作成功。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.SystemNotReady">
      <summary vsli:raw="The network subsystem is unavailable.">网络子系统不可用。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.TimedOut">
      <summary vsli:raw="The connection attempt timed out, or the connected host has failed to respond.">连接尝试超时，或者连接的主机没有响应。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.TooManyOpenSockets">
      <summary vsli:raw="There are too many open sockets in the underlying socket provider.">基础套接字提供程序中打开的套接字太多。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.TryAgain">
      <summary vsli:raw="The name of the host could not be resolved. Try again later.">无法解析主机名。 请稍后再试。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.TypeNotFound">
      <summary vsli:raw="The specified class was not found.">未找到指定的类。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.VersionNotSupported">
      <summary vsli:raw="The version of the underlying socket provider is out of range.">基础套接字提供程序的版本超出范围。</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.WouldBlock">
      <summary vsli:raw="An operation on a nonblocking socket cannot be completed immediately.">对非阻止性套接字的操作不能立即完成。</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketException">
      <summary vsli:raw="The exception that is thrown when a socket error occurs.">发生套接字错误时引发的异常。</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketException.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.SocketException&quot; /&gt; class with the last operating system error code.">用最后一个操作系统错误代码初始化 <see cref="T:System.Net.Sockets.SocketException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketException.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.SocketException&quot; /&gt; class with the specified error code.">用指定的错误代码初始化 <see cref="T:System.Net.Sockets.SocketException" /> 类的新实例。</summary>
      <param name="errorCode" vsli:raw="The error code that indicates the error that occurred.">指示发生的错误的错误代码。</param>
    </member>
    <member name="M:System.Net.Sockets.SocketException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Net.Sockets.SocketException&quot; /&gt; class from the specified instances of the &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; and &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; classes.">从 <see cref="T:System.Net.Sockets.SocketException" /> 和 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 类的指定实例初始化 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 类的新实例。</summary>
      <param name="serializationInfo" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.SerializationInfo&quot; /&gt; instance that contains the information that is required to serialize the new &lt;see cref=&quot;T:System.Net.Sockets.SocketException&quot; /&gt; instance.">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 实例，包含序列化新的 <see cref="T:System.Net.Sockets.SocketException" /> 实例所需的信息。</param>
      <param name="streamingContext" vsli:raw="A &lt;see cref=&quot;T:System.Runtime.Serialization.StreamingContext&quot; /&gt; that contains the source of the serialized stream that is associated with the new &lt;see cref=&quot;T:System.Net.Sockets.SocketException&quot; /&gt; instance.">
        <see cref="T:System.Runtime.Serialization.StreamingContext" />，包含与新的 <see cref="T:System.Net.Sockets.SocketException" /> 实例关联的序列化流的源。</param>
    </member>
    <member name="P:System.Net.Sockets.SocketException.ErrorCode">
      <summary vsli:raw="Gets the error code that is associated with this exception.">获取与此异常关联的错误代码。</summary>
      <returns vsli:raw="An integer error code that is associated with this exception.">与此异常关联的整数错误代码。</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketException.Message">
      <summary vsli:raw="Gets the error message that is associated with this exception.">获取与此异常相关联的错误消息。</summary>
      <returns vsli:raw="A string that contains the error message.">包含错误消息的字符串。</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketException.SocketErrorCode">
      <summary vsli:raw="Gets the error code that is associated with this exception.">获取与此异常关联的错误代码。</summary>
      <returns vsli:raw="An integer error code that is associated with this exception.">与此异常关联的整数错误代码。</returns>
    </member>
    <member name="T:System.Net.TransportContext">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Net.TransportContext&quot; /&gt; class provides additional context about the underlying transport layer.">
        <see cref="T:System.Net.TransportContext" /> 类提供有关基础传输层的附加上下文。</summary>
    </member>
    <member name="M:System.Net.TransportContext.#ctor">
      <summary vsli:raw="Creates a new instance of the &lt;see cref=&quot;T:System.Net.TransportContext&quot; /&gt; class.">创建 <see cref="T:System.Net.TransportContext" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Net.TransportContext.GetChannelBinding(System.Security.Authentication.ExtendedProtection.ChannelBindingKind)">
      <summary vsli:raw="Retrieves the requested channel binding.">检索请求的通道绑定。</summary>
      <param name="kind" vsli:raw="The type of channel binding to retrieve.">要检索的通道绑定类型。</param>
      <exception cref="T:System.NotSupportedException" vsli:raw="&lt;paramref name=&quot;kind&quot; /&gt; is must be &lt;see cref=&quot;F:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint&quot; /&gt; for use with the &lt;see cref=&quot;T:System.Net.TransportContext&quot; /&gt; retrieved from the &lt;see cref=&quot;P:System.Net.HttpListenerRequest.TransportContext&quot; /&gt; property.">
        <paramref name="kind" /> 必须是用于从 <see cref="F:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint" /> 属性检索的 <see cref="T:System.Net.TransportContext" /> 的 <see cref="P:System.Net.HttpListenerRequest.TransportContext" />。</exception>
      <returns vsli:raw="The requested &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ChannelBinding&quot; /&gt;, or &lt;see langword=&quot;null&quot; /&gt; if the channel binding is not supported by the current transport or by the operating system.">请求的 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />，如果当前传输或操作系统不支持通道绑定，则为 <see langword="null" />。</returns>
    </member>
    <member name="T:System.Security.Authentication.CipherAlgorithmType">
      <summary vsli:raw="Defines the possible cipher algorithms for the &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; class.">为 <see cref="T:System.Net.Security.SslStream" /> 类定义可能的密码算法。</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Aes">
      <summary vsli:raw="The Advanced Encryption Standard (AES) algorithm.">高级加密标准 (AES) 算法。</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Aes128">
      <summary vsli:raw="The Advanced Encryption Standard (AES) algorithm with a 128 bit key.">具有 128 位密钥的高级加密标准 (AES) 算法。</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Aes192">
      <summary vsli:raw="The Advanced Encryption Standard (AES) algorithm with a 192 bit key.">具有 192 位密钥的高级加密标准 (AES) 算法。</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Aes256">
      <summary vsli:raw="The Advanced Encryption Standard (AES) algorithm with a 256 bit key.">具有 256 位密钥的高级加密标准 (AES) 算法。</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Des">
      <summary vsli:raw="The Data Encryption Standard (DES) algorithm.">数据加密标准 (DES) 算法。</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.None">
      <summary vsli:raw="No encryption algorithm is used.">未使用加密算法。</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Null">
      <summary vsli:raw="No encryption is used with a Null cipher algorithm.">没有哪种加密是使用的 Null 密码算法。</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Rc2">
      <summary vsli:raw="Rivest's Code 2 (RC2) algorithm.">Rivest 代码 2 (RC2) 算法。</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Rc4">
      <summary vsli:raw="Rivest's Code 4 (RC4) algorithm.">Rivest 代码 4 (RC4) 算法。</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.TripleDes">
      <summary vsli:raw="The Triple Data Encryption Standard (3DES) algorithm.">三重数据加密标准 (3DES) 算法。</summary>
    </member>
    <member name="T:System.Security.Authentication.ExchangeAlgorithmType">
      <summary vsli:raw="Specifies the algorithm used to create keys shared by the client and server.">指定用于创建客户端和服务器共享密钥的算法。</summary>
    </member>
    <member name="F:System.Security.Authentication.ExchangeAlgorithmType.DiffieHellman">
      <summary vsli:raw="The Diffie Hellman ephemeral key exchange algorithm.">Diffie Hellman 短周期密钥交换算法。</summary>
    </member>
    <member name="F:System.Security.Authentication.ExchangeAlgorithmType.None">
      <summary vsli:raw="No key exchange algorithm is used.">未使用密钥交换算法。</summary>
    </member>
    <member name="F:System.Security.Authentication.ExchangeAlgorithmType.RsaKeyX">
      <summary vsli:raw="The RSA public-key exchange algorithm.">RSA 公钥交换算法。</summary>
    </member>
    <member name="F:System.Security.Authentication.ExchangeAlgorithmType.RsaSign">
      <summary vsli:raw="The RSA public-key signature algorithm.">RSA 公钥签名算法。</summary>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.ChannelBinding">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ChannelBinding&quot; /&gt; class encapsulates a pointer to the opaque data used to bind an authenticated transaction to a secure channel.">
        <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> 类，该类封装指向用于将经过身份验证的事务绑定到安全通道的不透明数据的指针。</summary>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ChannelBinding.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ChannelBinding&quot; /&gt; class.">初始化 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> 类的新实例。</summary>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ChannelBinding.#ctor(System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ChannelBinding&quot; /&gt; class.">初始化 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> 类的新实例。</summary>
      <param name="ownsHandle" vsli:raw="A Boolean value that indicates if the application owns the safe handle to a native memory region containing the byte data that would be passed to native calls that provide extended protection for integrated windows authentication.">一个布尔值，该值指示应用程序是否拥有本机内存区域的安全句柄，此内存区域包含将传递给本机调用的字节数据，而这些本机调用可为集成 Windows 身份验证提供扩展保护。</param>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.ChannelBinding.Size">
      <summary vsli:raw="The &lt;see cref=&quot;P:System.Security.Authentication.ExtendedProtection.ChannelBinding.Size&quot; /&gt; property gets the size, in bytes, of the channel binding token associated with the &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ChannelBinding&quot; /&gt; instance.">
        <see cref="P:System.Security.Authentication.ExtendedProtection.ChannelBinding.Size" /> 属性获取与 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> 实例关联的通道绑定令牌的大小（以字节为单位）。</summary>
      <returns vsli:raw="The size, in bytes, of the channel binding token in the &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ChannelBinding&quot; /&gt; instance.">
        <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> 实例中的通道绑定令牌的大小（以字节为单位）。</returns>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.ChannelBindingKind">
      <summary vsli:raw="The &lt;see cref=&quot;T:System.Security.Authentication.ExtendedProtection.ChannelBindingKind&quot; /&gt; enumeration represents the kinds of channel bindings that can be queried from secure channels.">
        <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBindingKind" /> 枚举，它表示可从安全通道查询的通道绑定的类型。</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint">
      <summary vsli:raw="A channel binding unique to a given endpoint (a TLS server certificate, for example).">给定终结点的唯一通道绑定（如 TLS 服务器证书）。</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Unique">
      <summary vsli:raw="A channel binding completely unique to a given channel (a TLS session key, for example).">给定通道的完全唯一通道绑定（如 TLS 会话密钥）。</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Unknown">
      <summary vsli:raw="An unknown channel binding type.">未知的通道绑定类型。</summary>
    </member>
    <member name="T:System.Security.Authentication.HashAlgorithmType">
      <summary vsli:raw="Specifies the algorithm used for generating message authentication codes (MACs).">指定用于生成消息身份验证代码 (MAC) 的算法。</summary>
    </member>
    <member name="F:System.Security.Authentication.HashAlgorithmType.Md5">
      <summary vsli:raw="&lt;para&gt;The Message Digest 5 (MD5) hashing algorithm.&lt;/para&gt;&lt;para&gt;Due to collision problems with MD5, Microsoft recommends SHA256.&lt;/para&gt;">Message Digest 5 (MD5) 哈希算法。</summary>
    </member>
    <member name="F:System.Security.Authentication.HashAlgorithmType.None">
      <summary vsli:raw="No hashing algorithm is used.">没有使用哈希算法。</summary>
    </member>
    <member name="F:System.Security.Authentication.HashAlgorithmType.Sha1">
      <summary vsli:raw="&lt;para&gt;The Secure Hashing Algorithm (SHA1).&lt;/para&gt;&lt;para&gt;Due to collision problems with MD5, Microsoft recommends SHA256.&lt;/para&gt;">安全哈希算法 (SHA1)。</summary>
    </member>
    <member name="F:System.Security.Authentication.HashAlgorithmType.Sha256">
      <summary vsli:raw="The Secure Hashing Algorithm 2 (SHA-2), using a 256-bit digest.">安全哈希算法 2 (SHA-2)，使用 256 位摘要。</summary>
    </member>
    <member name="F:System.Security.Authentication.HashAlgorithmType.Sha384">
      <summary vsli:raw="The Secure Hashing Algorithm 2 (SHA-2), using a 384-bit digest.">安全哈希算法 2 (SHA-2)，使用 384 位摘要。</summary>
    </member>
    <member name="F:System.Security.Authentication.HashAlgorithmType.Sha512">
      <summary vsli:raw="The Secure Hashing Algorithm 2 (SHA-2), using a 512-bit digest.">安全哈希算法 2 (SHA-2)，使用 512 位摘要。</summary>
    </member>
    <member name="T:System.Security.Authentication.SslProtocols">
      <summary vsli:raw="Defines the possible versions of &lt;see cref=&quot;T:System.Security.Authentication.SslProtocols&quot; /&gt;.">定义 <see cref="T:System.Security.Authentication.SslProtocols" /> 的可能版本。</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Default">
      <summary vsli:raw="Use None instead of Default. Default permits only the Secure Sockets Layer (SSL) 3.0 or Transport Layer Security (TLS) 1.0 protocols to be negotiated, and those options are now considered obsolete. Consequently, Default is not allowed in many organizations. Despite the name of this field, &lt;see cref=&quot;T:System.Net.Security.SslStream&quot; /&gt; does not use it as a default except under special circumstances.">请使用 None，而不是 Default。 Default 仅允许协商安全套接字层 (SSL) 3.0 或传输层安全性 (TLS) 1.0 协议，而这些选项现已被视为已过时的选项。 因此，许多组织中不允许使用 Default。 无论此字段的名称如何，<see cref="T:System.Net.Security.SslStream" /> 不会将其用作默认字段，特殊情况除外。</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.None">
      <summary vsli:raw="Allows the operating system to choose the best protocol to use, and to block protocols that are not secure. Unless your app has a specific reason not to, you should use this field.">允许操作系统选择要使用的最佳协议，并将其用于阻止不安全的协议。 应使用此字段，除非应用有特定原因不得使用此字段。</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Ssl2">
      <summary vsli:raw="Specifies the SSL 2.0 protocol. SSL 2.0 has been superseded by the TLS protocol and is provided for backward compatibility only.">指定 SSL 2.0 协议。 SSL 2.0 已由 TLS 协议取代，之所以仍然提供这个方法，只是为了向后兼容。</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Ssl3">
      <summary vsli:raw="Specifies the SSL 3.0 protocol. SSL 3.0 has been superseded by the TLS protocol and is provided for backward compatibility only.">指定 SSL 3.0 协议。 SSL 3.0 已由 TLS 协议取代，之所以仍然提供这个方法，只是为了向后兼容。</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Tls">
      <summary vsli:raw="Specifies the TLS 1.0 security protocol. TLS 1.0 is provided for backward compatibility only. The TLS protocol is defined in IETF RFC 2246. This member is obsolete starting in .NET 7.">指定 TLS 1.0 安全协议。  提供 TLS 1.0 只是为了实现向后兼容性。 TLS 协议在 IETF RFC 2246 中定义。</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Tls11">
      <summary vsli:raw="Specifies the TLS 1.1 security protocol. The TLS protocol is defined in IETF RFC 4346. This member is obsolete starting in .NET 7.">指定 TLS 1.1 安全协议。 TLS 协议在 IETF RFC 4346 中定义。</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Tls12">
      <summary vsli:raw="Specifies the TLS 1.2 security protocol. The TLS protocol is defined in IETF RFC 5246.">指定 TLS 1.2 安全协议。 TLS 协议在 IETF RFC 5246 中定义。</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Tls13">
      <summary vsli:raw="Specifies the TLS 1.3 security protocol. The TLS protocol is defined in IETF RFC 8446.">指定 TLS 1.3 安全协议。 此 TLS 协议在 IETF RFC 8446 定义。</summary>
    </member>
  </members>
</doc>