<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Threading.Tasks.Dataflow</name>
  </assembly>
  <members>
    <member name="T:System.Threading.Tasks.Dataflow.ActionBlock`1">
      <summary vsli:raw="Provides a dataflow block that invokes a provided &lt;see cref=&quot;T:System.Action`1&quot; /&gt; delegate for every data element received.">Предоставляет блок потока данных, который вызывает предоставленный делегат <see cref="T:System.Action`1" /> для каждого полученного элемента данных.</summary>
      <typeparam name="TInput" vsli:raw="The type of data that this &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ActionBlock`1&quot; /&gt; operates on.">Тип данных, на которые действует этот объект <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" />.</typeparam>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Action{`0})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ActionBlock`1&quot; /&gt; class with the specified action.">Инициализирует новый экземпляр класса <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> с указанным действием.</summary>
      <param name="action" vsli:raw="The action to invoke with each data element received.">Действие, вызываемое при получении каждого элемента данных.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;action&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="action" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Action{`0},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ActionBlock`1&quot; /&gt; class with the specified action and configuration options.">Инициализирует новый экземпляр класса <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> с указанным действием и параметрами конфигурации.</summary>
      <param name="action" vsli:raw="The action to invoke with each data element received.">Действие, вызываемое при получении каждого элемента данных.</param>
      <param name="dataflowBlockOptions" vsli:raw="The options with which to configure this &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ActionBlock`1&quot; /&gt;.">Параметр, с которым требуется настроить этот объект <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;action&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;dataflowBlockOptions&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="action" /> имеет значение <see langword="null" />.  
  
-или- 
 <paramref name="dataflowBlockOptions" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Func{`0,System.Threading.Tasks.Task})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ActionBlock`1&quot; /&gt; class with the specified action.">Инициализирует новый экземпляр класса <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> с указанным действием.</summary>
      <param name="action" vsli:raw="The action to invoke with each data element received.">Действие, вызываемое при получении каждого элемента данных.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;action&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="action" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Func{`0,System.Threading.Tasks.Task},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ActionBlock`1&quot; /&gt; class with the specified action and configuration options.">Инициализирует новый экземпляр класса <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> с указанным действием и параметрами конфигурации.</summary>
      <param name="action" vsli:raw="The action to invoke with each data element received.">Действие, вызываемое при получении каждого элемента данных.</param>
      <param name="dataflowBlockOptions" vsli:raw="The options with which to configure this &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ActionBlock`1&quot; /&gt;.">Параметр, с которым требуется настроить этот объект <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;action&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;dataflowBlockOptions&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="action" /> имеет значение <see langword="null" />.  
  
-или- 
 <paramref name="dataflowBlockOptions" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.ActionBlock`1.Complete">
      <summary vsli:raw="Signals to the dataflow block  that it shouldn't accept or produce any more messages and shouldn't consume any more postponed messages.">Сообщает блоку потока данных, что он больше не должен принимать и создавать сообщения и поглощать отложенные сообщения.</summary>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.ActionBlock`1.Post(`0)">
      <summary vsli:raw="Posts an item to the target dataflow block.">Публикует элемент в целевой блок потока данных.</summary>
      <param name="item" vsli:raw="The item being offered to the target.">Элемент, предлагаемый целевому объекту.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the item is posted to the dataflow block; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если пункт меню разносится в блок потока данных; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.ActionBlock`1.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)">
      <summary vsli:raw="Causes the dataflow block to complete in a faulted state.">Вызывает выполнение блока потока данных в состоянии сбоя.</summary>
      <param name="exception" vsli:raw="The exception that caused the faulting.">Исключение, вызвавшее сбой.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;exception&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="exception" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.ActionBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock{TInput}#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
      <summary vsli:raw="Offers a message to the dataflow block, and gives it the opportunity to consume or postpone the message.">Предлагает сообщение блоку потока данных, предоставляя целевому объекту возможность потребить или отложить его.</summary>
      <param name="messageHeader" vsli:raw="The header of the message being offered.">Заголовок предлагаемого сообщения.</param>
      <param name="messageValue" vsli:raw="The value of the message being offered.">Значение предлагаемого свойства.</param>
      <param name="source" vsli:raw="The dataflow block that is offering the message. This may be &lt;see langword=&quot;null&quot; /&gt;.">Блок потока данных, предлагающий сообщение. Это может быть значение <see langword="null" />.</param>
      <param name="consumeToAccept" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to instruct the target to call &lt;see cref=&quot;M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)&quot; /&gt; synchronously during the call to &lt;see cref=&quot;M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)&quot; /&gt;, prior to returning &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted&quot; /&gt;, in order to consume the message; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" /> для синхронного вызова целевым объектом метода <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /> во время вызова метода <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" /> до возврата <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" />, чтобы использовать сообщение; в противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="&lt;paramref name=&quot;messageHeader&quot; /&gt; is not valid.  &#xA;  &#xA; -or- &lt;paramref name=&quot;consumeToAccept&quot; /&gt; may be &lt;see langword=&quot;true&quot; /&gt; only if provided with a non-null &lt;paramref name=&quot;source&quot; /&gt;.">Недопустимый параметр <paramref name="messageHeader" />.  
  
-или- параметр <paramref name="consumeToAccept" /> может иметь значение <see langword="true" />, только если ему предоставлен отличный от NULL <paramref name="source" />.</exception>
      <returns vsli:raw="The status of the offered message.  If the message was accepted by the target, &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted&quot; /&gt; is returned, and the source should no longer use the offered message, because it is now owned by the target. If the message was postponed by the target, &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed&quot; /&gt; is returned as a notification that the target may later attempt to consume or reserve the message; in the meantime, the source still owns the message and may offer it to other blocks.  &#xA;  &#xA; If the target would have otherwise postponed message, but source was &lt;see langword=&quot;null&quot; /&gt;, &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined&quot; /&gt; is returned.  &#xA;  &#xA; If the target tried to accept the message but missed it due to the source delivering the message to another target or simply discarding it, &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable&quot; /&gt; is returned.  &#xA;  &#xA; If the target chose not to accept the message, &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined&quot; /&gt; is returned. If the target chose not to accept the message and will never accept another message from this source, &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently&quot; /&gt; is returned.">Состояние предложенного сообщения.  Если сообщение было принято целевым объектом, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> и источник больше не должен использовать предложенное сообщение, поскольку оно теперь принадлежит целевому объекту. Если сообщение было отложено целевым объектом, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" /> в качестве уведомления о том, что целевой объект может позже попытаться использовать или зарезервировать сообщение; при этом источник будет по-прежнему владеть сообщением и может предлагать его другим блокам.  
  
Если в противном случае целевой объект отложил бы сообщение, но источником служил <see langword="null" />, возвращается значение <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" />.  
  
Если целевой объект попытался принять сообщение, но не получил его из-за доставки сообщения источником другому целевому объекту или просто отбрасывания сообщения источником, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" />.  
  
Если целевой объект принял решение не принимать сообщение, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" />. Если целевой объект принял решение не принимать сообщение и никогда не будет принимать другие сообщения от этого источника, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.ActionBlock`1.ToString">
      <summary vsli:raw="Returns a string that represents the formatted name of this &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IDataflowBlock&quot; /&gt; instance.">Возвращает строку, представляющую отформатированное имя данного экземпляра <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />.</summary>
      <returns vsli:raw="A string that represents the formatted name of this &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IDataflowBlock&quot; /&gt; instance.">Строка, представляющая отформатированное имя данного экземпляра <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.ActionBlock`1.Completion">
      <summary vsli:raw="Gets a  &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; object that represents the asynchronous operation and completion of the dataflow block.">Получает объект <see cref="T:System.Threading.Tasks.Task" />, представляющий асинхронную операцию и завершение блока потока данных.</summary>
      <returns vsli:raw="The completed task.">Завершенная задача.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.ActionBlock`1.InputCount">
      <summary vsli:raw="Gets the number of input items waiting to be processed by this block.">Получает количество входных элементов, ожидающих обработки этим блоком.</summary>
      <returns vsli:raw="The number of input items waiting to be processed by this block.">Количество входных элементов, ожидающих обработки этим блоком.</returns>
    </member>
    <member name="T:System.Threading.Tasks.Dataflow.BatchBlock`1">
      <summary vsli:raw="Provides a dataflow block that batches inputs into arrays.">Предоставляет блок потока данных, объединяющий вводы в массивы.</summary>
      <typeparam name="T" vsli:raw="Specifies the type of data put into batches.">Определяет тип данных, помещаемых в пакеты.</typeparam>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchBlock`1.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.BatchBlock`1&quot; /&gt; with the specified batch size.">Инициализирует новый экземпляр класса <see cref="T:System.Threading.Tasks.Dataflow.BatchBlock`1" /> с указанным размером пакета.</summary>
      <param name="batchSize" vsli:raw="The number of items to group into a batch.">Число элементов, которые нужно сгруппировать в пакет.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;batchSize&quot; /&gt; must be positive.">Параметр <paramref name="batchSize" /> должен быть положительным.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchBlock`1.#ctor(System.Int32,System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions)">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.BatchBlock`1&quot; /&gt; with the specified batch size, declining option, and block options.">Инициализирует новый экземпляр <see cref="T:System.Threading.Tasks.Dataflow.BatchBlock`1" /> указанным размером пакета, параметром отклонения и параметрами блока.</summary>
      <param name="batchSize" vsli:raw="The number of items to group into a batch.">Число элементов, которые нужно сгруппировать в пакет.</param>
      <param name="dataflowBlockOptions" vsli:raw="The options with which to configure this &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.BatchBlock`1&quot; /&gt;.">Параметр, с которым требуется настроить этот объект <see cref="T:System.Threading.Tasks.Dataflow.BatchBlock`1" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;batchSize&quot; /&gt; must be positive.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;batchSize&quot; /&gt; must be smaller than the value of the &lt;see cref=&quot;P:System.Threading.Tasks.Dataflow.DataflowBlockOptions.BoundedCapacity&quot; /&gt; option if a non-default value has been set.">Параметр <paramref name="batchSize" /> должен быть положительным.  
  
-или- 
Значение <paramref name="batchSize" /> должно быть меньше значения параметра <see cref="P:System.Threading.Tasks.Dataflow.DataflowBlockOptions.BoundedCapacity" />, если задано значение, отличное от значения по умолчанию.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;dataflowBlockOptions&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="dataflowBlockOptions" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchBlock`1.Complete">
      <summary vsli:raw="Signals to the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IDataflowBlock&quot; /&gt; that it should not accept nor produce any more messages nor consume any more postponed messages.">Сообщает блоку <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />, что он больше не должен принимать и создавать никакие сообщения и не должен использовать отложенные сообщения.</summary>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchBlock`1.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`0[]},System.Threading.Tasks.Dataflow.DataflowLinkOptions)">
      <summary vsli:raw="Links the  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt; to the specified  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; .">Связывает <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> с указанным <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</summary>
      <param name="target" vsli:raw="The  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; to which to connect this source.">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, к которому требуется подключить этот источник.</param>
      <param name="linkOptions" vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowLinkOptions&quot; /&gt; instance that configures the link.">Экземпляр <see cref="T:System.Threading.Tasks.Dataflow.DataflowLinkOptions" />, настраивающий ссылку.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;target&quot; /&gt; is null (Nothing in Visual Basic) or  &lt;paramref name=&quot;linkOptions&quot; /&gt; is null (Nothing in Visual Basic).">
        <paramref name="target" /> имеет значение NULL (nothing в Visual Basic) или <paramref name="linkOptions" /> имеет значение NULL (nothing в Visual Basic).</exception>
      <returns vsli:raw="An IDisposable that, upon calling Dispose, will unlink the source from the target.">Интерфейс IDisposable, который при вызове метода Dispose отсоединит источник от целевого объекта.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchBlock`1.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)">
      <summary vsli:raw="Causes the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IDataflowBlock&quot; /&gt; to complete in a  &lt;see cref=&quot;F:System.Threading.Tasks.TaskStatus.Faulted&quot; /&gt; state.">Вызывает завершение блока <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> в состоянии <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />.</summary>
      <param name="exception" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; that caused the faulting.">
        <see cref="T:System.Exception" />, вызвавший сбой.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;exception&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="exception" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock{T[]}#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0[]},System.Boolean@)">
      <summary vsli:raw="Called by a linked &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; to accept and consume a &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; previously offered by this &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt; .">Вызывается связанным объектом <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> для принятия и использования объекта <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, ранее предложенного этим объектом <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</summary>
      <param name="messageHeader" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; of the message being consumed.">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> используемого сообщения.</param>
      <param name="target" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; consuming the message.">
        <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, получающий сообщение.</param>
      <param name="messageConsumed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was successfully consumed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если сообщение было успешно получено; в противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The  &lt;paramref name=&quot;messageHeader&quot; /&gt; is not valid.">
        <paramref name="messageHeader" /> — недопустимое значение.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="target" /> — <see langword="null" />.</exception>
      <returns vsli:raw="The value of the consumed message. This may correspond to a different &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; instance than was previously reserved and passed as the &lt;paramref name=&quot;messageHeader&quot; /&gt; to &lt;see cref=&quot;M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)&quot; /&gt;. The consuming &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; must use the returned value instead of the value passed as messageValue through &lt;see cref=&quot;M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)&quot; /&gt;.  &#xA;  &#xA; If the message requested is not available, the return value will be &lt;see langword=&quot;null&quot; /&gt;.">Значение получаемого сообщения. Это может соответствовать другому экземпляру <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, отличному от ранее зарезервированного и переданного в качестве параметра <paramref name="messageHeader" /> методу <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" />. Рассматриваемый <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> должен использовать возвращаемое значение вместо значения, передаваемого как messageValue с помощью метода <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />.  
  
Если запрашиваемое сообщение недоступно, возвращается значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock{T[]}#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0[]})">
      <summary vsli:raw="Called by a linked &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; to release a previously reserved &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; by this &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt;.">Вызывается связанным объектом <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> для освобождения объекта <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, ранее зарезервированного этим объектом <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</summary>
      <param name="messageHeader" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; of the reserved message being released.">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> освобождаемого зарезервированного сообщения.</param>
      <param name="target" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; releasing the message it previously reserved.">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, освобождающий сообщение, которое он ранее зарезервировал.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;messageHeader&quot; /&gt; is not valid.">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="target" /> — <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; did not have the message reserved.">У <paramref name="target" /> нет зарезервированного сообщения.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock{T[]}#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0[]})">
      <summary vsli:raw="Called by a linked &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; to reserve a previously offered &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; by this &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt;.">Вызывается связанным объектом <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> для резервирования объекта <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, ранее предложенного этим объектом <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</summary>
      <param name="messageHeader" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; of the message being reserved.">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> резервируемого сообщения.</param>
      <param name="target" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; reserving the message.">
        <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, сохраняющий сообщение.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;messageHeader&quot; /&gt; is not valid.">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="target" /> — <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was successfully reserved; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если сообщение было успешно зарезервировано; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock{T}#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
      <summary vsli:raw="Offers a message to the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt;, giving the target the opportunity to consume or postpone the message.">Предлагает сообщение блоку <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, предоставляя целевому объекту возможность использовать или отложить его.</summary>
      <param name="messageHeader" vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; instance that represents the header of the message being offered.">Экземпляр <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, представляющий заголовок предлагаемого сообщения.</param>
      <param name="messageValue" vsli:raw="The value of the message being offered.">Значение предлагаемого свойства.</param>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt; offering the message. This may be null.">
        <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />, предлагающий сообщение. Может содержать пустое значение.</param>
      <param name="consumeToAccept" vsli:raw="Set to &lt;see langword=&quot;true&quot; /&gt; to instruct the target to call &lt;see cref=&quot;M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)&quot; /&gt; synchronously during the call to &lt;see cref=&quot;M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)&quot; /&gt;, prior to returning &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted&quot; /&gt;, in order to consume the message.">Значение <see langword="true" /> для синхронного вызова целевым объектом метода <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /> во время вызова метода <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" /> до возврата <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" />, чтобы использовать сообщение.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The  &lt;paramref name=&quot;messageHeader&quot; /&gt; is not valid.  &#xA;  &#xA; -or- &lt;paramref name=&quot;consumeToAccept&quot; /&gt; may only be true if provided with a non-null &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="messageHeader" /> — недопустимое значение.  
  
-или- параметр <paramref name="consumeToAccept" /> может иметь значение true, только если для него предоставлен параметр <paramref name="source" /> со значением, отличным от значения NULL.</exception>
      <returns vsli:raw="The status of the offered message. If the message was accepted by the target, &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted&quot; /&gt; is returned, and the source should no longer use the offered message, because it is now owned by the target. If the message was postponed by the target, &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed&quot; /&gt; is returned as a notification that the target may later attempt to consume or reserve the message; in the meantime, the source still owns the message and may offer it to other blocks.  &#xA;  &#xA; If the target would have otherwise postponed message, but &lt;paramref name=&quot;source&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;, &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined&quot; /&gt; is instead returned.  &#xA;  &#xA; If the target tried to accept the message but missed it due to the source delivering the message to another target or simply discarding it, &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable&quot; /&gt; is returned.  &#xA;  &#xA; If the target chose not to accept the message, &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined&quot; /&gt; is returned. If the target chose not to accept the message and will never accept another message from this source, &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently&quot; /&gt; is returned.">Состояние предложенного сообщения. Если сообщение было принято целевым объектом, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> и источник больше не должен использовать предложенное сообщение, поскольку оно теперь принадлежит целевому объекту. Если сообщение было отложено целевым объектом, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" /> в качестве уведомления о том, что целевой объект может позже попытаться использовать или зарезервировать сообщение; при этом источник будет по-прежнему владеть сообщением и может предлагать его другим блокам.  
  
Если целевой объект в противном случае отложил бы сообщение, но параметр <paramref name="source" /> имел значение <see langword="null" />, вместо этого возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" />.  
  
Если целевой объект попытался принять сообщение, но не получил его из-за доставки сообщения источником другому целевому объекту или просто отбрасывания сообщения источником, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" />.  
  
Если целевой объект принял решение не принимать сообщение, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" />. Если целевой объект принял решение не принимать сообщение и никогда не будет принимать другие сообщения от этого источника, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchBlock`1.ToString">
      <summary vsli:raw="Returns a string that represents the formatted name of this  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IDataflowBlock&quot; /&gt; instance.">Возвращает строку, представляющую отформатированное имя данного экземпляра <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />.</summary>
      <returns vsli:raw="A string that represents the formatted name of this  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IDataflowBlock&quot; /&gt; instance.">Строка, представляющая отформатированное имя данного экземпляра <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchBlock`1.TriggerBatch">
      <summary vsli:raw="Triggers the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.BatchBlock`1&quot; /&gt; to initiate a batching operation even if the number of currently queued or postponed items is less than the &lt;see cref=&quot;P:System.Threading.Tasks.Dataflow.BatchBlock`1.BatchSize&quot; /&gt;.">Активирует <see cref="T:System.Threading.Tasks.Dataflow.BatchBlock`1" /> для инициализации пакетной операции, даже если в настоящий момент число находящихся в очереди или отложенных элементов меньше, чем значение <see cref="P:System.Threading.Tasks.Dataflow.BatchBlock`1.BatchSize" />.</summary>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchBlock`1.TryReceive(System.Predicate{`0[]},`0[]@)">
      <summary vsli:raw="Attempts to synchronously receive an available output item from the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1&quot; /&gt;.">Пытается синхронно получить доступный выходной элемент от интерфейса <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</summary>
      <param name="filter" vsli:raw="The predicate a value must successfully pass in order for it to be received.  &lt;paramref name=&quot;filter&quot; /&gt; may be &lt;see langword=&quot;null&quot; /&gt;, in which case all items will pass.">Значение предиката должно быть успешно передано, чтобы оно было получено.  Параметр <paramref name="filter" /> может иметь значение <see langword="null" />; в этом случае будут переданы все элементы.</param>
      <param name="item" vsli:raw="The item received from the source.">Элемент, полученный от источника.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an item could be received; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если получить элемент не удалось; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchBlock`1.TryReceiveAll(System.Collections.Generic.IList{`0[]}@)">
      <summary vsli:raw="Attempts to synchronously receive all available items from the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1&quot; /&gt;.">Пытается синхронно получить все доступные элементы от интерфейса <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</summary>
      <param name="items" vsli:raw="The items received from the source.">Элементы, полученные от источника.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if one or more items could be received; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если могут быть получены один или несколько элементов; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.BatchBlock`1.BatchSize">
      <summary vsli:raw="Gets the size of the batches generated by this  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.BatchBlock`1&quot; /&gt;.">Получает размер пакетов, созданных данными <see cref="T:System.Threading.Tasks.Dataflow.BatchBlock`1" />.</summary>
      <returns vsli:raw="The batch size.">Размер пакета.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.BatchBlock`1.Completion">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; that represents the asynchronous operation and completion of the dataflow block.">Получает объект <see cref="T:System.Threading.Tasks.Task" />, представляющий асинхронную операцию и завершение блока потока данных.</summary>
      <returns vsli:raw="The task.">Задача.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.BatchBlock`1.OutputCount">
      <summary vsli:raw="Gets the number of output items available to be received from this block.">Получает число выходных элементов, доступных для получения из этого блока.</summary>
      <returns vsli:raw="The number of output items.">Число выходных элементов.</returns>
    </member>
    <member name="T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2">
      <summary vsli:raw="Provides a dataflow block that batches a specified number of inputs of potentially differing types provided to one or more of its targets.">Предоставляет блок потока данных, включающий заданное число вводов потенциально различающихся типов, предоставляемых для одного или нескольких целевых объектов.</summary>
      <typeparam name="T1" vsli:raw="Specifies the type of data accepted by the block's first target.">Указывает тип данных, принимаемых первым целевым объектом блока.</typeparam>
      <typeparam name="T2" vsli:raw="Specifies the type of data accepted by the block's second target.">Указывает тип данных, принимаемых вторым целевым объектом блока.</typeparam>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2&quot; /&gt; with the specified configuration.">Инициализирует новый экземпляр класса <see cref="T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2" /> с указанной конфигурацией.</summary>
      <param name="batchSize" vsli:raw="The number of items to group into a batch.">Число элементов, которые нужно сгруппировать в пакет.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;batchSize&quot; /&gt; must be positive.">Параметр <paramref name="batchSize" /> должен быть положительным.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.#ctor(System.Int32,System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions)">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2&quot; /&gt; with the specified configuration.">Инициализирует новый экземпляр класса <see cref="T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2" /> с указанной конфигурацией.</summary>
      <param name="batchSize" vsli:raw="The number of items to group into a batch.">Число элементов, которые нужно сгруппировать в пакет.</param>
      <param name="dataflowBlockOptions" vsli:raw="The options with which to configure this &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2&quot; /&gt;.">Параметр, с которым требуется настроить этот объект <see cref="T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;dataflowBlockOptions&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="dataflowBlockOptions" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;batchSize&quot; /&gt; is less than one.">Значение параметра <paramref name="batchSize" /> меньше единицы.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.Complete">
      <summary vsli:raw="Signals to the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IDataflowBlock&quot; /&gt; that it should not accept nor produce any more messages nor consume any more postponed messages.">Сообщает блоку <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />, что он больше не должен принимать и создавать никакие сообщения и не должен использовать отложенные сообщения.</summary>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}},System.Threading.Tasks.Dataflow.DataflowLinkOptions)">
      <summary vsli:raw="Links the  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt; to the specified  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; .">Связывает <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> с указанным <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</summary>
      <param name="target" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; to which to connect this source.">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, к которому требуется подключить этот источник.</param>
      <param name="linkOptions" vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowLinkOptions&quot; /&gt; instance that configures the link.">Экземпляр <see cref="T:System.Threading.Tasks.Dataflow.DataflowLinkOptions" />, настраивающий ссылку.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;target&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (Nothing in Visual Basic) or  &lt;paramref name=&quot;linkOptions&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (Nothing in Visual Basic).">
        <paramref name="target" /> имеет значение <see langword="null" /> (nothing в Visual Basic) или <paramref name="linkOptions" /> имеет значение <see langword="null" /> (nothing в Visual Basic).</exception>
      <returns vsli:raw="An IDisposable that, upon calling Dispose, will unlink the source from the target.">Интерфейс IDisposable, который при вызове метода Dispose отсоединит источник от целевого объекта.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)">
      <summary vsli:raw="Causes the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IDataflowBlock&quot; /&gt; to complete in a  &lt;see cref=&quot;F:System.Threading.Tasks.TaskStatus.Faulted&quot; /&gt; state.">Вызывает завершение блока <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> в состоянии <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />.</summary>
      <param name="exception" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; that caused the faulting.">
        <see cref="T:System.Exception" />, вызвавший сбой.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;exception&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="exception" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock{System#Tuple{System#Collections#Generic#IList{T1}@System#Collections#Generic#IList{T2}}}#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}},System.Boolean@)">
      <summary vsli:raw="Passes the ownership of the message identified by the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; from this  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt; instance to the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt;.">Передает владение сообщением, идентифицируемым <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, из этого экземпляра <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> в <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</summary>
      <param name="messageHeader" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; of the message that is to be consumed.">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> сообщения, которое требуется получить.</param>
      <param name="target" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; for which the message is to be consumed.">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, для которого будет получено сообщение.</param>
      <param name="messageConsumed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was successfully consumed. &lt;see langword=&quot;false&quot; /&gt; otherwise.">Значение <see langword="true" />, если сообщение было успешно получено. В противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;messageHeader&quot; /&gt; is not valid.">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (Nothing in Visual Basic).">
        <paramref name="target" /> имеет значение <see langword="null" /> (nothing в Visual Basic).</exception>
      <returns vsli:raw="The value of the consumed message. This may correspond to a different &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; instance than was previously reserved and passed as the &lt;paramref name=&quot;messageHeader&quot; /&gt; to this method. The consuming &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; must use the returned value instead of the value passed as &lt;paramref name=&quot;messageValue&quot; /&gt; to &lt;see cref=&quot;M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)&quot; /&gt;. If the message requested is not available, the return value is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Значение получаемого сообщения. Это может соответствовать другому экземпляру <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, отличающемуся от ранее зарезервированного и переданного в качестве параметра <paramref name="messageHeader" /> этому методу. Рассматриваемый <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> должен использовать возвращаемое значение вместо значения, переданного как <paramref name="messageValue" /> в <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />. Если запрошенное сообщение недоступно, возвращается значение <see langword="null" /> (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock{System#Tuple{System#Collections#Generic#IList{T1}@System#Collections#Generic#IList{T2}}}#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}})">
      <summary vsli:raw="Releases the right to pass the ownership of the message identified by the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; from this &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt; to the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt;.">Передает право владения сообщением, идентифицируемым <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, из <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> в <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</summary>
      <param name="messageHeader" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; of the reserved message.">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> зарезервированного сообщения.</param>
      <param name="target" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; that currently holds the reservation.">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, который в настоящее время сохраняет резервирование.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;messageHeader&quot; /&gt; is not valid.">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (Nothing in Visual Basic).">
        <paramref name="target" /> имеет значение <see langword="null" /> (nothing в Visual Basic).</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; did not have the message reserved.">У <paramref name="target" /> нет зарезервированного сообщения.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock{System#Tuple{System#Collections#Generic#IList{T1}@System#Collections#Generic#IList{T2}}}#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}})">
      <summary vsli:raw="Reserves the right to pass the ownership of the message identified by the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; from this &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt; to the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt;.">Резервирует право владения сообщением, идентифицируемым <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, из <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> в <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</summary>
      <param name="messageHeader" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; of the message that is to be reserved.">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> сообщения, которое требуется зарезервировать.</param>
      <param name="target" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; for which the message is to be reserved.">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, для которого будет зарезервировано сообщение.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;messageHeader&quot; /&gt; is not valid.">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="target" /> — это <see langword="null" /> (<see langword="Nothing" /> в Visual Basic).</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was successfully reserved; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если сообщение было успешно зарезервировано; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.ToString">
      <summary vsli:raw="Returns a string that represents the formatted name of this  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IDataflowBlock&quot; /&gt; instance.">Возвращает строку, представляющую отформатированное имя данного экземпляра <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />.</summary>
      <returns vsli:raw="A string that represents the formatted name of this  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IDataflowBlock&quot; /&gt; instance.">Строка, представляющая отформатированное имя данного экземпляра <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.TryReceive(System.Predicate{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}},System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}@)">
      <summary vsli:raw="Attempts to synchronously receive an available output item from the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1&quot; /&gt;.">Пытается синхронно получить доступный выходной элемент от интерфейса <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</summary>
      <param name="filter" vsli:raw="The predicate a value must successfully pass in order for it to be received.  &lt;paramref name=&quot;filter&quot; /&gt; may be &lt;see langword=&quot;null&quot; /&gt;, in which case all items will pass.">Значение предиката должно быть успешно передано, чтобы оно было получено.  Параметр <paramref name="filter" /> может иметь значение <see langword="null" />; в этом случае будут переданы все элементы.</param>
      <param name="item" vsli:raw="The item received from the source.">Элемент, полученный от источника.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an item could be received; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если получить элемент не удалось; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.TryReceiveAll(System.Collections.Generic.IList{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1}}}@)">
      <summary vsli:raw="Attempts to synchronously receive all available items from the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1&quot; /&gt;.">Пытается синхронно получить все доступные элементы от интерфейса <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</summary>
      <param name="items" vsli:raw="The items received from the source.">Элементы, полученные от источника.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if one or more items could be received; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если могут быть получены один или несколько элементов; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.BatchSize">
      <summary vsli:raw="Gets the size of the batches generated by this &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2&quot; /&gt;.">Получает размер пакетов, созданных данным <see cref="T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2" />.</summary>
      <returns vsli:raw="The batch size.">Размер пакета.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.Completion">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; that represents the asynchronous operation and completion of the dataflow block.">Получает объект <see cref="T:System.Threading.Tasks.Task" />, представляющий асинхронную операцию и завершение блока потока данных.</summary>
      <returns vsli:raw="The task.">Задача.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.OutputCount">
      <summary vsli:raw="Gets the number of output items available to be received from this block.">Получает число выходных элементов, доступных для получения из этого блока.</summary>
      <returns vsli:raw="The number of output items.">Число выходных элементов.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.Target1">
      <summary vsli:raw="Gets a target that may be used to offer messages of the first type.">Получает целевой объект, который может использоваться для предложения сообщений первого типа.</summary>
      <returns vsli:raw="The target.">Целевой объект.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2.Target2">
      <summary vsli:raw="Gets a target that may be used to offer messages of the second type.">Получает целевой объект, который может использоваться для предложения сообщений второго типа.</summary>
      <returns vsli:raw="The target.">Целевой объект.</returns>
    </member>
    <member name="T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3">
      <summary vsli:raw="Provides a dataflow block that batches a specified number of inputs of potentially differing types provided to one or more of its targets.">Предоставляет блок потока данных, включающий заданное число вводов потенциально различающихся типов, предоставляемых для одного или нескольких целевых объектов.</summary>
      <typeparam name="T1" vsli:raw="Specifies the type of data accepted by the block's first target.">Указывает тип данных, принимаемых первым целевым объектом блока.</typeparam>
      <typeparam name="T2" vsli:raw="Specifies the type of data accepted by the block's second target.">Указывает тип данных, принимаемых вторым целевым объектом блока.</typeparam>
      <typeparam name="T3" vsli:raw="Specifies the type of data accepted by the block's third target.">Указывает тип данных, принимаемых третьим целевым объектом блока.</typeparam>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.#ctor(System.Int32)">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3&quot; /&gt; with the specified configuration.">Инициализирует новый экземпляр класса <see cref="T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3" /> с указанной конфигурацией.</summary>
      <param name="batchSize" vsli:raw="The number of items to group into a batch.">Число элементов, которые нужно сгруппировать в пакет.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;batchSize&quot; /&gt; must be positive.">Параметр <paramref name="batchSize" /> должен быть положительным.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.#ctor(System.Int32,System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions)">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3&quot; /&gt; with the specified configuration.">Инициализирует новый экземпляр класса <see cref="T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3" /> с указанной конфигурацией.</summary>
      <param name="batchSize" vsli:raw="The number of items to group into a batch.">Число элементов, которые нужно сгруппировать в пакет.</param>
      <param name="dataflowBlockOptions" vsli:raw="The options with which to configure this  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2&quot; /&gt;.">Параметры, с которыми требуется настроить этот объект <see cref="T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`2" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The &lt;paramref name=&quot;batchSize&quot; /&gt; must be positive.">Параметр <paramref name="batchSize" /> должен быть положительным.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;dataflowBlockOptions&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="dataflowBlockOptions" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Complete">
      <summary vsli:raw="Signals to the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IDataflowBlock&quot; /&gt; that it should not accept nor produce any more messages nor consume any more postponed messages.">Сообщает блоку <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />, что он больше не должен принимать и создавать никакие сообщения и не должен использовать отложенные сообщения.</summary>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}},System.Threading.Tasks.Dataflow.DataflowLinkOptions)">
      <summary vsli:raw="Links the  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt; to the specified  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; .">Связывает <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> с указанным <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</summary>
      <param name="target" vsli:raw="The  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; to which to connect this source.">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, к которому требуется подключить этот источник.</param>
      <param name="linkOptions" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the source should unlink from the target after successfully propagating a single message; &lt;see langword=&quot;false&quot; /&gt; to remain connected even after a single message has been propagated.">Значение <see langword="true" />, если источник должен отсоединиться от целевого объекта после успешного распространения одного сообщения; значение <see langword="false" />, чтобы источник оставался подсоединенным даже после распространения одного сообщения.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;target&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (Nothing in Visual Basic) or  &lt;paramref name=&quot;linkOptions&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (Nothing in Visual Basic).">
        <paramref name="target" /> имеет значение <see langword="null" /> (nothing в Visual Basic) или <paramref name="linkOptions" /> имеет значение <see langword="null" /> (nothing в Visual Basic).</exception>
      <returns vsli:raw="An IDisposable that, upon calling Dispose, will unlink the source from the target.">Интерфейс IDisposable, который при вызове метода Dispose отсоединит источник от целевого объекта.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)">
      <summary vsli:raw="Causes the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IDataflowBlock&quot; /&gt; to complete in a  &lt;see cref=&quot;F:System.Threading.Tasks.TaskStatus.Faulted&quot; /&gt; state.">Вызывает завершение блока <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> в состоянии <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />.</summary>
      <param name="exception" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; that caused the faulting.">
        <see cref="T:System.Exception" />, вызвавший сбой.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;exception&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="exception" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.System#Threading#Tasks#Dataflow#ISourceBlock{System#Tuple{System#Collections#Generic#IList{T1}@System#Collections#Generic#IList{T2}@System#Collections#Generic#IList{T3}}}#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}},System.Boolean@)">
      <summary vsli:raw="Passes the ownership of the message identified by the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; from this  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt; instance to the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt;.">Передает владение сообщением, идентифицируемым <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, из этого экземпляра <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> в <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</summary>
      <param name="messageHeader" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; of the message that is to be consumed.">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> сообщения, которое требуется получить.</param>
      <param name="target" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; for which the message is to be consumed.">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, для которого будет получено сообщение.</param>
      <param name="messageConsumed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was successfully consumed. &lt;see langword=&quot;false&quot; /&gt; otherwise.">Значение <see langword="true" />, если сообщение было успешно получено. В противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;messageHeader&quot; /&gt; is not valid.">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (Nothing in Visual Basic).">
        <paramref name="target" /> имеет значение <see langword="null" /> (nothing в Visual Basic).</exception>
      <returns vsli:raw="The value of the consumed message. This may correspond to a different &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; instance than was previously reserved and passed as the &lt;paramref name=&quot;messageHeader&quot; /&gt; to this method. The consuming &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; must use the returned value instead of the value passed as &lt;paramref name=&quot;messageValue&quot; /&gt; to &lt;see cref=&quot;M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)&quot; /&gt;. If the message requested is not available, the return value is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Значение получаемого сообщения. Это может соответствовать другому экземпляру <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, отличающемуся от ранее зарезервированного и переданного в качестве параметра <paramref name="messageHeader" /> этому методу. Рассматриваемый <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> должен использовать возвращаемое значение вместо значения, переданного как <paramref name="messageValue" /> в <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />. Если запрошенное сообщение недоступно, возвращается значение <see langword="null" /> (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.System#Threading#Tasks#Dataflow#ISourceBlock{System#Tuple{System#Collections#Generic#IList{T1}@System#Collections#Generic#IList{T2}@System#Collections#Generic#IList{T3}}}#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}})">
      <summary vsli:raw="Releases the right to pass the ownership of the message identified by the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; from this &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt; to the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt;.">Передает право владения сообщением, идентифицируемым <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, из <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> в <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</summary>
      <param name="messageHeader" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; of the reserved message.">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> зарезервированного сообщения.</param>
      <param name="target" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; that currently holds the reservation.">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, который в настоящее время сохраняет резервирование.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;messageHeader&quot; /&gt; is not valid.">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (Nothing in Visual Basic).">
        <paramref name="target" /> имеет значение <see langword="null" /> (nothing в Visual Basic).</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; did not have the message reserved.">У <paramref name="target" /> нет зарезервированного сообщения.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.System#Threading#Tasks#Dataflow#ISourceBlock{System#Tuple{System#Collections#Generic#IList{T1}@System#Collections#Generic#IList{T2}@System#Collections#Generic#IList{T3}}}#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}})">
      <summary vsli:raw="Reserves the right to pass the ownership of the message identified by the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; from this &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt; to the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt;.">Резервирует право владения сообщением, идентифицируемым <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, из <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> в <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</summary>
      <param name="messageHeader" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; of the message that is to be reserved.">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> сообщения, которое требуется зарезервировать.</param>
      <param name="target" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; for which the message is to be reserved.">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, для которого будет зарезервировано сообщение.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;messageHeader&quot; /&gt; is not valid.">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">
        <paramref name="target" /> — это <see langword="null" /> (<see langword="Nothing" /> в Visual Basic).</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was successfully reserved; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если сообщение было успешно зарезервировано; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.ToString">
      <summary vsli:raw="Returns a string that represents the formatted name of this  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IDataflowBlock&quot; /&gt; instance.">Возвращает строку, представляющую отформатированное имя данного экземпляра <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />.</summary>
      <returns vsli:raw="A string that represents the formatted name of this  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IDataflowBlock&quot; /&gt; instance.">Строка, представляющая отформатированное имя данного экземпляра <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.TryReceive(System.Predicate{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}},System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}@)">
      <summary vsli:raw="Attempts to synchronously receive an available output item from the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1&quot; /&gt;.">Пытается синхронно получить доступный выходной элемент от интерфейса <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</summary>
      <param name="filter" vsli:raw="The predicate a value must successfully pass in order for it to be received.  &lt;paramref name=&quot;filter&quot; /&gt; may be &lt;see langword=&quot;null&quot; /&gt; in which case all items will pass.">Значение предиката должно быть успешно передано, чтобы оно было получено.  Параметр <paramref name="filter" /> может иметь значение <see langword="null" />; в этом случае будут переданы все элементы.</param>
      <param name="item" vsli:raw="The item received from the source.">Элемент, полученный от источника.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an item could be received; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если получить элемент не удалось; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.TryReceiveAll(System.Collections.Generic.IList{System.Tuple{System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`1},System.Collections.Generic.IList{`2}}}@)">
      <summary vsli:raw="Attempts to synchronously receive all available items from the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1&quot; /&gt;.">Пытается синхронно получить все доступные элементы от интерфейса <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</summary>
      <param name="items" vsli:raw="The items received from the source.">Элементы, полученные от источника.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if one or more items could be received; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если могут быть получены один или несколько элементов; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.BatchSize">
      <summary vsli:raw="Gets the size of the batches generated by this &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3&quot; /&gt;.">Получает размер пакетов, созданных данным <see cref="T:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3" />.</summary>
      <returns vsli:raw="The batch size.">Размер пакета.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Completion">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; that represents the asynchronous operation and completion of the dataflow block.">Получает объект <see cref="T:System.Threading.Tasks.Task" />, представляющий асинхронную операцию и завершение блока потока данных.</summary>
      <returns vsli:raw="The task.">Задача.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.OutputCount">
      <summary vsli:raw="Gets the number of output items available to be received from this block.">Получает число выходных элементов, доступных для получения из этого блока.</summary>
      <returns vsli:raw="The number of output items.">Число выходных элементов.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Target1">
      <summary vsli:raw="Gets a target that may be used to offer messages of the first type.">Получает целевой объект, который может использоваться для предложения сообщений первого типа.</summary>
      <returns vsli:raw="The target.">Целевой объект.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Target2">
      <summary vsli:raw="Gets a target that may be used to offer messages of the second type.">Получает целевой объект, который может использоваться для предложения сообщений второго типа.</summary>
      <returns vsli:raw="The target.">Целевой объект.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.BatchedJoinBlock`3.Target3">
      <summary vsli:raw="Gets a target that may be used to offer messages of the third type.">Получает целевой объект, который может использоваться для предложения сообщений третьего типа.</summary>
      <returns vsli:raw="The target.">Целевой объект.</returns>
    </member>
    <member name="T:System.Threading.Tasks.Dataflow.BroadcastBlock`1">
      <summary vsli:raw="Provides a buffer for storing at most one element at time, overwriting each message with the next as it arrives.">Предоставляет буфер для хранения максимум одного элемента за раз. Сообщение перезаписывается следующим по мере поступления.</summary>
      <typeparam name="T" vsli:raw="Specifies the type of the data buffered by this dataflow block.">Указывает тип данных, буферизуемых этим блоком потока данных.</typeparam>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BroadcastBlock`1.#ctor(System.Func{`0,`0})">
      <summary vsli:raw="Initializes the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.BroadcastBlock`1&quot; /&gt; with the specified cloning function.">Инициализирует <see cref="T:System.Threading.Tasks.Dataflow.BroadcastBlock`1" /> с указанной функцией клонирования.</summary>
      <param name="cloningFunction" vsli:raw="The function to use to clone the data when offered to other blocks.">Функция, используемая для клонирования данных при предложении другим блокам.</param>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BroadcastBlock`1.#ctor(System.Func{`0,`0},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
      <summary vsli:raw="Initializes the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.BroadcastBlock`1&quot; /&gt; with the specified cloning function and  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowBlockOptions&quot; /&gt;.">Инициализирует <see cref="T:System.Threading.Tasks.Dataflow.BroadcastBlock`1" /> с указанной функцией клонирования и <see cref="T:System.Threading.Tasks.Dataflow.DataflowBlockOptions" />.</summary>
      <param name="cloningFunction" vsli:raw="The function to use to clone the data when offered to other blocks.">Функция, используемая для клонирования данных при предложении другим блокам.</param>
      <param name="dataflowBlockOptions" vsli:raw="The options with which to configure this  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.BroadcastBlock`1&quot; /&gt;.">Параметры, с которыми требуется настроить этот объект <see cref="T:System.Threading.Tasks.Dataflow.BroadcastBlock`1" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;dataflowBlockOptions&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="dataflowBlockOptions" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BroadcastBlock`1.Complete">
      <summary vsli:raw="Signals to the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IDataflowBlock&quot; /&gt; that it should not accept nor produce any more messages nor consume any more postponed messages.">Сообщает блоку <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />, что он больше не должен принимать и создавать никакие сообщения и не должен использовать отложенные сообщения.</summary>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BroadcastBlock`1.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Threading.Tasks.Dataflow.DataflowLinkOptions)">
      <summary vsli:raw="Links the  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt; to the specified  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt;.">Связывает <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> с указанным <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</summary>
      <param name="target" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; to which to connect this source.">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, к которому требуется подключить этот источник.</param>
      <param name="linkOptions" vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowLinkOptions&quot; /&gt; instance that configures the link.">Экземпляр <see cref="T:System.Threading.Tasks.Dataflow.DataflowLinkOptions" />, настраивающий ссылку.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;target&quot; /&gt; is null (Nothing in Visual Basic) or  &lt;paramref name=&quot;linkOptions&quot; /&gt; is null (Nothing in Visual Basic).">
        <paramref name="target" /> имеет значение NULL (nothing в Visual Basic) или <paramref name="linkOptions" /> имеет значение NULL (nothing в Visual Basic).</exception>
      <returns vsli:raw="An IDisposable that, upon calling Dispose, will unlink the source from the target.">Интерфейс IDisposable, который при вызове метода Dispose отсоединит источник от целевого объекта.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BroadcastBlock`1.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)">
      <summary vsli:raw="Causes the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IDataflowBlock&quot; /&gt; to complete in a &lt;see cref=&quot;F:System.Threading.Tasks.TaskStatus.Faulted&quot; /&gt; state.">Вызывает выполнение <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> в состоянии <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />.</summary>
      <param name="exception" vsli:raw="The  &lt;see cref=&quot;T:System.Exception&quot; /&gt; that caused the faulting.">
        <see cref="T:System.Exception" />, вызвавший сбой.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;exception&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="exception" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BroadcastBlock`1.System#Threading#Tasks#Dataflow#IReceivableSourceBlock{T}#TryReceiveAll(System.Collections.Generic.IList{`0}@)">
      <summary vsli:raw="Attempts to synchronously receive all available items from the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1&quot; /&gt;.">Пытается синхронно получить все доступные элементы от интерфейса <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</summary>
      <param name="items" vsli:raw="The items received from the source.">Элементы, полученные от источника.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if one or more items could be received; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если могут быть получены один или несколько элементов; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BroadcastBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock{T}#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)">
      <summary vsli:raw="Called by a linked &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; to accept and consume a &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; previously offered by this &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt;.">Вызывается связанным объектом <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> для принятия и использования объекта <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, ранее предложенного этим объектом <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</summary>
      <param name="messageHeader" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; of the message being consumed.">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> используемого сообщения.</param>
      <param name="target" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; consuming the message.">
        <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, получающий сообщение.</param>
      <param name="messageConsumed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was successfully consumed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если сообщение было успешно получено; в противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;messageHeader&quot; /&gt; is not valid.">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="target" /> — <see langword="null" />.</exception>
      <returns vsli:raw="The value of the consumed message. This may correspond to a different  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; instance than was previously reserved and passed as the &lt;paramref name=&quot;messageHeader&quot; /&gt; to &lt;see cref=&quot;M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)&quot; /&gt;. The consuming &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; must use the returned value instead of the value passed as &lt;paramref name=&quot;messageValue&quot; /&gt; through &lt;see cref=&quot;M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)&quot; /&gt;.  &#xA;  &#xA; If the message requested is not available, the return value will be &lt;see langword=&quot;null&quot; /&gt;.">Значение получаемого сообщения. Это может соответствовать другому экземпляру <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, отличному от ранее зарезервированного и переданного в качестве параметра <paramref name="messageHeader" /> методу <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" />. Рассматриваемый <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> должен использовать возвращаемое значение вместо значения, переданного как параметр <paramref name="messageValue" /> с помощью метода <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />.  
  
Если запрашиваемое сообщение недоступно, возвращается значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BroadcastBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock{T}#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})">
      <summary vsli:raw="Called by a linked &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; to release a previously reserved &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; by this &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt;.">Вызывается связанным объектом <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> для освобождения объекта <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, ранее зарезервированного этим объектом <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</summary>
      <param name="messageHeader" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; of the reserved message being released.">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> освобождаемого зарезервированного сообщения.</param>
      <param name="target" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; releasing the message it previously reserved.">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, освобождающий сообщение, которое он ранее зарезервировал.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;messageHeader&quot; /&gt; is not valid.">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="target" /> — <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; did not have the message reserved.">У <paramref name="target" /> нет зарезервированного сообщения.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BroadcastBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock{T}#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})">
      <summary vsli:raw="Called by a linked &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; to reserve a previously offered &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; by this &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt;.">Вызывается связанным объектом <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> для резервирования объекта <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, ранее предложенного этим объектом <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</summary>
      <param name="messageHeader" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; of the message being reserved.">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> резервируемого сообщения.</param>
      <param name="target" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; reserving the message.">
        <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, сохраняющий сообщение.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;messageHeader&quot; /&gt; is not valid.">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="target" /> — <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was successfully reserved; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если сообщение было успешно зарезервировано; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BroadcastBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock{T}#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
      <summary vsli:raw="Offers a message to the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt;, giving the target the opportunity to consume or postpone the message.">Предлагает сообщение блоку <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, предоставляя целевому объекту возможность использовать или отложить его.</summary>
      <param name="messageHeader" vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; instance that represents the header of the message being offered.">Экземпляр <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, представляющий заголовок предлагаемого сообщения.</param>
      <param name="messageValue" vsli:raw="The value of the message being offered.">Значение предлагаемого свойства.</param>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt; offering the message. This may be null.">
        <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />, предлагающий сообщение. Может содержать пустое значение.</param>
      <param name="consumeToAccept" vsli:raw="Set to &lt;see langword=&quot;true&quot; /&gt; to instruct the target to call &lt;see cref=&quot;M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)&quot; /&gt; synchronously during the call to &lt;see cref=&quot;M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)&quot; /&gt;, prior to returning &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted&quot; /&gt;, in order to consume the message.">Значение <see langword="true" /> для синхронного вызова целевым объектом метода <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /> во время вызова метода <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" /> до возврата <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" />, чтобы использовать сообщение.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The  &lt;paramref name=&quot;messageHeader&quot; /&gt; is not valid.  &#xA;  &#xA; -or- &lt;paramref name=&quot;consumeToAccept&quot; /&gt; may only be true if provided with a non-null &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="messageHeader" /> — недопустимое значение.  
  
-или- параметр <paramref name="consumeToAccept" /> может иметь значение true, только если для него предоставлен параметр <paramref name="source" /> со значением, отличным от значения NULL.</exception>
      <returns vsli:raw="The status of the offered message. If the message was accepted by the target, &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted&quot; /&gt; is returned, and the source should no longer use the offered message, because it is now owned by the target. If the message was postponed by the target, &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed&quot; /&gt; is returned as a notification that the target may later attempt to consume or reserve the message; in the meantime, the source still owns the message and may offer it to other blocks.  &#xA;  &#xA; If the target would have otherwise postponed message, but &lt;paramref name=&quot;source&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;, &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined&quot; /&gt; is instead returned.  &#xA;  &#xA; If the target tried to accept the message but missed it due to the source delivering the message to another target or simply discarding it, &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable&quot; /&gt; is returned.  &#xA;  &#xA; If the target chose not to accept the message, &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined&quot; /&gt; is returned. If the target chose not to accept the message and will never accept another message from this source, &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently&quot; /&gt; is returned.">Состояние предложенного сообщения. Если сообщение было принято целевым объектом, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> и источник больше не должен использовать предложенное сообщение, поскольку оно теперь принадлежит целевому объекту. Если сообщение было отложено целевым объектом, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" /> в качестве уведомления о том, что целевой объект может позже попытаться использовать или зарезервировать сообщение; при этом источник будет по-прежнему владеть сообщением и может предлагать его другим блокам.  
  
Если целевой объект в противном случае отложил бы сообщение, но параметр <paramref name="source" /> имел значение <see langword="null" />, вместо этого возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" />.  
  
Если целевой объект попытался принять сообщение, но не получил его из-за доставки сообщения источником другому целевому объекту или просто отбрасывания сообщения источником, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" />.  
  
Если целевой объект принял решение не принимать сообщение, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" />. Если целевой объект принял решение не принимать сообщение и никогда не будет принимать другие сообщения от этого источника, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BroadcastBlock`1.ToString">
      <summary vsli:raw="Returns a string that represents the formatted name of this  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IDataflowBlock&quot; /&gt; instance.">Возвращает строку, представляющую отформатированное имя данного экземпляра <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />.</summary>
      <returns vsli:raw="A string that represents the formatted name of this &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IDataflowBlock&quot; /&gt; instance.">Строка, представляющая отформатированное имя данного экземпляра <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BroadcastBlock`1.TryReceive(System.Predicate{`0},`0@)">
      <summary vsli:raw="Attempts to synchronously receive an available output item from the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1&quot; /&gt;.">Пытается синхронно получить доступный выходной элемент от интерфейса <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</summary>
      <param name="filter" vsli:raw="The predicate a value must successfully pass in order for it to be received.  &lt;paramref name=&quot;filter&quot; /&gt; may be &lt;see langword=&quot;null&quot; /&gt;, in which case all items will pass.">Значение предиката должно быть успешно передано, чтобы оно было получено.  Параметр <paramref name="filter" /> может иметь значение <see langword="null" />; в этом случае будут переданы все элементы.</param>
      <param name="item" vsli:raw="The item received from the source.">Элемент, полученный от источника.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an item could be received; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если получить элемент не удалось; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.BroadcastBlock`1.Completion">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; that represents the asynchronous operation and completion of the dataflow block.">Получает объект <see cref="T:System.Threading.Tasks.Task" />, представляющий асинхронную операцию и завершение блока потока данных.</summary>
      <returns vsli:raw="The task.">Задача.</returns>
    </member>
    <member name="T:System.Threading.Tasks.Dataflow.BufferBlock`1">
      <summary vsli:raw="Provides a buffer for storing data for a Dataflow.">Создает буфер для хранения данных в потоке данных.</summary>
      <typeparam name="T" vsli:raw="Specifies the type of the data buffered by this dataflow block.">Указывает тип данных, буферизуемых этим блоком потока данных.</typeparam>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BufferBlock`1.#ctor">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.BufferBlock`1&quot; /&gt;.">Инициализирует новый объект <see cref="T:System.Threading.Tasks.Dataflow.BufferBlock`1" />.</summary>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BufferBlock`1.#ctor(System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.BufferBlock`1&quot; /&gt; with the specified  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowBlockOptions&quot; /&gt;.">Инициализирует новый <see cref="T:System.Threading.Tasks.Dataflow.BufferBlock`1" /> с указанным <see cref="T:System.Threading.Tasks.Dataflow.DataflowBlockOptions" />.</summary>
      <param name="dataflowBlockOptions" vsli:raw="The options with which to configure this  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.BufferBlock`1&quot; /&gt;.">Параметры, с которыми требуется настроить этот объект <see cref="T:System.Threading.Tasks.Dataflow.BufferBlock`1" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;dataflowBlockOptions&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="dataflowBlockOptions" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BufferBlock`1.Complete">
      <summary vsli:raw="Signals to the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IDataflowBlock&quot; /&gt; that it should not accept nor produce any more messages nor consume any more postponed messages.">Сообщает блоку <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />, что он больше не должен принимать и создавать никакие сообщения и не должен использовать отложенные сообщения.</summary>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BufferBlock`1.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Threading.Tasks.Dataflow.DataflowLinkOptions)">
      <summary vsli:raw="Links the  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt; to the specified  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt;.">Связывает <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> с указанным <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</summary>
      <param name="target" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; to which to connect this source.">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, к которому требуется подключить этот источник.</param>
      <param name="linkOptions" vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowLinkOptions&quot; /&gt; instance that configures the link.">Экземпляр <see cref="T:System.Threading.Tasks.Dataflow.DataflowLinkOptions" />, настраивающий ссылку.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;target&quot; /&gt; is null (Nothing in Visual Basic) or  &lt;paramref name=&quot;linkOptions&quot; /&gt; is null (Nothing in Visual Basic).">
        <paramref name="target" /> имеет значение NULL (nothing в Visual Basic) или <paramref name="linkOptions" /> имеет значение NULL (nothing в Visual Basic).</exception>
      <returns vsli:raw="An IDisposable that, upon calling Dispose, will unlink the source from the target.">Интерфейс IDisposable, который при вызове метода Dispose отсоединит источник от целевого объекта.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)">
      <summary vsli:raw="Causes the  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IDataflowBlock&quot; /&gt; to complete in a &lt;see cref=&quot;F:System.Threading.Tasks.TaskStatus.Faulted&quot; /&gt; state.">Вызывает выполнение <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> в состоянии <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />.</summary>
      <param name="exception" vsli:raw="The  &lt;see cref=&quot;T:System.Exception&quot; /&gt; that caused the faulting.">
        <see cref="T:System.Exception" />, вызвавший сбой.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;exception&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="exception" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock{T}#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)">
      <summary vsli:raw="Called by a linked &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; to accept and consume a &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; previously offered by this &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt;.">Вызывается связанным объектом <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> для принятия и использования объекта <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, ранее предложенного этим объектом <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</summary>
      <param name="messageHeader" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; of the message being consumed.">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> используемого сообщения.</param>
      <param name="target" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; consuming the message.">
        <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, получающий сообщение.</param>
      <param name="messageConsumed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was successfully consumed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если сообщение было успешно получено; в противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;messageHeader&quot; /&gt; is not valid.">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="target" /> — <see langword="null" />.</exception>
      <returns vsli:raw="The value of the consumed message. This may correspond to a different  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; instance than was previously reserved and passed as the &lt;paramref name=&quot;messageHeader&quot; /&gt; to  &lt;see cref=&quot;M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)&quot; /&gt;. The consuming &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; must use the returned value instead of the value passed as &lt;paramref name=&quot;messageValue&quot; /&gt; through &lt;see cref=&quot;M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)&quot; /&gt;.  &#xA;  &#xA; If the message requested is not available, the return value will be &lt;see langword=&quot;null&quot; /&gt;.">Значение получаемого сообщения. Это может соответствовать другому экземпляру <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, отличному от ранее зарезервированного и переданного в качестве параметра <paramref name="messageHeader" /> методу <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" />. Рассматриваемый <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> должен использовать возвращаемое значение вместо значения, переданного как параметр <paramref name="messageValue" /> с помощью метода <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />.  
  
Если запрашиваемое сообщение недоступно, возвращается значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock{T}#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})">
      <summary vsli:raw="Called by a linked &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; to release a previously reserved &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; by this &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt;.">Вызывается связанным объектом <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> для освобождения объекта <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, ранее зарезервированного этим объектом <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</summary>
      <param name="messageHeader" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; of the reserved message being released.">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> освобождаемого зарезервированного сообщения.</param>
      <param name="target" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; releasing the message it previously reserved.">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, освобождающий сообщение, которое он ранее зарезервировал.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;messageHeader&quot; /&gt; is not valid.">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="target" /> — <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; did not have the message reserved.">У <paramref name="target" /> нет зарезервированного сообщения.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock{T}#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})">
      <summary vsli:raw="Called by a linked &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; to reserve a previously offered &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; by this &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt;.">Вызывается связанным объектом <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> для резервирования объекта <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, ранее предложенного этим объектом <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</summary>
      <param name="messageHeader" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; of the message being reserved.">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> резервируемого сообщения.</param>
      <param name="target" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; reserving the message.">
        <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, сохраняющий сообщение.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;messageHeader&quot; /&gt; is not valid.">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="target" /> — <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was successfully reserved; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если сообщение было успешно зарезервировано; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BufferBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock{T}#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
      <summary vsli:raw="Offers a message to the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt;, giving the target the opportunity to consume or postpone the message.">Предлагает сообщение блоку <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, предоставляя целевому объекту возможность использовать или отложить его.</summary>
      <param name="messageHeader" vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; instance that represents the header of the message being offered.">Экземпляр <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, представляющий заголовок предлагаемого сообщения.</param>
      <param name="messageValue" vsli:raw="The value of the message being offered.">Значение предлагаемого свойства.</param>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt; offering the message. This may be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />, предлагающий сообщение. Это может быть значение <see langword="null" />.</param>
      <param name="consumeToAccept" vsli:raw="Set to true to instruct the target to call &lt;see cref=&quot;M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)&quot; /&gt; synchronously during the call to &lt;see cref=&quot;M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)&quot; /&gt;, prior to returning &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted&quot; /&gt;, in order to consume the message.">Значение true для синхронного вызова целевым объектом метода <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /> во время вызова метода <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" /> до возврата <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" />, чтобы использовать сообщение.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The  &lt;paramref name=&quot;messageHeader&quot; /&gt; is not valid.  &#xA;  &#xA; -or- &lt;paramref name=&quot;consumeToAccept&quot; /&gt; may only be true if provided with a non-null &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="messageHeader" /> — недопустимое значение.  
  
-или- параметр <paramref name="consumeToAccept" /> может иметь значение true, только если для него предоставлен параметр <paramref name="source" /> со значением, отличным от значения NULL.</exception>
      <returns vsli:raw="The status of the offered message. If the message was accepted by the target, &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted&quot; /&gt; is returned, and the source should no longer use the offered message, because it is now owned by the target. If the message was postponed by the target, &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed&quot; /&gt; is returned as a notification that the target may later attempt to consume or reserve the message; in the meantime, the source still owns the message and may offer it to other blocks.  &#xA;  &#xA; If the target would have otherwise postponed message, but &lt;paramref name=&quot;source&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;, &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined&quot; /&gt; is instead returned.  &#xA;  &#xA; If the target tried to accept the message but missed it due to the source delivering the message to another target or simply discarding it, &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable&quot; /&gt; is returned.  &#xA;  &#xA; If the target chose not to accept the message, &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined&quot; /&gt; is returned. If the target chose not to accept the message and will never accept another message from this source, &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently&quot; /&gt; is returned.">Состояние предложенного сообщения. Если сообщение было принято целевым объектом, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> и источник больше не должен использовать предложенное сообщение, поскольку оно теперь принадлежит целевому объекту. Если сообщение было отложено целевым объектом, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" /> в качестве уведомления о том, что целевой объект может позже попытаться использовать или зарезервировать сообщение; при этом источник будет по-прежнему владеть сообщением и может предлагать его другим блокам.  
  
Если целевой объект в противном случае отложил бы сообщение, но параметр <paramref name="source" /> имел значение <see langword="null" />, вместо этого возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" />.  
  
Если целевой объект попытался принять сообщение, но не получил его из-за доставки сообщения источником другому целевому объекту или просто отбрасывания сообщения источником, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" />.  
  
Если целевой объект принял решение не принимать сообщение, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" />. Если целевой объект принял решение не принимать сообщение и никогда не будет принимать другие сообщения от этого источника, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BufferBlock`1.ToString">
      <summary vsli:raw="Returns a string that represents the formatted name of this  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IDataflowBlock&quot; /&gt; instance.">Возвращает строку, представляющую отформатированное имя данного экземпляра <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />.</summary>
      <returns vsli:raw="A string that represents the formatted name of this  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IDataflowBlock&quot; /&gt; instance.">Строка, представляющая отформатированное имя данного экземпляра <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BufferBlock`1.TryReceive(System.Predicate{`0},`0@)">
      <summary vsli:raw="Attempts to synchronously receive an available output item from the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1&quot; /&gt;.">Пытается синхронно получить доступный выходной элемент от интерфейса <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</summary>
      <param name="filter" vsli:raw="The predicate value must successfully pass in order for it to be received. &lt;paramref name=&quot;filter&quot; /&gt; may be &lt;see langword=&quot;null&quot; /&gt;, in which case all items will pass.">Значение предиката должно быть успешно передано, чтобы оно было получено. Параметр <paramref name="filter" /> может иметь значение <see langword="null" />; в этом случае будут переданы все элементы.</param>
      <param name="item" vsli:raw="The item received from the source.">Элемент, полученный от источника.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an item could be received; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если получить элемент не удалось; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.BufferBlock`1.TryReceiveAll(System.Collections.Generic.IList{`0}@)">
      <summary vsli:raw="Attempts to synchronously receive all available items from the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1&quot; /&gt;.">Пытается синхронно получить все доступные элементы от интерфейса <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</summary>
      <param name="items" vsli:raw="The items received from the source.">Элементы, полученные от источника.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if one or more items could be received; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если могут быть получены один или несколько элементов; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.BufferBlock`1.Completion">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; that represents the asynchronous operation and completion of the dataflow block.">Получает объект <see cref="T:System.Threading.Tasks.Task" />, представляющий асинхронную операцию и завершение блока потока данных.</summary>
      <returns vsli:raw="The task.">Задача.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.BufferBlock`1.Count">
      <summary vsli:raw="Gets the number of items currently stored in the buffer.">Получает число элементов, хранящихся в буфере в данный момент.</summary>
      <returns vsli:raw="The number of items.">Количество элементов.</returns>
    </member>
    <member name="T:System.Threading.Tasks.Dataflow.DataflowBlock">
      <summary vsli:raw="Provides a set of static (Shared in Visual Basic) methods for working with dataflow blocks.">Предоставляет набор статических методов (Shared в Visual Basic) для работы с блоками потоков данных.</summary>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowBlock.AsObservable``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.IObservable`1&quot; /&gt; abstraction over the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt;.">Создает новую абстракцию <see cref="T:System.IObservable`1" /> для <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</summary>
      <param name="source" vsli:raw="The source to wrap.">Источник для упаковки.</param>
      <typeparam name="TOutput" vsli:raw="Specifies the type of data contained in the source.">Указывает тип данных, содержащихся в источнике.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="source" /> — <see langword="null" />.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IObservable`1&quot; /&gt; that enables observers to be subscribed to the source.">
        <see cref="T:System.IObservable`1" />, позволяющий наблюдателям подписаться на источник.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowBlock.AsObserver``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0})">
      <summary vsli:raw="Creates a new &lt;see cref=&quot;T:System.IObserver`1&quot; /&gt; abstraction over the  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt;.">Создает новую абстракцию <see cref="T:System.IObserver`1" /> для <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</summary>
      <param name="target" vsli:raw="The target to wrap.">Цель для упаковки.</param>
      <typeparam name="TInput" vsli:raw="Specifies the type of input accepted by the target block.">Указывает тип входных данных, принимаемых целевым блоком.</typeparam>
      <returns vsli:raw="An observer that wraps the target block.">Наблюдатель, который создает программу-оболочку для блок целевого объекта.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1})">
      <summary vsli:raw="Monitors two dataflow sources, invoking the provided handler for whichever source makes data available first.">Отслеживает два источника потоков данных, вызывая предоставленный обработчик для источника, который первым сделает данные доступными.</summary>
      <param name="source1" vsli:raw="The first source.">Первый источник.</param>
      <param name="action1" vsli:raw="The handler to execute on data from the first source.">Обработчик, который необходимо выполнить для данных от первого источника.</param>
      <param name="source2" vsli:raw="The second source.">Второй источник.</param>
      <param name="action2" vsli:raw="The handler to execute on data from the second source.">Обработчик, который необходимо выполнить для данных от второго источника.</param>
      <typeparam name="T1" vsli:raw="Specifies type of data contained in the first source.">Указывает тип данных, содержащихся в первом источнике.</typeparam>
      <typeparam name="T2" vsli:raw="Specifies type of data contained in the second source.">Указывает тип данных, содержащихся во втором источнике.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source1&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The  &lt;paramref name=&quot;action1&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;source2&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;action2&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="source1" /> — <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="action1" /> — <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="source2" /> — <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="action2" /> — <see langword="null" />.</exception>
      <returns vsli:raw="A  &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; that represents the asynchronous choice. If both sources are completed prior to the choice completing, the resulting task will be canceled. When one of the sources has data available and successfully propagates it to the choice, the resulting task will complete when the handler completes; if the handler throws an exception, the task will end in the &lt;see cref=&quot;F:System.Threading.Tasks.TaskStatus.Faulted&quot; /&gt; state and will contain the unhandled exception. Otherwise, the task will end with its &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; set to either 0 or 1 to represent the first or second source, respectively.  &#xA;  &#xA; This method will only consume an element from one of the two data sources, never both.">Объект <see cref="T:System.Threading.Tasks.Task`1" />, который представляет асинхронный выбор. Если оба источника завершены до завершения выбора, результирующая задача будет отменена. Если один из источников имеет доступные данные и успешно распространяет их выбранному ресурсу, получающаяся в результате задача завершается при завершении работы обработчика; если обработчик вызывает исключение, задача завершается в состоянии <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> и содержит необработанное исключение. В противном случае при завершении задачи ее свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> будет задано равным 0 или 1 для представления первого или второго источника соответственно.  
  
Этот метод использует только один элемент из одного из двух источников данных, никогда из обоих.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``2(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
      <summary vsli:raw="Monitors two dataflow sources, invoking the provided handler for whichever source makes data available first.">Отслеживает два источника потоков данных, вызывая предоставленный обработчик для источника, который первым сделает данные доступными.</summary>
      <param name="source1" vsli:raw="The first source.">Первый источник.</param>
      <param name="action1" vsli:raw="The handler to execute on data from the first source.">Обработчик, который необходимо выполнить для данных от первого источника.</param>
      <param name="source2" vsli:raw="The second source.">Второй источник.</param>
      <param name="action2" vsli:raw="The handler to execute on data from the second source.">Обработчик, который необходимо выполнить для данных от второго источника.</param>
      <param name="dataflowBlockOptions" vsli:raw="The options with which to configure this choice.">Параметры, с которыми требуется настроить этот вариант.</param>
      <typeparam name="T1" vsli:raw="Specifies type of data contained in the first source.">Указывает тип данных, содержащихся в первом источнике.</typeparam>
      <typeparam name="T2" vsli:raw="Specifies type of data contained in the second source.">Указывает тип данных, содержащихся во втором источнике.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source1&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;action1&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;source2&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;action2&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;dataflowBlockOptions&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="source1" /> — <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="action1" /> — <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="source2" /> — <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="action2" /> — <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="dataflowBlockOptions" /> — <see langword="null" />.</exception>
      <returns vsli:raw="A  &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; that represents the asynchronous choice. If both sources are completed prior to the choice completing, or if the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; provided as part of &lt;paramref name=&quot;dataflowBlockOptions&quot; /&gt; is canceled prior to the choice completing, the resulting task will be canceled. When one of the sources has data available and successfully propagates it to the choice, the resulting task will complete when the handler completes; if the handler throws an exception, the task will end in the &lt;see cref=&quot;F:System.Threading.Tasks.TaskStatus.Faulted&quot; /&gt; state and will contain the unhandled exception. Otherwise, the task will end with its &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; set to either 0 or 1 to represent the first or second source, respectively.">Объект <see cref="T:System.Threading.Tasks.Task`1" />, который представляет асинхронный выбор. Если оба источника завершены до завершения выбора или если <see cref="T:System.Threading.CancellationToken" />, предоставленный в составе <paramref name="dataflowBlockOptions" />, отменяется до завершения выбора, результирующая задача будет отменена. Если один из источников имеет доступные данные и успешно распространяет их выбранному ресурсу, получающаяся в результате задача завершается при завершении работы обработчика; если обработчик вызывает исключение, задача завершается в состоянии <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> и содержит необработанное исключение. В противном случае при завершении задачи ее свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> будет задано равным 0 или 1 для представления первого или второго источника соответственно.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2})">
      <summary vsli:raw="Monitors three dataflow sources, invoking the provided handler for whichever source makes data available first.">Отслеживает три источника потоков данных, вызывая предоставленный обработчик для источника, который первым сделает данные доступными.</summary>
      <param name="source1" vsli:raw="The first source.">Первый источник.</param>
      <param name="action1" vsli:raw="The handler to execute on data from the first source.">Обработчик, который необходимо выполнить для данных от первого источника.</param>
      <param name="source2" vsli:raw="The second source.">Второй источник.</param>
      <param name="action2" vsli:raw="The handler to execute on data from the second source.">Обработчик, который необходимо выполнить для данных от второго источника.</param>
      <param name="source3" vsli:raw="The third source.">Третий источник.</param>
      <param name="action3" vsli:raw="The handler to execute on data from the third source.">Обработчик, который необходимо выполнить для данных от третьего источника.</param>
      <typeparam name="T1" vsli:raw="Specifies type of data contained in the first source.">Указывает тип данных, содержащихся в первом источнике.</typeparam>
      <typeparam name="T2" vsli:raw="Specifies type of data contained in the second source.">Указывает тип данных, содержащихся во втором источнике.</typeparam>
      <typeparam name="T3" vsli:raw="Specifies type of data contained in the third source.">Указывает тип данных, содержащихся в третьем источнике.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source1&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;action1&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;source2&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;action2&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;source3&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;action3&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="source1" /> — <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="action1" /> — <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="source2" /> — <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="action2" /> — <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="source3" /> — <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="action3" /> — <see langword="null" />.</exception>
      <returns vsli:raw="A  &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; that represents the asynchronous choice. If all sources are completed prior to the choice completing, the resulting task will be canceled. When one of the sources has data available and successfully propagates it to the choice, the resulting task will complete when the handler completes; if the handler throws an exception, the task will end in the &lt;see cref=&quot;F:System.Threading.Tasks.TaskStatus.Faulted&quot; /&gt; state and will contain the unhandled exception. Otherwise, the task will end with its &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; set to the 0-based index of the source.  &#xA;  &#xA; This method will only consume an element from one of the data sources, never more than one.">Объект <see cref="T:System.Threading.Tasks.Task`1" />, который представляет асинхронный выбор. Если все источники завершены до завершения выбора, результирующая задача будет отменена. Если один из источников имеет доступные данные и успешно распространяет их выбранному ресурсу, получающаяся в результате задача завершается при завершении работы обработчика; если обработчик вызывает исключение, задача завершается в состоянии <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> и содержит необработанное исключение. В противном случае при завершении задачи ее свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> будет задано равным отсчитываемому от нуля индексу источника.  
  
Этот метод использует только один элемент из одного из источников данных, никогда из нескольких.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowBlock.Choose``3(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Action{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1},System.Action{``1},System.Threading.Tasks.Dataflow.ISourceBlock{``2},System.Action{``2},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
      <summary vsli:raw="Monitors three dataflow sources, invoking the provided handler for whichever source makes data available first.">Отслеживает три источника потоков данных, вызывая предоставленный обработчик для источника, который первым сделает данные доступными.</summary>
      <param name="source1" vsli:raw="The first source.">Первый источник.</param>
      <param name="action1" vsli:raw="The handler to execute on data from the first source.">Обработчик, который необходимо выполнить для данных от первого источника.</param>
      <param name="source2" vsli:raw="The second source.">Второй источник.</param>
      <param name="action2" vsli:raw="The handler to execute on data from the second source.">Обработчик, который необходимо выполнить для данных от второго источника.</param>
      <param name="source3" vsli:raw="The third source.">Третий источник.</param>
      <param name="action3" vsli:raw="The handler to execute on data from the third source.">Обработчик, который необходимо выполнить для данных от третьего источника.</param>
      <param name="dataflowBlockOptions" vsli:raw="The options with which to configure this choice.">Параметры, с которыми требуется настроить этот вариант.</param>
      <typeparam name="T1" vsli:raw="Specifies type of data contained in the first source.">Указывает тип данных, содержащихся в первом источнике.</typeparam>
      <typeparam name="T2" vsli:raw="Specifies type of data contained in the second source.">Указывает тип данных, содержащихся во втором источнике.</typeparam>
      <typeparam name="T3" vsli:raw="Specifies type of data contained in the third source.">Указывает тип данных, содержащихся в третьем источнике.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source1&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;action1&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;source2&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;action2&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;source3&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;action3&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;dataflowBlockOptions&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="source1" /> — <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="action1" /> — <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="source2" /> — <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="action2" /> — <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="source3" /> — <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="action3" /> — <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="dataflowBlockOptions" /> — <see langword="null" />.</exception>
      <returns vsli:raw="A  &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; that represents the asynchronous choice. If all sources are completed prior to the choice completing, or if the &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; provided as part of &lt;paramref name=&quot;dataflowBlockOptions&quot; /&gt; is canceled prior to the choice completing, the resulting task will be canceled. When one of the sources has data available and successfully propagates it to the choice, the resulting task will complete when the handler completes; if the handler throws an exception, the task will end in the &lt;see cref=&quot;F:System.Threading.Tasks.TaskStatus.Faulted&quot; /&gt; state and will contain the unhandled exception. Otherwise, the task will end with its &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; set to the 0-based index of the source.  &#xA;  &#xA; This method will only consume an element from one of the data sources, never more than one. If cancellation is requested after an element has been received, the cancellation request will be ignored, and the relevant handler will be allowed to execute.">Объект <see cref="T:System.Threading.Tasks.Task`1" />, который представляет асинхронный выбор. Если все источники завершены до завершения выбора или если <see cref="T:System.Threading.CancellationToken" />, предоставленный в составе <paramref name="dataflowBlockOptions" />, отменяется до завершения выбора, результирующая задача будет отменена. Если один из источников имеет доступные данные и успешно распространяет их выбранному ресурсу, получающаяся в результате задача завершается при завершении работы обработчика; если обработчик вызывает исключение, задача завершается в состоянии <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> и содержит необработанное исключение. В противном случае при завершении задачи ее свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> будет задано равным отсчитываемому от нуля индексу источника.  
  
Этот метод использует только один элемент из одного из источников данных, никогда из нескольких. Если отмена запрашивается после получения элемента, запрос отмены игнорируется, и соответствующему обработчику будет разрешено выполнение.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowBlock.Encapsulate``2(System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.ISourceBlock{``1})">
      <summary vsli:raw="Encapsulates a target and a source into a single propagator.">Инкапсулирует целевой объект и источник в один блок распространения.</summary>
      <param name="target" vsli:raw="The target to encapsulate.">Цель для инкапсуляции.</param>
      <param name="source" vsli:raw="The source to encapsulate.">Источник для инкапсуляции.</param>
      <typeparam name="TInput" vsli:raw="Specifies the type of input expected by the target.">Указывает тип входных данных, ожидаемых целевым объектом.</typeparam>
      <typeparam name="TOutput" vsli:raw="Specifies the type of output produced by the source.">Указывает тип выходных данных, создаваемых источником.</typeparam>
      <returns vsli:raw="The encapsulated target and source.">Инкапсулированные исходный и конечный объекты.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0})">
      <summary vsli:raw="Links the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt; to the specified  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt;.">Связывает <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> с указанным <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</summary>
      <param name="source" vsli:raw="The source from which to link.">Источник, из которого требуется задать связь.</param>
      <param name="target" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; to which to connect the source.">
        <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, к которому требуется подключить источник.</param>
      <typeparam name="TOutput" vsli:raw="Specifies the type of data contained in the source.">Указывает тип данных, содержащихся в источнике.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;target&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="source" /> — <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="target" /> — <see langword="null" />.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; that, upon calling &lt;see langword=&quot;Dispose&quot; /&gt;, will unlink the source from the target.">Интерфейс <see cref="T:System.IDisposable" />, который при вызове метода <see langword="Dispose" /> отсоединит источник от целевого объекта.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Predicate{``0})">
      <summary vsli:raw="Links the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt; to the specified  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; using the specified filter.">Связывает <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> с указанным <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, используя указанный фильтр.</summary>
      <param name="source" vsli:raw="The source from which to link.">Источник, из которого требуется задать связь.</param>
      <param name="target" vsli:raw="The  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; to which to connect the source.">
        <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, к которому требуется подключить источник.</param>
      <param name="predicate" vsli:raw="The filter a message must pass in order for it to propagate from the source to the target.">Фильтр, который должно пройти сообщение, чтобы попасть из исходного объекта в целевой.</param>
      <typeparam name="TOutput" vsli:raw="Specifies the type of data contained in the source.">Указывает тип данных, содержащихся в источнике.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;target&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;predicate&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="source" /> — <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="target" /> — <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="predicate" /> — <see langword="null" />.</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; that, upon calling &lt;see langword=&quot;Dispose&quot; /&gt;, will unlink the source from the target.">Интерфейс <see cref="T:System.IDisposable" />, который при вызове метода <see langword="Dispose" /> отсоединит источник от целевого объекта.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowBlock.LinkTo``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.Tasks.Dataflow.ITargetBlock{``0},System.Threading.Tasks.Dataflow.DataflowLinkOptions,System.Predicate{``0})">
      <summary vsli:raw="Links the  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt; to the specified  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; using the specified filter.">Связывает <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> с указанным <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, используя указанный фильтр.</summary>
      <param name="source" vsli:raw="The source from which to link.">Источник, из которого требуется задать связь.</param>
      <param name="target" vsli:raw="The  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; to which to connect the source.">
        <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, к которому требуется подключить источник.</param>
      <param name="linkOptions" vsli:raw="One of the enumeration values that specifies how to configure a link between dataflow blocks.">Одно из значений перечисления, указывающее, как настроить связь между блоками потока данных.</param>
      <param name="predicate" vsli:raw="The filter a message must pass in order for it to propagate from the source to the target.">Фильтр, который должно пройти сообщение, чтобы попасть из исходного объекта в целевой.</param>
      <typeparam name="TOutput" vsli:raw="Specifies the type of data contained in the source.">Указывает тип данных, содержащихся в источнике.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The  &lt;paramref name=&quot;source&quot; /&gt; is null (Nothing in Visual Basic).  &#xA;  &#xA; -or-  &#xA;  &#xA; The  &lt;paramref name=&quot;target&quot; /&gt; is null (Nothing in Visual Basic).  &#xA;  &#xA; -or-  &#xA;  &#xA; The  &lt;paramref name=&quot;linkOptions&quot; /&gt; is null (Nothing in Visual Basic).  &#xA;  &#xA; -or-  &#xA;  &#xA; The  &lt;paramref name=&quot;predicate&quot; /&gt; is null (Nothing in Visual Basic).">Параметр <paramref name="source" /> имеет значение NULL (Nothing в Visual Basic).  
  
-или- 
Параметр <paramref name="target" /> имеет значение NULL (Nothing в Visual Basic).  
  
-или- 
Параметр <paramref name="linkOptions" /> имеет значение NULL (Nothing в Visual Basic).  
  
-или- 
Параметр <paramref name="predicate" /> имеет значение NULL (Nothing в Visual Basic).</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.IDisposable&quot; /&gt; that, upon calling &lt;see langword=&quot;Dispose&quot; /&gt;, will unlink the source from the target.">Интерфейс <see cref="T:System.IDisposable" />, который при вызове метода <see langword="Dispose" /> отсоединит источник от целевого объекта.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowBlock.NullTarget``1">
      <summary vsli:raw="Gets a target block that synchronously accepts all messages offered to it and drops them.">Получает целевой блок, который синхронно принимает все сообщения, предлагаемые на него, и удаляет их.</summary>
      <typeparam name="TInput" vsli:raw="The type of the messages this block can accept.">Тип сообщений, которые может принимать этот блок.</typeparam>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; that accepts and subsequently drops all offered messages.">
        <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, принимающий и впоследствии удаляющий все предлагаемые сообщения.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
      <summary vsli:raw="Provides a &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; that asynchronously monitors the source for available output.">Предоставляет <see cref="T:System.Threading.Tasks.Task`1" />, которое асинхронным образом выполняет мониторинг источника доступного вывода.</summary>
      <param name="source" vsli:raw="The source to monitor.">Источник для отслеживания.</param>
      <typeparam name="TOutput" vsli:raw="Specifies the type of data contained in the source.">Указывает тип данных, содержащихся в источнике.</typeparam>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; that informs of whether and when more output is available. If, when the task completes, its &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, more output is available in the source (though another consumer of the source may retrieve the data).  &#xA;  &#xA; If it returns &lt;see langword=&quot;false&quot; /&gt;, more output is not and will never be available, due to the source completing prior to output being available.">
        <see cref="T:System.Threading.Tasks.Task`1" />, который сообщает, доступны ли еще выходные данные и когда это происходит. Если при завершении задачи ее свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> равно <see langword="true" />, в источнике доступно больше выходных данных (хотя данные может извлечь другой потребитель источника).  
  
Если возвращается значение<see langword="false" />, дополнительные выходные данные недоступны и никогда не будут доступны, потому что источник завершился до того, как выходные данные стали доступными.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowBlock.OutputAvailableAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
      <summary vsli:raw="Provides a  &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; that asynchronously monitors the source for available output.">Предоставляет <see cref="T:System.Threading.Tasks.Task`1" />, которое асинхронным образом выполняет мониторинг источника доступного вывода.</summary>
      <param name="source" vsli:raw="The source to monitor.">Источник для отслеживания.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token with which to cancel the asynchronous operation.">Токен отмены, с которым необходимо отменить асинхронную операцию.</param>
      <typeparam name="TOutput" vsli:raw="Specifies the type of data contained in the source.">Указывает тип данных, содержащихся в источнике.</typeparam>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; that informs of whether and when more output is available. If, when the task completes, its &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;, more output is available in the source (though another consumer of the source may retrieve the data). If it returns &lt;see langword=&quot;false&quot; /&gt;, more output is not and will never be available, due to the source completing prior to output being available.">
        <see cref="T:System.Threading.Tasks.Task`1" />, который сообщает, доступны ли еще выходные данные и когда это происходит. Если при завершении задачи ее свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> равно <see langword="true" />, в источнике доступно больше выходных данных (хотя данные может извлечь другой потребитель источника). Если возвращается значение<see langword="false" />, дополнительные выходные данные недоступны и никогда не будут доступны, потому что источник завершился до того, как выходные данные стали доступными.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowBlock.Post``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)">
      <summary vsli:raw="Posts an item to the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt;.">Отправляет элемент в объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</summary>
      <param name="target" vsli:raw="The target block.">Целевой блок.</param>
      <param name="item" vsli:raw="The item being offered to the target.">Элемент, предлагаемый целевому объекту.</param>
      <typeparam name="TInput" vsli:raw="Specifies the type of data accepted by the target block.">Указывает тип данных, принимаемых целевым блоком.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the item was accepted by the target block; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если элемент был принят целевым блоком; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
      <summary vsli:raw="Synchronously receives a value from a specified source.">Синхронно получает значение от указанного источника.</summary>
      <param name="source" vsli:raw="The source from which to receive the value.">Источник, от которого требуется получить значение.</param>
      <typeparam name="TOutput" vsli:raw="The type of data contained in the source.">Тип данных в источнике.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No item could be received from the source.">Из источника невозможно получить никакой элемент.</exception>
      <returns vsli:raw="The received value.">Полученное значение.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
      <summary vsli:raw="Synchronously receives a value from a specified source and provides a token to cancel the operation.">Синхронно получает значение из указанного источника и предоставляет токен для отмены операции.</summary>
      <param name="source" vsli:raw="The source from which to receive the value.">Источник, от которого требуется получить значение.</param>
      <param name="cancellationToken" vsli:raw="The token to use to cancel the receive operation.">Токен для отмены операции получения.</param>
      <typeparam name="TOutput" vsli:raw="The type of data contained in the source.">Тип данных в источнике.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No item could be received from the source.">Из источника невозможно получить никакой элемент.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The operation was canceled before an item was received from the source.">Операция отменена до того как элемент был получен из источника.</exception>
      <returns vsli:raw="The received value.">Полученное значение.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)">
      <summary vsli:raw="Synchronously receives a value from a specified source, observing an optional time-out period.">Синхронно получает значение из указанного источника, отслеживание необязательно точкой времени ожидания.</summary>
      <param name="source" vsli:raw="The source from which to receive the value.">Источник, от которого требуется получить значение.</param>
      <param name="timeout" vsli:raw="The maximum time interval, in milliseconds, to wait for the synchronous operation to complete, or an interval that represents -1 milliseconds to wait indefinitely.">Максимальный временной интервал в миллисекундах ожидания завершения синхронной операции или интервал, представляющий -1 миллисекунду в случае неограниченного ожидания.</param>
      <typeparam name="TOutput" vsli:raw="The type of data contained in the source.">Тип данных в источнике.</typeparam>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;timeout&quot; /&gt; is a negative number other than -1 milliseconds, which represents an infinite time-out period.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;timeout&quot; /&gt; is greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">Параметр <paramref name="timeout" /> является отрицательным числом, отличным от -1, которое представляет неограниченный период ожидания.  
  
-или- 
 Значение <paramref name="timeout" /> больше значения <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No item could be received from the source.">Из источника невозможно получить никакой элемент.</exception>
      <exception cref="T:System.TimeoutException" vsli:raw="The specified time-out expired before an item was received from the source.">Заданное время ожидания истекло до того, как элемент был получен из источника.</exception>
      <returns vsli:raw="The received value.">Полученное значение.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowBlock.Receive``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)">
      <summary vsli:raw="Synchronously receives a value from a specified source, providing a token to cancel the operation and observing an optional time-out interval.">Синхронно получает значение из указанного источника, обеспечивая токен для отмены операции за необязательным и интервал времени ожидания.</summary>
      <param name="source" vsli:raw="The source from which to receive the value.">Источник, от которого требуется получить значение.</param>
      <param name="timeout" vsli:raw="The maximum time interval, in milliseconds, to wait for the synchronous operation to complete, or an interval that represents -1 milliseconds to wait indefinitely.">Максимальный временной интервал в миллисекундах ожидания завершения синхронной операции или интервал, представляющий -1 миллисекунду в случае неограниченного ожидания.</param>
      <param name="cancellationToken" vsli:raw="The token to use to cancel the receive operation.">Токен для отмены операции получения.</param>
      <typeparam name="TOutput" vsli:raw="The type of data contained in the source.">Тип данных в источнике.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="source" /> — <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;timeout&quot; /&gt; is a negative number other than -1 milliseconds, which represents an infinite time-out period.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;timeout&quot; /&gt; is greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">Параметр <paramref name="timeout" /> является отрицательным числом, отличным от -1, которое представляет неограниченный период ожидания.  
  
-или- 
 Значение <paramref name="timeout" /> больше значения <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="No item could be received from the source.">Из источника невозможно получить никакой элемент.</exception>
      <exception cref="T:System.TimeoutException" vsli:raw="The specified time-out expired before an item was received from the source.">Заданное время ожидания истекло до того, как элемент был получен из источника.</exception>
      <exception cref="T:System.OperationCanceledException" vsli:raw="The operation was canceled before an item was received from the source.">Операция отменена до того как элемент был получен из источника.</exception>
      <returns vsli:raw="The received value.">Полученное значение.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0})">
      <summary vsli:raw="Asynchronously receives a value from a specified source.">Асинхронно получает значение от указанного источника.</summary>
      <param name="source" vsli:raw="The source from which to receive the value.">Источник, от которого требуется получить значение.</param>
      <typeparam name="TOutput" vsli:raw="The type of data contained in the source.">Тип данных в источнике.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> имеет значение <see langword="null" />.</exception>
      <returns vsli:raw="A task that represents the asynchronous receive operation. When an item value is successfully received from the source, the returned task is completed and its &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; returns the received value. If an item value cannot be retrieved because the source is empty and completed , an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception is thrown in the returned task.">Задача, представляющая асинхронную операцию получения. При успешном получении значения от источника возвращаемая задача завершается и ее объект <see cref="P:System.Threading.Tasks.Task`1.Result" /> возвращает полученное значение. Если значение элемента невозможно извлечь, потому что источник пуст и завершен, создается исключение <see cref="T:System.InvalidOperationException" /> в возвращаемой задаче.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously receives a value from a specified source and provides a token to cancel the operation.">Асинхронно получает значение из указанного источника и предоставляет токен для отмены операции.</summary>
      <param name="source" vsli:raw="The source from which to receive the value.">Источник, от которого требуется получить значение.</param>
      <param name="cancellationToken" vsli:raw="The token to use to cancel the receive operation.">Токен для отмены операции получения.</param>
      <typeparam name="TOutput" vsli:raw="Specifies the type of data contained in the source.">Указывает тип данных, содержащихся в источнике.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> имеет значение <see langword="null" />.</exception>
      <returns vsli:raw="A task that represents the asynchronous receive operation. When a value is successfully received from the source, the returned task is completed and its &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; returns the value. If a value cannot be retrieved because cancellation was requested, the returned task is canceled. If the value cannot be retrieved because the source is empty and completed , an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception is thrown in the returned task.">Задача, представляющая асинхронную операцию получения. При успешном получении значения от источника возвращаемая задача завершается и ее объект <see cref="P:System.Threading.Tasks.Task`1.Result" /> возвращает полученное значение. Если значение невозможно извлечь, поскольку была запрошена отмена, возвращаемая задача отменена. Если значение невозможно извлечь, потому что источник пуст и завершен, создается исключение <see cref="T:System.InvalidOperationException" /> в возвращаемой задаче.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan)">
      <summary vsli:raw="Asynchronously receives a value from a specified source, observing an optional time-out period.">Асинхронно получает значение из указанного источника, отслеживание необязательно точкой времени ожидания.</summary>
      <param name="source" vsli:raw="The source from which to receive the value.">Источник, от которого требуется получить значение.</param>
      <param name="timeout" vsli:raw="The maximum time interval, in milliseconds, to wait for the synchronous operation to complete, or an interval that represents -1 milliseconds to wait indefinitely.">Максимальный временной интервал в миллисекундах ожидания завершения синхронной операции или интервал, представляющий -1 миллисекунду в случае неограниченного ожидания.</param>
      <typeparam name="TOutput" vsli:raw="The type of data contained in the source.">Тип данных в источнике.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;timeout&quot; /&gt; is a negative number other than -1 milliseconds, which represents an infinite time-out period.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;timeout&quot; /&gt; is greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">Параметр <paramref name="timeout" /> является отрицательным числом, отличным от -1, которое представляет неограниченный период ожидания.  
  
-или- 
 Значение <paramref name="timeout" /> больше значения <see cref="F:System.Int32.MaxValue" />.</exception>
      <returns vsli:raw="A task that represents the asynchronous receive operation. When a value is successfully received from the source, the returned task is completed and its &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; returns the value. If a value cannot be retrieved because the time-out expired, the returned task is canceled. If the value cannot be retrieved because the source is empty and completed , an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception is thrown in the returned task.">Задача, представляющая асинхронную операцию получения. При успешном получении значения от источника возвращаемая задача завершается и ее объект <see cref="P:System.Threading.Tasks.Task`1.Result" /> возвращает полученное значение. Если значение невозможно извлечь, поскольку время ожидания истекло, возвращаемая задача отменена. Если значение невозможно извлечь, потому что источник пуст и завершен, создается исключение <see cref="T:System.InvalidOperationException" /> в возвращаемой задаче.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowBlock.ReceiveAsync``1(System.Threading.Tasks.Dataflow.ISourceBlock{``0},System.TimeSpan,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously receives a value from a specified source, providing a token to cancel the operation and observing an optional time-out interval.">Асинхронно получает значение из указанного источника, обеспечивая токен для отмены операции за необязательным и интервал времени ожидания.</summary>
      <param name="source" vsli:raw="The source from which to receive the value.">Источник, от которого требуется получить значение.</param>
      <param name="timeout" vsli:raw="The maximum time interval, in milliseconds, to wait for the synchronous operation to complete, or an interval that represents -1 milliseconds to wait indefinitely.">Максимальный временной интервал в миллисекундах ожидания завершения синхронной операции или интервал, представляющий -1 миллисекунду в случае неограниченного ожидания.</param>
      <param name="cancellationToken" vsli:raw="The token which may be used to cancel the receive operation.">Токен, который может быть использован для отмены операции получения.</param>
      <typeparam name="TOutput" vsli:raw="The type of data contained in the source.">Тип данных в источнике.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;source&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="source" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="&lt;paramref name=&quot;timeout&quot; /&gt; is a negative number other than -1 milliseconds, which represents an infinite time-out period.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;timeout&quot; /&gt; is greater than &lt;see cref=&quot;F:System.Int32.MaxValue&quot;&gt;Int32.MaxValue&lt;/see&gt;.">Параметр <paramref name="timeout" /> является отрицательным числом, отличным от -1, которое представляет неограниченный период ожидания.  
  
-или- 
 Значение <paramref name="timeout" /> больше значения <see cref="F:System.Int32.MaxValue" />.</exception>
      <returns vsli:raw="A task that represents the asynchronous receive operation. When a value is successfully received from the source, the returned task is completed and its &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; returns the value. If a value cannot be retrieved because the time-out expired or cancellation was requested, the returned task is canceled. If the value cannot be retrieved because the source is empty and completed, an &lt;see cref=&quot;T:System.InvalidOperationException&quot; /&gt; exception is thrown in the returned task.">Задача, представляющая асинхронную операцию получения. При успешном получении значения от источника возвращаемая задача завершается и ее объект <see cref="P:System.Threading.Tasks.Task`1.Result" /> возвращает полученное значение. Если значение невозможно извлечь, поскольку истекло время ожидания отмены, возвращаемая задача отменена. Если значение нельзя извлечь, потому что источник пуст и завершен, создается исключение <see cref="T:System.InvalidOperationException" /> в возвращаемой задаче.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)">
      <summary vsli:raw="Asynchronously offers a message to the target message block, allowing for postponement.">Асинхронно предлагает сообщение в целевому блоку сообщений, позволяет задержки.</summary>
      <param name="target" vsli:raw="The target to which to post the data.">Целевой объект, на который требуется отправить данные.</param>
      <param name="item" vsli:raw="The item being offered to the target.">Элемент, предлагаемый целевому объекту.</param>
      <typeparam name="TInput" vsli:raw="Specifies the type of the data to post to the target.">Указывает тип данных, отправляемых целевому объекту.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="target" /> — <see langword="null" />.</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; that represents the asynchronous send. If the target accepts and consumes the offered element during the call to &lt;see cref=&quot;M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)&quot; /&gt;, upon return from the call the resulting &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; will be completed and its &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property will return &lt;see langword=&quot;true&quot; /&gt;. If the target declines the offered element during the call, upon return from the call the resulting &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; will be completed and its &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; property will return &lt;see langword=&quot;false&quot; /&gt;. If the target postpones the offered element, the element will be buffered until such time that the target consumes or releases it, at which point the task will complete, with its &lt;see cref=&quot;P:System.Threading.Tasks.Task`1.Result&quot; /&gt; indicating whether the message was consumed. If the target never attempts to consume or release the message, the returned task will never complete.">Объект <see cref="T:System.Threading.Tasks.Task`1" />, который представляет асинхронную отправку. Если целевой объект принимает и использует предлагаемый элемент во время вызова метода <see cref="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0)" />, то при возврате из вызова результирующий объект <see cref="T:System.Threading.Tasks.Task`1" /> будет завершен и его свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> возвратит значение <see langword="true" />. Если целевой объект отклоняет предлагаемый элемент во время вызова, то при возврате из вызова результирующий объект <see cref="T:System.Threading.Tasks.Task`1" /> будет завершен и его свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> возвратит значение <see langword="false" /> . Если целевой объект откладывает предлагаемый элемент, элемент буферизуется до тех пор, пока целевой объект не потребит или не высвободит его; тогда задача завершится, а ее свойство <see cref="P:System.Threading.Tasks.Task`1.Result" /> будет показывать, было ли потреблено сообщение. Если целевой объект не пытается употребить или высвободить сообщение, возвращаемая задача никогда не будет завершена.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowBlock.SendAsync``1(System.Threading.Tasks.Dataflow.ITargetBlock{``0},``0,System.Threading.CancellationToken)">
      <summary vsli:raw="Asynchronously offers a message to the target message block, allowing for postponement.">Асинхронно предлагает сообщение в целевому блоку сообщений, позволяет задержки.</summary>
      <param name="target" vsli:raw="The target to which to post the data.">Целевой объект, на который требуется отправить данные.</param>
      <param name="item" vsli:raw="The item being offered to the target.">Элемент, предлагаемый целевому объекту.</param>
      <param name="cancellationToken" vsli:raw="The cancellation token with which to request cancellation of the send operation.">Токен отмены, с которым требуется запросить отмену операции отправки.</param>
      <typeparam name="TInput" vsli:raw="Specifies the type of the data to post to the target.">Указывает тип данных, отправляемых целевому объекту.</typeparam>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The  &lt;paramref name=&quot;target&quot; /&gt; is null (Nothing in Visual Basic).">Параметр <paramref name="target" /> имеет значение NULL (Nothing в Visual Basic).</exception>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; that represents the asynchronous send.  If the target accepts and consumes the offered element during the call to SendAsync, upon return from the call the resulting &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; will be completed and its &lt;c&gt;Result&lt;/c&gt; property will return true.  If the target declines the offered element during the call, upon return from the call the resulting &lt;see cref=&quot;T:System.Threading.Tasks.Task`1&quot; /&gt; will be completed and its &lt;c&gt;Result&lt;/c&gt; property will return false. If the target postpones the offered element, the element will be buffered until such time that the target consumes or releases it, at which point the Task will complete, with its &lt;c&gt;Result&lt;/c&gt; indicating whether the message was consumed. If the target never attempts to consume or release the message, the returned task will never complete.  &#xA;  &#xA; If cancellation is requested before the target has successfully consumed the sent data, the returned task will complete in the Canceled state and the data will no longer be available to the target.">Объект <see cref="T:System.Threading.Tasks.Task`1" />, который представляет асинхронную отправку.  Если целевой объект принимает и использует предлагаемый элемент во время вызова метода SendAsync, то при возврате из вызова результирующий объект <see cref="T:System.Threading.Tasks.Task`1" /> будет завершен и его свойство <c>Result</c> возвратит значение true.  Если целевой объект отклоняет предлагаемый элемент во время вызова, то при возврате из вызова результирующий объект <see cref="T:System.Threading.Tasks.Task`1" /> будет завершен и его свойство <c>Result</c> возвратит значение false. Если целевой объект откладывает предлагаемый элемент, элемент буферизуется до тех пор, пока целевой объект не потребит или не высвободит его; тогда задача завершится, а ее свойство <c>Result</c> будет показывать, было ли потреблено сообщение. Если целевой объект не пытается употребить или высвободить сообщение, возвращаемая задача никогда не будет завершена.  
  
Если отмена запрашивается до того, как целевой объект успешно потребил отправленные данные, возвращенная задача будет завершена в отмененном состоянии, и данные больше не будут доступны целевому объекту.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowBlock.TryReceive``1(System.Threading.Tasks.Dataflow.IReceivableSourceBlock{``0},``0@)">
      <summary vsli:raw="Attempts to synchronously receive an item from the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt;.">Пытается синхронно получить элемент из <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</summary>
      <param name="source" vsli:raw="The source from which to receive.">Источник, от которого требуется выполнить прием.</param>
      <param name="item" vsli:raw="The item received from the source.">Элемент, полученный от источника.</param>
      <typeparam name="TOutput" vsli:raw="Specifies the type of data contained in the source.">Указывает тип данных, содержащихся в источнике.</typeparam>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an item could be received; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если получить элемент не удалось; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Threading.Tasks.Dataflow.DataflowBlockOptions">
      <summary vsli:raw="Provides options used to configure the processing performed by dataflow blocks.">Предоставляет параметры, используемые для настройки обработки, выполняемой блоками потока данных.</summary>
    </member>
    <member name="F:System.Threading.Tasks.Dataflow.DataflowBlockOptions.Unbounded">
      <summary vsli:raw="A constant used to specify an unlimited quantity for  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowBlockOptions&quot; /&gt; members that provide an upper bound. This field is constant.">Константа, используемая для указания неограниченного количества элементов <see cref="T:System.Threading.Tasks.Dataflow.DataflowBlockOptions" />, которые предоставляют верхнюю границу. Это поле является константой.</summary>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowBlockOptions.#ctor">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowBlockOptions&quot; /&gt;.">Инициализирует новый объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowBlockOptions" />.</summary>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.DataflowBlockOptions.BoundedCapacity">
      <summary vsli:raw="Gets or sets the maximum number of messages that may be buffered by the block.">Получает или задает максимальное количество сообщений, которые может буферизовать блок.</summary>
      <returns vsli:raw="The maximum number of messages. The default is -1, which indicates an unlimited number of messages.">Максимальное количество сообщений. Значение по умолчанию — -1, что означает неограниченное количество сообщений.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.DataflowBlockOptions.CancellationToken">
      <summary vsli:raw="Gets or sets the  &lt;see cref=&quot;T:System.Threading.CancellationToken&quot; /&gt; to monitor for cancellation requests.">Получает или задает <see cref="T:System.Threading.CancellationToken" /> для отслеживания запросов отмены.</summary>
      <returns vsli:raw="The token.">Маркер.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.DataflowBlockOptions.EnsureOrdered">
      <summary vsli:raw="Gets or sets a value that indicates whether ordered processing should be enforced on a block's handling of messages.">Получает или задает значение, указывающее, следует ли применять упорядоченную обработку сообщений блока.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if ordered processing should be enforced; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> значение, если упорядоченная обработка должна быть применена; в противном случае — <see langword="false" /> . Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.DataflowBlockOptions.MaxMessagesPerTask">
      <summary vsli:raw="Gets or sets the maximum number of messages that may be processed per task.">Получает или задает максимальное количество сообщений, которые могут быть обработаны, на одну задачу.</summary>
      <returns vsli:raw="The maximum number of messages. The default is -1, which indicates an unlimited number of messages.">Максимальное количество сообщений. Значение по умолчанию — -1, что означает неограниченное количество сообщений.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.DataflowBlockOptions.NameFormat">
      <summary vsli:raw="Gets or sets the format string to use when a block is queried for its name.">Получает или задает строку формата для использования при запросе у блока его имени.</summary>
      <returns vsli:raw="The format string to use when a block is queried for its name.">Строка формата для использования при запросе у блока его имени.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.DataflowBlockOptions.TaskScheduler">
      <summary vsli:raw="Gets or sets the &lt;see cref=&quot;T:System.Threading.Tasks.TaskScheduler&quot; /&gt; to use for scheduling tasks.">Получает или задает объект <see cref="T:System.Threading.Tasks.TaskScheduler" />, используемый для планирования задач.</summary>
      <returns vsli:raw="The task scheduler.">Планировщик задач.</returns>
    </member>
    <member name="T:System.Threading.Tasks.Dataflow.DataflowLinkOptions">
      <summary vsli:raw="Provides options used to configure a link between dataflow blocks.">Предоставляет параметры, используемые для настройки связи между блоками потока данных.</summary>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowLinkOptions.#ctor">
      <summary vsli:raw="Initializes the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowLinkOptions&quot; /&gt;.">Инициализирует объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowLinkOptions" />.</summary>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.DataflowLinkOptions.Append">
      <summary vsli:raw="Gets or sets whether the link should be appended to the source's list of links, or whether it should be prepended.">Получает или задает значение, указывающее, должна ли связь быть добавлена к списку связей источника в конце или в начале.</summary>
      <returns vsli:raw="Returns  &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Возвращает <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.DataflowLinkOptions.MaxMessages">
      <summary vsli:raw="Gets or sets the maximum number of messages that may be consumed across the link.">Получает или задает максимальное количество сообщений, которые могут быть потреблены через связь.</summary>
      <returns vsli:raw="Returns  &lt;see cref=&quot;T:System.Int32&quot; /&gt;.">Возвращает <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.DataflowLinkOptions.PropagateCompletion">
      <summary vsli:raw="Gets or sets whether the linked target will have completion and faulting notification propagated to it automatically.">Получает или задает значение, указывающее, будут ли уведомления о завершении и об ошибке автоматически распространятся на связанный целевой объект.</summary>
      <returns vsli:raw="Returns  &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Возвращает <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader">
      <summary vsli:raw="Provides a container of data attributes for passing between dataflow blocks.">Предоставляет контейнер атрибутов данных для передачи между блоками потока данных.</summary>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowMessageHeader.#ctor(System.Int64)">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; with the specified attributes.">Инициализирует новый экземпляр класса <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> с указанными атрибутами.</summary>
      <param name="id" vsli:raw="The ID of the message. Must be unique within the originating source block. It does not need to be globally unique.">Идентификатор сообщения. Должен быть уникальным в пределах исходного блока. Он не обязательно должен быть глобально уникальным.</param>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowMessageHeader.Equals(System.Object)">
      <summary vsli:raw="Checks boxed &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; instances for equality by ID.">Проверяет упакованные экземпляры <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> на равенство по идентификатору.</summary>
      <param name="obj" vsli:raw="A boxed &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; instance.">Упакованный экземпляр <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instances are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если экземпляры равны; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowMessageHeader.Equals(System.Threading.Tasks.Dataflow.DataflowMessageHeader)">
      <summary vsli:raw="Checks two  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; instances for equality by ID without boxing.">Проверяет два экземпляра <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> на равенство по идентификатору без упаковки.</summary>
      <param name="other" vsli:raw="Another  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; instance.">Другой экземпляр <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instances are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если экземпляры равны; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowMessageHeader.GetHashCode">
      <summary vsli:raw="Generates a hash code for the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; instance.">Создает хэш-код для экземпляра <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />.</summary>
      <returns vsli:raw="The hash code.">Хэш-код.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowMessageHeader.op_Equality(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.DataflowMessageHeader)">
      <summary vsli:raw="Checks two  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; instances for equality by ID.">Проверяет два экземпляра <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> на равенство по идентификатору.</summary>
      <param name="left" vsli:raw="A  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; instance.">Экземпляр <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />.</param>
      <param name="right" vsli:raw="A  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; instance.">Экземпляр <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instances are equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />, если экземпляры равны; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.DataflowMessageHeader.op_Inequality(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.DataflowMessageHeader)">
      <summary vsli:raw="Checks two  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; instances for non-equality by ID.">Проверяет два экземпляра <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> на неравенство по идентификатору.</summary>
      <param name="left" vsli:raw="A  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; instance.">Экземпляр <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />.</param>
      <param name="right" vsli:raw="A  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; instance.">Экземпляр <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the instances are not equal; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если эти экземпляры не равны; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.DataflowMessageHeader.Id">
      <summary vsli:raw="Gets the ID of the message within the source.">Получает идентификатор сообщения в пределах источника.</summary>
      <returns vsli:raw="The ID contained in the  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; instance.">Идентификатор, содержащийся в  <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> экземпляре.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.DataflowMessageHeader.IsValid">
      <summary vsli:raw="Gets the validity of the message.">Получает допустимость сообщения.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the ID of the message is different from 0. &lt;see langword=&quot;false&quot; /&gt; if the ID of the message is 0.">Значение <see langword="true" />, если идентификатор сообщения отличается от 0. <see langword="false" />, если идентификатор сообщения имеет значение 0.</returns>
    </member>
    <member name="T:System.Threading.Tasks.Dataflow.DataflowMessageStatus">
      <summary vsli:raw="Represents the status of a &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; when passed between dataflow blocks.">Представляет состояние <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> при передаче между блоками потока данных.</summary>
    </member>
    <member name="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted">
      <summary vsli:raw="Indicates that the  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; accepted the message. Once a target has accepted a message, it is wholly owned by the target.">Указывает, что <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> принял сообщение. Как только целевой объект принял сообщение, но полностью принадлежит целевому объекту.</summary>
    </member>
    <member name="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined">
      <summary vsli:raw="Indicates that the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; declined the message. The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt; still owns the message.">Указывает, что <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> отклонил сообщение. Объект <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> по-прежнему является владельцем сообщения.</summary>
    </member>
    <member name="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently">
      <summary vsli:raw="Indicates that the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; declined the message. The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt; still owns the message.  &#xA;  &#xA; Additionally, the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; will decline all future messages sent by the source.">Указывает, что <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> отклонил сообщение. Объект <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> по-прежнему является владельцем сообщения.  
  
Кроме того, <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> отклонит все будущие сообщения, отправляемые источником.</summary>
    </member>
    <member name="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable">
      <summary vsli:raw="Indicates that the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; tried to accept the message from the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt;, but the message was no longer available.">Указывает, что <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> пытался принять сообщение от<see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />, однако сообщение было больше не доступно.</summary>
    </member>
    <member name="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed">
      <summary vsli:raw="Indicates that the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; postponed the message for potential consumption at a later time.  &#xA;  &#xA; The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt; still owns the message.">Указывает, что <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> отложил сообщение для потенциального потребления в дальнейшем.  
  
Объект <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> по-прежнему является владельцем сообщения.</summary>
    </member>
    <member name="T:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions">
      <summary vsli:raw="Provides options used to configure the processing performed by dataflow blocks that process each message through the invocation of a user-provided delegate. These are dataflow blocks such as  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ActionBlock`1&quot; /&gt; and  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.TransformBlock`2&quot; /&gt;.">Предоставляет параметры, используемые для настройки обработки, выполняемой блоками потока данных, которые обрабатывают каждое сообщение с помощью вызова указанного пользователем делегата. Это блоки потока данных, такие как <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> и <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" />.</summary>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions.#ctor">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions&quot; /&gt;.">Инициализирует новый объект <see cref="T:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions" />.</summary>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions.MaxDegreeOfParallelism">
      <summary vsli:raw="Gets the maximum number of messages that may be processed by the block concurrently.">Получает максимальное количество сообщений, которые может параллельно обрабатывать блок.</summary>
      <returns vsli:raw="The maximum number of messages.">Максимальное количество сообщений.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions.SingleProducerConstrained">
      <summary vsli:raw="Gets whether code using the dataflow block is constrained to one producer at a time.">Получает значение, указывающее, ограничен блок потока данных одним производителем в каждый отдельный момент времени.</summary>
      <returns vsli:raw="Returns  &lt;see cref=&quot;T:System.Boolean&quot; /&gt;.">Возвращает <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="T:System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions">
      <summary vsli:raw="Provides options used to configure the processing performed by dataflow blocks that group together multiple messages. These are dataflow blocks such as &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.JoinBlock`2&quot; /&gt; and  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.BatchBlock`1&quot; /&gt;.">Предоставляет параметры, используемые для настройки обработки, выполняемой блоками потока данных, которые группируют несколько сообщений. Эти блоки потока данных, такие как <see cref="T:System.Threading.Tasks.Dataflow.JoinBlock`2" /> и <see cref="T:System.Threading.Tasks.Dataflow.BatchBlock`1" />.</summary>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions.#ctor">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions&quot; /&gt;.">Инициализирует новый объект <see cref="T:System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions" />.</summary>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions.Greedy">
      <summary vsli:raw="Gets or sets the Boolean value to use to determine whether to greedily consume offered messages.">Получает или задает логическое значение, используемое для определения того, следует ли каскадно потреблять предложенные сообщения.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to greedily consume offered messages; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" /> для каскадного потребления предложенных сообщений; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions.MaxNumberOfGroups">
      <summary vsli:raw="Gets or sets the maximum number of groups that should be generated by the block.">Получает или задает максимальное число групп, которые должны быть созданы блоком.</summary>
      <returns vsli:raw="The maximum number of groups.">Максимальное число групп.</returns>
    </member>
    <member name="T:System.Threading.Tasks.Dataflow.IDataflowBlock">
      <summary vsli:raw="Represents a dataflow block.">Представляет блок потока данных.</summary>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.IDataflowBlock.Complete">
      <summary vsli:raw="Signals to the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IDataflowBlock&quot; /&gt; that it should not accept nor produce any more messages nor consume any more postponed messages.">Сообщает блоку <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />, что он больше не должен принимать и создавать никакие сообщения и не должен использовать отложенные сообщения.</summary>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(System.Exception)">
      <summary vsli:raw="Causes the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IDataflowBlock&quot; /&gt; to complete in a  &lt;see cref=&quot;F:System.Threading.Tasks.TaskStatus.Faulted&quot; /&gt; state.">Вызывает завершение блока <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> в состоянии <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />.</summary>
      <param name="exception" vsli:raw="The  &lt;see cref=&quot;T:System.Exception&quot; /&gt; that caused the faulting.">
        <see cref="T:System.Exception" />, вызвавший сбой.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;exception&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="exception" /> — <see langword="null" />.</exception>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion">
      <summary vsli:raw="Gets a  &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; that represents the asynchronous operation and completion of the dataflow block.">Получает <see cref="T:System.Threading.Tasks.Task" />, которая представляет асинхронную операцию и завершение блока потока данных.</summary>
      <returns vsli:raw="The task.">Задача.</returns>
    </member>
    <member name="T:System.Threading.Tasks.Dataflow.IPropagatorBlock`2">
      <summary vsli:raw="Represents a dataflow block that is both a target for data and a source of data.">Представляет блок потока данных, который является и целевым объектом для данных, и источником данных.</summary>
      <typeparam name="TInput" vsli:raw="Specifies the type of data accepted by the  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IPropagatorBlock`2&quot; /&gt;.">Указывает тип данных, принимаемых  <see cref="T:System.Threading.Tasks.Dataflow.IPropagatorBlock`2" /> .</typeparam>
      <typeparam name="TOutput" vsli:raw="Specifies the type of data supplied by the  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IPropagatorBlock`2&quot; /&gt;.">Указывает тип данных, предоставляемых  <see cref="T:System.Threading.Tasks.Dataflow.IPropagatorBlock`2" /> .</typeparam>
    </member>
    <member name="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1">
      <summary vsli:raw="Represents a dataflow block that supports receiving messages without linking.">Представляет блок потока данных, который поддерживает получение сообщений без привязывания.</summary>
      <typeparam name="TOutput" vsli:raw="Specifies the type of data supplied by the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1&quot; /&gt;.">Указывает тип данных, поставляемых <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</typeparam>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1.TryReceive(System.Predicate{`0},`0@)">
      <summary vsli:raw="Attempts to synchronously receive an available output item from the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1&quot; /&gt;.">Пытается синхронно получить доступный выходной элемент от интерфейса <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</summary>
      <param name="filter" vsli:raw="The predicate value must successfully pass in order for it to be received.  &lt;paramref name=&quot;filter&quot; /&gt; may be &lt;see langword=&quot;null&quot; /&gt;, in which case all items will pass.">Значение предиката должно быть успешно передано, чтобы оно было получено.  Параметр <paramref name="filter" /> может иметь значение <see langword="null" />; в этом случае будут переданы все элементы.</param>
      <param name="item" vsli:raw="The item received from the source.">Элемент, полученный от источника.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an item could be received; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если получить элемент не удалось; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1.TryReceiveAll(System.Collections.Generic.IList{`0}@)">
      <summary vsli:raw="Attempts to synchronously receive all available items from the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1&quot; /&gt;.">Пытается синхронно получить все доступные элементы от интерфейса <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</summary>
      <param name="items" vsli:raw="The items received from the source.">Элементы, полученные от источника.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if one or more items could be received; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если могут быть получены один или несколько элементов; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Threading.Tasks.Dataflow.ISourceBlock`1">
      <summary vsli:raw="Represents a dataflow block that is a source of data.">Представляет блок потока данных, который является источником данных.</summary>
      <typeparam name="TOutput" vsli:raw="Specifies the type of data supplied by the  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt;.">Указывает тип данных, предоставляемых  <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> .</typeparam>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)">
      <summary vsli:raw="Called by a linked &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; to accept and consume a &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; previously offered by this &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt;.">Вызывается связанным объектом <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> для принятия и использования объекта <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, ранее предложенного этим объектом <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</summary>
      <param name="messageHeader" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; of the message being consumed.">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> используемого сообщения.</param>
      <param name="target" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; consuming the message.">
        <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, получающий сообщение.</param>
      <param name="messageConsumed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was successfully consumed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если сообщение было успешно получено; в противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The messageHeader is not valid.">Заголовок messageHeader является недопустимым.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The target is &lt;see langword=&quot;null&quot; /&gt;.">Целевой объект <see langword="null" />.</exception>
      <returns vsli:raw="The value of the consumed message. This may correspond to a different  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; instance than was previously reserved and passed as the &lt;paramref name=&quot;messageHeader&quot; /&gt; to &lt;see cref=&quot;M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)&quot; /&gt;. The consuming &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; must use the returned value instead of the value passed as &lt;paramref name=&quot;messageValue&quot; /&gt; through &lt;see cref=&quot;M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)&quot; /&gt;.  &#xA;  &#xA; If the message requested is not available, the return value will be null.">Значение получаемого сообщения. Это может соответствовать другому экземпляру <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, отличному от ранее зарезервированного и переданного в качестве параметра <paramref name="messageHeader" /> методу <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" />. Рассматриваемый <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> должен использовать возвращаемое значение вместо значения, переданного как параметр <paramref name="messageValue" /> с помощью метода <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />.  
  
Если запрашиваемое сообщение недоступно, возвращается значение NULL.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Threading.Tasks.Dataflow.DataflowLinkOptions)">
      <summary vsli:raw="Links the  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt; to the specified  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt;.">Связывает <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> с указанным <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</summary>
      <param name="target" vsli:raw="The  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; to which to connect this source.">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, к которому требуется подключить этот источник.</param>
      <param name="linkOptions" vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowLinkOptions&quot; /&gt; instance that configures the link.">Экземпляр <see cref="T:System.Threading.Tasks.Dataflow.DataflowLinkOptions" />, настраивающий ссылку.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;target&quot; /&gt; is null (Nothing in Visual Basic) or  &lt;paramref name=&quot;linkOptions&quot; /&gt; is null (Nothing in Visual Basic).">
        <paramref name="target" /> имеет значение NULL (nothing в Visual Basic) или <paramref name="linkOptions" /> имеет значение NULL (nothing в Visual Basic).</exception>
      <returns vsli:raw="An IDisposable that, upon calling Dispose, will unlink the source from the target.">Интерфейс IDisposable, который при вызове метода Dispose отсоединит источник от целевого объекта.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})">
      <summary vsli:raw="Called by a linked &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; to release a previously reserved &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; by this &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt;.">Вызывается связанным объектом <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> для освобождения объекта <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, ранее зарезервированного этим объектом <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</summary>
      <param name="messageHeader" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; of the reserved message being released.">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> освобождаемого зарезервированного сообщения.</param>
      <param name="target" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; releasing the message it previously reserved.">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, освобождающий сообщение, которое он ранее зарезервировал.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;messageHeader&quot; /&gt; is not valid.">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="target" /> — <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; did not have the message reserved.">У <paramref name="target" /> нет зарезервированного сообщения.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})">
      <summary vsli:raw="Called by a linked &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; to reserve a previously offered &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; by this &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt;.">Вызывается связанным объектом <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> для резервирования объекта <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, ранее предложенного этим объектом <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</summary>
      <param name="messageHeader" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; of the message being reserved.">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> резервируемого сообщения.</param>
      <param name="target" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; reserving the message.">
        <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, сохраняющий сообщение.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;messageHeader&quot; /&gt; is not valid.">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="target" /> — <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was successfully reserved; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если сообщение было успешно зарезервировано; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Threading.Tasks.Dataflow.ITargetBlock`1">
      <summary vsli:raw="Represents a dataflow block that is a target for data.">Представляет блок потока данных, который является целевым объектом для данных.</summary>
      <typeparam name="TInput" vsli:raw="Specifies the type of data accepted by the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt;.">Указывает тип данных, принимаемых <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</typeparam>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
      <summary vsli:raw="Offers a message to the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt;, giving the target the opportunity to consume or postpone the message.">Предлагает сообщение блоку <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, предоставляя целевому объекту возможность использовать или отложить его.</summary>
      <param name="messageHeader" vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; instance that represents the header of the message being offered.">Экземпляр <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, представляющий заголовок предлагаемого сообщения.</param>
      <param name="messageValue" vsli:raw="The value of the message being offered.">Значение предлагаемого свойства.</param>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt; offering the message. This may be null.">
        <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />, предлагающий сообщение. Может содержать пустое значение.</param>
      <param name="consumeToAccept" vsli:raw="Set to &lt;see langword=&quot;true&quot; /&gt; to instruct the target to call &lt;see cref=&quot;M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)&quot; /&gt; synchronously during the call to &lt;see cref=&quot;M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)&quot; /&gt;, prior to returning &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted&quot; /&gt;, in order to consume the message.">Значение <see langword="true" /> для синхронного вызова целевым объектом метода <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /> во время вызова метода <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" /> до возврата <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" />, чтобы использовать сообщение.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The  &lt;paramref name=&quot;messageHeader&quot; /&gt; is not valid.  &#xA;  &#xA; -or- &lt;paramref name=&quot;consumeToAccept&quot; /&gt; may only be true if provided with a non-null &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="messageHeader" /> — недопустимое значение.  
  
-или- параметр <paramref name="consumeToAccept" /> может иметь значение true, только если для него предоставлен параметр <paramref name="source" /> со значением, отличным от значения NULL.</exception>
      <returns vsli:raw="The status of the offered message. If the message was accepted by the target, &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted&quot; /&gt; is returned, and the source should no longer use the offered message, because it is now owned by the target. If the message was postponed by the target, &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed&quot; /&gt; is returned as a notification that the target may later attempt to consume or reserve the message; in the meantime, the source still owns the message and may offer it to other blocks.  &#xA;  &#xA; If the target would have otherwise postponed message, but source was &lt;see langword=&quot;null&quot; /&gt;, &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined&quot; /&gt; is instead returned.  &#xA;  &#xA; If the target tried to accept the message but missed it due to the source delivering the message to another target or simply discarding it, &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable&quot; /&gt; is returned.  &#xA;  &#xA; If the target chose not to accept the message, &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined&quot; /&gt; is returned. If the target chose not to accept the message and will never accept another message from this source, &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently&quot; /&gt; is returned.">Состояние предложенного сообщения. Если сообщение было принято целевым объектом, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> и источник больше не должен использовать предложенное сообщение, поскольку оно теперь принадлежит целевому объекту. Если сообщение было отложено целевым объектом, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" /> в качестве уведомления о том, что целевой объект может позже попытаться использовать или зарезервировать сообщение; при этом источник будет по-прежнему владеть сообщением и может предлагать его другим блокам.  
  
Если в противном случае целевой объект отложил бы сообщение, но источником служил <see langword="null" />, возвращается значение <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" />.  
  
Если целевой объект попытался принять сообщение, но не получил его из-за доставки сообщения источником другому целевому объекту или просто отбрасывания сообщения источником, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" />.  
  
Если целевой объект принял решение не принимать сообщение, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" />. Если целевой объект принял решение не принимать сообщение и никогда не будет принимать другие сообщения от этого источника, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" />.</returns>
    </member>
    <member name="T:System.Threading.Tasks.Dataflow.JoinBlock`2">
      <summary vsli:raw="Provides a dataflow block that joins across multiple dataflow sources, not necessarily of the same type, waiting for one item to arrive for each type before they're all released together as a tuple consisting of one item per type.">Предоставляет блок потока данных, объединяющий несколько источников потоков данных, необязательно одного типа, ожидая появления каждого типа, прежде чем они все совместно выпускаются как кортеж, состоящий из одного элемента каждого типа.</summary>
      <typeparam name="T1" vsli:raw="Specifies the type of data accepted by the block's first target.">Указывает тип данных, принимаемых первым целевым объектом блока.</typeparam>
      <typeparam name="T2" vsli:raw="Specifies the type of data accepted by the block's second target.">Указывает тип данных, принимаемых вторым целевым объектом блока.</typeparam>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.JoinBlock`2.#ctor">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.JoinBlock`2&quot; /&gt;.">Инициализирует новый объект <see cref="T:System.Threading.Tasks.Dataflow.JoinBlock`2" />.</summary>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.JoinBlock`2.#ctor(System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions)">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.JoinBlock`2&quot; /&gt;.">Инициализирует новый объект <see cref="T:System.Threading.Tasks.Dataflow.JoinBlock`2" />.</summary>
      <param name="dataflowBlockOptions" vsli:raw="The options with which to configure this &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.JoinBlock`2&quot; /&gt;.">Параметр, с которым требуется настроить этот объект <see cref="T:System.Threading.Tasks.Dataflow.JoinBlock`2" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;dataflowBlockOptions&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="dataflowBlockOptions" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.JoinBlock`2.Complete">
      <summary vsli:raw="Signals to the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IDataflowBlock&quot; /&gt; that it should not accept nor produce any more messages nor consume any more postponed messages.">Сообщает блоку <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />, что он больше не должен принимать и создавать никакие сообщения и не должен использовать отложенные сообщения.</summary>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.JoinBlock`2.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{`0,`1}},System.Threading.Tasks.Dataflow.DataflowLinkOptions)">
      <summary vsli:raw="Links the  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt; to the specified  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; .">Связывает <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> с указанным <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</summary>
      <param name="target" vsli:raw="Links the  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt; to the specified  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; .">Связывает <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> с указанным <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</param>
      <param name="linkOptions" vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowLinkOptions&quot; /&gt; instance that configures the link.">Экземпляр <see cref="T:System.Threading.Tasks.Dataflow.DataflowLinkOptions" />, настраивающий ссылку.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;target&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (Nothing in Visual Basic) or  &lt;paramref name=&quot;linkOptions&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (Nothing in Visual Basic).">
        <paramref name="target" /> имеет значение <see langword="null" /> (nothing в Visual Basic) или <paramref name="linkOptions" /> имеет значение <see langword="null" /> (nothing в Visual Basic).</exception>
      <returns vsli:raw="An IDisposable that, upon calling Dispose, will unlink the source from the target.">Интерфейс IDisposable, который при вызове метода Dispose отсоединит источник от целевого объекта.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.JoinBlock`2.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)">
      <summary vsli:raw="Causes the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IDataflowBlock&quot; /&gt; to complete in a &lt;see cref=&quot;F:System.Threading.Tasks.TaskStatus.Faulted&quot; /&gt; state.">Вызывает выполнение <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> в состоянии <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />.</summary>
      <param name="exception" vsli:raw="The  &lt;see cref=&quot;T:System.Exception&quot; /&gt; that caused the faulting.">
        <see cref="T:System.Exception" />, вызвавший сбой.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;exception&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="exception" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.JoinBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock{System#Tuple{T1@T2}}#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{`0,`1}},System.Boolean@)">
      <summary vsli:raw="Passes the ownership of the message identified by the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; from this  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt; instance to the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt;.">Передает владение сообщением, идентифицируемым <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, из этого экземпляра <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> в <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</summary>
      <param name="messageHeader" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; of the message that is to be consumed.">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> сообщения, которое требуется получить.</param>
      <param name="target" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; for which the message is to be consumed.">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, для которого будет получено сообщение.</param>
      <param name="messageConsumed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was successfully consumed. &lt;see langword=&quot;false&quot; /&gt; otherwise.">Значение <see langword="true" />, если сообщение было успешно получено. В противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;messageHeader&quot; /&gt; is not valid.">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (Nothing in Visual Basic).">
        <paramref name="target" /> имеет значение <see langword="null" /> (nothing в Visual Basic).</exception>
      <returns vsli:raw="The value of the consumed message. This may correspond to a different &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; instance than was previously reserved and passed as the &lt;paramref name=&quot;messageHeader&quot; /&gt; to this method. The consuming &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; must use the returned value instead of the value passed as &lt;paramref name=&quot;messageValue&quot; /&gt; to &lt;see cref=&quot;M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)&quot; /&gt;. If the message requested is not available, the return value is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Значение получаемого сообщения. Это может соответствовать другому экземпляру <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, отличающемуся от ранее зарезервированного и переданного в качестве параметра <paramref name="messageHeader" /> этому методу. Рассматриваемый <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> должен использовать возвращаемое значение вместо значения, переданного как <paramref name="messageValue" /> в <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />. Если запрошенное сообщение недоступно, возвращается значение <see langword="null" /> (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.JoinBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock{System#Tuple{T1@T2}}#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{`0,`1}})">
      <summary vsli:raw="Releases the right to pass the ownership of the message identified by the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; from this &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt; to the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt;.">Передает право владения сообщением, идентифицируемым <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, из <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> в <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</summary>
      <param name="messageHeader" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; of the reserved message.">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> зарезервированного сообщения.</param>
      <param name="target" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; that currently holds the reservation.">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, который в настоящее время сохраняет резервирование.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;messageHeader&quot; /&gt; is not valid.">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (Nothing in Visual Basic).">
        <paramref name="target" /> имеет значение <see langword="null" /> (nothing в Visual Basic).</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; did not have the message reserved.">У <paramref name="target" /> нет зарезервированного сообщения.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.JoinBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock{System#Tuple{T1@T2}}#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{`0,`1}})">
      <summary vsli:raw="Reserves the right to pass the ownership of the message identified by the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; from this &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt; to the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt;.">Резервирует право владения сообщением, идентифицируемым <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, из <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> в <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</summary>
      <param name="messageHeader" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; of the message that is to be reserved.">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> сообщения, которое требуется зарезервировать.</param>
      <param name="target" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; for which the message is to be reserved.">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, для которого будет зарезервировано сообщение.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;messageHeader&quot; /&gt; is not valid.">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (Nothing in Visual Basic).">
        <paramref name="target" /> имеет значение <see langword="null" /> (nothing в Visual Basic).</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was successfully reserved; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если сообщение было успешно зарезервировано; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.JoinBlock`2.ToString">
      <summary vsli:raw="Returns a string that represents the formatted name of this  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IDataflowBlock&quot; /&gt; instance.">Возвращает строку, представляющую отформатированное имя данного экземпляра <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />.</summary>
      <returns vsli:raw="A string that represents the formatted name of this &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IDataflowBlock&quot; /&gt; instance.">Строка, представляющая отформатированное имя данного экземпляра <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.JoinBlock`2.TryReceive(System.Predicate{System.Tuple{`0,`1}},System.Tuple{`0,`1}@)">
      <summary vsli:raw="Attempts to synchronously receive an available output item from the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1&quot; /&gt;.">Пытается синхронно получить доступный выходной элемент от интерфейса <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</summary>
      <param name="filter" vsli:raw="The predicate value must successfully pass in order for it to be received.  &lt;paramref name=&quot;filter&quot; /&gt; may be &lt;see langword=&quot;null&quot; /&gt;, in which case all items will pass.">Значение предиката должно быть успешно передано, чтобы оно было получено.  Параметр <paramref name="filter" /> может иметь значение <see langword="null" />; в этом случае будут переданы все элементы.</param>
      <param name="item" vsli:raw="The item received from the source.">Элемент, полученный от источника.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an item could be received; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если получить элемент не удалось; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.JoinBlock`2.TryReceiveAll(System.Collections.Generic.IList{System.Tuple{`0,`1}}@)">
      <summary vsli:raw="Attempts to synchronously receive all available items from the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1&quot; /&gt;.">Пытается синхронно получить все доступные элементы от интерфейса <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</summary>
      <param name="items" vsli:raw="The items received from the source.">Элементы, полученные от источника.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if one or more items could be received; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если могут быть получены один или несколько элементов; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.JoinBlock`2.Completion">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; that represents the asynchronous operation and completion of the dataflow block.">Получает объект <see cref="T:System.Threading.Tasks.Task" />, представляющий асинхронную операцию и завершение блока потока данных.</summary>
      <returns vsli:raw="The task.">Задача.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.JoinBlock`2.OutputCount">
      <summary vsli:raw="Gets the number of output items available to be received from this block.">Получает число выходных элементов, доступных для получения из этого блока.</summary>
      <returns vsli:raw="The number of output items.">Число выходных элементов.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.JoinBlock`2.Target1">
      <summary vsli:raw="Gets a target that may be used to offer messages of the first type.">Получает целевой объект, который может использоваться для предложения сообщений первого типа.</summary>
      <returns vsli:raw="The target.">Целевой объект.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.JoinBlock`2.Target2">
      <summary vsli:raw="Gets a target that may be used to offer messages of the second type.">Получает целевой объект, который может использоваться для предложения сообщений второго типа.</summary>
      <returns vsli:raw="The target.">Целевой объект.</returns>
    </member>
    <member name="T:System.Threading.Tasks.Dataflow.JoinBlock`3">
      <summary vsli:raw="Provides a dataflow block that joins across multiple dataflow sources, which are not necessarily of the same type, waiting for one item to arrive for each type before they're all released together as a tuple that contains one item per type.">Предоставляет блок потока данных, объединяющий несколько источников потоков данных, необязательно одного типа, ожидая появления каждого типа, прежде чем они все совместно выпускаются как кортеж, состоящий из одного элемента каждого типа.</summary>
      <typeparam name="T1" vsli:raw="Specifies the type of data accepted by the block's first target.">Указывает тип данных, принимаемых первым целевым объектом блока.</typeparam>
      <typeparam name="T2" vsli:raw="Specifies the type of data accepted by the block's second target.">Указывает тип данных, принимаемых вторым целевым объектом блока.</typeparam>
      <typeparam name="T3" vsli:raw="Specifies the type of data accepted by the block's third target.">Указывает тип данных, принимаемых третьим целевым объектом блока.</typeparam>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.JoinBlock`3.#ctor">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.JoinBlock`3&quot; /&gt;.">Инициализирует новый объект <see cref="T:System.Threading.Tasks.Dataflow.JoinBlock`3" />.</summary>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.JoinBlock`3.#ctor(System.Threading.Tasks.Dataflow.GroupingDataflowBlockOptions)">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.JoinBlock`3&quot; /&gt;.">Инициализирует новый объект <see cref="T:System.Threading.Tasks.Dataflow.JoinBlock`3" />.</summary>
      <param name="dataflowBlockOptions" vsli:raw="The options with which to configure this &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.JoinBlock`2&quot; /&gt;.">Параметр, с которым требуется настроить этот объект <see cref="T:System.Threading.Tasks.Dataflow.JoinBlock`2" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;dataflowBlockOptions&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="dataflowBlockOptions" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.JoinBlock`3.Complete">
      <summary vsli:raw="Signals to the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IDataflowBlock&quot; /&gt; that it should not accept nor produce any more messages nor consume any more postponed messages.">Сообщает блоку <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />, что он больше не должен принимать и создавать никакие сообщения и не должен использовать отложенные сообщения.</summary>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.JoinBlock`3.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{`0,`1,`2}},System.Threading.Tasks.Dataflow.DataflowLinkOptions)">
      <summary vsli:raw="Links the   source block to the specified target block.">Связывает исходный блок с указанным целевым блоком.</summary>
      <param name="target" vsli:raw="The target block to which to connect this source.">Целевой блок, к которому требуется подключить этот источник.</param>
      <param name="linkOptions" vsli:raw="An object that configures the link.">Объект, настраивающий ссылку.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;target&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;linkOptions&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="target" /> имеет значение <see langword="null" />.  
  
-или- 
 <paramref name="linkOptions" /> имеет значение <see langword="null" />.</exception>
      <returns vsli:raw="A disposable object that unlinks the source from the target when its &lt;see cref=&quot;M:System.IDisposable.Dispose&quot; /&gt; method is called.">Удаляемый объект, удаляющий связь между исходным и целевым объектом, когда вызывается его метод <see cref="M:System.IDisposable.Dispose" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.JoinBlock`3.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)">
      <summary vsli:raw="Causes the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IDataflowBlock&quot; /&gt; to complete in a  &lt;see cref=&quot;F:System.Threading.Tasks.TaskStatus.Faulted&quot; /&gt; state.">Вызывает завершение блока <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> в состоянии <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />.</summary>
      <param name="exception" vsli:raw="The  &lt;see cref=&quot;T:System.Exception&quot; /&gt; that caused the faulting.">
        <see cref="T:System.Exception" />, вызвавший сбой.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;exception&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="exception" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.JoinBlock`3.System#Threading#Tasks#Dataflow#ISourceBlock{System#Tuple{T1@T2@T3}}#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{`0,`1,`2}},System.Boolean@)">
      <summary vsli:raw="Passes the ownership of the message identified by the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; from this  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt; instance to the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt;.">Передает владение сообщением, идентифицируемым <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, из этого экземпляра <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> в <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</summary>
      <param name="messageHeader" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; of the message that is to be consumed.">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> сообщения, которое требуется получить.</param>
      <param name="target" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; for which the message is to be consumed.">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, для которого будет получено сообщение.</param>
      <param name="messageConsumed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was successfully consumed. &lt;see langword=&quot;false&quot; /&gt; otherwise.">Значение <see langword="true" />, если сообщение было успешно получено. В противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;messageHeader&quot; /&gt; is not valid.">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (Nothing in Visual Basic).">
        <paramref name="target" /> имеет значение <see langword="null" /> (nothing в Visual Basic).</exception>
      <returns vsli:raw="The value of the consumed message. This may correspond to a different &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; instance than was previously reserved and passed as the &lt;paramref name=&quot;messageHeader&quot; /&gt; to this method. The consuming &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; must use the returned value instead of the value passed as &lt;paramref name=&quot;messageValue&quot; /&gt; to &lt;see cref=&quot;M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)&quot; /&gt;. If the message requested is not available, the return value is &lt;see langword=&quot;null&quot; /&gt; (&lt;see langword=&quot;Nothing&quot; /&gt; in Visual Basic).">Значение получаемого сообщения. Это может соответствовать другому экземпляру <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, отличающемуся от ранее зарезервированного и переданного в качестве параметра <paramref name="messageHeader" /> этому методу. Рассматриваемый <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> должен использовать возвращаемое значение вместо значения, переданного как <paramref name="messageValue" /> в <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />. Если запрошенное сообщение недоступно, возвращается значение <see langword="null" /> (<see langword="Nothing" /> в Visual Basic).</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.JoinBlock`3.System#Threading#Tasks#Dataflow#ISourceBlock{System#Tuple{T1@T2@T3}}#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{`0,`1,`2}})">
      <summary vsli:raw="Releases the right to pass the ownership of the message identified by the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; from this &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt; to the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt;.">Передает право владения сообщением, идентифицируемым <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, из <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> в <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</summary>
      <param name="messageHeader" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; of the reserved message.">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> зарезервированного сообщения.</param>
      <param name="target" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; that currently holds the reservation.">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, который в настоящее время сохраняет резервирование.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;messageHeader&quot; /&gt; is not valid.">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (Nothing in Visual Basic).">
        <paramref name="target" /> имеет значение <see langword="null" /> (nothing в Visual Basic).</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; did not have the message reserved.">У <paramref name="target" /> нет зарезервированного сообщения.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.JoinBlock`3.System#Threading#Tasks#Dataflow#ISourceBlock{System#Tuple{T1@T2@T3}}#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{System.Tuple{`0,`1,`2}})">
      <summary vsli:raw="Reserves the right to pass the ownership of the message identified by the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; from this &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt; to the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt;.">Резервирует право владения сообщением, идентифицируемым <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, из <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> в <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</summary>
      <param name="messageHeader" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; of the message that is to be reserved.">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> сообщения, которое требуется зарезервировать.</param>
      <param name="target" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; for which the message is to be reserved.">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, для которого будет зарезервировано сообщение.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;messageHeader&quot; /&gt; is not valid.">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt; (Nothing in Visual Basic).">
        <paramref name="target" /> имеет значение <see langword="null" /> (nothing в Visual Basic).</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was successfully reserved; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если сообщение было успешно зарезервировано; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.JoinBlock`3.ToString">
      <summary vsli:raw="Returns a string that represents the formatted name of this  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IDataflowBlock&quot; /&gt; instance.">Возвращает строку, представляющую отформатированное имя данного экземпляра <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />.</summary>
      <returns vsli:raw="A string that represents the formatted name of this &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IDataflowBlock&quot; /&gt; instance.">Строка, представляющая отформатированное имя данного экземпляра <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.JoinBlock`3.TryReceive(System.Predicate{System.Tuple{`0,`1,`2}},System.Tuple{`0,`1,`2}@)">
      <summary vsli:raw="Attempts to synchronously receive an available output item from the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1&quot; /&gt;.">Пытается синхронно получить доступный выходной элемент от интерфейса <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</summary>
      <param name="filter" vsli:raw="The predicate value must successfully pass in order for it to be received.  &lt;paramref name=&quot;filter&quot; /&gt; may be &lt;see langword=&quot;null&quot; /&gt;, in which case all items will pass.">Значение предиката должно быть успешно передано, чтобы оно было получено.  Параметр <paramref name="filter" /> может иметь значение <see langword="null" />; в этом случае будут переданы все элементы.</param>
      <param name="item" vsli:raw="The item received from the source.">Элемент, полученный от источника.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an item could be received; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если получить элемент не удалось; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.JoinBlock`3.TryReceiveAll(System.Collections.Generic.IList{System.Tuple{`0,`1,`2}}@)">
      <summary vsli:raw="Attempts to synchronously receive all available items from the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1&quot; /&gt;.">Пытается синхронно получить все доступные элементы от интерфейса <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</summary>
      <param name="items" vsli:raw="The items received from the source.">Элементы, полученные от источника.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if one or more items could be received; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если могут быть получены один или несколько элементов; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.JoinBlock`3.Completion">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; that represents the asynchronous operation and completion of the dataflow block.">Получает объект <see cref="T:System.Threading.Tasks.Task" />, представляющий асинхронную операцию и завершение блока потока данных.</summary>
      <returns vsli:raw="The task.">Задача.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.JoinBlock`3.OutputCount">
      <summary vsli:raw="Gets the number of output items available to be received from this block.">Получает число выходных элементов, доступных для получения из этого блока.</summary>
      <returns vsli:raw="The number of output items.">Число выходных элементов.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.JoinBlock`3.Target1">
      <summary vsli:raw="Gets a target that may be used to offer messages of the first type.">Получает целевой объект, который может использоваться для предложения сообщений первого типа.</summary>
      <returns vsli:raw="The target.">Целевой объект.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.JoinBlock`3.Target2">
      <summary vsli:raw="Gets a target that may be used to offer messages of the second type.">Получает целевой объект, который может использоваться для предложения сообщений второго типа.</summary>
      <returns vsli:raw="The target.">Целевой объект.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.JoinBlock`3.Target3">
      <summary vsli:raw="Gets a target that may be used to offer messages of the third type.">Получает целевой объект, который может использоваться для предложения сообщений третьего типа.</summary>
      <returns vsli:raw="The target.">Целевой объект.</returns>
    </member>
    <member name="T:System.Threading.Tasks.Dataflow.TransformBlock`2">
      <summary vsli:raw="Provides a dataflow block that invokes a provided &lt;see cref=&quot;T:System.Func`2&quot; /&gt; delegate for every data element received.">Предоставляет блок потока данных, который вызывает предоставленный делегат <see cref="T:System.Func`2" /> для каждого полученного элемента данных.</summary>
      <typeparam name="TInput" vsli:raw="Specifies the type of data received and operated on by this &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.TransformBlock`2&quot; /&gt;.">Указывает тип данных, получаемых и используемых этим <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" />.</typeparam>
      <typeparam name="TOutput" vsli:raw="Specifies the type of data output by this  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.TransformBlock`2&quot; /&gt;.">Указывает тип выходных данных  <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" /> .</typeparam>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformBlock`2.#ctor(System.Func{`0,`1})">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.TransformBlock`2&quot; /&gt; with the specified  &lt;see cref=&quot;T:System.Func`2&quot; /&gt;.">Инициализирует новый <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" /> с указанным <see cref="T:System.Func`2" />.</summary>
      <param name="transform" vsli:raw="The function to invoke with each data element received.">Функция, вызываемая при получении каждого элемента данных.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;transform&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="transform" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformBlock`2.#ctor(System.Func{`0,`1},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.TransformBlock`2&quot; /&gt; with the specified  &lt;see cref=&quot;T:System.Func`2&quot; /&gt; and &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions&quot; /&gt;.">Инициализирует новый экземпляр класса <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" /> с указанными <see cref="T:System.Func`2" /> и <see cref="T:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions" />.</summary>
      <param name="transform" vsli:raw="The function to invoke with each data element received.">Функция, вызываемая при получении каждого элемента данных.</param>
      <param name="dataflowBlockOptions" vsli:raw="The options with which to configure this  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.TransformBlock`2&quot; /&gt;.">Параметры, с которыми требуется настроить этот объект <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;transform&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;dataflowBlockOptions&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="transform" /> — <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="dataflowBlockOptions" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformBlock`2.#ctor(System.Func{`0,System.Threading.Tasks.Task{`1}})">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.TransformBlock`2&quot; /&gt; with the specified &lt;see cref=&quot;T:System.Func`2&quot; /&gt;.">Инициализирует новый <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" /> с указанным <see cref="T:System.Func`2" />.</summary>
      <param name="transform" vsli:raw="The function to invoke with each data element received.">Функция, вызываемая при получении каждого элемента данных.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;transform&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="transform" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformBlock`2.#ctor(System.Func{`0,System.Threading.Tasks.Task{`1}},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.TransformBlock`2&quot; /&gt; with the specified  &lt;see cref=&quot;T:System.Func`2&quot; /&gt; and &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions&quot; /&gt;.">Инициализирует новый экземпляр класса <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" /> с указанными <see cref="T:System.Func`2" /> и <see cref="T:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions" />.</summary>
      <param name="transform" vsli:raw="The function to invoke with each data element received.">Функция, вызываемая при получении каждого элемента данных.</param>
      <param name="dataflowBlockOptions" vsli:raw="The options with which to configure this  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.TransformBlock`2&quot; /&gt;.">Параметры, с которыми требуется настроить этот объект <see cref="T:System.Threading.Tasks.Dataflow.TransformBlock`2" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;transform&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;dataflowBlockOptions&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="transform" /> — <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="dataflowBlockOptions" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformBlock`2.Complete">
      <summary vsli:raw="Signals to the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IDataflowBlock&quot; /&gt; that it should not accept nor produce any more messages nor consume any more postponed messages.">Сообщает блоку <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />, что он больше не должен принимать и создавать никакие сообщения и не должен использовать отложенные сообщения.</summary>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformBlock`2.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`1},System.Threading.Tasks.Dataflow.DataflowLinkOptions)">
      <summary vsli:raw="Links the  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt; to the specified  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; .">Связывает <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> с указанным <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</summary>
      <param name="target" vsli:raw="The  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; to which to connect this source.">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, к которому требуется подключить этот источник.</param>
      <param name="linkOptions" vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowLinkOptions&quot; /&gt; instance that configures the link.">Экземпляр <see cref="T:System.Threading.Tasks.Dataflow.DataflowLinkOptions" />, настраивающий ссылку.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;target&quot; /&gt; is null (Nothing in Visual Basic) or  &lt;paramref name=&quot;linkOptions&quot; /&gt; is null (Nothing in Visual Basic).">
        <paramref name="target" /> имеет значение NULL (nothing в Visual Basic) или <paramref name="linkOptions" /> имеет значение NULL (nothing в Visual Basic).</exception>
      <returns vsli:raw="An IDisposable that, upon calling Dispose, will unlink the source from the target.">Интерфейс IDisposable, который при вызове метода Dispose отсоединит источник от целевого объекта.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformBlock`2.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)">
      <summary vsli:raw="Causes the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IDataflowBlock&quot; /&gt; to complete in a  &lt;see cref=&quot;F:System.Threading.Tasks.TaskStatus.Faulted&quot; /&gt; state.">Вызывает завершение блока <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> в состоянии <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />.</summary>
      <param name="exception" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; that caused the faulting.">
        <see cref="T:System.Exception" />, вызвавший сбой.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;exception&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="exception" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock{TOutput}#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1},System.Boolean@)">
      <summary vsli:raw="Called by a linked &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; to accept and consume a &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; previously offered by this &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt;.">Вызывается связанным объектом <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> для принятия и использования объекта <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, ранее предложенного этим объектом <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</summary>
      <param name="messageHeader" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; of the message being consumed.">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> используемого сообщения.</param>
      <param name="target" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; consuming the message.">
        <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, получающий сообщение.</param>
      <param name="messageConsumed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was successfully consumed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если сообщение было успешно получено; в противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;messageHeader&quot; /&gt; is not valid.">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="target" /> — <see langword="null" />.</exception>
      <returns vsli:raw="The value of the consumed message. This may correspond to a different &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; instance than was previously reserved and passed as the &lt;paramref name=&quot;messageHeader&quot; /&gt; to &lt;see cref=&quot;M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)&quot; /&gt;. The consuming &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; must use the returned value instead of the value passed as &lt;paramref name=&quot;messageValue&quot; /&gt; through &lt;see cref=&quot;M:System.Threading.Tasks.Dataflow.TransformBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock{TInput}#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)&quot; /&gt;.  &#xA;  &#xA; If the message requested is not available, the return value will be &lt;see langword=&quot;null&quot; /&gt;.">Значение получаемого сообщения. Это может соответствовать другому экземпляру <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, отличному от ранее зарезервированного и переданного в качестве параметра <paramref name="messageHeader" /> методу <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" />. Рассматриваемый <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> должен использовать возвращаемое значение вместо значения, переданного как параметр <paramref name="messageValue" /> с помощью метода <see cref="M:System.Threading.Tasks.Dataflow.TransformBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock{TInput}#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />.  
  
Если запрашиваемое сообщение недоступно, возвращается значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock{TOutput}#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1})">
      <summary vsli:raw="Called by a linked &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; to release a previously reserved &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; by this  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt;.">Вызывается связанным объектом <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> для освобождения объекта <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, ранее зарезервированного этим объектом <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</summary>
      <param name="messageHeader" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; of the reserved message being released.">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> освобождаемого зарезервированного сообщения.</param>
      <param name="target" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; releasing the message it previously reserved.">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, освобождающий сообщение, которое он ранее зарезервировал.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;messageHeader&quot; /&gt; is not valid.">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="target" /> — <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; did not have the message reserved.">У <paramref name="target" /> нет зарезервированного сообщения.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock{TOutput}#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1})">
      <summary vsli:raw="Called by a linked &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; to reserve a previously offered &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; by this  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt;.">Вызывается связанным объектом <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> для резервирования объекта <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, ранее предложенного этим объектом <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</summary>
      <param name="messageHeader" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; of the message being reserved.">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> резервируемого сообщения.</param>
      <param name="target" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; reserving the message.">
        <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, сохраняющий сообщение.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;messageHeader&quot; /&gt; is not valid.">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="target" /> — <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was successfully reserved; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если сообщение было успешно зарезервировано; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock{TInput}#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
      <summary vsli:raw="Offers a message to the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt;, giving the target the opportunity to consume or postpone the message.">Предлагает сообщение блоку <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, предоставляя целевому объекту возможность использовать или отложить его.</summary>
      <param name="messageHeader" vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; instance that represents the header of the message being offered.">Экземпляр <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, представляющий заголовок предлагаемого сообщения.</param>
      <param name="messageValue" vsli:raw="The value of the message being offered.">Значение предлагаемого свойства.</param>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt; offering the message. This may be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />, предлагающий сообщение. Это может быть значение <see langword="null" />.</param>
      <param name="consumeToAccept" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the target must call &lt;see cref=&quot;M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)&quot; /&gt; synchronously during the call to &lt;see cref=&quot;M:System.Threading.Tasks.Dataflow.TransformBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock{TInput}#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)&quot; /&gt;, prior to returning &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted&quot; /&gt;, in order to consume the message.">Значение <see langword="true" />, если целевой объект должен вызвать метод <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /> асинхронно во время вызова <see cref="M:System.Threading.Tasks.Dataflow.TransformBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock{TInput}#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" /> до возврата <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" />, чтобы получить сообщение.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;messageHeader&quot; /&gt; is not valid.  &#xA;  &#xA; -or- &lt;paramref name=&quot;consumeToAccept&quot; /&gt; may only be true if provided with a non-null &lt;paramref name=&quot;source&quot; /&gt;.">Недопустимое значение <paramref name="messageHeader" />.  
  
-или- параметр <paramref name="consumeToAccept" /> может иметь значение true, только если для него предоставлен параметр <paramref name="source" /> со значением, отличным от значения NULL.</exception>
      <returns vsli:raw="The status of the offered message. If the message was accepted by the target, &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted&quot; /&gt; is returned, and the source should no longer use the offered message, because it is now owned by the target. If the message was postponed by the target, &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed&quot; /&gt; is returned as a notification that the target may later attempt to consume or reserve the message; in the meantime, the source still owns the message and may offer it to other blocks.  &#xA;  &#xA; If the target would have otherwise postponed but source was &lt;see langword=&quot;null&quot; /&gt;, &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined&quot; /&gt; is instead returned.  &#xA;  &#xA; If the target tried to accept the message but missed it due to the source delivering the message to another target or simply discarding it, &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable&quot; /&gt; is returned.  &#xA;  &#xA; If the target chose not to accept the message, &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined&quot; /&gt; is returned. If the target chose not to accept the message and will never accept another message from this source, &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently&quot; /&gt; is returned.">Состояние предложенного сообщения. Если сообщение было принято целевым объектом, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> и источник больше не должен использовать предложенное сообщение, поскольку оно теперь принадлежит целевому объекту. Если сообщение было отложено целевым объектом, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" /> в качестве уведомления о том, что целевой объект может позже попытаться использовать или зарезервировать сообщение; при этом источник будет по-прежнему владеть сообщением и может предлагать его другим блокам.  
  
Если целевой объект в противном случае отложил бы сообщение, но источник имел значение <see langword="null" />, вместо этого возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" />.  
  
Если целевой объект попытался принять сообщение, но не получил его из-за доставки сообщения источником другому целевому объекту или просто отбрасывания сообщения источником, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" />.  
  
Если целевой объект принял решение не принимать сообщение, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" />. Если целевой объект принял решение не принимать сообщение и никогда не будет принимать другие сообщения от этого источника, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformBlock`2.ToString">
      <summary vsli:raw="Returns a string that represents the formatted name of this  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IDataflowBlock&quot; /&gt; instance.">Возвращает строку, представляющую отформатированное имя данного экземпляра <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />.</summary>
      <returns vsli:raw="A string that represents the formatted name of this  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IDataflowBlock&quot; /&gt; instance.">Строка, представляющая отформатированное имя данного экземпляра <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformBlock`2.TryReceive(System.Predicate{`1},`1@)">
      <summary vsli:raw="Attempts to synchronously receive an available output item from the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1&quot; /&gt;.">Пытается синхронно получить доступный выходной элемент от интерфейса <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</summary>
      <param name="filter" vsli:raw="The predicate value must successfully pass in order for it to be received.  &lt;paramref name=&quot;filter&quot; /&gt; may be &lt;see langword=&quot;null&quot; /&gt;, in which case all items will pass.">Значение предиката должно быть успешно передано, чтобы оно было получено.  Параметр <paramref name="filter" /> может иметь значение <see langword="null" />; в этом случае будут переданы все элементы.</param>
      <param name="item" vsli:raw="The item received from the source.">Элемент, полученный от источника.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an item could be received; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если получить элемент не удалось; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformBlock`2.TryReceiveAll(System.Collections.Generic.IList{`1}@)">
      <summary vsli:raw="Attempts to synchronously receive all available items from the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1&quot; /&gt;.">Пытается синхронно получить все доступные элементы от интерфейса <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</summary>
      <param name="items" vsli:raw="The items received from the source.">Элементы, полученные от источника.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if one or more items could be received; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если могут быть получены один или несколько элементов; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.TransformBlock`2.Completion">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; that represents the asynchronous operation and completion of the dataflow block.">Получает объект <see cref="T:System.Threading.Tasks.Task" />, представляющий асинхронную операцию и завершение блока потока данных.</summary>
      <returns vsli:raw="The task.">Задача.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.TransformBlock`2.InputCount">
      <summary vsli:raw="Gets the number of input items waiting to be processed by this block.">Получает количество входных элементов, ожидающих обработки этим блоком.</summary>
      <returns vsli:raw="The number of input items.">Число входных элементов.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.TransformBlock`2.OutputCount">
      <summary vsli:raw="Gets the number of output items available to be received from this block.">Получает число выходных элементов, доступных для получения из этого блока.</summary>
      <returns vsli:raw="The number of output items.">Число выходных элементов.</returns>
    </member>
    <member name="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2">
      <summary vsli:raw="Provides a dataflow block that invokes a provided &lt;see cref=&quot;T:System.Func`2&quot; /&gt; delegate for every data element received.">Предоставляет блок потока данных, который вызывает предоставленный делегат <see cref="T:System.Func`2" /> для каждого полученного элемента данных.</summary>
      <typeparam name="TInput" vsli:raw="Specifies the type of data received and operated on by this &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.TransformManyBlock`2&quot; /&gt;.">Указывает тип данных, получаемых и используемых этим <see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" />.</typeparam>
      <typeparam name="TOutput" vsli:raw="Specifies the type of data output by this &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.TransformManyBlock`2&quot; /&gt;.">Определяет тип вывода данных с помощью этого <see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" />.</typeparam>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Collections.Generic.IEnumerable{`1}})">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.TransformManyBlock`2&quot; /&gt; with the specified function.">Инициализирует новую задачу <see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" /> с указанной функцией.</summary>
      <param name="transform" vsli:raw="The function to invoke with each data element received. All of the data from the returned &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; will be made available as output from this &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.TransformManyBlock`2&quot; /&gt;.">Функция, вызываемая при получении каждого элемента данных. Все данные из возвращаемого <see cref="T:System.Collections.Generic.IEnumerable`1" /> будут доступны в качестве выходных данных из этого <see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;transform&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="transform" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Collections.Generic.IEnumerable{`1}},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.TransformManyBlock`2&quot; /&gt; with the specified function and &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions&quot; /&gt;.">Инициализирует новый экземпляр класса <see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" /> с указанной функцией и <see cref="T:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions" />.</summary>
      <param name="transform" vsli:raw="The function to invoke with each data element received. All of the data from the returned in the &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; will be made available as output from this  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.TransformManyBlock`2&quot; /&gt;.">Функция, вызываемая при получении каждого элемента данных. Все данные из возвращаемого в <see cref="T:System.Collections.Generic.IEnumerable`1" /> будут доступны в качестве выходных данных из этого <see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" />.</param>
      <param name="dataflowBlockOptions" vsli:raw="The options with which to configure this &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.TransformManyBlock`2&quot; /&gt;.">Параметр, с которым требуется настроить этот объект <see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;transform&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;dataflowBlockOptions&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="transform" /> — <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="dataflowBlockOptions" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{`1}}})">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.TransformManyBlock`2&quot; /&gt; with the specified function.">Инициализирует новую задачу <see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" /> с указанной функцией.</summary>
      <param name="transform" vsli:raw="The function to invoke with each data element received. All of the data asynchronously returned in the &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; will be made available as output from this  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.TransformManyBlock`2&quot; /&gt;.">Функция, вызываемая при получении каждого элемента данных. Все данные, асинхронно возвращаемые в <see cref="T:System.Collections.Generic.IEnumerable`1" />, будут доступны в качестве выходных данных из этого <see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;transform&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="transform" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.#ctor(System.Func{`0,System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{`1}}},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.TransformManyBlock`2&quot; /&gt; with the specified function and &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions&quot; /&gt;.">Инициализирует новый экземпляр класса <see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" /> с указанной функцией и <see cref="T:System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions" />.</summary>
      <param name="transform" vsli:raw="The function to invoke with each data element received. All of the data asynchronously returned in the &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; will be made available as output from this  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.TransformManyBlock`2&quot; /&gt;.">Функция, вызываемая при получении каждого элемента данных. Все данные, асинхронно возвращаемые в <see cref="T:System.Collections.Generic.IEnumerable`1" />, будут доступны в качестве выходных данных из этого <see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" />.</param>
      <param name="dataflowBlockOptions" vsli:raw="The options with which to configure this &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.TransformManyBlock`2&quot; /&gt;.">Параметр, с которым требуется настроить этот объект <see cref="T:System.Threading.Tasks.Dataflow.TransformManyBlock`2" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;transform&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.  &#xA;  &#xA; -or-  &#xA;  &#xA; The &lt;paramref name=&quot;dataflowBlockOptions&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="transform" /> — <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="dataflowBlockOptions" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.Complete">
      <summary vsli:raw="Signals to the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IDataflowBlock&quot; /&gt; that it should not accept nor produce any more messages nor consume any more postponed messages.">Сообщает блоку <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />, что он больше не должен принимать и создавать никакие сообщения и не должен использовать отложенные сообщения.</summary>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`1},System.Threading.Tasks.Dataflow.DataflowLinkOptions)">
      <summary vsli:raw="Links the  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt; to the specified  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; .">Связывает <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> с указанным <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</summary>
      <param name="target" vsli:raw="The  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; to which to connect this source.">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, к которому требуется подключить этот источник.</param>
      <param name="linkOptions" vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowLinkOptions&quot; /&gt; instance that configures the link.">Экземпляр <see cref="T:System.Threading.Tasks.Dataflow.DataflowLinkOptions" />, настраивающий ссылку.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;target&quot; /&gt; is null (Nothing in Visual Basic) or  &lt;paramref name=&quot;linkOptions&quot; /&gt; is null (Nothing in Visual Basic).">
        <paramref name="target" /> имеет значение NULL (nothing в Visual Basic) или <paramref name="linkOptions" /> имеет значение NULL (nothing в Visual Basic).</exception>
      <returns vsli:raw="An IDisposable that, upon calling Dispose, will unlink the source from the target.">Интерфейс IDisposable, который при вызове метода Dispose отсоединит источник от целевого объекта.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)">
      <summary vsli:raw="Causes the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IDataflowBlock&quot; /&gt; to complete in a  &lt;see cref=&quot;F:System.Threading.Tasks.TaskStatus.Faulted&quot; /&gt; state.">Вызывает завершение блока <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> в состоянии <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />.</summary>
      <param name="exception" vsli:raw="The &lt;see cref=&quot;T:System.Exception&quot; /&gt; that caused the faulting.">
        <see cref="T:System.Exception" />, вызвавший сбой.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;exception&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="exception" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock{TOutput}#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1},System.Boolean@)">
      <summary vsli:raw="Called by a linked &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; to accept and consume a &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; previously offered by this &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt;.">Вызывается связанным объектом <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> для принятия и использования объекта <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, ранее предложенного этим объектом <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</summary>
      <param name="messageHeader" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; of the message being consumed.">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> используемого сообщения.</param>
      <param name="target" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; consuming the message.">
        <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, получающий сообщение.</param>
      <param name="messageConsumed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was successfully consumed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если сообщение было успешно получено; в противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;messageHeader&quot; /&gt; is not valid.">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="target" /> — <see langword="null" />.</exception>
      <returns vsli:raw="The value of the consumed message. This may correspond to a different &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; instance than was previously reserved and passed as the &lt;paramref name=&quot;messageHeader&quot; /&gt; to &lt;see cref=&quot;M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)&quot; /&gt;. The consuming &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; must use the returned value instead of the value passed as &lt;paramref name=&quot;messageValue&quot; /&gt; through OfferMessage &lt;see cref=&quot;M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock{TInput}#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)&quot; /&gt;  &#xA;  &#xA; If the message requested is not available, the return value will be &lt;see langword=&quot;null&quot; /&gt;.">Значение получаемого сообщения. Это может соответствовать другому экземпляру <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, отличному от ранее зарезервированного и переданного в качестве параметра <paramref name="messageHeader" /> методу <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" />. Рассматриваемый <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> должен использовать возвращаемое значение вместо значения, переданного как параметр <paramref name="messageValue" /> с помощью метода OfferMessage <see cref="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock{TInput}#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />.  
  
Если запрашиваемое сообщение недоступно, возвращается значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock{TOutput}#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1})">
      <summary vsli:raw="Called by a linked &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; to release a previously reserved &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; by this &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt;.">Вызывается связанным объектом <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> для освобождения объекта <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, ранее зарезервированного этим объектом <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</summary>
      <param name="messageHeader" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; of the reserved message being released.">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> освобождаемого зарезервированного сообщения.</param>
      <param name="target" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; releasing the message it previously reserved.">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, освобождающий сообщение, которое он ранее зарезервировал.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;messageHeader&quot; /&gt; is not valid.">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="target" /> — <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; did not have the message reserved.">У <paramref name="target" /> нет зарезервированного сообщения.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ISourceBlock{TOutput}#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`1})">
      <summary vsli:raw="Called by a linked &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; to reserve a previously offered &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; by this  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt;.">Вызывается связанным объектом <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> для резервирования объекта <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, ранее предложенного этим объектом <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</summary>
      <param name="messageHeader" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; of the message being reserved.">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> резервируемого сообщения.</param>
      <param name="target" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; reserving the message.">
        <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, сохраняющий сообщение.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;messageHeader&quot; /&gt; is not valid.">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="target" /> — <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was successfully reserved; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если сообщение было успешно зарезервировано; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.System#Threading#Tasks#Dataflow#ITargetBlock{TInput}#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
      <summary vsli:raw="Offers a message to the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt;, giving the target the opportunity to consume or postpone the message.">Предлагает сообщение блоку <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, предоставляя целевому объекту возможность использовать или отложить его.</summary>
      <param name="messageHeader" vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; instance that represents the header of the message being offered.">Экземпляр <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, представляющий заголовок предлагаемого сообщения.</param>
      <param name="messageValue" vsli:raw="The value of the message being offered.">Значение предлагаемого свойства.</param>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt; offering the message. This may be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />, предлагающий сообщение. Это может быть значение <see langword="null" />.</param>
      <param name="consumeToAccept" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the target must call &lt;see cref=&quot;M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)&quot; /&gt; synchronously during the call to &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt;, prior to returning &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted&quot; /&gt;, in order to consume the message.">Значение <see langword="true" />, если целевой объект должен вызвать метод <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /> асинхронно во время вызова <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> до возврата <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" />, чтобы получить сообщение.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;messageHeader&quot; /&gt; is not valid.  &#xA;  &#xA; -or-  &#xA;  &#xA; &lt;paramref name=&quot;consumeToAccept&quot; /&gt; may only be true if provided with a non-null &lt;paramref name=&quot;source&quot; /&gt;.">Недопустимое значение <paramref name="messageHeader" />.  
  
-или- 
 <paramref name="consumeToAccept" /> может быть только значение true, если он получил <paramref name="source" />, отличный от null.</exception>
      <returns vsli:raw="The status of the offered message. If the message was accepted by the target, &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted&quot; /&gt; is returned, and the source should no longer use the offered message, as it is now owned by the target. If the message was postponed by the target, &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed&quot; /&gt; is returned as a notification that the target may later attempt to consume or reserve the message; in the meantime, the source still owns the message and may offer it to other blocks.  &#xA;  &#xA; If the target would have otherwise postponed but source was &lt;see langword=&quot;null&quot; /&gt;, &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined&quot; /&gt; is instead returned.  &#xA;  &#xA; If the target tried to accept the message but missed it due to the source delivering the message to another target or simply discarding it, &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable&quot; /&gt; is returned.  &#xA;  &#xA; If the target chose not to accept the message, &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined&quot; /&gt; is returned. If the target chose not to accept the message and will never accept another message from this source, &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently&quot; /&gt; is returned.">Состояние предложенного сообщения. Если сообщение было принято целевым объектом, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> и источник больше не должен использовать предложенное сообщение, поскольку оно теперь принадлежит целевому объекту. Если сообщение было отложено целевым объектом, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" /> в качестве уведомления о том, что целевой объект может позже попытаться использовать или зарезервировать сообщение; при этом источник будет по-прежнему владеть сообщением и может предлагать его другим блокам.  
  
Если целевой объект в противном случае отложил бы сообщение, но источник имел значение <see langword="null" />, вместо этого возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" />.  
  
Если целевой объект попытался принять сообщение, но не получил его из-за доставки сообщения источником другому целевому объекту или просто отбрасывания сообщения источником, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" />.  
  
Если целевой объект принял решение не принимать сообщение, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" />. Если целевой объект принял решение не принимать сообщение и никогда не будет принимать другие сообщения от этого источника, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.ToString">
      <summary vsli:raw="Returns a string that represents the formatted name of this  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IDataflowBlock&quot; /&gt; instance.">Возвращает строку, представляющую отформатированное имя данного экземпляра <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />.</summary>
      <returns vsli:raw="A string that represents the formatted name of this  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IDataflowBlock&quot; /&gt; instance.">Строка, представляющая отформатированное имя данного экземпляра <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.TryReceive(System.Predicate{`1},`1@)">
      <summary vsli:raw="Attempts to synchronously receive an available output item from the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1&quot; /&gt;.">Пытается синхронно получить доступный выходной элемент от интерфейса <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</summary>
      <param name="filter" vsli:raw="The predicate value must successfully pass in order for it to be received.  &lt;paramref name=&quot;filter&quot; /&gt; may be &lt;see langword=&quot;null&quot; /&gt;, in which case all items will pass.">Значение предиката должно быть успешно передано, чтобы оно было получено.  Параметр <paramref name="filter" /> может иметь значение <see langword="null" />; в этом случае будут переданы все элементы.</param>
      <param name="item" vsli:raw="The item received from the source.">Элемент, полученный от источника.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an item could be received; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если получить элемент не удалось; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.TransformManyBlock`2.TryReceiveAll(System.Collections.Generic.IList{`1}@)">
      <summary vsli:raw="Attempts to synchronously receive all available items from the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1&quot; /&gt;.">Пытается синхронно получить все доступные элементы от интерфейса <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</summary>
      <param name="items" vsli:raw="The items received from the source.">Элементы, полученные от источника.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if one or more items could be received; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если могут быть получены один или несколько элементов; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.TransformManyBlock`2.Completion">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; that represents the asynchronous operation and completion of the dataflow block.">Получает объект <see cref="T:System.Threading.Tasks.Task" />, представляющий асинхронную операцию и завершение блока потока данных.</summary>
      <returns vsli:raw="The task.">Задача.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.TransformManyBlock`2.InputCount">
      <summary vsli:raw="Gets the number of input items waiting to be processed by this block.">Получает количество входных элементов, ожидающих обработки этим блоком.</summary>
      <returns vsli:raw="The number of input items.">Число входных элементов.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.TransformManyBlock`2.OutputCount">
      <summary vsli:raw="Gets the number of output items available to be received from this block.">Получает число выходных элементов, доступных для получения из этого блока.</summary>
      <returns vsli:raw="The number of output items.">Число выходных элементов.</returns>
    </member>
    <member name="T:System.Threading.Tasks.Dataflow.WriteOnceBlock`1">
      <summary vsli:raw="Provides a buffer for receiving and storing at most one element in a network of dataflow blocks.">Предоставляет буфер для получения и хранения не более чем одного элемента в сети блоков потока данных.</summary>
      <typeparam name="T" vsli:raw="Specifies the type of the data buffered by this dataflow block.">Указывает тип данных, буферизуемых этим блоком потока данных.</typeparam>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.WriteOnceBlock`1.#ctor(System.Func{`0,`0})">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.WriteOnceBlock`1&quot; /&gt;.">Инициализирует новый объект <see cref="T:System.Threading.Tasks.Dataflow.WriteOnceBlock`1" />.</summary>
      <param name="cloningFunction" vsli:raw="The function to use to clone the data when offered to other blocks.">Функция, используемая для клонирования данных при предложении другим блокам.</param>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.WriteOnceBlock`1.#ctor(System.Func{`0,`0},System.Threading.Tasks.Dataflow.DataflowBlockOptions)">
      <summary vsli:raw="Initializes a new &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.WriteOnceBlock`1&quot; /&gt; with the specified  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowBlockOptions&quot; /&gt;.">Инициализирует новый <see cref="T:System.Threading.Tasks.Dataflow.WriteOnceBlock`1" /> с указанным <see cref="T:System.Threading.Tasks.Dataflow.DataflowBlockOptions" />.</summary>
      <param name="cloningFunction" vsli:raw="The function to use to clone the data when offered to other blocks.">Функция, используемая для клонирования данных при предложении другим блокам.</param>
      <param name="dataflowBlockOptions" vsli:raw="The options with which to configure this &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.WriteOnceBlock`1&quot; /&gt;.">Параметр, с которым требуется настроить этот объект <see cref="T:System.Threading.Tasks.Dataflow.WriteOnceBlock`1" />.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;dataflowBlockOptions&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="dataflowBlockOptions" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.WriteOnceBlock`1.Complete">
      <summary vsli:raw="Signals to the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IDataflowBlock&quot; /&gt; that it should not accept nor produce any more messages nor consume any more postponed messages.">Сообщает блоку <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />, что он больше не должен принимать и создавать никакие сообщения и не должен использовать отложенные сообщения.</summary>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.WriteOnceBlock`1.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Threading.Tasks.Dataflow.DataflowLinkOptions)">
      <summary vsli:raw="Links the  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt; to the specified  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; .">Связывает <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> с указанным <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</summary>
      <param name="target" vsli:raw="The  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; to which to connect this source.">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, к которому требуется подключить этот источник.</param>
      <param name="linkOptions" vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowLinkOptions&quot; /&gt; instance that configures the link.">Экземпляр <see cref="T:System.Threading.Tasks.Dataflow.DataflowLinkOptions" />, настраивающий ссылку.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;target&quot; /&gt; is null (Nothing in Visual Basic) or  &lt;paramref name=&quot;linkOptions&quot; /&gt; is null (Nothing in Visual Basic).">
        <paramref name="target" /> имеет значение NULL (nothing в Visual Basic) или <paramref name="linkOptions" /> имеет значение NULL (nothing в Visual Basic).</exception>
      <returns vsli:raw="An IDisposable that, upon calling Dispose, will unlink the source from the target.">Интерфейс IDisposable, который при вызове метода Dispose отсоединит источник от целевого объекта.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)">
      <summary vsli:raw="Causes the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IDataflowBlock&quot; /&gt; to complete in a &lt;see cref=&quot;F:System.Threading.Tasks.TaskStatus.Faulted&quot; /&gt; state.">Вызывает выполнение <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> в состоянии <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" />.</summary>
      <param name="exception" vsli:raw="The  &lt;see cref=&quot;T:System.Exception&quot; /&gt; that caused the faulting.">
        <see cref="T:System.Exception" />, вызвавший сбой.</param>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;exception&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="exception" /> — <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#IReceivableSourceBlock{T}#TryReceiveAll(System.Collections.Generic.IList{`0}@)">
      <summary vsli:raw="Attempts to synchronously receive all available items from the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1&quot; /&gt;.">Пытается синхронно получить все доступные элементы от интерфейса <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</summary>
      <param name="items" vsli:raw="The items received from the source.">Элементы, полученные от источника.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if one or more items could be received; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если могут быть получены один или несколько элементов; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock{T}#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)">
      <summary vsli:raw="Called by a linked &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; to accept and consume a &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; previously offered by this &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt;.">Вызывается связанным объектом <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> для принятия и использования объекта <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, ранее предложенного этим объектом <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</summary>
      <param name="messageHeader" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; of the message being consumed.">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> используемого сообщения.</param>
      <param name="target" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; consuming the message.">
        <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, получающий сообщение.</param>
      <param name="messageConsumed" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was successfully consumed; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если сообщение было успешно получено; в противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;messageHeader&quot; /&gt; is not valid.">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="target" /> — <see langword="null" />.</exception>
      <returns vsli:raw="The value of the consumed message. This may correspond to a different  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; instance than was previously reserved and passed as the &lt;paramref name=&quot;messageHeader&quot; /&gt; to &lt;see cref=&quot;M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)&quot; /&gt;. The consuming &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; must use the returned value instead of the value passed as &lt;paramref name=&quot;messageValue&quot; /&gt; through &lt;see cref=&quot;M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)&quot; /&gt;.  &#xA;  &#xA; If the message requested is not available, the return value will be &lt;see langword=&quot;null&quot; /&gt;.">Значение получаемого сообщения. Это может соответствовать другому экземпляру <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, отличному от ранее зарезервированного и переданного в качестве параметра <paramref name="messageHeader" /> методу <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" />. Рассматриваемый <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> должен использовать возвращаемое значение вместо значения, переданного как параметр <paramref name="messageValue" /> с помощью метода <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />.  
  
Если запрашиваемое сообщение недоступно, возвращается значение <see langword="null" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock{T}#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})">
      <summary vsli:raw="Called by a linked &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; to release a previously reserved &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; by this &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt;.">Вызывается связанным объектом <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> для освобождения объекта <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, ранее зарезервированного этим объектом <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</summary>
      <param name="messageHeader" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; of the reserved message being released.">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> освобождаемого зарезервированного сообщения.</param>
      <param name="target" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; releasing the message it previously reserved.">Объект <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, освобождающий сообщение, которое он ранее зарезервировал.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;messageHeader&quot; /&gt; is not valid.">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="target" /> — <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; did not have the message reserved.">У <paramref name="target" /> нет зарезервированного сообщения.</exception>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock{T}#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})">
      <summary vsli:raw="Called by a linked &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; to reserve a previously offered &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; by this &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt;.">Вызывается связанным объектом <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> для резервирования объекта <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, ранее предложенного этим объектом <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</summary>
      <param name="messageHeader" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; of the message being reserved.">Объект <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> резервируемого сообщения.</param>
      <param name="target" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt; reserving the message.">
        <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, сохраняющий сообщение.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The &lt;paramref name=&quot;messageHeader&quot; /&gt; is not valid.">Недопустимое значение <paramref name="messageHeader" />.</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="The &lt;paramref name=&quot;target&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">Значение параметра <paramref name="target" /> — <see langword="null" />.</exception>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the message was successfully reserved; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если сообщение было успешно зарезервировано; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.WriteOnceBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock{T}#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)">
      <summary vsli:raw="Offers a message to the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ITargetBlock`1&quot; /&gt;, giving the target the opportunity to consume or postpone the message.">Предлагает сообщение блоку <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, предоставляя целевому объекту возможность использовать или отложить его.</summary>
      <param name="messageHeader" vsli:raw="A &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.DataflowMessageHeader&quot; /&gt; instance that represents the header of the message being offered.">Экземпляр <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />, представляющий заголовок предлагаемого сообщения.</param>
      <param name="messageValue" vsli:raw="The value of the message being offered.">Значение предлагаемого свойства.</param>
      <param name="source" vsli:raw="The &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.ISourceBlock`1&quot; /&gt; offering the message. This may be &lt;see langword=&quot;null&quot; /&gt;.">
        <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />, предлагающий сообщение. Это может быть значение <see langword="null" />.</param>
      <param name="consumeToAccept" vsli:raw="Set to &lt;see langword=&quot;true&quot; /&gt; to instruct the target to call &lt;see cref=&quot;M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)&quot; /&gt; synchronously during the call to &lt;see cref=&quot;M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)&quot; /&gt;, prior to returning &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted&quot; /&gt;, in order to consume the message.">Значение <see langword="true" /> для синхронного вызова целевым объектом метода <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /> во время вызова метода <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" /> до возврата <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" />, чтобы использовать сообщение.</param>
      <exception cref="T:System.ArgumentException" vsli:raw="The  &lt;paramref name=&quot;messageHeader&quot; /&gt; is not valid.  &#xA;  &#xA; -or- &lt;paramref name=&quot;consumeToAccept&quot; /&gt; may only be true if provided with a non-null &lt;paramref name=&quot;source&quot; /&gt;.">
        <paramref name="messageHeader" /> — недопустимое значение.  
  
-или- параметр <paramref name="consumeToAccept" /> может иметь значение true, только если для него предоставлен параметр <paramref name="source" /> со значением, отличным от значения NULL.</exception>
      <returns vsli:raw="The status of the offered message. If the message was accepted by the target, &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted&quot; /&gt; is returned, and the source should no longer use the offered message, because it is now owned by the target. If the message was postponed by the target, &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed&quot; /&gt; is returned as a notification that the target may later attempt to consume or reserve the message; in the meantime, the source still owns the message and may offer it to other blocks.  &#xA;  &#xA; If the target would have otherwise postponed message, but &lt;paramref name=&quot;source&quot; /&gt; was &lt;see langword=&quot;null&quot; /&gt;, &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined&quot; /&gt; is instead returned.  &#xA;  &#xA; If the target tried to accept the message but missed it due to the source delivering the message to another target or simply discarding it, &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable&quot; /&gt; is returned.  &#xA;  &#xA; If the target chose not to accept the message, &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined&quot; /&gt; is returned. If the target chose not to accept the message and will never accept another message from this source, &lt;see cref=&quot;F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently&quot; /&gt; is returned.">Состояние предложенного сообщения. Если сообщение было принято целевым объектом, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> и источник больше не должен использовать предложенное сообщение, поскольку оно теперь принадлежит целевому объекту. Если сообщение было отложено целевым объектом, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" /> в качестве уведомления о том, что целевой объект может позже попытаться использовать или зарезервировать сообщение; при этом источник будет по-прежнему владеть сообщением и может предлагать его другим блокам.  
  
Если целевой объект в противном случае отложил бы сообщение, но параметр <paramref name="source" /> имел значение <see langword="null" />, вместо этого возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" />.  
  
Если целевой объект попытался принять сообщение, но не получил его из-за доставки сообщения источником другому целевому объекту или просто отбрасывания сообщения источником, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" />.  
  
Если целевой объект принял решение не принимать сообщение, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" />. Если целевой объект принял решение не принимать сообщение и никогда не будет принимать другие сообщения от этого источника, возвращается <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.WriteOnceBlock`1.ToString">
      <summary vsli:raw="Returns a string that represents the formatted name of this  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IDataflowBlock&quot; /&gt; instance.">Возвращает строку, представляющую отформатированное имя данного экземпляра <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />.</summary>
      <returns vsli:raw="A string that represents the formatted name of this  &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IDataflowBlock&quot; /&gt; instance.">Строка, представляющая отформатированное имя данного экземпляра <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" />.</returns>
    </member>
    <member name="M:System.Threading.Tasks.Dataflow.WriteOnceBlock`1.TryReceive(System.Predicate{`0},`0@)">
      <summary vsli:raw="Attempts to synchronously receive an available output item from the &lt;see cref=&quot;T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1&quot; /&gt;.">Пытается синхронно получить доступный выходной элемент от интерфейса <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</summary>
      <param name="filter" vsli:raw="The predicate value must successfully pass in order for it to be received.  &lt;paramref name=&quot;filter&quot; /&gt; may be &lt;see langword=&quot;null&quot; /&gt;, in which case all items will pass.">Значение предиката должно быть успешно передано, чтобы оно было получено.  Параметр <paramref name="filter" /> может иметь значение <see langword="null" />; в этом случае будут переданы все элементы.</param>
      <param name="item" vsli:raw="The item received from the source.">Элемент, полученный от источника.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if an item could be received; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Значение <see langword="true" />, если получить элемент не удалось; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Threading.Tasks.Dataflow.WriteOnceBlock`1.Completion">
      <summary vsli:raw="Gets a &lt;see cref=&quot;T:System.Threading.Tasks.Task&quot; /&gt; that represents the asynchronous operation and completion of the dataflow block.">Получает объект <see cref="T:System.Threading.Tasks.Task" />, представляющий асинхронную операцию и завершение блока потока данных.</summary>
      <returns vsli:raw="The task.">Задача.</returns>
    </member>
  </members>
</doc>