<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Formats.Asn1</name>
  </assembly>
  <members>
    <member name="T:System.Formats.Asn1.Asn1Tag">
      <summary>Этот тип представляет тег ASN.1, как описано в рекомендации ITU-T X. 680.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Boolean">
      <summary>Представляет тег универсального класса для логического значения.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.ConstructedBitString">
      <summary>Представляет тег универсального класса для значения в формате битовой строки при кодировании с использованием конструктора.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.ConstructedOctetString">
      <summary>Представляет тег универсального класса для значения в формате строки октетов при кодировании с использованием конструктора.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Enumerated">
      <summary>Представляет тег универсального класса для перечислимого значения.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.GeneralizedTime">
      <summary>Представляет тег универсального класса для значения GeneralizedTime.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Integer">
      <summary>Представляет тег универсального класса для целочисленного значения.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Null">
      <summary>Представляет тег универсального класса для значения <see langword="null" />.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.ObjectIdentifier">
      <summary>Представляет тег универсального класса для значения идентификатора объекта.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.PrimitiveBitString">
      <summary>Представляет тег универсального класса для значения в формате битовой строки при примитивном кодировании.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.PrimitiveOctetString">
      <summary>Представляет тег универсального класса для значения в формате строки октетов при примитивном кодировании.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Sequence">
      <summary>Представляет тег универсального класса для значения Sequence при кодировании с использованием конструктора.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.SetOf">
      <summary>Представляет тег универсального класса для значения SetOf при кодировании с использованием конструктора.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.UtcTime">
      <summary>Представляет тег универсального класса для значения UtcTime.</summary>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.#ctor(System.Formats.Asn1.TagClass,System.Int32,System.Boolean)">
      <summary>Создание <see cref="T:System.Formats.Asn1.Asn1Tag" /> для указанного значения в заданном классе тегов.</summary>
      <param name="tagClass">Класс тегов для этого тега.</param>
      <param name="tagValue">Числовое значение для этого тега.</param>
      <param name="isConstructed">Значение <see langword="true" /> для сконструированного тега и значение <see langword="false" /> для примитивного тега.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="tagClass" /> не является известным значением.
—или— <paramref name="tagValue" /> является отрицательным.</exception>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.#ctor(System.Formats.Asn1.UniversalTagNumber,System.Boolean)">
      <summary>Создание <see cref="T:System.Formats.Asn1.Asn1Tag" /> для тега из универсального класса.</summary>
      <param name="universalTagNumber">Одно из значений перечисления, которое задает семантический тип для данного тега.</param>
      <param name="isConstructed">Значение <see langword="true" /> для сконструированного тега и значение <see langword="false" /> для примитивного тега.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="universalTagNumber" /> не является известным значением.</exception>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.AsConstructed">
      <summary>Создает тег с одинаковыми значениями <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> и <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />, у которого <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> имеет значение <see langword="true" />.</summary>
      <returns>Тег с одинаковыми значениями <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> и <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />, у которого <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> имеет значение <see langword="true" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.AsPrimitive">
      <summary>Создает тег с одинаковыми значениями <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> и <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />, у которого <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> имеет значение <see langword="false" />.</summary>
      <returns>Тег с одинаковыми значениями <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> и <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />, у которого <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> имеет значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize">
      <summary>Сообщает число байтов, необходимых для кодирования этого тега с использованием BER.</summary>
      <returns>Число байтов, необходимых для кодирования этого тега с использованием BER.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Decode(System.ReadOnlySpan{System.Byte},System.Int32@)">
      <summary>Считывает тег, закодированный с использованием BER и начинающийся с <paramref name="source" />.</summary>
      <param name="source">Последовательность байтов только для чтения, начало которой является тегом, закодированным с использованием BER.</param>
      <param name="bytesConsumed">При возврате из этого метода содержит число байтов, которые учитываются в закодированном теге. Этот параметр обрабатывается как неинициализированный.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">Предоставленные данные не декодируются в тег.</exception>
      <returns>Декодированный тег.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Encode(System.Span{System.Byte})">
      <summary>Записывает закодированную с использованием BER форму этого тега в <paramref name="destination" />.</summary>
      <param name="destination">Начало места, в которое должен быть записан кодированный тег.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destination" />.<see cref="P:System.Span`1.Length" /> &lt; <see cref="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize" />.</exception>
      <returns>Число байтов, записанных в <paramref name="destination" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Equals(System.Formats.Asn1.Asn1Tag)">
      <summary>Проверяет, совпадает ли кодирование у <paramref name="other" /> и этого тега.</summary>
      <param name="other">Тег для проверки на равенство.</param>
      <returns>Возвращает значение <see langword="true" />, если <paramref name="other" /> имеет одинаковые значения для <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" />, <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> и <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" />; в противном случае возвращает значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Equals(System.Object)">
      <summary>Проверяет, является ли <paramref name="obj" /> элементом <see cref="T:System.Formats.Asn1.Asn1Tag" /> с таким же кодированием, как у этого тега.</summary>
      <param name="obj">Объект для проверки на равенство значений</param>
      <returns>Возвращает значение <see langword="false" />, если значение <paramref name="obj" /> не равно <see cref="T:System.Formats.Asn1.Asn1Tag" />; в противном случае возвращает значение <see cref="M:System.Formats.Asn1.Asn1Tag.Equals(System.Formats.Asn1.Asn1Tag)" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.GetHashCode">
      <summary>Возвращает хэш-код данного экземпляра.</summary>
      <returns>Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.HasSameClassAndValue(System.Formats.Asn1.Asn1Tag)">
      <summary>Проверяет, имеет ли <paramref name="other" /> те же значения <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> и <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />, что и этот тег, и не сравнивает <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" />.</summary>
      <param name="other">Тег для проверки на равенство концепций.</param>
      <returns>Возвращает значение <see langword="true" />, если <paramref name="other" /> имеет такие же <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> и <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />, что и данный тег; в противном случае возвращает <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.op_Equality(System.Formats.Asn1.Asn1Tag,System.Formats.Asn1.Asn1Tag)">
      <summary>Проверяет, применяется ли для двух значений <see cref="T:System.Formats.Asn1.Asn1Tag" /> одинаковое кодирование с использованием BER.</summary>
      <param name="left">Первое сравниваемое значение.</param>
      <param name="right">Второе сравниваемое значение.</param>
      <returns>Возвращает значение <see langword="true" />, если для <paramref name="left" /> и <paramref name="right" /> применяется одинаковое кодирование с использованием BER; в противном случае возвращает значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.op_Inequality(System.Formats.Asn1.Asn1Tag,System.Formats.Asn1.Asn1Tag)">
      <summary>Проверяет, применяется ли для двух значений <see cref="T:System.Formats.Asn1.Asn1Tag" /> разное кодирование с использованием BER.</summary>
      <param name="left">Первое сравниваемое значение.</param>
      <param name="right">Второе сравниваемое значение.</param>
      <returns>Возвращает значение <see langword="true" />, если для <paramref name="left" /> и <paramref name="right" /> применяется разное кодирование с использованием BER; в противном случае возвращает значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.ToString">
      <summary>Предоставляет текстовое представление этого тега, подходящее для отладки.</summary>
      <returns>Текстовое представление этого тега, подходящее для отладки.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.TryDecode(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.Asn1Tag@,System.Int32@)">
      <summary>Пытается считать тег, закодированный с использованием BER и начинающийся с <paramref name="source" />.</summary>
      <param name="source">Последовательность байтов только для чтения, начало которой является тегом, закодированным с использованием BER.</param>
      <param name="tag">Декодированный тег.</param>
      <param name="bytesConsumed">При возврате из этого метода содержит число байтов, которые учитываются в закодированном теге, или 0 в случае сбоя. Этот параметр обрабатывается как неинициализированный.</param>
      <returns>Возвращает значение <see langword="true" />, если тег декодирован правильно; в противном случае возвращает значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary>Пытается записать закодированную с использованием BER форму этого тега в <paramref name="destination" />.</summary>
      <param name="destination">Начало места, в которое должен быть записан кодированный тег.</param>
      <param name="bytesWritten">Получает значение от <see cref="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize" /> при успешном выполнении или 0 при сбое.</param>
      <returns>Возвращает значение <see langword="false" />, если <paramref name="destination" />.<see cref="P:System.Span`1.Length" /> &lt; <see cref="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize" />(); в противном случае возвращает значение <see langword="true" />.</returns>
    </member>
    <member name="P:System.Formats.Asn1.Asn1Tag.IsConstructed">
      <summary>Указывает, какое кодирование представляет тег: с использованием конструктора (<see langword="true" />) или примитивное (<see langword="false" />).</summary>
    </member>
    <member name="P:System.Formats.Asn1.Asn1Tag.TagClass">
      <summary>Класс тегов, к которому принадлежит этот тег.</summary>
    </member>
    <member name="P:System.Formats.Asn1.Asn1Tag.TagValue">
      <summary>Числовое значение для этого тега.</summary>
    </member>
    <member name="T:System.Formats.Asn1.AsnContentException">
      <summary>Исключение, которое появляется, если не удается декодировать закодированное значение ASN.1.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Formats.Asn1.AsnContentException" /> с использованием сообщения по умолчанию.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Formats.Asn1.AsnContentException" /> с сериализованными данными.</summary>
      <param name="info">Объект, содержащий сериализованные данные объекта.</param>
      <param name="context">Контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Formats.Asn1.AsnContentException" /> с использованием указанного сообщения.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Formats.Asn1.AsnContentException" /> с использованием указанного сообщения и исключения, которое стало причиной этого исключения.</summary>
      <param name="message">Сообщение об ошибке, указывающее причину создания исключения.</param>
      <param name="inner">Исключение, которое является причиной текущего исключения.</param>
    </member>
    <member name="T:System.Formats.Asn1.AsnDecoder">
      <summary>Предоставляет методы без отслеживания состояния для декодирования данных ASN.1, кодированных с помощью BER, CER или DER.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadBitString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Считывает значение в формате битовой строки из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования, возвращая содержимое в новом массиве.</summary>
      <param name="source">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="unusedBitCount">При успешном выполнении получает количество битов в последнем байте, которые были обозначены модулем записи как "неиспользованные".
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="bytesConsumed">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="expectedTag">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 3).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> не определен.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns>Массив, содержащий значение в формате битовой строки.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadBoolean(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Считывает логическое значение из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования.</summary>
      <param name="source">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="bytesConsumed">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="expectedTag">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 1).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> не определен.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns>Декодированное значение.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadCharacterString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.UniversalTagNumber,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Считывает следующее значение в виде символьной строки с указанным тегом и типом кодирования, возвращая декодированную строку.</summary>
      <param name="source">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="encodingType">Одно из значений перечисления, которое представляет тип значения для обработки.</param>
      <param name="bytesConsumed">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="expectedTag">Тег для проверки перед чтением или <see langword="null" /> для универсального тега, соответствующего запрошенному типу кодирования.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> не определен.
—или— <paramref name="encodingType" /> не является известным типом символьной строки.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.
—или— строка не была успешно декодирована.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не равно <paramref name="encodingType" />.</exception>
      <returns>Декодированное значение.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEncodedValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@)">
      <summary>Помещает диапазон содержимого для закодированного значения в начало буфера <paramref name="source" />, используя указанные правила кодирования.</summary>
      <param name="source">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="contentOffset">При возврате из этого метода — смещение полезных данных содержимого относительно начала <paramref name="source" />.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="contentLength">При возврате из этого метода — число байтов в полезных данных содержимого (которое может быть равно 0).
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="bytesConsumed">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> не определен.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">
        <paramref name="source" /> не представляет значение, закодированное в соответствии с указанными правилами кодирования.</exception>
      <returns>Тег, определяющий содержимое.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEnumeratedBytes(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Считывает перечислимое значение из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования, возвращая содержимое в виде среза буфера.</summary>
      <param name="source">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="bytesConsumed">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="expectedTag">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 10).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> не определен.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns>Срез буфера, содержащий байты перечислимого значения в форме со знаком и обратным порядком байтов.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEnumeratedValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Type,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Считывает перечислимое значение из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования, преобразуя его в неперечислимое [<see cref="T:System.FlagsAttribute" />], указанное в <paramref name="enumType" />.</summary>
      <param name="source">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="enumType">Объект Type представляющий тип назначения.</param>
      <param name="bytesConsumed">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="expectedTag">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 10).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.
—или— закодированное значение слишком велико для значения <paramref name="enumType" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> не является типом перечисления.
—или— тип <paramref name="enumType" /> объявлен с <see cref="T:System.FlagsAttribute" />.
—или— <paramref name="enumType" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="enumType" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> имеет значение <see langword="null" />.</exception>
      <returns>Перечислимое значение, преобразованное в <paramref name="enumType" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEnumeratedValue``1(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Считывает перечислимое значение из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования, преобразуя его в неперечислимое [<see cref="T:System.FlagsAttribute" />], указанное в <typeparamref name="TEnum" />.</summary>
      <param name="source">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="bytesConsumed">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="expectedTag">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 10).</param>
      <typeparam name="TEnum">Тип перечисления назначения</typeparam>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> не определен.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.
—или— закодированное значение слишком велико для значения <typeparamref name="TEnum" />.</exception>
      <exception cref="T:System.ArgumentException">
        <typeparamref name="TEnum" /> не является типом перечисления.
—или— тип <typeparamref name="TEnum" /> объявлен с <see cref="T:System.FlagsAttribute" />.
—или— <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns>Перечислимое значение, преобразованное в <typeparamref name="TEnum" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadGeneralizedTime(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Считывает значение GeneralizedTime из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования.</summary>
      <param name="source">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="bytesConsumed">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="expectedTag">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 24).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> не определен.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns>Декодированное значение.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadInteger(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Считывает целочисленное значение из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования.</summary>
      <param name="source">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="bytesConsumed">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="expectedTag">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 2).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> не определен.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns>Декодированное числовое значение.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadIntegerBytes(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Считывает целочисленное значение из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования, возвращая содержимое в виде среза буфера.</summary>
      <param name="source">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="bytesConsumed">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="expectedTag">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 2).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> не определен.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns>Срез буфера, содержащий байты целочисленного значения в форме со знаком и обратным порядком байтов.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNamedBitList(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Считывает значение NamedBitList из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования.</summary>
      <param name="source">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="bytesConsumed">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="expectedTag">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 3).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> не определен.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns>Биты из закодированного значения.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNamedBitListValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Type,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Считывает значение NamedBitList из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования, преобразуя его в перечислимое [<see cref="T:System.FlagsAttribute" />], указанное в <paramref name="flagsEnumType" />.</summary>
      <param name="source">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="flagsEnumType">Объект Type представляющий тип назначения.</param>
      <param name="bytesConsumed">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="expectedTag">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 3).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> не определен.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.
—или— закодированное значение слишком велико для значения <paramref name="flagsEnumType" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="flagsEnumType" /> не является типом перечисления.
—или— тип <paramref name="flagsEnumType" /> не объявлен с использованием <see cref="T:System.FlagsAttribute" /> —или— <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="flagsEnumType" /> равно <see langword="null" /></exception>
      <returns>Значение NamedBitList, преобразованное в <paramref name="flagsEnumType" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNamedBitListValue``1(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Считывает значение NamedBitList из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования, преобразуя его в перечислимое [<see cref="T:System.FlagsAttribute" />], указанное в <typeparamref name="TFlagsEnum" />.</summary>
      <param name="source">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="bytesConsumed">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="expectedTag">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 3).</param>
      <typeparam name="TFlagsEnum">Тип перечисления назначения</typeparam>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> не определен.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.
—или— закодированное значение слишком велико для значения <typeparamref name="TFlagsEnum" />.</exception>
      <exception cref="T:System.ArgumentException">
        <typeparamref name="TFlagsEnum" /> не является типом перечисления.
—или— тип <typeparamref name="TFlagsEnum" /> не объявлен с использованием <see cref="T:System.FlagsAttribute" /> —или— <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns>Значение NamedBitList, преобразованное в <typeparamref name="TFlagsEnum" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNull(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Считывает значение <see langword="null" /> из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования.</summary>
      <param name="source">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="bytesConsumed">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="expectedTag">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 5).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> не определен.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadObjectIdentifier(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Считывает значение в формате идентификатора объекта из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования.</summary>
      <param name="source">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="bytesConsumed">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="expectedTag">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 6).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> не определен.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns>Декодированный идентификатор объекта в нотации с точкой в качестве разделителя чисел.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadOctetString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Считывает значение в формате строки октетов из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования, возвращая содержимое в новом массиве.</summary>
      <param name="source">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="bytesConsumed">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="expectedTag">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 4).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> не определен.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns>Массив, содержащий значение в формате строки октетов.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadSequence(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Считывает значение Sequence или Sequence-Of из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования.</summary>
      <param name="source">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="contentOffset">При возврате из этого метода — смещение полезных данных содержимого относительно начала <paramref name="source" />.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="contentLength">При возврате из этого метода — число байтов в полезных данных содержимого (которое может быть равно 0).
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="bytesConsumed">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="expectedTag">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 16).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> не определен.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadSetOf(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@,System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Считывает значение Set-Of из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования.</summary>
      <param name="source">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="contentOffset">При возврате из этого метода — смещение полезных данных содержимого относительно начала <paramref name="source" />.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="contentLength">При возврате из этого метода — число байтов в полезных данных содержимого (которое может быть равно 0).
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="bytesConsumed">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="skipSortOrderValidation">Значение <see langword="true" /> чтобы всегда принимать данные в том порядке, в котором они представлены; значение <see langword="false" />, чтобы обеспечить правильную сортировку данных, если она требуется согласно правилам кодирования (CER и DER).</param>
      <param name="expectedTag">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 17).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> не определен.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadUtcTime(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Считывает значение UtcTime из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования.</summary>
      <param name="source">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="bytesConsumed">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="twoDigitYearMax">Самое большое значение года, которое будет представлено этим значением.
Значение по умолчанию (2049) представляет диапазон 1950–2049 для сертификатов X. 509.</param>
      <param name="expectedTag">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 24).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> не определен.
—или— или <paramref name="twoDigitYearMax" /> не принадлежит диапазону [99, 9999].</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns>Декодированное значение.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadBitString(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Пытается скопировать значение в формате битовой строки из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования в <paramref name="destination" />.</summary>
      <param name="source">Буфер, содержащий закодированные данные.</param>
      <param name="destination">Буфер, в который должна выполняться запись.</param>
      <param name="ruleSet">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="unusedBitCount">При успешном выполнении получает количество битов в последнем байте, которые были обозначены модулем записи как "неиспользованные".
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="bytesConsumed">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="bytesWritten">Этот метод возвращает общее количество байтов, записанных в <paramref name="destination" />.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="expectedTag">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 3).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> не определен.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.
—или— <paramref name="destination" /> перекрывает <paramref name="source" />.</exception>
      <returns>Возвращает значение <see langword="true" />, если размер <paramref name="destination" /> достаточен для получения значения битовой строки; в противном случае возвращает значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadCharacterString(System.ReadOnlySpan{System.Byte},System.Span{System.Char},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.UniversalTagNumber,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Считывает значение в формате символьной строки из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования и копирует декодированную строку в предоставленный буфер назначения.</summary>
      <param name="source">Буфер, содержащий закодированные данные.</param>
      <param name="destination">Буфер, в который должна выполняться запись.</param>
      <param name="ruleSet">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="encodingType">Одно из значений перечисления, которое представляет тип значения для обработки.</param>
      <param name="bytesConsumed">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="charsWritten">При возврате из этого метода — число символов, записанных в <paramref name="destination" />.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="expectedTag">Тег для проверки перед чтением или <see langword="null" /> для универсального тега, соответствующего запрошенному типу кодирования.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> не определен.
—или— <paramref name="encodingType" /> не является известным типом символьной строки.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.
—или— строка не была успешно декодирована.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не равно <paramref name="encodingType" />.</exception>
      <returns>Возвращает значение <see langword="true" /> и перемещает позицию чтения модуля чтения, если длина <paramref name="destination" /> была достаточной для получения значения, в противном случае возвращает значение <see langword="false" />, а позиция чтения модуля чтения не перемещается.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadCharacterStringBytes(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.Asn1Tag,System.Int32@,System.Int32@)">
      <summary>Пытается считать значение в формате символьной строки из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования, копируя необработанные байты в указанный буфер назначения.</summary>
      <param name="source">Буфер, содержащий закодированные данные.</param>
      <param name="destination">Буфер, в который должна выполняться запись.</param>
      <param name="ruleSet">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="expectedTag">Тег для проверки перед чтением.</param>
      <param name="bytesConsumed">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="bytesWritten">При успешном выполнении получает число байтов, записанных в <paramref name="destination" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> не определен.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является типом тега символьной строки.
—или— <paramref name="destination" /> перекрывает <paramref name="source" />.</exception>
      <returns>Возвращает значение <see langword="true" />, если размер <paramref name="destination" /> достаточен для получения значения необработанной символьной строки; в противном случае возвращает значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadEncodedValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.Asn1Tag@,System.Int32@,System.Int32@,System.Int32@)">
      <summary>Пытается поместить диапазон содержимого для закодированного значения в начало буфера <paramref name="source" />, используя указанные правила кодирования.</summary>
      <param name="source">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="tag">При возврате из этого метода — тег, определяющий содержимое.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="contentOffset">При возврате из этого метода — смещение полезных данных содержимого относительно начала <paramref name="source" />.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="contentLength">При возврате из этого метода — число байтов в полезных данных содержимого (которое может быть равно 0).
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="bytesConsumed">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> не определен.</exception>
      <returns>Возвращает значение <see langword="true" />, если <paramref name="source" /> представляет допустимое структурное кодирование для указанных правил кодирования; в противном случае возвращает значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadInt32(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Пытается считать целочисленное значение из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования в качестве 32-разрядного значения со знаком.</summary>
      <param name="source">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="value">При успешном выполнении получает интерпретируемое числовое значение.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="bytesConsumed">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="expectedTag">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 2).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> не определен.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns>Возвращает значение <see langword="true" />, если целое число представляет значение в диапазоне от <see cref="F:System.Int32.MinValue" /> до <see cref="F:System.Int32.MaxValue" /> включительно; в противном случае возвращает значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadInt64(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int64@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Пытается считать целочисленное значение из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования в качестве 64-разрядного значения со знаком.</summary>
      <param name="source">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="value">При успешном выполнении получает интерпретируемое числовое значение.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="bytesConsumed">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="expectedTag">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 2).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> не определен.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns>Возвращает значение <see langword="true" />, если целое число представляет значение в диапазоне от <see cref="F:System.Int64.MinValue" /> до <see cref="F:System.Int64.MaxValue" /> включительно; в противном случае возвращает значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadOctetString(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Пытается получить значение в формате строки октетов из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования, копируя значение в указанный буфер назначения.</summary>
      <param name="source">Буфер, содержащий закодированные данные.</param>
      <param name="destination">Буфер, в который должна выполняться запись.</param>
      <param name="ruleSet">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="bytesConsumed">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="bytesWritten">Этот метод возвращает общее количество байтов, записанных в <paramref name="destination" />.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="expectedTag">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 4).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> не определен.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.
—или— <paramref name="destination" /> перекрывает <paramref name="source" />.</exception>
      <returns>Возвращает значение <see langword="true" />, если размер <paramref name="destination" /> достаточен для получения значения строки октетов; в противном случае возвращает значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadPrimitiveBitString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.ReadOnlySpan{System.Byte}@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Пытается получить значение в формате битовой строки из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования, если значение представлено в одиночном (примитивном) кодировании.</summary>
      <param name="source">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="unusedBitCount">При успешном выполнении получает количество битов в последнем байте, которые были обозначены модулем записи как "неиспользованные".
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="value">При успешном выполнении получает срез входного буфера, соответствующий значению битовой строки.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="bytesConsumed">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="expectedTag">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 3).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> не определен.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns>Возвращает значение <see langword="true" />, если значение в формате битовой строки имеет примитивное кодирование, а для всех битов, полученных в качестве неиспользуемых, задано значение 0; в противном случае возвращает значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadPrimitiveCharacterStringBytes(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.Asn1Tag,System.ReadOnlySpan{System.Byte}@,System.Int32@)">
      <summary>Пытается получить значение в формате необработанной символьной строки из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования, если значение представлено в одиночном (примитивном) кодировании.</summary>
      <param name="source">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="expectedTag">Тег для проверки перед чтением.</param>
      <param name="value">При успешном выполнении получает срез входного буфера, соответствующий значению битовой строки.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="bytesConsumed">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> не определен.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является типом тега символьной строки.</exception>
      <returns>Возвращает значение <see langword="true" />, если значение в формате символьной строки имеет примитивное кодирование; в противном случае возвращает значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadPrimitiveOctetString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.ReadOnlySpan{System.Byte}@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Пытается получить значение в формате строки октетов из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования, если значение представлено в одиночном (примитивном) кодировании.</summary>
      <param name="source">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="value">При успешном выполнении получает срез входного буфера, соответствующий значению строки октетов.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="bytesConsumed">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="expectedTag">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 4).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> не определен.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns>Возвращает значение <see langword="true" />, если строка октетов имеет примитивное кодирование; в противном случае возвращает значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadUInt32(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.UInt32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Пытается считать целочисленное значение из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования в качестве 32-разрядного значения без знака.</summary>
      <param name="source">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="value">При успешном выполнении получает интерпретируемое числовое значение.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="bytesConsumed">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="expectedTag">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 2).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> не определен.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns>Возвращает значение <see langword="true" />, если целое число представляет значение в диапазоне от <see cref="F:System.UInt32.MinValue" /> до <see cref="F:System.UInt32.MaxValue" /> включительно; в противном случае возвращает значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadUInt64(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.UInt64@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Пытается считать целочисленное значение из <paramref name="source" /> с указанным тегом в соответствии с заданными правилами кодирования в качестве 64-разрядного значения без знака.</summary>
      <param name="source">Буфер, содержащий закодированные данные.</param>
      <param name="ruleSet">Ограничения кодирования, используемые при интерпретации данных.</param>
      <param name="value">При успешном выполнении получает интерпретируемое числовое значение.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="bytesConsumed">При возврате из этого метода — общее количество байтов для закодированного значения.
Этот параметр обрабатывается как неинициализированный.</param>
      <param name="expectedTag">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 2).</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> не определен.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns>Возвращает значение <see langword="true" />, если целое число представляет значение в диапазоне от <see cref="F:System.UInt64.MinValue" /> до <see cref="F:System.UInt64.MaxValue" /> включительно; в противном случае возвращает значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnEncodingRules">
      <summary>Набор правил кодирования для <see cref="T:System.Formats.Asn1.AsnReader" /> или <see cref="T:System.Formats.Asn1.AsnWriter" />.</summary>
    </member>
    <member name="F:System.Formats.Asn1.AsnEncodingRules.BER">
      <summary>ITU-T X.690 Basic Encoding Rules (Базовые правила кодирования)</summary>
    </member>
    <member name="F:System.Formats.Asn1.AsnEncodingRules.CER">
      <summary>ITU-T X.690 Canonical Encoding Rules (Канонические правила кодирования)</summary>
    </member>
    <member name="F:System.Formats.Asn1.AsnEncodingRules.DER">
      <summary>ITU-T X.690 Distinguished Encoding Rules (Особые правила кодирования)</summary>
    </member>
    <member name="T:System.Formats.Asn1.AsnReader">
      <summary>модуль чтения с отслеживанием состояния и последовательным доступом для данных ASN.1, кодированных с помощью BER, CER или DER.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.#ctor(System.ReadOnlyMemory{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.AsnReaderOptions)">
      <summary>Создание <see cref="T:System.Formats.Asn1.AsnReader" /> с помощью <paramref name="data" /> с заданным набором правил.</summary>
      <param name="data">Данные для чтения.</param>
      <param name="ruleSet">Ограничения кодирования для модуля чтения.</param>
      <param name="options">Дополнительные параметры для модуля чтения.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> не определен.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.PeekContentBytes">
      <summary>Получение представления <see cref="T:System.ReadOnlyMemory`1" /> октетов содержимого (байтов) следующего закодированного значения без перемещения позиции чтения модуля чтения.</summary>
      <exception cref="T:System.Formats.Asn1.AsnContentException">модуль чтения помещается в точку, в которой тег или длина являются недопустимыми с точки зрения текущих правил кодирования.</exception>
      <returns>Байты содержимого октета следующего закодированного значения.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.PeekEncodedValue">
      <summary>Получение представления <see cref="T:System.ReadOnlyMemory`1" /> следующего закодированного значения без перемещения позиции чтения модуля чтения. Для кодирования неопределенной длины оно включает маркер конца содержимого.</summary>
      <exception cref="T:System.Formats.Asn1.AsnContentException">модуль чтения помещается в точку, в которой тег или длина являются недопустимыми с точки зрения текущих правил кодирования.</exception>
      <returns>Байты следующего закодированного значения.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.PeekTag">
      <summary>Чтение закодированного тега в следующей позиции данных без перемещения позиции чтения модуля чтения.</summary>
      <exception cref="T:System.Formats.Asn1.AsnContentException">не удалось декодировать тег в текущей позиции модуля чтения.</exception>
      <returns>Декодированное значение тега.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadBitString(System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Считывает следующее значение в виде BIT STRING с указанным тегом, возвращая значение в байтовом массиве.</summary>
      <param name="unusedBitCount">При успешном выполнении получает количество битов в последнем байте, которые были обозначены модулем записи как "неиспользованные".</param>
      <param name="expectedTag">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 1).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns>Копия значения в новом выделенном массиве с точно заданным размером.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadBoolean(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Считывает следующее значение в виде логического значения с указанным тегом.</summary>
      <param name="expectedTag">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 1).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns>Декодированное значение.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadCharacterString(System.Formats.Asn1.UniversalTagNumber,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Считывает следующее значение в виде символьной строки с указанным тегом и типом кодирования, возвращая декодированное значение в виде строки.</summary>
      <param name="encodingType">Одно из значений перечисления, представляющее тип значения для обработки.</param>
      <param name="expectedTag">Тег для проверки перед чтением или <see langword="null" /> для универсального тега, соответствующего запрошенному типу кодирования.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="encodingType" /> не является известным типом символьной строки.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.
—или— строка не была успешно декодирована.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не равно <paramref name="encodingType" />.</exception>
      <returns>Декодированное значение.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEncodedValue">
      <summary>Получение представления <see cref="T:System.ReadOnlyMemory`1" /> следующего закодированного значения с перемещением позиции чтения модуля чтения в позицию после него. Для кодирования неопределенной длины оно включает маркер конца содержимого.</summary>
      <returns>Представление <see cref="T:System.ReadOnlyMemory`1" /> следующего закодированного значения.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEnumeratedBytes(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Считывает следующее значение в виде перечислимого с указанным тегом, возвращая содержимое в виде <see cref="T:System.ReadOnlyMemory`1" /> для исходных данных.</summary>
      <param name="expectedTag">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 10).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns>Байты перечислимого значения в форме со знаком и обратным порядком байтов.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEnumeratedValue(System.Type,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Считывает следующее значение в виде перечислимого с указанным тегом и преобразует его в неперечислимое [<see cref="T:System.FlagsAttribute" />], заданное с помощью <paramref name="enumType" />.</summary>
      <param name="enumType">Объект Type представляющий тип назначения.</param>
      <param name="expectedTag">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 10).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.
—или— закодированное значение слишком велико для значения <paramref name="enumType" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> не является типом перечисления.
—или— тип <paramref name="enumType" /> объявлен с <see cref="T:System.FlagsAttribute" />.
—или— <paramref name="enumType" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="enumType" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> имеет значение <see langword="null" />.</exception>
      <returns>Перечислимое значение, преобразованное в <paramref name="enumType" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEnumeratedValue``1(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Считывает следующее значение в виде перечислимого с указанным тегом и преобразует его в неперечислимое [<see cref="T:System.FlagsAttribute" />], заданное с помощью <typeparamref name="TEnum" />.</summary>
      <param name="expectedTag">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 10).</param>
      <typeparam name="TEnum">Тип перечисления назначения</typeparam>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.
—или— закодированное значение слишком велико для значения <typeparamref name="TEnum" />.</exception>
      <exception cref="T:System.ArgumentException">
        <typeparamref name="TEnum" /> не является типом перечисления.
—или— тип <typeparamref name="TEnum" /> объявлен с <see cref="T:System.FlagsAttribute" />.
—или— <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns>Перечислимое значение, преобразованное в <typeparamref name="TEnum" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadGeneralizedTime(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Считывает следующее значение в виде значения GeneralizedTime с указанным тегом.</summary>
      <param name="expectedTag">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 24).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns>Декодированное значение.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadInteger(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Считывает следующее значение в виде целочисленного значения с указанным тегом.</summary>
      <param name="expectedTag">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 2).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns>Декодированное значение.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadIntegerBytes(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Считывает следующее значение в виде целочисленного с указанным тегом, возвращая содержимое в виде <see cref="T:System.ReadOnlyMemory`1" /> для исходных данных.</summary>
      <param name="expectedTag">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 2).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns>Байты целочисленного значения в форме со знаком и обратным порядком байтов.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNamedBitList(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Считывает следующее значение в виде значения NamedBitList с указанным тегом.</summary>
      <param name="expectedTag">Тег для проверки перед чтением.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns>Биты из закодированного значения.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNamedBitListValue(System.Type,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Считывает следующее значение в виде NamedBitList с указанным тегом и преобразует его в перечислимое [<see cref="T:System.FlagsAttribute" />], заданное с помощью <paramref name="flagsEnumType" />.</summary>
      <param name="flagsEnumType">Объект Type представляющий тип назначения.</param>
      <param name="expectedTag">Тег для проверки перед чтением.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.
—или— закодированное значение слишком велико для значения <paramref name="flagsEnumType" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="flagsEnumType" /> не является типом перечисления.
—или— тип <paramref name="flagsEnumType" /> не объявлен с использованием <see cref="T:System.FlagsAttribute" /> —или— <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="flagsEnumType" /> равно <see langword="null" /></exception>
      <returns>Значение NamedBitList, преобразованное в <paramref name="flagsEnumType" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNamedBitListValue``1(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Считывает следующее значение в виде NamedBitList с указанным тегом и преобразует его в перечислимое [<see cref="T:System.FlagsAttribute" />], заданное с помощью <typeparamref name="TFlagsEnum" />.</summary>
      <param name="expectedTag">Тег для проверки перед чтением.</param>
      <typeparam name="TFlagsEnum">Тип перечисления назначения</typeparam>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.
—или— закодированное значение слишком велико для значения <typeparamref name="TFlagsEnum" />.</exception>
      <exception cref="T:System.ArgumentException">
        <typeparamref name="TFlagsEnum" /> не является типом перечисления.
—или— тип <typeparamref name="TFlagsEnum" /> не объявлен с использованием <see cref="T:System.FlagsAttribute" /> —или— <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns>Значение NamedBitList, преобразованное в <typeparamref name="TFlagsEnum" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNull(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Считывает следующее значение в виде значения NULL с указанным тегом.</summary>
      <param name="expectedTag">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 5).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadObjectIdentifier(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Считывает следующее значение в виде значения OBJECT IDENTIFIER с указанным тегом, возвращая значение в виде строки в формате, в котором в качестве разделителя чисел используется точка.</summary>
      <param name="expectedTag">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 6).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns>Значение идентификатора объекта в виде строки в формате, в котором в качестве разделителя чисел используется точка.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Считывает следующее значение в виде OCTET STRING с тегом UNIVERSAL 4, возвращая значение в байтовом массиве.</summary>
      <param name="expectedTag">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 4).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns>Копия значения в новом выделенном массиве с точно заданным размером.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Считывает следующее значение в виде SEQUENCE или SEQUENCE-OF с указанным тегом и возвращает результат в виде нового модуля чтения, помещенного в позицию первого значения в последовательности (или с <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />).</summary>
      <param name="expectedTag">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 16).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns>Новое модуль чтения, помещенное в позицию первого значения в последовательности (или с <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />).</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadSetOf(System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Считывает следующее значение в виде SET-OF с указанным тегом и возвращает результат в виде нового модуля чтения, помещенного в позицию первого значения в наборе (или с <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />).</summary>
      <param name="skipSortOrderValidation">Значение <see langword="true" /> чтобы всегда принимать данные в том порядке, в котором они представлены; значение <see langword="false" />, чтобы обеспечить правильную сортировку данных, если она требуется согласно правилам кодирования (CER и DER).</param>
      <param name="expectedTag">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 17).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns>Новое модуль чтения, помещенное в позицию первого значения в наборе (или с <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />).</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Считывает следующее значение в виде SET-OF с указанным тегом и возвращает результат в виде нового модуля чтения, помещенного в позицию первого значения в наборе (или с <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />), используя значение <see cref="P:System.Formats.Asn1.AsnReaderOptions.SkipSetSortOrderVerification" /> из конструктора (по умолчанию <see langword="false" />).</summary>
      <param name="expectedTag">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 17).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns>Новое модуль чтения, помещенное в позицию первого значения в наборе (или с <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />).</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadUtcTime(System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Считывает следующее значение в виде UTCTime с указанным тегом.</summary>
      <param name="twoDigitYearMax">Самое большое значение года, которое будет представлено этим значением.</param>
      <param name="expectedTag">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 23).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns>Декодированное значение.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadUtcTime(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Считывает следующее значение в виде UTCTime с указанным тегом, используя значение <see cref="P:System.Formats.Asn1.AsnReaderOptions.UtcTimeTwoDigitYearMax" /> из параметров, переданных конструктору (значение по умолчанию — 2049).</summary>
      <param name="expectedTag">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 23).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns>Декодированное значение.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ThrowIfNotEmpty">
      <summary>Создает стандартизованное исключение <see cref="T:System.Formats.Asn1.AsnContentException" />, если в модуле чтения остались данные, и не выполняет никаких функций, если <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> возвращает <see langword="false" />.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadBitString(System.Span{System.Byte},System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Считывает следующее значение в виде BIT STRING с указанным тегом, копируя значение в указанный буфер назначения.</summary>
      <param name="destination">Буфер, в который должна выполняться запись.</param>
      <param name="unusedBitCount">При успешном выполнении получает количество битов в последнем байте, которые были обозначены модулем записи как "неиспользованные".</param>
      <param name="bytesWritten">При успешном выполнении получает число байтов, записанных в <paramref name="destination" />.</param>
      <param name="expectedTag">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 1).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns>Возвращает значение <see langword="true" /> и перемещает позицию чтения модуля чтения, если длина <paramref name="destination" /> была достаточной для получения значения, в противном случае возвращает значение <see langword="false" />, а позиция чтения модуля чтения не перемещается.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadCharacterString(System.Span{System.Char},System.Formats.Asn1.UniversalTagNumber,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Считывает следующее значение в виде символьной строки с указанным тегом и типом кодирования, копируя декодированное значение в указанный буфер назначения.</summary>
      <param name="destination">Буфер, в который должна выполняться запись.</param>
      <param name="encodingType">Одно из значений перечисления, представляющее тип значения для обработки.</param>
      <param name="charsWritten">При успешном выполнении получает число символов, записанных в <paramref name="destination" />.</param>
      <param name="expectedTag">Тег для проверки перед чтением или <see langword="null" /> для универсального тега, соответствующего запрошенному типу кодирования.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="encodingType" /> не является известным типом символьной строки.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.
—или— строка не была успешно декодирована.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не равно <paramref name="encodingType" />.</exception>
      <returns>Возвращает значение <see langword="true" /> и перемещает позицию чтения модуля чтения, если длина <paramref name="destination" /> была достаточной для получения значения, в противном случае возвращает значение <see langword="false" />, а позиция чтения модуля чтения не перемещается.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadCharacterStringBytes(System.Span{System.Byte},System.Formats.Asn1.Asn1Tag,System.Int32@)">
      <summary>Считывает следующее значение в виде символьной строки с указанным тегом, копируя необработанные байты в указанный буфер назначения.</summary>
      <param name="destination">Буфер, в который должна выполняться запись.</param>
      <param name="expectedTag">Тег для проверки перед чтением.</param>
      <param name="bytesWritten">При успешном выполнении получает число байтов, записанных в <paramref name="destination" />.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является типом тега символьной строки.</exception>
      <returns>Возвращает значение <see langword="true" /> и перемещает позицию чтения модуля чтения, если длина <paramref name="destination" /> была достаточной для получения значения, в противном случае возвращает значение <see langword="false" />, а позиция чтения модуля чтения не перемещается.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadInt32(System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Пытается прочитать следующее значение как целочисленное с указанным тегом в формате 32-разрядного значения со знаком.</summary>
      <param name="value">При успешном выполнении получает декодированное значение.</param>
      <param name="expectedTag">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 2).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns>Возвращает значение <see langword="false" /> и не перемещает модуль чтения, если значение не принадлежит диапазону от <see cref="F:System.Int32.MinValue" /> до <see cref="F:System.Int32.MaxValue" /> включительно; в противном случае возвращает <see langword="true" />, а позиция чтения модуля чтения перемещается.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadInt64(System.Int64@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Пытается прочитать следующее значение как целочисленное с указанным тегом в формате 64-разрядного значения со знаком.</summary>
      <param name="value">При успешном выполнении получает декодированное значение.</param>
      <param name="expectedTag">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 2).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns>Возвращает значение <see langword="false" /> и не перемещает модуль чтения, если значение не принадлежит диапазону от <see cref="F:System.Int64.MinValue" /> до <see cref="F:System.Int64.MaxValue" /> включительно; в противном случае возвращает <see langword="true" />, а позиция чтения модуля чтения перемещается.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadOctetString(System.Span{System.Byte},System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Считывает следующее значение в виде OCTET STRING с указанным тегом, копируя значение в указанный буфер назначения.</summary>
      <param name="destination">Буфер, в который должна выполняться запись.</param>
      <param name="bytesWritten">При успешном выполнении получает число байтов, записанных в <paramref name="destination" />.</param>
      <param name="expectedTag">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 4).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns>Возвращает значение <see langword="true" /> и перемещает позицию чтения модуля чтения, если длина <paramref name="destination" /> была достаточной для получения значения, в противном случае возвращает значение <see langword="false" />, а позиция чтения модуля чтения не перемещается.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadPrimitiveBitString(System.Int32@,System.ReadOnlyMemory{System.Byte}@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Считывает следующее значение в виде BIT STRING с указанным тегом, возвращая содержимое в виде <see cref="T:System.ReadOnlyMemory`1" /> для исходных данных.</summary>
      <param name="unusedBitCount">При успешном выполнении получает количество битов в последнем байте, которые были обозначены модулем записи как "неиспользованные".</param>
      <param name="value">При успешном выполнении получает <see cref="T:System.ReadOnlyMemory`1" /> для исходных данных, что соответствует значению BIT STRING.</param>
      <param name="expectedTag">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 1).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns>Возвращает значение <see langword="true" /> и перемещает позицию чтения модуля чтения, если значение BIT STRING имеет примитивное кодирование. Если же оно имеет сконструированное кодирование, возвращает значение <see langword="false" /> и не перемещает позицию чтения модуля чтения.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadPrimitiveCharacterStringBytes(System.Formats.Asn1.Asn1Tag,System.ReadOnlyMemory{System.Byte}@)">
      <summary>Считывает следующее значение в виде символа с указанным тегом, возвращая содержимое в виде необработанного экземпляра <see cref="T:System.ReadOnlyMemory`1" /> для исходных данных.</summary>
      <param name="expectedTag">Тег для проверки перед чтением.</param>
      <param name="contents">При успешном выполнении получает <see cref="T:System.ReadOnlyMemory`1" /> для исходных данных, что соответствует значению символьной строки.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является типом тега символьной строки.</exception>
      <returns>Возвращает значение <see langword="true" /> и перемещает позицию чтения модуля чтения, если значение символьной строки имеет примитивное кодирование. Если же оно имеет сконструированное кодирование, возвращает значение <see langword="false" /> и не перемещает позицию чтения модуля чтения.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadPrimitiveOctetString(System.ReadOnlyMemory{System.Byte}@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Пытается считать следующее значение в виде OCTET STRING с указанным тегом, возвращая содержимое в виде <see cref="T:System.ReadOnlyMemory`1" /> для исходных данных.</summary>
      <param name="contents">При успешном выполнении получает <see cref="T:System.ReadOnlyMemory`1" /> для исходных данных, что соответствует значению OCTET STRING.</param>
      <param name="expectedTag">Тег для проверки перед чтением.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns>Возвращает значение <see langword="true" /> и перемещает позицию чтения модуля чтения, если значение OCTET STRING имеет примитивное кодирование. Если же оно имеет сконструированное кодирование, возвращает значение <see langword="false" /> и не перемещает позицию чтения модуля чтения.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadUInt32(System.UInt32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Пытается прочитать следующее значение как целочисленное с указанным тегом в формате 32-разрядного значения без знака.</summary>
      <param name="value">При успешном выполнении получает декодированное значение.</param>
      <param name="expectedTag">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 2).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns>Возвращает значение <see langword="false" /> и не перемещает модуль чтения, если значение не принадлежит диапазону от <see cref="F:System.UInt32.MinValue" /> до <see cref="F:System.UInt32.MaxValue" /> включительно; в противном случае возвращает <see langword="true" />, а позиция чтения модуля чтения перемещается.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadUInt64(System.UInt64@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Пытается прочитать следующее значение как целочисленное с указанным тегом в формате 64-разрядного значения без знака.</summary>
      <param name="value">При успешном выполнении получает декодированное значение.</param>
      <param name="expectedTag">Тег, который необходимо проверить перед чтением, или <see langword="null" /> для тега по умолчанию (Universal 2).</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">у следующего значения отсутствует правильный тег.
—или— кодирование длины недопустимо с точки зрения текущих правил кодирования.
—или— содержимое недопустимо с точки зрения текущих правил кодирования.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns>Возвращает значение <see langword="false" /> и не перемещает модуль чтения, если значение не принадлежит диапазону от <see cref="F:System.UInt64.MinValue" /> до <see cref="F:System.UInt64.MaxValue" /> включительно; в противном случае возвращает <see langword="true" />, а позиция чтения модуля чтения перемещается.</returns>
    </member>
    <member name="P:System.Formats.Asn1.AsnReader.HasData">
      <summary>Получает сведения о том, остались ли у модуля чтения данные для обработки.</summary>
      <returns>
        <see langword="true" /> значение, если для процесса чтения доступно больше данных; в противном случае — <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Formats.Asn1.AsnReader.RuleSet">
      <summary>Получает правила кодирования, используемые этим модулем чтения.</summary>
      <returns>Правила кодирования, используемые этим модулем чтения.</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnReaderOptions">
      <summary>Задает параметры, изменяющие поведение <see cref="T:System.Formats.Asn1.AsnReader" />.</summary>
    </member>
    <member name="P:System.Formats.Asn1.AsnReaderOptions.SkipSetSortOrderVerification">
      <summary>Получает или задает значение, указывающее, должен ли модуль чтения обходить порядок сортировки для значения Set ил Set-Of.</summary>
      <returns>
        <see langword="true" /> значение, если модуль чтения не должен проверять, правильно ли упорядочен набор или набор значений для текущих правил кодирования. в противном случае — значение <see langword="false" /> .
Значение по умолчанию — <see langword="false" />.</returns>
    </member>
    <member name="P:System.Formats.Asn1.AsnReaderOptions.UtcTimeTwoDigitYearMax">
      <summary>Получает или задает самый крупный год для представления со значением UtcTime.</summary>
      <returns>Самый крупный год для представления со значением Утктиме. Значение по умолчанию — 2049.</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnWriter">
      <summary>Модуль записи для данных ASN.1, кодированных с помощью BER, CER или DER.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.#ctor(System.Formats.Asn1.AsnEncodingRules)">
      <summary>Создание нового <see cref="T:System.Formats.Asn1.AsnWriter" /> с заданным набором правил кодирования.</summary>
      <param name="ruleSet">Ограничения кодирования для модуля записи.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> не определен.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.CopyTo(System.Formats.Asn1.AsnWriter)">
      <summary>Копирование значение этого модуля записи в другое.</summary>
      <param name="destination">Модуль записи для получения значения.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destination" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> или <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> не были закрыты с помощью <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> или <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.
—или— Этот модуль записи пуст.
—или— Этот модуль записи представляет несколько значений верхнего уровня.
—или— Значение этого модуля записи кодируется способом, который несовместим с набором правил для модуля записи назначения.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Encode">
      <summary>Возвращает новый массив байтов, в котором содержится закодированное значение.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> или <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> не были закрыты с помощью <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> или <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</exception>
      <returns>Новый массив байтов с точно заданным размером, в котором содержится закодированное значение.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Encode(System.Span{System.Byte})">
      <summary>Записывает закодированное представление данных в <paramref name="destination" />.</summary>
      <param name="destination">Буфер, в который должна выполняться запись.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> или <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> не были закрыты с помощью <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> или <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</exception>
      <returns>Число байтов, записанных в <paramref name="destination" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.EncodedValueEquals(System.Formats.Asn1.AsnWriter)">
      <summary>Определяет, будет ли <see cref="M:System.Formats.Asn1.AsnWriter.Encode" /> выдавать результат, идентичный <paramref name="other" />.</summary>
      <param name="other">Экземпляр для сравнения закодированных значений.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> или <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> не были закрыты с помощью <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> или <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</exception>
      <returns>Возвращает значение <see langword="true" />, если ожидающие кодирования данные идентичны <paramref name="other" />; в противном случае возвращает значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.EncodedValueEquals(System.ReadOnlySpan{System.Byte})">
      <summary>Определяет, будет ли <see cref="M:System.Formats.Asn1.AsnWriter.Encode" /> выдавать результат, идентичный <paramref name="other" />.</summary>
      <param name="other">Закодированное значение для сравнения.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> или <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> не были закрыты с помощью <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> или <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</exception>
      <returns>Возвращает значение <see langword="true" />, если ожидающие кодирования данные идентичны <paramref name="other" />; в противном случае возвращает значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.GetEncodedLength">
      <summary>Получает число байтов, которые были бы записаны с помощью <see cref="M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)" />.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" />, <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> или <see cref="M:System.Formats.Asn1.AsnWriter.PushOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> были вызваны без соответствующего метода POP.</exception>
      <returns>Число байтов, которые были бы записаны с помощью <see cref="M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PopOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Указывает, что открытая строка октетов с тегом UNIVERSAL 4 закрыта, а модуль записи возвращен в родительский контекст.</summary>
      <param name="tag">Тег для записи или <see langword="null" /> для тега по умолчанию (Universal 4).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <exception cref="T:System.InvalidOperationException">в настоящий момент позиция записи модуля записи не находится в строке октетов с указанным тегом.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Указывает, что открытая последовательность Sequence с указанным тегом закрыта, а модуль записи возвращен в родительский контекст.</summary>
      <param name="tag">Тег для записи или <see langword="null" /> для тега по умолчанию (Universal 16).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <exception cref="T:System.InvalidOperationException">в настоящий момент позиция записи модуля записи не находится в последовательности Sequence с указанным тегом.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Указывает, что открытый набор Set-Of с указанным тегом закрыт, а модуль записи возвращен в родительский контекст.</summary>
      <param name="tag">Тег для записи или <see langword="null" /> для тега по умолчанию (Universal 17).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <exception cref="T:System.InvalidOperationException">в настоящий момент позиция записи модуля записи не находится в наборе Set-Of с указанным тегом.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PushOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Начало записи значения в формате строки октетов с указанным тегом.</summary>
      <param name="tag">Тег для записи или <see langword="null" /> для тега по умолчанию (Universal 4).</param>
      <returns>Удаляемое значение, которое будет автоматически вызывать <see cref="M:System.Formats.Asn1.AsnWriter.PopOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Начало записи последовательности Sequence с указанным тегом.</summary>
      <param name="tag">Тег для записи или <see langword="null" /> для тега по умолчанию (Universal 16).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns>Удаляемое значение, которое будет автоматически вызывать <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Начало записи набора Set-Of с указанным тегом.</summary>
      <param name="tag">Тег для записи или <see langword="null" /> для тега по умолчанию (Universal 17).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <returns>Удаляемое значение, которое будет автоматически вызывать <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Reset">
      <summary>Сброс модуля записи для очистки его от всех данных без освобождения ресурсов.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary>Пытается записать закодированное представление данных в <paramref name="destination" />.</summary>
      <param name="destination">Буфер, в который должна выполняться запись.</param>
      <param name="bytesWritten">При успешном выполнении получает число байтов, записанных в <paramref name="destination" />.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> или <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> не были закрыты с помощью <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> или <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />.</exception>
      <returns>Возвращает значение <see langword="true" />, если кодирование выполнено успешно, и значение <see langword="false" />, если размер <paramref name="destination" /> слишком мал.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteBitString(System.ReadOnlySpan{System.Byte},System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Запись значения в формате битовой строки с указанным тегом.</summary>
      <param name="value">Значение для записи.</param>
      <param name="unusedBitCount">Число конечных битов, не являющихся семантическими.</param>
      <param name="tag">Тег для записи или <see langword="null" /> для тега по умолчанию (Universal 3).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.
—или— <paramref name="value" /> имеет длину 0, а значение <paramref name="unusedBitCount" /> не равно 0 —или— значение <paramref name="value" /> не является пустым, и задан любой из битов, определенных <paramref name="unusedBitCount" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="unusedBitCount" /> не принадлежит диапазону [0,7].</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteBoolean(System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Запись логического значения с указанным тегом.</summary>
      <param name="value">Значение для записи.</param>
      <param name="tag">Тег для записи или <see langword="null" /> для тега по умолчанию (Universal 1).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteCharacterString(System.Formats.Asn1.UniversalTagNumber,System.ReadOnlySpan{System.Char},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Запись предоставленной строки с использованием указанного типа кодирования и с применением указанного тега к соответствующему типу кодирования.</summary>
      <param name="encodingType">Одно из значений перечисления, представляющее используемое кодирование.</param>
      <param name="str">Строка для записи.</param>
      <param name="tag">Тег для записи или <see langword="null" /> для универсального тега, соответствующего запрошенному типу кодирования.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="encodingType" /> не является ограниченным типом кодирования символьных строк.
—или— <paramref name="encodingType" /> — это ограниченный тип кодирования символьных строк, который в настоящее время не поддерживается данным методом.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteCharacterString(System.Formats.Asn1.UniversalTagNumber,System.String,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Запись предоставленной строки с использованием указанного типа кодирования и с применением указанного тега к соответствующему типу кодирования.</summary>
      <param name="encodingType">Одно из значений перечисления, представляющее используемое кодирование.</param>
      <param name="value">Строка для записи.</param>
      <param name="tag">Тег для записи или <see langword="null" /> для универсального тега, соответствующего запрошенному типу кодирования.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> равно <see langword="null" /></exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="encodingType" /> не является ограниченным типом кодирования символьных строк.
—или— <paramref name="encodingType" /> — это ограниченный тип кодирования символьных строк, который в настоящее время не поддерживается данным методом.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteEncodedValue(System.ReadOnlySpan{System.Byte})">
      <summary>Запись одного значения, которое уже закодировано.</summary>
      <param name="value">Значение для записи.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> не удалось считать в соответствии с текущими правилами кодирования.
—или— <paramref name="value" /> содержит данные за конечной позицией первого значения.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteEnumeratedValue(System.Enum,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Запись значения перечисления, отличного от [<see cref="T:System.FlagsAttribute" />], в виде перечисления с тегом UNIVERSAL 10.</summary>
      <param name="value">Записываемое упакованное значение перечисления.</param>
      <param name="tag">Тег для записи или <see langword="null" /> для тега по умолчанию (Universal 10).</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.
—или— <paramref name="value" /> не является упакованным значением перечисления.
—или— неупакованный тип <paramref name="value" /> объявлен как [<see cref="T:System.FlagsAttribute" />].</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteEnumeratedValue``1(``0,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Запись значения перечисления, отличного от [<see cref="T:System.FlagsAttribute" />], в виде перечисления с тегом UNIVERSAL 10.</summary>
      <param name="value">Записываемое упакованное значение перечисления.</param>
      <param name="tag">Тег для записи или <see langword="null" /> для тега по умолчанию (Universal 10).</param>
      <typeparam name="TEnum">
        <see cref="T:System.FlagsAttribute" />Тип перечислений, не применяющий [].</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.
—или— <typeparamref name="TEnum" /> не является перечислением.
—или— <typeparamref name="TEnum" /> объявлен как [<see cref="T:System.FlagsAttribute" />].</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteGeneralizedTime(System.DateTimeOffset,System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Запись предоставленного значения <see cref="T:System.DateTimeOffset" /> как GeneralizedTime с указанным тегом UNIVERSAL 24 (при необходимости без долей секунды).</summary>
      <param name="value">Значение для записи.</param>
      <param name="omitFractionalSeconds">Возвращает значение <see langword="true" />, если доли секунды в <paramref name="value" /> необходимо интерпретировать как 0 даже при наличии ненулевого значения.</param>
      <param name="tag">Тег для записи или <see langword="null" /> для тега по умолчанию (Universal 24).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.Int64,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Запись целочисленного значения с указанным тегом.</summary>
      <param name="value">Значение для записи.</param>
      <param name="tag">Тег для записи или <see langword="null" /> для тега по умолчанию (Universal 2).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.Numerics.BigInteger,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Запись целочисленного значения с указанным тегом.</summary>
      <param name="value">Значение для записи.</param>
      <param name="tag">Тег для записи или <see langword="null" /> для тега по умолчанию (Universal 2).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.ReadOnlySpan{System.Byte},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Запись целочисленного значения с указанным тегом.</summary>
      <param name="value">Целочисленное значение для записи со знаком и обратным порядком байтов.</param>
      <param name="tag">Тег для записи или <see langword="null" /> для тега по умолчанию (Universal 2).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <exception cref="T:System.ArgumentException">заданы все 9 наиболее значимых битов.
—или— не задан ни один из 9 наиболее значимых битов.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.UInt64,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Запись целочисленного значения с указанным тегом.</summary>
      <param name="value">Значение для записи.</param>
      <param name="tag">Тег для записи или <see langword="null" /> для тега по умолчанию (Universal 2).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteIntegerUnsigned(System.ReadOnlySpan{System.Byte},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Запись целочисленного значения с указанным тегом.</summary>
      <param name="value">Целочисленное значение для записи без знака и с обратным порядком байтов.</param>
      <param name="tag">Тег для записи или <see langword="null" /> для тега по умолчанию (Universal 2).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <exception cref="T:System.ArgumentException">не задан ни один из 9 наиболее значимых битов.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNamedBitList(System.Collections.BitArray,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Записывает значение в формате битового массива в виде значения NamedBitList с указанным тегом.</summary>
      <param name="value">Записываемые биты</param>
      <param name="tag">Тег для записи или <see langword="null" /> для тега по умолчанию (Universal 3).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNamedBitList(System.Enum,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Запись значения перечисления <see cref="T:System.FlagsAttribute" /> в виде значения NamedBitList с указанным тегом.</summary>
      <param name="value">Записываемое упакованное значение перечисления</param>
      <param name="tag">Тег для записи или <see langword="null" /> для тега по умолчанию (Universal 3).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.
—или— <paramref name="value" /> не является упакованным значением перечисления.
—или— неупакованный тип <paramref name="value" /> не объявлен как [<see cref="T:System.FlagsAttribute" />].</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNamedBitList``1(``0,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Запись значения перечисления <see cref="T:System.FlagsAttribute" /> в виде значения NamedBitList с указанным тегом.</summary>
      <param name="value">Записываемое значение перечисления</param>
      <param name="tag">Тег для записи или <see langword="null" /> для тега по умолчанию (Universal 3).</param>
      <typeparam name="TEnum">
        <see cref="T:System.FlagsAttribute" />Тип перечисления [] для записи.</typeparam>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.
—или— <typeparamref name="TEnum" /> не является значением перечисления.
—или— перечисление <typeparamref name="TEnum" /> не объявлено как [<see cref="T:System.FlagsAttribute" />].</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNull(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Запись значения NULL с указанным тегом.</summary>
      <param name="tag">Тег для записи или <see langword="null" /> для тега по умолчанию (Universal 5).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteObjectIdentifier(System.ReadOnlySpan{System.Char},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Запись идентификатора объекта с указанным тегом.</summary>
      <param name="oidValue">Записываемый идентификатор объекта.</param>
      <param name="tag">Тег для записи или <see langword="null" /> для тега по умолчанию (Universal 6).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.
—или— <paramref name="oidValue" /> не является допустимым идентификатором с точкой в качестве разделителя чисел.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteObjectIdentifier(System.String,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Запись идентификатора объекта с указанным тегом.</summary>
      <param name="oidValue">Записываемый идентификатор объекта.</param>
      <param name="tag">Тег для записи или <see langword="null" /> для тега по умолчанию (Universal 6).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.
—или— <paramref name="oidValue" /> не является допустимым идентификатором с точкой в качестве разделителя чисел.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="oidValue" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteOctetString(System.ReadOnlySpan{System.Byte},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Запись значения в формате строки октетов с указанным тегом.</summary>
      <param name="value">Значение для записи.</param>
      <param name="tag">Тег для записи или <see langword="null" /> для тега по умолчанию (Universal 4).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteUtcTime(System.DateTimeOffset,System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Запись предоставленного значения в формате UTCTime с указанным тегом, если год находится в допустимом диапазоне.</summary>
      <param name="value">Значение для записи.</param>
      <param name="twoDigitYearMax">Максимально допустимый год для <paramref name="value" /> после преобразования в UTC.
Для диапазона X.509 Time.utcTime 1950–2049 передается значение <c>2049</c>.</param>
      <param name="tag">Тег для записи или <see langword="null" /> для тега по умолчанию (Universal 23).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" />.<see cref="P:System.DateTimeOffset.Year" /> (после преобразования в UTC) не принадлежит диапазону (<paramref name="twoDigitYearMax" />– 100, <paramref name="twoDigitYearMax" />].</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteUtcTime(System.DateTimeOffset,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>Запись предоставленного значения в формате UTCTime с указанным тегом, при которой допустимо принимать год из двух цифр в контексте.</summary>
      <param name="value">Значение для записи.</param>
      <param name="tag">Тег для записи или <see langword="null" /> для тега по умолчанию (Universal 23).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> является <see cref="F:System.Formats.Asn1.TagClass.Universal" />, но <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> не является правильным для метода.</exception>
    </member>
    <member name="P:System.Formats.Asn1.AsnWriter.RuleSet">
      <summary>Получает правила кодирования, используемые этим модулем записи.</summary>
      <returns>Правила кодирования, используемые этим модулем записи.</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnWriter.Scope">
      <summary>Предоставляет целевой объект <see cref="T:System.IDisposable" /> для безопасного закрытия открытого тега с помощью лексической области в качестве логической области.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Scope.Dispose">
      <summary>Выполняет определяемые приложением задачи, связанные с удалением, высвобождением или сбросом неуправляемых ресурсов.</summary>
    </member>
    <member name="T:System.Formats.Asn1.TagClass">
      <summary>Класс тегов для определенного тега ASN.1.</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.Application">
      <summary>Класс тегов приложения</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.ContextSpecific">
      <summary>Класс тегов, зависящий от контекста</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.Private">
      <summary>Класс закрытых тегов</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.Universal">
      <summary>Класс универсальных тегов</summary>
    </member>
    <member name="T:System.Formats.Asn1.UniversalTagNumber">
      <summary>Назначения тегов для универсального класса в ITU-T X.680.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.BitString">
      <summary>Значение тега универсального класса для битовой строки.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.BMPString">
      <summary>Значение тега универсального класса для значения BMPString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Boolean">
      <summary>Значение тега универсального класса для логического значения.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Date">
      <summary>Значение тега универсального класса для даты.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.DateTime">
      <summary>Значение тега универсального класса для даты и времени.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Duration">
      <summary>Значение тега универсального класса для продолжительности.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Embedded">
      <summary>Значение тега универсального класса для значения Embedded-PDV.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.EndOfContents">
      <summary>Зарезервированный идентификатор маркера конца содержимого при кодировании с неопределенной длиной.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Enumerated">
      <summary>Значение тега универсального класса для перечислимого значения.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.External">
      <summary>Значение тега универсального класса для внешнего значения.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.GeneralizedTime">
      <summary>Значение тега универсального класса для значения GeneralizedTime.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.GeneralString">
      <summary>Значение тега универсального класса для значения GeneralString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.GraphicString">
      <summary>Значение тега универсального класса для значения GraphicString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.IA5String">
      <summary>Значение тега универсального класса для значения IA5String.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.InstanceOf">
      <summary>Значение тега универсального класса для значения Instance-Of.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Integer">
      <summary>Значение тега универсального класса для целочисленного значения.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ISO646String">
      <summary>Значение тега универсального класса для ISO646String (VisibleString).</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Null">
      <summary>Значение тега универсального класса для значения NULL.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.NumericString">
      <summary>Значение тега универсального класса для значения NumericString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ObjectDescriptor">
      <summary>Значение тега универсального класса для дескриптора объекта.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ObjectIdentifier">
      <summary>Значение тега универсального класса для идентификатора объекта.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ObjectIdentifierIRI">
      <summary>Значение тега универсального класса для международного идентификатора ресурса (IRI), используемого для идентификатора объекта.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.OctetString">
      <summary>Значение тега универсального класса для строки октетов.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.PrintableString">
      <summary>Значение тега универсального класса для значения PrintableString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Real">
      <summary>Значение тега универсального класса для вещественного значения.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.RelativeObjectIdentifier">
      <summary>Значение тега универсального класса для относительного идентификатора объекта.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.RelativeObjectIdentifierIRI">
      <summary>Значение тега универсального класса для международного идентификатора ресурса (IRI), используемого для относительного идентификатора объекта.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Sequence">
      <summary>Значение тега универсального класса для последовательности Sequence.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.SequenceOf">
      <summary>Значение тега универсального класса для последовательности Sequence-Of.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Set">
      <summary>Значение тега универсального класса для набора.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.SetOf">
      <summary>Значение тега универсального класса для набора Set-Of.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.T61String">
      <summary>Значение тега универсального класса для T61String (TeletexString).</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.TeletexString">
      <summary>Значение тега универсального класса для TeletexString (T61String).</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Time">
      <summary>Значение тега универсального класса для времени.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.TimeOfDay">
      <summary>Значение тега универсального класса для значения Time-Of-Day.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UniversalString">
      <summary>Значение тега универсального класса для значения UniversalString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UnrestrictedCharacterString">
      <summary>Значение тега универсального класса для неограниченной символьной строки.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UtcTime">
      <summary>Значение тега универсального класса для значения UTCTime.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UTF8String">
      <summary>Значение тега универсального класса для значения UTF8String.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.VideotexString">
      <summary>Значение тега универсального класса для значения VideotexString.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.VisibleString">
      <summary>Значение тега универсального класса для VisibleString (ISO646String).</summary>
    </member>
  </members>
</doc>