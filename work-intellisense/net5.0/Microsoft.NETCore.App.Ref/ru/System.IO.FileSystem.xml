<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.IO.FileSystem</name>
  </assembly>
  <members>
    <member name="T:System.IO.Directory">
      <summary>Предоставляет статические методы для создания, перемещения и перечисления в каталогах и вложенных каталогах. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.IO.Directory.CreateDirectory(System.String)">
      <summary>Создает все каталоги и подкаталоги по указанному пути, если они еще не существуют.</summary>
      <param name="path">Каталог, который необходимо создать.</param>
      <exception cref="T:System.IO.IOException">Каталог, заданный параметром <paramref name="path" />, является файлом.  
  
-или- 
Имя сети неизвестно.</exception>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов. Вы можете запросить недопустимые символы с помощью метода <see cref="M:System.IO.Path.GetInvalidPathChars" />.  
  
-или- 
 <paramref name="path" /> начинается с символа двоеточия (:) или содержит только двоеточие.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> содержит двоеточие (:), которое не является частью метки диска (C:\).</exception>
      <returns>Объект, представляющий каталог по указанному пути. Этот объект возвращается вне зависимости от того, существует ли уже каталог по указанному пути.</returns>
    </member>
    <member name="M:System.IO.Directory.Delete(System.String)">
      <summary>Удаляет пустой каталог по заданному пути.</summary>
      <param name="path">Имя пустого каталога, который необходимо удалить. Этот каталог должен поддерживать запись и быть пустым.</param>
      <exception cref="T:System.IO.IOException">Файл с тем же именем и расположении, заданном <paramref name="path" />, уже существует.  
  
-или- 
Каталог является текущим рабочим каталогом приложения.  
  
-или- 
Каталог, заданный параметром <paramref name="path" />, не пустой.  
  
-или- 
Каталог доступен только для чтения или содержит файл, доступный только для чтения.  
  
-или- 
Каталог используется другим процессом.</exception>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов. Вы можете запросить недопустимые символы с помощью метода <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Параметр <paramref name="path" /> не существует или не найден.  
  
-или- 
Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
    </member>
    <member name="M:System.IO.Directory.Delete(System.String,System.Boolean)">
      <summary>Удаляет заданный каталог и, при наличии соответствующей инструкции, все подкаталоги и файлы в нем.</summary>
      <param name="path">Имя каталога, который необходимо удалить.</param>
      <param name="recursive">Значение <see langword="true" /> позволяет удалить каталоги, подкаталоги и файлы по заданному <paramref name="path" />, в противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.IO.IOException">Файл с тем же именем и расположении, заданном <paramref name="path" />, уже существует.  
  
-или- 
Каталог, заданный параметром <paramref name="path" />, доступен только для чтения, или <paramref name="recursive" /> имеет значение <see langword="false" /> и <paramref name="path" /> не является пустым каталогом.  
  
-или- 
Каталог является текущим рабочим каталогом приложения.  
  
-или- 
Каталог содержит файл только для чтения.  
  
-или- 
Каталог используется другим процессом.</exception>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов. Вы можете запросить недопустимые символы с помощью метода <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Параметр <paramref name="path" /> не существует или не найден.  
  
-или- 
Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
    </member>
    <member name="M:System.IO.Directory.EnumerateDirectories(System.String)">
      <summary>Возвращает перечисляемую коллекцию полных имен каталогов, расположенных по указанному пути.</summary>
      <param name="path">Относительный или абсолютный путь к каталогу для поиска. В этой строке не учитывается регистр знаков.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, строку, содержащую только пробел, или строку, содержащую недопустимые символы. Вы можете запросить недопустимые символы с помощью метода <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Недопустимый <paramref name="path" />: например, он ссылается на несопоставленный диск.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> — это имя файла.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или их комбинация превышает максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <returns>Перечисляемая коллекция полных имен (включая пути) для каталогов в каталоге, заданном параметром <paramref name="path" />.</returns>
    </member>
    <member name="M:System.IO.Directory.EnumerateDirectories(System.String,System.String)">
      <summary>Возвращает перечисляемую коллекцию полных имен каталогов, соответствующих шаблону поиска по указанному пути.</summary>
      <param name="path">Относительный или абсолютный путь к каталогу для поиска. В этой строке не учитывается регистр знаков.</param>
      <param name="searchPattern">Строка поиска, которую необходимо сравнивать с именами каталогов, расположенных по пути <paramref name="path" />.  Этот параметр может содержать сочетание допустимого литерального пути и подстановочного символа (* и ?), но не поддерживает регулярные выражения.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, строку, содержащую только пробел, или строку, содержащую недопустимые символы. Вы можете запросить недопустимые символы с помощью метода <see cref="M:System.IO.Path.GetInvalidPathChars" />.  
  
-или- 
 <paramref name="searchPattern" /> не содержит допустимый шаблон.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.  
  
-или- 
 <paramref name="searchPattern" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Недопустимый <paramref name="path" />: например, он ссылается на несопоставленный диск.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> — это имя файла.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или их комбинация превышает максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <returns>Перечисляемая коллекция полных имен (включая пути) для каталогов в каталоге, указанном в <paramref name="path" />, которые соответствуют указанному шаблону поиска.</returns>
    </member>
    <member name="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.EnumerationOptions)">
      <summary>Возвращает перечисляемую коллекцию полных имен каталогов, соответствующих шаблону поиска по указанному пути. Возможно, поиск ведется также и в подкаталогах.</summary>
      <param name="path">Относительный или абсолютный путь к каталогу для поиска. В этой строке не учитывается регистр знаков.</param>
      <param name="searchPattern">Строка поиска, которую необходимо сравнивать с именами каталогов, расположенных по пути <paramref name="path" />.  Этот параметр может содержать сочетание допустимого литерального пути и подстановочного символа (* и ?), но не поддерживает регулярные выражения.</param>
      <param name="enumerationOptions">Объект, описывающий конфигурацию поиска и перечисления для использования.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, строку, содержащую только пробел, или строку, содержащую недопустимые символы. Вы можете запросить недопустимые символы с помощью метода <see cref="M:System.IO.Path.GetInvalidPathChars" />.  
  
-или- 
 <paramref name="searchPattern" /> не содержит допустимый шаблон.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="path" /> или <paramref name="searchPattern" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="searchOption" /> не является допустимым значением <see cref="T:System.IO.SearchOption" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Недопустимый <paramref name="path" />: например, он ссылается на несопоставленный диск.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> — это имя файла.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или их комбинация превышает максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <returns>Перечисляемая коллекция полных имен (включая пути) для каталогов в каталоге, указанном в <paramref name="path" />, которые соответствуют заданному шаблону поиска и параметрам перечисления.</returns>
    </member>
    <member name="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)">
      <summary>Возвращает перечисляемую коллекцию полных имен каталогов, соответствующих шаблону поиска по указанному пути. Возможно, поиск ведется также и в подкаталогах.</summary>
      <param name="path">Относительный или абсолютный путь к каталогу для поиска. В этой строке не учитывается регистр знаков.</param>
      <param name="searchPattern">Строка поиска, которую необходимо сравнивать с именами каталогов, расположенных по пути <paramref name="path" />.  Этот параметр может содержать сочетание допустимого литерального пути и подстановочного символа (* и ?), но не поддерживает регулярные выражения.</param>
      <param name="searchOption">Одно из значений перечисления, определяющее, следует ли выполнять поиск только в текущем каталоге или также во всех его подкаталогах. Значение по умолчанию — <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, строку, содержащую только пробел, или строку, содержащую недопустимые символы. Вы можете запросить недопустимые символы с помощью метода <see cref="M:System.IO.Path.GetInvalidPathChars" />.  
  
-или- 
 <paramref name="searchPattern" /> не содержит допустимый шаблон.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.  
  
-или- 
 <paramref name="searchPattern" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="searchOption" /> не является допустимым значением <see cref="T:System.IO.SearchOption" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Недопустимый <paramref name="path" />: например, он ссылается на несопоставленный диск.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> — это имя файла.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или их комбинация превышает максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <returns>Перечисляемая коллекция полных имен (включая пути) для каталогов в каталоге, указанном в <paramref name="path" />, которые соответствуют заданному шаблону и параметрам поиска.</returns>
    </member>
    <member name="M:System.IO.Directory.EnumerateFiles(System.String)">
      <summary>Возвращает перечисляемую коллекцию полных имен файлов, расположенных по указанному пути.</summary>
      <param name="path">Относительный или абсолютный путь к каталогу для поиска. В этой строке не учитывается регистр знаков.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, строку, содержащую только пробел, или строку, содержащую недопустимые символы. Вы можете запросить недопустимые символы с помощью метода <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Недопустимый <paramref name="path" />: например, он ссылается на несопоставленный диск.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> — это имя файла.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или их комбинация превышает максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <returns>Перечисляемая коллекция полных имен (включая пути) для файлов в каталоге, заданном параметром <paramref name="path" />.</returns>
    </member>
    <member name="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
      <summary>Возвращает перечисляемую коллекцию полных имен файлов, соответствующих шаблону поиска по указанному пути.</summary>
      <param name="path">Относительный или абсолютный путь к каталогу для поиска. В этой строке не учитывается регистр знаков.</param>
      <param name="searchPattern">Строка поиска, которая должна сравниваться с именами файлов в <paramref name="path" />.  Этот параметр может содержать сочетание допустимого литерального пути и подстановочного символа (* и ?), но не поддерживает регулярные выражения.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, строку, содержащую только пробел, или строку, содержащую недопустимые символы. Вы можете запросить недопустимые символы с помощью метода <see cref="M:System.IO.Path.GetInvalidPathChars" />.  
  
-или- 
 <paramref name="searchPattern" /> не содержит допустимый шаблон.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.  
  
-или- 
 <paramref name="searchPattern" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Недопустимый <paramref name="path" />: например, он ссылается на несопоставленный диск.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> — это имя файла.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или их комбинация превышает максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <returns>Перечисляемая коллекция полных имен (включая пути) для файлов в каталоге, указанном в параметре <paramref name="path" />, которые соответствуют заданному шаблону поиска.</returns>
    </member>
    <member name="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.EnumerationOptions)">
      <summary>Возвращает перечисляемую коллекцию полных имен файлов, соответствующих шаблону поиска и параметрам перечисления по указанному пути. Возможно, поиск ведется также и в подкаталогах.</summary>
      <param name="path">Относительный или абсолютный путь к каталогу для поиска. В этой строке не учитывается регистр знаков.</param>
      <param name="searchPattern">Строка поиска, которая должна сравниваться с именами файлов в <paramref name="path" />.  Этот параметр может содержать сочетание допустимого литерального пути и подстановочного символа (* и ?), но не поддерживает регулярные выражения.</param>
      <param name="enumerationOptions">Объект, описывающий конфигурацию поиска и перечисления для использования.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, строку, содержащую только пробел, или строку, содержащую недопустимые символы. Вы можете запросить недопустимые символы с помощью метода <see cref="M:System.IO.Path.GetInvalidPathChars" />.  
  
-или- 
 <paramref name="searchPattern" /> не содержит допустимый шаблон.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.  
  
-или- 
 <paramref name="searchPattern" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="searchOption" /> не является допустимым значением <see cref="T:System.IO.SearchOption" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Недопустимый <paramref name="path" />: например, он ссылается на несопоставленный диск.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> — это имя файла.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или их комбинация превышает максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <returns>Перечисляемая коллекция полных имен (включая пути) для файлов в каталоге, указанном в <paramref name="path" />, которые соответствуют заданному шаблону поиска и параметрам перечисления.</returns>
    </member>
    <member name="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
      <summary>Возвращает перечисляемую коллекцию полных имен файлов, соответствующих шаблону поиска по указанному пути. Возможно, поиск ведется также и в подкаталогах.</summary>
      <param name="path">Относительный или абсолютный путь к каталогу для поиска. В этой строке не учитывается регистр знаков.</param>
      <param name="searchPattern">Строка поиска, которая должна сравниваться с именами файлов в <paramref name="path" />.  Этот параметр может содержать сочетание допустимого литерального пути и подстановочного символа (* и ?), но не поддерживает регулярные выражения.</param>
      <param name="searchOption">Одно из значений перечисления, определяющее, следует ли выполнять поиск только в текущем каталоге или также во всех его подкаталогах. Значение по умолчанию — <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, строку, содержащую только пробел, или строку, содержащую недопустимые символы. Вы можете запросить недопустимые символы с помощью метода <see cref="M:System.IO.Path.GetInvalidPathChars" />.  
  
-или- 
 <paramref name="searchPattern" /> не содержит допустимый шаблон.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.  
  
-или- 
 <paramref name="searchPattern" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="searchOption" /> не является допустимым значением <see cref="T:System.IO.SearchOption" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Недопустимый <paramref name="path" />: например, он ссылается на несопоставленный диск.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> — это имя файла.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или их комбинация превышает максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <returns>Перечисляемая коллекция полных имен (включая пути) для файлов в каталоге, указанном в параметре <paramref name="path" />, которые соответствуют указанному шаблону и параметрам поиска.</returns>
    </member>
    <member name="M:System.IO.Directory.EnumerateFileSystemEntries(System.String)">
      <summary>Возвращает перечисляемую коллекцию имен файлов и имен каталогов по указанному пути.</summary>
      <param name="path">Относительный или абсолютный путь к каталогу для поиска. В этой строке не учитывается регистр знаков.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, строку, содержащую только пробел, или строку, содержащую недопустимые символы. Вы можете запросить недопустимые символы с помощью метода <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Недопустимый <paramref name="path" />: например, он ссылается на несопоставленный диск.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> — это имя файла.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или их комбинация превышает максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <returns>Перечисляемая коллекция записей файловой системы в каталоге, заданном параметром <paramref name="path" />.</returns>
    </member>
    <member name="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)">
      <summary>Возвращает перечисляемую коллекцию имен файлов и имен каталогов по указанному пути, соответствующих шаблону поиска.</summary>
      <param name="path">Относительный или абсолютный путь к каталогу для поиска. В этой строке не учитывается регистр знаков.</param>
      <param name="searchPattern">Строка поиска, которая будет сравниваться с именами в записях файловой системы, расположенными по пути <paramref name="path" />.  Этот параметр может содержать сочетание допустимого литерального пути и подстановочного символа (* и ?), но не поддерживает регулярные выражения.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, строку, содержащую только пробел, или строку, содержащую недопустимые символы. Вы можете запросить недопустимые символы с помощью метода <see cref="M:System.IO.Path.GetInvalidPathChars" />.  
  
-или- 
 <paramref name="searchPattern" /> не содержит допустимый шаблон.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.  
  
-или- 
 <paramref name="searchPattern" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Недопустимый <paramref name="path" />: например, он ссылается на несопоставленный диск.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> — это имя файла.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или их комбинация превышает максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <returns>Перечисляемая коллекция записей файловой системы в каталоге, заданном параметром <paramref name="path" />, которые соответствуют указанному шаблону поиска.</returns>
    </member>
    <member name="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.EnumerationOptions)">
      <summary>Возвращает перечисляемую коллекцию имен файлов и имен каталогов по указанному пути, соответствующих шаблону поиска и параметрам перечисления.</summary>
      <param name="path">Относительный или абсолютный путь к каталогу для поиска. В этой строке не учитывается регистр знаков.</param>
      <param name="searchPattern">Строка поиска, которая будет сравниваться с именами подкаталогов в <paramref name="path" />. Этот параметр может содержать сочетание допустимых литеральных и подстановочных символов, но не поддерживает регулярные выражения.</param>
      <param name="enumerationOptions">Объект, описывающий конфигурацию поиска и перечисления для использования.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, строку, содержащую только пробел, или строку, содержащую недопустимые символы. Вы можете запросить недопустимые символы с помощью метода <see cref="M:System.IO.Path.GetInvalidPathChars" />.  
  
-или- 
 <paramref name="searchPattern" /> не содержит допустимый шаблон.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.  
  
-или- 
 <paramref name="searchPattern" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="searchOption" /> не является допустимым значением <see cref="T:System.IO.SearchOption" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Недопустимый <paramref name="path" />: например, он ссылается на несопоставленный диск.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> — это имя файла.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или их комбинация превышает максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <returns>Перечисляемая коллекция записей файловой системы в каталоге, указанном параметром <paramref name="path" />, которые соответствуют заданному шаблону поиска и параметрам перечисления.</returns>
    </member>
    <member name="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
      <summary>Возвращает перечисляемую коллекцию записей файловой системы, соответствующих шаблону поиска по указанному пути. Возможно, поиск ведется также и в подкаталогах.</summary>
      <param name="path">Относительный или абсолютный путь к каталогу для поиска. В этой строке не учитывается регистр знаков.</param>
      <param name="searchPattern">Строка поиска, которая должна сравниваться с записями файловой системы, расположенными по пути <paramref name="path" />.  Этот параметр может содержать сочетание допустимого литерального пути и подстановочного символа (* и ?), но не поддерживает регулярные выражения.</param>
      <param name="searchOption">Одно из значений перечисления, определяющее, следует ли выполнять поиск только в текущем каталоге или также во всех его подкаталогах. Значение по умолчанию — <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, строку, содержащую только пробел, или строку, содержащую недопустимые символы. Вы можете запросить недопустимые символы с помощью метода <see cref="M:System.IO.Path.GetInvalidPathChars" />.  
  
-или- 
 <paramref name="searchPattern" /> не содержит допустимый шаблон.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.  
  
-или- 
 <paramref name="searchPattern" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="searchOption" /> не является допустимым значением <see cref="T:System.IO.SearchOption" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Недопустимый <paramref name="path" />: например, он ссылается на несопоставленный диск.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> — это имя файла.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или их комбинация превышает максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <returns>Перечисляемая коллекция записей файловой системы в каталоге, указанном параметром <paramref name="path" />, который соответствует шаблону и параметру поиска.</returns>
    </member>
    <member name="M:System.IO.Directory.Exists(System.String)">
      <summary>Определяет, указывает ли заданный путь на существующий каталог на диске.</summary>
      <param name="path">Проверяемый путь.</param>
      <returns>
        <see langword="true" />, если <paramref name="path" /> ссылается на существующий каталог; значение <see langword="false" />, если каталог не существует или если при попытке определить, существует ли указанный каталог.</returns>
    </member>
    <member name="M:System.IO.Directory.GetCreationTime(System.String)">
      <summary>Получает дату и время создания каталога.</summary>
      <param name="path">Путь к каталогу.</param>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов. Вы можете запросить недопустимые символы с помощью метода <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <returns>Структура, для которой заданы дата и время создания указанного каталога. Значение представляется в формате местного времени.</returns>
    </member>
    <member name="M:System.IO.Directory.GetCreationTimeUtc(System.String)">
      <summary>Получает время и дату создания каталога в формате всемирного координированного времени (UTC).</summary>
      <param name="path">Путь к каталогу.</param>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов. Вы можете запросить недопустимые символы с помощью метода <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <returns>Структура, для которой заданы дата и время создания указанного каталога. Значение выражено в формате всемирного координированного времени (UTC).</returns>
    </member>
    <member name="M:System.IO.Directory.GetCurrentDirectory">
      <summary>Получает текущий рабочий каталог приложения.</summary>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.NotSupportedException">Операционной системой является Windows CE, которая не поддерживает функциональность текущего каталога.  
  
 Этот метод доступен в .NET Compact Framework, но в настоящее время не поддерживается.</exception>
      <returns>Строка, содержащая абсолютный путь к текущей рабочей папке без обратной косой черты (\) в конце.</returns>
    </member>
    <member name="M:System.IO.Directory.GetDirectories(System.String)">
      <summary>Возвращает имена подкаталогов (включая пути) в указанном каталоге.</summary>
      <param name="path">Относительный или абсолютный путь к каталогу для поиска. В этой строке не учитывается регистр знаков.</param>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов. Вы можете запросить недопустимые символы с помощью метода <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> — это имя файла.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <returns>Массив полных имен (включая пути) подкаталогов по указанному пути или пустой массив, если каталоги не найдены.</returns>
    </member>
    <member name="M:System.IO.Directory.GetDirectories(System.String,System.String)">
      <summary>Возвращает имена подкаталогов (включая пути) в указанном каталоге, соответствующих указанному шаблону поиска.</summary>
      <param name="path">Относительный или абсолютный путь к каталогу для поиска. В этой строке не учитывается регистр знаков.</param>
      <param name="searchPattern">Строка поиска, которая будет сравниваться с именами подкаталогов в <paramref name="path" />. Этот параметр может содержать сочетание допустимых литеральных и подстановочных символов, но не поддерживает регулярные выражения.</param>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов. Вы можете запросить недопустимые символы с помощью <see cref="M:System.IO.Path.GetInvalidPathChars" />.  
  
-или- 
 <paramref name="searchPattern" /> не содержит допустимый шаблон.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="path" /> или <paramref name="searchPattern" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> — это имя файла.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <returns>Массив полных имен (включая пути) подкаталогов в указанном каталоге, которые соответствуют указанному шаблону поиска, или пустой массив, если каталоги не найдены.</returns>
    </member>
    <member name="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.EnumerationOptions)">
      <summary>Возвращает имена подкаталогов (включая пути) в указанном каталоге, соответствующих заданному шаблону поиска и параметрам перечисления.</summary>
      <param name="path">Относительный или абсолютный путь к каталогу для поиска. В этой строке не учитывается регистр знаков.</param>
      <param name="searchPattern">Строка поиска, которая будет сравниваться с именами подкаталогов в <paramref name="path" />. Этот параметр может содержать сочетание допустимых литеральных и подстановочных символов, но не поддерживает регулярные выражения.</param>
      <param name="enumerationOptions">Объект, описывающий конфигурацию поиска и перечисления для использования.</param>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов. Вы можете запросить недопустимые символы с помощью <see cref="M:System.IO.Path.GetInvalidPathChars" />.  
  
-или- 
 <paramref name="searchPattern" /> не содержит допустимый шаблон.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="path" /> или <paramref name="searchPattern" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> — это имя файла.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <returns>Массив полных имен (включая пути) подкаталогов в указанном каталоге, которые соответствуют шаблону поиска и параметрам перечисления, или пустой массив, если каталоги не найдены.</returns>
    </member>
    <member name="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)">
      <summary>Возвращает имена подкаталогов (включая пути) в указанном каталоге, соответствующих указанному шаблону поиска, и при необходимости ведет поиск в подкаталогах.</summary>
      <param name="path">Относительный или абсолютный путь к каталогу для поиска. В этой строке не учитывается регистр знаков.</param>
      <param name="searchPattern">Строка поиска, которая будет сравниваться с именами подкаталогов в <paramref name="path" />. Этот параметр может содержать сочетание допустимых литеральных и подстановочных символов, но не поддерживает регулярные выражения.</param>
      <param name="searchOption">Одно из значений перечисления, определяющее, следует ли выполнять поиск только в текущем каталоге или также во всех его подкаталогах.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов. Вы можете запросить недопустимые символы с помощью метода <see cref="M:System.IO.Path.GetInvalidPathChars" />.  
  
-или- 
 <paramref name="searchPattern" /> не содержит допустимый шаблон.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="path" /> или <paramref name="searchPattern" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="searchOption" /> не является допустимым значением <see cref="T:System.IO.SearchOption" />.</exception>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> — это имя файла.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <returns>Массив полных имен (включая пути) подкаталогов, соответствующих указанным критериям, или пустой массив, если каталоги не найдены.</returns>
    </member>
    <member name="M:System.IO.Directory.GetDirectoryRoot(System.String)">
      <summary>Возвращает для заданного пути сведения о томе и корневом каталоге по отдельности или сразу.</summary>
      <param name="path">Путь к файлу или каталогу.</param>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов. Вы можете запросить недопустимые символы с помощью метода <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <returns>Строка, в которой содержатся сведения о томе, корневом каталоге или одновременно сведения и о томе, и о корневом каталоге для заданного пути.</returns>
    </member>
    <member name="M:System.IO.Directory.GetFiles(System.String)">
      <summary>Возвращает имена файлов (с указанием пути к ним) в указанном каталоге.</summary>
      <param name="path">Относительный или абсолютный путь к каталогу для поиска. В этой строке не учитывается регистр знаков.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> — это имя файла.  
  
-или- 
Произошла сетевая ошибка.</exception>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов. Вы можете запросить недопустимые символы с помощью метода <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указанный путь не найден или является недопустимым (например, ведет на несопоставленный диск).</exception>
      <returns>Массив полных имен (включая пути) файлов в указанном каталоге или пустой массив, если файлы не найдены.</returns>
    </member>
    <member name="M:System.IO.Directory.GetFiles(System.String,System.String)">
      <summary>Возвращает имена файлов (включая пути) из указанного каталога, отвечающие условиям заданного шаблона поиска.</summary>
      <param name="path">Относительный или абсолютный путь к каталогу для поиска. В этой строке не учитывается регистр знаков.</param>
      <param name="searchPattern">Строка поиска, которая должна сравниваться с именами файлов в <paramref name="path" />.  Этот параметр может содержать сочетание допустимого литерального пути и подстановочного символа (* и ?), но не поддерживает регулярные выражения.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> — это имя файла.  
  
-или- 
Произошла сетевая ошибка.</exception>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов. Вы можете запросить недопустимые символы с помощью <see cref="M:System.IO.Path.GetInvalidPathChars" />.  
  
-или- 
 <paramref name="searchPattern" /> не содержит допустимый шаблон.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="path" /> или <paramref name="searchPattern" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указанный путь не найден или является недопустимым (например, ведет на несопоставленный диск).</exception>
      <returns>Массив полных имен (включая пути) файлов в указанном каталоге, которые соответствуют указанному шаблону поиска, или пустой массив, если файлы не найдены.</returns>
    </member>
    <member name="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.EnumerationOptions)">
      <summary>Возвращает имена файлов (включая пути) в указанном каталоге, соответствующих заданному шаблону поиска и параметрам перечисления.</summary>
      <param name="path">Относительный или абсолютный путь к каталогу для поиска. В этой строке не учитывается регистр знаков.</param>
      <param name="searchPattern">Строка поиска, которая будет сравниваться с именами подкаталогов в <paramref name="path" />. Этот параметр может содержать сочетание допустимых литеральных и подстановочных символов, но не поддерживает регулярные выражения.</param>
      <param name="enumerationOptions">Объект, описывающий конфигурацию поиска и перечисления для использования.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> — это имя файла.  
  
-или- 
Произошла сетевая ошибка.</exception>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов. Вы можете запросить недопустимые символы с помощью <see cref="M:System.IO.Path.GetInvalidPathChars" />.  
  
-или- 
 <paramref name="searchPattern" /> не содержит допустимый шаблон.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="path" /> или <paramref name="searchPattern" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указанный путь не найден или является недопустимым (например, ведет на несопоставленный диск).</exception>
      <returns>Массив полных имен (включая пути) файлов в указанном каталоге, которые соответствуют заданному шаблону поиска и параметрам перечисления, или пустой массив, если файлы не найдены.</returns>
    </member>
    <member name="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
      <summary>Возвращает имена файлов (включая пути) в заданном каталоге, отвечающие условиям шаблона поиска, используя значение, которое определяет, выполнять ли поиск в подкаталогах.</summary>
      <param name="path">Относительный или абсолютный путь к каталогу для поиска. В этой строке не учитывается регистр знаков.</param>
      <param name="searchPattern">Строка поиска, которая должна сравниваться с именами файлов в <paramref name="path" />.  Этот параметр может содержать сочетание допустимого литерального пути и подстановочного символа (* и ?), но не поддерживает регулярные выражения.</param>
      <param name="searchOption">Одно из значений перечисления, определяющее, следует ли выполнять поиск только в текущем каталоге или также во всех его подкаталогах.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов. Вы можете запросить недопустимые символы с помощью метода <see cref="M:System.IO.Path.GetInvalidPathChars" />.  
  
-или- 
 <paramref name="searchPattern" /> не содержит допустимый шаблон.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="path" /> или <paramref name="searchpattern" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="searchOption" /> не является допустимым значением <see cref="T:System.IO.SearchOption" />.</exception>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указанный путь не найден или является недопустимым (например, ведет на несопоставленный диск).</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> — это имя файла.  
  
-или- 
Произошла сетевая ошибка.</exception>
      <returns>Массив полных имен (включая пути) файлов в указанном каталоге, которые соответствуют указанному шаблону и параметру поиска, или пустой массив, если файлы не найдены.</returns>
    </member>
    <member name="M:System.IO.Directory.GetFileSystemEntries(System.String)">
      <summary>Возвращает имена всех файлов и подкаталогов по указанному пути.</summary>
      <param name="path">Относительный или абсолютный путь к каталогу для поиска. В этой строке не учитывается регистр знаков.</param>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов. Вы можете запросить недопустимые символы с помощью метода <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> — это имя файла.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <returns>Массив имен файлов и подкаталогов в указанном каталоге или пустой массив, если файлы или подкаталоги не найдены.</returns>
    </member>
    <member name="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)">
      <summary>Возвращает массив имен файлов и имен каталогов по указанному пути, соответствующих шаблону поиска.</summary>
      <param name="path">Относительный или абсолютный путь к каталогу для поиска. В этой строке не учитывается регистр знаков.</param>
      <param name="searchPattern">Строка поиска, которая будет сравниваться с именами файла и каталогов в <paramref name="path" />.  Этот параметр может содержать сочетание допустимого литерального пути и подстановочного символа (* и ?), но не поддерживает регулярные выражения.</param>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов. Вы можете запросить недопустимые символы с помощью метода <see cref="M:System.IO.Path.GetInvalidPathChars" />.  
  
-или- 
 <paramref name="searchPattern" /> не содержит допустимый шаблон.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="path" /> или <paramref name="searchPattern" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> — это имя файла.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <returns>Массив имен файлов и имен каталогов, соответствующих указанным критериям поиска, или пустой массив, если файлы или каталоги не найдены.</returns>
    </member>
    <member name="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.EnumerationOptions)">
      <summary>Возвращает массив имен файлов и имен каталогов по указанному пути, соответствующих шаблону поиска и параметрам перечисления.</summary>
      <param name="path">Относительный или абсолютный путь к каталогу для поиска. В этой строке не учитывается регистр знаков.</param>
      <param name="searchPattern">Строка поиска, которая будет сравниваться с именами подкаталогов в <paramref name="path" />. Этот параметр может содержать сочетание допустимых литеральных и подстановочных символов, но не поддерживает регулярные выражения.</param>
      <param name="enumerationOptions">Объект, описывающий конфигурацию поиска и перечисления для использования.</param>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов. Вы можете запросить недопустимые символы с помощью метода <see cref="M:System.IO.Path.GetInvalidPathChars" />.

-или-

<paramref name="searchPattern" /> не содержит допустимый шаблон.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="path" /> или <paramref name="searchPattern" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> — это имя файла.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <returns>Массив имен файлов и имен каталогов, соответствующих указанному шаблону поиска и параметрам перечисления, или пустой массив, если файлы или каталоги не найдены.</returns>
    </member>
    <member name="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
      <summary>Возвращает массив всех имен файлов и каталогов по указанному пути, соответствующих шаблону поиска, и при необходимости ведет поиск в подкаталогах.</summary>
      <param name="path">Относительный или абсолютный путь к каталогу для поиска. В этой строке не учитывается регистр знаков.</param>
      <param name="searchPattern">Строка поиска, которая должна сравниваться с именами файлов и каталогов в параметре <paramref name="path" />.  Этот параметр может содержать сочетание допустимого литерального пути и подстановочного символа (* и ?), но не поддерживает регулярные выражения.</param>
      <param name="searchOption">Одно из значений перечисления, определяющее, следует ли выполнять поиск только в текущем каталоге или также во всех его подкаталогах. Значение по умолчанию — <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, строку, содержащую только пробел, или строку, содержащую недопустимые символы. Вы можете запросить недопустимые символы с помощью метода <see cref="M:System.IO.Path.GetInvalidPathChars" />.  
  
-или- 
 <paramref name="searchPattern" /> не содержит допустимый шаблон.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.  
  
-или- 
 <paramref name="searchPattern" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="searchOption" /> не является допустимым значением <see cref="T:System.IO.SearchOption" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Недопустимый <paramref name="path" />: например, он ссылается на несопоставленный диск.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> — это имя файла.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или их комбинация превышает максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <returns>Массив имен файлов и имен каталогов, соответствующих указанным критериям поиска, или пустой массив, если файлы или каталоги не найдены.</returns>
    </member>
    <member name="M:System.IO.Directory.GetLastAccessTime(System.String)">
      <summary>Возвращает время и дату последнего обращения к указанному файлу или каталогу.</summary>
      <param name="path">Файл или каталог, информацию о дате и времени обращения к которому следует получить.</param>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов. Вы можете запросить недопустимые символы с помощью метода <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="path" /> имеет недопустимый формат.</exception>
      <returns>Структура, для которой заданы дата и время последнего доступа к указанному файлу или каталогу. Значение представляется в формате местного времени.</returns>
    </member>
    <member name="M:System.IO.Directory.GetLastAccessTimeUtc(System.String)">
      <summary>Возвращает дату и время последнего доступа к заданному файлу или каталогу в формате всемирного координированного времени (UTC).</summary>
      <param name="path">Файл или каталог, информацию о дате и времени обращения к которому следует получить.</param>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов. Вы можете запросить недопустимые символы с помощью метода <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="path" /> имеет недопустимый формат.</exception>
      <returns>Структура, для которой заданы дата и время последнего доступа к указанному файлу или каталогу. Значение выражено в формате всемирного координированного времени (UTC).</returns>
    </member>
    <member name="M:System.IO.Directory.GetLastWriteTime(System.String)">
      <summary>Возвращает время и дату последней операции записи в указанный файл или каталог.</summary>
      <param name="path">Файл или каталог, дату и время изменения которого следует получить.</param>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов. Вы можете запросить недопустимые символы с помощью метода <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <returns>Структура, для которой заданы дата и время последней операции записи в указанный файл или каталог. Значение представляется в формате местного времени.</returns>
    </member>
    <member name="M:System.IO.Directory.GetLastWriteTimeUtc(System.String)">
      <summary>Возвращает дату и время последней операции записи в заданный файл или каталог в формате всемирного координированного времени (UTC).</summary>
      <param name="path">Файл или каталог, дату и время изменения которого следует получить.</param>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов. Вы можете запросить недопустимые символы с помощью метода <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <returns>Структура, для которой заданы дата и время последней операции записи в указанный файл или каталог. Значение выражено в формате всемирного координированного времени (UTC).</returns>
    </member>
    <member name="M:System.IO.Directory.GetLogicalDrives">
      <summary>Извлекает имена логических дисков данного компьютера в формате "&lt;буква диска&gt;:\".</summary>
      <exception cref="T:System.IO.IOException">Произошла ошибка ввода-вывода (например, ошибка диска).</exception>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <returns>Логические устройства данного компьютера.</returns>
    </member>
    <member name="M:System.IO.Directory.GetParent(System.String)">
      <summary>Извлекает родительский каталог, на который указывает абсолютный или относительный путь.</summary>
      <param name="path">Путь, для которого необходимо извлечь родительский каталог.</param>
      <exception cref="T:System.IO.IOException">Каталог, заданный параметром <paramref name="path" />, доступен только для чтения.</exception>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов. Вы можете запросить недопустимые символы с помощью метода <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе. Дополнительные сведения см. в разделе <see cref="T:System.IO.PathTooLongException" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указанный путь не найден.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="path" /> задан в недопустимом формате.</exception>
      <exception cref="T:System.Security.SecurityException">Только .NET Framework: у вызывающего объекта отсутствуют необходимые разрешения.</exception>
      <returns>Родительский каталог или значение <see langword="null" />, если <paramref name="path" /> является корневым каталогом, в том числе корнем сервера UNC или именем общего ресурса.</returns>
    </member>
    <member name="M:System.IO.Directory.Move(System.String,System.String)">
      <summary>Перемещает файл или каталог со всем его содержимым в новое местоположение.</summary>
      <param name="sourceDirName">Путь к файлу или каталогу, который необходимо переместить.</param>
      <param name="destDirName">Путь к новому местоположению <paramref name="sourceDirName" />. Если <paramref name="sourceDirName" /> является файлом, то параметр <paramref name="destDirName" /> также должен быть именем файла.</param>
      <exception cref="T:System.IO.IOException">Была предпринята попытка переместить каталог в другой том.
  
-или- 
 <paramref name="destDirName" /> уже существует. См. раздел примечаний.
  
-или- 
Параметры <paramref name="sourceDirName" /> и <paramref name="destDirName" /> указывают на один и тот же файл или каталог.  
  
-или- 
Каталог или находящийся в нем файл используется другим процессом.</exception>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourceDirName" /> или <paramref name="destDirName" /> представляет собой строку нулевой длины, строку, содержащую только пробелы, или строку, содержащую один или несколько недопустимых символов. Вы можете запросить недопустимые символы с помощью метода <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="sourceDirName" /> или <paramref name="destDirName" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Путь, указанный <paramref name="sourceDirName" />, является недопустимым (например, он ведет на несопоставленный диск).</exception>
    </member>
    <member name="M:System.IO.Directory.SetCreationTime(System.String,System.DateTime)">
      <summary>Устанавливает дату и время создания заданного файла или каталога.</summary>
      <param name="path">Файл или каталог, для которого требуется установить дату и время создания.</param>
      <param name="creationTime">Дата и время последней записи в файл или каталог. Значение представляется в формате местного времени.</param>
      <exception cref="T:System.IO.FileNotFoundException">Указанный путь не найден.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов. Вы можете запросить недопустимые символы с помощью метода <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="creationTime" /> указывает значение вне диапазона дат или времени, разрешенного для операции.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Текущая операционная система не является системой Windows NT или более поздней версии.</exception>
    </member>
    <member name="M:System.IO.Directory.SetCreationTimeUtc(System.String,System.DateTime)">
      <summary>Устанавливает дату и время создания указанного файла или папки в формате всемирного координированного времени (UTC).</summary>
      <param name="path">Файл или каталог, для которого требуется установить дату и время создания.</param>
      <param name="creationTimeUtc">Дата и время создания каталога или файла. Значение представляется в формате местного времени.</param>
      <exception cref="T:System.IO.FileNotFoundException">Указанный путь не найден.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов. Вы можете запросить недопустимые символы с помощью метода <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="creationTime" /> указывает значение вне диапазона дат или времени, разрешенного для операции.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Текущая операционная система не является системой Windows NT или более поздней версии.</exception>
    </member>
    <member name="M:System.IO.Directory.SetCurrentDirectory(System.String)">
      <summary>Устанавливает заданный каталог в качестве текущего рабочего каталога приложения.</summary>
      <param name="path">Путь, который должен быть назначен рабочему каталогу.</param>
      <exception cref="T:System.IO.IOException">Ошибка ввода/вывода.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов. Вы можете запросить недопустимые символы с помощью метода <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение для доступа к неуправляемому коду.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Указанный путь не найден.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указанный каталог не найден.</exception>
    </member>
    <member name="M:System.IO.Directory.SetLastAccessTime(System.String,System.DateTime)">
      <summary>Устанавливает время и дату последнего обращения к заданному файлу или каталогу.</summary>
      <param name="path">Файл или каталог, для которого требуется установить дату и время доступа.</param>
      <param name="lastAccessTime">Объект, содержащий значение, которое необходимо присвоить дате и времени доступа к <paramref name="path" />. Значение представляется в формате местного времени.</param>
      <exception cref="T:System.IO.FileNotFoundException">Указанный путь не найден.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов. Вы можете запросить недопустимые символы с помощью метода <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Текущая операционная система не является системой Windows NT или более поздней версии.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="lastAccessTime" /> указывает значение вне диапазона дат или времени, разрешенного для операции.</exception>
    </member>
    <member name="M:System.IO.Directory.SetLastAccessTimeUtc(System.String,System.DateTime)">
      <summary>Устанавливает дату и время последнего доступа к заданному файлу или каталогу в формате всемирного координированного времени (UTC).</summary>
      <param name="path">Файл или каталог, для которого требуется установить дату и время доступа.</param>
      <param name="lastAccessTimeUtc">Объект, содержащий значение, которое необходимо присвоить дате и времени доступа к <paramref name="path" />. Значение выражено в формате всемирного координированного времени (UTC).</param>
      <exception cref="T:System.IO.FileNotFoundException">Указанный путь не найден.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов. Вы можете запросить недопустимые символы с помощью метода <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Текущая операционная система не является системой Windows NT или более поздней версии.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="lastAccessTimeUtc" /> указывает значение вне диапазона дат или времени, разрешенного для операции.</exception>
    </member>
    <member name="M:System.IO.Directory.SetLastWriteTime(System.String,System.DateTime)">
      <summary>Устанавливает дату и время последней записи в файл или каталог.</summary>
      <param name="path">Путь к каталогу.</param>
      <param name="lastWriteTime">Дата и время последней записи в файл или каталог. Значение представляется в формате местного времени.</param>
      <exception cref="T:System.IO.FileNotFoundException">Параметр <paramref name="path" /> не найден (например, каталог не существует или находится на несопоставленном диске).</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Параметр <paramref name="path" /> не найден (например, каталог не существует или находится на несопоставленном диске).</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов. Вы можете запросить недопустимые символы с помощью метода <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Текущая операционная система не является системой Windows NT или более поздней версии.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="lastWriteTime" /> указывает значение вне диапазона дат или времени, разрешенного для операции.</exception>
    </member>
    <member name="M:System.IO.Directory.SetLastWriteTimeUtc(System.String,System.DateTime)">
      <summary>Устанавливает дату и время последней записи в заданный каталог в формате всемирного координированного времени (UTC).</summary>
      <param name="path">Путь к каталогу.</param>
      <param name="lastWriteTimeUtc">Дата и время последней записи в файл или каталог. Значение выражено в формате всемирного координированного времени (UTC).</param>
      <exception cref="T:System.IO.FileNotFoundException">Параметр <paramref name="path" /> не найден (например, каталог не существует или находится на несопоставленном диске).</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Параметр <paramref name="path" /> не найден (например, каталог не существует или находится на несопоставленном диске).</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов. Вы можете запросить недопустимые символы с помощью метода <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Текущая операционная система не является системой Windows NT или более поздней версии.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="lastWriteTimeUtc" /> указывает значение вне диапазона дат или времени, разрешенного для операции.</exception>
    </member>
    <member name="T:System.IO.DirectoryInfo">
      <summary>Предоставляет методы экземпляра класса для создания, перемещения и перечисления в каталогах и подкаталогах. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.IO.DirectoryInfo.#ctor(System.String)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.IO.DirectoryInfo" /> для заданного пути.</summary>
      <param name="path">Строка, содержащая путь, для которого создается класс <see langword="DirectoryInfo" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> содержит недопустимые символы, такие как ", &lt;, &gt; или |.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.Create">
      <summary>Создает каталог.</summary>
      <exception cref="T:System.IO.IOException">Не удалось создать каталог.</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.CreateSubdirectory(System.String)">
      <summary>Создает один или несколько подкаталогов по заданному пути. Путь может быть задан относительно текущего экземпляра класса <see cref="T:System.IO.DirectoryInfo" />.</summary>
      <param name="path">Заданный путь. Этот путь не может указывать на другой том диска или иметь формат UNC.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> не указывает допустимый путь к файлу или содержит недопустимые символы <see langword="DirectoryInfo" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.IO.IOException">Подкаталог не может быть создан.  
  
-или- 
Имя файла или каталога совпадает с именем, указанным в <paramref name="path" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего оператора отсутствует разрешение на доступ к коду для создания каталога.  
  
-или- 
У вызывающего оператора отсутствует разрешение на доступ к коду для чтения каталога, описанного возвращенным объектом <see cref="T:System.IO.DirectoryInfo" />.  Это может произойти, если параметр <paramref name="path" /> описывает существующий каталог.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> содержит двоеточие (:), которое не является частью метки диска (C:\).</exception>
      <returns>Последний каталог, на который указывает <paramref name="path" />.</returns>
    </member>
    <member name="M:System.IO.DirectoryInfo.Delete">
      <summary>Удаляет этот <see cref="T:System.IO.DirectoryInfo" />, если он пуст.</summary>
      <exception cref="T:System.UnauthorizedAccessException">Каталог содержит файл только для чтения.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Каталог, описанный этим объектом <see cref="T:System.IO.DirectoryInfo" />, не существует или не найден.</exception>
      <exception cref="T:System.IO.IOException">Каталог не пуст.  
  
-или- 
Каталог является текущим рабочим каталогом приложения.  
  
-или- 
Для каталога имеется открытый дескриптор, используется операционная система Windows XP или более ранняя версия. Этот открытый дескриптор может быть результатом перечисления каталогов. Дополнительные сведения см. в разделе Практическое руководство. Перечисление каталогов и файлов.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.Delete(System.Boolean)">
      <summary>Удаляет данный экземпляр <see cref="T:System.IO.DirectoryInfo" />, указывая, следует ли также удалить подкаталоги и файлы.</summary>
      <param name="recursive">Значение <see langword="true" /> позволяет удалить каталог, его подкаталоги и все файлы, в противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.UnauthorizedAccessException">Каталог содержит файл только для чтения.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Каталог, описанный этим объектом <see cref="T:System.IO.DirectoryInfo" />, не существует или не найден.</exception>
      <exception cref="T:System.IO.IOException">Каталог доступен только для чтения.  
  
-или- 
Каталог содержит один или несколько файлов или подкаталогов, а для параметра <paramref name="recursive" /> задано значение <see langword="false" />.  
  
-или- 
Каталог является текущим рабочим каталогом приложения.  
  
-или- 
Для каталога или одного из его файлов имеется открытый дескриптор, используется операционная система Windows XP или более ранняя версия. Этот открытый дескриптор может быть результатом перечисления каталогов и файлов. Дополнительные сведения см. в разделе Практическое руководство. Перечисление каталогов и файлов.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.EnumerateDirectories">
      <summary>Возвращает перечисляемую коллекцию сведений о каталогах в текущем каталоге.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">Путь, содержащийся в объекте <see cref="T:System.IO.DirectoryInfo" /> , является недействительным (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <returns>Перечисляемая коллекция каталогов в текущем каталоге.</returns>
    </member>
    <member name="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String)">
      <summary>Возвращает перечисляемую коллекцию сведений о каталогах, соответствующую указанному шаблону поиска.</summary>
      <param name="searchPattern">Строка поиска, которая будет сравниваться с именами каталогов.  Этот параметр может содержать сочетание допустимого литерального пути и подстановочного символа (* и ?), но не поддерживает регулярные выражения.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Путь, содержащийся в объекте <see cref="T:System.IO.DirectoryInfo" /> , является недействительным (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <returns>Перечисляемая коллекция каталогов, соответствующая параметру <paramref name="searchPattern" />.</returns>
    </member>
    <member name="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.EnumerationOptions)">
      <summary>Возвращает перечисляемую коллекцию сведений о каталогах, соответствующую указанному шаблону поиска и параметрам перечисления.</summary>
      <param name="searchPattern">Строка поиска, которая будет сравниваться с именами каталогов. Этот параметр может содержать сочетание допустимого литерального пути и подстановочного символа (* и ?), но не поддерживает регулярные выражения.</param>
      <param name="enumerationOptions">Объект, описывающий конфигурацию поиска и перечисления для использования.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Путь, содержащийся в объекте <see cref="T:System.IO.DirectoryInfo" /> , является недействительным (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <returns>Перечисляемая коллекция каталогов, соответствующая параметру <paramref name="searchPattern" /> и <paramref name="enumerationOptions" />.</returns>
    </member>
    <member name="M:System.IO.DirectoryInfo.EnumerateDirectories(System.String,System.IO.SearchOption)">
      <summary>Возвращает перечисляемую коллекцию сведений о каталогах, соответствующую указанному шаблону поиска и параметру поиска в подкаталогах.</summary>
      <param name="searchPattern">Строка поиска, которая будет сравниваться с именами каталогов.  Этот параметр может содержать сочетание допустимого литерального пути и подстановочного символа (* и ?), но не поддерживает регулярные выражения.</param>
      <param name="searchOption">Одно из значений перечисления, определяющее, следует ли выполнять поиск только в текущем каталоге или также во всех его подкаталогах. Значение по умолчанию — <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="searchOption" /> не является допустимым значением <see cref="T:System.IO.SearchOption" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Путь, содержащийся в объекте <see cref="T:System.IO.DirectoryInfo" /> , является недействительным (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <returns>Перечисляемая коллекция каталогов, соответствующая параметру <paramref name="searchPattern" /> и <paramref name="searchOption" />.</returns>
    </member>
    <member name="M:System.IO.DirectoryInfo.EnumerateFiles">
      <summary>Возвращает перечисляемую коллекцию сведений о файлах в текущем каталоге.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">Путь, содержащийся в объекте <see cref="T:System.IO.DirectoryInfo" /> , является недействительным (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <returns>Перечисляемая коллекция файлов в текущем каталоге.</returns>
    </member>
    <member name="M:System.IO.DirectoryInfo.EnumerateFiles(System.String)">
      <summary>Возвращает перечисляемую коллекцию сведений о файлах, соответствующую шаблону поиска.</summary>
      <param name="searchPattern">Строка поиска, которая будет сравниваться с именами файлов.  Этот параметр может содержать сочетание допустимого литерального пути и подстановочного символа (* и ?), но не поддерживает регулярные выражения.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Путь, содержащийся в объекте <see cref="T:System.IO.DirectoryInfo" />, является недействительным (например,он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <returns>Перечисляемая коллекция файлов, соответствующая параметру <paramref name="searchPattern" />.</returns>
    </member>
    <member name="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.EnumerationOptions)">
      <summary>Возвращает перечисляемую коллекцию сведений о файлах, соответствующую указанному шаблону поиска и параметрам перечисления.</summary>
      <param name="searchPattern">Строка поиска, которая будет сравниваться с именами файлов. Этот параметр может содержать сочетание допустимого литерального пути и подстановочного символа (* и ?), но не поддерживает регулярные выражения.</param>
      <param name="enumerationOptions">Объект, описывающий конфигурацию поиска и перечисления для использования.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Путь, содержащийся в объекте <see cref="T:System.IO.DirectoryInfo" />, является недействительным (например,он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <returns>Перечисляемая коллекция файлов, соответствующая параметру <paramref name="searchPattern" /> и <paramref name="enumerationOptions" />.</returns>
    </member>
    <member name="M:System.IO.DirectoryInfo.EnumerateFiles(System.String,System.IO.SearchOption)">
      <summary>Возвращает перечисляемую коллекцию сведений о файлах, соответствующую указанному шаблону поиска и параметру поиска в подкаталогах.</summary>
      <param name="searchPattern">Строка поиска, которая будет сравниваться с именами файлов.  Этот параметр может содержать сочетание допустимого литерального пути и подстановочного символа (* и ?), но не поддерживает регулярные выражения.</param>
      <param name="searchOption">Одно из значений перечисления, определяющее, следует ли выполнять поиск только в текущем каталоге или также во всех его подкаталогах. Значение по умолчанию — <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="searchOption" /> не является допустимым значением <see cref="T:System.IO.SearchOption" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Путь, содержащийся в объекте <see cref="T:System.IO.DirectoryInfo" /> , является недействительным (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <returns>Перечисляемая коллекция файлов, соответствующая параметру <paramref name="searchPattern" /> и <paramref name="searchOption" />.</returns>
    </member>
    <member name="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos">
      <summary>Возвращает перечисляемую коллекцию сведений о файловой системе текущего каталога.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">Путь, содержащийся в объекте <see cref="T:System.IO.DirectoryInfo" /> , является недействительным (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <returns>Перечисляемая коллекция сведений о файловой системе текущего каталога.</returns>
    </member>
    <member name="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String)">
      <summary>Возвращает перечисляемую коллекцию сведений о файловой системе, соответствующую указанному шаблону поиска.</summary>
      <param name="searchPattern">Строка поиска, которая будет сравниваться с именами каталогов.  Этот параметр может содержать сочетание допустимого литерального пути и подстановочного символа (* и ?), но не поддерживает регулярные выражения.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Путь, содержащийся в объекте <see cref="T:System.IO.DirectoryInfo" /> , является недействительным (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <returns>Перечисляемая коллекция сведений об объектах файловой системы, соответствующая параметру <paramref name="searchPattern" />.</returns>
    </member>
    <member name="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.EnumerationOptions)">
      <summary>Возвращает перечисляемую коллекцию сведений о файловой системе, соответствующую указанному шаблону поиска и параметрам перечисления.</summary>
      <param name="searchPattern">Строка поиска, которая будет сравниваться с именами каталогов. Этот параметр может содержать сочетание допустимого литерального пути и подстановочного символа (* и ?), но не поддерживает регулярные выражения.</param>
      <param name="enumerationOptions">Объект, описывающий конфигурацию поиска и перечисления для использования.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Путь, содержащийся в объекте <see cref="T:System.IO.DirectoryInfo" /> , является недействительным (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <returns>Перечисляемая коллекция сведений об объектах файловой системы, соответствующая параметру <paramref name="searchPattern" /> и <paramref name="enumerationOptions" />.</returns>
    </member>
    <member name="M:System.IO.DirectoryInfo.EnumerateFileSystemInfos(System.String,System.IO.SearchOption)">
      <summary>Возвращает перечисляемую коллекцию сведений о файловой системе, соответствующую указанному шаблону поиска и параметру поиска в подкаталогах.</summary>
      <param name="searchPattern">Строка поиска, которая будет сравниваться с именами каталогов.  Этот параметр может содержать сочетание допустимого литерального пути и подстановочного символа (* и ?), но не поддерживает регулярные выражения.</param>
      <param name="searchOption">Одно из значений перечисления, определяющее, следует ли выполнять поиск только в текущем каталоге или также во всех его подкаталогах. Значение по умолчанию — <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="searchOption" /> не является допустимым значением <see cref="T:System.IO.SearchOption" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Путь, содержащийся в объекте <see cref="T:System.IO.DirectoryInfo" /> , является недействительным (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <returns>Перечисляемая коллекция сведений об объектах файловой системы, соответствующая параметру <paramref name="searchPattern" /> и <paramref name="searchOption" />.</returns>
    </member>
    <member name="M:System.IO.DirectoryInfo.GetDirectories">
      <summary>Возвращает подкаталоги текущего каталога.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">Путь, содержащийся в объекте <see cref="T:System.IO.DirectoryInfo" />, является недействительным (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <returns>Массив объектов <see cref="T:System.IO.DirectoryInfo" />.</returns>
    </member>
    <member name="M:System.IO.DirectoryInfo.GetDirectories(System.String)">
      <summary>Возвращает массив каталогов текущего объекта <see cref="T:System.IO.DirectoryInfo" />, отвечающих заданным условиям поиска.</summary>
      <param name="searchPattern">Строка поиска, которая будет сравниваться с именами каталогов.  Этот параметр может содержать сочетание допустимого литерального пути и подстановочного символа (* и ?), но не поддерживает регулярные выражения.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="searchPattern" /> содержит один или несколько недопустимых символов, определенных методом <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Путь, содержащийся в объекте <see langword="DirectoryInfo" /> , является недействительным (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <returns>Массив элементов типа <see langword="DirectoryInfo" />, отвечающих критерию <paramref name="searchPattern" />.</returns>
    </member>
    <member name="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.EnumerationOptions)">
      <summary>Возвращает массив каталогов при использовании <see cref="T:System.IO.DirectoryInfo" />, соответствующий указанному шаблону поиска и параметрам перечисления.</summary>
      <param name="searchPattern">Строка поиска, которая будет сравниваться с именами каталогов. Этот параметр может содержать сочетание допустимого литерального пути и подстановочного символа (* и ?), но не поддерживает регулярные выражения.</param>
      <param name="enumerationOptions">Объект, описывающий конфигурацию поиска и перечисления для использования.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="searchPattern" /> содержит один или несколько недопустимых символов, определенных методом <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Путь, содержащийся в объекте <see langword="DirectoryInfo" /> , является недействительным (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <returns>Массив элементов типа <see langword="DirectoryInfo" />, соответствующий <paramref name="searchPattern" /> и <paramref name="enumerationOptions" />.</returns>
    </member>
    <member name="M:System.IO.DirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
      <summary>Возвращает массив каталогов в текущем объекте <see cref="T:System.IO.DirectoryInfo" />, отвечающих заданным условиям поиска, с использованием значения, которое позволяет определить, следует ли выполнять поиск в подкаталогах.</summary>
      <param name="searchPattern">Строка поиска, которая будет сравниваться с именами каталогов.  Этот параметр может содержать сочетание допустимого литерального пути и подстановочного символа (* и ?), но не поддерживает регулярные выражения.</param>
      <param name="searchOption">Одно из значений перечисления, определяющее, следует ли выполнять поиск только в текущем каталоге или также во всех его подкаталогах.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="searchPattern" /> содержит один или несколько недопустимых символов, определенных методом <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="searchOption" /> не является допустимым значением <see cref="T:System.IO.SearchOption" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Путь, содержащийся в объекте <see langword="DirectoryInfo" /> , является недействительным (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <returns>Массив элементов типа <see langword="DirectoryInfo" />, отвечающих критерию <paramref name="searchPattern" />.</returns>
    </member>
    <member name="M:System.IO.DirectoryInfo.GetFiles">
      <summary>Возвращает список файлов текущего каталога.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">Недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <returns>Массив типа <see cref="T:System.IO.FileInfo" />.</returns>
    </member>
    <member name="M:System.IO.DirectoryInfo.GetFiles(System.String)">
      <summary>Возвращает список файлов текущего каталога, соответствующих заданному шаблону поиска.</summary>
      <param name="searchPattern">Строка поиска, которая будет сравниваться с именами файлов.  Этот параметр может содержать сочетание допустимого литерального пути и подстановочного символа (* и ?), но не поддерживает регулярные выражения.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="searchPattern" /> содержит один или несколько недопустимых символов, определенных методом <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Недопустимый путь (например, указывающий на несопоставленный диск).</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <returns>Массив типа <see cref="T:System.IO.FileInfo" />.</returns>
    </member>
    <member name="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.EnumerationOptions)">
      <summary>Возвращает список файлов из текущего каталога, соответствующий указанному шаблону поиска и параметрам перечисления.</summary>
      <param name="searchPattern">Строка поиска, которая будет сравниваться с именами файлов. Этот параметр может содержать сочетание допустимого литерального пути и подстановочного символа (* и ?), но не поддерживает регулярные выражения.</param>
      <param name="enumerationOptions">Объект, описывающий конфигурацию поиска и перечисления для использования.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="searchPattern" /> содержит один или несколько недопустимых символов, определенных методом <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Недопустимый путь (например, указывающий на несопоставленный диск).</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <returns>Массив строго типизированных объектов <see cref="T:System.IO.FileInfo" />, соответствующий <paramref name="searchPattern" /> и <paramref name="enumerationOptions" />.</returns>
    </member>
    <member name="M:System.IO.DirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
      <summary>Возвращает список файлов из текущего каталога, соответствующих заданному шаблону поиска, с использованием значения, которое позволяет определить, следует ли выполнять поиск в подкаталогах.</summary>
      <param name="searchPattern">Строка поиска, которая будет сравниваться с именами файлов.  Этот параметр может содержать сочетание допустимого литерального пути и подстановочного символа (* и ?), но не поддерживает регулярные выражения.</param>
      <param name="searchOption">Одно из значений перечисления, определяющее, следует ли выполнять поиск только в текущем каталоге или также во всех его подкаталогах.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="searchPattern" /> содержит один или несколько недопустимых символов, определенных методом <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="searchOption" /> не является допустимым значением <see cref="T:System.IO.SearchOption" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Недопустимый путь (например, указывающий на несопоставленный диск).</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <returns>Массив типа <see cref="T:System.IO.FileInfo" />.</returns>
    </member>
    <member name="M:System.IO.DirectoryInfo.GetFileSystemInfos">
      <summary>Возвращает массив строго типизированных объектов <see cref="T:System.IO.FileSystemInfo" />, представляющих все файлы и подкаталоги в том или ином каталоге.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">Недопустимый путь (например, указывающий на несопоставленный диск).</exception>
      <returns>Массив строго типизированных записей <see cref="T:System.IO.FileSystemInfo" />.</returns>
    </member>
    <member name="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String)">
      <summary>Извлекает массив строго типизированных объектов <see cref="T:System.IO.FileSystemInfo" />, представляющих файлы и подкаталоги, соответствующие заданным критериям поиска.</summary>
      <param name="searchPattern">Строка поиска, которая будет сравниваться с именами каталогов и файлов.  Этот параметр может содержать сочетание допустимого литерального пути и подстановочного символа (* и ?), но не поддерживает регулярные выражения.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="searchPattern" /> содержит один или несколько недопустимых символов, определенных методом <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <returns>Массив строго типизированных объектов <see langword="FileSystemInfo" />, соответствующих критерию поиска.</returns>
    </member>
    <member name="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.EnumerationOptions)">
      <summary>Извлекает массив строго типизированных объектов <see cref="T:System.IO.FileSystemInfo" />, представляющих файлы и подкаталоги, соответствующие указанному шаблону поиска и параметрам перечисления.</summary>
      <param name="searchPattern">Строка поиска, которая будет сравниваться с именами каталогов и файлов. Этот параметр может содержать сочетание допустимого литерального пути и подстановочного символа (* и ?), но не поддерживает регулярные выражения.</param>
      <param name="enumerationOptions">Объект, описывающий конфигурацию поиска и перечисления для использования.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="searchPattern" /> содержит один или несколько недопустимых символов, определенных методом <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <returns>Массив строго типизированных объектов <see langword="FileSystemInfo" />, соответствующих <paramref name="searchPattern" /> и <paramref name="enumerationOptions" />.</returns>
    </member>
    <member name="M:System.IO.DirectoryInfo.GetFileSystemInfos(System.String,System.IO.SearchOption)">
      <summary>Извлекает массив объектов <see cref="T:System.IO.FileSystemInfo" />, представляющих файлы и подкаталоги, соответствующие заданным критериям поиска.</summary>
      <param name="searchPattern">Строка поиска, которая будет сравниваться с именами каталогов и файлов.  Этот параметр может содержать сочетание допустимого литерального пути и подстановочного символа (* и ?), но не поддерживает регулярные выражения.</param>
      <param name="searchOption">Одно из значений перечисления, определяющее, следует ли выполнять поиск только в текущем каталоге или также во всех его подкаталогах. Значение по умолчанию — <see cref="F:System.IO.SearchOption.TopDirectoryOnly" />.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="searchPattern" /> содержит один или несколько недопустимых символов, определенных методом <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="searchPattern" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="searchOption" /> не является допустимым значением <see cref="T:System.IO.SearchOption" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <returns>Массив элементов файловой системы, удовлетворяющих критериям поиска.</returns>
    </member>
    <member name="M:System.IO.DirectoryInfo.MoveTo(System.String)">
      <summary>Перемещает экземпляр <see cref="T:System.IO.DirectoryInfo" /> и его содержимое в местоположение, на которое указывает новый путь.</summary>
      <param name="destDirName">Имя и путь к местоположению, в которое необходимо переместить указанный каталог. Место назначения не должно находиться на другом томе устройства или в каталоге с идентичным именем. Оно должно представлять собой существующий каталог, в который перемещаемый каталог будет добавлен в виде подкаталога.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destDirName" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="destDirName" /> является пустой строкой ("").</exception>
      <exception cref="T:System.IO.IOException">Была предпринята попытка переместить каталог в другой том.  
  
-или- 
 <paramref name="destDirName" /> уже существует.  
  
-или- 
Отсутствует авторизация для доступа по этому пути.  
  
-или- 
Каталог перемещается, и каталог назначения имеет то же самое имя.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Не удалось найти каталог назначения.</exception>
    </member>
    <member name="M:System.IO.DirectoryInfo.ToString">
      <summary>Возвращает исходный путь, переданный в конструктор <see cref="T:System.IO.DirectoryInfo" />. Используйте свойства <see cref="P:System.IO.DirectoryInfo.FullName" /> или <see cref="P:System.IO.DirectoryInfo.Name" /> для полного пути или имени файла или каталога вместо этого метода.</summary>
      <returns>Исходный путь, переданный пользователем.</returns>
    </member>
    <member name="P:System.IO.DirectoryInfo.Exists">
      <summary>Получает значение, определяющее наличие каталога.</summary>
      <returns>Значение <see langword="true" />, если каталог существует; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.IO.DirectoryInfo.Name">
      <summary>Получает имя данного экземпляра <see cref="T:System.IO.DirectoryInfo" />.</summary>
      <returns>Имя каталога.</returns>
    </member>
    <member name="P:System.IO.DirectoryInfo.Parent">
      <summary>Получает родительский каталог заданного подкаталога.</summary>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <returns>Родительский каталог или, <see langword="null" /> Если путь имеет значение null, или путь к файлу указывает на корень (например \ ,, C:\ или \\server\share ).</returns>
    </member>
    <member name="P:System.IO.DirectoryInfo.Root">
      <summary>Получает Корневую часть каталога.</summary>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <returns>Объект, представляющий корень каталога.</returns>
    </member>
    <member name="T:System.IO.Enumeration.FileSystemEntry">
      <summary>Предоставляет представление <see cref="T:System.IO.FileSystemInfo" /> более низкого уровня для помощи в обработке и фильтрации результатов поиска.</summary>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEntry.ToFileSystemInfo">
      <summary>Преобразует значение данного экземпляра в <see cref="T:System.IO.FileSystemInfo" />.</summary>
      <returns>Значение данного экземпляра в виде <see cref="T:System.IO.FileSystemInfo" />.</returns>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEntry.ToFullPath">
      <summary>Возвращает полный путь к результату поиска.</summary>
      <returns>Строка, представляющая полный путь.</returns>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEntry.ToSpecifiedFullPath">
      <summary>Возвращает полный путь результатов поиска на основе указанного изначально пути.</summary>
      <returns>Строка, представляющая полный путь.</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEntry.Attributes">
      <summary>Возвращает атрибуты этой записи.</summary>
      <returns>Атрибуты для этой записи.</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEntry.CreationTimeUtc">
      <summary>Возвращает время создания записи или самую раннюю доступную отметку времени, если операционная система не поддерживает отметки времени создания.</summary>
      <returns>Время создания записи.</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEntry.Directory">
      <summary>Возвращает полный путь к каталогу, где находится эта запись.</summary>
      <returns>Полный путь к каталогу этой записи.</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEntry.FileName">
      <summary>Возвращает имя файла для этой записи.</summary>
      <returns>Имя файла этой записи.</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEntry.IsDirectory">
      <summary>Возвращает значение, указывающее, является ли эта запись каталогом.</summary>
      <returns>
        <see langword="true" /> значение, если запись является каталогом; в противном случае — <see langword="false" /> .</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEntry.IsHidden">
      <summary>Возвращает значение, указывающее, имеет ли файл атрибут Hidden.</summary>
      <returns>
        <see langword="true" /> значение, если файл содержит атрибут Hidden; в противном случае — <see langword="false" /> .</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEntry.LastAccessTimeUtc">
      <summary>Возвращает смещение даты и времени, представляющее время последнего обращения в формате UTC.</summary>
      <returns>Время последнего доступа в формате UTC.</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEntry.LastWriteTimeUtc">
      <summary>Возвращает смещение даты и времени, представляющее время последней записи в формате UTC.</summary>
      <returns>Время последней записи в формате UTC.</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEntry.Length">
      <summary>Возвращает длину файла в байтах.</summary>
      <returns>Длина файла в байтах.</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEntry.OriginalRootDirectory">
      <summary>Возвращает корневой каталог перечисления, указанный в конструкторе.</summary>
      <returns>Исходный корневой каталог.</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEntry.RootDirectory">
      <summary>Возвращает полный путь корневого каталога перечисления.</summary>
      <returns>Корневой каталог.</returns>
    </member>
    <member name="T:System.IO.Enumeration.FileSystemEnumerable`1">
      <summary>Позволяет использовать настраиваемые предикаты фильтра и преобразовывать делегаты для целей перечисления.</summary>
      <typeparam name="TResult">Тип, инкапсулируемого этим перечислимым типом.</typeparam>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEnumerable`1.#ctor(System.String,System.IO.Enumeration.FileSystemEnumerable{`0}.FindTransform,System.IO.EnumerationOptions)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.Enumeration.FileSystemEnumerable`1" /> с определенными параметрами поиска и фильтрации.</summary>
      <param name="directory">Путь к каталогу, в котором будет выполнено перечисление.</param>
      <param name="transform">Метод делегата для преобразования необработанных найденных данных в результат.</param>
      <param name="options">Объект, описывающий параметры перечисления.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="directory" /> или <paramref name="transform" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Путь <paramref name="directory" /> пуст.

-или-

<paramref name="directory" /> содержит нуль-символ "\0".</exception>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEnumerable`1.GetEnumerator">
      <summary>Извлекает перечислитель для этого типа результата.</summary>
      <returns>Перечислитель.</returns>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEnumerable`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Возвращает перечислитель, который может использоваться для итерации.</summary>
      <returns>Экземпляр перечислителя.</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEnumerable`1.ShouldIncludePredicate">
      <summary>Возвращает или задает предикат, который может быть использован для проверки необходимости включения TResult.</summary>
      <returns>Предикат include.</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEnumerable`1.ShouldRecursePredicate">
      <summary>Возвращает или задает предикат, который может быть использован для проверки необходимости рекурсивного обхода TResult.</summary>
      <returns>Рекурсивный предикат.</returns>
    </member>
    <member name="T:System.IO.Enumeration.FileSystemEnumerable`1.FindPredicate">
      <summary>Инкапсулирует метод для фильтрации результатов поиска.</summary>
      <param name="entry">Ссылка на запись файловой системы, которая будет оцениваться по условию предиката.</param>
      <returns>Значение <see langword="true" />, если условие предиката выполнено; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="T:System.IO.Enumeration.FileSystemEnumerable`1.FindTransform">
      <summary>Инкапсулирует метод преобразования необработанных найденных данных в результат.</summary>
      <param name="entry">Ссылка на запись файловой системы, которая будет оцениваться по условию предиката.</param>
      <returns>Экземпляр типа, инкапсулируемого этим делегатом.</returns>
    </member>
    <member name="T:System.IO.Enumeration.FileSystemEnumerator`1">
      <summary>Перечисляет элементы файловой системы указанного типа, которые ищутся и фильтруются по <see cref="T:System.IO.Enumeration.FileSystemEnumerable`1" />.</summary>
      <typeparam name="TResult">Тип результата, полученного этим перечислителем файловой системы.</typeparam>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEnumerator`1.#ctor(System.String,System.IO.EnumerationOptions)">
      <summary>Инкапсулирует операцию поиска.</summary>
      <param name="directory">Каталог, в котором необходимо выполнить поиск.</param>
      <param name="options">Используемые параметры перечисления.</param>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEnumerator`1.ContinueOnError(System.Int32)">
      <summary>При переопределении в производном классе возвращает значение, указывающее, следует ли продолжить выполнение или породить исключение по умолчанию.</summary>
      <param name="error">Исходный код ошибки.</param>
      <returns>
        <see langword="true" /> для продолжения; <see langword="false" /> — для порождения исключения по умолчанию для данной ошибки.</returns>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEnumerator`1.Dispose">
      <summary>Освобождает ресурсы, используемые текущим экземпляром класса <see cref="T:System.IO.Enumeration.FileSystemEnumerator`1" />.</summary>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEnumerator`1.Dispose(System.Boolean)">
      <summary>Если переопределено в производном классе, освобождает неуправляемые ресурсы, используемые классом <see cref="T:System.IO.Enumeration.FileSystemEnumerator`1" />, и опционально освобождает управляемые ресурсы.</summary>
      <param name="disposing">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</param>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEnumerator`1.MoveNext">
      <summary>Перемещает перечислитель к следующему элементу <see cref="T:System.IO.Enumeration.FileSystemEnumerator`1" />.</summary>
      <returns>
        <see langword="true" />, если перечислитель успешно перемещен к следующему элементу; <see langword="false" />, если пройден конец перечислителя.</returns>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEnumerator`1.OnDirectoryFinished(System.ReadOnlySpan{System.Char})">
      <summary>При переопределении в производном классе этот метод вызывается каждый раз, когда достигается конец каталога.</summary>
      <param name="directory">Путь к каталогу в виде диапазона, доступного только для чтения.</param>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEnumerator`1.Reset">
      <summary>Всегда создает исключение <see cref="T:System.NotSupportedException" />.</summary>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEnumerator`1.ShouldIncludeEntry(System.IO.Enumeration.FileSystemEntry@)">
      <summary>При переопределении в производном классе указывает, следует ли включать заданную запись файловой системы в результаты.</summary>
      <param name="entry">Ссылка на запись файловой системы.</param>
      <returns>Значение <see langword="true" />, если указанная запись файловой системы должна быть включена в результаты; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEnumerator`1.ShouldRecurseIntoEntry(System.IO.Enumeration.FileSystemEntry@)">
      <summary>При переопределении в производном классе указывает, следует ли рекурсивно проходить заданную запись файловой системы.</summary>
      <param name="entry">Ссылка на запись файловой системы.</param>
      <returns>Значение <see langword="true" />, если указанная запись каталога требует рекурсивного прохода; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemEnumerator`1.TransformEntry(System.IO.Enumeration.FileSystemEntry@)">
      <summary>При переопределении в производном классе формирует тип результата из текущей записи.</summary>
      <param name="entry">Ссылка на запись файловой системы.</param>
      <returns>Тип результата из текущей записи.</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEnumerator`1.Current">
      <summary>Возвращает текущий посещаемый элемент.</summary>
      <returns>Текущий посещаемый элемент.</returns>
    </member>
    <member name="P:System.IO.Enumeration.FileSystemEnumerator`1.System#Collections#IEnumerator#Current">
      <summary>Возвращает текущий посещаемый объект.</summary>
      <returns>Текущий посещаемый объект.</returns>
    </member>
    <member name="T:System.IO.Enumeration.FileSystemName">
      <summary>Предоставляет методы для сопоставления имен файловой системы.</summary>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemName.MatchesSimpleExpression(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.Boolean)">
      <summary>Проверяет, соответствует ли заданное выражение заданному имени. Поддерживаются следующие подстановочные знаки: * и ?. Escape-символ обратной косой черты " \ ".</summary>
      <param name="expression">Выражение для сопоставления.</param>
      <param name="name">Имя для сопоставления с выражением.</param>
      <param name="ignoreCase">
        <see langword="true" />, чтобы не учитывать регистр (по умолчанию); <see langword="false" />, если сопоставление должно учитывать регистр.</param>
      <returns>
        <see langword="true" />, если заданное выражение соответствует заданному имени, иначе — <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemName.MatchesWin32Expression(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.Boolean)">
      <summary>Проверяет, соответствует ли заданное выражение Win32 заданному имени. Поддерживаются следующие подстановочные знаки: * и ?, &lt; и &gt;, ". Для экранирования используется символ обратной косой черты (\').</summary>
      <param name="expression">Выражение для сопоставления, например "*.foo".</param>
      <param name="name">Имя для сопоставления с выражением.</param>
      <param name="ignoreCase">
        <see langword="true" />, чтобы не учитывать регистр (по умолчанию); <see langword="false" />, если сопоставление должно учитывать регистр.</param>
      <returns>
        <see langword="true" />, если заданное выражение соответствует заданному имени, иначе — <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.Enumeration.FileSystemName.TranslateWin32Expression(System.String)">
      <summary>Преобразует заданное выражение Win32. Заменяет символы * и ? на &lt;, &gt; и ", чтобы соответствовать поведению Win32.</summary>
      <param name="expression">Выражение для преобразования.</param>
      <returns>Строка с преобразованным выражением Win32.</returns>
    </member>
    <member name="T:System.IO.EnumerationOptions">
      <summary>Предоставляет параметры перечисления файлов и каталогов.</summary>
    </member>
    <member name="M:System.IO.EnumerationOptions.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.EnumerationOptions" /> с рекомендуемыми параметрами по умолчанию.</summary>
    </member>
    <member name="P:System.IO.EnumerationOptions.AttributesToSkip">
      <summary>Возвращает или задает пропускаемые атрибуты. Значение по умолчанию — <c>FileAttributes.Hidden | FileAttributes.System</c>.</summary>
      <returns>Пропускаемые атрибуты.</returns>
    </member>
    <member name="P:System.IO.EnumerationOptions.BufferSize">
      <summary>Возвращает или задает рекомендуемый размер буфера в байтах. Значение по умолчанию — 0 (без рекомендаций).</summary>
      <returns>Размер буфера.</returns>
    </member>
    <member name="P:System.IO.EnumerationOptions.IgnoreInaccessible">
      <summary>Возвращает или задает значение, указывающее, следует ли пропускать файлы или каталоги при отказе в доступе (например, <see cref="T:System.UnauthorizedAccessException" /> или <see cref="T:System.Security.SecurityException" />). Значение по умолчанию — <see langword="true" />.</summary>
      <returns>
        <see langword="true" /> Пропуск файлов или каталогов иннацессибле; в противном случае — <see langword="false" /> .</returns>
    </member>
    <member name="P:System.IO.EnumerationOptions.MatchCasing">
      <summary>Возвращает или задает поведение сопоставления вариантов.</summary>
      <returns>Одно из значений перечисления, указывающее поведение сопоставления вариантов.</returns>
    </member>
    <member name="P:System.IO.EnumerationOptions.MatchType">
      <summary>Возвращает или задает тип соответствия.</summary>
      <returns>Одно из значений перечисления, указывающее тип соответствия.</returns>
    </member>
    <member name="P:System.IO.EnumerationOptions.RecurseSubdirectories">
      <summary>Возвращает или задает значение, указывающее, следует ли выполнять рекурсивный перебор во вложенных каталогах при перечислении. Значение по умолчанию — <see langword="false" />.</summary>
      <returns>
        <see langword="true" /> для рекурсии в подкаталоги; в противном случае — <see langword="false" /> .</returns>
    </member>
    <member name="P:System.IO.EnumerationOptions.ReturnSpecialDirectories">
      <summary>Возвращает или задает значение, указывающее, следует ли возвращать специальные записи каталога "." и "..".</summary>
      <returns>
        <see langword="true" /> для получения специальных записей каталога "." и ".."; в противном случае — <see langword="false" /> .</returns>
    </member>
    <member name="T:System.IO.File">
      <summary>Предоставляет статические методы для создания, копирования, удаления, перемещения и открытия одного файла, а также помогает при создании объектов <see cref="T:System.IO.FileStream" />.</summary>
    </member>
    <member name="M:System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Добавляет строки в файл, затем закрывает файл. Если указанный файл не существует, этот метод создает файл, записывает в него указанные строки и затем закрывает файл.</summary>
      <param name="path">Файл, в который добавляются строки. Если файл не существует, он создается.</param>
      <param name="contents">Строки, добавляемые в файл.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или еще один недопустимый символ, заданный методом <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">Либо <paramref name="path" />, либо <paramref name="contents" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Параметр <paramref name="path" /> является недопустимым (например, каталог не существует или указан несопоставленный диск).</exception>
      <exception cref="T:System.IO.FileNotFoundException">Файл, заданный параметром <paramref name="path" />, не обнаружен.</exception>
      <exception cref="T:System.IO.IOException">При открытии файла произошла ошибка ввода-вывода.</exception>
      <exception cref="T:System.IO.PathTooLongException">Длина параметра <paramref name="path" /> превышает максимальную длину, определенную в системе.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="path" /> задан в недопустимом формате.</exception>
      <exception cref="T:System.Security.SecurityException">Вызывающий объект не имеет разрешения на запись в файл.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Параметр <paramref name="path" /> указывает файл, доступный только для чтения.  
  
-или- 
Эта операция не поддерживается на текущей платформе.  
  
-или- 
 <paramref name="path" /> является каталогом.</exception>
    </member>
    <member name="M:System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)">
      <summary>Добавляет строки в файл, используя заданную кодировку, затем закрывает файл. Если указанный файл не существует, этот метод создает файл, записывает в него указанные строки и затем закрывает файл.</summary>
      <param name="path">Файл, в который добавляются строки. Если файл не существует, он создается.</param>
      <param name="contents">Строки, добавляемые в файл.</param>
      <param name="encoding">Кодировка символов, которую нужно использовать.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или еще один недопустимый символ, заданный методом <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">Какой-либо из параметров <paramref name="path" />, <paramref name="contents" /> или <paramref name="encoding" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Параметр <paramref name="path" /> является недопустимым (например, каталог не существует или указан несопоставленный диск).</exception>
      <exception cref="T:System.IO.FileNotFoundException">Файл, заданный параметром <paramref name="path" />, не обнаружен.</exception>
      <exception cref="T:System.IO.IOException">При открытии файла произошла ошибка ввода-вывода.</exception>
      <exception cref="T:System.IO.PathTooLongException">Длина параметра <paramref name="path" /> превышает максимальную длину, определенную в системе.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="path" /> задан в недопустимом формате.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Параметр <paramref name="path" /> указывает файл, доступный только для чтения.  
  
-или- 
Эта операция не поддерживается на текущей платформе.  
  
-или- 
 <paramref name="path" /> является каталогом.  
  
-или- 
У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="M:System.IO.File.AppendAllLinesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding,System.Threading.CancellationToken)">
      <summary>Асинхронно добавляет строки в файл, используя заданную кодировку, затем закрывает файл. Если указанный файл не существует, этот метод создает файл, записывает в него указанные строки и затем закрывает файл.</summary>
      <param name="path">Файл, в который добавляются строки. Если файл не существует, он создается.</param>
      <param name="contents">Строки, добавляемые в файл.</param>
      <param name="encoding">Кодировка символов, которую нужно использовать.</param>
      <param name="cancellationToken">Токен для отслеживания запросов отмены. Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Задача, представляющая асинхронную операцию добавления.</returns>
    </member>
    <member name="M:System.IO.File.AppendAllLinesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
      <summary>Асинхронно добавляет строки в файл, затем закрывает файл. Если указанный файл не существует, этот метод создает файл, записывает в него указанные строки и затем закрывает файл.</summary>
      <param name="path">Файл, в который добавляются строки. Если файл не существует, он создается.</param>
      <param name="contents">Строки, добавляемые в файл.</param>
      <param name="cancellationToken">Токен для отслеживания запросов отмены. Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Задача, представляющая асинхронную операцию добавления.</returns>
    </member>
    <member name="M:System.IO.File.AppendAllText(System.String,System.String)">
      <summary>Открывает файл, добавляет в него указанную строку и затем закрывает файл. Если файл не существует, этот метод создает файл, записывает в него указанную строку и затем закрывает файл.</summary>
      <param name="path">Файл, в который нужно добавить заданную строку.</param>
      <param name="contents">Строка, которую нужно добавить в файл.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, заданных методом <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указанный путь является недопустимым (например, каталог не существует или находится на несопоставленном диске).</exception>
      <exception cref="T:System.IO.IOException">При открытии файла произошла ошибка ввода-вывода.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Параметр <paramref name="path" /> указывает файл, доступный только для чтения.  
  
-или- 
Эта операция не поддерживается на текущей платформе.  
  
-или- 
 Параметр<paramref name="path" /> определяет каталог.  
  
-или- 
У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="path" /> задан в недопустимом формате.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="M:System.IO.File.AppendAllText(System.String,System.String,System.Text.Encoding)">
      <summary>Добавляет указанную строку в файл в указанной кодировке, создавая файл, если он не существует.</summary>
      <param name="path">Файл, в который нужно добавить заданную строку.</param>
      <param name="contents">Строка, которую нужно добавить в файл.</param>
      <param name="encoding">Кодировка символов, которую нужно использовать.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, заданных методом <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указанный путь является недопустимым (например, каталог не существует или находится на несопоставленном диске).</exception>
      <exception cref="T:System.IO.IOException">При открытии файла произошла ошибка ввода-вывода.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Параметр <paramref name="path" /> указывает файл, доступный только для чтения.  
  
-или- 
Эта операция не поддерживается на текущей платформе.  
  
-или- 
 Параметр<paramref name="path" /> определяет каталог.  
  
-или- 
У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="path" /> задан в недопустимом формате.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="M:System.IO.File.AppendAllTextAsync(System.String,System.String,System.Text.Encoding,System.Threading.CancellationToken)">
      <summary>Асинхронно открывает или создает файл, если он еще не существует, добавляет указанную строку в файл в указанной кодировке, а затем закрывает файл.</summary>
      <param name="path">Файл, в который нужно добавить заданную строку.</param>
      <param name="contents">Строка, которую нужно добавить в файл.</param>
      <param name="encoding">Кодировка символов, которую нужно использовать.</param>
      <param name="cancellationToken">Токен для отслеживания запросов отмены. Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Задача, представляющая асинхронную операцию добавления.</returns>
    </member>
    <member name="M:System.IO.File.AppendAllTextAsync(System.String,System.String,System.Threading.CancellationToken)">
      <summary>Асинхронно открывает или создает файл, если он еще не существует, добавляет указанную строку в файл, а затем закрывает файл.</summary>
      <param name="path">Файл, в который нужно добавить заданную строку.</param>
      <param name="contents">Строка, которую нужно добавить в файл.</param>
      <param name="cancellationToken">Токен для отслеживания запросов отмены. Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Задача, представляющая асинхронную операцию добавления.</returns>
    </member>
    <member name="M:System.IO.File.AppendText(System.String)">
      <summary>Создает объект <see cref="T:System.IO.StreamWriter" />, добавляющий текст с кодировкой UTF-8 в существующий файл, или в новый файл, если указанный файл не существует.</summary>
      <param name="path">Путь к файлу, в который производится добавление.</param>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, заданных методом <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указанный путь является недопустимым (например, каталог не существует или находится на несопоставленном диске).</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="path" /> задан в недопустимом формате.</exception>
      <returns>Модуль записи потока, который добавляет текст в кодировке UTF-8 в указанный файл или в новый файл.</returns>
    </member>
    <member name="M:System.IO.File.Copy(System.String,System.String)">
      <summary>Копирует существующий файл в новый файл. Перезапись файла с тем же именем не разрешена.</summary>
      <param name="sourceFileName">Копируемый файл.</param>
      <param name="destFileName">Имя целевого файла. Это не может быть имя каталога или имя существующего файла.</param>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourceFileName" /> или <paramref name="destFileName" /> представляет собой строку нулевой длины, содержащую только пробелы или содержащую один или несколько недопустимых символов, заданных методом <see cref="F:System.IO.Path.InvalidPathChars" />.  
  
-или- 
 Параметр <paramref name="sourceFileName" /> или <paramref name="destFileName" /> определяет каталог.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="sourceFileName" /> или <paramref name="destFileName" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">В <paramref name="sourceFileName" /> или <paramref name="destFileName" /> указан недопустимый путь (например, ведущий на несопоставленный диск).</exception>
      <exception cref="T:System.IO.FileNotFoundException">Не удалось найти <paramref name="sourceFileName" />.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="destFileName" /> существует.  
  
-или- 
Произошла ошибка ввода-вывода.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="sourceFileName" /> или <paramref name="destFileName" /> имеет недопустимый формат.</exception>
    </member>
    <member name="M:System.IO.File.Copy(System.String,System.String,System.Boolean)">
      <summary>Копирует существующий файл в новый файл. Перезапись файла с тем же именем разрешена.</summary>
      <param name="sourceFileName">Копируемый файл.</param>
      <param name="destFileName">Имя целевого файла. Это не может быть имя каталога.</param>
      <param name="overwrite">
        <see langword="true" />, если конечный файл можно перезаписать; в противном случае — <see langword="false" />.</param>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.  
  
-или- 
 Объект <paramref name="destFileName" /> доступен только для чтения.
        
-или- 
<paramref name="overwrite" /> равен <see langword="true" />, <paramref name="destFileName" /> существует и скрыт, но <paramref name="sourceFileName" /> не скрыт.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourceFileName" /> или <paramref name="destFileName" /> представляет собой строку нулевой длины, содержащую только пробелы или содержащую один или несколько недопустимых символов, заданных методом <see cref="F:System.IO.Path.InvalidPathChars" />.  
  
-или- 
 Параметр <paramref name="sourceFileName" /> или <paramref name="destFileName" /> определяет каталог.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="sourceFileName" /> или <paramref name="destFileName" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">В <paramref name="sourceFileName" /> или <paramref name="destFileName" /> указан недопустимый путь (например, ведущий на несопоставленный диск).</exception>
      <exception cref="T:System.IO.FileNotFoundException">Не удалось найти <paramref name="sourceFileName" />.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="destFileName" /> существует, и <paramref name="overwrite" /> равно <see langword="false" />.  
  
-или- 
Произошла ошибка ввода-вывода.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="sourceFileName" /> или <paramref name="destFileName" /> имеет недопустимый формат.</exception>
    </member>
    <member name="M:System.IO.File.Create(System.String)">
      <summary>Создает или перезаписывает файл в указанном пути.</summary>
      <param name="path">Путь и имя создаваемого файла.</param>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.  
  
-или- 
 Параметр <paramref name="path" /> указывает файл, доступный только для чтения.
        
-или- 
 <paramref name="path" /> указывает файл, который скрыт.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, заданных методом <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода при создании файла.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="path" /> задан в недопустимом формате.</exception>
      <returns>
        <see cref="T:System.IO.FileStream" />, обеспечивающий доступ для чтения и записи к файлу, указанному в <paramref name="path" />.</returns>
    </member>
    <member name="M:System.IO.File.Create(System.String,System.Int32)">
      <summary>Создает или перезаписывает файл по заданному пути с указанием размер буфера.</summary>
      <param name="path">Путь и имя создаваемого файла.</param>
      <param name="bufferSize">Число байтов, буферизируемых при чтении и записи в данный файл.</param>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.  
  
-или- 
 Параметр <paramref name="path" /> указывает файл, доступный только для чтения.
        
-или- 
 <paramref name="path" /> указывает файл, который скрыт.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, заданных методом <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода при создании файла.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="path" /> задан в недопустимом формате.</exception>
      <returns>
        <see cref="T:System.IO.FileStream" /> с заданным размером буфера, который обеспечивает доступ для чтения и записи к файлу, указанному в <paramref name="path" />.</returns>
    </member>
    <member name="M:System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions)">
      <summary>Создает или перезаписывает файл по заданному пути с указанием размера буфера и параметров, которые описывают, как создавать или перезаписывать файл.</summary>
      <param name="path">Путь и имя создаваемого файла.</param>
      <param name="bufferSize">Число байтов, буферизируемых при чтении и записи в данный файл.</param>
      <param name="options">Одно из значений <see cref="T:System.IO.FileOptions" />, которое описывает, как создавать или перезаписывать файл.</param>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.  
  
-или- 
 Параметр <paramref name="path" /> указывает файл, доступный только для чтения.
        
-или- 
 <paramref name="path" /> указывает файл, который скрыт.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, заданных методом <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода при создании файла.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="path" /> задан в недопустимом формате.</exception>
      <returns>Новый файл с заданным размером буфера.</returns>
    </member>
    <member name="M:System.IO.File.CreateText(System.String)">
      <summary>Создается или открывается файл для записи текста в кодировке UTF-8. Если файл уже существует, его содержимое перезаписывается.</summary>
      <param name="path">Файл, который нужно открыть для записи.</param>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.  
  
-или- 
 Параметр <paramref name="path" /> указывает файл, доступный только для чтения.
        
-или- 
 <paramref name="path" /> указывает файл, который скрыт.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, заданных методом <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="path" /> задан в недопустимом формате.</exception>
      <returns>
        <see cref="T:System.IO.StreamWriter" />, выполняющий запись в указанный файл в кодировке UTF-8.</returns>
    </member>
    <member name="M:System.IO.File.Decrypt(System.String)">
      <summary>Расшифровывает файл, зашифрованный текущей учетной записью с помощью метода <see cref="M:System.IO.File.Encrypt(System.String)" />.</summary>
      <param name="path">Путь, описывающий файл, который нужно расшифровать.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, заданных методом <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.DriveNotFoundException">Указан недопустимый диск.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Файл, описываемый параметром <paramref name="path" />, не найден.</exception>
      <exception cref="T:System.IO.IOException">При открытии файла произошла ошибка ввода-вывода. Например зашифрованный файл уже открыт.  
  
 -или-  
  
 Эта операция не поддерживается на текущей платформе.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Текущая операционная система не является системой Windows NT или более поздней версии.</exception>
      <exception cref="T:System.NotSupportedException">Файловая система не является системой NTFS.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Параметр <paramref name="path" /> указывает файл, доступный только для чтения.  
  
-или- 
Эта операция не поддерживается на текущей платформе.  
  
-или- 
Параметр <paramref name="path" /> указывает каталог.  
  
-или- 
У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="M:System.IO.File.Delete(System.String)">
      <summary>Удаляет указанный файл.</summary>
      <param name="path">Имя файла, предназначенного для удаления. Подстановочные знаки не поддерживаются.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, заданных методом <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.IO.IOException">Указанный файл используется.  
  
-или- 
Для файла имеется открытый дескриптор, а операционной системой является Windows XP или более ранней версии. Этот открытый дескриптор может быть результатом перечисления каталогов и файлов. Дополнительные сведения см. в разделе Практическое руководство. Перечисление каталогов и файлов.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="path" /> задан в недопустимом формате.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.  
  
-или- 
Файл является исполняемым файлом, который уже используется.  
  
-или- 
 <paramref name="path" /> является каталогом.  
  
-или- 
 Параметр <paramref name="path" /> указывает файл только для чтения.</exception>
    </member>
    <member name="M:System.IO.File.Encrypt(System.String)">
      <summary>Шифрует файл таким образом, чтобы его можно было расшифровать только с помощью учетной записи, которая использовалась для шифрования.</summary>
      <param name="path">Путь, описывающий файл, который нужно зашифровать.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, заданных методом <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.DriveNotFoundException">Указан недопустимый диск.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Файл, описываемый параметром <paramref name="path" />, не найден.</exception>
      <exception cref="T:System.IO.IOException">При открытии файла произошла ошибка ввода-вывода.  
  
 -или-  
  
 Эта операция не поддерживается на текущей платформе.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Текущая операционная система не является системой Windows NT или более поздней версии.</exception>
      <exception cref="T:System.NotSupportedException">Файловая система не является системой NTFS.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Параметр <paramref name="path" /> указывает файл, доступный только для чтения.  
  
-или- 
Эта операция не поддерживается на текущей платформе.  
  
-или- 
Параметр <paramref name="path" /> указывает каталог.  
  
-или- 
У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="M:System.IO.File.Exists(System.String)">
      <summary>Определяет, существует ли заданный файл.</summary>
      <param name="path">Проверяемый файл.</param>
      <returns>Значение <see langword="true" />, если вызывающий оператор имеет требуемые разрешения и <paramref name="path" /> содержит имя существующего файла; в противном случае — <see langword="false" />. Этот метод также возвращает <see langword="false" />, если <paramref name="path" /> — <see langword="null" />, недействительный путь или строка нулевой длины. Если у вызывающего оператора нет достаточных полномочий на чтение заданного файла, исключения не создаются, а данный метод возвращает <see langword="false" /> вне зависимости от существования <paramref name="path" />.</returns>
    </member>
    <member name="M:System.IO.File.GetAttributes(System.String)">
      <summary>Получает значение <see cref="T:System.IO.FileAttributes" /> для файла в пути.</summary>
      <param name="path">Путь к файлу.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> является пустой строкой, содержит только пробелы или недопустимые символы.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="path" /> задан в недопустимом формате.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="path" /> представляет файл и является недопустимым, например указывает на несопоставленный диск, или же невозможно найти файл.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">
        <paramref name="path" /> представляет каталог и является недопустимым, например указывает на несопоставленный диск, или же невозможно найти каталог.</exception>
      <exception cref="T:System.IO.IOException">Этот файл используется другим процессом.</exception>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <returns>Значение <see cref="T:System.IO.FileAttributes" /> для файла в пути.</returns>
    </member>
    <member name="M:System.IO.File.GetCreationTime(System.String)">
      <summary>Возвращает дату и время создания заданного файла или каталога.</summary>
      <param name="path">Файл или каталог, для которого получены сведения о дате и времени создания.</param>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, заданных методом <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="path" /> задан в недопустимом формате.</exception>
      <returns>Структура <see cref="T:System.DateTime" />, для которой заданы дата и время создания указанного файла или каталога. Значение представляется в формате местного времени.</returns>
    </member>
    <member name="M:System.IO.File.GetCreationTimeUtc(System.String)">
      <summary>Возвращает дату и время создания заданного файла или каталога в формате общего скоординированного времени (UTC).</summary>
      <param name="path">Файл или каталог, для которого получены сведения о дате и времени создания.</param>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, заданных методом <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="path" /> задан в недопустимом формате.</exception>
      <returns>Структура <see cref="T:System.DateTime" />, для которой заданы дата и время создания указанного файла или каталога. Значение выражено в формате всемирного координированного времени (UTC).</returns>
    </member>
    <member name="M:System.IO.File.GetLastAccessTime(System.String)">
      <summary>Возвращает время и дату последнего обращения к указанному файлу или каталогу.</summary>
      <param name="path">Файл или каталог, информацию о дате и времени обращения к которому следует получить.</param>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, заданных методом <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="path" /> задан в недопустимом формате.</exception>
      <returns>Структура <see cref="T:System.DateTime" />, для которой заданы дата и время последнего доступа к указанному файлу или каталогу. Значение представляется в формате местного времени.</returns>
    </member>
    <member name="M:System.IO.File.GetLastAccessTimeUtc(System.String)">
      <summary>Возвращает дату и время последнего доступа к заданному файлу или каталогу в формате всемирного координированного времени (UTC).</summary>
      <param name="path">Файл или каталог, информацию о дате и времени обращения к которому следует получить.</param>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, заданных методом <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="path" /> задан в недопустимом формате.</exception>
      <returns>Структура <see cref="T:System.DateTime" />, для которой заданы дата и время последнего доступа к указанному файлу или каталогу. Значение выражено в формате всемирного координированного времени (UTC).</returns>
    </member>
    <member name="M:System.IO.File.GetLastWriteTime(System.String)">
      <summary>Возвращает время и дату последней операции записи в указанный файл или каталог.</summary>
      <param name="path">Файл или каталог, для которого должны быть получены сведения о дате и времени записи.</param>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, заданных методом <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="path" /> задан в недопустимом формате.</exception>
      <returns>Структура <see cref="T:System.DateTime" />, для которой заданы дата и время последней операции записи в указанный файл или каталог. Значение представляется в формате местного времени.</returns>
    </member>
    <member name="M:System.IO.File.GetLastWriteTimeUtc(System.String)">
      <summary>Возвращает дату и время последней операции записи в заданный файл или каталог в формате всемирного координированного времени (UTC).</summary>
      <param name="path">Файл или каталог, для которого должны быть получены сведения о дате и времени записи.</param>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, заданных методом <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="path" /> задан в недопустимом формате.</exception>
      <returns>Структура <see cref="T:System.DateTime" />, для которой заданы дата и время последней операции записи в указанный файл или каталог. Значение выражено в формате всемирного координированного времени (UTC).</returns>
    </member>
    <member name="M:System.IO.File.Move(System.String,System.String)">
      <summary>Перемещает заданный файл в новое местоположение и разрешает переименование файла.</summary>
      <param name="sourceFileName">Имя перемещаемого файла. Может содержать относительный или абсолютный путь.</param>
      <param name="destFileName">Новый путь к файлу и его имя.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="destFileName" /> уже существует.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Не удалось найти <paramref name="sourceFileName" />.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="sourceFileName" /> или <paramref name="destFileName" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourceFileName" /> или <paramref name="destFileName" /> представляет собой строку нулевой длины, содержащую только пробелы или содержащую недопустимые символы, заданные методом <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">В <paramref name="sourceFileName" /> или <paramref name="destFileName" /> указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="sourceFileName" /> или <paramref name="destFileName" /> имеет недопустимый формат.</exception>
    </member>
    <member name="M:System.IO.File.Move(System.String,System.String,System.Boolean)">
      <summary>Перемещает указанный файл в новое расположение, предоставляя параметры для указания нового имени файла и перезаписи конечного файла, если он уже существует.</summary>
      <param name="sourceFileName">Имя перемещаемого файла. Может содержать относительный или абсолютный путь.</param>
      <param name="destFileName">Новый путь к файлу и его имя.</param>
      <param name="overwrite">
        <see langword="true" /> для перезаписи конечного файла, если он уже существует; в противном случае — <see langword="false" />.</param>
      <exception cref="T:System.IO.IOException">Имя, заданное в параметре <paramref name="destFileName" />, уже существует, а параметр <paramref name="overwrite" /> имеет значение <see langword="false" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Не удалось найти <paramref name="sourceFileName" />.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="sourceFileName" /> или <paramref name="destFileName" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourceFileName" /> или <paramref name="destFileName" /> представляет собой строку нулевой длины, содержащую только пробелы или содержащую недопустимые символы, заданные методом <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">В <paramref name="sourceFileName" /> или <paramref name="destFileName" /> указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="sourceFileName" /> или <paramref name="destFileName" /> имеет недопустимый формат.</exception>
    </member>
    <member name="M:System.IO.File.Open(System.String,System.IO.FileMode)">
      <summary>Открывает объект <see cref="T:System.IO.FileStream" /> по указанному пути с доступом для чтения и записи без совместного доступа.</summary>
      <param name="path">Открываемый файл.</param>
      <param name="mode">Значение <see cref="T:System.IO.FileMode" /> указывает, нужно ли создавать файл, если он не существует, и определяет, будет ли содержимое существующих файлов сохранено или перезаписано.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, заданных методом <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.IO.IOException">При открытии файла произошла ошибка ввода-вывода.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Параметр <paramref name="path" /> указывает файл, доступный только для чтения.  
  
-или- 
Эта операция не поддерживается на текущей платформе.  
  
-или- 
 Параметр<paramref name="path" /> определяет каталог.  
  
-или- 
У вызывающего объекта отсутствует необходимое разрешение.  
  
-или- 
 <paramref name="mode" /> имеет значение <see cref="F:System.IO.FileMode.Create" />, а указанный файл является скрытым.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" /> задает недопустимое значение.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Файл, заданный параметром <paramref name="path" />, не найден.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="path" /> задан в недопустимом формате.</exception>
      <returns>Поток <see cref="T:System.IO.FileStream" />, открытый в указанном режиме и по указанному пути с доступом для чтения и записи и без предоставления общего доступа.</returns>
    </member>
    <member name="M:System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
      <summary>Открывает <see cref="T:System.IO.FileStream" /> в заданном пути с заданным режимом и доступом без совместного доступа.</summary>
      <param name="path">Открываемый файл.</param>
      <param name="mode">Значение <see cref="T:System.IO.FileMode" /> указывает, нужно ли создавать файл, если он не существует, и определяет, будет ли содержимое существующих файлов сохранено или перезаписано.</param>
      <param name="access">Значение <see cref="T:System.IO.FileAccess" />, описывающее операции, которые можно выполнять с файлом.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, заданных методом <see cref="F:System.IO.Path.InvalidPathChars" />.  
  
-или- 
 <paramref name="access" /> указывает <see langword="Read" />, и <paramref name="mode" /> указывает <see langword="Create" />, <see langword="CreateNew" />, <see langword="Truncate" /> или <see langword="Append" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.IO.IOException">При открытии файла произошла ошибка ввода-вывода.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> указывает файл, доступный только для чтения, а параметр <paramref name="access" /> не равен <see langword="Read" />.  
  
-или- 
 Параметр<paramref name="path" /> определяет каталог.  
  
-или- 
У вызывающего объекта отсутствует необходимое разрешение.  
  
-или- 
 <paramref name="mode" /> имеет значение <see cref="F:System.IO.FileMode.Create" />, а указанный файл является скрытым.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" /> или <paramref name="access" /> задает недопустимое значение.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Файл, заданный параметром <paramref name="path" />, не найден.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="path" /> задан в недопустимом формате.</exception>
      <returns>Объект с монопольным доступом <see cref="T:System.IO.FileStream" />, обеспечивающий доступ к указанному файлу с заданным режимом и доступом.</returns>
    </member>
    <member name="M:System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
      <summary>Открывает <see cref="T:System.IO.FileStream" /> в заданном пути, с заданным режимом доступа для чтения, записи или чтения и записи и с заданным параметром совместного использования.</summary>
      <param name="path">Открываемый файл.</param>
      <param name="mode">Значение <see cref="T:System.IO.FileMode" /> указывает, нужно ли создавать файл, если он не существует, и определяет, будет ли содержимое существующих файлов сохранено или перезаписано.</param>
      <param name="access">Значение <see cref="T:System.IO.FileAccess" />, описывающее операции, которые можно выполнять с файлом.</param>
      <param name="share">Значение <see cref="T:System.IO.FileShare" />, задающее тип доступа к файлу других потоков.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, заданных методом <see cref="F:System.IO.Path.InvalidPathChars" />.  
  
-или- 
 <paramref name="access" /> указывает <see langword="Read" />, и <paramref name="mode" /> указывает <see langword="Create" />, <see langword="CreateNew" />, <see langword="Truncate" /> или <see langword="Append" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.IO.IOException">При открытии файла произошла ошибка ввода-вывода.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> указывает файл, доступный только для чтения, а параметр <paramref name="access" /> не равен <see langword="Read" />.  
  
-или- 
 Параметр<paramref name="path" /> определяет каталог.  
  
-или- 
У вызывающего объекта отсутствует необходимое разрешение.  
  
-или- 
 <paramref name="mode" /> имеет значение <see cref="F:System.IO.FileMode.Create" />, а указанный файл является скрытым.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" />, <paramref name="access" /> или <paramref name="share" /> задает недопустимое значение.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Файл, заданный параметром <paramref name="path" />, не найден.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="path" /> задан в недопустимом формате.</exception>
      <returns>Поток <see cref="T:System.IO.FileStream" /> по указанному пути с указанным режимом доступа для чтения, записи или чтения и записи и с указанным параметром совместного доступа.</returns>
    </member>
    <member name="M:System.IO.File.OpenRead(System.String)">
      <summary>Открывает для чтения существующий файл.</summary>
      <param name="path">Файл, открываемый для чтения.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, заданных методом <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.UnauthorizedAccessException">Параметр<paramref name="path" /> определяет каталог.  
  
-или- 
У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Файл, заданный параметром <paramref name="path" />, не найден.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="path" /> задан в недопустимом формате.</exception>
      <exception cref="T:System.IO.IOException">При открытии файла произошла ошибка ввода-вывода.</exception>
      <returns>Доступный только для чтения <see cref="T:System.IO.FileStream" /> в заданном пути.</returns>
    </member>
    <member name="M:System.IO.File.OpenText(System.String)">
      <summary>Открывает для чтения существующий файл, содержащий текст в кодировке UTF-8.</summary>
      <param name="path">Файл, открываемый для чтения.</param>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, заданных методом <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.IO.FileNotFoundException">Файл, заданный параметром <paramref name="path" />, не найден.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="path" /> задан в недопустимом формате.</exception>
      <returns>
        <see cref="T:System.IO.StreamReader" /> в заданном пути.</returns>
    </member>
    <member name="M:System.IO.File.OpenWrite(System.String)">
      <summary>Открывает существующий файл или создает новый файл для записи.</summary>
      <param name="path">Файл, который нужно открыть для записи.</param>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.  
  
-или- 
 Параметр <paramref name="path" /> указывает файл или каталог только для чтения.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, заданных методом <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="path" /> задан в недопустимом формате.</exception>
      <returns>Объект с монопольным доступом <see cref="T:System.IO.FileStream" /> в заданном пути с доступом <see cref="F:System.IO.FileAccess.Write" />.</returns>
    </member>
    <member name="M:System.IO.File.ReadAllBytes(System.String)">
      <summary>Открывает двоичный файл, считывает содержимое файла в массив байтов и затем закрывает файл.</summary>
      <param name="path">Файл, открываемый для чтения.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, заданных методом <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.IO.IOException">При открытии файла произошла ошибка ввода-вывода.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Эта операция не поддерживается на текущей платформе.  
  
-или- 
 Параметр<paramref name="path" /> определяет каталог.  
  
-или- 
У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Файл, заданный параметром <paramref name="path" />, не найден.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="path" /> задан в недопустимом формате.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <returns>Массив байтов с содержимым файла.</returns>
    </member>
    <member name="M:System.IO.File.ReadAllBytesAsync(System.String,System.Threading.CancellationToken)">
      <summary>Асинхронно открывает двоичный файл, считывает содержимое файла в массив байтов и затем закрывает файл.</summary>
      <param name="path">Файл, открываемый для чтения.</param>
      <param name="cancellationToken">Токен для отслеживания запросов отмены. Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Задача, представляющая асинхронную операцию чтения, которая охватывает массив байтов, содержащий содержимое файла.</returns>
    </member>
    <member name="M:System.IO.File.ReadAllLines(System.String)">
      <summary>Открывает текстовый файл, считывает все строки файла и затем закрывает файл.</summary>
      <param name="path">Файл, открываемый для чтения.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, заданных методом <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.IO.IOException">При открытии файла произошла ошибка ввода-вывода.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Параметр <paramref name="path" /> указывает файл, доступный только для чтения.  
  
-или- 
Эта операция не поддерживается на текущей платформе.  
  
-или- 
 Параметр<paramref name="path" /> определяет каталог.  
  
-или- 
У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Файл, заданный параметром <paramref name="path" />, не найден.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="path" /> задан в недопустимом формате.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <returns>Массив строк, содержащий все строки файла.</returns>
    </member>
    <member name="M:System.IO.File.ReadAllLines(System.String,System.Text.Encoding)">
      <summary>Открывает файл, считывает все строки файла с заданной кодировкой и затем закрывает файл.</summary>
      <param name="path">Файл, открываемый для чтения.</param>
      <param name="encoding">Кодировка, примененная к содержимому файла.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, заданных методом <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.IO.IOException">При открытии файла произошла ошибка ввода-вывода.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Параметр <paramref name="path" /> указывает файл, доступный только для чтения.  
  
-или- 
Эта операция не поддерживается на текущей платформе.  
  
-или- 
 Параметр<paramref name="path" /> определяет каталог.  
  
-или- 
У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Файл, заданный параметром <paramref name="path" />, не найден.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="path" /> задан в недопустимом формате.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <returns>Массив строк, содержащий все строки файла.</returns>
    </member>
    <member name="M:System.IO.File.ReadAllLinesAsync(System.String,System.Text.Encoding,System.Threading.CancellationToken)">
      <summary>Асинхронно открывает текстовый файл, считывает все строки файла с заданной кодировкой и затем закрывает файл.</summary>
      <param name="path">Файл, открываемый для чтения.</param>
      <param name="encoding">Кодировка, примененная к содержимому файла.</param>
      <param name="cancellationToken">Токен для отслеживания запросов отмены. Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Задача, представляющая асинхронную операцию чтения, которая охватывает массив строк, содержащий все строки файла.</returns>
    </member>
    <member name="M:System.IO.File.ReadAllLinesAsync(System.String,System.Threading.CancellationToken)">
      <summary>Асинхронно открывает текстовый файл, считывает все строки файла и затем закрывает файл.</summary>
      <param name="path">Файл, открываемый для чтения.</param>
      <param name="cancellationToken">Токен для отслеживания запросов отмены. Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Задача, представляющая асинхронную операцию чтения, которая охватывает массив строк, содержащий все строки файла.</returns>
    </member>
    <member name="M:System.IO.File.ReadAllText(System.String)">
      <summary>Открывает текстовый файл, считывает весь текст файла и затем закрывает файл.</summary>
      <param name="path">Файл, открываемый для чтения.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, заданных методом <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.IO.IOException">При открытии файла произошла ошибка ввода-вывода.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Параметр <paramref name="path" /> указывает файл, доступный только для чтения.  
  
-или- 
Эта операция не поддерживается на текущей платформе.  
  
-или- 
 Параметр<paramref name="path" /> определяет каталог.  
  
-или- 
У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Файл, заданный параметром <paramref name="path" />, не найден.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="path" /> задан в недопустимом формате.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <returns>Строка, содержащая весь текст файла.</returns>
    </member>
    <member name="M:System.IO.File.ReadAllText(System.String,System.Text.Encoding)">
      <summary>Открывает файл, считывает весь текст файла с заданной кодировкой и затем закрывает файл.</summary>
      <param name="path">Файл, открываемый для чтения.</param>
      <param name="encoding">Кодировка, примененная к содержимому файла.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, заданных методом <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.IO.IOException">При открытии файла произошла ошибка ввода-вывода.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Параметр <paramref name="path" /> указывает файл, доступный только для чтения.  
  
-или- 
Эта операция не поддерживается на текущей платформе.  
  
-или- 
 Параметр<paramref name="path" /> определяет каталог.  
  
-или- 
У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Файл, заданный параметром <paramref name="path" />, не найден.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="path" /> задан в недопустимом формате.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <returns>Строка, содержащая весь текст файла.</returns>
    </member>
    <member name="M:System.IO.File.ReadAllTextAsync(System.String,System.Text.Encoding,System.Threading.CancellationToken)">
      <summary>Асинхронно открывает текстовый файл, считывает весь текст из файла с заданной кодировкой и затем закрывает файл.</summary>
      <param name="path">Файл, открываемый для чтения.</param>
      <param name="encoding">Кодировка, примененная к содержимому файла.</param>
      <param name="cancellationToken">Токен для отслеживания запросов отмены. Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Задача, представляющая асинхронную операцию чтения, которая охватывает строки, содержащие весь текст из файла.</returns>
    </member>
    <member name="M:System.IO.File.ReadAllTextAsync(System.String,System.Threading.CancellationToken)">
      <summary>Асинхронно открывает текстовый файл, считывает весь текст файла и затем закрывает файл.</summary>
      <param name="path">Файл, открываемый для чтения.</param>
      <param name="cancellationToken">Токен для отслеживания запросов отмены. Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Задача, представляющая асинхронную операцию чтения, которая охватывает строки, содержащие весь текст из файла.</returns>
    </member>
    <member name="M:System.IO.File.ReadLines(System.String)">
      <summary>Считывает строки файла.</summary>
      <param name="path">Файл, который нужно прочитать.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="path" /> является пустой строкой, содержит только пробел либо один или несколько недопустимых символов, определенных методом <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Недопустимый <paramref name="path" /> (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.IO.FileNotFoundException">Файл, заданный параметром <paramref name="path" />, не обнаружен.</exception>
      <exception cref="T:System.IO.IOException">При открытии файла произошла ошибка ввода-вывода.</exception>
      <exception cref="T:System.IO.PathTooLongException">Длина параметра <paramref name="path" /> превышает максимальную длину, определенную в системе.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Параметр <paramref name="path" /> указывает файл, доступный только для чтения.  
  
-или- 
Эта операция не поддерживается на текущей платформе.  
  
-или- 
 <paramref name="path" /> является каталогом.  
  
-или- 
У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <returns>Все строки файла или строки, которые являются результатом запроса.</returns>
    </member>
    <member name="M:System.IO.File.ReadLines(System.String,System.Text.Encoding)">
      <summary>Считывает строки файла с заданной кодировкой.</summary>
      <param name="path">Файл, который нужно прочитать.</param>
      <param name="encoding">Кодировка, примененная к содержимому файла.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или содержащую хотя бы один недопустимый символ, заданный методом <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Недопустимый <paramref name="path" /> (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.IO.FileNotFoundException">Файл, заданный параметром <paramref name="path" />, не обнаружен.</exception>
      <exception cref="T:System.IO.IOException">При открытии файла произошла ошибка ввода-вывода.</exception>
      <exception cref="T:System.IO.PathTooLongException">Длина параметра <paramref name="path" /> превышает максимальную длину, определенную в системе.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Параметр <paramref name="path" /> указывает файл, доступный только для чтения.  
  
-или- 
Эта операция не поддерживается на текущей платформе.  
  
-или- 
 <paramref name="path" /> является каталогом.  
  
-или- 
У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <returns>Все строки файла или строки, которые являются результатом запроса.</returns>
    </member>
    <member name="M:System.IO.File.Replace(System.String,System.String,System.String)">
      <summary>Заменяет содержимое заданного файла на содержимое другого файла, удаляя исходный файл и создавая резервную копию замененного файла.</summary>
      <param name="sourceFileName">Имя файла, который заменяет файл, указанный <paramref name="destinationFileName" />.</param>
      <param name="destinationFileName">Имя заменяемого файла.</param>
      <param name="destinationBackupFileName">Имя файла резервной копии.</param>
      <exception cref="T:System.ArgumentException">Путь, описываемый параметром <paramref name="destinationFileName" />, имел недопустимую форму.  
  
-или- 
Путь, описываемый параметром <paramref name="destinationBackupFileName" />, имел недопустимую форму.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="destinationFileName" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.DriveNotFoundException">Указан недопустимый диск.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Не удалось найти файл, описанный текущим объектом <see cref="T:System.IO.FileInfo" />.  
  
-или- 
Файл, описываемый параметром <paramref name="destinationBackupFileName" />, не найден.</exception>
      <exception cref="T:System.IO.IOException">При открытии файла произошла ошибка ввода-вывода.  
  
-или- 
Параметры <paramref name="sourceFileName" /> и <paramref name="destinationFileName" /> указывают один и тот же файл.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Операционной системой является Windows 98 Second Edition или более ранних версий, и файловая система отлична от NTFS.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Параметр <paramref name="sourceFileName" /> или <paramref name="destinationFileName" /> указывает файл, доступный только для чтения.  
  
-или- 
Эта операция не поддерживается на текущей платформе.  
  
-или- 
Исходные или конечные параметры определяют каталог вместо файла.  
  
-или- 
У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="M:System.IO.File.Replace(System.String,System.String,System.String,System.Boolean)">
      <summary>Заменяет содержимое заданного файла на содержимое другого файла, удаляя исходный файл и создавая резервную копию замененного файла, и при необходимости игнорирует ошибки слияния.</summary>
      <param name="sourceFileName">Имя файла, который заменяет файл, указанный <paramref name="destinationFileName" />.</param>
      <param name="destinationFileName">Имя заменяемого файла.</param>
      <param name="destinationBackupFileName">Имя файла резервной копии.</param>
      <param name="ignoreMetadataErrors">Значение <see langword="true" /> позволяет игнорировать ошибки слияния (например, атрибуты и списки управления доступом (ACL)), исходящие из заменяемого файла в заменяющий; в противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException">Путь, описываемый параметром <paramref name="destinationFileName" />, имел недопустимую форму.  
  
-или- 
Путь, описываемый параметром <paramref name="destinationBackupFileName" />, имел недопустимую форму.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="destinationFileName" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.DriveNotFoundException">Указан недопустимый диск.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Не удалось найти файл, описанный текущим объектом <see cref="T:System.IO.FileInfo" />.  
  
-или- 
Файл, описываемый параметром <paramref name="destinationBackupFileName" />, не найден.</exception>
      <exception cref="T:System.IO.IOException">При открытии файла произошла ошибка ввода-вывода.  
  
-или- 
Параметры <paramref name="sourceFileName" /> и <paramref name="destinationFileName" /> указывают один и тот же файл.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Операционной системой является Windows 98 Second Edition или более ранних версий, и файловая система отлична от NTFS.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Параметр <paramref name="sourceFileName" /> или <paramref name="destinationFileName" /> указывает файл, доступный только для чтения.  
  
-или- 
Эта операция не поддерживается на текущей платформе.  
  
-или- 
Исходные или конечные параметры определяют каталог вместо файла.  
  
-или- 
У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="M:System.IO.File.SetAttributes(System.String,System.IO.FileAttributes)">
      <summary>Устанавливает заданные атрибуты <see cref="T:System.IO.FileAttributes" /> файла по заданному пути.</summary>
      <param name="path">Путь к файлу.</param>
      <param name="fileAttributes">Побитовое сочетание значений перечисления.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> является пустым, содержит только пробелы, содержит недопустимые символы, или же атрибут файла недействителен.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="path" /> задан в недопустимом формате.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.IO.FileNotFoundException">Файл не найден.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Параметр <paramref name="path" /> указывает файл, доступный только для чтения.  
  
-или- 
Эта операция не поддерживается на текущей платформе.  
  
-или- 
 Параметр<paramref name="path" /> определяет каталог.  
  
-или- 
У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="M:System.IO.File.SetCreationTime(System.String,System.DateTime)">
      <summary>Устанавливает дату и время создания файла.</summary>
      <param name="path">Файл, для которого задаются сведения о дате и времени создания.</param>
      <param name="creationTime">Объект <see cref="T:System.DateTime" />, содержащий значение, которое должно быть задано для даты и времени создания <paramref name="path" />. Значение представляется в формате местного времени.</param>
      <exception cref="T:System.IO.FileNotFoundException">Указанный путь не найден.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, заданных методом <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.IO.IOException">При выполнении операции произошла ошибка ввода-вывода.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="creationTime" /> указывает значение вне диапазона дат или времени, разрешенного для этой операции.</exception>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="path" /> задан в недопустимом формате.</exception>
    </member>
    <member name="M:System.IO.File.SetCreationTimeUtc(System.String,System.DateTime)">
      <summary>Устанавливает дату и время создания файла, представленные в формате общего скоординированного времени (UTC).</summary>
      <param name="path">Файл, для которого задаются сведения о дате и времени создания.</param>
      <param name="creationTimeUtc">Объект <see cref="T:System.DateTime" />, содержащий значение, которое должно быть задано для даты и времени создания <paramref name="path" />. Значение выражено в формате всемирного координированного времени (UTC).</param>
      <exception cref="T:System.IO.FileNotFoundException">Указанный путь не найден.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, заданных методом <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.IO.IOException">При выполнении операции произошла ошибка ввода-вывода.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="creationTime" /> указывает значение вне диапазона дат или времени, разрешенного для этой операции.</exception>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="path" /> задан в недопустимом формате.</exception>
    </member>
    <member name="M:System.IO.File.SetLastAccessTime(System.String,System.DateTime)">
      <summary>Устанавливаются дата и время последнего доступа к заданному файлу.</summary>
      <param name="path">Файл, для которого устанавливаются сведения о дате и времени доступа.</param>
      <param name="lastAccessTime">Объект <see cref="T:System.DateTime" />, содержащий значение, которое должно быть задано для даты и времени последнего доступа к <paramref name="path" />. Значение представляется в формате местного времени.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, заданных методом <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Указанный путь не найден.</exception>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="path" /> задан в недопустимом формате.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="lastAccessTime" /> указывает значение вне диапазона дат или времени, разрешенного для операции.</exception>
    </member>
    <member name="M:System.IO.File.SetLastAccessTimeUtc(System.String,System.DateTime)">
      <summary>Устанавливает дату и время последнего доступа к заданному файлу в формате всемирного координированного времени (UTC).</summary>
      <param name="path">Файл, для которого устанавливаются сведения о дате и времени доступа.</param>
      <param name="lastAccessTimeUtc">Объект <see cref="T:System.DateTime" />, содержащий значение, которое должно быть задано для даты и времени последнего доступа к <paramref name="path" />. Значение выражено в формате всемирного координированного времени (UTC).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, заданных методом <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Указанный путь не найден.</exception>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="path" /> задан в недопустимом формате.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="lastAccessTimeUtc" /> указывает значение вне диапазона дат или времени, разрешенного для операции.</exception>
    </member>
    <member name="M:System.IO.File.SetLastWriteTime(System.String,System.DateTime)">
      <summary>Устанавливаются дата и время последней операции записи в заданный файл.</summary>
      <param name="path">Файл, для которого устанавливаются сведения о дате и времени.</param>
      <param name="lastWriteTime">Объект <see cref="T:System.DateTime" />, содержащий значение, которое должно быть задано для даты и времени последней записи <paramref name="path" />. Значение представляется в формате местного времени.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, заданных методом <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Указанный путь не найден.</exception>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="path" /> задан в недопустимом формате.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="lastWriteTime" /> указывает значение вне диапазона дат или времени, разрешенного для операции.</exception>
    </member>
    <member name="M:System.IO.File.SetLastWriteTimeUtc(System.String,System.DateTime)">
      <summary>Устанавливает дату и время последней операции записи в заданный файл в формате всемирного координированного времени (UTC).</summary>
      <param name="path">Файл, для которого устанавливаются сведения о дате и времени.</param>
      <param name="lastWriteTimeUtc">Объект <see cref="T:System.DateTime" />, содержащий значение, которое должно быть задано для даты и времени последней записи <paramref name="path" />. Значение выражено в формате всемирного координированного времени (UTC).</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, заданных методом <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Указанный путь не найден.</exception>
      <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="path" /> задан в недопустимом формате.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="lastWriteTimeUtc" /> указывает значение вне диапазона дат или времени, разрешенного для операции.</exception>
    </member>
    <member name="M:System.IO.File.WriteAllBytes(System.String,System.Byte[])">
      <summary>Создает новый файл, записывает в него указанный массив байтов и затем закрывает файл. Если целевой файл уже существует, он будет переопределен.</summary>
      <param name="path">Файл, в который осуществляется запись.</param>
      <param name="bytes">Байты, которые нужно записать в файл.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, заданных методом <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="path" /> имеет значение <see langword="null" />, или массив байтов является пустым.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.IO.IOException">При открытии файла произошла ошибка ввода-вывода.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Параметр <paramref name="path" /> указывает файл, доступный только для чтения.
        
-или- 
 <paramref name="path" /> указывает файл, который скрыт.
  
-или- 
Эта операция не поддерживается на текущей платформе.  
  
-или- 
 Параметр<paramref name="path" /> определяет каталог.  
  
-или- 
У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="path" /> задан в недопустимом формате.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="M:System.IO.File.WriteAllBytesAsync(System.String,System.Byte[],System.Threading.CancellationToken)">
      <summary>Асинхронно создает новый файл, записывает в него указанный массив байтов и затем закрывает файл. Если целевой файл уже существует, он будет переопределен.</summary>
      <param name="path">Файл, в который осуществляется запись.</param>
      <param name="bytes">Байты, которые нужно записать в файл.</param>
      <param name="cancellationToken">Токен для отслеживания запросов отмены. Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Задача, представляющая асинхронную операцию записи.</returns>
    </member>
    <member name="M:System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Создает новый файл, записывает в него коллекцию строк, затем закрывает файл.</summary>
      <param name="path">Файл, в который осуществляется запись.</param>
      <param name="contents">Строки, записываемые в файл.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="path" /> является пустой строкой, содержит только пробел либо один или несколько недопустимых символов, определенных методом <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">Либо <paramref name="path" />, либо <paramref name="contents" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Недопустимый <paramref name="path" /> (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.IO.IOException">При открытии файла произошла ошибка ввода-вывода.</exception>
      <exception cref="T:System.IO.PathTooLongException">Длина параметра <paramref name="path" /> превышает максимальную длину, определенную в системе.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="path" /> задан в недопустимом формате.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Параметр <paramref name="path" /> указывает файл, доступный только для чтения.
        
-или- 
 <paramref name="path" /> указывает файл, который скрыт.
  
-или- 
Эта операция не поддерживается на текущей платформе.  
  
-или- 
 <paramref name="path" /> является каталогом.  
  
-или- 
У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="M:System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)">
      <summary>Создает новый файл, используя указанную кодировку, записывает коллекцию строк в этот файл, затем закрывает файл.</summary>
      <param name="path">Файл, в который осуществляется запись.</param>
      <param name="contents">Строки, записываемые в файл.</param>
      <param name="encoding">Кодировка символов, которую нужно использовать.</param>
      <exception cref="T:System.ArgumentException">Параметр <paramref name="path" /> является пустой строкой, содержит только пробел либо один или несколько недопустимых символов, определенных методом <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">Какой-либо из параметров <paramref name="path" />, <paramref name="contents" /> или <paramref name="encoding" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Недопустимый <paramref name="path" /> (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.IO.IOException">При открытии файла произошла ошибка ввода-вывода.</exception>
      <exception cref="T:System.IO.PathTooLongException">Длина параметра <paramref name="path" /> превышает максимальную длину, определенную в системе.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="path" /> задан в недопустимом формате.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Параметр <paramref name="path" /> указывает файл, доступный только для чтения.
        
-или- 
 <paramref name="path" /> указывает файл, который скрыт.  
  
-или- 
Эта операция не поддерживается на текущей платформе.  
  
-или- 
 <paramref name="path" /> является каталогом.  
  
-или- 
У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="M:System.IO.File.WriteAllLines(System.String,System.String[])">
      <summary>Создает новый файл, записывает в него указанный массив строк и затем закрывает файл.</summary>
      <param name="path">Файл, в который осуществляется запись.</param>
      <param name="contents">Массив строк, который нужно записать в файл.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, заданных методом <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">Либо <paramref name="path" />, либо <paramref name="contents" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.IO.IOException">При открытии файла произошла ошибка ввода-вывода.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Параметр <paramref name="path" /> указывает файл, доступный только для чтения.
        
-или- 
 <paramref name="path" /> указывает файл, который скрыт.  
  
-или- 
Эта операция не поддерживается на текущей платформе.  
  
-или- 
 Параметр<paramref name="path" /> определяет каталог.  
  
-или- 
У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="path" /> задан в недопустимом формате.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="M:System.IO.File.WriteAllLines(System.String,System.String[],System.Text.Encoding)">
      <summary>Создает новый файл, записывает указанный массив строк в этот файл, используя заданную кодировку, затем закрывает файл.</summary>
      <param name="path">Файл, в который осуществляется запись.</param>
      <param name="contents">Массив строк, который нужно записать в файл.</param>
      <param name="encoding">Объект <see cref="T:System.Text.Encoding" />, представляющий кодировку символов, примененную к массиву строк.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, заданных методом <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">Либо <paramref name="path" />, либо <paramref name="contents" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.IO.IOException">При открытии файла произошла ошибка ввода-вывода.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Параметр <paramref name="path" /> указывает файл, доступный только для чтения.
        
-или- 
 <paramref name="path" /> указывает файл, который скрыт.  
  
-или- 
Эта операция не поддерживается на текущей платформе.  
  
-или- 
 Параметр<paramref name="path" /> определяет каталог.  
  
-или- 
У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="path" /> задан в недопустимом формате.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="M:System.IO.File.WriteAllLinesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding,System.Threading.CancellationToken)">
      <summary>Асинхронно создает новый файл, записывает указанные строки в этот файл, используя заданную кодировку, затем закрывает файл.</summary>
      <param name="path">Файл, в который осуществляется запись.</param>
      <param name="contents">Строки, записываемые в файл.</param>
      <param name="encoding">Кодировка символов, которую нужно использовать.</param>
      <param name="cancellationToken">Токен для отслеживания запросов отмены. Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Задача, представляющая асинхронную операцию записи.</returns>
    </member>
    <member name="M:System.IO.File.WriteAllLinesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
      <summary>Асинхронно создает новый файл, записывает в него указанные строки и затем закрывает файл.</summary>
      <param name="path">Файл, в который осуществляется запись.</param>
      <param name="contents">Строки, записываемые в файл.</param>
      <param name="cancellationToken">Токен для отслеживания запросов отмены. Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Задача, представляющая асинхронную операцию записи.</returns>
    </member>
    <member name="M:System.IO.File.WriteAllText(System.String,System.String)">
      <summary>Создает новый файл, записывает в него указанную строку и затем закрывает файл. Если целевой файл уже существует, он будет переопределен.</summary>
      <param name="path">Файл, в который осуществляется запись.</param>
      <param name="contents">Строка, которую нужно записать в файл.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, заданных методом <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.IO.IOException">При открытии файла произошла ошибка ввода-вывода.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Параметр <paramref name="path" /> указывает файл, доступный только для чтения.
        
-или- 
 <paramref name="path" /> указывает файл, который скрыт.  
  
-или- 
Эта операция не поддерживается на текущей платформе.  
  
-или- 
 Параметр<paramref name="path" /> определяет каталог.  
  
-или- 
У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="path" /> задан в недопустимом формате.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="M:System.IO.File.WriteAllText(System.String,System.String,System.Text.Encoding)">
      <summary>Создает новый файл, записывает указанную строку в этот файл, используя заданную кодировку, и затем закрывает файл. Если целевой файл уже существует, он будет переопределен.</summary>
      <param name="path">Файл, в который осуществляется запись.</param>
      <param name="contents">Строка, которую нужно записать в файл.</param>
      <param name="encoding">Кодировка, которую необходимо применить к строке.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, заданных методом <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.IO.IOException">При открытии файла произошла ошибка ввода-вывода.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Параметр <paramref name="path" /> указывает файл, доступный только для чтения.
        
-или- 
 <paramref name="path" /> указывает файл, который скрыт.  
  
-или- 
Эта операция не поддерживается на текущей платформе.  
  
-или- 
 Параметр<paramref name="path" /> определяет каталог.  
  
-или- 
У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.NotSupportedException">Параметр <paramref name="path" /> задан в недопустимом формате.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="M:System.IO.File.WriteAllTextAsync(System.String,System.String,System.Text.Encoding,System.Threading.CancellationToken)">
      <summary>Асинхронно создает новый файл, записывает указанную строку в этот файл, используя заданную кодировку, и затем закрывает файл. Если целевой файл уже существует, он будет переопределен.</summary>
      <param name="path">Файл, в который осуществляется запись.</param>
      <param name="contents">Строка, которую нужно записать в файл.</param>
      <param name="encoding">Кодировка, которую необходимо применить к строке.</param>
      <param name="cancellationToken">Токен для отслеживания запросов отмены. Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Задача, представляющая асинхронную операцию записи.</returns>
    </member>
    <member name="M:System.IO.File.WriteAllTextAsync(System.String,System.String,System.Threading.CancellationToken)">
      <summary>Асинхронно создает новый файл, записывает в него указанную строку и затем закрывает файл. Если целевой файл уже существует, он будет переопределен.</summary>
      <param name="path">Файл, в который осуществляется запись.</param>
      <param name="contents">Строка, которую нужно записать в файл.</param>
      <param name="cancellationToken">Токен для отслеживания запросов отмены. Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Задача, представляющая асинхронную операцию записи.</returns>
    </member>
    <member name="T:System.IO.FileInfo">
      <summary>Предоставляет свойства и методы экземпляра для создания, копирования, удаления, перемещения и открытия файлов, а также позволяет создавать объекты <see cref="T:System.IO.FileStream" />. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.IO.FileInfo.#ctor(System.String)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.IO.FileInfo" />, который служит оболочкой для пути файла.</summary>
      <param name="fileName">Полное имя нового файла или относительное имя файла. Путь не должен заканчиваться символом разделителя каталогов.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fileName" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.ArgumentException">Имя файла является пустой строкой, содержит только пробелы или недопустимые символы.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Отказано в доступе к <paramref name="fileName" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="fileName" /> содержит двоеточие (:) в середине строки.</exception>
    </member>
    <member name="M:System.IO.FileInfo.AppendText">
      <summary>Создает <see cref="T:System.IO.StreamWriter" />, который добавляет текст в файл, представленный этим экземпляром <see cref="T:System.IO.FileInfo" />.</summary>
      <returns>Новый объект <see langword="StreamWriter" />.</returns>
    </member>
    <member name="M:System.IO.FileInfo.CopyTo(System.String)">
      <summary>Копирует существующий файл в новый файл и запрещает перезапись существующего файла.</summary>
      <param name="destFileName">Имя нового файла, в который будет выполняться копирование.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destFileName" /> является пустой строкой, содержит только пробелы или недопустимые символы.</exception>
      <exception cref="T:System.IO.IOException">Произошла ошибка, или файл назначения уже существует.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destFileName" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Передан путь к каталогу, или файл перемещен на другой диск.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Каталог, указанный в <paramref name="destFileName" />, не существует.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="destFileName" /> содержит двоеточие (:) в строке, но не указывает том.</exception>
      <returns>Новый файл с полным именем.</returns>
    </member>
    <member name="M:System.IO.FileInfo.CopyTo(System.String,System.Boolean)">
      <summary>Копирует существующий файл в новый файл и разрешает перезапись существующего файла.</summary>
      <param name="destFileName">Имя нового файла, в который будет выполняться копирование.</param>
      <param name="overwrite">Значение <see langword="true" /> позволяет разрешить перезапись существующего файла; в противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destFileName" /> является пустой строкой, содержит только пробелы или недопустимые символы.</exception>
      <exception cref="T:System.IO.IOException">Произошла ошибка, или файл назначения уже существует, а <paramref name="overwrite" /> имеет значение <see langword="false" />.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destFileName" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Каталог, указанный в <paramref name="destFileName" />, не существует.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Передан путь к каталогу, или файл перемещен на другой диск.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="destFileName" /> содержит двоеточие (:) в середине строки.</exception>
      <returns>Новый файл или перезапись существующего файла, если для параметра <paramref name="overwrite" /> задано значение <see langword="true" />. Если файл существует и для параметра <paramref name="overwrite" /> задано значение <see langword="false" />, создается исключение <see cref="T:System.IO.IOException" />.</returns>
    </member>
    <member name="M:System.IO.FileInfo.Create">
      <summary>Создает файл.</summary>
      <returns>Новый файл.</returns>
    </member>
    <member name="M:System.IO.FileInfo.CreateText">
      <summary>Создает <see cref="T:System.IO.StreamWriter" />, который записывает новый текстовый файл.</summary>
      <exception cref="T:System.UnauthorizedAccessException">Имя файла является каталогом.</exception>
      <exception cref="T:System.IO.IOException">Диск доступен только для чтения.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <returns>Новый объект <see langword="StreamWriter" />.</returns>
    </member>
    <member name="M:System.IO.FileInfo.Decrypt">
      <summary>Расшифровывает файл, зашифрованный текущей учетной записью с помощью метода <see cref="M:System.IO.FileInfo.Encrypt" />.</summary>
      <exception cref="T:System.IO.DriveNotFoundException">Указан недопустимый диск.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Не удалось найти файл, описанный текущим объектом <see cref="T:System.IO.FileInfo" />.</exception>
      <exception cref="T:System.IO.IOException">При открытии файла произошла ошибка ввода-вывода.</exception>
      <exception cref="T:System.NotSupportedException">Файловая система не является системой NTFS.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Текущая операционная система не является системой Microsoft Windows NT или более поздней версии.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Файл, описанный текущим объектом <see cref="T:System.IO.FileInfo" />, доступен только для чтения.  
  
-или- 
Эта операция не поддерживается на текущей платформе.  
  
-или- 
У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="M:System.IO.FileInfo.Delete">
      <summary>Удаляет файл без возможности восстановления.</summary>
      <exception cref="T:System.IO.IOException">Целевой файл открыт или сопоставлен в памяти на компьютере под управлением Microsoft Windows NT.  
  
-или- 
Для файла имеется открытый дескриптор, а операционной системой является Windows XP или более ранней версии. Этот открытый дескриптор может быть результатом перечисления каталогов и файлов. Дополнительные сведения см. в разделе Практическое руководство. Перечисление каталогов и файлов.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Путь является каталогом.</exception>
    </member>
    <member name="M:System.IO.FileInfo.Encrypt">
      <summary>Шифрует файл таким образом, чтобы его можно было расшифровать только с помощью учетной записи, которая использовалась для шифрования.</summary>
      <exception cref="T:System.IO.DriveNotFoundException">Указан недопустимый диск.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Не удалось найти файл, описанный текущим объектом <see cref="T:System.IO.FileInfo" />.</exception>
      <exception cref="T:System.IO.IOException">При открытии файла произошла ошибка ввода-вывода.</exception>
      <exception cref="T:System.NotSupportedException">Файловая система не является системой NTFS.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Текущая операционная система не является системой Microsoft Windows NT или более поздней версии.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Файл, описанный текущим объектом <see cref="T:System.IO.FileInfo" />, доступен только для чтения.  
  
-или- 
Эта операция не поддерживается на текущей платформе.  
  
-или- 
У вызывающего объекта отсутствует необходимое разрешение.</exception>
    </member>
    <member name="M:System.IO.FileInfo.MoveTo(System.String)">
      <summary>Перемещает заданный файл в новое местоположение и разрешает переименование файла.</summary>
      <param name="destFileName">Путь, указывающий на местоположение, в которое необходимо переместить файл; в этом же пути можно задать и другое имя файла.</param>
      <exception cref="T:System.IO.IOException">Ошибка ввода-вывода, например, конечный файл уже существует или устройство назначения не готово.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destFileName" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="destFileName" /> является пустой строкой, содержит только пробелы или недопустимые символы.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="destFileName" /> доступен только для чтения или является каталогом.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Файл не найден.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="destFileName" /> содержит двоеточие (:) в середине строки.</exception>
    </member>
    <member name="M:System.IO.FileInfo.MoveTo(System.String,System.Boolean)">
      <summary>Перемещает указанный файл в новое расположение, предоставляя параметры для указания нового имени файла и перезаписи конечного файла, если он уже существует.</summary>
      <param name="destFileName">Путь, указывающий на местоположение, в которое необходимо переместить файл; в этом же пути можно задать и другое имя файла.</param>
      <param name="overwrite">
        <see langword="true" /> для перезаписи конечного файла, если он уже существует; в противном случае — <see langword="false" />.</param>
      <exception cref="T:System.IO.IOException">Произошла ошибка ввода-вывода, например целевое устройство не готово.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destFileName" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="destFileName" /> является пустой строкой, содержит только пробелы или недопустимые символы.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="destFileName" /> доступен только для чтения или является каталогом.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Файл не найден.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="destFileName" /> содержит двоеточие (:) в середине строки.</exception>
    </member>
    <member name="M:System.IO.FileInfo.Open(System.IO.FileMode)">
      <summary>Открывает файл в заданном режиме.</summary>
      <param name="mode">Константа <see cref="T:System.IO.FileMode" /> задает режим (например <see langword="Open" /> или <see langword="Append" />), в котором необходимо открыть файл.</param>
      <exception cref="T:System.IO.FileNotFoundException">Файл не найден.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Файл доступен только для чтения или является каталогом.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.IO.IOException">Файл уже открыт.</exception>
      <returns>Файл открыт в заданном режиме с доступом для чтения и записи и без предоставления общего доступа.</returns>
    </member>
    <member name="M:System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess)">
      <summary>Открывает файл в заданном режиме с доступом для чтения или записи, или и для чтения, и для записи.</summary>
      <param name="mode">Константа <see cref="T:System.IO.FileMode" /> задает режим (например <see langword="Open" /> или <see langword="Append" />), в котором необходимо открыть файл.</param>
      <param name="access">Константа <see cref="T:System.IO.FileAccess" /> задает доступ к открываемому файлу: <see langword="Read" />, <see langword="Write" /> или <see langword="ReadWrite" />.</param>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Файл не найден.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <see cref="P:System.IO.FileInfo.Name" /> доступен только для чтения или является каталогом.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.IO.IOException">Файл уже открыт.</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.IO.FileInfo.Name" /> является пустой строкой или содержит только пробелы.</exception>
      <exception cref="T:System.ArgumentNullException">Один или несколько аргументов имеют значение NULL.</exception>
      <returns>Объект <see cref="T:System.IO.FileStream" /> открыт в заданном режиме, с заданными правами и без предоставления общего доступа.</returns>
    </member>
    <member name="M:System.IO.FileInfo.Open(System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
      <summary>Открывает файл в заданном режиме с доступом для чтения, записи или и для чтения, и для записи и с заданным параметром совместного доступа.</summary>
      <param name="mode">Константа <see cref="T:System.IO.FileMode" /> задает режим (например <see langword="Open" /> или <see langword="Append" />), в котором необходимо открыть файл.</param>
      <param name="access">Константа <see cref="T:System.IO.FileAccess" /> задает доступ к открываемому файлу: <see langword="Read" />, <see langword="Write" /> или <see langword="ReadWrite" />.</param>
      <param name="share">Константа <see cref="T:System.IO.FileShare" /> задает тип доступа к файлу для других объектов <see langword="FileStream" />.</param>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Файл не найден.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <see cref="P:System.IO.FileInfo.Name" /> доступен только для чтения или является каталогом.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.IO.IOException">Файл уже открыт.</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.IO.FileInfo.Name" /> является пустой строкой или содержит только пробелы.</exception>
      <exception cref="T:System.ArgumentNullException">Один или несколько аргументов имеют значение NULL.</exception>
      <returns>Объект <see cref="T:System.IO.FileStream" /> открыт в заданном режиме, с заданными правами и параметром общего доступа.</returns>
    </member>
    <member name="M:System.IO.FileInfo.OpenRead">
      <summary>Создает доступный только для чтения поток <see cref="T:System.IO.FileStream" />.</summary>
      <exception cref="T:System.UnauthorizedAccessException">
        <see cref="P:System.IO.FileInfo.Name" /> доступен только для чтения или является каталогом.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.IO.IOException">Файл уже открыт.</exception>
      <returns>Новый объект <see cref="T:System.IO.FileStream" />, доступный только для чтения.</returns>
    </member>
    <member name="M:System.IO.FileInfo.OpenText">
      <summary>Создает поток <see cref="T:System.IO.StreamReader" /> с кодировкой UTF-8, который считывает данные из существующего текстового файла.</summary>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Файл не найден.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <see cref="P:System.IO.FileInfo.Name" /> доступен только для чтения или является каталогом.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <returns>Новый объект <see langword="StreamReader" /> с кодировкой UTF8.</returns>
    </member>
    <member name="M:System.IO.FileInfo.OpenWrite">
      <summary>Создает доступный только для чтения поток <see cref="T:System.IO.FileStream" />.</summary>
      <exception cref="T:System.UnauthorizedAccessException">Путь, указанный при создании экземпляра объекта <see cref="T:System.IO.FileInfo" />, доступен только для чтения или является каталогом.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Путь, указанный при создании экземпляра объекта <see cref="T:System.IO.FileInfo" />, является недопустимым, например находится на несопоставленном диске.</exception>
      <returns>Объект <see cref="T:System.IO.FileStream" />, доступный только для записи, не предназначенный для совместного использования и служащий для нового или существующего файла.</returns>
    </member>
    <member name="M:System.IO.FileInfo.Replace(System.String,System.String)">
      <summary>Заменяет содержимое заданного файла на содержимое файла, которое описано в текущем объекте <see cref="T:System.IO.FileInfo" />, удаляет исходный файл и создает резервную копию замененного файла.</summary>
      <param name="destinationFileName">Имя файла, который необходимо заменить текущим файлом.</param>
      <param name="destinationBackupFileName">Имя файла, с которым необходимо создать резервную копию файла, описанного параметром <paramref name="destFileName" />.</param>
      <exception cref="T:System.ArgumentException">Путь, описываемый параметром <paramref name="destFileName" />, имел недопустимую форму.  
  
-или- 
Путь, описываемый параметром <paramref name="destBackupFileName" />, имел недопустимую форму.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="destFileName" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Не удалось найти файл, описанный текущим объектом <see cref="T:System.IO.FileInfo" />.  
  
-или- 
Файл, описываемый параметром <paramref name="destinationFileName" />, не найден.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Текущая операционная система не является системой Microsoft Windows NT или более поздней версии.</exception>
      <returns>Объект <see cref="T:System.IO.FileInfo" />, который инкапсулирует сведения о файле, описанные параметром <paramref name="destFileName" />.</returns>
    </member>
    <member name="M:System.IO.FileInfo.Replace(System.String,System.String,System.Boolean)">
      <summary>Заменяет содержимое заданного файла на содержимое файла, которое описано в текущем объекте <see cref="T:System.IO.FileInfo" />, удаляет исходный файл и создает резервную копию замененного файла.  Также позволяет определить, нужно ли игнорировать ошибки слияния.</summary>
      <param name="destinationFileName">Имя файла, который необходимо заменить текущим файлом.</param>
      <param name="destinationBackupFileName">Имя файла, с которым необходимо создать резервную копию файла, описанного параметром <paramref name="destFileName" />.</param>
      <param name="ignoreMetadataErrors">Значение <see langword="true" /> позволяет игнорировать ошибки слияния (например атрибуты и списки ACL), исходящие из заменяемого файла в заменяющий; в противном случае — значение <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException">Путь, описываемый параметром <paramref name="destFileName" />, имел недопустимую форму.  
  
-или- 
Путь, описываемый параметром <paramref name="destBackupFileName" />, имел недопустимую форму.</exception>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="destFileName" /> имеет значение <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Не удалось найти файл, описанный текущим объектом <see cref="T:System.IO.FileInfo" />.  
  
-или- 
Файл, описываемый параметром <paramref name="destinationFileName" />, не найден.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Текущая операционная система не является системой Microsoft Windows NT или более поздней версии.</exception>
      <returns>Объект <see cref="T:System.IO.FileInfo" />, который инкапсулирует сведения о файле, описанные параметром <paramref name="destFileName" />.</returns>
    </member>
    <member name="M:System.IO.FileInfo.ToString">
      <summary>Возвращает путь в виде строки. Используйте свойство <see cref="P:System.IO.FileInfo.Name" /> для полного пути.</summary>
      <returns>Строка, содержащая путь.</returns>
    </member>
    <member name="P:System.IO.FileInfo.Directory">
      <summary>Получает экземпляр родительского каталога.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <returns>Объект <see cref="T:System.IO.DirectoryInfo" />, представляющий родительский каталог данного файла.</returns>
    </member>
    <member name="P:System.IO.FileInfo.DirectoryName">
      <summary>Получает строку, представляющую полный путь к каталогу.</summary>
      <exception cref="T:System.ArgumentNullException">Значение <see langword="null" /> было передано в качестве имени каталога.</exception>
      <exception cref="T:System.IO.PathTooLongException">Длина имени полного пути превышает максимальную длину, определенную в системе.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <returns>Строка, представляющая полный путь к каталогу.</returns>
    </member>
    <member name="P:System.IO.FileInfo.Exists">
      <summary>Получает значение, показывающее, существует ли файл.</summary>
      <returns>Значение <see langword="true" />, если файл существует; значение <see langword="false" />, если файл не существует или если это каталог.</returns>
    </member>
    <member name="P:System.IO.FileInfo.IsReadOnly">
      <summary>Возвращает или задает значение, позволяющее определить, является ли текущий файл доступным только для чтения.</summary>
      <exception cref="T:System.IO.FileNotFoundException">Не удалось найти файл, описанный текущим объектом <see cref="T:System.IO.FileInfo" />.</exception>
      <exception cref="T:System.IO.IOException">При открытии файла произошла ошибка ввода-вывода.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Эта операция не поддерживается на текущей платформе.  
  
 -или-  
  
 У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.ArgumentException">Пользователь не имеет разрешения на запись, но пытается задать для этого свойства значение <see langword="false" />.</exception>
      <returns>Значение <see langword="true" />, если текущий файл доступен только для чтения; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.IO.FileInfo.Length">
      <summary>Получает размер текущего файла в байтах.</summary>
      <exception cref="T:System.IO.IOException">
        <see cref="M:System.IO.FileSystemInfo.Refresh" /> не удалось обновить состояние файла или каталога.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Файл не существует.  
  
-или- 
Свойство <see langword="Length" /> вызывается для каталога.</exception>
      <returns>Размер текущего файла в байтах.</returns>
    </member>
    <member name="P:System.IO.FileInfo.Name">
      <summary>Получает имя файла.</summary>
      <returns>Имя файла.</returns>
    </member>
    <member name="T:System.IO.FileSystemInfo">
      <summary>Предоставляет базовый класс для объектов <see cref="T:System.IO.FileInfo" /> и <see cref="T:System.IO.DirectoryInfo" />.</summary>
    </member>
    <member name="F:System.IO.FileSystemInfo.FullPath">
      <summary>Представляет полный путь к каталогу или файлу.</summary>
      <exception cref="T:System.IO.PathTooLongException">Длина полного пути превышает максимальную длину, определенную в системе.</exception>
    </member>
    <member name="F:System.IO.FileSystemInfo.OriginalPath">
      <summary>Первоначально заданный пользователем относительный или абсолютный путь.</summary>
    </member>
    <member name="M:System.IO.FileSystemInfo.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.FileSystemInfo" />.</summary>
    </member>
    <member name="M:System.IO.FileSystemInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.IO.FileSystemInfo" /> с сериализованными данными.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, хранящий сериализованные данные объекта, относящиеся к выдаваемому исключению.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий контекстные сведения об источнике или назначении.</param>
      <exception cref="T:System.ArgumentNullException">Указанный <see cref="T:System.Runtime.Serialization.SerializationInfo" /> имеет значение null.</exception>
    </member>
    <member name="M:System.IO.FileSystemInfo.Delete">
      <summary>Удаляет файл или каталог.</summary>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указанный путь недопустим (например, он соответствует неподключенному диску).</exception>
      <exception cref="T:System.IO.IOException">Для файла или каталога имеется открытый дескриптор, используется операционная система Windows XP или более ранняя версия. Этот открытый дескриптор может быть результатом перечисления каталогов и файлов. Дополнительные сведения см. в разделе Практическое руководство. Перечисление каталогов и файлов.</exception>
    </member>
    <member name="M:System.IO.FileSystemInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Устанавливает объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> с именем файла и дополнительными сведениями об исключении.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, хранящий сериализованные данные объекта, относящиеся к выдаваемому исключению.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий контекстные сведения об источнике или назначении.</param>
    </member>
    <member name="M:System.IO.FileSystemInfo.Refresh">
      <summary>Обновляет состояние объекта.</summary>
      <exception cref="T:System.IO.IOException">Устройство, например дисковод, не готово.</exception>
    </member>
    <member name="M:System.IO.FileSystemInfo.ToString">
      <summary>Возвращает исходный путь. Используйте свойства <see cref="P:System.IO.FileSystemInfo.FullName" /> или <see cref="P:System.IO.FileSystemInfo.Name" /> для полного пути или имени файла или каталога.</summary>
      <returns>Строка с исходным путем.</returns>
    </member>
    <member name="P:System.IO.FileSystemInfo.Attributes">
      <summary>Получает или задает атрибуты для текущего файла или каталога.</summary>
      <exception cref="T:System.IO.FileNotFoundException">Указанный файл не существует. Возникает только при установке значения свойства.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь. Например, он ведет на несопоставленный диск. Возникает только при установке значения свойства.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Только в .NET Core: Пользователь пытается задать значение атрибута, но не имеет разрешения на запись.</exception>
      <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
      <exception cref="T:System.ArgumentException">Вызывающий оператор пытается установить недействительный атрибут файла.  
  
 - или -  
  
 Только .NET Framework: Пользователь пытается задать значение атрибута, но не имеет разрешения на запись.</exception>
      <exception cref="T:System.IO.IOException">
        <see cref="M:System.IO.FileSystemInfo.Refresh" /> не может инициализировать данные.</exception>
      <returns>Атрибуты <see cref="T:System.IO.FileAttributes" /> текущего объекта <see cref="T:System.IO.FileSystemInfo" />.</returns>
    </member>
    <member name="P:System.IO.FileSystemInfo.CreationTime">
      <summary>Получает или задает время создания текущего файла или каталога.</summary>
      <exception cref="T:System.IO.IOException">
        <see cref="M:System.IO.FileSystemInfo.Refresh" /> не может инициализировать данные.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указанный путь недопустим (например, он соответствует неподключенному диску).</exception>
      <exception cref="T:System.PlatformNotSupportedException">Текущая операционная система не является системой Windows NT или более поздней версии.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Вызывающий объект пытается задать недействительное время создания.</exception>
      <returns>Дата и время создания текущего объекта <see cref="T:System.IO.FileSystemInfo" />.</returns>
    </member>
    <member name="P:System.IO.FileSystemInfo.CreationTimeUtc">
      <summary>Получает или задает время создания текущего файла или каталога в формате UTC.</summary>
      <exception cref="T:System.IO.IOException">
        <see cref="M:System.IO.FileSystemInfo.Refresh" /> не может инициализировать данные.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Указанный путь недопустим (например, он соответствует неподключенному диску).</exception>
      <exception cref="T:System.PlatformNotSupportedException">Текущая операционная система не является системой Windows NT или более поздней версии.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Вызывающий объект пытается задать недействительное время доступа.</exception>
      <returns>Дата и время создания текущего объекта <see cref="T:System.IO.FileSystemInfo" /> в формате UTC.</returns>
    </member>
    <member name="P:System.IO.FileSystemInfo.Exists">
      <summary>Получает значение, показывающее, существует ли данный файл или каталог.</summary>
      <returns>Значение <see langword="true" />, если файл или каталог существует; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.IO.FileSystemInfo.Extension">
      <summary>Получает строку, содержащую расширение файла.</summary>
      <returns>Строка, содержащая расширение <see cref="T:System.IO.FileSystemInfo" />.</returns>
    </member>
    <member name="P:System.IO.FileSystemInfo.FullName">
      <summary>Получает полный путь к каталогу или файлу.</summary>
      <exception cref="T:System.IO.PathTooLongException">Длина имени полного пути и файла превышает максимальную длину, определенную в системе.</exception>
      <exception cref="T:System.Security.SecurityException">У вызывающего объекта отсутствует необходимое разрешение.</exception>
      <returns>Строка, содержащая полный путь.</returns>
    </member>
    <member name="P:System.IO.FileSystemInfo.LastAccessTime">
      <summary>Получает или задает время последнего доступа к текущему файлу или каталогу.</summary>
      <exception cref="T:System.IO.IOException">
        <see cref="M:System.IO.FileSystemInfo.Refresh" /> не может инициализировать данные.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Текущая операционная система не является системой Windows NT или более поздней версии.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Вызывающий объект пытается задать недействительное время доступа</exception>
      <returns>Время последнего доступа к текущему файлу или каталогу.</returns>
    </member>
    <member name="P:System.IO.FileSystemInfo.LastAccessTimeUtc">
      <summary>Получает или задает дату и время последнего доступа к заданному файлу или каталогу в формате всеобщего скоординированного времени (UTC).</summary>
      <exception cref="T:System.IO.IOException">
        <see cref="M:System.IO.FileSystemInfo.Refresh" /> не может инициализировать данные.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Текущая операционная система не является системой Windows NT или более поздней версии.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Вызывающий объект пытается задать недействительное время доступа.</exception>
      <returns>Время последнего доступа к текущему файлу или каталогу в формате UTC.</returns>
    </member>
    <member name="P:System.IO.FileSystemInfo.LastWriteTime">
      <summary>Получает или задает время последней операции записи в текущий файл или каталог.</summary>
      <exception cref="T:System.IO.IOException">
        <see cref="M:System.IO.FileSystemInfo.Refresh" /> не может инициализировать данные.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Текущая операционная система не является системой Windows NT или более поздней версии.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Вызывающий объект пытается задать недействительное время записи.</exception>
      <returns>Время последней операции записи в текущий файл.</returns>
    </member>
    <member name="P:System.IO.FileSystemInfo.LastWriteTimeUtc">
      <summary>Получает или задает время последней операции записи в текущий файл или каталог в формате всеобщего скоординированного времени (UTC).</summary>
      <exception cref="T:System.IO.IOException">
        <see cref="M:System.IO.FileSystemInfo.Refresh" /> не может инициализировать данные.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Текущая операционная система не является системой Windows NT или более поздней версии.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Вызывающий объект пытается задать недействительное время записи.</exception>
      <returns>Время последней операции записи в текущий файл в формате UTC.</returns>
    </member>
    <member name="P:System.IO.FileSystemInfo.Name">
      <summary>Для файлов — получает имя файла. Для каталогов — получает имя последнего каталога в иерархии, если таковая существует. В противном случае свойство <see langword="Name" /> получает имя данного каталога.</summary>
      <returns>Строка, представляющая собой имя родительского каталога, имя последнего каталога в иерархии или имя файла, включая расширение имени файла.</returns>
    </member>
    <member name="T:System.IO.MatchCasing">
      <summary>Указывает тип регистра символов для сопоставления.</summary>
    </member>
    <member name="F:System.IO.MatchCasing.CaseInsensitive">
      <summary>Поиск соответствий без учета регистра символов.</summary>
    </member>
    <member name="F:System.IO.MatchCasing.CaseSensitive">
      <summary>Поиск соответствий с учетом регистра символов.</summary>
    </member>
    <member name="F:System.IO.MatchCasing.PlatformDefault">
      <summary>Поиск соответствий в режиме учета регистра символов для данной платформы.</summary>
    </member>
    <member name="T:System.IO.MatchType">
      <summary>Указывает используемый тип сопоставления с подстановочными знаками.</summary>
    </member>
    <member name="F:System.IO.MatchType.Simple">
      <summary>Поиск совпадений с подстановочными знаками "*" и "?".</summary>
    </member>
    <member name="F:System.IO.MatchType.Win32">
      <summary>Поиск совпадений с использованием семантики сопоставления в стиле Win32 DOS. Символы *, ?, &lt;, &gt; и " считаются подстановочными знаками.</summary>
    </member>
    <member name="T:System.IO.SearchOption">
      <summary>Указывает, следует ли выполнять поиск в текущем каталоге или в текущем каталоге и всех подкаталогах.</summary>
    </member>
    <member name="F:System.IO.SearchOption.AllDirectories">
      <summary>Включает текущий каталог и все подкаталоги в операцию поиска. Этот параметр включает в поиск точки повторной обработки, такие как подключенные диски и символические ссылки.</summary>
    </member>
    <member name="F:System.IO.SearchOption.TopDirectoryOnly">
      <summary>Включает в операцию поиска только текущий каталог.</summary>
    </member>
  </members>
</doc>