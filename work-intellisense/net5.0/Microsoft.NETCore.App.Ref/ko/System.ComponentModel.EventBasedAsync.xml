<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.ComponentModel.EventBasedAsync</name>
  </assembly>
  <members>
    <member name="T:System.ComponentModel.AsyncCompletedEventArgs">
      <summary vsli:raw="Provides data for the MethodName&lt;see langword=&quot;Completed&quot; /&gt; event.">MethodName 이벤트에 대 한 데이터를 제공 <see langword="Completed" /> 합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.AsyncCompletedEventArgs.#ctor(System.Exception,System.Boolean,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.AsyncCompletedEventArgs&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="error" vsli:raw="Any error that occurred during the asynchronous operation.">비동기 작업 중 발생한 오류입니다.</param>
      <param name="cancelled" vsli:raw="A value indicating whether the asynchronous operation was canceled.">비동기 작업이 취소되었는지 여부를 나타내는 값입니다.</param>
      <param name="userState" vsli:raw="The optional user-supplied state object passed to the &lt;see cref=&quot;M:System.ComponentModel.BackgroundWorker.RunWorkerAsync(System.Object)&quot; /&gt; method.">
        <see cref="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync(System.Object)" /> 메서드에 전달되는 사용자가 제공한 선택적인 상태 개체입니다.</param>
    </member>
    <member name="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary">
      <summary vsli:raw="Raises a user-supplied exception if an asynchronous operation failed.">비동기 작업에 실패한 경우 사용자가 제공한 예외를 발생시킵니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled&quot; /&gt; property is &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" /> 속성은 <see langword="true" />입니다.</exception>
      <exception cref="T:System.Reflection.TargetInvocationException" vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.AsyncCompletedEventArgs.Error&quot; /&gt; property has been set by the asynchronous operation. The &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property holds a reference to &lt;see cref=&quot;P:System.ComponentModel.AsyncCompletedEventArgs.Error&quot; /&gt;.">
        <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> 속성이 비동기 작업에서 설정된 경우 <see cref="P:System.Exception.InnerException" /> 속성에는 <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />에 대한 참조가 들어 있습니다.</exception>
    </member>
    <member name="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled">
      <summary vsli:raw="Gets a value indicating whether an asynchronous operation has been canceled.">비동기 작업이 취소되었는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the background operation has been canceled; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">백그라운드 작업이 취소되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.AsyncCompletedEventArgs.Error">
      <summary vsli:raw="Gets a value indicating which error occurred during an asynchronous operation.">비동기 작업 중 발생한 오류를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Exception&quot; /&gt; instance, if an error occurred during an asynchronous operation; otherwise &lt;see langword=&quot;null&quot; /&gt;.">비동기 작업 중 오류가 발생했으면 <see cref="T:System.Exception" /> 인스턴스이고, 그렇지 않으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.AsyncCompletedEventArgs.UserState">
      <summary vsli:raw="Gets the unique identifier for the asynchronous task.">비동기 작업의 고유 식별자를 가져옵니다.</summary>
      <returns vsli:raw="An object reference that uniquely identifies the asynchronous task; otherwise, &lt;see langword=&quot;null&quot; /&gt; if no value has been set.">비동기 작업을 고유하게 식별하는 개체 참조이거나, 설정된 값이 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.AsyncCompletedEventHandler">
      <summary vsli:raw="Represents the method that will handle the MethodName&lt;see langword=&quot;Completed&quot; /&gt; event of an asynchronous operation.">비동기 작업의 MethodName 이벤트를 처리할 메서드를 나타냅니다 <see langword="Completed" /> .</summary>
      <param name="sender" vsli:raw="The source of the event.">이벤트 소스입니다.</param>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.AsyncCompletedEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터가 포함된 <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" />입니다.</param>
    </member>
    <member name="T:System.ComponentModel.AsyncOperation">
      <summary vsli:raw="Tracks the lifetime of an asynchronous operation.">비동기 작업의 수명을 추적합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.AsyncOperation.Finalize">
      <summary vsli:raw="Finalizes the asynchronous operation.">비동기 작업을 완료합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.AsyncOperation.OperationCompleted">
      <summary vsli:raw="Ends the lifetime of an asynchronous operation.">비동기 작업의 수명을 끝냅니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.ComponentModel.AsyncOperation.OperationCompleted&quot; /&gt; has been called previously for this task.">
        <see cref="M:System.ComponentModel.AsyncOperation.OperationCompleted" />가 이 작업에 대해 이미 호출된 경우</exception>
    </member>
    <member name="M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)">
      <summary vsli:raw="Invokes a delegate on the thread or context appropriate for the application model.">애플리케이션 모델에 적절한 스레드나 컨텍스트에서 대리자를 호출합니다.</summary>
      <param name="d" vsli:raw="A &lt;see cref=&quot;T:System.Threading.SendOrPostCallback&quot; /&gt; object that wraps the delegate to be called when the operation ends.">작업이 끝날 때 호출될 대리자를 래핑하는 <see cref="T:System.Threading.SendOrPostCallback" /> 개체입니다.</param>
      <param name="arg" vsli:raw="An argument for the delegate contained in the &lt;paramref name=&quot;d&quot; /&gt; parameter.">
        <paramref name="d" /> 매개 변수에 포함된 대리자에 대한 인수입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;M:System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)&quot; /&gt; method has been called previously for this task.">
        <see cref="M:System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)" /> 메서드가 이 작업에 대해 이미 호출된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;d&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="d" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)">
      <summary vsli:raw="Ends the lifetime of an asynchronous operation.">비동기 작업의 수명을 끝냅니다.</summary>
      <param name="d" vsli:raw="A &lt;see cref=&quot;T:System.Threading.SendOrPostCallback&quot; /&gt; object that wraps the delegate to be called when the operation ends.">작업이 끝날 때 호출될 대리자를 래핑하는 <see cref="T:System.Threading.SendOrPostCallback" /> 개체입니다.</param>
      <param name="arg" vsli:raw="An argument for the delegate contained in the &lt;paramref name=&quot;d&quot; /&gt; parameter.">
        <paramref name="d" /> 매개 변수에 포함된 대리자에 대한 인수입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;M:System.ComponentModel.AsyncOperation.OperationCompleted&quot; /&gt; has been called previously for this task.">
        <see cref="M:System.ComponentModel.AsyncOperation.OperationCompleted" />가 이 작업에 대해 이미 호출된 경우</exception>
      <exception cref="T:System.ArgumentNullException" vsli:raw="&lt;paramref name=&quot;d&quot; /&gt; is &lt;see langword=&quot;null&quot; /&gt;.">
        <paramref name="d" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.ComponentModel.AsyncOperation.SynchronizationContext">
      <summary vsli:raw="Gets the &lt;see cref=&quot;T:System.Threading.SynchronizationContext&quot; /&gt; object that was passed to the constructor.">생성자에 전달된 <see cref="T:System.Threading.SynchronizationContext" /> 개체를 가져옵니다.</summary>
      <returns vsli:raw="The &lt;see cref=&quot;T:System.Threading.SynchronizationContext&quot; /&gt; object that was passed to the constructor.">생성자에 전달된 <see cref="T:System.Threading.SynchronizationContext" /> 개체입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.AsyncOperation.UserSuppliedState">
      <summary vsli:raw="Gets or sets an object used to uniquely identify an asynchronous operation.">비동기 작업을 고유하게 식별하는 데 사용되는 개체를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The state object passed to the asynchronous method invocation.">비동기 메서드 호출에 전달된 상태 개체입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.AsyncOperationManager">
      <summary vsli:raw="Provides concurrency management for classes that support asynchronous method calls. This class cannot be inherited.">비동기 메서드 호출을 지원하는 클래스에 대한 동시성 관리 기능을 제공합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.ComponentModel.AsyncOperationManager.CreateOperation(System.Object)">
      <summary vsli:raw="Returns an &lt;see cref=&quot;T:System.ComponentModel.AsyncOperation&quot; /&gt; for tracking the duration of a particular asynchronous operation.">특정 비동기 작업의 기간을 추적하기 위한 <see cref="T:System.ComponentModel.AsyncOperation" />을 반환합니다.</summary>
      <param name="userSuppliedState" vsli:raw="An object used to associate a piece of client state, such as a task ID, with a particular asynchronous operation.">작업 ID와 같은 클라이언트 상태 정보와 특정 비동기 작업을 연결하는 데 사용되는 개체입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.ComponentModel.AsyncOperation&quot; /&gt; that you can use to track the duration of an asynchronous method invocation.">비동기 메서드 호출의 기간을 추적하는 데 사용할 수 있는 <see cref="T:System.ComponentModel.AsyncOperation" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.AsyncOperationManager.SynchronizationContext">
      <summary vsli:raw="Gets or sets the synchronization context for the asynchronous operation.">비동기 작업의 동기화 컨텍스트를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The synchronization context for the asynchronous operation.">비동기 작업의 동기화 컨텍스트입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.BackgroundWorker">
      <summary vsli:raw="Executes an operation on a separate thread.">별도의 스레드에서 작업을 실행합니다.</summary>
    </member>
    <member name="E:System.ComponentModel.BackgroundWorker.DoWork">
      <summary vsli:raw="Occurs when &lt;see cref=&quot;M:System.ComponentModel.BackgroundWorker.RunWorkerAsync&quot; /&gt; is called.">
        <see cref="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync" />가 호출될 때 발생합니다.</summary>
    </member>
    <member name="E:System.ComponentModel.BackgroundWorker.ProgressChanged">
      <summary vsli:raw="Occurs when &lt;see cref=&quot;M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32)&quot; /&gt; is called.">
        <see cref="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32)" />가 호출될 때 발생합니다.</summary>
    </member>
    <member name="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted">
      <summary vsli:raw="Occurs when the background operation has completed, has been canceled, or has raised an exception.">백그라운드 작업이 완료되거나 취소되거나 예외를 발생시켰을 때 발생합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.BackgroundWorker.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.BackgroundWorker&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.BackgroundWorker" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.BackgroundWorker.CancelAsync">
      <summary vsli:raw="Requests cancellation of a pending background operation.">보류 중인 백그라운드 작업의 취소를 요청합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation&quot; /&gt; is &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="P:System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation" />이(가) <see langword="false" />인 경우</exception>
    </member>
    <member name="M:System.ComponentModel.BackgroundWorker.Dispose(System.Boolean)">
      <param name="disposing" vsli:raw="This method does not do anything." />
    </member>
    <member name="M:System.ComponentModel.BackgroundWorker.OnDoWork(System.ComponentModel.DoWorkEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.BackgroundWorker.DoWork&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.BackgroundWorker.DoWork" /> 이벤트를 발생시킵니다.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">이벤트 데이터가 포함된 <see cref="T:System.EventArgs" />입니다.</param>
    </member>
    <member name="M:System.ComponentModel.BackgroundWorker.OnProgressChanged(System.ComponentModel.ProgressChangedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.BackgroundWorker.ProgressChanged&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" /> 이벤트를 발생시킵니다.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">이벤트 데이터가 포함된 <see cref="T:System.EventArgs" />입니다.</param>
    </member>
    <member name="M:System.ComponentModel.BackgroundWorker.OnRunWorkerCompleted(System.ComponentModel.RunWorkerCompletedEventArgs)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted" /> 이벤트를 발생시킵니다.</summary>
      <param name="e" vsli:raw="An &lt;see cref=&quot;T:System.EventArgs&quot; /&gt; that contains the event data.">이벤트 데이터가 포함된 <see cref="T:System.EventArgs" />입니다.</param>
    </member>
    <member name="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.BackgroundWorker.ProgressChanged&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" /> 이벤트를 발생시킵니다.</summary>
      <param name="percentProgress" vsli:raw="The percentage, from 0 to 100, of the background operation that is complete.">백그라운드 작업의 완료율(0부터 100까지)입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress&quot; /&gt; property is set to &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress" /> 속성이 <see langword="false" />로 설정되어 있습니다.</exception>
    </member>
    <member name="M:System.ComponentModel.BackgroundWorker.ReportProgress(System.Int32,System.Object)">
      <summary vsli:raw="Raises the &lt;see cref=&quot;E:System.ComponentModel.BackgroundWorker.ProgressChanged&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" /> 이벤트를 발생시킵니다.</summary>
      <param name="percentProgress" vsli:raw="The percentage, from 0 to 100, of the background operation that is complete.">백그라운드 작업의 완료율(0부터 100까지)입니다.</param>
      <param name="userState" vsli:raw="A unique &lt;see cref=&quot;T:System.Object&quot; /&gt; indicating the user state. Returned as the &lt;see cref=&quot;P:System.ComponentModel.ProgressChangedEventArgs.UserState&quot; /&gt; property of the &lt;see cref=&quot;T:System.ComponentModel.ProgressChangedEventArgs&quot; /&gt;.">사용자 상태를 나타내는 고유한 <see cref="T:System.Object" />입니다. <see cref="T:System.ComponentModel.ProgressChangedEventArgs" />의 <see cref="P:System.ComponentModel.ProgressChangedEventArgs.UserState" /> 속성으로서 반환되었습니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="The &lt;see cref=&quot;P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress&quot; /&gt; property is set to &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress" /> 속성이 <see langword="false" />로 설정되어 있습니다.</exception>
    </member>
    <member name="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync">
      <summary vsli:raw="Starts execution of a background operation.">백그라운드 작업의 실행을 시작합니다.</summary>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.ComponentModel.BackgroundWorker.IsBusy&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="P:System.ComponentModel.BackgroundWorker.IsBusy" />이(가) <see langword="true" />인 경우</exception>
    </member>
    <member name="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync(System.Object)">
      <summary vsli:raw="Starts execution of a background operation.">백그라운드 작업의 실행을 시작합니다.</summary>
      <param name="argument" vsli:raw="A parameter for use by the background operation to be executed in the &lt;see cref=&quot;E:System.ComponentModel.BackgroundWorker.DoWork&quot; /&gt; event handler.">
        <see cref="E:System.ComponentModel.BackgroundWorker.DoWork" /> 이벤트 처리기에서 실행될 백그라운드 작업에서 사용하는 매개 변수입니다.</param>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.ComponentModel.BackgroundWorker.IsBusy&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="P:System.ComponentModel.BackgroundWorker.IsBusy" />이(가) <see langword="true" />인 경우</exception>
    </member>
    <member name="P:System.ComponentModel.BackgroundWorker.CancellationPending">
      <summary vsli:raw="Gets a value indicating whether the application has requested cancellation of a background operation.">애플리케이션에서 백그라운드 작업의 취소를 요청했는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the application has requested cancellation of a background operation; otherwise, &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">애플리케이션에서 백그라운드 작업의 취소를 요청했으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.BackgroundWorker.IsBusy">
      <summary vsli:raw="Gets a value indicating whether the &lt;see cref=&quot;T:System.ComponentModel.BackgroundWorker&quot; /&gt; is running an asynchronous operation.">
        <see cref="T:System.ComponentModel.BackgroundWorker" />가 비동기 작업을 실행하고 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt;, if the &lt;see cref=&quot;T:System.ComponentModel.BackgroundWorker&quot; /&gt; is running an asynchronous operation; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.ComponentModel.BackgroundWorker" />가 비동기 작업을 실행하고 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.BackgroundWorker.WorkerReportsProgress">
      <summary vsli:raw="Gets or sets a value indicating whether the &lt;see cref=&quot;T:System.ComponentModel.BackgroundWorker&quot; /&gt; can report progress updates.">
        <see cref="T:System.ComponentModel.BackgroundWorker" />가 진행률 업데이트를 보고할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.BackgroundWorker&quot; /&gt; supports progress updates; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.ComponentModel.BackgroundWorker" />가 진행률 업데이트를 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.BackgroundWorker.WorkerSupportsCancellation">
      <summary vsli:raw="Gets or sets a value indicating whether the &lt;see cref=&quot;T:System.ComponentModel.BackgroundWorker&quot; /&gt; supports asynchronous cancellation.">
        <see cref="T:System.ComponentModel.BackgroundWorker" />가 비동기 취소를 지원하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the &lt;see cref=&quot;T:System.ComponentModel.BackgroundWorker&quot; /&gt; supports cancellation; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default is &lt;see langword=&quot;false&quot; /&gt;.">
        <see cref="T:System.ComponentModel.BackgroundWorker" />가 취소를 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.DoWorkEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.ComponentModel.BackgroundWorker.DoWork&quot; /&gt; event handler.">
        <see cref="E:System.ComponentModel.BackgroundWorker.DoWork" /> 이벤트 처리기에 대한 데이터를 제공합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.DoWorkEventArgs.#ctor(System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.DoWorkEventArgs&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.DoWorkEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="argument" vsli:raw="Specifies an argument for an asynchronous operation.">비동기 작업의 인수를 지정합니다.</param>
    </member>
    <member name="P:System.ComponentModel.DoWorkEventArgs.Argument">
      <summary vsli:raw="Gets a value that represents the argument of an asynchronous operation.">비동기 작업의 인수를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; representing the argument of an asynchronous operation.">비동기 작업의 인수를 나타내는 <see cref="T:System.Object" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.DoWorkEventArgs.Result">
      <summary vsli:raw="Gets or sets a value that represents the result of an asynchronous operation.">비동기 작업의 결과를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; representing the result of an asynchronous operation.">비동기 작업의 결과를 나타내는 <see cref="T:System.Object" />입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.DoWorkEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.ComponentModel.BackgroundWorker.DoWork&quot; /&gt; event. This class cannot be inherited.">
        <see cref="E:System.ComponentModel.BackgroundWorker.DoWork" /> 이벤트를 처리할 메서드를 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
      <param name="sender" vsli:raw="The source of the event.">이벤트 소스입니다.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.DoWorkEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.DoWorkEventArgs" />입니다.</param>
    </member>
    <member name="T:System.ComponentModel.ProgressChangedEventArgs">
      <summary vsli:raw="Provides data for the &lt;see cref=&quot;E:System.ComponentModel.BackgroundWorker.ProgressChanged&quot; /&gt; event.">
        <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.ProgressChangedEventArgs.#ctor(System.Int32,System.Object)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.ProgressChangedEventArgs&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.ProgressChangedEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="progressPercentage" vsli:raw="The percentage of an asynchronous task that has been completed.">비동기 작업의 완료율입니다.</param>
      <param name="userState" vsli:raw="A unique user state.">고유한 사용자 상태입니다.</param>
    </member>
    <member name="P:System.ComponentModel.ProgressChangedEventArgs.ProgressPercentage">
      <summary vsli:raw="Gets the asynchronous task progress percentage.">비동기 작업의 진행률을 가져옵니다.</summary>
      <returns vsli:raw="A percentage value indicating the asynchronous task progress.">비동기 작업의 진행을 나타내는 백분율 값입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.ProgressChangedEventArgs.UserState">
      <summary vsli:raw="Gets a unique user state.">고유한 사용자 상태를 가져옵니다.</summary>
      <returns vsli:raw="A unique &lt;see cref=&quot;T:System.Object&quot; /&gt; indicating the user state.">사용자 상태를 나타내는 고유한 <see cref="T:System.Object" />입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.ProgressChangedEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.ComponentModel.BackgroundWorker.ProgressChanged&quot; /&gt; event of the &lt;see cref=&quot;T:System.ComponentModel.BackgroundWorker&quot; /&gt; class. This class cannot be inherited.">
        <see cref="T:System.ComponentModel.BackgroundWorker" /> 클래스의 <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" /> 이벤트를 처리할 메서드를 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
      <param name="sender" vsli:raw="The source of the event.">이벤트 소스입니다.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.ProgressChangedEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.ProgressChangedEventArgs" />입니다.</param>
    </member>
    <member name="T:System.ComponentModel.RunWorkerCompletedEventArgs">
      <summary vsli:raw="Provides data for the MethodName&lt;see langword=&quot;Completed&quot; /&gt; event.">MethodName 이벤트에 대 한 데이터를 제공 <see langword="Completed" /> 합니다.</summary>
    </member>
    <member name="M:System.ComponentModel.RunWorkerCompletedEventArgs.#ctor(System.Object,System.Exception,System.Boolean)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.ComponentModel.RunWorkerCompletedEventArgs&quot; /&gt; class.">
        <see cref="T:System.ComponentModel.RunWorkerCompletedEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="result" vsli:raw="The result of an asynchronous operation.">비동기 작업의 결과입니다.</param>
      <param name="error" vsli:raw="Any error that occurred during the asynchronous operation.">비동기 작업 중 발생한 오류입니다.</param>
      <param name="cancelled" vsli:raw="A value indicating whether the asynchronous operation was canceled.">비동기 작업이 취소되었는지 여부를 나타내는 값입니다.</param>
    </member>
    <member name="P:System.ComponentModel.RunWorkerCompletedEventArgs.Result">
      <summary vsli:raw="Gets a value that represents the result of an asynchronous operation.">비동기 작업의 결과를 나타내는 값을 가져옵니다.</summary>
      <exception cref="T:System.Reflection.TargetInvocationException" vsli:raw="&lt;see cref=&quot;P:System.ComponentModel.AsyncCompletedEventArgs.Error&quot; /&gt; is not &lt;see langword=&quot;null&quot; /&gt;. The &lt;see cref=&quot;P:System.Exception.InnerException&quot; /&gt; property holds a reference to &lt;see cref=&quot;P:System.ComponentModel.AsyncCompletedEventArgs.Error&quot; /&gt;.">
        <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />이 <see langword="null" />가 아닙니다. <see cref="P:System.Exception.InnerException" /> 속성에는 <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />에 대한 참조가 들어 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException" vsli:raw="&lt;see cref=&quot;P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled&quot; /&gt; is &lt;see langword=&quot;true&quot; /&gt;.">
        <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />이(가) <see langword="true" />인 경우</exception>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; representing the result of an asynchronous operation.">비동기 작업의 결과를 나타내는 <see cref="T:System.Object" />입니다.</returns>
    </member>
    <member name="P:System.ComponentModel.RunWorkerCompletedEventArgs.UserState">
      <summary vsli:raw="Gets a value that represents the user state.">사용자 상태를 나타내는 값을 가져옵니다.</summary>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Object&quot; /&gt; representing the user state.">사용자 상태를 나타내는 <see cref="T:System.Object" />입니다.</returns>
    </member>
    <member name="T:System.ComponentModel.RunWorkerCompletedEventHandler">
      <summary vsli:raw="Represents the method that will handle the &lt;see cref=&quot;E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted&quot; /&gt; event of a &lt;see cref=&quot;T:System.ComponentModel.BackgroundWorker&quot; /&gt; class.">
        <see cref="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted" /> 클래스의 <see cref="T:System.ComponentModel.BackgroundWorker" /> 이벤트를 처리할 메서드를 나타냅니다.</summary>
      <param name="sender" vsli:raw="The source of the event.">이벤트 소스입니다.</param>
      <param name="e" vsli:raw="A &lt;see cref=&quot;T:System.ComponentModel.RunWorkerCompletedEventArgs&quot; /&gt; that contains the event data.">이벤트 데이터를 포함하는 <see cref="T:System.ComponentModel.RunWorkerCompletedEventArgs" />입니다.</param>
    </member>
  </members>
</doc>