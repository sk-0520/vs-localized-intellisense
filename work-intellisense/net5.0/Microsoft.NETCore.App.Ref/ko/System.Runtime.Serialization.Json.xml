<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Runtime.Serialization.Json</name>
  </assembly>
  <members>
    <member name="T:System.Runtime.Serialization.DateTimeFormat">
      <summary vsli:raw="Specifies date-time format options.">날짜-시간 형식 옵션을 지정합니다.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DateTimeFormat.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DateTimeFormat&quot; /&gt; class using the format string.">형식 문자열을 사용하여 <see cref="T:System.Runtime.Serialization.DateTimeFormat" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="formatString" vsli:raw="The format string.">서식 문자열입니다.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DateTimeFormat.#ctor(System.String,System.IFormatProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DateTimeFormat&quot; /&gt; class using the format string and format provider.">형식 문자열과 형식 공급자를 사용하여 <see cref="T:System.Runtime.Serialization.DateTimeFormat" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="formatString" vsli:raw="The format sting.">형식 문자열입니다.</param>
      <param name="formatProvider" vsli:raw="The format provider.">서식 공급자입니다.</param>
    </member>
    <member name="P:System.Runtime.Serialization.DateTimeFormat.DateTimeStyles">
      <summary vsli:raw="Gets or sets the formatting options that customize string parsing for some date and time parsing methods.">여러 날짜 및 시간 구문 분석 메서드의 문자열 구문 분석 방법을 사용자 지정하는 형식 지정 옵션을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The formatting options that customize string parsing for some date and time parsing methods.">여러 날짜 및 시간 구문 분석 메서드의 문자열 구문 분석 방법을 사용자 지정하는 형식 지정 옵션입니다.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DateTimeFormat.FormatProvider">
      <summary vsli:raw="Gets an object that controls formatting.">서식 지정을 제어하는 개체를 가져옵니다.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.DateTimeFormat.FormatString">
      <summary vsli:raw="Gets the format strings to control the formatting produced when a date or time is represented as a string.">날짜 또는 시간이 문자열로 표현되는 경우 생성된 서식을 제어하는 서식 문자열을 가져옵니다.</summary>
      <returns vsli:raw="The format strings to control the formatting produced when a date or time is represented as a string.">날짜 또는 시간이 문자열로 표시되는 경우 만들어지는 서식을 제어하는 형식 문자열입니다.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.EmitTypeInformation">
      <summary vsli:raw="Specifies how often to emit type information.">형식 정보를 내보내는 빈도를 지정합니다.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.EmitTypeInformation.Always">
      <summary vsli:raw="Always to emit type information.">항상 형식 정보를 내보냅니다.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.EmitTypeInformation.AsNeeded">
      <summary vsli:raw="As needed emit type information.">필요에 따라 형식 정보를 내보냅니다.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.EmitTypeInformation.Never">
      <summary vsli:raw="Never to emit type information.">형식 정보를 절대 내보내지 않습니다.</summary>
    </member>
    <member name="T:System.Runtime.Serialization.Json.DataContractJsonSerializer">
      <summary vsli:raw="Serializes objects to the JavaScript Object Notation (JSON) and deserializes JSON data to objects. This class cannot be inherited.">개체를 JSON(JavaScript Object Notation)으로 직렬화하고 JSON 데이터를 개체로 역직렬화합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type.">지정된 형식의 개체를 직렬화하거나 역직렬화하기 위해 <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="type" vsli:raw="The type of the instances that is serialized or deserialized.">직렬화되거나 역직렬화되는 인스턴스 형식입니다.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type, with a collection of known types that may be present in the object graph.">
        <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> 클래스의 새 인스턴스를 초기화하여 지정된 형식의 개체와 함께 개체 그래프에 있을 수 있는 알려진 형식 컬렉션을 직렬화하거나 역직렬화합니다.</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">직렬화되거나 역직렬화되는 인스턴스 형식입니다.</param>
      <param name="knownTypes" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the types that may be present in the object graph.">개체 그래프에 있을 수 있는 형식을 포함하는 <see cref="T:System.Type" />의 <see cref="T:System.Collections.Generic.IEnumerable`1" />입니다.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Runtime.Serialization.Json.DataContractJsonSerializerSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type and serializer settings.">
        <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> 클래스의 새 인스턴스를 초기화하여 지정된 형식 및 직렬 변환기 설정의 개체를 직렬화하거나 역직렬화합니다.</summary>
      <param name="type" vsli:raw="The type of the instances that is serialized or deserialized.">직렬화되거나 역직렬화되는 인스턴스 형식입니다.</param>
      <param name="settings" vsli:raw="The serializer settings for the JSON serializer.">JSON serializer에 대한 serializer 설정입니다.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; class to serialize or deserialize an object of a specified type using the XML root element specified by a parameter.">매개 변수를 통해 지정된 XML 루트 요소를 사용하여 지정된 형식의 개체를 직렬화하거나 역직렬화하기 위해 <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="type" vsli:raw="The type of the instances that is serialized or deserialized.">직렬화되거나 역직렬화되는 인스턴스 형식입니다.</param>
      <param name="rootName" vsli:raw="The name of the XML element that encloses the content to serialize or deserialize.">직렬화하거나 역직렬화할 콘텐츠를 둘러싸는 XML 요소의 이름입니다.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; class to serialize or deserialize an object of a specified type using the XML root element specified by a parameter, with a collection of known types that may be present in the object graph.">매개 변수를 통해 지정된 XML 루트 요소를 사용하여 지정된 형식의 개체 및 개체 그래프에 있을 수 있는 알려진 형식 컬렉션을 직렬화하거나 역직렬화하기 위해 <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> 클래스의 새 인스턴스를 초기합니다.</summary>
      <param name="type" vsli:raw="The type of the instances that is serialized or deserialized.">직렬화되거나 역직렬화되는 인스턴스 형식입니다.</param>
      <param name="rootName" vsli:raw="The name of the XML element that encloses the content to serialize or deserialize. The default is &quot;root&quot;.">직렬화하거나 역직렬화할 콘텐츠를 둘러싸는 XML 요소의 이름입니다. 기본값은 "root"입니다.</param>
      <param name="knownTypes" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the types that may be present in the object graph.">개체 그래프에 있을 수 있는 형식을 포함하는 <see cref="T:System.Type" />의 <see cref="T:System.Collections.Generic.IEnumerable`1" />입니다.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; class to serialize or deserialize an object of a specified type using the XML root element specified by a parameter of type &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;.">
        <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> 형식의 매개 변수를 통해 지정된 XML 루트 요소를 사용하여 지정된 형식의 개체를 직렬화하거나 역직렬화하기 위해 <see cref="T:System.Xml.XmlDictionaryString" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="type" vsli:raw="The type of the instances that is serialized or deserialized.">직렬화되거나 역직렬화되는 인스턴스 형식입니다.</param>
      <param name="rootName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that contains the root element name of the content.">콘텐츠의 루트 요소 이름을 포함하는 <see cref="T:System.Xml.XmlDictionaryString" />입니다.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; class to serialize or deserialize an object of a specified type using the XML root element specified by a parameter of type &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;, with a collection of known types that may be present in the object graph.">
        <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> 형식의 매개 변수를 통해 지정된 XML 루트 요소를 사용하여 지정된 형식의 개체 및 개체 그래프에 있을 수 있는 알려진 형식 컬렉션을 직렬화하거나 역직렬화하기 위해 <see cref="T:System.Xml.XmlDictionaryString" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="type" vsli:raw="The type of the instances that is serialized or deserialized.">직렬화되거나 역직렬화되는 인스턴스 형식입니다.</param>
      <param name="rootName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that contains the root element name of the content.">콘텐츠의 루트 요소 이름을 포함하는 <see cref="T:System.Xml.XmlDictionaryString" />입니다.</param>
      <param name="knownTypes" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the types that may be present in the object graph.">개체 그래프에 있을 수 있는 형식을 포함하는 <see cref="T:System.Type" />의 <see cref="T:System.Collections.Generic.IEnumerable`1" />입니다.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
      <summary vsli:raw="Gets a value that specifies whether the &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; is positioned over an XML element that represents an object the serializer can deserialize from.">직렬 변환기가 역직렬화할 수 있는 개체를 나타내는 XML 요소 위에 <see cref="T:System.Xml.XmlDictionaryReader" />가 배치되는지 여부를 지정하는 값을 가져옵니다.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML stream mapped from JSON.">JSON에서 매핑된 XML 스트림을 읽는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryReader" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is positioned correctly; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">판독기가 올바르게 배치되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlReader)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is positioned on an object that can be deserialized.">역직렬화할 수 있는 개체에 <see cref="T:System.Xml.XmlReader" />가 배치되는지 여부를 확인합니다.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML stream.">XML 스트림을 읽는 데 사용되는 <see cref="T:System.Xml.XmlReader" />입니다.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is positioned correctly; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">판독기가 올바르게 배치되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.IO.Stream)">
      <summary vsli:raw="Reads a document stream in the JSON (JavaScript Object Notation) format and returns the deserialized object.">JSON(JavaScript Object Notation) 형식의 문서 스트림을 읽고 역직렬화된 개체를 반환합니다.</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; to be read.">읽을 <see cref="T:System.IO.Stream" />입니다.</param>
      <returns vsli:raw="The deserialized object.">역직렬화된 개체입니다.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlDictionaryReader)">
      <summary vsli:raw="Reads the XML document mapped from JSON (JavaScript Object Notation) with an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; and returns the deserialized object.">
        <see cref="T:System.Xml.XmlDictionaryReader" />를 사용하여 JSON에서 매핑된 XML 문서를 읽고 역직렬화된 개체를 반환합니다.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML document mapped from JSON.">JSON에서 매핑된 XML 문서를 읽는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryReader" />입니다.</param>
      <returns vsli:raw="The deserialized object.">역직렬화된 개체입니다.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary vsli:raw="Reads the XML document mapped from JSON with an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; and returns the deserialized object; it also enables you to specify whether the serializer should verify that it is positioned on an appropriate element before attempting to deserialize.">
        <see cref="T:System.Xml.XmlDictionaryReader" />를 사용하여 JSON에서 매핑된 XML 문서를 읽고 역직렬화된 개체를 반환하며, 또한 직렬 변환기가 역직렬화를 시도하기 전에 적절한 요소에 배치되었음을 확인해야 하는지 여부를 지정할 수 있습니다.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML document mapped from JSON.">JSON에서 매핑된 XML 문서를 읽는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryReader" />입니다.</param>
      <param name="verifyObjectName" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to check whether the enclosing XML element name and namespace correspond to the expected name and namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt; to skip the verification. The default is &lt;see langword=&quot;true&quot; /&gt;.">바깥쪽 XML 요소 이름 및 네임스페이스가 예상 이름 및 네임스페이스와 일치하는지 여부를 확인하려면 <see langword="true" />이고, 확인을 건너뛰려면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</param>
      <returns vsli:raw="The deserialized object.">역직렬화된 개체입니다.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlReader)">
      <summary vsli:raw="Reads the XML document mapped from JSON (JavaScript Object Notation) with an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and returns the deserialized object.">
        <see cref="T:System.Xml.XmlReader" />를 사용하여 JSON에서 매핑된 XML 문서를 읽고 역직렬화된 개체를 반환합니다.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML document mapped from JSON.">JSON에서 매핑된 XML 문서를 읽는 데 사용되는 <see cref="T:System.Xml.XmlReader" />입니다.</param>
      <returns vsli:raw="The deserialized object.">역직렬화된 개체입니다.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
      <summary vsli:raw="Reads an XML document mapped from JSON with an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and returns the deserialized object; it also enables you to specify whether the serializer should verify that it is positioned on an appropriate element before attempting to deserialize.">
        <see cref="T:System.Xml.XmlReader" />를 사용하여 JSON에서 매핑된 XML 문서를 읽고 역직렬화된 개체를 반환하며, 또한 직렬 변환기가 역직렬화를 시도하기 전에 적절한 요소에 배치되었음을 확인해야 하는지 여부를 지정할 수 있습니다.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML document mapped from JSON.">JSON에서 매핑된 XML 문서를 읽는 데 사용되는 <see cref="T:System.Xml.XmlReader" />입니다.</param>
      <param name="verifyObjectName" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to check whether the enclosing XML element name and namespace correspond to the expected name and namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;, which skips the verification. The default is &lt;see langword=&quot;true&quot; /&gt;.">바깥쪽 XML 요소 이름 및 네임스페이스가 예상 이름 및 네임스페이스와 일치하는지 확인하려면 <see langword="true" />이고, 확인을 건너뛰려면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</param>
      <returns vsli:raw="The deserialized object.">역직렬화된 개체입니다.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
      <summary vsli:raw="Writes the closing XML element to an XML document, using an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;, which can be mapped to JavaScript Object Notation (JSON).">
        <see cref="T:System.Xml.XmlDictionaryWriter" />를 사용하여 JSON에 매핑할 수 있는 XML 문서에 닫기 XML 요소를 씁니다.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the XML document to map to JSON.">JSON에 매핑할 XML 문서를 쓰는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryWriter" />입니다.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteEndObject(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the closing XML element to an XML document, using an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;, which can be mapped to JavaScript Object Notation (JSON).">
        <see cref="T:System.Xml.XmlWriter" />를 사용하여 JSON에 매핑할 수 있는 XML 문서에 닫기 XML 요소를 씁니다.</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document mapped to JSON.">JSON에 매핑된 XML 문서를 쓰는 데 사용되는 <see cref="T:System.Xml.XmlWriter" />입니다.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.IO.Stream,System.Object)">
      <summary vsli:raw="Serializes a specified object to JavaScript Object Notation (JSON) data and writes the resulting JSON to a stream.">지정된 개체를 JSON(JavaScript Object Notation) 데이터로 serialize하고 결과 JSON을 스트림에 씁니다.</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; that is written to.">결과를 쓸 대상 <see cref="T:System.IO.Stream" />입니다.</param>
      <param name="graph" vsli:raw="The object that contains the data to write to the stream.">스트림에 쓸 데이터를 포함하는 개체입니다.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">serialize하고 있는 형식이 데이터 계약 규칙을 따르지 않는 경우. <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 특성이 형식에 적용되지 않은 경우를 예로 들 수 있습니다.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">쓰고 있는 인스턴스에 문제가 있는 경우</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="The maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">serialize할 최대 개체 수가 초과된 경우. <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 속성을 확인합니다.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Serializes an object to XML that may be mapped to JavaScript Object Notation (JSON). Writes all the object data, including the starting XML element, content, and closing element, with an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">JSON에 매핑할 수 있는 XML로 개체를 serialize합니다. <see cref="T:System.Xml.XmlDictionaryWriter" />를 사용하여 모든 개체 데이터(XML 요소, 콘텐츠, 닫기 요소)를 씁니다.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the XML document or stream to map to JSON.">JSON에 매핑할 XML 문서 또는 스트림을 쓰는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryWriter" />입니다.</param>
      <param name="graph" vsli:raw="The object that contains the data to write.">쓸 데이터를 포함하는 개체입니다.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">serialize하고 있는 형식이 데이터 계약 규칙을 따르지 않는 경우. <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 특성이 형식에 적용되지 않은 경우를 예로 들 수 있습니다.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">쓰고 있는 인스턴스에 문제가 있는 경우</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="The maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">serialize할 최대 개체 수가 초과된 경우. <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 속성을 확인합니다.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Serializes an object to XML that may be mapped to JavaScript Object Notation (JSON). Writes all the object data, including the starting XML element, content, and closing element, with an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">JSON에 매핑할 수 있는 XML로 개체를 serialize합니다. <see cref="T:System.Xml.XmlWriter" />를 사용하여 모든 개체 데이터(XML 요소, 콘텐츠, 닫기 요소)를 씁니다.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document to map to JSON.">JSON에 매핑할 XML 문서를 쓰는 데 사용되는 <see cref="T:System.Xml.XmlWriter" />입니다.</param>
      <param name="graph" vsli:raw="The object that contains the data to write.">쓸 데이터를 포함하는 개체입니다.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">serialize하고 있는 형식이 데이터 계약 규칙을 따르지 않는 경우. <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 특성이 형식에 적용되지 않은 경우를 예로 들 수 있습니다.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">쓰고 있는 인스턴스에 문제가 있는 경우</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="The maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">serialize할 최대 개체 수가 초과된 경우. <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 속성을 확인합니다.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Writes the XML content that can be mapped to JavaScript Object Notation (JSON) using an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryWriter" />를 사용하여 JSON에 매핑할 수 있는 XML 콘텐츠를 씁니다.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; to write to.">쓸 <see cref="T:System.Xml.XmlDictionaryWriter" />입니다.</param>
      <param name="graph" vsli:raw="The object to write.">쓸 개체입니다.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">serialize하고 있는 형식이 데이터 계약 규칙을 따르지 않는 경우. <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 특성이 형식에 적용되지 않은 경우를 예로 들 수 있습니다.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">쓰고 있는 인스턴스에 문제가 있는 경우</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="The maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">serialize할 최대 개체 수가 초과된 경우. <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 속성을 확인합니다.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes the XML content that can be mapped to JavaScript Object Notation (JSON) using an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlWriter" />를 사용하여 JSON에 매핑할 수 있는 XML 콘텐츠를 씁니다.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write to.">쓰기를 수행하는 데 사용되는 <see cref="T:System.Xml.XmlWriter" />입니다.</param>
      <param name="graph" vsli:raw="The object to write.">쓸 개체입니다.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">serialize하고 있는 형식이 데이터 계약 규칙을 따르지 않는 경우. <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 특성이 형식에 적용되지 않은 경우를 예로 들 수 있습니다.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">쓰고 있는 인스턴스에 문제가 있는 경우</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="The maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">serialize할 최대 개체 수가 초과된 경우. <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> 속성을 확인합니다.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Writes the opening XML element for serializing an object to XML that can be mapped to JavaScript Object Notation (JSON) using an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlDictionaryWriter" />를 사용하여 JSON에 매핑할 수 있는 XML로 개체를 serialize하기 위한 열기 XML 요소를 씁니다.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the XML start element.">XML 시작 요소를 쓰는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryWriter" />입니다.</param>
      <param name="graph" vsli:raw="The object to write.">쓸 개체입니다.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes the opening XML element for serializing an object to XML that can be mapped to JavaScript Object Notation (JSON) using an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">
        <see cref="T:System.Xml.XmlWriter" />를 사용하여 JSON에 매핑할 수 있는 XML로 개체를 serialize하기 위한 열기 XML 요소를 씁니다.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML start element.">XML 시작 요소를 쓰는 데 사용되는 <see cref="T:System.Xml.XmlWriter" />입니다.</param>
      <param name="graph" vsli:raw="The object to write.">쓸 개체입니다.</param>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.DateTimeFormat">
      <summary vsli:raw="Gets the format of the date and time type items in object graph.">개체 그래프에서 날짜 및 시간 형식 항목의 서식을 가져옵니다.</summary>
      <returns vsli:raw="The format of the date and time type items in object graph.">개체 그래프에서 날짜 및 시간 형식 항목의 서식입니다.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.EmitTypeInformation">
      <summary vsli:raw="Gets or sets the data contract JSON serializer settings to emit type information.">형식 정보를 내보내는 데이터 계약 JSON serializer 설정을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The data contract JSON serializer settings to emit type information.">형식 정보를 내보내는 데이터 계약 JSON serializer 설정입니다.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.IgnoreExtensionDataObject">
      <summary vsli:raw="Gets a value that specifies whether unknown data is ignored on deserialization and whether the &lt;see cref=&quot;T:System.Runtime.Serialization.IExtensibleDataObject&quot; /&gt; interface is ignored on serialization.">deserialization 중에 알려지지 않은 데이터가 무시되는지 여부와 serialization 중에 <see cref="T:System.Runtime.Serialization.IExtensibleDataObject" /> 인터페이스가 무시되는지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to ignore unknown data and &lt;see cref=&quot;T:System.Runtime.Serialization.IExtensibleDataObject&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">알려지지 않은 데이터와 <see cref="T:System.Runtime.Serialization.IExtensibleDataObject" />를 무시하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.KnownTypes">
      <summary vsli:raw="Gets a collection of types that may be present in the object graph serialized using this instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt;.">
        <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" />의 이 인스턴스를 사용하여 serialize된 개체 그래프에 있을 수 있는 형식의 컬렉션을 가져옵니다.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.ObjectModel.ReadOnlyCollection`1&quot; /&gt; that contains the expected types passed in as known types to the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; constructor.">
        <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 생성자에 알려진 형식으로 전달되는 예상 형식을 포함하는 <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" />입니다.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.MaxItemsInObjectGraph">
      <summary vsli:raw="Gets the maximum number of items in an object graph that the serializer serializes or deserializes in one read or write call.">한 번의 읽기 호출 또는 쓰기 호출에서 직렬 변환기가 직렬화하거나 역직렬화하는 개체 그래프의 최대 항목 수를 가져옵니다.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The number of items exceeds the maximum value.">항목 수가 최대값을 초과하는 경우</exception>
      <returns vsli:raw="The maximum number of items to serialize or deserialize.">직렬화하거나 역직렬화할 최대 항목 수입니다.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.SerializeReadOnlyTypes">
      <summary vsli:raw="Gets or sets a value that specifies whether to serialize read only types.">읽기 전용 형식을 serialize하는지 여부를 지정하는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize read only types; otherwise &lt;see langword=&quot;false&quot; /&gt;.">serialize 할 형식만 읽으려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.UseSimpleDictionaryFormat">
      <summary vsli:raw="Gets a value that specifies whether to use a simple dictionary format.">간단한 사전 형식을 사용할지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use a simple dictionary format; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">간단한 사전 형식을 사용하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings">
      <summary vsli:raw="Specifies &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; settings.">
        <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> 설정을 지정합니다.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings&quot; /&gt; class.">
        <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.DateTimeFormat">
      <summary vsli:raw="Gets or sets a DateTimeFormat that defines the culturally appropriate format of displaying dates and times.">날짜와 시간 표시를 위한 문화권 형식을 정의하는 DateTimeFormat을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The DateTimeFormat that defines the culturally appropriate format of displaying dates and times.">날짜와 시간 표시를 위한 문화권 형식을 정의하는 DateTimeFormat입니다.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.EmitTypeInformation">
      <summary vsli:raw="Gets or sets the data contract JSON serializer settings to emit type information.">형식 정보를 내보내는 데이터 계약 JSON serializer 설정을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The data contract JSON serializer settings to emit type information.">형식 정보를 내보내는 데이터 계약 JSON serializer 설정입니다.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.IgnoreExtensionDataObject">
      <summary vsli:raw="Gets or sets a value that specifies whether to ignore data supplied by an extension of the class when the class is being serialized or deserialized.">클래스가 직렬화되거나 역직렬화될 때 해당 클래스의 확장에서 제공하는 데이터를 무시할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to ignore data supplied by an extension of the class when the class is being serialized or deserialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">클래스가 직렬화되거나 역직렬화될 때 해당 클래스의 확장에서 제공하는 데이터를 무시하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.KnownTypes">
      <summary vsli:raw="Gets or sets a collection of types that may be present in the object graph serialized using this instance the DataContractJsonSerializerSettings.">DataContractJsonSerializerSettings의 이 인스턴스를 사용하여 serialize된 개체 그래프에 있을 수 있는 형식의 컬렉션을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="A collection of types that may be present in the object graph serialized using this instance the DataContractJsonSerializerSettings.">DataContractJsonSerializerSettings의 이 인스턴스를 사용하여 serialize된 개체 그래프에 있을 수 있는 형식의 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.MaxItemsInObjectGraph">
      <summary vsli:raw="Gets or sets the maximum number of items in an object graph to serialize or deserialize.">개체 그래프에서 직렬화하거나 역직렬화할 최대 항목 수를 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The maximum number of items in an object graph to serialize or deserialize.">개체 그래프에서 직렬화하거나 역직렬화할 최대 항목 수입니다.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.RootName">
      <summary vsli:raw="Gets or sets the root name of the selected object.">선택한 개체의 루트 이름을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="The root name of the selected object.">선택한 개체의 루트 이름입니다.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.SerializeReadOnlyTypes">
      <summary vsli:raw="Gets or sets a value that specifies whether to serialize read only types.">읽기 전용 형식을 serialize하는지 여부를 지정하는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize read only types; otherwise &lt;see langword=&quot;false&quot; /&gt;.">serialize 할 형식만 읽으려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.UseSimpleDictionaryFormat">
      <summary vsli:raw="Gets or sets a value that specifies whether to use a simple dictionary format.">간단한 사전 형식을 사용할지 여부를 지정하는 값을 가져오거나 설정합니다.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use a simple dictionary format; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">간단한 사전 형식을 사용하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer">
      <summary vsli:raw="Specifies the interface for initializing a JavaScript Object Notation (JSON) reader when reusing them to read from a particular stream or buffer.">특정 스트림 또는 버퍼에서 읽기 위해 다시 사용할 때 JSON(JavaScript Object Notation) 판독기를 초기화하기 위한 인터페이스를 지정합니다.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Reinitializes a JavaScript Object Notation (JSON) enabled reader to a specified buffer that contains JSON-encoded data.">JSON 인코딩 데이터를 포함하는 지정된 버퍼로 JSON 지원 판독기를 다시 초기화합니다.</summary>
      <param name="buffer" vsli:raw="The input &lt;see cref=&quot;T:System.Byte&quot; /&gt; buffer array from which to read.">읽어올 입력 <see cref="T:System.Byte" /> 버퍼 배열입니다.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="buffer" />에서 읽어올 시작 위치입니다.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="buffer" />에서 읽을 수 있는 바이트 수입니다.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; used by the reader.">판독기에서 사용하는 <see cref="T:System.Text.Encoding" /> 입니다.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">적용할 <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />입니다.</param>
      <param name="onClose" vsli:raw="The &lt;see cref=&quot;T:System.Xml.OnXmlDictionaryReaderClose&quot; /&gt; delegate to call when the reader is closed.">판독기가 닫힐 때 호출되는 <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> 대리자입니다.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Reinitializes a JavaScript Object Notation (JSON) enabled reader to a specified stream that contains JSON-encoded data.">JSON 인코딩 데이터를 포함하는 지정된 스트림으로 JSON 지원 판독기를 다시 초기화합니다.</summary>
      <param name="stream" vsli:raw="The input &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; from which to read.">읽어올 입력 <see cref="T:System.IO.Stream" />입니다.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; used by the reader.">판독기에서 사용하는 <see cref="T:System.Text.Encoding" /> 입니다.</param>
      <param name="quotas" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">적용할 <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />입니다.</param>
      <param name="onClose" vsli:raw="Delegate to call when the reader is closed.">판독기가 닫히면 호출할 대리자입니다.</param>
    </member>
    <member name="T:System.Runtime.Serialization.Json.IXmlJsonWriterInitializer">
      <summary vsli:raw="Specifies the interface for initializing a JavaScript Object Notation (JSON) writer when reusing them to write to a particular output stream.">특정 출력 스트림에 쓰기 위해 다시 사용할 때 JSON(JavaScript Object Notation) 작성기를 초기화하기 위한 인터페이스를 지정합니다.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.IXmlJsonWriterInitializer.SetOutput(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary vsli:raw="Initializes (or reinitializes) a JavaScript Object Notation (JSON) writer to a specified output stream with specified character encoding.">지정된 문서 인코딩을 사용하여 JSON 작성기를 지정된 출력 스트림으로 초기화하거나 다시 초기화합니다.</summary>
      <param name="stream" vsli:raw="The output &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; to which the writer writes.">작성기가 쓰기를 수행할 대상 출력 <see cref="T:System.IO.Stream" /> 입니다.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; that specifies the character encoding of the output stream.">출력 스트림의 문자 인코딩을 지정하는 <see cref="T:System.Text.Encoding" /> 입니다.</param>
      <param name="ownsStream" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the output stream is closed by the writer when done; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />이면 완료될 때 작성기에서 출력 스트림이 닫히고, <see langword="false" />이면 닫히지 않습니다.</param>
    </member>
    <member name="T:System.Runtime.Serialization.Json.JsonReaderWriterFactory">
      <summary vsli:raw="Produces instances of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read data encoded with JavaScript Object Notation (JSON) from a stream or buffer and map it to an XML Infoset and instances of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that can map an XML Infoset to JSON and write JSON-encoded data to a stream.">스트림 또는 버퍼에서 JSON(JavaScript Object Notation) 인코딩 데이터를 읽고 XML Infoset에 매핑할 수 있는 <see cref="T:System.Xml.XmlDictionaryReader" />의 인스턴스와, XML Infoset을 JSON에 매핑하고 JSON으로 인코딩된 데이터를 스트림에 쓸 수 있는 <see cref="T:System.Xml.XmlDictionaryWriter" />의 인스턴스를 생성합니다.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can map buffers encoded with JavaScript Object Notation (JSON), with a specified size and offset and character encoding, to an XML Infoset.">지정된 크기와 오프셋 및 문자 인코딩을 사용하여 JSON(JavaScript Object Notation) 인코딩 버퍼를 XML Infoset에 매핑할 수 있는 <see cref="T:System.Xml.XmlDictionaryReader" />를 만듭니다.</summary>
      <param name="buffer" vsli:raw="The input &lt;see cref=&quot;T:System.Byte&quot; /&gt; buffer array from which to read.">읽어올 입력 <see cref="T:System.Byte" /> 버퍼 배열입니다.</param>
      <param name="offset" vsli:raw="Starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="buffer" />에서 읽어올 시작 위치입니다.</param>
      <param name="count" vsli:raw="Number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="buffer" />에서 읽을 수 있는 바이트 수입니다.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; that specifies the character encoding used by the reader. If &lt;see langword=&quot;null&quot; /&gt; is specified as the value, the reader attempts to auto-detect the encoding.">판독기에서 사용하는 문자 인코딩을 지정하는 <see cref="T:System.Text.Encoding" />입니다. 이 값이 <see langword="null" />로 지정되면 판독기는 인코딩을 자동으로 감지하려고 시도합니다.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; used to prevent Denial of Service attacks when reading untrusted data.">신뢰할 수 없는 데이터를 읽을 때 서비스 거부 공격을 방지하는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />입니다.</param>
      <param name="onClose" vsli:raw="The &lt;see cref=&quot;T:System.Xml.OnXmlDictionaryReaderClose&quot; /&gt; delegate to call when the reader is closed. The default value is &lt;see langword=&quot;null&quot; /&gt;.">판독기가 닫힐 때 호출되는 <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> 대리자입니다. 기본값은 <see langword="null" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read JavaScript Object Notation (JSON).">JSON(JavaScript Object Notation)을 읽을 수 있는 <see cref="T:System.Xml.XmlDictionaryReader" />입니다.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can map buffers encoded with JavaScript Object Notation (JSON), of a specified size and offset, to an XML Infoset.">지정된 크기와 오프셋을 사용하여 JSON(JavaScript Object Notation) 인코딩 버퍼를 XML Infoset에 매핑할 수 있는 <see cref="T:System.Xml.XmlDictionaryReader" /> 를 만듭니다.</summary>
      <param name="buffer" vsli:raw="The input &lt;see cref=&quot;T:System.Byte&quot; /&gt; buffer array from which to read.">읽어올 입력 <see cref="T:System.Byte" /> 버퍼 배열입니다.</param>
      <param name="offset" vsli:raw="Starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="buffer" />에서 읽어올 시작 위치입니다.</param>
      <param name="count" vsli:raw="Number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">
        <paramref name="buffer" />에서 읽을 수 있는 바이트 수입니다.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; used to prevent Denial of Service attacks when reading untrusted data.">신뢰할 수 없는 데이터를 읽을 때 서비스 거부 공격을 방지하는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read JavaScript Object Notation (JSON).">JSON(JavaScript Object Notation)을 읽을 수 있는 <see cref="T:System.Xml.XmlDictionaryReader" />입니다.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can map buffers encoded with JavaScript Object Notation (JSON) to an XML Infoset.">JSON(JavaScript Object Notation) 인코딩 버퍼를 XML Infoset에 매핑할 수 있는 <see cref="T:System.Xml.XmlDictionaryReader" />를 만듭니다.</summary>
      <param name="buffer" vsli:raw="The input &lt;see cref=&quot;T:System.Byte&quot; /&gt; buffer array from which to read.">읽어올 입력 <see cref="T:System.Byte" /> 버퍼 배열입니다.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; used to prevent Denial of Service attacks when reading untrusted data.">신뢰할 수 없는 데이터를 읽을 때 서비스 거부 공격을 방지하는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can process JavaScript Object Notation (JSON) data.">JSON 데이터를 처리할 수 있는 <see cref="T:System.Xml.XmlDictionaryReader" />입니다.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can map streams encoded with JavaScript Object Notation (JSON), of a specified size and offset, to an XML Infoset.">지정된 크기와 오프셋을 사용하여 JSON(JavaScript Object Notation) 인코딩 스트림을 XML Infoset에 매핑할 수 있는 <see cref="T:System.Xml.XmlDictionaryReader" />를 만듭니다.</summary>
      <param name="stream" vsli:raw="The input &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; from which to read.">읽어올 입력 <see cref="T:System.IO.Stream" />입니다.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; that specifies the character encoding used by the reader. If &lt;see langword=&quot;null&quot; /&gt; is specified as the value, the reader attempts to auto-detect the encoding.">판독기에서 사용하는 문자 인코딩을 지정하는 <see cref="T:System.Text.Encoding" />입니다. 이 값이 <see langword="null" />로 지정되면 판독기는 인코딩을 자동으로 감지하려고 시도합니다.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; used to prevent Denial of Service attacks when reading untrusted data.">신뢰할 수 없는 데이터를 읽을 때 서비스 거부 공격을 방지하는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />입니다.</param>
      <param name="onClose" vsli:raw="The &lt;see cref=&quot;T:System.Xml.OnXmlDictionaryReaderClose&quot; /&gt; delegate to call when the reader is closed.">판독기가 닫힐 때 호출되는 <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> 대리자입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read JavaScript Object Notation (JSON).">JSON(JavaScript Object Notation)을 읽을 수 있는 <see cref="T:System.Xml.XmlDictionaryReader" />입니다.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can map streams encoded with JavaScript Object Notation (JSON) to an XML Infoset.">JSON(JavaScript Object Notation) 인코딩 스트림을 XML Infoset에 매핑할 수 있는 <see cref="T:System.Xml.XmlDictionaryReader" />를 만듭니다.</summary>
      <param name="stream" vsli:raw="The input &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; from which to read.">읽어올 입력 <see cref="T:System.IO.Stream" />입니다.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; used to prevent Denial of Service attacks when reading untrusted data.">신뢰할 수 없는 데이터를 읽을 때 서비스 거부 공격을 방지하는 데 사용되는 <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read JavaScript Object Notation (JSON).">JSON(JavaScript Object Notation)을 읽을 수 있는 <see cref="T:System.Xml.XmlDictionaryReader" />입니다.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to a stream.">JSON으로 인코딩된 데이터를 스트림에 쓰는 <see cref="T:System.Xml.XmlDictionaryWriter" />를 만듭니다.</summary>
      <param name="stream" vsli:raw="The output &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; for the JSON writer.">JSON 작성기용 출력 <see cref="T:System.IO.Stream" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to the stream based on an XML Infoset.">JSON으로 인코딩된 데이터를 XML Infoset을 기반으로 하는 스트림에 쓰는 <see cref="T:System.Xml.XmlDictionaryWriter" />입니다.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to a stream with a specified character encoding.">지정된 문자 인코딩을 사용하여 JSON 인코딩 데이터를 스트림에 쓰는 <see cref="T:System.Xml.XmlDictionaryWriter" />를 만듭니다.</summary>
      <param name="stream" vsli:raw="The output &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; for the JSON writer.">JSON 작성기용 출력 <see cref="T:System.IO.Stream" />입니다.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; that specifies the character encoding used by the writer. The default encoding is UTF-8.">작성기에서 사용하는 문자 인코딩을 지정하는 <see cref="T:System.Text.Encoding" />입니다. 기본 인코딩은 UTF-8입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to the stream based on an XML Infoset.">JSON으로 인코딩된 데이터를 XML Infoset을 기반으로 하는 스트림에 쓰는 <see cref="T:System.Xml.XmlDictionaryWriter" />입니다.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to a stream with a specified character encoding.">지정된 문자 인코딩을 사용하여 JSON 인코딩 데이터를 스트림에 쓰는 <see cref="T:System.Xml.XmlDictionaryWriter" />를 만듭니다.</summary>
      <param name="stream" vsli:raw="The output &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; for the JSON writer.">JSON 작성기용 출력 <see cref="T:System.IO.Stream" />입니다.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; that specifies the character encoding used by the writer. The default encoding is UTF-8.">작성기에서 사용하는 문자 인코딩을 지정하는 <see cref="T:System.Text.Encoding" />입니다. 기본 인코딩은 UTF-8입니다.</param>
      <param name="ownsStream" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the output stream is closed by the writer when done; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />이면 완료될 때 작성기에서 출력 스트림이 닫히고, <see langword="false" />이면 닫히지 않습니다. 기본값은 <see langword="true" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to the stream based on an XML Infoset.">JSON으로 인코딩된 데이터를 XML Infoset을 기반으로 하는 스트림에 쓰는 <see cref="T:System.Xml.XmlDictionaryWriter" />입니다.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to a stream with a specified character.">지정된 문자를 사용하여 JSON 인코딩 데이터를 스트림에 쓰는 <see cref="T:System.Xml.XmlDictionaryWriter" />를 만듭니다.</summary>
      <param name="stream" vsli:raw="The output &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; for the JSON writer.">JSON 작성기용 출력 <see cref="T:System.IO.Stream" />입니다.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; that specifies the character encoding used by the writer. The default encoding is UTF-8.">작성기에서 사용하는 문자 인코딩을 지정하는 <see cref="T:System.Text.Encoding" />입니다. 기본 인코딩은 UTF-8입니다.</param>
      <param name="ownsStream" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the output stream is closed by the writer when done; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />이면 완료될 때 작성기에서 출력 스트림이 닫히고, <see langword="false" />이면 닫히지 않습니다. 기본값은 <see langword="true" />입니다.</param>
      <param name="indent" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the output uses multiline format, indenting each level properly; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />인 경우 출력은 여러 줄 형식을 사용하며 각 수준에서 적절히 들여 씁니다. 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to the stream based on an XML Infoset.">JSON으로 인코딩된 데이터를 XML Infoset을 기반으로 하는 스트림에 쓰는 <see cref="T:System.Xml.XmlDictionaryWriter" />입니다.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to a stream with a specified character.">지정된 문자를 사용하여 JSON 인코딩 데이터를 스트림에 쓰는 <see cref="T:System.Xml.XmlDictionaryWriter" />를 만듭니다.</summary>
      <param name="stream" vsli:raw="The output &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; for the JSON writer.">JSON 작성기용 출력 <see cref="T:System.IO.Stream" />입니다.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; that specifies the character encoding used by the writer. The default encoding is UTF-8.">작성기에서 사용하는 문자 인코딩을 지정하는 <see cref="T:System.Text.Encoding" />입니다. 기본 인코딩은 UTF-8입니다.</param>
      <param name="ownsStream" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the output stream is closed by the writer when done; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" />이면 완료될 때 작성기에서 출력 스트림이 닫히고, <see langword="false" />이면 닫히지 않습니다. 기본값은 <see langword="true" />입니다.</param>
      <param name="indent" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the output uses multiline format, indenting each level properly; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" />인 경우 출력은 여러 줄 형식을 사용하며 각 수준에서 적절히 들여 씁니다. 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="indentChars" vsli:raw="The string used to indent each level.">각 수준을 들여쓰는 데 사용되는 문자열입니다.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to the stream based on an XML Infoset.">JSON으로 인코딩된 데이터를 XML Infoset을 기반으로 하는 스트림에 쓰는 <see cref="T:System.Xml.XmlDictionaryWriter" />입니다.</returns>
    </member>
  </members>
</doc>