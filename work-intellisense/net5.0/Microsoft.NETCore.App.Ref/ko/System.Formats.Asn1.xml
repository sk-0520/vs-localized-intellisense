<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Formats.Asn1</name>
  </assembly>
  <members>
    <member name="T:System.Formats.Asn1.Asn1Tag">
      <summary>이 형식은 ITU-T 권장 X.680에 설명된 대로 ASN.1 태그를 나타냅니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Boolean">
      <summary>부울 값의 범용 클래스 태그를 나타냅니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.ConstructedBitString">
      <summary>생성된 인코딩에서 비트 문자열 값의 범용 클래스 태그를 나타냅니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.ConstructedOctetString">
      <summary>생성된 인코딩에서 옥텟 문자열 값의 범용 클래스 태그를 나타냅니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Enumerated">
      <summary>열거형 값의 범용 클래스 태그를 나타냅니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.GeneralizedTime">
      <summary>GeneralizedTime 값의 범용 클래스 태그를 나타냅니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Integer">
      <summary>정수 값의 범용 클래스 태그를 나타냅니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Null">
      <summary>
        <see langword="null" /> 값의 범용 클래스 태그를 나타냅니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.ObjectIdentifier">
      <summary>개체 식별자 값의 범용 클래스 태그를 나타냅니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.PrimitiveBitString">
      <summary>기본 인코딩에서 비트 문자열 값의 범용 클래스 태그를 나타냅니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.PrimitiveOctetString">
      <summary>기본 인코딩에서 옥텟 문자열 값의 범용 클래스 태그를 나타냅니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Sequence">
      <summary>시퀀스 값의 범용 클래스 태그를 나타냅니다(항상 생성된 인코딩).</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.SetOf">
      <summary>SetOf 값의 범용 클래스 태그를 나타냅니다(항상 생성된 인코딩).</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.UtcTime">
      <summary>UtcTime 값의 범용 클래스 태그를 나타냅니다.</summary>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.#ctor(System.Formats.Asn1.TagClass,System.Int32,System.Boolean)">
      <summary>지정된 태그 클래스 내의 지정된 값에 대한 <see cref="T:System.Formats.Asn1.Asn1Tag" />를 만듭니다.</summary>
      <param name="tagClass">태그의 태그 클래스입니다.</param>
      <param name="tagValue">태그의 숫자 값입니다.</param>
      <param name="isConstructed">생성된 태그의 경우 <see langword="true" />이고, 기본 태그의 경우 <see langword="false" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="tagClass" />는 알려진 값이 아닙니다.
-또는- <paramref name="tagValue" />가 음수입니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.#ctor(System.Formats.Asn1.UniversalTagNumber,System.Boolean)">
      <summary>범용 클래스의 태그에 대한 <see cref="T:System.Formats.Asn1.Asn1Tag" />를 만듭니다.</summary>
      <param name="universalTagNumber">이 태그의 의미 체계 유형을 지정하는 열거형 값 중 하나입니다.</param>
      <param name="isConstructed">생성된 태그의 경우 <see langword="true" />이고, 기본 태그의 경우 <see langword="false" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="universalTagNumber" />는 알려진 값이 아닙니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.AsConstructed">
      <summary>
        <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 및 <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 값이 같지만 <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" />가 <see langword="true" />인 태그를 생성합니다.</summary>
      <returns>
        <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 및 <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 값이 같지만 <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" />가 <see langword="true" />인 태그입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.AsPrimitive">
      <summary>
        <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 및 <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 값이 같지만 <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" />가 <see langword="false" />인 태그를 생성합니다.</summary>
      <returns>
        <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 및 <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 값이 같지만 <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" />가 <see langword="false" />인 태그입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize">
      <summary>태그의 BER 인코딩에 필요한 바이트 수를 보고합니다.</summary>
      <returns>태그의 BER 인코딩에 필요한 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Decode(System.ReadOnlySpan{System.Byte},System.Int32@)">
      <summary>
        <paramref name="source" />에서 시작하는 BER로 인코딩된 태그를 읽습니다.</summary>
      <param name="source">시작 부분이 BER로 인코딩된 태그인 읽기 전용 바이트 시퀀스입니다.</param>
      <param name="bytesConsumed">이 메서드가 반환되는 경우 인코딩된 태그에 적용된 바이트 수를 포함합니다. 이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">제공된 데이터는 태그로 디코딩되지 않습니다.</exception>
      <returns>디코딩된 태그입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Encode(System.Span{System.Byte})">
      <summary>태그의 BER로 인코딩된 형식을 <paramref name="destination" />에 씁니다.</summary>
      <param name="destination">인코딩된 태그를 기록할 위치의 시작입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destination" />.<see cref="P:System.Span`1.Length" /> &lt; <see cref="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize" />.</exception>
      <returns>
        <paramref name="destination" />에 쓰인 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Equals(System.Formats.Asn1.Asn1Tag)">
      <summary>
        <paramref name="other" />가 이 태그와 인코딩이 같은지 테스트합니다.</summary>
      <param name="other">같은지 테스트할 태그입니다.</param>
      <returns>
        <paramref name="other" />의 <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" />, <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 및 <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> 값이 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Equals(System.Object)">
      <summary>
        <paramref name="obj" />가 태그와 인코딩이 같은 <see cref="T:System.Formats.Asn1.Asn1Tag" />인지 테스트합니다.</summary>
      <param name="obj">값이 같은지 테스트할 개체입니다.</param>
      <returns>
        <paramref name="obj" />가 <see cref="T:System.Formats.Asn1.Asn1Tag" />가 아니면 <see langword="false" />이고, 그렇지 않으면 <see cref="M:System.Formats.Asn1.Asn1Tag.Equals(System.Formats.Asn1.Asn1Tag)" />입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.GetHashCode">
      <summary>이 인스턴스의 해시 코드를 반환합니다.</summary>
      <returns>부호 있는 32비트 정수 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.HasSameClassAndValue(System.Formats.Asn1.Asn1Tag)">
      <summary>
        <paramref name="other" />이 태그와 <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 및 <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 값이 같은지 테스트하고 <see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" />를 비교하지 않습니다.</summary>
      <param name="other">개념이 같은지 테스트할 태그입니다.</param>
      <returns>
        <paramref name="other" />이 태그와 <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 및 <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.op_Equality(System.Formats.Asn1.Asn1Tag,System.Formats.Asn1.Asn1Tag)">
      <summary>두 <see cref="T:System.Formats.Asn1.Asn1Tag" /> 값의 BER 인코딩이 같은지 테스트합니다.</summary>
      <param name="left">비교할 첫 번째 값입니다.</param>
      <param name="right">비교할 두 번째 값입니다.</param>
      <returns>
        <paramref name="left" /> 및 <paramref name="right" />의 BER 인코딩이 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.op_Inequality(System.Formats.Asn1.Asn1Tag,System.Formats.Asn1.Asn1Tag)">
      <summary>두 <see cref="T:System.Formats.Asn1.Asn1Tag" /> 값의 BER 인코딩이 다른지 테스트합니다.</summary>
      <param name="left">비교할 첫 번째 값입니다.</param>
      <param name="right">비교할 두 번째 값입니다.</param>
      <returns>
        <paramref name="left" /> 및 <paramref name="right" />의 BER 인코딩이 다르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.ToString">
      <summary>디버깅에 적합한 태그의 텍스트 표현을 제공합니다.</summary>
      <returns>디버깅에 적합한 태그의 텍스트 표현입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.TryDecode(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.Asn1Tag@,System.Int32@)">
      <summary>
        <paramref name="source" />에서 시작하는 BER로 인코딩된 태그를 읽으려고 합니다.</summary>
      <param name="source">시작 부분이 BER로 인코딩된 태그인 읽기 전용 바이트 시퀀스입니다.</param>
      <param name="tag">디코딩된 태그입니다.</param>
      <param name="bytesConsumed">이 메서드가 반환되는 경우 인코딩된 태그에 적용된 바이트 수를 포함하며, 실패하면 0을 포함합니다. 이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <returns>태그가 올바로 디코딩된 경우 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary>태그의 BER로 인코딩된 형식을 <paramref name="destination" />에 쓰려고 합니다.</summary>
      <param name="destination">인코딩된 태그를 기록할 위치의 시작입니다.</param>
      <param name="bytesWritten">성공하면 <see cref="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize" />에서 값을 받고, 실패하면 0을 받습니다.</param>
      <returns>
        <paramref name="destination" />.<see cref="P:System.Span`1.Length" />이면 <see langword="false" />입니다. &lt; <see cref="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize" />()이고, 그렇지 않으면 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Formats.Asn1.Asn1Tag.IsConstructed">
      <summary>태그가 생성된 인코딩을 나타내는지( <see langword="true" /> ) 또는 기본 인코딩을 나타내는지(<see langword="false" />)를 나타냅니다.</summary>
    </member>
    <member name="P:System.Formats.Asn1.Asn1Tag.TagClass">
      <summary>태그가 속한 태그 클래스입니다.</summary>
    </member>
    <member name="P:System.Formats.Asn1.Asn1Tag.TagValue">
      <summary>태그의 숫자 값입니다.</summary>
    </member>
    <member name="T:System.Formats.Asn1.AsnContentException">
      <summary>인코딩된 ASN.1 값을 성공적으로 디코딩할 수 없는 경우 throw되는 예외입니다.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor">
      <summary>기본 메시지를 사용하여 <see cref="T:System.Formats.Asn1.AsnContentException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>serialize된 데이터를 사용하여 <see cref="T:System.Formats.Asn1.AsnContentException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="info">serialize된 개체 데이터를 보유하는 개체입니다.</param>
      <param name="context">원본 또는 대상에 대한 컨텍스트 정보입니다.</param>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor(System.String)">
      <summary>제공된 메시지를 사용하여 <see cref="T:System.Formats.Asn1.AsnContentException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다.</param>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor(System.String,System.Exception)">
      <summary>제공된 메시지와 이 예외를 발생시킨 예외를 사용하여 <see cref="T:System.Formats.Asn1.AsnContentException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다.</param>
      <param name="inner">현재 예외의 원인인 예외입니다.</param>
    </member>
    <member name="T:System.Formats.Asn1.AsnDecoder">
      <summary>BER, CER 또는 DER로 인코딩된 ASN.1 데이터를 디코딩하기 위한 상태 비저장 메서드를 제공합니다.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadBitString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 비트 문자열 값을 읽어 콘텐츠를 새 배열로 반환합니다.</summary>
      <param name="source">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="unusedBitCount">성공하면 기록기에서 “사용 안 함”으로 보고한 마지막 바이트의 비트 수를 받습니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="bytesConsumed">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="expectedTag">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 3)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns>비트 문자열 값의 콘텐츠를 포함하는 배열입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadBoolean(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 부울 값을 읽습니다.</summary>
      <param name="source">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="bytesConsumed">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="expectedTag">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 1)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns>디코딩된 값입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadCharacterString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.UniversalTagNumber,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>다음 값을 지정된 태그 및 인코딩 형식의 문자열로 읽어 디코딩된 문자열을 반환합니다.</summary>
      <param name="source">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="encodingType">처리할 값 형식을 나타내는 열거형 값 중 하나입니다.</param>
      <param name="bytesConsumed">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="expectedTag">읽기 전에 확인할 태그이거나, 요청된 인코딩 형식에 적합한 유니버설 태그의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.
-또는- <paramref name="encodingType" />이 알려진 문자열 형식이 아닙니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 문자열이 디코딩되지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 <paramref name="encodingType" />과 같지 않습니다.</exception>
      <returns>디코딩된 값입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEncodedValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@)">
      <summary>지정된 인코딩 규칙을 사용하여 <paramref name="source" /> 버퍼의 시작 부분에서 인코딩된 값의 콘텐츠 범위를 찾습니다.</summary>
      <param name="source">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="contentOffset">이 메서드가 반환될 때 <paramref name="source" />의 시작에 상대적인 콘텐츠 페이로드의 오프셋입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="contentLength">이 메서드가 반환될 때 콘텐츠 페이로드의 바이트 수(0일 수 있음)입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="bytesConsumed">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">
        <paramref name="source" />는 지정된 인코딩 규칙에 따라 인코딩된 값을 나타내지 않습니다.</exception>
      <returns>콘텐츠를 식별하는 태그입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEnumeratedBytes(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 열거형 값을 읽어 콘텐츠를 버퍼 조각으로 반환합니다.</summary>
      <param name="source">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="bytesConsumed">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="expectedTag">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 10)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns>부호 있는 big-endian 형식의 열거형 값 바이트를 포함하는 버퍼의 조각입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEnumeratedValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Type,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 열거형을 읽어 <paramref name="enumType" />으로 지정된 비 [<see cref="T:System.FlagsAttribute" />] 열거형으로 변환합니다.</summary>
      <param name="source">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="enumType">대상 형식을 나타내는 형식 개체입니다.</param>
      <param name="bytesConsumed">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="expectedTag">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 10)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 인코딩된 값이 너무 커서 <paramref name="enumType" /> 값에 맞지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" />이 열거형 형식이 아닙니다.
-또는- <see cref="T:System.FlagsAttribute" />를 사용하여 <paramref name="enumType" />이 선언되었습니다.
-또는- <paramref name="enumType" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" />는 <see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="enumType" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" />이(가) <see langword="null" />인 경우</exception>
      <returns>
        <paramref name="enumType" />으로 변환된 열거형 값입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEnumeratedValue``1(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 열거형을 읽어 <typeparamref name="TEnum" />으로 지정된 비 [<see cref="T:System.FlagsAttribute" />] 열거형으로 변환합니다.</summary>
      <param name="source">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="bytesConsumed">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="expectedTag">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 10)의 경우 <see langword="null" />입니다.</param>
      <typeparam name="TEnum">대상 열거형 형식</typeparam>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 인코딩된 값이 너무 커서 <typeparamref name="TEnum" /> 값에 맞지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <typeparamref name="TEnum" />이 열거형 형식이 아닙니다.
-또는- <see cref="T:System.FlagsAttribute" />를 사용하여 <typeparamref name="TEnum" />이 선언되었습니다.
-또는- <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" />는 <see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns>
        <typeparamref name="TEnum" />으로 변환된 열거형 값입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadGeneralizedTime(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 GeneralizedTime 값을 읽습니다.</summary>
      <param name="source">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="bytesConsumed">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="expectedTag">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 24)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns>디코딩된 값입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadInteger(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 정수 값을 읽습니다.</summary>
      <param name="source">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="bytesConsumed">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="expectedTag">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 2)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns>디코딩된 숫자 값입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadIntegerBytes(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 정수 값을 읽어 콘텐츠를 버퍼 조각으로 반환합니다.</summary>
      <param name="source">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="bytesConsumed">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="expectedTag">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 2)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns>부호 있는 big-endian 형식의 정수 값 바이트를 포함하는 버퍼의 조각입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNamedBitList(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 NamedBitList 값을 읽습니다.</summary>
      <param name="source">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="bytesConsumed">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="expectedTag">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 3)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns>인코딩된 값의 비트입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNamedBitListValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Type,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 NamedBitList를 읽어 <paramref name="flagsEnumType" />으로 지정된 [<see cref="T:System.FlagsAttribute" />] 열거형으로 변환합니다.</summary>
      <param name="source">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="flagsEnumType">대상 형식을 나타내는 형식 개체입니다.</param>
      <param name="bytesConsumed">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="expectedTag">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 3)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 인코딩된 값이 너무 커서 <paramref name="flagsEnumType" /> 값에 맞지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="flagsEnumType" />이 열거형 형식이 아닙니다.
-또는- <see cref="T:System.FlagsAttribute" />를 사용하여 <paramref name="flagsEnumType" />이 선언되지 않았습니다. -또는- <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" />가 <see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="flagsEnumType" />가 <see langword="null" />인 경우</exception>
      <returns>
        <paramref name="flagsEnumType" />으로 변환된 NamedBitList 값입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNamedBitListValue``1(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 NamedBitList를 읽어 <typeparamref name="TFlagsEnum" />으로 지정된 [<see cref="T:System.FlagsAttribute" />] 열거형으로 변환합니다.</summary>
      <param name="source">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="bytesConsumed">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="expectedTag">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 3)의 경우 <see langword="null" />입니다.</param>
      <typeparam name="TFlagsEnum">대상 열거형 형식</typeparam>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 인코딩된 값이 너무 커서 <typeparamref name="TFlagsEnum" /> 값에 맞지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <typeparamref name="TFlagsEnum" />이 열거형 형식이 아닙니다.
-또는- <see cref="T:System.FlagsAttribute" />를 사용하여 <typeparamref name="TFlagsEnum" />이 선언되지 않았습니다. -또는- <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" />가 <see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns>
        <typeparamref name="TFlagsEnum" />으로 변환된 NamedBitList 값입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNull(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 <see langword="null" /> 값을 읽습니다.</summary>
      <param name="source">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="bytesConsumed">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="expectedTag">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 5)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadObjectIdentifier(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 개체 식별자 값을 읽습니다.</summary>
      <param name="source">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="bytesConsumed">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="expectedTag">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 6)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns>점으로 구분된 10진수 표기법의 디코딩된 개체 식별자입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadOctetString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 옥텟 문자열 값을 읽어 콘텐츠를 새 배열로 반환합니다.</summary>
      <param name="source">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="bytesConsumed">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="expectedTag">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 4)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns>옥텟 문자열 값의 콘텐츠를 포함하는 배열입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadSequence(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 시퀀스 또는 Sequence-Of 값을 읽습니다.</summary>
      <param name="source">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="contentOffset">이 메서드가 반환될 때 <paramref name="source" />의 시작에 상대적인 콘텐츠 페이로드의 오프셋입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="contentLength">이 메서드가 반환될 때 콘텐츠 페이로드의 바이트 수(0일 수 있음)입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="bytesConsumed">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="expectedTag">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 16)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadSetOf(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@,System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 Set-Of 값을 읽습니다.</summary>
      <param name="source">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="contentOffset">이 메서드가 반환될 때 <paramref name="source" />의 시작에 상대적인 콘텐츠 페이로드의 오프셋입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="contentLength">이 메서드가 반환될 때 콘텐츠 페이로드의 바이트 수(0일 수 있음)입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="bytesConsumed">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="skipSortOrderValidation">
        <see langword="true" />이면 항상 데이터를 표시되는 순서로 적용하고 <see langword="false" />이면 인코딩 규칙에 정렬이 필요했다고 명시된 경우 데이터가 올바로 정렬되어 있는지 확인합니다(CER 및 DER).</param>
      <param name="expectedTag">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 17)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadUtcTime(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 UtcTime 값을 읽습니다.</summary>
      <param name="source">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="bytesConsumed">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="twoDigitYearMax">이 값으로 나타낼 가장 큰 연도입니다.
기본값 2049는 X.509 인증서의 1950~2049 범위를 나타냅니다.</param>
      <param name="expectedTag">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 24)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.
-또는- <paramref name="twoDigitYearMax" />가 [99, 9999] 범위에 없습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns>디코딩된 값입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadBitString(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 비트 문자열 값을 <paramref name="destination" />으로 복사하려고 합니다.</summary>
      <param name="source">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="destination">쓸 수 있는 버퍼입니다.</param>
      <param name="ruleSet">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="unusedBitCount">성공하면 기록기에서 “사용 안 함”으로 보고한 마지막 바이트의 비트 수를 받습니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="bytesConsumed">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="bytesWritten">이 메서드가 반환될 때 <paramref name="destination" />에 기록되는 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="expectedTag">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 3)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.
-또는- <paramref name="destination" />이 <paramref name="source" />와 겹칩니다.</exception>
      <returns>
        <paramref name="destination" />이 비트 문자열의 값을 받을 만큼 충분히 크면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadCharacterString(System.ReadOnlySpan{System.Byte},System.Span{System.Char},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.UniversalTagNumber,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 문자열 값을 읽어 디코딩된 문자열을 제공된 대상 버퍼에 복사합니다.</summary>
      <param name="source">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="destination">쓸 수 있는 버퍼입니다.</param>
      <param name="ruleSet">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="encodingType">처리할 값 형식을 나타내는 열거형 값 중 하나입니다.</param>
      <param name="bytesConsumed">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="charsWritten">이 메서드가 반환될 때 <paramref name="destination" />에 기록되는 문자 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="expectedTag">읽기 전에 확인할 태그이거나, 요청된 인코딩 형식에 적합한 유니버설 태그의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.
-또는- <paramref name="encodingType" />이 알려진 문자열 형식이 아닙니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 문자열이 디코딩되지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 <paramref name="encodingType" />과 같지 않습니다.</exception>
      <returns>
        <see langword="true" /> 길이가 충분하여 값을 받은 경우 <paramref name="destination" />이며 판독기를 앞으로 이동하고 그러지 않은 경우 <see langword="false" />이며 판독기를 앞으로 이동하지 않습니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadCharacterStringBytes(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.Asn1Tag,System.Int32@,System.Int32@)">
      <summary>지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 문자열 값을 읽어 처리되지 않은 바이트를 제공된 대상 버퍼에 복사합니다.</summary>
      <param name="source">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="destination">쓸 수 있는 버퍼입니다.</param>
      <param name="ruleSet">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="expectedTag">읽기 전에 확인할 태그입니다.</param>
      <param name="bytesConsumed">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="bytesWritten">성공하면 <paramref name="destination" />에 쓴 바이트 수를 받습니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 문자열 태그 형식이 아닙니다.
-또는- <paramref name="destination" />이 <paramref name="source" />와 겹칩니다.</exception>
      <returns>
        <paramref name="destination" />이 처리되지 않은 문자열의 값을 받을 만큼 충분히 크면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadEncodedValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.Asn1Tag@,System.Int32@,System.Int32@,System.Int32@)">
      <summary>지정된 인코딩 규칙을 사용하여 <paramref name="source" /> 버퍼의 시작 부분에서 인코딩된 값의 콘텐츠 범위를 찾으려고 합니다.</summary>
      <param name="source">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="tag">이 메서드가 반환될 때 콘텐츠를 식별하는 태그입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="contentOffset">이 메서드가 반환될 때 <paramref name="source" />의 시작에 상대적인 콘텐츠 페이로드의 오프셋입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="contentLength">이 메서드가 반환될 때 콘텐츠 페이로드의 바이트 수(0일 수 있음)입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="bytesConsumed">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <returns>
        <paramref name="source" />이 지정된 인코딩 규칙의 유효한 구조적 인코딩을 나타내면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadInt32(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 정수 값을 부호 있는 32비트 값으로 읽으려고 합니다.</summary>
      <param name="source">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="value">성공하면 해석된 숫자 값을 받습니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="bytesConsumed">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="expectedTag">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 2)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns>정수가 <see cref="F:System.Int32.MinValue" />에서 <see cref="F:System.Int32.MaxValue" />(포함) 사이의 값을 나타내면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadInt64(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int64@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 정수 값을 부호 있는 64비트 값으로 읽으려고 합니다.</summary>
      <param name="source">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="value">성공하면 해석된 숫자 값을 받습니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="bytesConsumed">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="expectedTag">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 2)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns>정수가 <see cref="F:System.Int64.MinValue" />에서 <see cref="F:System.Int64.MaxValue" />(포함) 사이의 값을 나타내면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadOctetString(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 옥텟 문자열 값을 읽어 값을 제공된 대상 버퍼에 복사합니다.</summary>
      <param name="source">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="destination">쓸 수 있는 버퍼입니다.</param>
      <param name="ruleSet">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="bytesConsumed">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="bytesWritten">이 메서드가 반환될 때 <paramref name="destination" />에 기록되는 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="expectedTag">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 4)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.
-또는- <paramref name="destination" />이 <paramref name="source" />와 겹칩니다.</exception>
      <returns>
        <paramref name="destination" />이 옥텟 문자열의 값을 받을 만큼 충분히 크면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadPrimitiveBitString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.ReadOnlySpan{System.Byte}@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>해당 값이 단일(기본) 인코딩에 포함된 경우 지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 비트 문자열 값을 가져오려고 합니다.</summary>
      <param name="source">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="unusedBitCount">성공하면 기록기에서 “사용 안 함”으로 보고한 마지막 바이트의 비트 수를 받습니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="value">성공하면 비트 문자열의 값에 해당하는 입력 버퍼의 조각을 받습니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="bytesConsumed">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="expectedTag">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 3)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns>비트 문자열 값에 기본 인코딩이 있고 사용되지 않음으로 보고된 모든 비트가 0으로 설정된 경우 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadPrimitiveCharacterStringBytes(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.Asn1Tag,System.ReadOnlySpan{System.Byte}@,System.Int32@)">
      <summary>해당 값이 단일(기본) 인코딩에 포함된 경우 지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 처리되지 않은 문자열 값을 가져오려고 합니다.</summary>
      <param name="source">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="expectedTag">읽기 전에 확인할 태그입니다.</param>
      <param name="value">성공하면 비트 문자열의 값에 해당하는 입력 버퍼의 조각을 받습니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="bytesConsumed">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 문자열 태그 형식이 아닙니다.</exception>
      <returns>문자열 값이 기본 인코딩을 사용하면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadPrimitiveOctetString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.ReadOnlySpan{System.Byte}@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>해당 값이 단일(기본) 인코딩에 포함된 경우 지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 옥텟 문자열 값을 가져오려고 합니다.</summary>
      <param name="source">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="value">성공하면 옥텟 문자열의 값에 해당하는 입력 버퍼의 조각을 받습니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="bytesConsumed">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="expectedTag">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 4)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns>옥텟 문자열 값이 기본 인코딩을 사용하면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadUInt32(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.UInt32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 정수 값을 부호 없는 32비트 값으로 읽으려고 합니다.</summary>
      <param name="source">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="value">성공하면 해석된 숫자 값을 받습니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="bytesConsumed">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="expectedTag">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 2)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns>정수가 <see cref="F:System.UInt32.MinValue" />에서 <see cref="F:System.UInt32.MaxValue" />(포함) 사이의 값을 나타내면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadUInt64(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.UInt64@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 인코딩 규칙에 따라 지정된 태그가 있는 <paramref name="source" />에서 정수 값을 부호 없는 64비트 값으로 읽으려고 합니다.</summary>
      <param name="source">인코딩된 데이터를 포함하는 버퍼입니다.</param>
      <param name="ruleSet">데이터를 해석할 때 사용할 인코딩 제약 조건입니다.</param>
      <param name="value">성공하면 해석된 숫자 값을 받습니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="bytesConsumed">이 메서드가 반환될 때 인코딩된 값의 총 바이트 수입니다.
이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="expectedTag">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 2)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns>정수가 <see cref="F:System.UInt64.MinValue" />에서 <see cref="F:System.UInt64.MaxValue" />(포함) 사이의 값을 나타내면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnEncodingRules">
      <summary>
        <see cref="T:System.Formats.Asn1.AsnReader" /> 또는 <see cref="T:System.Formats.Asn1.AsnWriter" />의 인코딩 규칙 집합입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.AsnEncodingRules.BER">
      <summary>ITU-T X.690 기본 인코딩 규칙</summary>
    </member>
    <member name="F:System.Formats.Asn1.AsnEncodingRules.CER">
      <summary>ITU-T X.690 정식 인코딩 규칙</summary>
    </member>
    <member name="F:System.Formats.Asn1.AsnEncodingRules.DER">
      <summary>ITU-T X.690 고유 인코딩 규칙</summary>
    </member>
    <member name="T:System.Formats.Asn1.AsnReader">
      <summary>BER, CER 또는 DER로 인코딩된 ASN.1 데이터를 위한 상태 저장 정방향 전용 판독기입니다.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.#ctor(System.ReadOnlyMemory{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.AsnReaderOptions)">
      <summary>지정된 규칙 집합을 사용하는 <paramref name="data" />를 통해 <see cref="T:System.Formats.Asn1.AsnReader" />를 생성합니다.</summary>
      <param name="data">읽을 데이터입니다.</param>
      <param name="ruleSet">판독기에 대한 인코딩 제약 조건입니다.</param>
      <param name="options">판독기에 대한 추가 옵션입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.PeekContentBytes">
      <summary>판독기를 앞으로 이동하지 않고 인코딩된 다음 값의 콘텐츠 옥텟(바이트)에 대한 <see cref="T:System.ReadOnlyMemory`1" /> 뷰를 가져옵니다.</summary>
      <exception cref="T:System.Formats.Asn1.AsnContentException">현재 인코딩 규칙에서는 태그 또는 길이가 유효하지 않은 지점에 판독기가 배치되었습니다.</exception>
      <returns>다음 인코딩된 값의 콘텐츠 옥텟 바이트입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.PeekEncodedValue">
      <summary>판독기를 앞으로 이동하지 않고 다음 인코딩된 값의 <see cref="T:System.ReadOnlyMemory`1" /> 뷰를 가져옵니다. 무한 길이 인코딩의 경우 콘텐츠 끝 마커가 포함됩니다.</summary>
      <exception cref="T:System.Formats.Asn1.AsnContentException">현재 인코딩 규칙에서는 태그 또는 길이가 유효하지 않은 지점에 판독기가 배치되었습니다.</exception>
      <returns>다음 인코딩된 값의 바이트입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.PeekTag">
      <summary>판독기를 앞으로 이동하지 않고 다음 데이터 위치에서 인코딩된 태그를 읽습니다.</summary>
      <exception cref="T:System.Formats.Asn1.AsnContentException">판독기의 현재 위치에서 태그를 디코딩할 수 없습니다.</exception>
      <returns>디코딩된 태그 값입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadBitString(System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 태그가 포함된 BIT STRING으로 다음 값을 읽고 바이트 배열로 값을 반환합니다.</summary>
      <param name="unusedBitCount">성공하면 기록기에서 “사용 안 함”으로 보고한 마지막 바이트의 비트 수를 받습니다.</param>
      <param name="expectedTag">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 1)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns>새로 할당되고 정확하게 크기 지정된 배열로 된 값의 복사본입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadBoolean(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 태그가 포함된 부울로 다음 값을 읽습니다.</summary>
      <param name="expectedTag">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 1)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns>디코딩된 값입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadCharacterString(System.Formats.Asn1.UniversalTagNumber,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 태그 및 인코딩 형식이 포함된 문자열로 다음 값을 읽고 문자열로 디코딩된 값을 반환합니다.</summary>
      <param name="encodingType">처리할 값 형식을 나타내는 열거형 값 중 하나입니다.</param>
      <param name="expectedTag">읽기 전에 확인할 태그이거나, 요청된 인코딩 형식에 적합한 유니버설 태그의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="encodingType" />은 알려진 문자열 형식이 아닙니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 문자열이 디코딩되지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 <paramref name="encodingType" />과 같지 않습니다.</exception>
      <returns>디코딩된 값입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEncodedValue">
      <summary>다음 인코딩된 값의 <see cref="T:System.ReadOnlyMemory`1" /> 뷰를 가져오고 판독기를 해당 값 앞으로 이동합니다. 무한 길이 인코딩의 경우 콘텐츠 끝 마커가 포함됩니다.</summary>
      <returns>다음 인코딩된 값의 <see cref="T:System.ReadOnlyMemory`1" /> 뷰입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEnumeratedBytes(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 태그가 포함된 열거형으로 다음 값을 읽고 원래 데이터에 대한 <see cref="T:System.ReadOnlyMemory`1" />로 콘텐츠를 반환합니다.</summary>
      <param name="expectedTag">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 10)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns>부호 있는 big endian 형식의 열거형 값 바이트입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEnumeratedValue(System.Type,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 태그가 포함된 열거형으로 다음 값을 읽고 <paramref name="enumType" />을 통해 지정된 비[<see cref="T:System.FlagsAttribute" />] 열거형으로 변환합니다.</summary>
      <param name="enumType">대상 형식을 나타내는 형식 개체입니다.</param>
      <param name="expectedTag">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 10)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 인코딩된 값이 너무 커서 <paramref name="enumType" /> 값에 맞지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" />이 열거형 형식이 아닙니다.
-또는- <see cref="T:System.FlagsAttribute" />를 사용하여 <paramref name="enumType" />이 선언되었습니다.
-또는- <paramref name="enumType" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" />는 <see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="enumType" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" />이(가) <see langword="null" />인 경우</exception>
      <returns>
        <paramref name="enumType" />으로 변환된 열거형 값입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEnumeratedValue``1(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 태그가 포함된 열거형으로 다음 값을 읽고 <typeparamref name="TEnum" />을 통해 지정된 비[<see cref="T:System.FlagsAttribute" />] 열거형으로 변환합니다.</summary>
      <param name="expectedTag">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 10)의 경우 <see langword="null" />입니다.</param>
      <typeparam name="TEnum">대상 열거형 형식</typeparam>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 인코딩된 값이 너무 커서 <typeparamref name="TEnum" /> 값에 맞지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <typeparamref name="TEnum" />이 열거형 형식이 아닙니다.
-또는- <see cref="T:System.FlagsAttribute" />를 사용하여 <typeparamref name="TEnum" />이 선언되었습니다.
-또는- <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" />는 <see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns>
        <typeparamref name="TEnum" />으로 변환된 열거형 값입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadGeneralizedTime(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 태그가 포함된 GeneralizedTime으로 다음 값을 읽습니다.</summary>
      <param name="expectedTag">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 24)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns>디코딩된 값입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadInteger(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 태그가 포함된 정수로 다음 값을 읽습니다.</summary>
      <param name="expectedTag">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 2)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns>디코딩된 값입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadIntegerBytes(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 태그가 포함된 정수로 다음 값을 읽고 원래 데이터에 대한 <see cref="T:System.ReadOnlyMemory`1" />로 콘텐츠를 반환합니다.</summary>
      <param name="expectedTag">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 2)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns>부호 있는 big endian 형식의 정수 값 바이트입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNamedBitList(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 태그가 포함된 NamedBitList로 다음 값을 읽습니다.</summary>
      <param name="expectedTag">읽기 전에 확인할 태그입니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns>인코딩된 값의 비트입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNamedBitListValue(System.Type,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 태그가 포함된 NamedBitList로 다음 값을 읽고 <paramref name="flagsEnumType" />을 통해 지정된 [<see cref="T:System.FlagsAttribute" />] 열거형으로 변환합니다.</summary>
      <param name="flagsEnumType">대상 형식을 나타내는 형식 개체입니다.</param>
      <param name="expectedTag">읽기 전에 확인할 태그입니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 인코딩된 값이 너무 커서 <paramref name="flagsEnumType" /> 값에 맞지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="flagsEnumType" />이 열거형 형식이 아닙니다.
-또는- <see cref="T:System.FlagsAttribute" />를 사용하여 <paramref name="flagsEnumType" />이 선언되지 않았습니다. -또는- <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" />가 <see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="flagsEnumType" />가 <see langword="null" />인 경우</exception>
      <returns>
        <paramref name="flagsEnumType" />으로 변환된 NamedBitList 값입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNamedBitListValue``1(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 태그가 포함된 NamedBitList로 다음 값을 읽고 <typeparamref name="TFlagsEnum" />을 통해 지정된 [<see cref="T:System.FlagsAttribute" />] 열거형으로 변환합니다.</summary>
      <param name="expectedTag">읽기 전에 확인할 태그입니다.</param>
      <typeparam name="TFlagsEnum">대상 열거형 형식</typeparam>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 인코딩된 값이 너무 커서 <typeparamref name="TFlagsEnum" /> 값에 맞지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <typeparamref name="TFlagsEnum" />이 열거형 형식이 아닙니다.
-또는- <see cref="T:System.FlagsAttribute" />를 사용하여 <typeparamref name="TFlagsEnum" />이 선언되지 않았습니다. -또는- <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" />가 <see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns>
        <typeparamref name="TFlagsEnum" />으로 변환된 NamedBitList 값입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNull(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 태그가 포함된 NULL로 다음 값을 읽습니다.</summary>
      <param name="expectedTag">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 5)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadObjectIdentifier(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 태그가 포함된 OBJECT IDENTIFIER로 다음 값을 읽고 점으로 구분된 10진 형식 문자열로 값을 반환합니다.</summary>
      <param name="expectedTag">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 6)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns>점으로 구분된 10진수 형식 문자열의 개체 식별자 값입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>범용 4 태그를 사용하여 다음 값을 OCTET STRING으로 읽고 바이트 배열로 값을 반환합니다.</summary>
      <param name="expectedTag">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 4)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns>새로 할당되고 정확하게 크기 지정된 배열로 된 값의 복사본입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 태그가 포함된 SEQUENCE 또는 SEQUENCE-OF로 다음 값을 읽고 시퀀스의 첫 번째 값에 배치된(또는 <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />인) 새 판독기로 결과를 반환합니다.</summary>
      <param name="expectedTag">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 16)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns>시퀀스의 첫 번째 값에 배치된(또는 <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />인) 새 판독기입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadSetOf(System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 태그가 포함된 SET-OF로 다음 값을 읽고 set-of의 첫 번째 값에 배치된(또는 <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />인) 새 판독기로 결과를 반환합니다.</summary>
      <param name="skipSortOrderValidation">
        <see langword="true" />이면 항상 데이터를 표시되는 순서로 적용하고 <see langword="false" />이면 인코딩 규칙에 정렬이 필요했다고 명시된 경우 데이터가 올바로 정렬되어 있는지 확인합니다(CER 및 DER).</param>
      <param name="expectedTag">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 17)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns>set-of의 첫 번째 값에 배치된(또는 <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />인) 새 판독기입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 태그가 포함된 SET-OF로 다음 값을 읽고 생성자의 <see cref="P:System.Formats.Asn1.AsnReaderOptions.SkipSetSortOrderVerification" /> 값(기본값은 <see langword="false" />)을 사용하여 set-of의 첫 번째 값에 배치된(또는 <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />인) 새 판독기로 결과를 반환합니다.</summary>
      <param name="expectedTag">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 17)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns>set-of의 첫 번째 값에 배치된(또는 <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />인) 새 판독기입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadUtcTime(System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 태그가 포함된 UTCTime으로 다음 값을 읽습니다.</summary>
      <param name="twoDigitYearMax">이 값으로 나타낼 가장 큰 연도입니다.</param>
      <param name="expectedTag">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 23)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns>디코딩된 값입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadUtcTime(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>생성자에 전달된 옵션의 <see cref="P:System.Formats.Asn1.AsnReaderOptions.UtcTimeTwoDigitYearMax" /> 값(기본값은 2049)을 사용하여 지정된 태그가 포함된 UTCTime으로 다음 값을 읽습니다.</summary>
      <param name="expectedTag">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 23)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns>디코딩된 값입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ThrowIfNotEmpty">
      <summary>판독기에 남은 데이터가 있는 경우 표준화된 <see cref="T:System.Formats.Asn1.AsnContentException" />을 throw하고 <see cref="P:System.Formats.Asn1.AsnReader.HasData" />가 <see langword="false" />를 반환하는 경우 함수를 실행하지 않습니다.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadBitString(System.Span{System.Byte},System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 태그가 포함된 BIT STRING으로 다음 값을 읽고 제공된 대상 버퍼에 해당 값을 복사합니다.</summary>
      <param name="destination">쓸 수 있는 버퍼입니다.</param>
      <param name="unusedBitCount">성공하면 기록기에서 “사용 안 함”으로 보고한 마지막 바이트의 비트 수를 받습니다.</param>
      <param name="bytesWritten">성공하면 <paramref name="destination" />에 쓴 바이트 수를 받습니다.</param>
      <param name="expectedTag">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 1)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns>
        <see langword="true" /> 길이가 충분하여 값을 받은 경우 <paramref name="destination" />이며 판독기를 앞으로 이동하고 그러지 않은 경우 <see langword="false" />이며 판독기를 앞으로 이동하지 않습니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadCharacterString(System.Span{System.Char},System.Formats.Asn1.UniversalTagNumber,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 태그 및 인코딩 형식이 포함된 문자열로 다음 값을 읽고 제공된 대상 버퍼에 디코딩된 값을 복사합니다.</summary>
      <param name="destination">쓸 수 있는 버퍼입니다.</param>
      <param name="encodingType">처리할 값 형식을 나타내는 열거형 값 중 하나입니다.</param>
      <param name="charsWritten">성공하면 <paramref name="destination" />에 쓴 문자 수를 받습니다.</param>
      <param name="expectedTag">읽기 전에 확인할 태그이거나, 요청된 인코딩 형식에 적합한 유니버설 태그의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="encodingType" />은 알려진 문자열 형식이 아닙니다.</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 문자열이 디코딩되지 않았습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 <paramref name="encodingType" />과 같지 않습니다.</exception>
      <returns>
        <see langword="true" /> 길이가 충분하여 값을 받은 경우 <paramref name="destination" />이며 판독기를 앞으로 이동하고 그러지 않은 경우 <see langword="false" />이며 판독기를 앞으로 이동하지 않습니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadCharacterStringBytes(System.Span{System.Byte},System.Formats.Asn1.Asn1Tag,System.Int32@)">
      <summary>지정된 태그가 포함된 문자열로 다음 값을 읽고 제공된 대상 버퍼에 처리되지 않은 바이트를 복사합니다.</summary>
      <param name="destination">쓸 수 있는 버퍼입니다.</param>
      <param name="expectedTag">읽기 전에 확인할 태그입니다.</param>
      <param name="bytesWritten">성공하면 <paramref name="destination" />에 쓴 바이트 수를 받습니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 문자열 태그 형식이 아닙니다.</exception>
      <returns>
        <see langword="true" /> 길이가 충분하여 값을 받은 경우 <paramref name="destination" />이며 판독기를 앞으로 이동하고 그러지 않은 경우 <see langword="false" />이며 판독기를 앞으로 이동하지 않습니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadInt32(System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>부호 있는 32비트 값인 지정된 태그가 포함된 정수로 다음 값을 읽으려고 합니다.</summary>
      <param name="value">성공하면 디코딩된 값을 받습니다.</param>
      <param name="expectedTag">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 2)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns>값이 <see cref="F:System.Int32.MinValue" /> 및 <see cref="F:System.Int32.MaxValue" />(포함) 사이에 있지 않은 경우 <see langword="false" />이며 판독기를 앞으로 이동하지 않고 그렇지 않은 경우 <see langword="true" />를 반환하며 판독기를 앞으로 이동합니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadInt64(System.Int64@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>부호 있는 64비트 값인 지정된 태그가 포함된 정수로 다음 값을 읽으려고 합니다.</summary>
      <param name="value">성공하면 디코딩된 값을 받습니다.</param>
      <param name="expectedTag">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 2)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns>값이 <see cref="F:System.Int64.MinValue" /> 및 <see cref="F:System.Int64.MaxValue" />(포함) 사이에 있지 않은 경우 <see langword="false" />이며 판독기를 앞으로 이동하지 않고 그렇지 않은 경우 <see langword="true" />를 반환하며 판독기를 앞으로 이동합니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadOctetString(System.Span{System.Byte},System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 태그가 포함된 OCTET STRING으로 다음 값을 읽고 제공된 대상 버퍼에 해당 값을 복사합니다.</summary>
      <param name="destination">쓸 수 있는 버퍼입니다.</param>
      <param name="bytesWritten">성공하면 <paramref name="destination" />에 쓴 바이트 수를 받습니다.</param>
      <param name="expectedTag">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 4)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns>
        <see langword="true" /> 길이가 충분하여 값을 받은 경우 <paramref name="destination" />이며 판독기를 앞으로 이동하고 그러지 않은 경우 <see langword="false" />이며 판독기를 앞으로 이동하지 않습니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadPrimitiveBitString(System.Int32@,System.ReadOnlyMemory{System.Byte}@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 태그가 포함된 BIT STRING으로 다음 값을 읽고 원래 데이터에 대한 <see cref="T:System.ReadOnlyMemory`1" />로 콘텐츠를 반환합니다.</summary>
      <param name="unusedBitCount">성공하면 기록기에서 “사용 안 함”으로 보고한 마지막 바이트의 비트 수를 받습니다.</param>
      <param name="value">성공하면 BIT STRING 값에 해당하는 원래 데이터에 대한 <see cref="T:System.ReadOnlyMemory`1" />을 받습니다.</param>
      <param name="expectedTag">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 1)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns>BIT STRING 값에 기본 인코딩이 있는 경우 <see langword="true" />이며 판독기를 앞으로 이동하고 값에 생성된 인코딩이 있는 경우 <see langword="false" />이며 판독기를 앞으로 이동하지 않습니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadPrimitiveCharacterStringBytes(System.Formats.Asn1.Asn1Tag,System.ReadOnlyMemory{System.Byte}@)">
      <summary>지정된 태그가 포함된 문자로 다음 값을 읽고 원래 데이터에 대한 처리되지 않은 <see cref="T:System.ReadOnlyMemory`1" />로 콘텐츠를 반환합니다.</summary>
      <param name="expectedTag">읽기 전에 확인할 태그입니다.</param>
      <param name="contents">성공하면 문자열 값에 해당하는 원래 데이터에 대한 <see cref="T:System.ReadOnlyMemory`1" />을 받습니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 문자열 태그 형식이 아닙니다.</exception>
      <returns>문자열 값에 기본 인코딩이 있는 경우 <see langword="true" />이며 판독기를 앞으로 이동하고 값에 생성된 인코딩이 있는 경우 <see langword="false" />이며 판독기를 앞으로 이동하지 않습니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadPrimitiveOctetString(System.ReadOnlyMemory{System.Byte}@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 태그가 포함된 OCTET STRING으로 다음 값을 읽고 원래 데이터에 대한 <see cref="T:System.ReadOnlyMemory`1" />로 콘텐츠를 반환합니다.</summary>
      <param name="contents">성공하면 OCTET STRING 값에 해당하는 원래 데이터에 대한 <see cref="T:System.ReadOnlyMemory`1" />을 받습니다.</param>
      <param name="expectedTag">읽기 전에 확인할 태그입니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns>OCTET STRING 값에 기본 인코딩이 있는 경우 <see langword="true" />이며 판독기를 앞으로 이동하고 값에 생성된 인코딩이 있는 경우 <see langword="false" />이며 판독기를 앞으로 이동하지 않습니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadUInt32(System.UInt32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>부호 없는 32비트 값인 지정된 태그가 포함된 정수로 다음 값을 읽으려고 합니다.</summary>
      <param name="value">성공하면 디코딩된 값을 받습니다.</param>
      <param name="expectedTag">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 2)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns>값이 <see cref="F:System.UInt32.MinValue" /> 및 <see cref="F:System.UInt32.MaxValue" />(포함) 사이에 있지 않은 경우 <see langword="false" />이며 판독기를 앞으로 이동하지 않고 그렇지 않은 경우 <see langword="true" />를 반환하며 판독기를 앞으로 이동합니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadUInt64(System.UInt64@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>부호 없는 64비트 값인 지정된 태그가 포함된 정수로 다음 값을 읽으려고 합니다.</summary>
      <param name="value">성공하면 디코딩된 값을 받습니다.</param>
      <param name="expectedTag">읽기 전에 확인할 태그이거나, 기본 태그(유니버설 2)의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">다음 값에는 올바른 태그가 없습니다.
-또는- 길이 인코딩이 현재 인코딩 규칙에서 유효하지 않습니다.
-또는- 콘텐츠가 현재 인코딩 규칙에서 유효하지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns>값이 <see cref="F:System.UInt64.MinValue" /> 및 <see cref="F:System.UInt64.MaxValue" />(포함) 사이에 있지 않은 경우 <see langword="false" />이며 판독기를 앞으로 이동하지 않고 그렇지 않은 경우 <see langword="true" />를 반환하며 판독기를 앞으로 이동합니다.</returns>
    </member>
    <member name="P:System.Formats.Asn1.AsnReader.HasData">
      <summary>판독기에 처리할 수 있는 남은 데이터가 있는지 여부를 나타내는 표시를 가져옵니다.</summary>
      <returns>
        <see langword="true" /> 판독기에서 처리 하는 데 사용할 수 있는 데이터가 더 있는 경우 그렇지 않으면 <see langword="false" /> 입니다.</returns>
    </member>
    <member name="P:System.Formats.Asn1.AsnReader.RuleSet">
      <summary>이 판독기에서 사용 중인 인코딩 규칙을 가져옵니다.</summary>
      <returns>이 판독기에서 사용 하는 인코딩 규칙입니다.</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnReaderOptions">
      <summary>
        <see cref="T:System.Formats.Asn1.AsnReader" />의 동작을 수정하는 옵션을 지정합니다.</summary>
    </member>
    <member name="P:System.Formats.Asn1.AsnReaderOptions.SkipSetSortOrderVerification">
      <summary>판독기가 집합 또는 Set-Of 값에서 정렬 순서를 무시할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see langword="true" /> 판독기가 집합 또는 값 집합이 현재 인코딩 규칙에 맞게 정렬 되었는지 확인 하지 않아야 하면이 고, 그렇지 않으면입니다. 그렇지 않으면 <see langword="false" /> 입니다.
기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Formats.Asn1.AsnReaderOptions.UtcTimeTwoDigitYearMax">
      <summary>UtcTime 값으로 나타낼 가장 큰 연도를 가져오거나 설정합니다.</summary>
      <returns>UtcTime 값을 나타내는 가장 큰 연도입니다. 기본값은 2049입니다.</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnWriter">
      <summary>BER, CER 및 DER로 인코딩된 ASN.1 데이터의 기록기입니다.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.#ctor(System.Formats.Asn1.AsnEncodingRules)">
      <summary>지정된 인코딩 규칙 집합을 사용하여 새 <see cref="T:System.Formats.Asn1.AsnWriter" />를 만듭니다.</summary>
      <param name="ruleSet">기록기의 인코딩 제약 조건입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" />이 정의되어 있지 않습니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.CopyTo(System.Formats.Asn1.AsnWriter)">
      <summary>기록기의 값을 다른 기록기에 복사합니다.</summary>
      <param name="destination">값을 받을 기록기입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destination" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 또는 <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />가 <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 또는 <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />를 통해 닫히지 않았습니다.
-또는- 이 기록기가 비어 있습니다.
-또는- 이 기록기가 둘 이상의 최상위 값을 나타냅니다.
-또는- 이 기록기의 값이 대상 기록기의 규칙 집합과 호환되지 않는 방식으로 인코딩되었습니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Encode">
      <summary>인코딩된 값을 포함하는 새 배열을 반환합니다.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 또는 <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />가 <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 또는 <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />를 통해 닫히지 않았습니다.</exception>
      <returns>인코딩된 값을 포함하는 정확히 크기 지정된 배열입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Encode(System.Span{System.Byte})">
      <summary>데이터의 인코딩된 표현을 <paramref name="destination" />에 씁니다.</summary>
      <param name="destination">쓸 수 있는 버퍼입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 또는 <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />가 <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 또는 <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />를 통해 닫히지 않았습니다.</exception>
      <returns>
        <paramref name="destination" />에 쓰인 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.EncodedValueEquals(System.Formats.Asn1.AsnWriter)">
      <summary>
        <see cref="M:System.Formats.Asn1.AsnWriter.Encode" />가 <paramref name="other" />과 동일한 출력을 생성할지 여부를 결정합니다.</summary>
      <param name="other">인코딩된 값을 비교할 인스턴스입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 또는 <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />가 <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 또는 <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />를 통해 닫히지 않았습니다.</exception>
      <returns>보류 중인 인코딩된 데이터가 <paramref name="other" />과 동일하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.EncodedValueEquals(System.ReadOnlySpan{System.Byte})">
      <summary>
        <see cref="M:System.Formats.Asn1.AsnWriter.Encode" />가 <paramref name="other" />과 동일한 출력을 생성할지 여부를 결정합니다.</summary>
      <param name="other">비교할 인코딩된 값입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 또는 <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />가 <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 또는 <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />를 통해 닫히지 않았습니다.</exception>
      <returns>보류 중인 인코딩된 데이터가 <paramref name="other" />과 동일하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.GetEncodedLength">
      <summary>
        <see cref="M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)" />에 의해 기록될 바이트 수를 가져옵니다.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" />, <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 또는 <see cref="M:System.Formats.Asn1.AsnWriter.PushOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})" />이 해당 Pop 메서드 없이 호출되었습니다.</exception>
      <returns>
        <see cref="M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)" />에 의해 기록될 바이트 수입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PopOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>범용 4 태그가 있는 열린 옥텟 문자열이 닫혀 기록기를 부모 컨텍스트로 반환함을 나타냅니다.</summary>
      <param name="tag">쓸 태그이거나, 기본 태그(유니버설 4)인 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <exception cref="T:System.InvalidOperationException">현재 기록기가 지정된 태그가 있는 옥텟 문자열 내에 있지 않습니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 태그가 있는 열린 시퀀스가 닫혀 기록기를 부모 컨텍스트로 반환함을 나타냅니다.</summary>
      <param name="tag">쓸 태그이거나, 기본 태그(유니버설 16)인 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <exception cref="T:System.InvalidOperationException">현재 기록기가 지정된 태그가 있는 시퀀스 내에 있지 않습니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 태그가 있는 열린 Set-Of가 닫혀 기록기를 부모 컨텍스트로 반환함을 나타냅니다.</summary>
      <param name="tag">쓸 태그이거나, 기본 태그(유니버설 17)인 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <exception cref="T:System.InvalidOperationException">현재 기록기가 지정된 태그가 있는 Set-Of 내에 있지 않습니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PushOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 태그가 있는 옥텟 문자열 값을 쓰기 시작합니다.</summary>
      <param name="tag">쓸 태그이거나, 기본 태그(유니버설 4)인 경우 <see langword="null" />입니다.</param>
      <returns>
        <see cref="M:System.Formats.Asn1.AsnWriter.PopOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})" />을 자동으로 호출할 삭제 가능한 값입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 태그가 있는 시퀀스를 쓰기 시작합니다.</summary>
      <param name="tag">쓸 태그이거나, 기본 태그(유니버설 16)인 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns>
        <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" />를 자동으로 호출할 삭제 가능한 값입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 태그가 있는 Set-Of를 쓰기 시작합니다.</summary>
      <param name="tag">쓸 태그이거나, 기본 태그(유니버설 17)인 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <returns>
        <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />를 자동으로 호출할 삭제 가능한 값입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Reset">
      <summary>리소스를 해제하지 않고 데이터가 없도록 기록기를 초기화합니다.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary>데이터의 인코딩된 표현을 <paramref name="destination" />에 쓰려고 합니다.</summary>
      <param name="destination">쓸 수 있는 버퍼입니다.</param>
      <param name="bytesWritten">성공하면 <paramref name="destination" />에 쓴 바이트 수를 받습니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 또는 <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />가 <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> 또는 <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />를 통해 닫히지 않았습니다.</exception>
      <returns>인코딩에 성공하면 <see langword="true" />이고, <paramref name="destination" />이 너무 작으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteBitString(System.ReadOnlySpan{System.Byte},System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 태그가 있는 비트 문자열 값을 씁니다.</summary>
      <param name="value">작성할 값입니다.</param>
      <param name="unusedBitCount">의미 체계가 아닌 후행 비트의 수입니다.</param>
      <param name="tag">쓸 태그이거나, 기본 태그(유니버설 3)인 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.
-또는- <paramref name="value" />는 길이가 0이고 <paramref name="unusedBitCount" />는 0이 아닙니다. -또는- <paramref name="value" />는 비어 있지 않고 <paramref name="unusedBitCount" />로 식별된 비트 중 하나가 설정되었습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="unusedBitCount" />는 [0,7] 범위에 있지 않습니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteBoolean(System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 태그가 있는 부울 값을 씁니다.</summary>
      <param name="value">작성할 값입니다.</param>
      <param name="tag">쓸 태그이거나, 기본 태그(유니버설 1)인 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 메서드에 올바르지 않습니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteCharacterString(System.Formats.Asn1.UniversalTagNumber,System.ReadOnlySpan{System.Char},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>인코딩 형식에 해당하는 지정된 태그를 사용하여 지정된 인코딩 형식을 사용하여 제공된 문자열을 씁니다.</summary>
      <param name="encodingType">사용할 인코딩을 나타내는 열거형 값 중 하나입니다.</param>
      <param name="str">쓸 문자열입니다.</param>
      <param name="tag">쓸 태그이거나, 요청된 인코딩 형식에 적합한 유니버설 태그의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="encodingType" />은 제한된 문자열 인코딩 형식이 아닙니다.
-또는- <paramref name="encodingType" />은 이 메서드에서 현재 지원되지 않는 제한된 문자열 인코딩 형식입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteCharacterString(System.Formats.Asn1.UniversalTagNumber,System.String,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>인코딩 형식에 해당하는 지정된 태그를 사용하여 지정된 인코딩 형식을 사용하여 제공된 문자열을 씁니다.</summary>
      <param name="encodingType">사용할 인코딩을 나타내는 열거형 값 중 하나입니다.</param>
      <param name="value">쓸 문자열입니다.</param>
      <param name="tag">쓸 태그이거나, 요청된 인코딩 형식에 적합한 유니버설 태그의 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="encodingType" />은 제한된 문자열 인코딩 형식이 아닙니다.
-또는- <paramref name="encodingType" />은 이 메서드에서 현재 지원되지 않는 제한된 문자열 인코딩 형식입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteEncodedValue(System.ReadOnlySpan{System.Byte})">
      <summary>이미 인코딩된 단일 값을 씁니다.</summary>
      <param name="value">작성할 값입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" />는 현재 인코딩 규칙에서 읽을 수 없습니다.
-또는- <paramref name="value" />는 첫 번째 값의 끝을 넘는 데이터를 포함합니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteEnumeratedValue(System.Enum,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>비 [<see cref="T:System.FlagsAttribute" />] 열거형 값을 범용 10 태그가 있는 열거형으로 씁니다.</summary>
      <param name="value">쓸 boxing된 열거형 값입니다.</param>
      <param name="tag">쓸 태그이거나, 기본 태그(유니버설 10)인 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.
-또는- <paramref name="value" />는 boxing된 열거형 값이 아닙니다.
-또는- unboxing된 형식의 <paramref name="value" />가 선언되었습니다[<see cref="T:System.FlagsAttribute" />].</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteEnumeratedValue``1(``0,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>비 [<see cref="T:System.FlagsAttribute" />] 열거형 값을 범용 10 태그가 있는 열거형으로 씁니다.</summary>
      <param name="value">쓸 boxing된 열거형 값입니다.</param>
      <param name="tag">쓸 태그이거나, 기본 태그(유니버설 10)인 경우 <see langword="null" />입니다.</param>
      <typeparam name="TEnum">쓸 비 [ <see cref="T:System.FlagsAttribute" /> ] 열거형 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.
-또는- <typeparamref name="TEnum" />은 열거형이 아닙니다.
-또는- <typeparamref name="TEnum" />이 선언되었습니다[<see cref="T:System.FlagsAttribute" />].</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteGeneralizedTime(System.DateTimeOffset,System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>제공된 <see cref="T:System.DateTimeOffset" />을 지정된 범용 24가 있는 GeneralizedTime으로 씁니다(필요에 따라 소수 부분 제외).</summary>
      <param name="value">작성할 값입니다.</param>
      <param name="omitFractionalSeconds">0이 아닌 값이 있더라도 <paramref name="value" />에서 소수 부분을 0으로 처리하려면 <see langword="true" />입니다.</param>
      <param name="tag">쓸 태그이거나, 기본 태그(유니버설 24)인 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.Int64,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 태그가 있는 정수 값을 씁니다.</summary>
      <param name="value">작성할 값입니다.</param>
      <param name="tag">쓸 태그이거나, 기본 태그(유니버설 2)인 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.Numerics.BigInteger,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 태그가 있는 정수 값을 씁니다.</summary>
      <param name="value">작성할 값입니다.</param>
      <param name="tag">쓸 태그이거나, 기본 태그(유니버설 2)인 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.ReadOnlySpan{System.Byte},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 태그가 있는 정수 값을 씁니다.</summary>
      <param name="value">부호 있는 big-endian 바이트 순서로 쓸 정수 값입니다.</param>
      <param name="tag">쓸 태그이거나, 기본 태그(유니버설 2)인 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">9개의 가장 중요한 비트가 모두 설정되었습니다.
-또는- 9개의 가장 중요한 비트가 모두 설정되지 않았습니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.UInt64,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 태그가 있는 정수 값을 씁니다.</summary>
      <param name="value">작성할 값입니다.</param>
      <param name="tag">쓸 태그이거나, 기본 태그(유니버설 2)인 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteIntegerUnsigned(System.ReadOnlySpan{System.Byte},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 태그가 있는 정수 값을 씁니다.</summary>
      <param name="value">부호 없는 big-endian 바이트 순서로 쓸 정수 값입니다.</param>
      <param name="tag">쓸 태그이거나, 기본 태그(유니버설 2)인 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <exception cref="T:System.ArgumentException">9개의 가장 중요한 비트가 모두 설정되지 않았습니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNamedBitList(System.Collections.BitArray,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>비트 배열 값을 지정된 태그가 있는 NamedBitList로 씁니다.</summary>
      <param name="value">쓸 비트입니다.</param>
      <param name="tag">쓸 태그이거나, 기본 태그(유니버설 3)인 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNamedBitList(System.Enum,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>[<see cref="T:System.FlagsAttribute" />] 열거형 값을 지정된 태그가 있는 NamedBitList로 씁니다.</summary>
      <param name="value">쓸 boxing된 열거형 값입니다.</param>
      <param name="tag">쓸 태그이거나, 기본 태그(유니버설 3)인 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.
-또는- <paramref name="value" />는 boxing된 열거형 값이 아닙니다.
-또는- unboxing된 형식의 <paramref name="value" />가 선언되지 않았습니다[<see cref="T:System.FlagsAttribute" />].</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNamedBitList``1(``0,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>[<see cref="T:System.FlagsAttribute" />] 열거형 값을 지정된 태그가 있는 NamedBitList로 씁니다.</summary>
      <param name="value">쓸 열거형 값입니다.</param>
      <param name="tag">쓸 태그이거나, 기본 태그(유니버설 3)인 경우 <see langword="null" />입니다.</param>
      <typeparam name="TEnum">쓸 [ <see cref="T:System.FlagsAttribute" /> ] 열거형 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.
-또는- <typeparamref name="TEnum" />은 열거형 값이 아닙니다.
-또는- <typeparamref name="TEnum" />이 선언되지 않았습니다[<see cref="T:System.FlagsAttribute" />].</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNull(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 태그와 함께 NULL을 씁니다.</summary>
      <param name="tag">쓸 태그이거나, 기본 태그(유니버설 5)인 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteObjectIdentifier(System.ReadOnlySpan{System.Char},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 태그가 있는 개체 식별자를 씁니다.</summary>
      <param name="oidValue">쓸 개체 식별자입니다.</param>
      <param name="tag">쓸 태그이거나, 기본 태그(유니버설 6)인 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.
-또는- <paramref name="oidValue" />는 유효한 점으로 구분된 10진수 개체 식별자가 아닙니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteObjectIdentifier(System.String,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 태그가 있는 개체 식별자를 씁니다.</summary>
      <param name="oidValue">쓸 개체 식별자입니다.</param>
      <param name="tag">쓸 태그이거나, 기본 태그(유니버설 6)인 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.
-또는- <paramref name="oidValue" />는 유효한 점으로 구분된 10진수 개체 식별자가 아닙니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="oidValue" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteOctetString(System.ReadOnlySpan{System.Byte},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>지정된 태그가 있는 옥텟 문자열 값을 씁니다.</summary>
      <param name="value">작성할 값입니다.</param>
      <param name="tag">쓸 태그이거나, 기본 태그(유니버설 4)인 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteUtcTime(System.DateTimeOffset,System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>연도가 허용 범위 내에 있는 경우 제공된 값을 지정된 태그가 있는 UTCTime으로 씁니다.</summary>
      <param name="value">작성할 값입니다.</param>
      <param name="twoDigitYearMax">UTC로 변환 후 <paramref name="value" />의 유효한 최대 연도입니다.
X.509 Time.utcTime 범위 1950~2049의 경우 <c>2049</c>를 전달합니다.</param>
      <param name="tag">쓸 태그이거나, 기본 태그(유니버설 23)인 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" />.<see cref="P:System.DateTimeOffset.Year" /> UTC로 변환 후 (<paramref name="twoDigitYearMax" /> - 100, <paramref name="twoDigitYearMax" />] 범위에 있지 않습니다.</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteUtcTime(System.DateTimeOffset,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>제공된 값을 지정된 태그가 있는 UTCTime으로 쓰고, 두 자리 연도를 컨텍스트에서 유효한 것으로 허용합니다.</summary>
      <param name="value">작성할 값입니다.</param>
      <param name="tag">쓸 태그이거나, 기본 태그(유니버설 23)인 경우 <see langword="null" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /><see cref="F:System.Formats.Asn1.TagClass.Universal" />이지만 <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />는 이 메서드에 올바르지 않습니다.</exception>
    </member>
    <member name="P:System.Formats.Asn1.AsnWriter.RuleSet">
      <summary>이 기록기에서 사용 중인 인코딩 규칙을 가져옵니다.</summary>
      <returns>이 작성기에서 사용 하는 인코딩 규칙입니다.</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnWriter.Scope">
      <summary>어휘 범위를 논리 범위로 사용하여 열린 태그를 안전하게 닫기 위한 <see cref="T:System.IDisposable" /> 대상을 제공합니다.</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Scope.Dispose">
      <summary>관리되지 않는 리소스의 확보, 해제 또는 다시 설정과 관련된 애플리케이션 정의 작업을 수행합니다.</summary>
    </member>
    <member name="T:System.Formats.Asn1.TagClass">
      <summary>특정 ASN.1 태그의 태그 클래스입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.Application">
      <summary>애플리케이션 태그 클래스</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.ContextSpecific">
      <summary>컨텍스트별 태그 클래스</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.Private">
      <summary>프라이빗 태그 클래스</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.Universal">
      <summary>유니버설 태그 클래스</summary>
    </member>
    <member name="T:System.Formats.Asn1.UniversalTagNumber">
      <summary>ITU-T X.680에서 범용 클래스의 태그 할당입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.BitString">
      <summary>비트 문자열의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.BMPString">
      <summary>BMPString의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Boolean">
      <summary>부울의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Date">
      <summary>날짜의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.DateTime">
      <summary>날짜-시간의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Duration">
      <summary>기간의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Embedded">
      <summary>포함-PDV의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.EndOfContents">
      <summary>무한 길이 인코딩에서 End-of-Contents 마커의 예약된 식별자입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Enumerated">
      <summary>열거형의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.External">
      <summary>외부의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.GeneralizedTime">
      <summary>GeneralizedTime의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.GeneralString">
      <summary>GeneralString의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.GraphicString">
      <summary>GraphicString의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.IA5String">
      <summary>IA5String의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.InstanceOf">
      <summary>Instance-Of의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Integer">
      <summary>정수의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ISO646String">
      <summary>ISO646String(VisibleString)의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Null">
      <summary>Null의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.NumericString">
      <summary>NumericString의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ObjectDescriptor">
      <summary>개체 설명자의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ObjectIdentifier">
      <summary>개체 식별자의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ObjectIdentifierIRI">
      <summary>개체 식별자 IRI(Internationalized Resource Identifier)의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.OctetString">
      <summary>옥텟 문자열의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.PrintableString">
      <summary>PrintableString의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Real">
      <summary>실제의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.RelativeObjectIdentifier">
      <summary>상대 개체 식별자의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.RelativeObjectIdentifierIRI">
      <summary>상대 개체 식별자 IRI(Internationalized Resource Identifier)의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Sequence">
      <summary>시퀀스의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.SequenceOf">
      <summary>Sequence-Of의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Set">
      <summary>집합의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.SetOf">
      <summary>Set-Of의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.T61String">
      <summary>T61String(TeletexString)의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.TeletexString">
      <summary>TeletexString(T61String)의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Time">
      <summary>시간의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.TimeOfDay">
      <summary>Time-Of-Day의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UniversalString">
      <summary>UniversalString의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UnrestrictedCharacterString">
      <summary>제한 없는 문자열의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UtcTime">
      <summary>UTCTime의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UTF8String">
      <summary>UTF8String의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.VideotexString">
      <summary>VideotexString의 범용 클래스 태그 값입니다.</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.VisibleString">
      <summary>VisibleString(ISO646String)의 범용 클래스 태그 값입니다.</summary>
    </member>
  </members>
</doc>