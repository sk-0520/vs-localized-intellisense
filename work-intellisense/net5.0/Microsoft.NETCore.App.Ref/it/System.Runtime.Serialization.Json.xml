<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:vsli="https://github.com/sk-0520/vs-localized-intellisense/tree/master/schema/2024">
  <assembly>
    <name>System.Runtime.Serialization.Json</name>
  </assembly>
  <members>
    <member name="T:System.Runtime.Serialization.DateTimeFormat">
      <summary vsli:raw="Specifies date-time format options.">Specifica le opzioni di formato di data e ora.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DateTimeFormat.#ctor(System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DateTimeFormat&quot; /&gt; class using the format string.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Serialization.DateTimeFormat" /> utilizzando la stringa del formato.</summary>
      <param name="formatString" vsli:raw="The format string.">Stringa di formato.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DateTimeFormat.#ctor(System.String,System.IFormatProvider)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.DateTimeFormat&quot; /&gt; class using the format string and format provider.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Serialization.DateTimeFormat" /> utilizzando la stringa e il provider del formato.</summary>
      <param name="formatString" vsli:raw="The format sting.">Stringa di formato.</param>
      <param name="formatProvider" vsli:raw="The format provider.">Provider di formato.</param>
    </member>
    <member name="P:System.Runtime.Serialization.DateTimeFormat.DateTimeStyles">
      <summary vsli:raw="Gets or sets the formatting options that customize string parsing for some date and time parsing methods.">Ottiene o imposta le opzioni di formattazione per la personalizzazione della modalità di analisi dell'ora e il giorno.</summary>
      <returns vsli:raw="The formatting options that customize string parsing for some date and time parsing methods.">Opzioni di formattazione per la personalizzazione della modalità di analisi dell'ora e il giorno.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DateTimeFormat.FormatProvider">
      <summary vsli:raw="Gets an object that controls formatting.">Ottiene un oggetto che controlla la formattazione.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.DateTimeFormat.FormatString">
      <summary vsli:raw="Gets the format strings to control the formatting produced when a date or time is represented as a string.">Ottiene le stringhe di formato per controllare la formattazione prodotta quando una data o un'ora è rappresentata come stringa.</summary>
      <returns vsli:raw="The format strings to control the formatting produced when a date or time is represented as a string.">Le stringhe di formato per controllare la formattazione prodotta quando una data o un'ora è rappresentata come stringa.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.EmitTypeInformation">
      <summary vsli:raw="Specifies how often to emit type information.">Specifica la frequenza di generazione delle informazioni sul tipo.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.EmitTypeInformation.Always">
      <summary vsli:raw="Always to emit type information.">Generare sempre informazioni sul tipo.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.EmitTypeInformation.AsNeeded">
      <summary vsli:raw="As needed emit type information.">In base alle necessità, genera informazioni sul tipo.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.EmitTypeInformation.Never">
      <summary vsli:raw="Never to emit type information.">Mai generare informazioni sul tipo.</summary>
    </member>
    <member name="T:System.Runtime.Serialization.Json.DataContractJsonSerializer">
      <summary vsli:raw="Serializes objects to the JavaScript Object Notation (JSON) and deserializes JSON data to objects. This class cannot be inherited.">Serializza gli oggetti in JSON (JavaScript Object Notation) e deserializza i dati JSON in oggetti. La classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> per serializzare o deserializzare un oggetto del tipo specificato.</summary>
      <param name="type" vsli:raw="The type of the instances that is serialized or deserialized.">Tipo delle istanze serializzato o deserializzato.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type, with a collection of known types that may be present in the object graph.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> per serializzare o deserializzare un oggetto del tipo specificato, con una raccolta di tipi noti che possono essere presenti nell'oggetto grafico.</summary>
      <param name="type" vsli:raw="The type of the instances that are serialized or deserialized.">Tipo delle istanze serializzate o deserializzate.</param>
      <param name="knownTypes" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the types that may be present in the object graph.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Type" /> contenente i tipi che possono essere presenti nell'oggetto grafico.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Runtime.Serialization.Json.DataContractJsonSerializerSettings)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; class to serialize or deserialize an object of the specified type and serializer settings.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> per serializzare o deserializzare un oggetto del tipo e delle impostazioni del serializzatore specificati.</summary>
      <param name="type" vsli:raw="The type of the instances that is serialized or deserialized.">Tipo delle istanze serializzato o deserializzato.</param>
      <param name="settings" vsli:raw="The serializer settings for the JSON serializer.">Impostazioni del serializzatore JSON.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; class to serialize or deserialize an object of a specified type using the XML root element specified by a parameter.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> per serializzare o deserializzare un oggetto di un tipo specificato utilizzando l'elemento radice XML specificato da un parametro.</summary>
      <param name="type" vsli:raw="The type of the instances that is serialized or deserialized.">Tipo delle istanze serializzato o deserializzato.</param>
      <param name="rootName" vsli:raw="The name of the XML element that encloses the content to serialize or deserialize.">Nome dell'elemento XML che include il contenuto da serializzare o deserializzare.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; class to serialize or deserialize an object of a specified type using the XML root element specified by a parameter, with a collection of known types that may be present in the object graph.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> per serializzare o deserializzare un oggetto di un tipo specificato utilizzando l'elemento radice XML specificato da un parametro, con una raccolta di tipi noti che possono essere presenti nell'oggetto grafico.</summary>
      <param name="type" vsli:raw="The type of the instances that is serialized or deserialized.">Tipo delle istanze serializzato o deserializzato.</param>
      <param name="rootName" vsli:raw="The name of the XML element that encloses the content to serialize or deserialize. The default is &quot;root&quot;.">Nome dell'elemento XML che include il contenuto da serializzare o deserializzare. Il valore predefinito è "root".</param>
      <param name="knownTypes" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the types that may be present in the object graph.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Type" /> contenente i tipi che possono essere presenti nell'oggetto grafico.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString)">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; class to serialize or deserialize an object of a specified type using the XML root element specified by a parameter of type &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> per serializzare o deserializzare un oggetto di un tipo specificato utilizzando l'elemento radice XML specificato da un parametro di tipo <see cref="T:System.Xml.XmlDictionaryString" />.</summary>
      <param name="type" vsli:raw="The type of the instances that is serialized or deserialized.">Tipo delle istanze serializzato o deserializzato.</param>
      <param name="rootName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that contains the root element name of the content.">Classe <see cref="T:System.Xml.XmlDictionaryString" /> contenente il nome dell'elemento radice del contenuto.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; class to serialize or deserialize an object of a specified type using the XML root element specified by a parameter of type &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt;, with a collection of known types that may be present in the object graph.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> per serializzare o deserializzare un oggetto di un tipo specificato utilizzando l'elemento radice XML specificato da un parametro di tipo <see cref="T:System.Xml.XmlDictionaryString" />, con una raccolta di tipi noti che possono essere presenti nell'oggetto grafico.</summary>
      <param name="type" vsli:raw="The type of the instances that is serialized or deserialized.">Tipo delle istanze serializzato o deserializzato.</param>
      <param name="rootName" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryString&quot; /&gt; that contains the root element name of the content.">Classe <see cref="T:System.Xml.XmlDictionaryString" /> contenente il nome dell'elemento radice del contenuto.</param>
      <param name="knownTypes" vsli:raw="An &lt;see cref=&quot;T:System.Collections.Generic.IEnumerable`1&quot; /&gt; of &lt;see cref=&quot;T:System.Type&quot; /&gt; that contains the types that may be present in the object graph.">
        <see cref="T:System.Collections.Generic.IEnumerable`1" /> di <see cref="T:System.Type" /> contenente i tipi che possono essere presenti nell'oggetto grafico.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
      <summary vsli:raw="Gets a value that specifies whether the &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; is positioned over an XML element that represents an object the serializer can deserialize from.">Ottiene un valore che specifica se la classe <see cref="T:System.Xml.XmlDictionaryReader" /> è posizionata su un elemento XML che rappresenta un oggetto da cui il serializzatore può eseguire la deserializzazione.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML stream mapped from JSON.">Classe <see cref="T:System.Xml.XmlDictionaryReader" /> utilizzata per leggere il flusso XML mappato da JSON.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is positioned correctly; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il lettore è posizionato correttamente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlReader)">
      <summary vsli:raw="Determines whether the &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; is positioned on an object that can be deserialized.">Determina se la classe <see cref="T:System.Xml.XmlReader" /> è posizionata su un oggetto che può essere deserializzato.</summary>
      <param name="reader" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML stream.">Classe <see cref="T:System.Xml.XmlReader" /> utilizzata per leggere il flusso XML.</param>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; if the reader is positioned correctly; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> se il lettore è posizionato correttamente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.IO.Stream)">
      <summary vsli:raw="Reads a document stream in the JSON (JavaScript Object Notation) format and returns the deserialized object.">Legge un flusso di documenti in formato JSON (JavaScript Object Notation) e restituisce l'oggetto deserializzato.</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; to be read.">Classe <see cref="T:System.IO.Stream" /> da leggere.</param>
      <returns vsli:raw="The deserialized object.">Oggetto deserializzato.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlDictionaryReader)">
      <summary vsli:raw="Reads the XML document mapped from JSON (JavaScript Object Notation) with an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; and returns the deserialized object.">Legge il documento XML mappato da JSON (JavaScript Object Notation) con una classe <see cref="T:System.Xml.XmlDictionaryReader" /> e restituisce l'oggetto deserializzato.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML document mapped from JSON.">Oggetto <see cref="T:System.Xml.XmlDictionaryReader" /> utilizzato per leggere il documento XML mappato da JSON.</param>
      <returns vsli:raw="The deserialized object.">Oggetto deserializzato.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary vsli:raw="Reads the XML document mapped from JSON with an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; and returns the deserialized object; it also enables you to specify whether the serializer should verify that it is positioned on an appropriate element before attempting to deserialize.">Legge il documento XML mappato da JSON con una classe <see cref="T:System.Xml.XmlDictionaryReader" /> e restituisce l'oggetto deserializzato. Consente inoltre di specificare se il serializzatore deve verificare il corretto posizionamento su un elemento appropriato prima di eseguire il tentativo di serializzazione.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; used to read the XML document mapped from JSON.">Oggetto <see cref="T:System.Xml.XmlDictionaryReader" /> utilizzato per leggere il documento XML mappato da JSON.</param>
      <param name="verifyObjectName" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to check whether the enclosing XML element name and namespace correspond to the expected name and namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt; to skip the verification. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> per verificare se il nome e lo spazio dei nomi dell'elemento XML di inclusione corrispondono al nome e allo spazio dei nomi previsti; in caso contrario, <see langword="false" /> per ignorare la verifica. Il valore predefinito è <see langword="true" />.</param>
      <returns vsli:raw="The deserialized object.">Oggetto deserializzato.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlReader)">
      <summary vsli:raw="Reads the XML document mapped from JSON (JavaScript Object Notation) with an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and returns the deserialized object.">Legge il documento XML mappato da JSON (JavaScript Object Notation) con una classe <see cref="T:System.Xml.XmlReader" /> e restituisce l'oggetto deserializzato.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML document mapped from JSON.">Oggetto <see cref="T:System.Xml.XmlReader" /> utilizzato per leggere il documento XML mappato da JSON.</param>
      <returns vsli:raw="The deserialized object.">Oggetto deserializzato.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
      <summary vsli:raw="Reads an XML document mapped from JSON with an &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; and returns the deserialized object; it also enables you to specify whether the serializer should verify that it is positioned on an appropriate element before attempting to deserialize.">Legge un documento XML mappato da JSON con una classe <see cref="T:System.Xml.XmlReader" /> e restituisce l'oggetto deserializzato. Consente inoltre di specificare se il serializzatore deve verificare il corretto posizionamento su un elemento appropriato prima di eseguire il tentativo di serializzazione.</summary>
      <param name="reader" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlReader&quot; /&gt; used to read the XML document mapped from JSON.">Oggetto <see cref="T:System.Xml.XmlReader" /> utilizzato per leggere il documento XML mappato da JSON.</param>
      <param name="verifyObjectName" vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to check whether the enclosing XML element name and namespace correspond to the expected name and namespace; otherwise, &lt;see langword=&quot;false&quot; /&gt;, which skips the verification. The default is &lt;see langword=&quot;true&quot; /&gt;.">
        <see langword="true" /> per verificare se il nome e lo spazio dei nomi dell'elemento XML di inclusione corrispondono al nome e allo spazio dei nomi previsto; in caso contrario, <see langword="false" /> per ignorare la verifica. Il valore predefinito è <see langword="true" />.</param>
      <returns vsli:raw="The deserialized object.">Oggetto deserializzato.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
      <summary vsli:raw="Writes the closing XML element to an XML document, using an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;, which can be mapped to JavaScript Object Notation (JSON).">Scrive l'elemento XML di chiusura in un documento XML, utilizzando una classe <see cref="T:System.Xml.XmlDictionaryWriter" />, che può essere mappato a JSON (JavaScript Object Notation).</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the XML document to map to JSON.">Classe <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizzata per scrivere il documento XML da mappare a JSON.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteEndObject(System.Xml.XmlWriter)">
      <summary vsli:raw="Writes the closing XML element to an XML document, using an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;, which can be mapped to JavaScript Object Notation (JSON).">Scrive l'elemento XML di chiusura in un documento XML, utilizzando una classe <see cref="T:System.Xml.XmlWriter" />, che può essere mappato a JSON (JavaScript Object Notation).</summary>
      <param name="writer" vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document mapped to JSON.">Classe <see cref="T:System.Xml.XmlWriter" /> utilizzata per scrivere il documento XML mappato a JSON.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.IO.Stream,System.Object)">
      <summary vsli:raw="Serializes a specified object to JavaScript Object Notation (JSON) data and writes the resulting JSON to a stream.">Serializza un oggetto specificato in dati JSON (JavaScript Object Notation) e scrive il risultato JSON in un flusso.</summary>
      <param name="stream" vsli:raw="The &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; that is written to.">Classe <see cref="T:System.IO.Stream" /> in cui viene eseguita la scrittura.</param>
      <param name="graph" vsli:raw="The object that contains the data to write to the stream.">Oggetto che contiene i dati da scrivere nel flusso.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">Il tipo serializzato non è conforme alle regole del contratto dati. Ad esempio, l'attributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> non è stato applicato al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">Si è verificato un problema durante la scrittura dell'istanza.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="The maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">È stato superato il numero massimo di oggetti da serializzare. Verificare la proprietà <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Serializes an object to XML that may be mapped to JavaScript Object Notation (JSON). Writes all the object data, including the starting XML element, content, and closing element, with an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Serializza un oggetto in XML che può essere mappato a JSON (JavaScript Object Notation). Scrive tutti i dati dell'oggetto, inclusi l'elemento XML di apertura, il contenuto e l'elemento di chiusura, con una classe <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the XML document or stream to map to JSON.">Classe <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizzata per scrivere il documento o il flusso XML da mappare a JSON.</param>
      <param name="graph" vsli:raw="The object that contains the data to write.">Oggetto che contiene il dati da scrivere.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">Il tipo serializzato non è conforme alle regole del contratto dati. Ad esempio, l'attributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> non è stato applicato al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">Si è verificato un problema durante la scrittura dell'istanza.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="The maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">È stato superato il numero massimo di oggetti da serializzare. Verificare la proprietà <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Serializes an object to XML that may be mapped to JavaScript Object Notation (JSON). Writes all the object data, including the starting XML element, content, and closing element, with an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Serializza un oggetto in XML che può essere mappato a JSON (JavaScript Object Notation). Scrive tutti i dati dell'oggetto, inclusi l'elemento XML di apertura, il contenuto e l'elemento di chiusura, con una classe <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML document to map to JSON.">Classe <see cref="T:System.Xml.XmlWriter" /> utilizzata per scrivere il documento XML da mappare a JSON.</param>
      <param name="graph" vsli:raw="The object that contains the data to write.">Oggetto che contiene il dati da scrivere.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">Il tipo serializzato non è conforme alle regole del contratto dati. Ad esempio, l'attributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> non è stato applicato al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">Si è verificato un problema durante la scrittura dell'istanza.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="The maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">È stato superato il numero massimo di oggetti da serializzare. Verificare la proprietà <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Writes the XML content that can be mapped to JavaScript Object Notation (JSON) using an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Scrive il contenuto XML che può essere mappato a JSON (JavaScript Object Notation) utilizzando la classe <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; to write to.">
        <see cref="T:System.Xml.XmlDictionaryWriter" /> in cui scrivere.</param>
      <param name="graph" vsli:raw="The object to write.">Oggetto da scrivere.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">Il tipo serializzato non è conforme alle regole del contratto dati. Ad esempio, l'attributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> non è stato applicato al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">Si è verificato un problema durante la scrittura dell'istanza.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="The maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">È stato superato il numero massimo di oggetti da serializzare. Verificare la proprietà <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes the XML content that can be mapped to JavaScript Object Notation (JSON) using an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Scrive il contenuto XML che può essere mappato a JSON (JavaScript Object Notation) utilizzando la classe <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write to.">Classe <see cref="T:System.Xml.XmlWriter" /> utilizzata per la scrittura.</param>
      <param name="graph" vsli:raw="The object to write.">Oggetto da scrivere.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException" vsli:raw="The type being serialized does not conform to data contract rules. For example, the &lt;see cref=&quot;T:System.Runtime.Serialization.DataContractAttribute&quot; /&gt; attribute has not been applied to the type.">Il tipo serializzato non è conforme alle regole del contratto dati. Ad esempio, l'attributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> non è stato applicato al tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException" vsli:raw="There is a problem with the instance being written.">Si è verificato un problema durante la scrittura dell'istanza.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException" vsli:raw="The maximum number of objects to serialize has been exceeded. Check the &lt;see cref=&quot;P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph&quot; /&gt; property.">È stato superato il numero massimo di oggetti da serializzare. Verificare la proprietà <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary vsli:raw="Writes the opening XML element for serializing an object to XML that can be mapped to JavaScript Object Notation (JSON) using an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt;.">Scrive l'elemento XML di apertura per la serializzazione di un oggetto in XML che può essere mappato a JSON (JavaScript Object Notation) utilizzando una classe <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; used to write the XML start element.">Classe <see cref="T:System.Xml.XmlDictionaryWriter" /> utilizzata per scrivere l'elemento XML di apertura.</param>
      <param name="graph" vsli:raw="The object to write.">Oggetto da scrivere.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
      <summary vsli:raw="Writes the opening XML element for serializing an object to XML that can be mapped to JavaScript Object Notation (JSON) using an &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt;.">Scrive l'elemento XML di apertura per la serializzazione di un oggetto in XML che può essere mappato a JSON (JavaScript Object Notation) utilizzando una classe <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlWriter&quot; /&gt; used to write the XML start element.">Classe <see cref="T:System.Xml.XmlWriter" /> utilizzata per scrivere l'elemento XML di apertura.</param>
      <param name="graph" vsli:raw="The object to write.">Oggetto da scrivere.</param>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.DateTimeFormat">
      <summary vsli:raw="Gets the format of the date and time type items in object graph.">Ottiene il formato degli elementi di tipo data e ora in un oggetto grafico.</summary>
      <returns vsli:raw="The format of the date and time type items in object graph.">Il formato degli elementi di tipo data e ora in un oggetto grafico.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.EmitTypeInformation">
      <summary vsli:raw="Gets or sets the data contract JSON serializer settings to emit type information.">Ottiene o imposta le impostazioni del serializzatore JSON del contratto dati per generare informazioni sul tipo.</summary>
      <returns vsli:raw="The data contract JSON serializer settings to emit type information.">Le impostazioni del serializzatore del contratto dati JSON per generare informazioni sul tipo.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.IgnoreExtensionDataObject">
      <summary vsli:raw="Gets a value that specifies whether unknown data is ignored on deserialization and whether the &lt;see cref=&quot;T:System.Runtime.Serialization.IExtensibleDataObject&quot; /&gt; interface is ignored on serialization.">Ottiene un valore che specifica se i dati sconosciuti vengono ignorati durante la deserializzazione e se l'interfaccia <see cref="T:System.Runtime.Serialization.IExtensibleDataObject" /> viene ignorata durante la serializzazione.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to ignore unknown data and &lt;see cref=&quot;T:System.Runtime.Serialization.IExtensibleDataObject&quot; /&gt;; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per ignorare i dati sconosciuti e l'interfaccia <see cref="T:System.Runtime.Serialization.IExtensibleDataObject" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.KnownTypes">
      <summary vsli:raw="Gets a collection of types that may be present in the object graph serialized using this instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt;.">Ottiene una raccolta di tipi che possono essere presenti nell'oggetto grafico serializzato utilizzando l'istanza di <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" />.</summary>
      <returns vsli:raw="A &lt;see cref=&quot;T:System.Collections.ObjectModel.ReadOnlyCollection`1&quot; /&gt; that contains the expected types passed in as known types to the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; constructor.">Classe <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> contenente tipi previsti passati come tipi conosciuti al costruttore <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.MaxItemsInObjectGraph">
      <summary vsli:raw="Gets the maximum number of items in an object graph that the serializer serializes or deserializes in one read or write call.">Ottiene il numero massimo di elementi in un oggetto grafico che il serializzatore serializza o deserializza in una chiamata di lettura o scrittura.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException" vsli:raw="The number of items exceeds the maximum value.">Il numero di elementi supera il valore massimo.</exception>
      <returns vsli:raw="The maximum number of items to serialize or deserialize.">Numero massimo di elementi da serializzare o deserializzare.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.SerializeReadOnlyTypes">
      <summary vsli:raw="Gets or sets a value that specifies whether to serialize read only types.">Ottiene o imposta un valore che specifica se serializzare i tipi di sola lettura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize read only types; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per serializzare i tipi di sola lettura; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.UseSimpleDictionaryFormat">
      <summary vsli:raw="Gets a value that specifies whether to use a simple dictionary format.">Ottiene un valore che specifica se usare un formato di dizionario semplice.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use a simple dictionary format; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per utilizzare un formato di dizionario semplice; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings">
      <summary vsli:raw="Specifies &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializer&quot; /&gt; settings.">Specifica le impostazioni per <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.#ctor">
      <summary vsli:raw="Initializes a new instance of the &lt;see cref=&quot;T:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings&quot; /&gt; class.">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings" />.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.DateTimeFormat">
      <summary vsli:raw="Gets or sets a DateTimeFormat that defines the culturally appropriate format of displaying dates and times.">Ottiene o imposta DateTimeFormat che definisce il formato culturalmente appropriato per la visualizzazione della data e dell'ora.</summary>
      <returns vsli:raw="The DateTimeFormat that defines the culturally appropriate format of displaying dates and times.">Valore DateTimeFormat che definisce il formato culturalmente appropriato per la visualizzazione della data e dell'ora.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.EmitTypeInformation">
      <summary vsli:raw="Gets or sets the data contract JSON serializer settings to emit type information.">Ottiene o imposta le impostazioni del serializzatore JSON del contratto dati per generare informazioni sul tipo.</summary>
      <returns vsli:raw="The data contract JSON serializer settings to emit type information.">Le impostazioni del serializzatore del contratto dati JSON per generare informazioni sul tipo.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.IgnoreExtensionDataObject">
      <summary vsli:raw="Gets or sets a value that specifies whether to ignore data supplied by an extension of the class when the class is being serialized or deserialized.">Ottiene o imposta un valore che specifica se ignorare i dati forniti da un'estensione della classe, durante la serializzazione o la deserializzazione della classe stessa.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to ignore data supplied by an extension of the class when the class is being serialized or deserialized; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per ignorare i dati forniti da un'estensione della classe, durante la serializzazione o la deserializzazione della classe stessa. in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.KnownTypes">
      <summary vsli:raw="Gets or sets a collection of types that may be present in the object graph serialized using this instance the DataContractJsonSerializerSettings.">Ottiene o imposta una raccolta di tipi che possono essere presenti nel grafico di oggetti serializzato utilizzando l'istanza di DataContractJsonSerializerSettings.</summary>
      <returns vsli:raw="A collection of types that may be present in the object graph serialized using this instance the DataContractJsonSerializerSettings.">Raccolta dei tipi che possono essere presenti nel grafico di oggetti serializzato utilizzando l'istanza di DataContractJsonSerializerSettings.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.MaxItemsInObjectGraph">
      <summary vsli:raw="Gets or sets the maximum number of items in an object graph to serialize or deserialize.">Ottiene o imposta il numero massimo di elementi nell'oggetto grafico da serializzare o deserializzare.</summary>
      <returns vsli:raw="The maximum number of items in an object graph to serialize or deserialize.">Numero massimo di elementi di un oggetto grafico da serializzare o deserializzare.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.RootName">
      <summary vsli:raw="Gets or sets the root name of the selected object.">Ottiene o imposta il nome radice dell'oggetto selezionato.</summary>
      <returns vsli:raw="The root name of the selected object.">Nome radice dell'oggetto selezionato.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.SerializeReadOnlyTypes">
      <summary vsli:raw="Gets or sets a value that specifies whether to serialize read only types.">Ottiene o imposta un valore che specifica se serializzare i tipi di sola lettura.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to serialize read only types; otherwise &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per serializzare i tipi di sola lettura; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.UseSimpleDictionaryFormat">
      <summary vsli:raw="Gets or sets a value that specifies whether to use a simple dictionary format.">Ottiene o imposta un valore che specifica se utilizzare un formato di dizionario semplice.</summary>
      <returns vsli:raw="&lt;see langword=&quot;true&quot; /&gt; to use a simple dictionary format; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">
        <see langword="true" /> per utilizzare un formato di dizionario semplice; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer">
      <summary vsli:raw="Specifies the interface for initializing a JavaScript Object Notation (JSON) reader when reusing them to read from a particular stream or buffer.">Specifica l'interfaccia per l'inizializzazione di un lettore JSON (JavaScript Object Notation) quando si riutilizzano oggetti per la lettura da un flusso o da un buffer specificato.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Reinitializes a JavaScript Object Notation (JSON) enabled reader to a specified buffer that contains JSON-encoded data.">Reinizializza un lettore abilitato JSON (JavaScript Object Notation) per un buffer specificato contenente dati con codifica JSON.</summary>
      <param name="buffer" vsli:raw="The input &lt;see cref=&quot;T:System.Byte&quot; /&gt; buffer array from which to read.">Matrice del buffer <see cref="T:System.Byte" /> di input da cui eseguire la lettura.</param>
      <param name="offset" vsli:raw="The starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">Posizione iniziale dalla quale leggere nel <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="The number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Numero di byte che possono essere letti dal <paramref name="buffer" />.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; used by the reader.">Classe <see cref="T:System.Text.Encoding" /> utilizzata dal lettore.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> da applicare.</param>
      <param name="onClose" vsli:raw="The &lt;see cref=&quot;T:System.Xml.OnXmlDictionaryReaderClose&quot; /&gt; delegate to call when the reader is closed.">Delegato <see cref="T:System.Xml.OnXmlDictionaryReaderClose" />da chiamare quando il lettore viene chiuso.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Reinitializes a JavaScript Object Notation (JSON) enabled reader to a specified stream that contains JSON-encoded data.">Reinizializza un lettore abilitato JSON (JavaScript Object Notation) per un flusso specificato contenente dati con codifica JSON.</summary>
      <param name="stream" vsli:raw="The input &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; from which to read.">Classe <see cref="T:System.IO.Stream" /> di input da cui eseguire la lettura.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; used by the reader.">Classe <see cref="T:System.Text.Encoding" /> utilizzata dal lettore.</param>
      <param name="quotas" vsli:raw="&lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; to apply.">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> da applicare.</param>
      <param name="onClose" vsli:raw="Delegate to call when the reader is closed.">Delegato da chiamare quando il reader viene chiuso.</param>
    </member>
    <member name="T:System.Runtime.Serialization.Json.IXmlJsonWriterInitializer">
      <summary vsli:raw="Specifies the interface for initializing a JavaScript Object Notation (JSON) writer when reusing them to write to a particular output stream.">Specifica l'interfaccia per l'inizializzazione di un writer JSON (JavaScript Object Notation) quando si riutilizzano oggetti per la scrittura in un flusso di output specificato.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.IXmlJsonWriterInitializer.SetOutput(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary vsli:raw="Initializes (or reinitializes) a JavaScript Object Notation (JSON) writer to a specified output stream with specified character encoding.">Inizializza (o reinizializza) un writer JSON (JavaScript Object Notation) per un flusso di output specificato con la codifica dei caratteri specificata.</summary>
      <param name="stream" vsli:raw="The output &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; to which the writer writes.">Oggetto <see cref="T:System.IO.Stream" /> di output in cui il writer esegue la scrittura.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; that specifies the character encoding of the output stream.">Oggetto <see cref="T:System.Text.Encoding" /> che specifica la codifica dei caratteri del flusso di output.</param>
      <param name="ownsStream" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the output stream is closed by the writer when done; otherwise &lt;see langword=&quot;false&quot; /&gt;.">Se <see langword="true" />, al termine il flusso di output viene chiuso dal writer. In caso contrario, <see langword="false" />.</param>
    </member>
    <member name="T:System.Runtime.Serialization.Json.JsonReaderWriterFactory">
      <summary vsli:raw="Produces instances of &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read data encoded with JavaScript Object Notation (JSON) from a stream or buffer and map it to an XML Infoset and instances of &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that can map an XML Infoset to JSON and write JSON-encoded data to a stream.">Produce istanze di <see cref="T:System.Xml.XmlDictionaryReader" /> in grado di leggere dati codificati con JSON (JavaScript Object Notation) da un flusso o da un buffer e mapparli a un InfoSet XML, nonché istanze di <see cref="T:System.Xml.XmlDictionaryWriter" /> in grado di mappare un InfoSet XML a JSON e scrivere dati con codifica JSON in un flusso.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can map buffers encoded with JavaScript Object Notation (JSON), with a specified size and offset and character encoding, to an XML Infoset.">Crea una classe <see cref="T:System.Xml.XmlDictionaryReader" /> in grado di mappare buffer codificati con JSON (JavaScript Object Notation) e con dimensioni, offset e codifica dei caratteri specificati a un InfoSet XML.</summary>
      <param name="buffer" vsli:raw="The input &lt;see cref=&quot;T:System.Byte&quot; /&gt; buffer array from which to read.">Matrice del buffer <see cref="T:System.Byte" /> di input da cui eseguire la lettura.</param>
      <param name="offset" vsli:raw="Starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">Posizione iniziale dalla quale leggere nel <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="Number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Numero di byte che possono essere letti dal <paramref name="buffer" />.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; that specifies the character encoding used by the reader. If &lt;see langword=&quot;null&quot; /&gt; is specified as the value, the reader attempts to auto-detect the encoding.">Classe <see cref="T:System.Text.Encoding" /> che specifica la codifica dei caratteri utilizzata dal lettore. Se come valore è specificato <see langword="null" />, il lettore tenta di rilevare automaticamente la codifica.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; used to prevent Denial of Service attacks when reading untrusted data.">Classe <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> utilizzata per impedire attacchi di tipo Denial of Service durante la lettura di dati non attendibili.</param>
      <param name="onClose" vsli:raw="The &lt;see cref=&quot;T:System.Xml.OnXmlDictionaryReaderClose&quot; /&gt; delegate to call when the reader is closed. The default value is &lt;see langword=&quot;null&quot; /&gt;.">Delegato <see cref="T:System.Xml.OnXmlDictionaryReaderClose" />da chiamare quando il lettore viene chiuso. Il valore predefinito è <see langword="null" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read JavaScript Object Notation (JSON).">Classe <see cref="T:System.Xml.XmlDictionaryReader" /> in grado di leggere dati JSON (JavaScript Object Notation).</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can map buffers encoded with JavaScript Object Notation (JSON), of a specified size and offset, to an XML Infoset.">Crea una classe <see cref="T:System.Xml.XmlDictionaryReader" /> in grado di mappare buffer codificati con JSON (JavaScript Object Notation) e con dimensioni e offset specificati a un InfoSet XML.</summary>
      <param name="buffer" vsli:raw="The input &lt;see cref=&quot;T:System.Byte&quot; /&gt; buffer array from which to read.">Matrice del buffer <see cref="T:System.Byte" /> di input da cui eseguire la lettura.</param>
      <param name="offset" vsli:raw="Starting position from which to read in &lt;paramref name=&quot;buffer&quot; /&gt;.">Posizione iniziale dalla quale leggere nel <paramref name="buffer" />.</param>
      <param name="count" vsli:raw="Number of bytes that can be read from &lt;paramref name=&quot;buffer&quot; /&gt;.">Numero di byte che possono essere letti dal <paramref name="buffer" />.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; used to prevent Denial of Service attacks when reading untrusted data.">Classe <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> utilizzata per impedire attacchi di tipo Denial of Service durante la lettura di dati non attendibili.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read JavaScript Object Notation (JSON).">Classe <see cref="T:System.Xml.XmlDictionaryReader" /> in grado di leggere dati JSON (JavaScript Object Notation).</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can map buffers encoded with JavaScript Object Notation (JSON) to an XML Infoset.">Crea una classe <see cref="T:System.Xml.XmlDictionaryReader" /> in grado di mappare buffer codificati con JSON (JavaScript Object Notation) a un InfoSet XML.</summary>
      <param name="buffer" vsli:raw="The input &lt;see cref=&quot;T:System.Byte&quot; /&gt; buffer array from which to read.">Matrice del buffer <see cref="T:System.Byte" /> di input da cui eseguire la lettura.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; used to prevent Denial of Service attacks when reading untrusted data.">Classe <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> utilizzata per impedire attacchi di tipo Denial of Service durante la lettura di dati non attendibili.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can process JavaScript Object Notation (JSON) data.">Classe <see cref="T:System.Xml.XmlDictionaryReader" /> in grado di elaborare dati JSON (JavaScript Object Notation).</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can map streams encoded with JavaScript Object Notation (JSON), of a specified size and offset, to an XML Infoset.">Crea una classe <see cref="T:System.Xml.XmlDictionaryReader" /> in grado di mappare flussi codificati con JSON (JavaScript Object Notation) e con dimensioni e offset specificati a un InfoSet XML.</summary>
      <param name="stream" vsli:raw="The input &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; from which to read.">Classe <see cref="T:System.IO.Stream" /> di input da cui eseguire la lettura.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; that specifies the character encoding used by the reader. If &lt;see langword=&quot;null&quot; /&gt; is specified as the value, the reader attempts to auto-detect the encoding.">Classe <see cref="T:System.Text.Encoding" /> che specifica la codifica dei caratteri utilizzata dal lettore. Se come valore è specificato <see langword="null" />, il lettore tenta di rilevare automaticamente la codifica.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; used to prevent Denial of Service attacks when reading untrusted data.">Classe <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> utilizzata per impedire attacchi di tipo Denial of Service durante la lettura di dati non attendibili.</param>
      <param name="onClose" vsli:raw="The &lt;see cref=&quot;T:System.Xml.OnXmlDictionaryReaderClose&quot; /&gt; delegate to call when the reader is closed.">Delegato <see cref="T:System.Xml.OnXmlDictionaryReaderClose" />da chiamare quando il lettore viene chiuso.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read JavaScript Object Notation (JSON).">Classe <see cref="T:System.Xml.XmlDictionaryReader" /> in grado di leggere dati JSON (JavaScript Object Notation).</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can map streams encoded with JavaScript Object Notation (JSON) to an XML Infoset.">Crea una classe <see cref="T:System.Xml.XmlDictionaryReader" /> in grado di mappare flussi codificati con JSON (JavaScript Object Notation) a un InfoSet XML.</summary>
      <param name="stream" vsli:raw="The input &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; from which to read.">Classe <see cref="T:System.IO.Stream" /> di input da cui eseguire la lettura.</param>
      <param name="quotas" vsli:raw="The &lt;see cref=&quot;T:System.Xml.XmlDictionaryReaderQuotas&quot; /&gt; used to prevent Denial of Service attacks when reading untrusted data.">Classe <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> utilizzata per impedire attacchi di tipo Denial of Service durante la lettura di dati non attendibili.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryReader&quot; /&gt; that can read JavaScript Object Notation (JSON).">Classe <see cref="T:System.Xml.XmlDictionaryReader" /> in grado di leggere dati JSON (JavaScript Object Notation).</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to a stream.">Crea un oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> che scrive dati codificati con JSON in un flusso.</summary>
      <param name="stream" vsli:raw="The output &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; for the JSON writer.">Classe <see cref="T:System.IO.Stream" /> di output per il writer JSON.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to the stream based on an XML Infoset.">Oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> che scrive dati codificati con JSON nel flusso in base a un InfoSet XML.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to a stream with a specified character encoding.">Crea un oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> che scrive dati codificati con JSON in un flusso con una codifica dei caratteri specificata.</summary>
      <param name="stream" vsli:raw="The output &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; for the JSON writer.">Classe <see cref="T:System.IO.Stream" /> di output per il writer JSON.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; that specifies the character encoding used by the writer. The default encoding is UTF-8.">Classe <see cref="T:System.Text.Encoding" /> che specifica la codifica dei caratteri utilizzata dal writer. La codifica predefinita è UTF-8.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to the stream based on an XML Infoset.">Oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> che scrive dati codificati con JSON nel flusso in base a un InfoSet XML.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to a stream with a specified character encoding.">Crea un oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> che scrive dati codificati con JSON in un flusso con una codifica dei caratteri specificata.</summary>
      <param name="stream" vsli:raw="The output &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; for the JSON writer.">Classe <see cref="T:System.IO.Stream" /> di output per il writer JSON.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; that specifies the character encoding used by the writer. The default encoding is UTF-8.">Classe <see cref="T:System.Text.Encoding" /> che specifica la codifica dei caratteri utilizzata dal writer. La codifica predefinita è UTF-8.</param>
      <param name="ownsStream" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the output stream is closed by the writer when done; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">Se <see langword="true" />, al termine il flusso di output viene chiuso dal writer. In caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to the stream based on an XML Infoset.">Oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> che scrive dati codificati con JSON nel flusso in base a un InfoSet XML.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to a stream with a specified character.">Crea un oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> che scrive dati codificati con JSON in un flusso con un carattere specificato.</summary>
      <param name="stream" vsli:raw="The output &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; for the JSON writer.">Classe <see cref="T:System.IO.Stream" /> di output per il writer JSON.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; that specifies the character encoding used by the writer. The default encoding is UTF-8.">Classe <see cref="T:System.Text.Encoding" /> che specifica la codifica dei caratteri utilizzata dal writer. La codifica predefinita è UTF-8.</param>
      <param name="ownsStream" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the output stream is closed by the writer when done; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">Se <see langword="true" />, al termine il flusso di output viene chiuso dal writer. In caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</param>
      <param name="indent" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the output uses multiline format, indenting each level properly; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Se <see langword="true" />, nell'output viene utilizzato il formato multiriga, impostando un adeguato rientro per ogni livello; in caso contrario, <see langword="false" />.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to the stream based on an XML Infoset.">Oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> che scrive dati codificati con JSON nel flusso in base a un InfoSet XML.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean,System.String)">
      <summary vsli:raw="Creates an &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to a stream with a specified character.">Crea un oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> che scrive dati codificati con JSON in un flusso con un carattere specificato.</summary>
      <param name="stream" vsli:raw="The output &lt;see cref=&quot;T:System.IO.Stream&quot; /&gt; for the JSON writer.">Classe <see cref="T:System.IO.Stream" /> di output per il writer JSON.</param>
      <param name="encoding" vsli:raw="The &lt;see cref=&quot;T:System.Text.Encoding&quot; /&gt; that specifies the character encoding used by the writer. The default encoding is UTF-8.">Classe <see cref="T:System.Text.Encoding" /> che specifica la codifica dei caratteri utilizzata dal writer. La codifica predefinita è UTF-8.</param>
      <param name="ownsStream" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the output stream is closed by the writer when done; otherwise &lt;see langword=&quot;false&quot; /&gt;. The default value is &lt;see langword=&quot;true&quot; /&gt;.">Se <see langword="true" />, al termine il flusso di output viene chiuso dal writer. In caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</param>
      <param name="indent" vsli:raw="If &lt;see langword=&quot;true&quot; /&gt;, the output uses multiline format, indenting each level properly; otherwise, &lt;see langword=&quot;false&quot; /&gt;.">Se <see langword="true" />, nell'output viene utilizzato il formato multiriga, impostando un adeguato rientro per ogni livello; in caso contrario, <see langword="false" />.</param>
      <param name="indentChars" vsli:raw="The string used to indent each level.">Stringa utilizzata per impostare un rientro per ogni livello.</param>
      <returns vsli:raw="An &lt;see cref=&quot;T:System.Xml.XmlDictionaryWriter&quot; /&gt; that writes data encoded with JSON to the stream based on an XML Infoset.">Oggetto <see cref="T:System.Xml.XmlDictionaryWriter" /> che scrive dati codificati con JSON nel flusso in base a un InfoSet XML.</returns>
    </member>
  </members>
</doc>